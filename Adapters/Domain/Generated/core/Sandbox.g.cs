// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class Sandbox : Allors.ObjectBase 
	{
		public static readonly SandboxMeta Meta = SandboxMeta.Instance;

		public Sandbox(Allors.IStrategy allors) : base(allors) {}

		public static Sandbox Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Sandbox) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public global::Allors.Extent<Sandbox> InvisibleManies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.InvisibleMany);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.InvisibleMany, value);
			}
		}

		virtual public void AddInvisibleMany (Sandbox value)
		{
			Strategy.AddCompositeRole(Meta.InvisibleMany, value);
		}

		virtual public void RemoveInvisibleMany (Sandbox value)
		{
			Strategy.RemoveCompositeRole(Meta.InvisibleMany,value);
		}

		virtual public bool ExistInvisibleManies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.InvisibleMany);
			}
		}

		virtual public void RemoveInvisibleManies()
		{
			Strategy.RemoveCompositeRoles(Meta.InvisibleMany);
		}


		virtual public Sandbox InvisibleOne
		{ 
			get
			{
				return (Sandbox) Strategy.GetCompositeRole(Meta.InvisibleOne);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.InvisibleOne ,value);
			}
		}

		virtual public bool ExistInvisibleOne
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.InvisibleOne);
			}
		}

		virtual public void RemoveInvisibleOne()
		{
			Strategy.RemoveCompositeRole(Meta.InvisibleOne);
		}



		virtual public global::System.String InvisibleValue 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.InvisibleValue);
			}
			set
			{
				Strategy.SetUnitRole(Meta.InvisibleValue, value);
			}
		}

		virtual public bool ExistInvisibleValue{
			get
			{
				return Strategy.ExistUnitRole(Meta.InvisibleValue);
			}
		}

		virtual public void RemoveInvisibleValue()
		{
			Strategy.RemoveUnitRole(Meta.InvisibleValue);
		}



		virtual public global::System.String Test 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Test);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Test, value);
			}
		}

		virtual public bool ExistTest{
			get
			{
				return Strategy.ExistUnitRole(Meta.Test);
			}
		}

		virtual public void RemoveTest()
		{
			Strategy.RemoveUnitRole(Meta.Test);
		}



		virtual public global::System.String AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.AllorsString, value);
			}
		}

		virtual public bool ExistAllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.AllorsString);
			}
		}

		virtual public void RemoveAllorsString()
		{
			Strategy.RemoveUnitRole(Meta.AllorsString);
		}



		virtual public global::Allors.Extent<Sandbox> SandboxesWhereInvisibleMany
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SandboxesWhereInvisibleMany);
			}
		}

		virtual public bool ExistSandboxesWhereInvisibleMany
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SandboxesWhereInvisibleMany);
			}
		}


		virtual public Sandbox SandboxWhereInvisibleOne
		{ 
			get
			{
				return (Sandbox) Strategy.GetCompositeAssociation(Meta.SandboxWhereInvisibleOne);
			}
		} 

		virtual public bool ExistSandboxWhereInvisibleOne
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.SandboxWhereInvisibleOne);
			}
		}

	}

	public class SandboxMeta
	{
		public static readonly SandboxMeta Instance = new SandboxMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.Sandbox;

		public global::Allors.Meta.RoleType InvisibleMany 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SandboxInvisibleMany;
			}
		} 
		public global::Allors.Meta.RoleType InvisibleOne 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SandboxInvisibleOne;
			}
		} 
		public global::Allors.Meta.RoleType InvisibleValue 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SandboxInvisibleValue;
			}
		} 
		public global::Allors.Meta.RoleType Test 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SandboxTest;
			}
		} 
		public global::Allors.Meta.RoleType AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SandboxAllorsString;
			}
		} 

		public global::Allors.Meta.AssociationType SandboxesWhereInvisibleMany 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SandboxInvisibleMany;
			}
		} 
		public global::Allors.Meta.AssociationType SandboxWhereInvisibleOne 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SandboxInvisibleOne;
			}
		} 

	}
}
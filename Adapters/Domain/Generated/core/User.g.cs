// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class User : Allors.ObjectBase 
	{
		public static readonly UserMeta Meta = UserMeta.Instance;

		public User(Allors.IStrategy allors) : base(allors) {}

		public static User Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (User) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public global::Allors.Extent<User> Selects
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Select);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Select, value);
			}
		}

		virtual public void AddSelect (User value)
		{
			Strategy.AddCompositeRole(Meta.Select, value);
		}

		virtual public void RemoveSelect (User value)
		{
			Strategy.RemoveCompositeRole(Meta.Select,value);
		}

		virtual public bool ExistSelects
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Select);
			}
		}

		virtual public void RemoveSelects()
		{
			Strategy.RemoveCompositeRoles(Meta.Select);
		}



		virtual public global::System.String From 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.From);
			}
			set
			{
				Strategy.SetUnitRole(Meta.From, value);
			}
		}

		virtual public bool ExistFrom{
			get
			{
				return Strategy.ExistUnitRole(Meta.From);
			}
		}

		virtual public void RemoveFrom()
		{
			Strategy.RemoveUnitRole(Meta.From);
		}



		virtual public global::Allors.Extent<User> UsersWhereSelect
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.UsersWhereSelect);
			}
		}

		virtual public bool ExistUsersWhereSelect
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.UsersWhereSelect);
			}
		}

	}

	public class UserMeta
	{
		public static readonly UserMeta Instance = new UserMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.User;

		public global::Allors.Meta.RoleType Select 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserSelect;
			}
		} 
		public global::Allors.Meta.RoleType From 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserFrom;
			}
		} 

		public global::Allors.Meta.AssociationType UsersWhereSelect 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.UserSelect;
			}
		} 

	}
}
// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class C1 : Allors.ObjectBase , I1, I12
	{
		public static readonly C1Meta Meta = C1Meta.Instance;

		public C1(Allors.IStrategy allors) : base(allors) {}

		public static C1 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C1) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.Decimal C1DecimalBetweenA 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.C1DecimalBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DecimalBetweenA, value);
			}
		}

		virtual public bool ExistC1DecimalBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DecimalBetweenA);
			}
		}

		virtual public void RemoveC1DecimalBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.C1DecimalBetweenA);
		}


		virtual public I2 C1I2one2one
		{ 
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.C1I2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I2one2one ,value);
			}
		}

		virtual public bool ExistC1I2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I2one2one);
			}
		}

		virtual public void RemoveC1I2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I2one2one);
		}



		virtual public global::System.Decimal C1DecimalBetweenB 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.C1DecimalBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DecimalBetweenB, value);
			}
		}

		virtual public bool ExistC1DecimalBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DecimalBetweenB);
			}
		}

		virtual public void RemoveC1DecimalBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.C1DecimalBetweenB);
		}



		virtual public global::System.String Argument 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Argument);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Argument, value);
			}
		}

		virtual public bool ExistArgument{
			get
			{
				return Strategy.ExistUnitRole(Meta.Argument);
			}
		}

		virtual public void RemoveArgument()
		{
			Strategy.RemoveUnitRole(Meta.Argument);
		}


		virtual public global::Allors.Extent<S1> C1S1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1S1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1S1one2many, value);
			}
		}

		virtual public void AddC1S1one2many (S1 value)
		{
			Strategy.AddCompositeRole(Meta.C1S1one2many, value);
		}

		virtual public void RemoveC1S1one2many (S1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1S1one2many,value);
		}

		virtual public bool ExistC1S1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1S1one2many);
			}
		}

		virtual public void RemoveC1S1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1S1one2many);
		}


		virtual public I12 C1I12one2one
		{ 
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.C1I12one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I12one2one ,value);
			}
		}

		virtual public bool ExistC1I12one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I12one2one);
			}
		}

		virtual public void RemoveC1I12one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I12one2one);
		}



		virtual public global::System.String C1AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C1AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsString, value);
			}
		}

		virtual public bool ExistC1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsString);
			}
		}

		virtual public void RemoveC1AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsString);
		}


		virtual public C1 C1C1many2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C1C1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1C1many2one ,value);
			}
		}

		virtual public bool ExistC1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1C1many2one);
			}
		}

		virtual public void RemoveC1C1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1C1many2one);
		}


		virtual public S2 C1S2many2one
		{ 
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.C1S2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1S2many2one ,value);
			}
		}

		virtual public bool ExistC1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1S2many2one);
			}
		}

		virtual public void RemoveC1S2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1S2many2one);
		}



		virtual public global::System.Double C1FloatBetweenA 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.C1FloatBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1FloatBetweenA, value);
			}
		}

		virtual public bool ExistC1FloatBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1FloatBetweenA);
			}
		}

		virtual public void RemoveC1FloatBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.C1FloatBetweenA);
		}


		virtual public C1 Many2One
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Many2One ,value);
			}
		}

		virtual public bool ExistMany2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Many2One);
			}
		}

		virtual public void RemoveMany2One()
		{
			Strategy.RemoveCompositeRole(Meta.Many2One);
		}


		virtual public global::Allors.Extent<C1> C1C1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C1many2many, value);
			}
		}

		virtual public void AddC1C1many2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.C1C1many2many, value);
		}

		virtual public void RemoveC1C1many2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C1many2many,value);
		}

		virtual public bool ExistC1C1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C1many2many);
			}
		}

		virtual public void RemoveC1C1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C1many2many);
		}


		virtual public global::Allors.Extent<S1> C1S1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1S1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1S1many2many, value);
			}
		}

		virtual public void AddC1S1many2many (S1 value)
		{
			Strategy.AddCompositeRole(Meta.C1S1many2many, value);
		}

		virtual public void RemoveC1S1many2many (S1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1S1many2many,value);
		}

		virtual public bool ExistC1S1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1S1many2many);
			}
		}

		virtual public void RemoveC1S1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1S1many2many);
		}



		virtual public global::System.Double C1FloatBetweenB 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.C1FloatBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1FloatBetweenB, value);
			}
		}

		virtual public bool ExistC1FloatBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1FloatBetweenB);
			}
		}

		virtual public void RemoveC1FloatBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.C1FloatBetweenB);
		}


		virtual public I1 C1I1one2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.C1I1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I1one2one ,value);
			}
		}

		virtual public bool ExistC1I1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I1one2one);
			}
		}

		virtual public void RemoveC1I1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I1one2one);
		}



		virtual public global::System.Int32 C1IntegerLessThan 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.C1IntegerLessThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1IntegerLessThan, value);
			}
		}

		virtual public bool ExistC1IntegerLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1IntegerLessThan);
			}
		}

		virtual public void RemoveC1IntegerLessThan()
		{
			Strategy.RemoveUnitRole(Meta.C1IntegerLessThan);
		}



		virtual public global::System.String C1StringLarge 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C1StringLarge);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1StringLarge, value);
			}
		}

		virtual public bool ExistC1StringLarge{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1StringLarge);
			}
		}

		virtual public void RemoveC1StringLarge()
		{
			Strategy.RemoveUnitRole(Meta.C1StringLarge);
		}


		virtual public global::Allors.Extent<I2> C1I2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I2one2many, value);
			}
		}

		virtual public void AddC1I2one2many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.C1I2one2many, value);
		}

		virtual public void RemoveC1I2one2many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I2one2many,value);
		}

		virtual public bool ExistC1I2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I2one2many);
			}
		}

		virtual public void RemoveC1I2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I2one2many);
		}


		virtual public C1 C1C1one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C1C1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1C1one2one ,value);
			}
		}

		virtual public bool ExistC1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1C1one2one);
			}
		}

		virtual public void RemoveC1C1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1C1one2one);
		}



		virtual public global::System.Double C1FloatGreaterThan 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.C1FloatGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1FloatGreaterThan, value);
			}
		}

		virtual public bool ExistC1FloatGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1FloatGreaterThan);
			}
		}

		virtual public void RemoveC1FloatGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.C1FloatGreaterThan);
		}


		virtual public I2 C1I2many2one
		{ 
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.C1I2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I2many2one ,value);
			}
		}

		virtual public bool ExistC1I2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I2many2one);
			}
		}

		virtual public void RemoveC1I2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I2many2one);
		}


		virtual public I12 C1I12many2one
		{ 
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.C1I12many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I12many2one ,value);
			}
		}

		virtual public bool ExistC1I12many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I12many2one);
			}
		}

		virtual public void RemoveC1I12many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I12many2one);
		}



		virtual public global::System.DateTime C1DateLessThan 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.C1DateLessThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DateLessThan, value);
			}
		}

		virtual public bool ExistC1DateLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DateLessThan);
			}
		}

		virtual public void RemoveC1DateLessThan()
		{
			Strategy.RemoveUnitRole(Meta.C1DateLessThan);
		}



		virtual public global::System.DateTime C1DateBetweenA 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.C1DateBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DateBetweenA, value);
			}
		}

		virtual public bool ExistC1DateBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DateBetweenA);
			}
		}

		virtual public void RemoveC1DateBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.C1DateBetweenA);
		}


		virtual public global::Allors.Extent<C2> C1C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C2many2many, value);
			}
		}

		virtual public void AddC1C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C1C2many2many, value);
		}

		virtual public void RemoveC1C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C2many2many,value);
		}

		virtual public bool ExistC1C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C2many2many);
			}
		}

		virtual public void RemoveC1C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C2many2many);
		}


		virtual public S1 C1S1many2one
		{ 
			get
			{
				return (S1) Strategy.GetCompositeRole(Meta.C1S1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1S1many2one ,value);
			}
		}

		virtual public bool ExistC1S1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1S1many2one);
			}
		}

		virtual public void RemoveC1S1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1S1many2one);
		}


		virtual public global::Allors.Extent<I1> C1I1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I1many2many, value);
			}
		}

		virtual public void AddC1I1many2many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.C1I1many2many, value);
		}

		virtual public void RemoveC1I1many2many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I1many2many,value);
		}

		virtual public bool ExistC1I1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I1many2many);
			}
		}

		virtual public void RemoveC1I1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I1many2many);
		}



		virtual public global::System.Double C1FloatLessThan 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.C1FloatLessThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1FloatLessThan, value);
			}
		}

		virtual public bool ExistC1FloatLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1FloatLessThan);
			}
		}

		virtual public void RemoveC1FloatLessThan()
		{
			Strategy.RemoveUnitRole(Meta.C1FloatLessThan);
		}


		virtual public I1 C1I1many2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.C1I1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I1many2one ,value);
			}
		}

		virtual public bool ExistC1I1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I1many2one);
			}
		}

		virtual public void RemoveC1I1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I1many2one);
		}



		virtual public global::System.Decimal C1DecimalGreaterThan 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.C1DecimalGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DecimalGreaterThan, value);
			}
		}

		virtual public bool ExistC1DecimalGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DecimalGreaterThan);
			}
		}

		virtual public void RemoveC1DecimalGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.C1DecimalGreaterThan);
		}



		virtual public global::System.Decimal C1AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.C1AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsDecimal, value);
			}
		}

		virtual public bool ExistC1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsDecimal);
			}
		}

		virtual public void RemoveC1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsDecimal);
		}


		virtual public S2 C1S2one2one
		{ 
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.C1S2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1S2one2one ,value);
			}
		}

		virtual public bool ExistC1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1S2one2one);
			}
		}

		virtual public void RemoveC1S2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1S2one2one);
		}



		virtual public global::System.DateTime C1DateBetweenB 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.C1DateBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DateBetweenB, value);
			}
		}

		virtual public bool ExistC1DateBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DateBetweenB);
			}
		}

		virtual public void RemoveC1DateBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.C1DateBetweenB);
		}



		virtual public global::System.Byte[] C1AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(Meta.C1AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsBinary, value);
			}
		}

		virtual public bool ExistC1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsBinary);
			}
		}

		virtual public void RemoveC1AllorsBinary()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsBinary);
		}



		virtual public global::System.DateTime C1DateGreaterThan 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.C1DateGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DateGreaterThan, value);
			}
		}

		virtual public bool ExistC1DateGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DateGreaterThan);
			}
		}

		virtual public void RemoveC1DateGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.C1DateGreaterThan);
		}


		virtual public S1 C1S1one2one
		{ 
			get
			{
				return (S1) Strategy.GetCompositeRole(Meta.C1S1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1S1one2one ,value);
			}
		}

		virtual public bool ExistC1S1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1S1one2one);
			}
		}

		virtual public void RemoveC1S1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1S1one2one);
		}


		virtual public global::Allors.Extent<C1> C1C1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C1one2many, value);
			}
		}

		virtual public void AddC1C1one2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.C1C1one2many, value);
		}

		virtual public void RemoveC1C1one2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C1one2many,value);
		}

		virtual public bool ExistC1C1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C1one2many);
			}
		}

		virtual public void RemoveC1C1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C1one2many);
		}


		virtual public global::Allors.Extent<I1> C1I1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I1one2many, value);
			}
		}

		virtual public void AddC1I1one2many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.C1I1one2many, value);
		}

		virtual public void RemoveC1I1one2many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I1one2many,value);
		}

		virtual public bool ExistC1I1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I1one2many);
			}
		}

		virtual public void RemoveC1I1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I1one2many);
		}


		virtual public C2 C1C2many2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C1C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1C2many2one ,value);
			}
		}

		virtual public bool ExistC1C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1C2many2one);
			}
		}

		virtual public void RemoveC1C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1C2many2one);
		}


		virtual public global::Allors.Extent<I12> C1I12one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I12one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I12one2many, value);
			}
		}

		virtual public void AddC1I12one2many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.C1I12one2many, value);
		}

		virtual public void RemoveC1I12one2many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I12one2many,value);
		}

		virtual public bool ExistC1I12one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I12one2many);
			}
		}

		virtual public void RemoveC1I12one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I12one2many);
		}


		virtual public S2 C1S2many2many
		{ 
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.C1S2many2many);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1S2many2many ,value);
			}
		}

		virtual public bool ExistC1S2many2many
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1S2many2many);
			}
		}

		virtual public void RemoveC1S2many2many()
		{
			Strategy.RemoveCompositeRole(Meta.C1S2many2many);
		}


		virtual public C2 C1C2one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C1C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1C2one2one ,value);
			}
		}

		virtual public bool ExistC1C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1C2one2one);
			}
		}

		virtual public void RemoveC1C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1C2one2one);
		}



		virtual public global::System.Boolean C1AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.C1AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsBoolean, value);
			}
		}

		virtual public bool ExistC1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsBoolean);
			}
		}

		virtual public void RemoveC1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsBoolean);
		}


		virtual public global::Allors.Extent<I12> C1I12many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I12many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I12many2many, value);
			}
		}

		virtual public void AddC1I12many2many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.C1I12many2many, value);
		}

		virtual public void RemoveC1I12many2many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I12many2many,value);
		}

		virtual public bool ExistC1I12many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I12many2many);
			}
		}

		virtual public void RemoveC1I12many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I12many2many);
		}


		virtual public global::Allors.Extent<I2> C1I2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I2many2many, value);
			}
		}

		virtual public void AddC1I2many2many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.C1I2many2many, value);
		}

		virtual public void RemoveC1I2many2many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I2many2many,value);
		}

		virtual public bool ExistC1I2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I2many2many);
			}
		}

		virtual public void RemoveC1I2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I2many2many);
		}



		virtual public global::System.Guid C1AllorsUnique 
		{
			get
			{
				return (global::System.Guid) Strategy.GetUnitRole(Meta.C1AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsUnique, value);
			}
		}

		virtual public bool ExistC1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsUnique);
			}
		}

		virtual public void RemoveC1AllorsUnique()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsUnique);
		}


		virtual public C3 C1C3one2one
		{ 
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.C1C3one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1C3one2one ,value);
			}
		}

		virtual public bool ExistC1C3one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1C3one2one);
			}
		}

		virtual public void RemoveC1C3one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1C3one2one);
		}


		virtual public global::Allors.Extent<C3> C1C3many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C3many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C3many2many, value);
			}
		}

		virtual public void AddC1C3many2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.C1C3many2many, value);
		}

		virtual public void RemoveC1C3many2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C3many2many,value);
		}

		virtual public bool ExistC1C3many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C3many2many);
			}
		}

		virtual public void RemoveC1C3many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C3many2many);
		}



		virtual public global::System.String C1StringEquals 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C1StringEquals);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1StringEquals, value);
			}
		}

		virtual public bool ExistC1StringEquals{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1StringEquals);
			}
		}

		virtual public void RemoveC1StringEquals()
		{
			Strategy.RemoveUnitRole(Meta.C1StringEquals);
		}



		virtual public global::System.Int32 C1IntegerGreaterThan 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.C1IntegerGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1IntegerGreaterThan, value);
			}
		}

		virtual public bool ExistC1IntegerGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1IntegerGreaterThan);
			}
		}

		virtual public void RemoveC1IntegerGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.C1IntegerGreaterThan);
		}


		virtual public C3 C3may2one
		{ 
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.C3may2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3may2one ,value);
			}
		}

		virtual public bool ExistC3may2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3may2one);
			}
		}

		virtual public void RemoveC3may2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3may2one);
		}



		virtual public global::System.Int32 C1IntegerBetweenB 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.C1IntegerBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1IntegerBetweenB, value);
			}
		}

		virtual public bool ExistC1IntegerBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1IntegerBetweenB);
			}
		}

		virtual public void RemoveC1IntegerBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.C1IntegerBetweenB);
		}



		virtual public global::System.DateTime C1AllorsDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.C1AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsDate, value);
			}
		}

		virtual public bool ExistC1AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsDate);
			}
		}

		virtual public void RemoveC1AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsDate);
		}



		virtual public global::System.Int32 C1IntegerBetweenA 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.C1IntegerBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1IntegerBetweenA, value);
			}
		}

		virtual public bool ExistC1IntegerBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1IntegerBetweenA);
			}
		}

		virtual public void RemoveC1IntegerBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.C1IntegerBetweenA);
		}



		virtual public global::System.Double C1AllorsFloat 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.C1AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsFloat, value);
			}
		}

		virtual public bool ExistC1AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsFloat);
			}
		}

		virtual public void RemoveC1AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsFloat);
		}


		virtual public global::Allors.Extent<C2> C1C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C2one2many, value);
			}
		}

		virtual public void AddC1C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C1C2one2many, value);
		}

		virtual public void RemoveC1C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C2one2many,value);
		}

		virtual public bool ExistC1C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C2one2many);
			}
		}

		virtual public void RemoveC1C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C2one2many);
		}


		virtual public global::Allors.Extent<S2> C1S2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1S2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1S2one2many, value);
			}
		}

		virtual public void AddC1S2one2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.C1S2one2many, value);
		}

		virtual public void RemoveC1S2one2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1S2one2many,value);
		}

		virtual public bool ExistC1S2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1S2one2many);
			}
		}

		virtual public void RemoveC1S2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1S2one2many);
		}



		virtual public global::System.Int32 C1AllorsInteger 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.C1AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsInteger, value);
			}
		}

		virtual public bool ExistC1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsInteger);
			}
		}

		virtual public void RemoveC1AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsInteger);
		}



		virtual public global::System.Decimal C1DecimalLessThan 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.C1DecimalLessThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DecimalLessThan, value);
			}
		}

		virtual public bool ExistC1DecimalLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DecimalLessThan);
			}
		}

		virtual public void RemoveC1DecimalLessThan()
		{
			Strategy.RemoveUnitRole(Meta.C1DecimalLessThan);
		}


		virtual public global::Allors.Extent<C3> C1C3one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C3one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C3one2many, value);
			}
		}

		virtual public void AddC1C3one2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.C1C3one2many, value);
		}

		virtual public void RemoveC1C3one2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C3one2many,value);
		}

		virtual public bool ExistC1C3one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C3one2many);
			}
		}

		virtual public void RemoveC1C3one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C3one2many);
		}


		virtual public global::Allors.Extent<I34> I1I34one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I34one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I34one2many, value);
			}
		}

		virtual public void AddI1I34one2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I1I34one2many, value);
		}

		virtual public void RemoveI1I34one2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I34one2many,value);
		}

		virtual public bool ExistI1I34one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I34one2many);
			}
		}

		virtual public void RemoveI1I34one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I34one2many);
		}


		virtual public global::Allors.Extent<I2> I1I2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I2one2many, value);
			}
		}

		virtual public void AddI1I2one2many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.I1I2one2many, value);
		}

		virtual public void RemoveI1I2one2many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I2one2many,value);
		}

		virtual public bool ExistI1I2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I2one2many);
			}
		}

		virtual public void RemoveI1I2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I2one2many);
		}


		virtual public I2 I1I2many2one
		{ 
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.I1I2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I2many2one ,value);
			}
		}

		virtual public bool ExistI1I2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I2many2one);
			}
		}

		virtual public void RemoveI1I2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I2many2one);
		}


		virtual public C2 I1C2many2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I1C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1C2many2one ,value);
			}
		}

		virtual public bool ExistI1C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1C2many2one);
			}
		}

		virtual public void RemoveI1C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1C2many2one);
		}


		virtual public C2 I1C2one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I1C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1C2one2one ,value);
			}
		}

		virtual public bool ExistI1C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1C2one2one);
			}
		}

		virtual public void RemoveI1C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1C2one2one);
		}



		virtual public global::System.Decimal I1DecimalBetweenA 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.I1DecimalBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DecimalBetweenA, value);
			}
		}

		virtual public bool ExistI1DecimalBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DecimalBetweenA);
			}
		}

		virtual public void RemoveI1DecimalBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.I1DecimalBetweenA);
		}


		virtual public S1 I1S1one2one
		{ 
			get
			{
				return (S1) Strategy.GetCompositeRole(Meta.I1S1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1S1one2one ,value);
			}
		}

		virtual public bool ExistI1S1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1S1one2one);
			}
		}

		virtual public void RemoveI1S1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1S1one2one);
		}


		virtual public I12 I1I12many2one
		{ 
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.I1I12many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I12many2one ,value);
			}
		}

		virtual public bool ExistI1I12many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I12many2one);
			}
		}

		virtual public void RemoveI1I12many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I12many2one);
		}



		virtual public global::System.String I1AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I1AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsString, value);
			}
		}

		virtual public bool ExistI1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsString);
			}
		}

		virtual public void RemoveI1AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsString);
		}



		virtual public global::System.DateTime I1DateLessThan 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.I1DateLessThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DateLessThan, value);
			}
		}

		virtual public bool ExistI1DateLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DateLessThan);
			}
		}

		virtual public void RemoveI1DateLessThan()
		{
			Strategy.RemoveUnitRole(Meta.I1DateLessThan);
		}


		virtual public global::Allors.Extent<C2> I1C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1C2one2many, value);
			}
		}

		virtual public void AddI1C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I1C2one2many, value);
		}

		virtual public void RemoveI1C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1C2one2many,value);
		}

		virtual public bool ExistI1C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1C2one2many);
			}
		}

		virtual public void RemoveI1C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1C2one2many);
		}



		virtual public global::System.String I1StringLarge 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I1StringLarge);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1StringLarge, value);
			}
		}

		virtual public bool ExistI1StringLarge{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1StringLarge);
			}
		}

		virtual public void RemoveI1StringLarge()
		{
			Strategy.RemoveUnitRole(Meta.I1StringLarge);
		}



		virtual public global::System.Double I1FloatLessThan 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.I1FloatLessThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1FloatLessThan, value);
			}
		}

		virtual public bool ExistI1FloatLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1FloatLessThan);
			}
		}

		virtual public void RemoveI1FloatLessThan()
		{
			Strategy.RemoveUnitRole(Meta.I1FloatLessThan);
		}



		virtual public global::System.DateTime I1AllorsDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.I1AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsDate, value);
			}
		}

		virtual public bool ExistI1AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsDate);
			}
		}

		virtual public void RemoveI1AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsDate);
		}


		virtual public C1 I1C1many2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.I1C1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1C1many2one ,value);
			}
		}

		virtual public bool ExistI1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1C1many2one);
			}
		}

		virtual public void RemoveI1C1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1C1many2one);
		}


		virtual public I12 I1I12one2one
		{ 
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.I1I12one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I12one2one ,value);
			}
		}

		virtual public bool ExistI1I12one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I12one2one);
			}
		}

		virtual public void RemoveI1I12one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I12one2one);
		}



		virtual public global::System.Decimal I1DecimalGreaterThan 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.I1DecimalGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DecimalGreaterThan, value);
			}
		}

		virtual public bool ExistI1DecimalGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DecimalGreaterThan);
			}
		}

		virtual public void RemoveI1DecimalGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.I1DecimalGreaterThan);
		}


		virtual public C1 I1C1one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.I1C1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1C1one2one ,value);
			}
		}

		virtual public bool ExistI1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1C1one2one);
			}
		}

		virtual public void RemoveI1C1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1C1one2one);
		}


		virtual public global::Allors.Extent<I2> I1I2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I2many2many, value);
			}
		}

		virtual public void AddI1I2many2many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.I1I2many2many, value);
		}

		virtual public void RemoveI1I2many2many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I2many2many,value);
		}

		virtual public bool ExistI1I2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I2many2many);
			}
		}

		virtual public void RemoveI1I2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I2many2many);
		}



		virtual public global::System.Int32 I1IntegerBetweenA 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.I1IntegerBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1IntegerBetweenA, value);
			}
		}

		virtual public bool ExistI1IntegerBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1IntegerBetweenA);
			}
		}

		virtual public void RemoveI1IntegerBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.I1IntegerBetweenA);
		}


		virtual public I34 I1I34many2one
		{ 
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I1I34many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I34many2one ,value);
			}
		}

		virtual public bool ExistI1I34many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I34many2one);
			}
		}

		virtual public void RemoveI1I34many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I34many2one);
		}



		virtual public global::System.Double I1FloatBetweenA 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.I1FloatBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1FloatBetweenA, value);
			}
		}

		virtual public bool ExistI1FloatBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1FloatBetweenA);
			}
		}

		virtual public void RemoveI1FloatBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.I1FloatBetweenA);
		}



		virtual public global::System.Int32 I1IntegerLessThan 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.I1IntegerLessThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1IntegerLessThan, value);
			}
		}

		virtual public bool ExistI1IntegerLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1IntegerLessThan);
			}
		}

		virtual public void RemoveI1IntegerLessThan()
		{
			Strategy.RemoveUnitRole(Meta.I1IntegerLessThan);
		}



		virtual public global::System.Int32 I1AllorsInteger 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.I1AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsInteger, value);
			}
		}

		virtual public bool ExistI1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsInteger);
			}
		}

		virtual public void RemoveI1AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsInteger);
		}


		virtual public S2 I1S2one2one
		{ 
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.I1S2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1S2one2one ,value);
			}
		}

		virtual public bool ExistI1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1S2one2one);
			}
		}

		virtual public void RemoveI1S2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1S2one2one);
		}



		virtual public global::System.Boolean I1AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.I1AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsBoolean, value);
			}
		}

		virtual public bool ExistI1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsBoolean);
			}
		}

		virtual public void RemoveI1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsBoolean);
		}


		virtual public I1 I1I1many2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.I1I1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I1many2one ,value);
			}
		}

		virtual public bool ExistI1I1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I1many2one);
			}
		}

		virtual public void RemoveI1I1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I1many2one);
		}


		virtual public global::Allors.Extent<C1> I1C1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1C1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1C1many2many, value);
			}
		}

		virtual public void AddI1C1many2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.I1C1many2many, value);
		}

		virtual public void RemoveI1C1many2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1C1many2many,value);
		}

		virtual public bool ExistI1C1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1C1many2many);
			}
		}

		virtual public void RemoveI1C1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1C1many2many);
		}


		virtual public I2 I1I2one2one
		{ 
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.I1I2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I2one2one ,value);
			}
		}

		virtual public bool ExistI1I2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I2one2one);
			}
		}

		virtual public void RemoveI1I2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I2one2one);
		}



		virtual public global::System.Decimal I1AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.I1AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsDecimal, value);
			}
		}

		virtual public bool ExistI1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsDecimal);
			}
		}

		virtual public void RemoveI1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsDecimal);
		}


		virtual public global::Allors.Extent<S1> I1S1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1S1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1S1many2many, value);
			}
		}

		virtual public void AddI1S1many2many (S1 value)
		{
			Strategy.AddCompositeRole(Meta.I1S1many2many, value);
		}

		virtual public void RemoveI1S1many2many (S1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1S1many2many,value);
		}

		virtual public bool ExistI1S1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1S1many2many);
			}
		}

		virtual public void RemoveI1S1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1S1many2many);
		}



		virtual public global::System.DateTime I1DateGreaterThan 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.I1DateGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DateGreaterThan, value);
			}
		}

		virtual public bool ExistI1DateGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DateGreaterThan);
			}
		}

		virtual public void RemoveI1DateGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.I1DateGreaterThan);
		}


		virtual public global::Allors.Extent<I34> I1I34many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I34many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I34many2many, value);
			}
		}

		virtual public void AddI1I34many2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I1I34many2many, value);
		}

		virtual public void RemoveI1I34many2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I34many2many,value);
		}

		virtual public bool ExistI1I34many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I34many2many);
			}
		}

		virtual public void RemoveI1I34many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I34many2many);
		}


		virtual public I34 I1I34one2one
		{ 
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I1I34one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I34one2one ,value);
			}
		}

		virtual public bool ExistI1I34one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I34one2one);
			}
		}

		virtual public void RemoveI1I34one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I34one2one);
		}


		virtual public global::Allors.Extent<I1> I1I1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I1one2many, value);
			}
		}

		virtual public void AddI1I1one2many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.I1I1one2many, value);
		}

		virtual public void RemoveI1I1one2many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I1one2many,value);
		}

		virtual public bool ExistI1I1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I1one2many);
			}
		}

		virtual public void RemoveI1I1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I1one2many);
		}


		virtual public global::Allors.Extent<I1> I1I1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I1many2many, value);
			}
		}

		virtual public void AddI1I1many2many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.I1I1many2many, value);
		}

		virtual public void RemoveI1I1many2many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I1many2many,value);
		}

		virtual public bool ExistI1I1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I1many2many);
			}
		}

		virtual public void RemoveI1I1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I1many2many);
		}


		virtual public global::Allors.Extent<S2> I1S2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1S2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1S2many2many, value);
			}
		}

		virtual public void AddI1S2many2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.I1S2many2many, value);
		}

		virtual public void RemoveI1S2many2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1S2many2many,value);
		}

		virtual public bool ExistI1S2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1S2many2many);
			}
		}

		virtual public void RemoveI1S2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1S2many2many);
		}


		virtual public global::Allors.Extent<I12> I1I12many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I12many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I12many2many, value);
			}
		}

		virtual public void AddI1I12many2many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.I1I12many2many, value);
		}

		virtual public void RemoveI1I12many2many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I12many2many,value);
		}

		virtual public bool ExistI1I12many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I12many2many);
			}
		}

		virtual public void RemoveI1I12many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I12many2many);
		}



		virtual public global::System.String I1StringEquals 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I1StringEquals);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1StringEquals, value);
			}
		}

		virtual public bool ExistI1StringEquals{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1StringEquals);
			}
		}

		virtual public void RemoveI1StringEquals()
		{
			Strategy.RemoveUnitRole(Meta.I1StringEquals);
		}


		virtual public global::Allors.Extent<I12> I1I12one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I12one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I12one2many, value);
			}
		}

		virtual public void AddI1I12one2many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.I1I12one2many, value);
		}

		virtual public void RemoveI1I12one2many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I12one2many,value);
		}

		virtual public bool ExistI1I12one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I12one2many);
			}
		}

		virtual public void RemoveI1I12one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I12one2many);
		}


		virtual public global::Allors.Extent<S2> I1S2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1S2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1S2one2many, value);
			}
		}

		virtual public void AddI1S2one2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.I1S2one2many, value);
		}

		virtual public void RemoveI1S2one2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1S2one2many,value);
		}

		virtual public bool ExistI1S2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1S2one2many);
			}
		}

		virtual public void RemoveI1S2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1S2one2many);
		}


		virtual public global::Allors.Extent<C2> I1C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1C2many2many, value);
			}
		}

		virtual public void AddI1C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I1C2many2many, value);
		}

		virtual public void RemoveI1C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1C2many2many,value);
		}

		virtual public bool ExistI1C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1C2many2many);
			}
		}

		virtual public void RemoveI1C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1C2many2many);
		}



		virtual public global::System.Byte[] I1AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(Meta.I1AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsBinary, value);
			}
		}

		virtual public bool ExistI1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsBinary);
			}
		}

		virtual public void RemoveI1AllorsBinary()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsBinary);
		}



		virtual public global::System.Decimal I1DecimalBetweenB 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.I1DecimalBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DecimalBetweenB, value);
			}
		}

		virtual public bool ExistI1DecimalBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DecimalBetweenB);
			}
		}

		virtual public void RemoveI1DecimalBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.I1DecimalBetweenB);
		}



		virtual public global::System.Double I1FloatGreaterThan 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.I1FloatGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1FloatGreaterThan, value);
			}
		}

		virtual public bool ExistI1FloatGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1FloatGreaterThan);
			}
		}

		virtual public void RemoveI1FloatGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.I1FloatGreaterThan);
		}



		virtual public global::System.Int32 I1IntegerBetweenB 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.I1IntegerBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1IntegerBetweenB, value);
			}
		}

		virtual public bool ExistI1IntegerBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1IntegerBetweenB);
			}
		}

		virtual public void RemoveI1IntegerBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.I1IntegerBetweenB);
		}



		virtual public global::System.DateTime I1DateBetweenA 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.I1DateBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DateBetweenA, value);
			}
		}

		virtual public bool ExistI1DateBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DateBetweenA);
			}
		}

		virtual public void RemoveI1DateBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.I1DateBetweenA);
		}



		virtual public global::System.Double I1AllorsFloat 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.I1AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsFloat, value);
			}
		}

		virtual public bool ExistI1AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsFloat);
			}
		}

		virtual public void RemoveI1AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsFloat);
		}


		virtual public global::Allors.Extent<S1> I1S1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1S1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1S1one2many, value);
			}
		}

		virtual public void AddI1S1one2many (S1 value)
		{
			Strategy.AddCompositeRole(Meta.I1S1one2many, value);
		}

		virtual public void RemoveI1S1one2many (S1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1S1one2many,value);
		}

		virtual public bool ExistI1S1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1S1one2many);
			}
		}

		virtual public void RemoveI1S1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1S1one2many);
		}


		virtual public I1 I1I1one2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.I1I1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I1one2one ,value);
			}
		}

		virtual public bool ExistI1I1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I1one2one);
			}
		}

		virtual public void RemoveI1I1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I1one2one);
		}



		virtual public global::System.Int32 I1IntegerGreaterThan 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.I1IntegerGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1IntegerGreaterThan, value);
			}
		}

		virtual public bool ExistI1IntegerGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1IntegerGreaterThan);
			}
		}

		virtual public void RemoveI1IntegerGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.I1IntegerGreaterThan);
		}


		virtual public S1 I1S1many2one
		{ 
			get
			{
				return (S1) Strategy.GetCompositeRole(Meta.I1S1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1S1many2one ,value);
			}
		}

		virtual public bool ExistI1S1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1S1many2one);
			}
		}

		virtual public void RemoveI1S1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1S1many2one);
		}



		virtual public global::System.Double I1FloatBetweenB 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.I1FloatBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1FloatBetweenB, value);
			}
		}

		virtual public bool ExistI1FloatBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1FloatBetweenB);
			}
		}

		virtual public void RemoveI1FloatBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.I1FloatBetweenB);
		}



		virtual public global::System.Decimal I1DecimalLessThan 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.I1DecimalLessThan);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DecimalLessThan, value);
			}
		}

		virtual public bool ExistI1DecimalLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DecimalLessThan);
			}
		}

		virtual public void RemoveI1DecimalLessThan()
		{
			Strategy.RemoveUnitRole(Meta.I1DecimalLessThan);
		}



		virtual public global::System.DateTime I1DateBetweenB 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.I1DateBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DateBetweenB, value);
			}
		}

		virtual public bool ExistI1DateBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DateBetweenB);
			}
		}

		virtual public void RemoveI1DateBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.I1DateBetweenB);
		}



		virtual public global::System.Guid I1AllorsUnique 
		{
			get
			{
				return (global::System.Guid) Strategy.GetUnitRole(Meta.I1AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsUnique, value);
			}
		}

		virtual public bool ExistI1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsUnique);
			}
		}

		virtual public void RemoveI1AllorsUnique()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsUnique);
		}


		virtual public global::Allors.Extent<C1> I1C1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1C1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1C1one2many, value);
			}
		}

		virtual public void AddI1C1one2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.I1C1one2many, value);
		}

		virtual public void RemoveI1C1one2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1C1one2many,value);
		}

		virtual public bool ExistI1C1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1C1one2many);
			}
		}

		virtual public void RemoveI1C1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1C1one2many);
		}


		virtual public S2 I1S2many2one
		{ 
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.I1S2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1S2many2one ,value);
			}
		}

		virtual public bool ExistI1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1S2many2one);
			}
		}

		virtual public void RemoveI1S2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1S2many2one);
		}



		virtual public global::System.Decimal S1AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.S1AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsDecimal, value);
			}
		}

		virtual public bool ExistS1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsDecimal);
			}
		}

		virtual public void RemoveS1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsDecimal);
		}



		virtual public global::System.Int32 S1AllorsInteger 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.S1AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsInteger, value);
			}
		}

		virtual public bool ExistS1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsInteger);
			}
		}

		virtual public void RemoveS1AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsInteger);
		}



		virtual public global::System.Byte[] S1AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(Meta.S1AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsBinary, value);
			}
		}

		virtual public bool ExistS1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsBinary);
			}
		}

		virtual public void RemoveS1AllorsBinary()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsBinary);
		}



		virtual public global::System.Guid S1AllorsUnique 
		{
			get
			{
				return (global::System.Guid) Strategy.GetUnitRole(Meta.S1AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsUnique, value);
			}
		}

		virtual public bool ExistS1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsUnique);
			}
		}

		virtual public void RemoveS1AllorsUnique()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsUnique);
		}



		virtual public global::System.String S1StringLarge 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S1StringLarge);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1StringLarge, value);
			}
		}

		virtual public bool ExistS1StringLarge{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1StringLarge);
			}
		}

		virtual public void RemoveS1StringLarge()
		{
			Strategy.RemoveUnitRole(Meta.S1StringLarge);
		}


		virtual public S2 S1S2many2one
		{ 
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.S1S2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1S2many2one ,value);
			}
		}

		virtual public bool ExistS1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1S2many2one);
			}
		}

		virtual public void RemoveS1S2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1S2many2one);
		}


		virtual public global::Allors.Extent<S2> S1S2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1S2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1S2one2many, value);
			}
		}

		virtual public void AddS1S2one2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.S1S2one2many, value);
		}

		virtual public void RemoveS1S2one2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1S2one2many,value);
		}

		virtual public bool ExistS1S2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1S2one2many);
			}
		}

		virtual public void RemoveS1S2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1S2one2many);
		}



		virtual public global::System.Double S1AllorsFloat 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.S1AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsFloat, value);
			}
		}

		virtual public bool ExistS1AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsFloat);
			}
		}

		virtual public void RemoveS1AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsFloat);
		}



		virtual public global::System.String S1AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S1AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsString, value);
			}
		}

		virtual public bool ExistS1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsString);
			}
		}

		virtual public void RemoveS1AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsString);
		}


		virtual public C1 S1C1many2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.S1C1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1C1many2one ,value);
			}
		}

		virtual public bool ExistS1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1C1many2one);
			}
		}

		virtual public void RemoveS1C1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1C1many2one);
		}


		virtual public C1 S1C1one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.S1C1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1C1one2one ,value);
			}
		}

		virtual public bool ExistS1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1C1one2one);
			}
		}

		virtual public void RemoveS1C1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1C1one2one);
		}



		virtual public global::System.Boolean S1AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.S1AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsBoolean, value);
			}
		}

		virtual public bool ExistS1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsBoolean);
			}
		}

		virtual public void RemoveS1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsBoolean);
		}


		virtual public global::Allors.Extent<C1> S1C1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1C1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1C1many2many, value);
			}
		}

		virtual public void AddS1C1many2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.S1C1many2many, value);
		}

		virtual public void RemoveS1C1many2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1C1many2many,value);
		}

		virtual public bool ExistS1C1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1C1many2many);
			}
		}

		virtual public void RemoveS1C1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1C1many2many);
		}


		virtual public global::Allors.Extent<S2> S1S2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1S2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1S2many2many, value);
			}
		}

		virtual public void AddS1S2many2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.S1S2many2many, value);
		}

		virtual public void RemoveS1S2many2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1S2many2many,value);
		}

		virtual public bool ExistS1S2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1S2many2many);
			}
		}

		virtual public void RemoveS1S2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1S2many2many);
		}


		virtual public S2 S1S2one2one
		{ 
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.S1S2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1S2one2one ,value);
			}
		}

		virtual public bool ExistS1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1S2one2one);
			}
		}

		virtual public void RemoveS1S2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1S2one2one);
		}



		virtual public global::System.DateTime S1AllorsDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.S1AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsDate, value);
			}
		}

		virtual public bool ExistS1AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsDate);
			}
		}

		virtual public void RemoveS1AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsDate);
		}


		virtual public global::Allors.Extent<C1> S1C1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1C1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1C1one2many, value);
			}
		}

		virtual public void AddS1C1one2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.S1C1one2many, value);
		}

		virtual public void RemoveS1C1one2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1C1one2many,value);
		}

		virtual public bool ExistS1C1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1C1one2many);
			}
		}

		virtual public void RemoveS1C1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1C1one2many);
		}



		virtual public global::System.Double S1234AllorsFloat 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.S1234AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsFloat, value);
			}
		}

		virtual public bool ExistS1234AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsFloat);
			}
		}

		virtual public void RemoveS1234AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsFloat);
		}



		virtual public global::System.Decimal S1234AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.S1234AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDecimal, value);
			}
		}

		virtual public bool ExistS1234AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDecimal);
			}
		}

		virtual public void RemoveS1234AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDecimal);
		}



		virtual public global::System.Int32 S1234AllorsInteger 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.S1234AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsInteger, value);
			}
		}

		virtual public bool ExistS1234AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsInteger);
			}
		}

		virtual public void RemoveS1234AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsInteger);
		}


		virtual public S1234 S1234many2one
		{ 
			get
			{
				return (S1234) Strategy.GetCompositeRole(Meta.S1234many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234many2one ,value);
			}
		}

		virtual public bool ExistS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234many2one);
			}
		}

		virtual public void RemoveS1234many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234many2one);
		}


		virtual public C2 S1234C2one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S1234C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234C2one2one ,value);
			}
		}

		virtual public bool ExistS1234C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234C2one2one);
			}
		}

		virtual public void RemoveS1234C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2one2one);
		}


		virtual public global::Allors.Extent<C2> S1234C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234C2many2many, value);
			}
		}

		virtual public void AddS1234C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S1234C2many2many, value);
		}

		virtual public void RemoveS1234C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2many2many,value);
		}

		virtual public bool ExistS1234C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234C2many2many);
			}
		}

		virtual public void RemoveS1234C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234C2many2many);
		}


		virtual public global::Allors.Extent<S1234> S1234one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234one2many, value);
			}
		}

		virtual public void AddS1234one2many (S1234 value)
		{
			Strategy.AddCompositeRole(Meta.S1234one2many, value);
		}

		virtual public void RemoveS1234one2many (S1234 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234one2many,value);
		}

		virtual public bool ExistS1234one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234one2many);
			}
		}

		virtual public void RemoveS1234one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234one2many);
		}


		virtual public global::Allors.Extent<C2> S1234C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234C2one2many, value);
			}
		}

		virtual public void AddS1234C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S1234C2one2many, value);
		}

		virtual public void RemoveS1234C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2one2many,value);
		}

		virtual public bool ExistS1234C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234C2one2many);
			}
		}

		virtual public void RemoveS1234C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234C2one2many);
		}


		virtual public global::Allors.Extent<S1234> S1234many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234many2many, value);
			}
		}

		virtual public void AddS1234many2many (S1234 value)
		{
			Strategy.AddCompositeRole(Meta.S1234many2many, value);
		}

		virtual public void RemoveS1234many2many (S1234 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234many2many,value);
		}

		virtual public bool ExistS1234many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234many2many);
			}
		}

		virtual public void RemoveS1234many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234many2many);
		}



		virtual public global::System.String ClassName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ClassName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ClassName, value);
			}
		}

		virtual public bool ExistClassName{
			get
			{
				return Strategy.ExistUnitRole(Meta.ClassName);
			}
		}

		virtual public void RemoveClassName()
		{
			Strategy.RemoveUnitRole(Meta.ClassName);
		}



		virtual public global::System.DateTime S1234AllorsDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.S1234AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDate, value);
			}
		}

		virtual public bool ExistS1234AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDate);
			}
		}

		virtual public void RemoveS1234AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDate);
		}


		virtual public S1234 S1234one2one
		{ 
			get
			{
				return (S1234) Strategy.GetCompositeRole(Meta.S1234one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234one2one ,value);
			}
		}

		virtual public bool ExistS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234one2one);
			}
		}

		virtual public void RemoveS1234one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234one2one);
		}


		virtual public C2 S1234C2many2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S1234C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234C2many2one ,value);
			}
		}

		virtual public bool ExistS1234C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234C2many2one);
			}
		}

		virtual public void RemoveS1234C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2many2one);
		}



		virtual public global::System.String S1234AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S1234AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsString, value);
			}
		}

		virtual public bool ExistS1234AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsString);
			}
		}

		virtual public void RemoveS1234AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsString);
		}



		virtual public global::System.Boolean S1234AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.S1234AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsBoolean, value);
			}
		}

		virtual public bool ExistS1234AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsBoolean);
			}
		}

		virtual public void RemoveS1234AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsBoolean);
		}



		virtual public global::System.Boolean I12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.I12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsBoolean, value);
			}
		}

		virtual public bool ExistI12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsBoolean);
			}
		}

		virtual public void RemoveI12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsBoolean);
		}



		virtual public global::System.Int32 I12AllorsInteger 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.I12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsInteger, value);
			}
		}

		virtual public bool ExistI12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsInteger);
			}
		}

		virtual public void RemoveI12AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsInteger);
		}


		virtual public global::Allors.Extent<I34> I12I34one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I34one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I34one2many, value);
			}
		}

		virtual public void AddI12I34one2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I12I34one2many, value);
		}

		virtual public void RemoveI12I34one2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I34one2many,value);
		}

		virtual public bool ExistI12I34one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I34one2many);
			}
		}

		virtual public void RemoveI12I34one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I34one2many);
		}


		virtual public C3 C3many2one
		{ 
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.C3many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3many2one ,value);
			}
		}

		virtual public bool ExistC3many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3many2one);
			}
		}

		virtual public void RemoveC3many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3many2one);
		}


		virtual public C2 I12C2many2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I12C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C2many2one ,value);
			}
		}

		virtual public bool ExistI12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C2many2one);
			}
		}

		virtual public void RemoveI12C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C2many2one);
		}



		virtual public global::System.Double I12AllorsFloat 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.I12AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsFloat, value);
			}
		}

		virtual public bool ExistI12AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsFloat);
			}
		}

		virtual public void RemoveI12AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsFloat);
		}


		virtual public I34 I12I34many2one
		{ 
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I12I34many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I34many2one ,value);
			}
		}

		virtual public bool ExistI12I34many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I34many2one);
			}
		}

		virtual public void RemoveI12I34many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12I34many2one);
		}


		virtual public global::Allors.Extent<I34> I12I34many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I34many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I34many2many, value);
			}
		}

		virtual public void AddI12I34many2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I12I34many2many, value);
		}

		virtual public void RemoveI12I34many2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I34many2many,value);
		}

		virtual public bool ExistI12I34many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I34many2many);
			}
		}

		virtual public void RemoveI12I34many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I34many2many);
		}


		virtual public C3 I12C3one2one
		{ 
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.I12C3one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C3one2one ,value);
			}
		}

		virtual public bool ExistI12C3one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C3one2one);
			}
		}

		virtual public void RemoveI12C3one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C3one2one);
		}


		virtual public global::Allors.Extent<C2> I12C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C2many2many, value);
			}
		}

		virtual public void AddI12C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I12C2many2many, value);
		}

		virtual public void RemoveI12C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C2many2many,value);
		}

		virtual public bool ExistI12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C2many2many);
			}
		}

		virtual public void RemoveI12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C2many2many);
		}



		virtual public global::System.Decimal I12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.I12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDecimal, value);
			}
		}

		virtual public bool ExistI12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDecimal);
			}
		}

		virtual public void RemoveI12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDecimal);
		}


		virtual public C2 I12C2one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I12C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C2one2one ,value);
			}
		}

		virtual public bool ExistI12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C2one2one);
			}
		}

		virtual public void RemoveI12C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C2one2one);
		}


		virtual public global::Allors.Extent<C3> I12C3one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C3one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C3one2many, value);
			}
		}

		virtual public void AddI12C3one2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.I12C3one2many, value);
		}

		virtual public void RemoveI12C3one2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C3one2many,value);
		}

		virtual public bool ExistI12C3one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C3one2many);
			}
		}

		virtual public void RemoveI12C3one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C3one2many);
		}


		virtual public global::Allors.Extent<C3> I12C3many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C3many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C3many2many, value);
			}
		}

		virtual public void AddI12C3many2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.I12C3many2many, value);
		}

		virtual public void RemoveI12C3many2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C3many2many,value);
		}

		virtual public bool ExistI12C3many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C3many2many);
			}
		}

		virtual public void RemoveI12C3many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C3many2many);
		}



		virtual public global::System.String PrefetchTest 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PrefetchTest);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PrefetchTest, value);
			}
		}

		virtual public bool ExistPrefetchTest{
			get
			{
				return Strategy.ExistUnitRole(Meta.PrefetchTest);
			}
		}

		virtual public void RemovePrefetchTest()
		{
			Strategy.RemoveUnitRole(Meta.PrefetchTest);
		}



		virtual public global::System.DateTime I12AllorsDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.I12AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDate, value);
			}
		}

		virtual public bool ExistI12AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDate);
			}
		}

		virtual public void RemoveI12AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDate);
		}



		virtual public global::System.String I12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsString, value);
			}
		}

		virtual public bool ExistI12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsString);
			}
		}

		virtual public void RemoveI12AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsString);
		}


		virtual public I34 I12I34one2one
		{ 
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I12I34one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I34one2one ,value);
			}
		}

		virtual public bool ExistI12I34one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I34one2one);
			}
		}

		virtual public void RemoveI12I34one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12I34one2one);
		}


		virtual public global::Allors.Extent<C2> I12C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C2one2many, value);
			}
		}

		virtual public void AddI12C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I12C2one2many, value);
		}

		virtual public void RemoveI12C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C2one2many,value);
		}

		virtual public bool ExistI12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C2one2many);
			}
		}

		virtual public void RemoveI12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C2one2many);
		}



		virtual public global::System.String S12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsString, value);
			}
		}

		virtual public bool ExistS12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsString);
			}
		}

		virtual public void RemoveS12AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsString);
		}



		virtual public global::System.DateTime S12AllorsDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.S12AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsDate, value);
			}
		}

		virtual public bool ExistS12AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsDate);
			}
		}

		virtual public void RemoveS12AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsDate);
		}


		virtual public global::Allors.Extent<C2> S12C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S12C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S12C2many2many, value);
			}
		}

		virtual public void AddS12C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S12C2many2many, value);
		}

		virtual public void RemoveS12C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S12C2many2many,value);
		}

		virtual public bool ExistS12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S12C2many2many);
			}
		}

		virtual public void RemoveS12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S12C2many2many);
		}


		virtual public C2 S12C2many2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S12C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S12C2many2one ,value);
			}
		}

		virtual public bool ExistS12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S12C2many2one);
			}
		}

		virtual public void RemoveS12C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S12C2many2one);
		}


		virtual public C2 S12C2one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S12C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S12C2one2one ,value);
			}
		}

		virtual public bool ExistS12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S12C2one2one);
			}
		}

		virtual public void RemoveS12C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S12C2one2one);
		}


		virtual public global::Allors.Extent<C2> S12C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S12C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S12C2one2many, value);
			}
		}

		virtual public void AddS12C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S12C2one2many, value);
		}

		virtual public void RemoveS12C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S12C2one2many,value);
		}

		virtual public bool ExistS12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S12C2one2many);
			}
		}

		virtual public void RemoveS12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S12C2one2many);
		}



		virtual public global::System.Boolean S12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.S12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsBoolean, value);
			}
		}

		virtual public bool ExistS12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsBoolean);
			}
		}

		virtual public void RemoveS12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsBoolean);
		}



		virtual public global::System.Double S12AllorsFloat 
		{
			get
			{
				return (global::System.Double) Strategy.GetUnitRole(Meta.S12AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsFloat, value);
			}
		}

		virtual public bool ExistS12AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsFloat);
			}
		}

		virtual public void RemoveS12AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsFloat);
		}



		virtual public global::System.Int32 S12AllorsInteger 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.S12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsInteger, value);
			}
		}

		virtual public bool ExistS12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsInteger);
			}
		}

		virtual public void RemoveS12AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsInteger);
		}



		virtual public global::System.Decimal S12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.S12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsDecimal, value);
			}
		}

		virtual public bool ExistS12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsDecimal);
			}
		}

		virtual public void RemoveS12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsDecimal);
		}



		virtual public global::Allors.Extent<S1> S1sWhereC1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1sWhereC1many2one);
			}
		}

		virtual public bool ExistS1sWhereC1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1sWhereC1many2one);
			}
		}


		virtual public S1 S1WhereC1one2one
		{ 
			get
			{
				return (S1) Strategy.GetCompositeAssociation(Meta.S1WhereC1one2one);
			}
		} 

		virtual public bool ExistS1WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1WhereC1one2one);
			}
		}


		virtual public global::Allors.Extent<S1> S1sWhereC1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1sWhereC1many2many);
			}
		}

		virtual public bool ExistS1sWhereC1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1sWhereC1many2many);
			}
		}


		virtual public S1 S1WhereC1one2many
		{ 
			get
			{
				return (S1) Strategy.GetCompositeAssociation(Meta.S1WhereC1one2many);
			}
		} 

		virtual public bool ExistS1WhereC1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1WhereC1one2many);
			}
		}


		virtual public I3 I3WhereC1one2one
		{ 
			get
			{
				return (I3) Strategy.GetCompositeAssociation(Meta.I3WhereC1one2one);
			}
		} 

		virtual public bool ExistI3WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I3WhereC1one2one);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1many2one);
			}
		}

		virtual public bool ExistC1sWhereC1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1many2one);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereMany2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereMany2One);
			}
		}

		virtual public bool ExistC1sWhereMany2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereMany2One);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1many2many);
			}
		}

		virtual public bool ExistC1sWhereC1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1many2many);
			}
		}


		virtual public C1 C1WhereC1one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1one2one);
			}
		} 

		virtual public bool ExistC1WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1one2one);
			}
		}


		virtual public C1 C1WhereC1one2many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1one2many);
			}
		} 

		virtual public bool ExistC1WhereC1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1one2many);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC1many2many);
			}
		}

		virtual public bool ExistC2sWhereC1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC1many2many);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC1many2one);
			}
		}

		virtual public bool ExistC2sWhereC1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC1many2one);
			}
		}


		virtual public C2 C2WhereC1one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereC1one2one);
			}
		} 

		virtual public bool ExistC2WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereC1one2one);
			}
		}


		virtual public C2 C2WhereC1one2many
		{ 
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereC1one2many);
			}
		} 

		virtual public bool ExistC2WhereC1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereC1one2many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereC1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereC1many2one);
			}
		}

		virtual public bool ExistI1sWhereC1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereC1many2one);
			}
		}


		virtual public I1 I1WhereC1one2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereC1one2one);
			}
		} 

		virtual public bool ExistI1WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereC1one2one);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereC1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereC1many2many);
			}
		}

		virtual public bool ExistI1sWhereC1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereC1many2many);
			}
		}


		virtual public I1 I1WhereC1one2many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereC1one2many);
			}
		} 

		virtual public bool ExistI1WhereC1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereC1one2many);
			}
		}


		virtual public C1 C1WhereI1one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI1one2one);
			}
		} 

		virtual public bool ExistC1WhereI1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI1one2one);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI1many2many);
			}
		}

		virtual public bool ExistC1sWhereI1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI1many2many);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI1many2one);
			}
		}

		virtual public bool ExistC1sWhereI1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI1many2one);
			}
		}


		virtual public C1 C1WhereI1one2many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI1one2many);
			}
		} 

		virtual public bool ExistC1WhereI1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI1one2many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1many2one);
			}
		}

		virtual public bool ExistI1sWhereI1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1many2one);
			}
		}


		virtual public I1 I1WhereI1one2many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1one2many);
			}
		} 

		virtual public bool ExistI1WhereI1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1one2many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1many2many);
			}
		}

		virtual public bool ExistI1sWhereI1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1many2many);
			}
		}


		virtual public I1 I1WhereI1one2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1one2one);
			}
		} 

		virtual public bool ExistI1WhereI1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1one2one);
			}
		}


		virtual public C1 C1WhereS1one2many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereS1one2many);
			}
		} 

		virtual public bool ExistC1WhereS1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereS1one2many);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereS1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereS1many2many);
			}
		}

		virtual public bool ExistC1sWhereS1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereS1many2many);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereS1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereS1many2one);
			}
		}

		virtual public bool ExistC1sWhereS1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereS1many2one);
			}
		}


		virtual public C1 C1WhereS1one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereS1one2one);
			}
		} 

		virtual public bool ExistC1WhereS1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereS1one2one);
			}
		}


		virtual public I1 I1WhereS1one2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereS1one2one);
			}
		} 

		virtual public bool ExistI1WhereS1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereS1one2one);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereS1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereS1many2many);
			}
		}

		virtual public bool ExistI1sWhereS1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereS1many2many);
			}
		}


		virtual public I1 I1WhereS1one2many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereS1one2many);
			}
		} 

		virtual public bool ExistI1WhereS1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereS1one2many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereS1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereS1many2one);
			}
		}

		virtual public bool ExistI1sWhereS1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereS1many2one);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234many2one);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234many2one);
			}
		}


		virtual public S1234 S1234WhereS1234one2many
		{ 
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234one2many);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234one2many);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234many2many);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234many2many);
			}
		}


		virtual public S1234 S1234WhereS1234one2one
		{ 
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234one2one);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234one2one);
			}
		}


		virtual public C1 C1WhereI12one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI12one2one);
			}
		} 

		virtual public bool ExistC1WhereI12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI12one2one);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI12many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI12many2one);
			}
		}

		virtual public bool ExistC1sWhereI12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI12many2one);
			}
		}


		virtual public C1 C1WhereI12one2many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI12one2many);
			}
		} 

		virtual public bool ExistC1WhereI12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI12one2many);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI12many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI12many2many);
			}
		}

		virtual public bool ExistC1sWhereI12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI12many2many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI12many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI12many2one);
			}
		}

		virtual public bool ExistI1sWhereI12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI12many2one);
			}
		}


		virtual public I1 I1WhereI12one2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI12one2one);
			}
		} 

		virtual public bool ExistI1WhereI12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI12one2one);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI12many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI12many2many);
			}
		}

		virtual public bool ExistI1sWhereI12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI12many2many);
			}
		}


		virtual public I1 I1WhereI12one2many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI12one2many);
			}
		} 

		virtual public bool ExistI1WhereI12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI12one2many);
			}
		}

	}

	public class C1Meta
	{
		public static readonly C1Meta Instance = new C1Meta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.C1;

		public global::Allors.Meta.RoleType C1DecimalBetweenA 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1DecimalBetweenA;
			}
		} 
		public global::Allors.Meta.RoleType C1I2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I2one2one;
			}
		} 
		public global::Allors.Meta.RoleType C1DecimalBetweenB 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1DecimalBetweenB;
			}
		} 
		public global::Allors.Meta.RoleType Argument 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1Argument;
			}
		} 
		public global::Allors.Meta.RoleType C1S1one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1S1one2many;
			}
		} 
		public global::Allors.Meta.RoleType C1I12one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I12one2one;
			}
		} 
		public global::Allors.Meta.RoleType C1AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType C1C1many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C1many2one;
			}
		} 
		public global::Allors.Meta.RoleType C1S2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1S2many2one;
			}
		} 
		public global::Allors.Meta.RoleType C1FloatBetweenA 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1FloatBetweenA;
			}
		} 
		public global::Allors.Meta.RoleType Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1Many2One;
			}
		} 
		public global::Allors.Meta.RoleType C1C1many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C1many2many;
			}
		} 
		public global::Allors.Meta.RoleType C1S1many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1S1many2many;
			}
		} 
		public global::Allors.Meta.RoleType C1FloatBetweenB 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1FloatBetweenB;
			}
		} 
		public global::Allors.Meta.RoleType C1I1one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I1one2one;
			}
		} 
		public global::Allors.Meta.RoleType C1IntegerLessThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1IntegerLessThan;
			}
		} 
		public global::Allors.Meta.RoleType C1StringLarge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1StringLarge;
			}
		} 
		public global::Allors.Meta.RoleType C1I2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I2one2many;
			}
		} 
		public global::Allors.Meta.RoleType C1C1one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C1one2one;
			}
		} 
		public global::Allors.Meta.RoleType C1FloatGreaterThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1FloatGreaterThan;
			}
		} 
		public global::Allors.Meta.RoleType C1I2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I2many2one;
			}
		} 
		public global::Allors.Meta.RoleType C1I12many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I12many2one;
			}
		} 
		public global::Allors.Meta.RoleType C1DateLessThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1DateLessThan;
			}
		} 
		public global::Allors.Meta.RoleType C1DateBetweenA 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1DateBetweenA;
			}
		} 
		public global::Allors.Meta.RoleType C1C2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C2many2many;
			}
		} 
		public global::Allors.Meta.RoleType C1S1many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1S1many2one;
			}
		} 
		public global::Allors.Meta.RoleType C1I1many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I1many2many;
			}
		} 
		public global::Allors.Meta.RoleType C1FloatLessThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1FloatLessThan;
			}
		} 
		public global::Allors.Meta.RoleType C1I1many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I1many2one;
			}
		} 
		public global::Allors.Meta.RoleType C1DecimalGreaterThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1DecimalGreaterThan;
			}
		} 
		public global::Allors.Meta.RoleType C1AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType C1S2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1S2one2one;
			}
		} 
		public global::Allors.Meta.RoleType C1DateBetweenB 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1DateBetweenB;
			}
		} 
		public global::Allors.Meta.RoleType C1AllorsBinary 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1AllorsBinary;
			}
		} 
		public global::Allors.Meta.RoleType C1DateGreaterThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1DateGreaterThan;
			}
		} 
		public global::Allors.Meta.RoleType C1S1one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1S1one2one;
			}
		} 
		public global::Allors.Meta.RoleType C1C1one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C1one2many;
			}
		} 
		public global::Allors.Meta.RoleType C1I1one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I1one2many;
			}
		} 
		public global::Allors.Meta.RoleType C1C2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C2many2one;
			}
		} 
		public global::Allors.Meta.RoleType C1I12one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I12one2many;
			}
		} 
		public global::Allors.Meta.RoleType C1S2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1S2many2many;
			}
		} 
		public global::Allors.Meta.RoleType C1C2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C2one2one;
			}
		} 
		public global::Allors.Meta.RoleType C1AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType C1I12many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I12many2many;
			}
		} 
		public global::Allors.Meta.RoleType C1I2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1I2many2many;
			}
		} 
		public global::Allors.Meta.RoleType C1AllorsUnique 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1AllorsUnique;
			}
		} 
		public global::Allors.Meta.RoleType C1C3one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C3one2one;
			}
		} 
		public global::Allors.Meta.RoleType C1C3many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C3many2many;
			}
		} 
		public global::Allors.Meta.RoleType C1StringEquals 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1StringEquals;
			}
		} 
		public global::Allors.Meta.RoleType C1IntegerGreaterThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1IntegerGreaterThan;
			}
		} 
		public global::Allors.Meta.RoleType C3may2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C3may2one;
			}
		} 
		public global::Allors.Meta.RoleType C1IntegerBetweenB 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1IntegerBetweenB;
			}
		} 
		public global::Allors.Meta.RoleType C1AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType C1IntegerBetweenA 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1IntegerBetweenA;
			}
		} 
		public global::Allors.Meta.RoleType C1AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType C1C2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C2one2many;
			}
		} 
		public global::Allors.Meta.RoleType C1S2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1S2one2many;
			}
		} 
		public global::Allors.Meta.RoleType C1AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType C1DecimalLessThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1DecimalLessThan;
			}
		} 
		public global::Allors.Meta.RoleType C1C3one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C1C3one2many;
			}
		} 
		public global::Allors.Meta.RoleType I1I34one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I34one2many;
			}
		} 
		public global::Allors.Meta.RoleType I1I2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I2one2many;
			}
		} 
		public global::Allors.Meta.RoleType I1I2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I2many2one;
			}
		} 
		public global::Allors.Meta.RoleType I1C2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1C2many2one;
			}
		} 
		public global::Allors.Meta.RoleType I1C2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1C2one2one;
			}
		} 
		public global::Allors.Meta.RoleType I1DecimalBetweenA 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1DecimalBetweenA;
			}
		} 
		public global::Allors.Meta.RoleType I1S1one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1S1one2one;
			}
		} 
		public global::Allors.Meta.RoleType I1I12many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I12many2one;
			}
		} 
		public global::Allors.Meta.RoleType I1AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType I1DateLessThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1DateLessThan;
			}
		} 
		public global::Allors.Meta.RoleType I1C2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1C2one2many;
			}
		} 
		public global::Allors.Meta.RoleType I1StringLarge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1StringLarge;
			}
		} 
		public global::Allors.Meta.RoleType I1FloatLessThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1FloatLessThan;
			}
		} 
		public global::Allors.Meta.RoleType I1AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType I1C1many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1C1many2one;
			}
		} 
		public global::Allors.Meta.RoleType I1I12one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I12one2one;
			}
		} 
		public global::Allors.Meta.RoleType I1DecimalGreaterThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1DecimalGreaterThan;
			}
		} 
		public global::Allors.Meta.RoleType I1C1one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1C1one2one;
			}
		} 
		public global::Allors.Meta.RoleType I1I2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I2many2many;
			}
		} 
		public global::Allors.Meta.RoleType I1IntegerBetweenA 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1IntegerBetweenA;
			}
		} 
		public global::Allors.Meta.RoleType I1I34many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I34many2one;
			}
		} 
		public global::Allors.Meta.RoleType I1FloatBetweenA 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1FloatBetweenA;
			}
		} 
		public global::Allors.Meta.RoleType I1IntegerLessThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1IntegerLessThan;
			}
		} 
		public global::Allors.Meta.RoleType I1AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType I1S2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1S2one2one;
			}
		} 
		public global::Allors.Meta.RoleType I1AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType I1I1many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I1many2one;
			}
		} 
		public global::Allors.Meta.RoleType I1C1many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1C1many2many;
			}
		} 
		public global::Allors.Meta.RoleType I1I2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I2one2one;
			}
		} 
		public global::Allors.Meta.RoleType I1AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType I1S1many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1S1many2many;
			}
		} 
		public global::Allors.Meta.RoleType I1DateGreaterThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1DateGreaterThan;
			}
		} 
		public global::Allors.Meta.RoleType I1I34many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I34many2many;
			}
		} 
		public global::Allors.Meta.RoleType I1I34one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I34one2one;
			}
		} 
		public global::Allors.Meta.RoleType I1I1one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I1one2many;
			}
		} 
		public global::Allors.Meta.RoleType I1I1many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I1many2many;
			}
		} 
		public global::Allors.Meta.RoleType I1S2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1S2many2many;
			}
		} 
		public global::Allors.Meta.RoleType I1I12many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I12many2many;
			}
		} 
		public global::Allors.Meta.RoleType I1StringEquals 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1StringEquals;
			}
		} 
		public global::Allors.Meta.RoleType I1I12one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I12one2many;
			}
		} 
		public global::Allors.Meta.RoleType I1S2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1S2one2many;
			}
		} 
		public global::Allors.Meta.RoleType I1C2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1C2many2many;
			}
		} 
		public global::Allors.Meta.RoleType I1AllorsBinary 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1AllorsBinary;
			}
		} 
		public global::Allors.Meta.RoleType I1DecimalBetweenB 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1DecimalBetweenB;
			}
		} 
		public global::Allors.Meta.RoleType I1FloatGreaterThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1FloatGreaterThan;
			}
		} 
		public global::Allors.Meta.RoleType I1IntegerBetweenB 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1IntegerBetweenB;
			}
		} 
		public global::Allors.Meta.RoleType I1DateBetweenA 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1DateBetweenA;
			}
		} 
		public global::Allors.Meta.RoleType I1AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType I1S1one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1S1one2many;
			}
		} 
		public global::Allors.Meta.RoleType I1I1one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1I1one2one;
			}
		} 
		public global::Allors.Meta.RoleType I1IntegerGreaterThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1IntegerGreaterThan;
			}
		} 
		public global::Allors.Meta.RoleType I1S1many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1S1many2one;
			}
		} 
		public global::Allors.Meta.RoleType I1FloatBetweenB 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1FloatBetweenB;
			}
		} 
		public global::Allors.Meta.RoleType I1DecimalLessThan 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1DecimalLessThan;
			}
		} 
		public global::Allors.Meta.RoleType I1DateBetweenB 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1DateBetweenB;
			}
		} 
		public global::Allors.Meta.RoleType I1AllorsUnique 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1AllorsUnique;
			}
		} 
		public global::Allors.Meta.RoleType I1C1one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1C1one2many;
			}
		} 
		public global::Allors.Meta.RoleType I1S2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I1S2many2one;
			}
		} 
		public global::Allors.Meta.RoleType S1AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType S1AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType S1AllorsBinary 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1AllorsBinary;
			}
		} 
		public global::Allors.Meta.RoleType S1AllorsUnique 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1AllorsUnique;
			}
		} 
		public global::Allors.Meta.RoleType S1StringLarge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1StringLarge;
			}
		} 
		public global::Allors.Meta.RoleType S1S2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1S2many2one;
			}
		} 
		public global::Allors.Meta.RoleType S1S2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1S2one2many;
			}
		} 
		public global::Allors.Meta.RoleType S1AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType S1AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType S1C1many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1C1many2one;
			}
		} 
		public global::Allors.Meta.RoleType S1C1one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1C1one2one;
			}
		} 
		public global::Allors.Meta.RoleType S1AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType S1C1many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1C1many2many;
			}
		} 
		public global::Allors.Meta.RoleType S1S2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1S2many2many;
			}
		} 
		public global::Allors.Meta.RoleType S1S2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1S2one2one;
			}
		} 
		public global::Allors.Meta.RoleType S1AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType S1C1one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1C1one2many;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType S1234many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234S1234many2one;
			}
		} 
		public global::Allors.Meta.RoleType S1234C2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234C2one2one;
			}
		} 
		public global::Allors.Meta.RoleType S1234C2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234C2many2many;
			}
		} 
		public global::Allors.Meta.RoleType S1234one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234S1234one2many;
			}
		} 
		public global::Allors.Meta.RoleType S1234C2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234C2one2many;
			}
		} 
		public global::Allors.Meta.RoleType S1234many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234S1234many2many;
			}
		} 
		public global::Allors.Meta.RoleType ClassName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234ClassName;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType S1234one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234S1234one2one;
			}
		} 
		public global::Allors.Meta.RoleType S1234C2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234C2many2one;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType I12I34one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I34one2many;
			}
		} 
		public global::Allors.Meta.RoleType C3many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C3many2one;
			}
		} 
		public global::Allors.Meta.RoleType I12C2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2many2one;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType I12I34many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I34many2one;
			}
		} 
		public global::Allors.Meta.RoleType I12I34many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I34many2many;
			}
		} 
		public global::Allors.Meta.RoleType I12C3one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C3one2one;
			}
		} 
		public global::Allors.Meta.RoleType I12C2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2many2many;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType I12C2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2one2one;
			}
		} 
		public global::Allors.Meta.RoleType I12C3one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C3one2many;
			}
		} 
		public global::Allors.Meta.RoleType I12C3many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C3many2many;
			}
		} 
		public global::Allors.Meta.RoleType PrefetchTest 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12PrefetchTest;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType I12I34one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I34one2one;
			}
		} 
		public global::Allors.Meta.RoleType I12C2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2one2many;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType S12C2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12C2many2many;
			}
		} 
		public global::Allors.Meta.RoleType S12C2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12C2many2one;
			}
		} 
		public global::Allors.Meta.RoleType S12C2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12C2one2one;
			}
		} 
		public global::Allors.Meta.RoleType S12C2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12C2one2many;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsDecimal;
			}
		} 

		public global::Allors.Meta.AssociationType S1sWhereC1many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1C1many2one;
			}
		} 
		public global::Allors.Meta.AssociationType S1WhereC1one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1C1one2one;
			}
		} 
		public global::Allors.Meta.AssociationType S1sWhereC1many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1C1many2many;
			}
		} 
		public global::Allors.Meta.AssociationType S1WhereC1one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1C1one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I3WhereC1one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I3C1one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereC1many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C1many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereMany2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereC1many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C1many2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereC1one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C1one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereC1one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C1one2many;
			}
		} 
		public global::Allors.Meta.AssociationType C2sWhereC1many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C1many2many;
			}
		} 
		public global::Allors.Meta.AssociationType C2sWhereC1many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C1many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C2WhereC1one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C1one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C2WhereC1one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C1one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereC1many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C1many2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereC1one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C1one2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereC1many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C1many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereC1one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C1one2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI1one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I1one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI1many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I1many2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI1many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I1many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI1one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I1one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI1many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I1many2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI1one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I1one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI1many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I1many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI1one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I1one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereS1one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1S1one2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereS1many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1S1many2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereS1many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1S1many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereS1one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1S1one2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereS1one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1S1one2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereS1many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1S1many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereS1one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1S1one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereS1many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1S1many2one;
			}
		} 
		public global::Allors.Meta.AssociationType S1234sWhereS1234many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234S1234many2one;
			}
		} 
		public global::Allors.Meta.AssociationType S1234WhereS1234one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234S1234one2many;
			}
		} 
		public global::Allors.Meta.AssociationType S1234sWhereS1234many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234S1234many2many;
			}
		} 
		public global::Allors.Meta.AssociationType S1234WhereS1234one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234S1234one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI12one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI12many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI12one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12one2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI12many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI12many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12many2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI12one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12one2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI12many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI12one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12one2many;
			}
		} 

	}
}
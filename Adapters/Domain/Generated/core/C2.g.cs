// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class C2 : Allors.ObjectBase , I2, I23, I12
	{
		public static readonly C2Meta Meta = C2Meta.Instance;

		public C2(Allors.IStrategy allors) : base(allors) {}

		public static C2 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C2) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.Decimal? C2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.C2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsDecimal, value);
			}
		}

		virtual public bool ExistC2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsDecimal);
			}
		}

		virtual public void RemoveC2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsDecimal);
		}


		virtual public global::Allors.Extent<C1> C1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1many2many, value);
			}
		}

		virtual public void AddC1many2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.C1many2many, value);
		}

		virtual public void RemoveC1many2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1many2many,value);
		}

		virtual public bool ExistC1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1many2many);
			}
		}

		virtual public void RemoveC1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1many2many);
		}


		virtual public C2 C2C2many2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C2C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2C2many2one ,value);
			}
		}

		virtual public bool ExistC2C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2C2many2one);
			}
		}

		virtual public void RemoveC2C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C2C2many2one);
		}



		virtual public global::System.Double? C2AllorsFloat 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.C2AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsFloat, value);
			}
		}

		virtual public bool ExistC2AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsFloat);
			}
		}

		virtual public void RemoveC2AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsFloat);
		}



		virtual public global::System.Int32? C2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.C2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsInteger, value);
			}
		}

		virtual public bool ExistC2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsInteger);
			}
		}

		virtual public void RemoveC2AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsInteger);
		}


		virtual public global::Allors.Extent<C2> C2C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2C2many2many, value);
			}
		}

		virtual public void AddC2C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C2C2many2many, value);
		}

		virtual public void RemoveC2C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2C2many2many,value);
		}

		virtual public bool ExistC2C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2C2many2many);
			}
		}

		virtual public void RemoveC2C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2C2many2many);
		}



		virtual public global::System.Boolean? C2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.C2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsBoolean, value);
			}
		}

		virtual public bool ExistC2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsBoolean);
			}
		}

		virtual public void RemoveC2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsBoolean);
		}


		virtual public C1 C1many2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1many2one ,value);
			}
		}

		virtual public bool ExistC1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1many2one);
			}
		}

		virtual public void RemoveC1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1many2one);
		}


		virtual public C1 C1one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1one2one ,value);
			}
		}

		virtual public bool ExistC1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1one2one);
			}
		}

		virtual public void RemoveC1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1one2one);
		}



		virtual public global::System.String C2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsString, value);
			}
		}

		virtual public bool ExistC2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsString);
			}
		}

		virtual public void RemoveC2AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsString);
		}


		virtual public C2 C2C2one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C2C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2C2one2one ,value);
			}
		}

		virtual public bool ExistC2C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2C2one2one);
			}
		}

		virtual public void RemoveC2C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C2C2one2one);
		}


		virtual public global::Allors.Extent<C2> C2C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2C2one2many, value);
			}
		}

		virtual public void AddC2C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C2C2one2many, value);
		}

		virtual public void RemoveC2C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2C2one2many,value);
		}

		virtual public bool ExistC2C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2C2one2many);
			}
		}

		virtual public void RemoveC2C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2C2one2many);
		}



		virtual public global::System.DateTime? C2AllorsDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.C2AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsDate, value);
			}
		}

		virtual public bool ExistC2AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsDate);
			}
		}

		virtual public void RemoveC2AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsDate);
		}


		virtual public global::Allors.Extent<C1> C1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1one2many, value);
			}
		}

		virtual public void AddC1one2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.C1one2many, value);
		}

		virtual public void RemoveC1one2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1one2many,value);
		}

		virtual public bool ExistC1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1one2many);
			}
		}

		virtual public void RemoveC1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1one2many);
		}


		virtual public global::Allors.Extent<C3> C3Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C3Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C3Many2Many, value);
			}
		}

		virtual public void AddC3Many2Many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.C3Many2Many, value);
		}

		virtual public void RemoveC3Many2Many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.C3Many2Many,value);
		}

		virtual public bool ExistC3Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C3Many2Many);
			}
		}

		virtual public void RemoveC3Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C3Many2Many);
		}


		virtual public C3 C3Many2One
		{ 
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.C3Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3Many2One ,value);
			}
		}

		virtual public bool ExistC3Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3Many2One);
			}
		}

		virtual public void RemoveC3Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.C3Many2One);
		}



		virtual public global::System.Boolean? I2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.I2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsBoolean, value);
			}
		}

		virtual public bool ExistI2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsBoolean);
			}
		}

		virtual public void RemoveI2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsBoolean);
		}



		virtual public global::System.Decimal? I2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsDecimal, value);
			}
		}

		virtual public bool ExistI2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsDecimal);
			}
		}

		virtual public void RemoveI2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsDecimal);
		}



		virtual public global::System.DateTime? I2AllorsDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.I2AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsDate, value);
			}
		}

		virtual public bool ExistI2AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsDate);
			}
		}

		virtual public void RemoveI2AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsDate);
		}



		virtual public global::System.String I2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsString, value);
			}
		}

		virtual public bool ExistI2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsString);
			}
		}

		virtual public void RemoveI2AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsString);
		}



		virtual public global::System.Int32? I2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsInteger, value);
			}
		}

		virtual public bool ExistI2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsInteger);
			}
		}

		virtual public void RemoveI2AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsInteger);
		}



		virtual public global::System.Double? I2AllorsFloat 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I2AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsFloat, value);
			}
		}

		virtual public bool ExistI2AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsFloat);
			}
		}

		virtual public void RemoveI2AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsFloat);
		}



		virtual public global::System.Double? S1234AllorsFloat 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.S1234AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsFloat, value);
			}
		}

		virtual public bool ExistS1234AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsFloat);
			}
		}

		virtual public void RemoveS1234AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsFloat);
		}



		virtual public global::System.Decimal? S1234AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.S1234AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDecimal, value);
			}
		}

		virtual public bool ExistS1234AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDecimal);
			}
		}

		virtual public void RemoveS1234AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDecimal);
		}



		virtual public global::System.Int32? S1234AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.S1234AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsInteger, value);
			}
		}

		virtual public bool ExistS1234AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsInteger);
			}
		}

		virtual public void RemoveS1234AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsInteger);
		}


		virtual public S1234 S1234many2one
		{ 
			get
			{
				return (S1234) Strategy.GetCompositeRole(Meta.S1234many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234many2one ,value);
			}
		}

		virtual public bool ExistS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234many2one);
			}
		}

		virtual public void RemoveS1234many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234many2one);
		}


		virtual public C2 S1234C2one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S1234C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234C2one2one ,value);
			}
		}

		virtual public bool ExistS1234C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234C2one2one);
			}
		}

		virtual public void RemoveS1234C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2one2one);
		}


		virtual public global::Allors.Extent<C2> S1234C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234C2many2many, value);
			}
		}

		virtual public void AddS1234C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S1234C2many2many, value);
		}

		virtual public void RemoveS1234C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2many2many,value);
		}

		virtual public bool ExistS1234C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234C2many2many);
			}
		}

		virtual public void RemoveS1234C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234C2many2many);
		}


		virtual public global::Allors.Extent<S1234> S1234one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234one2many, value);
			}
		}

		virtual public void AddS1234one2many (S1234 value)
		{
			Strategy.AddCompositeRole(Meta.S1234one2many, value);
		}

		virtual public void RemoveS1234one2many (S1234 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234one2many,value);
		}

		virtual public bool ExistS1234one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234one2many);
			}
		}

		virtual public void RemoveS1234one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234one2many);
		}


		virtual public global::Allors.Extent<C2> S1234C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234C2one2many, value);
			}
		}

		virtual public void AddS1234C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S1234C2one2many, value);
		}

		virtual public void RemoveS1234C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2one2many,value);
		}

		virtual public bool ExistS1234C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234C2one2many);
			}
		}

		virtual public void RemoveS1234C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234C2one2many);
		}


		virtual public global::Allors.Extent<S1234> S1234many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234many2many, value);
			}
		}

		virtual public void AddS1234many2many (S1234 value)
		{
			Strategy.AddCompositeRole(Meta.S1234many2many, value);
		}

		virtual public void RemoveS1234many2many (S1234 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234many2many,value);
		}

		virtual public bool ExistS1234many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234many2many);
			}
		}

		virtual public void RemoveS1234many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234many2many);
		}



		virtual public global::System.String ClassName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ClassName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ClassName, value);
			}
		}

		virtual public bool ExistClassName{
			get
			{
				return Strategy.ExistUnitRole(Meta.ClassName);
			}
		}

		virtual public void RemoveClassName()
		{
			Strategy.RemoveUnitRole(Meta.ClassName);
		}



		virtual public global::System.DateTime? S1234AllorsDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.S1234AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDate, value);
			}
		}

		virtual public bool ExistS1234AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDate);
			}
		}

		virtual public void RemoveS1234AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDate);
		}


		virtual public S1234 S1234one2one
		{ 
			get
			{
				return (S1234) Strategy.GetCompositeRole(Meta.S1234one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234one2one ,value);
			}
		}

		virtual public bool ExistS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234one2one);
			}
		}

		virtual public void RemoveS1234one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234one2one);
		}


		virtual public C2 S1234C2many2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S1234C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234C2many2one ,value);
			}
		}

		virtual public bool ExistS1234C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234C2many2one);
			}
		}

		virtual public void RemoveS1234C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2many2one);
		}



		virtual public global::System.String S1234AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S1234AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsString, value);
			}
		}

		virtual public bool ExistS1234AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsString);
			}
		}

		virtual public void RemoveS1234AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsString);
		}



		virtual public global::System.Boolean? S1234AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.S1234AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsBoolean, value);
			}
		}

		virtual public bool ExistS1234AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsBoolean);
			}
		}

		virtual public void RemoveS1234AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsBoolean);
		}



		virtual public global::System.String S2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsString, value);
			}
		}

		virtual public bool ExistS2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsString);
			}
		}

		virtual public void RemoveS2AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsString);
		}



		virtual public global::System.Int32? S2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.S2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsInteger, value);
			}
		}

		virtual public bool ExistS2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsInteger);
			}
		}

		virtual public void RemoveS2AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsInteger);
		}



		virtual public global::System.Double? S2AllorsFloat 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.S2AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsFloat, value);
			}
		}

		virtual public bool ExistS2AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsFloat);
			}
		}

		virtual public void RemoveS2AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsFloat);
		}



		virtual public global::System.Boolean? S2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.S2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsBoolean, value);
			}
		}

		virtual public bool ExistS2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsBoolean);
			}
		}

		virtual public void RemoveS2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsBoolean);
		}



		virtual public global::System.Decimal? S2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.S2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsDecimal, value);
			}
		}

		virtual public bool ExistS2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsDecimal);
			}
		}

		virtual public void RemoveS2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsDecimal);
		}



		virtual public global::System.DateTime? S2AllorsDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.S2AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsDate, value);
			}
		}

		virtual public bool ExistS2AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsDate);
			}
		}

		virtual public void RemoveS2AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsDate);
		}



		virtual public global::System.String I23AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I23AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I23AllorsString, value);
			}
		}

		virtual public bool ExistI23AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I23AllorsString);
			}
		}

		virtual public void RemoveI23AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I23AllorsString);
		}



		virtual public global::System.Boolean? I12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.I12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsBoolean, value);
			}
		}

		virtual public bool ExistI12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsBoolean);
			}
		}

		virtual public void RemoveI12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsBoolean);
		}



		virtual public global::System.Int32? I12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsInteger, value);
			}
		}

		virtual public bool ExistI12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsInteger);
			}
		}

		virtual public void RemoveI12AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsInteger);
		}


		virtual public global::Allors.Extent<I34> I12I34one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I34one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I34one2many, value);
			}
		}

		virtual public void AddI12I34one2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I12I34one2many, value);
		}

		virtual public void RemoveI12I34one2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I34one2many,value);
		}

		virtual public bool ExistI12I34one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I34one2many);
			}
		}

		virtual public void RemoveI12I34one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I34one2many);
		}


		virtual public C3 C3many2one
		{ 
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.C3many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3many2one ,value);
			}
		}

		virtual public bool ExistC3many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3many2one);
			}
		}

		virtual public void RemoveC3many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3many2one);
		}


		virtual public C2 I12C2many2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I12C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C2many2one ,value);
			}
		}

		virtual public bool ExistI12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C2many2one);
			}
		}

		virtual public void RemoveI12C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C2many2one);
		}



		virtual public global::System.Double? I12AllorsFloat 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I12AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsFloat, value);
			}
		}

		virtual public bool ExistI12AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsFloat);
			}
		}

		virtual public void RemoveI12AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsFloat);
		}


		virtual public I34 I12I34many2one
		{ 
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I12I34many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I34many2one ,value);
			}
		}

		virtual public bool ExistI12I34many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I34many2one);
			}
		}

		virtual public void RemoveI12I34many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12I34many2one);
		}


		virtual public global::Allors.Extent<I34> I12I34many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I34many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I34many2many, value);
			}
		}

		virtual public void AddI12I34many2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I12I34many2many, value);
		}

		virtual public void RemoveI12I34many2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I34many2many,value);
		}

		virtual public bool ExistI12I34many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I34many2many);
			}
		}

		virtual public void RemoveI12I34many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I34many2many);
		}


		virtual public C3 I12C3one2one
		{ 
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.I12C3one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C3one2one ,value);
			}
		}

		virtual public bool ExistI12C3one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C3one2one);
			}
		}

		virtual public void RemoveI12C3one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C3one2one);
		}


		virtual public global::Allors.Extent<C2> I12C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C2many2many, value);
			}
		}

		virtual public void AddI12C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I12C2many2many, value);
		}

		virtual public void RemoveI12C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C2many2many,value);
		}

		virtual public bool ExistI12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C2many2many);
			}
		}

		virtual public void RemoveI12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C2many2many);
		}



		virtual public global::System.Decimal? I12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDecimal, value);
			}
		}

		virtual public bool ExistI12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDecimal);
			}
		}

		virtual public void RemoveI12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDecimal);
		}


		virtual public C2 I12C2one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I12C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C2one2one ,value);
			}
		}

		virtual public bool ExistI12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C2one2one);
			}
		}

		virtual public void RemoveI12C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C2one2one);
		}


		virtual public global::Allors.Extent<C3> I12C3one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C3one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C3one2many, value);
			}
		}

		virtual public void AddI12C3one2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.I12C3one2many, value);
		}

		virtual public void RemoveI12C3one2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C3one2many,value);
		}

		virtual public bool ExistI12C3one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C3one2many);
			}
		}

		virtual public void RemoveI12C3one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C3one2many);
		}


		virtual public global::Allors.Extent<C3> I12C3many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C3many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C3many2many, value);
			}
		}

		virtual public void AddI12C3many2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.I12C3many2many, value);
		}

		virtual public void RemoveI12C3many2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C3many2many,value);
		}

		virtual public bool ExistI12C3many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C3many2many);
			}
		}

		virtual public void RemoveI12C3many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C3many2many);
		}



		virtual public global::System.String PrefetchTest 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PrefetchTest);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PrefetchTest, value);
			}
		}

		virtual public bool ExistPrefetchTest{
			get
			{
				return Strategy.ExistUnitRole(Meta.PrefetchTest);
			}
		}

		virtual public void RemovePrefetchTest()
		{
			Strategy.RemoveUnitRole(Meta.PrefetchTest);
		}



		virtual public global::System.DateTime? I12AllorsDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.I12AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDate, value);
			}
		}

		virtual public bool ExistI12AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDate);
			}
		}

		virtual public void RemoveI12AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDate);
		}



		virtual public global::System.String I12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsString, value);
			}
		}

		virtual public bool ExistI12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsString);
			}
		}

		virtual public void RemoveI12AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsString);
		}


		virtual public I34 I12I34one2one
		{ 
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I12I34one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I34one2one ,value);
			}
		}

		virtual public bool ExistI12I34one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I34one2one);
			}
		}

		virtual public void RemoveI12I34one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12I34one2one);
		}


		virtual public global::Allors.Extent<C2> I12C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C2one2many, value);
			}
		}

		virtual public void AddI12C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I12C2one2many, value);
		}

		virtual public void RemoveI12C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C2one2many,value);
		}

		virtual public bool ExistI12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C2one2many);
			}
		}

		virtual public void RemoveI12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C2one2many);
		}



		virtual public global::System.String S12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsString, value);
			}
		}

		virtual public bool ExistS12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsString);
			}
		}

		virtual public void RemoveS12AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsString);
		}



		virtual public global::System.DateTime? S12AllorsDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.S12AllorsDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsDate, value);
			}
		}

		virtual public bool ExistS12AllorsDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsDate);
			}
		}

		virtual public void RemoveS12AllorsDate()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsDate);
		}


		virtual public global::Allors.Extent<C2> S12C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S12C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S12C2many2many, value);
			}
		}

		virtual public void AddS12C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S12C2many2many, value);
		}

		virtual public void RemoveS12C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S12C2many2many,value);
		}

		virtual public bool ExistS12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S12C2many2many);
			}
		}

		virtual public void RemoveS12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S12C2many2many);
		}


		virtual public C2 S12C2many2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S12C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S12C2many2one ,value);
			}
		}

		virtual public bool ExistS12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S12C2many2one);
			}
		}

		virtual public void RemoveS12C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S12C2many2one);
		}


		virtual public C2 S12C2one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S12C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S12C2one2one ,value);
			}
		}

		virtual public bool ExistS12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S12C2one2one);
			}
		}

		virtual public void RemoveS12C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S12C2one2one);
		}


		virtual public global::Allors.Extent<C2> S12C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.S12C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S12C2one2many, value);
			}
		}

		virtual public void AddS12C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S12C2one2many, value);
		}

		virtual public void RemoveS12C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S12C2one2many,value);
		}

		virtual public bool ExistS12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S12C2one2many);
			}
		}

		virtual public void RemoveS12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S12C2one2many);
		}



		virtual public global::System.Boolean? S12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.S12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsBoolean, value);
			}
		}

		virtual public bool ExistS12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsBoolean);
			}
		}

		virtual public void RemoveS12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsBoolean);
		}



		virtual public global::System.Double? S12AllorsFloat 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.S12AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsFloat, value);
			}
		}

		virtual public bool ExistS12AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsFloat);
			}
		}

		virtual public void RemoveS12AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsFloat);
		}



		virtual public global::System.Int32? S12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.S12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsInteger, value);
			}
		}

		virtual public bool ExistS12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsInteger);
			}
		}

		virtual public void RemoveS12AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsInteger);
		}



		virtual public global::System.Decimal? S12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.S12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsDecimal, value);
			}
		}

		virtual public bool ExistS12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsDecimal);
			}
		}

		virtual public void RemoveS12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsDecimal);
		}



		virtual public global::Allors.Extent<C3> C3sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C3sWhereC2many2many);
			}
		}

		virtual public bool ExistC3sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C3sWhereC2many2many);
			}
		}


		virtual public C3 C3WhereC2one2many
		{ 
			get
			{
				return (C3) Strategy.GetCompositeAssociation(Meta.C3WhereC2one2many);
			}
		} 

		virtual public bool ExistC3WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C3WhereC2one2many);
			}
		}


		virtual public global::Allors.Extent<C3> C3sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C3sWhereC2many2one);
			}
		}

		virtual public bool ExistC3sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C3sWhereC2many2one);
			}
		}


		virtual public C3 C3WhereC2one2one
		{ 
			get
			{
				return (C3) Strategy.GetCompositeAssociation(Meta.C3WhereC2one2one);
			}
		} 

		virtual public bool ExistC3WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C3WhereC2one2one);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC2many2many);
			}
		}

		virtual public bool ExistC1sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC2many2many);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC2many2one);
			}
		}

		virtual public bool ExistC1sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC2many2one);
			}
		}


		virtual public C1 C1WhereC2one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC2one2one);
			}
		} 

		virtual public bool ExistC1WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC2one2one);
			}
		}


		virtual public C1 C1WhereC2one2many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC2one2many);
			}
		} 

		virtual public bool ExistC1WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC2one2many);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC2many2one);
			}
		}

		virtual public bool ExistC2sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC2many2one);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC2many2many);
			}
		}

		virtual public bool ExistC2sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC2many2many);
			}
		}


		virtual public C2 C2WhereC2one2one
		{ 
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereC2one2one);
			}
		} 

		virtual public bool ExistC2WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereC2one2one);
			}
		}


		virtual public C2 C2WhereC2one2many
		{ 
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereC2one2many);
			}
		} 

		virtual public bool ExistC2WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereC2one2many);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereC2many2one);
			}
		}

		virtual public bool ExistI12sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereC2many2one);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereC2many2many);
			}
		}

		virtual public bool ExistI12sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereC2many2many);
			}
		}


		virtual public I12 I12WhereC2one2one
		{ 
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereC2one2one);
			}
		} 

		virtual public bool ExistI12WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereC2one2one);
			}
		}


		virtual public I12 I12WhereC2one2many
		{ 
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereC2one2many);
			}
		} 

		virtual public bool ExistI12WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereC2one2many);
			}
		}


		virtual public S1234 S1234WhereC2one2one
		{ 
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereC2one2one);
			}
		} 

		virtual public bool ExistS1234WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereC2one2one);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereC2many2many);
			}
		}

		virtual public bool ExistS1234sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereC2many2many);
			}
		}


		virtual public S1234 S1234WhereC2one2many
		{ 
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereC2one2many);
			}
		} 

		virtual public bool ExistS1234WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereC2one2many);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereC2many2one);
			}
		}

		virtual public bool ExistS1234sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereC2many2one);
			}
		}


		virtual public global::Allors.Extent<S12> S12sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S12sWhereC2many2many);
			}
		}

		virtual public bool ExistS12sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S12sWhereC2many2many);
			}
		}


		virtual public global::Allors.Extent<S12> S12sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S12sWhereC2many2one);
			}
		}

		virtual public bool ExistS12sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S12sWhereC2many2one);
			}
		}


		virtual public S12 S12WhereC2one2one
		{ 
			get
			{
				return (S12) Strategy.GetCompositeAssociation(Meta.S12WhereC2one2one);
			}
		} 

		virtual public bool ExistS12WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S12WhereC2one2one);
			}
		}


		virtual public S12 S12WhereC2one2many
		{ 
			get
			{
				return (S12) Strategy.GetCompositeAssociation(Meta.S12WhereC2one2many);
			}
		} 

		virtual public bool ExistS12WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S12WhereC2one2many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereC2many2one);
			}
		}

		virtual public bool ExistI1sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereC2many2one);
			}
		}


		virtual public I1 I1WhereC2one2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereC2one2one);
			}
		} 

		virtual public bool ExistI1WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereC2one2one);
			}
		}


		virtual public I1 I1WhereC2one2many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereC2one2many);
			}
		} 

		virtual public bool ExistI1WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereC2one2many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereC2many2many);
			}
		}

		virtual public bool ExistI1sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereC2many2many);
			}
		}


		virtual public C1 C1WhereI2one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI2one2one);
			}
		} 

		virtual public bool ExistC1WhereI2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI2one2one);
			}
		}


		virtual public C1 C1WhereI2one2many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI2one2many);
			}
		} 

		virtual public bool ExistC1WhereI2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI2one2many);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI2many2one);
			}
		}

		virtual public bool ExistC1sWhereI2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI2many2one);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI2many2many);
			}
		}

		virtual public bool ExistC1sWhereI2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI2many2many);
			}
		}


		virtual public I1 I1WhereI2one2many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI2one2many);
			}
		} 

		virtual public bool ExistI1WhereI2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI2one2many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI2many2one);
			}
		}

		virtual public bool ExistI1sWhereI2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI2many2one);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI2many2many);
			}
		}

		virtual public bool ExistI1sWhereI2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI2many2many);
			}
		}


		virtual public I1 I1WhereI2one2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI2one2one);
			}
		} 

		virtual public bool ExistI1WhereI2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI2one2one);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234many2one);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234many2one);
			}
		}


		virtual public S1234 S1234WhereS1234one2many
		{ 
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234one2many);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234one2many);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234many2many);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234many2many);
			}
		}


		virtual public S1234 S1234WhereS1234one2one
		{ 
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234one2one);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234one2one);
			}
		}


		virtual public global::Allors.Extent<S1> S1sWhereS2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1sWhereS2many2one);
			}
		}

		virtual public bool ExistS1sWhereS2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1sWhereS2many2one);
			}
		}


		virtual public S1 S1WhereS2one2many
		{ 
			get
			{
				return (S1) Strategy.GetCompositeAssociation(Meta.S1WhereS2one2many);
			}
		} 

		virtual public bool ExistS1WhereS2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1WhereS2one2many);
			}
		}


		virtual public global::Allors.Extent<S1> S1sWhereS2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1sWhereS2many2many);
			}
		}

		virtual public bool ExistS1sWhereS2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1sWhereS2many2many);
			}
		}


		virtual public S1 S1WhereS2one2one
		{ 
			get
			{
				return (S1) Strategy.GetCompositeAssociation(Meta.S1WhereS2one2one);
			}
		} 

		virtual public bool ExistS1WhereS2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1WhereS2one2one);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereS2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereS2many2one);
			}
		}

		virtual public bool ExistC1sWhereS2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereS2many2one);
			}
		}


		virtual public C1 C1WhereS2one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereS2one2one);
			}
		} 

		virtual public bool ExistC1WhereS2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereS2one2one);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereS2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereS2many2many);
			}
		}

		virtual public bool ExistC1sWhereS2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereS2many2many);
			}
		}


		virtual public C1 C1WhereS2one2many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereS2one2many);
			}
		} 

		virtual public bool ExistC1WhereS2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereS2one2many);
			}
		}


		virtual public I1 I1WhereS2one2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereS2one2one);
			}
		} 

		virtual public bool ExistI1WhereS2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereS2one2one);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereS2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereS2many2many);
			}
		}

		virtual public bool ExistI1sWhereS2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereS2many2many);
			}
		}


		virtual public I1 I1WhereS2one2many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereS2one2many);
			}
		} 

		virtual public bool ExistI1WhereS2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereS2one2many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereS2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereS2many2one);
			}
		}

		virtual public bool ExistI1sWhereS2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereS2many2one);
			}
		}


		virtual public C1 C1WhereI12one2one
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI12one2one);
			}
		} 

		virtual public bool ExistC1WhereI12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI12one2one);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI12many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI12many2one);
			}
		}

		virtual public bool ExistC1sWhereI12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI12many2one);
			}
		}


		virtual public C1 C1WhereI12one2many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI12one2many);
			}
		} 

		virtual public bool ExistC1WhereI12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI12one2many);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI12many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI12many2many);
			}
		}

		virtual public bool ExistC1sWhereI12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI12many2many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI12many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI12many2one);
			}
		}

		virtual public bool ExistI1sWhereI12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI12many2one);
			}
		}


		virtual public I1 I1WhereI12one2one
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI12one2one);
			}
		} 

		virtual public bool ExistI1WhereI12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI12one2one);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI12many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI12many2many);
			}
		}

		virtual public bool ExistI1sWhereI12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI12many2many);
			}
		}


		virtual public I1 I1WhereI12one2many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI12one2many);
			}
		} 

		virtual public bool ExistI1WhereI12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI12one2many);
			}
		}

	}

	public class C2Meta
	{
		public static readonly C2Meta Instance = new C2Meta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.C2;

		public global::Allors.Meta.RoleType C2AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType C1many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C1many2many;
			}
		} 
		public global::Allors.Meta.RoleType C2C2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C2many2one;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType C2C2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C2many2many;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType C1many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C1many2one;
			}
		} 
		public global::Allors.Meta.RoleType C1one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C1one2one;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType C2C2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C2one2one;
			}
		} 
		public global::Allors.Meta.RoleType C2C2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C2one2many;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType C1one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C1one2many;
			}
		} 
		public global::Allors.Meta.RoleType C3Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C3Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType C3Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C3Many2One;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType S1234many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234S1234many2one;
			}
		} 
		public global::Allors.Meta.RoleType S1234C2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234C2one2one;
			}
		} 
		public global::Allors.Meta.RoleType S1234C2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234C2many2many;
			}
		} 
		public global::Allors.Meta.RoleType S1234one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234S1234one2many;
			}
		} 
		public global::Allors.Meta.RoleType S1234C2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234C2one2many;
			}
		} 
		public global::Allors.Meta.RoleType S1234many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234S1234many2many;
			}
		} 
		public global::Allors.Meta.RoleType ClassName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234ClassName;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType S1234one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234S1234one2one;
			}
		} 
		public global::Allors.Meta.RoleType S1234C2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234C2many2one;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType S1234AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S1234AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType S2AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S2AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType S2AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S2AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType S2AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S2AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType S2AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S2AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType S2AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S2AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType S2AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S2AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType I23AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I23AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType I12I34one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I34one2many;
			}
		} 
		public global::Allors.Meta.RoleType C3many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C3many2one;
			}
		} 
		public global::Allors.Meta.RoleType I12C2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2many2one;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType I12I34many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I34many2one;
			}
		} 
		public global::Allors.Meta.RoleType I12I34many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I34many2many;
			}
		} 
		public global::Allors.Meta.RoleType I12C3one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C3one2one;
			}
		} 
		public global::Allors.Meta.RoleType I12C2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2many2many;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType I12C2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2one2one;
			}
		} 
		public global::Allors.Meta.RoleType I12C3one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C3one2many;
			}
		} 
		public global::Allors.Meta.RoleType I12C3many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C3many2many;
			}
		} 
		public global::Allors.Meta.RoleType PrefetchTest 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12PrefetchTest;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType I12I34one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I34one2one;
			}
		} 
		public global::Allors.Meta.RoleType I12C2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2one2many;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsDate;
			}
		} 
		public global::Allors.Meta.RoleType S12C2many2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12C2many2many;
			}
		} 
		public global::Allors.Meta.RoleType S12C2many2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12C2many2one;
			}
		} 
		public global::Allors.Meta.RoleType S12C2one2one 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12C2one2one;
			}
		} 
		public global::Allors.Meta.RoleType S12C2one2many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12C2one2many;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType S12AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.S12AllorsDecimal;
			}
		} 

		public global::Allors.Meta.AssociationType C3sWhereC2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C3C2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType C3WhereC2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C3C2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType C3sWhereC2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C3C2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C3WhereC2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C3C2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereC2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereC2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereC2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereC2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType C2sWhereC2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C2sWhereC2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType C2WhereC2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C2WhereC2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I12sWhereC2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12C2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType I12sWhereC2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12C2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I12WhereC2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12C2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType I12WhereC2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12C2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType S1234WhereC2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234C2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType S1234sWhereC2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234C2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType S1234WhereC2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234C2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType S1234sWhereC2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234C2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType S12sWhereC2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S12C2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType S12sWhereC2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S12C2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType S12WhereC2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S12C2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType S12WhereC2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S12C2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereC2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereC2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereC2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereC2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType S1234sWhereS1234many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234S1234many2one;
			}
		} 
		public global::Allors.Meta.AssociationType S1234WhereS1234one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234S1234one2many;
			}
		} 
		public global::Allors.Meta.AssociationType S1234sWhereS1234many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234S1234many2many;
			}
		} 
		public global::Allors.Meta.AssociationType S1234WhereS1234one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1234S1234one2one;
			}
		} 
		public global::Allors.Meta.AssociationType S1sWhereS2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1S2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType S1WhereS2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1S2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType S1sWhereS2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1S2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType S1WhereS2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.S1S2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereS2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1S2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereS2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1S2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereS2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1S2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereS2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1S2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereS2one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1S2one2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereS2many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1S2many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereS2one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1S2one2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereS2many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1S2many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI12one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12one2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI12many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12many2one;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI12one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12one2many;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI12many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI12many2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12many2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI12one2one 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12one2one;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI12many2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12many2many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI12one2many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12one2many;
			}
		} 

	}
}
// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnBuild : Allors.Meta.Method
	{
		protected ObjectOnBuild(Object @object) : base(@object)
		{
		}
	}

	public partial class GenderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GenderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Gender.Meta.ObjectType, Gender.Meta.OnBuild); 

		public GenderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderOnBuildMethodInvocation;
			}
		}
	}public partial class PersonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.OnBuild); 

		public PersonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnBuildMethodInvocation;
			}
		}
	}public partial class AccessControlOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.OnBuild); 

		public AccessControlOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnBuildMethodInvocation;
			}
		}
	}public partial class CountryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Country.Meta.ObjectType, Country.Meta.OnBuild); 

		public CountryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnBuildMethodInvocation;
			}
		}
	}public partial class CurrencyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Currency.Meta.ObjectType, Currency.Meta.OnBuild); 

		public CurrencyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnBuildMethodInvocation;
			}
		}
	}public partial class LanguageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Language.Meta.ObjectType, Language.Meta.OnBuild); 

		public LanguageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnBuildMethodInvocation;
			}
		}
	}public partial class LocaleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Locale.Meta.ObjectType, Locale.Meta.OnBuild); 

		public LocaleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnBuildMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(LocalisedText.Meta.ObjectType, LocalisedText.Meta.OnBuild); 

		public LocalisedTextOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnBuildMethodInvocation;
			}
		}
	}public partial class MediaOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.OnBuild); 

		public MediaOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnBuildMethodInvocation;
			}
		}
	}public partial class MediaTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(MediaType.Meta.ObjectType, MediaType.Meta.OnBuild); 

		public MediaTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaTypeOnBuildMethodInvocation;
			}
		}
	}public partial class PermissionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.OnBuild); 

		public PermissionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnBuildMethodInvocation;
			}
		}
	}public partial class PrintQueueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PrintQueueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PrintQueue.Meta.ObjectType, PrintQueue.Meta.OnBuild); 

		public PrintQueueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PrintQueueOnBuildMethodInvocation;
			}
		}
	}public partial class RoleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Role.Meta.ObjectType, Role.Meta.OnBuild); 

		public RoleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnBuildMethodInvocation;
			}
		}
	}public partial class SingletonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Singleton.Meta.ObjectType, Singleton.Meta.OnBuild); 

		public SingletonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnBuildMethodInvocation;
			}
		}
	}public partial class UserGroupOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(UserGroup.Meta.ObjectType, UserGroup.Meta.OnBuild); 

		public UserGroupOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.OnBuild); 

		public OrganisationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnBuildMethodInvocation;
			}
		}
	}public partial class UnitOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Unit.Meta.ObjectType, Unit.Meta.OnBuild); 

		public UnitOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOnBuildMethodInvocation;
			}
		}
	}public partial class C1OnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation C1OnBuildMethodInvocation = new Allors.Meta.MethodInvocation(C1.Meta.ObjectType, C1.Meta.OnBuild); 

		public C1OnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1OnBuildMethodInvocation;
			}
		}
	}public partial class ImageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ImageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.OnBuild); 

		public ImageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageOnBuildMethodInvocation;
			}
		}
	}public partial class LoginOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.OnBuild); 

		public LoginOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnBuildMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.OnBuild); 

		public SecurityTokenOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnBuildMethodInvocation;
			}
		}
	}public partial class DependentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DependentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Dependent.Meta.ObjectType, Dependent.Meta.OnBuild); 

		public DependentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependentOnBuildMethodInvocation;
			}
		}
	}public partial class StringTemplateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(StringTemplate.Meta.ObjectType, StringTemplate.Meta.OnBuild); 

		public StringTemplateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnBuildMethodInvocation;
			}
		}
	}public partial class CounterOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Counter.Meta.ObjectType, Counter.Meta.OnBuild); 

		public CounterOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnBuildMethodInvocation;
			}
		}
	}public partial class HomeAddressOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HomeAddressOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(HomeAddress.Meta.ObjectType, HomeAddress.Meta.OnBuild); 

		public HomeAddressOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HomeAddressOnBuildMethodInvocation;
			}
		}
	}public partial class MailboxAddressOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MailboxAddressOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(MailboxAddress.Meta.ObjectType, MailboxAddress.Meta.OnBuild); 

		public MailboxAddressOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MailboxAddressOnBuildMethodInvocation;
			}
		}
	}public partial class C2OnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation C2OnBuildMethodInvocation = new Allors.Meta.MethodInvocation(C2.Meta.ObjectType, C2.Meta.OnBuild); 

		public C2OnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C2OnBuildMethodInvocation;
			}
		}
	}public partial class FourOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FourOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Four.Meta.ObjectType, Four.Meta.OnBuild); 

		public FourOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FourOnBuildMethodInvocation;
			}
		}
	}public partial class OneOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OneOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(One.Meta.ObjectType, One.Meta.OnBuild); 

		public OneOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneOnBuildMethodInvocation;
			}
		}
	}public partial class TwoOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TwoOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Two.Meta.ObjectType, Two.Meta.OnBuild); 

		public TwoOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TwoOnBuildMethodInvocation;
			}
		}
	}public partial class ThreeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThreeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Three.Meta.ObjectType, Three.Meta.OnBuild); 

		public ThreeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThreeOnBuildMethodInvocation;
			}
		}
	}public partial class DerivationLogC1OnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DerivationLogC1OnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DerivationLogC1.Meta.ObjectType, DerivationLogC1.Meta.OnBuild); 

		public DerivationLogC1OnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DerivationLogC1OnBuildMethodInvocation;
			}
		}
	}public partial class DerivationLogC2OnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DerivationLogC2OnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DerivationLogC2.Meta.ObjectType, DerivationLogC2.Meta.OnBuild); 

		public DerivationLogC2OnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DerivationLogC2OnBuildMethodInvocation;
			}
		}
	}public partial class MediaContentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(MediaContent.Meta.ObjectType, MediaContent.Meta.OnBuild); 

		public MediaContentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnBuildMethodInvocation;
			}
		}
	}public partial class TransitionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Transition.Meta.ObjectType, Transition.Meta.OnBuild); 

		public TransitionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnBuildMethodInvocation;
			}
		}
	}public partial class FirstOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FirstOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(First.Meta.ObjectType, First.Meta.OnBuild); 

		public FirstOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FirstOnBuildMethodInvocation;
			}
		}
	}public partial class PlaceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PlaceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Place.Meta.ObjectType, Place.Meta.OnBuild); 

		public PlaceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlaceOnBuildMethodInvocation;
			}
		}
	}public partial class DependeeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DependeeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Dependee.Meta.ObjectType, Dependee.Meta.OnBuild); 

		public DependeeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependeeOnBuildMethodInvocation;
			}
		}
	}public partial class SimpleJobOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SimpleJobOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SimpleJob.Meta.ObjectType, SimpleJob.Meta.OnBuild); 

		public SimpleJobOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SimpleJobOnBuildMethodInvocation;
			}
		}
	}public partial class ThirdOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThirdOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Third.Meta.ObjectType, Third.Meta.OnBuild); 

		public ThirdOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThirdOnBuildMethodInvocation;
			}
		}
	}public partial class SubdependeeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubdependeeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Subdependee.Meta.ObjectType, Subdependee.Meta.OnBuild); 

		public SubdependeeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubdependeeOnBuildMethodInvocation;
			}
		}
	}public partial class FromOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FromOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(From.Meta.ObjectType, From.Meta.OnBuild); 

		public FromOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FromOnBuildMethodInvocation;
			}
		}
	}public partial class StatefulCompanyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StatefulCompanyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(StatefulCompany.Meta.ObjectType, StatefulCompany.Meta.OnBuild); 

		public StatefulCompanyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatefulCompanyOnBuildMethodInvocation;
			}
		}
	}public partial class ToOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ToOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(To.Meta.ObjectType, To.Meta.OnBuild); 

		public ToOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToOnBuildMethodInvocation;
			}
		}
	}public partial class ExtenderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExtenderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Extender.Meta.ObjectType, Extender.Meta.OnBuild); 

		public ExtenderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExtenderOnBuildMethodInvocation;
			}
		}
	}public partial class BadUIOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BadUIOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BadUI.Meta.ObjectType, BadUI.Meta.OnBuild); 

		public BadUIOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BadUIOnBuildMethodInvocation;
			}
		}
	}public partial class SecondOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecondOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Second.Meta.ObjectType, Second.Meta.OnBuild); 

		public SecondOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecondOnBuildMethodInvocation;
			}
		}
	}public partial class ClassWithoutRolesOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ClassWithoutRolesOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ClassWithoutRoles.Meta.ObjectType, ClassWithoutRoles.Meta.OnBuild); 

		public ClassWithoutRolesOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClassWithoutRolesOnBuildMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPostBuild : Allors.Meta.Method
	{
		protected ObjectOnPostBuild(Object @object) : base(@object)
		{
		}
	}

	public partial class GenderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GenderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Gender.Meta.ObjectType, Gender.Meta.OnPostBuild); 

		public GenderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.OnPostBuild); 

		public PersonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccessControlOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.OnPostBuild); 

		public AccessControlOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPostBuildMethodInvocation;
			}
		}
	}public partial class CountryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Country.Meta.ObjectType, Country.Meta.OnPostBuild); 

		public CountryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPostBuildMethodInvocation;
			}
		}
	}public partial class CurrencyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Currency.Meta.ObjectType, Currency.Meta.OnPostBuild); 

		public CurrencyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPostBuildMethodInvocation;
			}
		}
	}public partial class LanguageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Language.Meta.ObjectType, Language.Meta.OnPostBuild); 

		public LanguageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPostBuildMethodInvocation;
			}
		}
	}public partial class LocaleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Locale.Meta.ObjectType, Locale.Meta.OnPostBuild); 

		public LocaleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPostBuildMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(LocalisedText.Meta.ObjectType, LocalisedText.Meta.OnPostBuild); 

		public LocalisedTextOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.OnPostBuild); 

		public MediaOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(MediaType.Meta.ObjectType, MediaType.Meta.OnPostBuild); 

		public MediaTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PermissionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.OnPostBuild); 

		public PermissionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PrintQueueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PrintQueueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PrintQueue.Meta.ObjectType, PrintQueue.Meta.OnPostBuild); 

		public PrintQueueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PrintQueueOnPostBuildMethodInvocation;
			}
		}
	}public partial class RoleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Role.Meta.ObjectType, Role.Meta.OnPostBuild); 

		public RoleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPostBuildMethodInvocation;
			}
		}
	}public partial class SingletonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Singleton.Meta.ObjectType, Singleton.Meta.OnPostBuild); 

		public SingletonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPostBuildMethodInvocation;
			}
		}
	}public partial class UserGroupOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(UserGroup.Meta.ObjectType, UserGroup.Meta.OnPostBuild); 

		public UserGroupOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.OnPostBuild); 

		public OrganisationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPostBuildMethodInvocation;
			}
		}
	}public partial class UnitOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Unit.Meta.ObjectType, Unit.Meta.OnPostBuild); 

		public UnitOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOnPostBuildMethodInvocation;
			}
		}
	}public partial class C1OnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation C1OnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(C1.Meta.ObjectType, C1.Meta.OnPostBuild); 

		public C1OnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1OnPostBuildMethodInvocation;
			}
		}
	}public partial class ImageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ImageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.OnPostBuild); 

		public ImageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageOnPostBuildMethodInvocation;
			}
		}
	}public partial class LoginOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.OnPostBuild); 

		public LoginOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPostBuildMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.OnPostBuild); 

		public SecurityTokenOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPostBuildMethodInvocation;
			}
		}
	}public partial class DependentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DependentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Dependent.Meta.ObjectType, Dependent.Meta.OnPostBuild); 

		public DependentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependentOnPostBuildMethodInvocation;
			}
		}
	}public partial class StringTemplateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(StringTemplate.Meta.ObjectType, StringTemplate.Meta.OnPostBuild); 

		public StringTemplateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnPostBuildMethodInvocation;
			}
		}
	}public partial class CounterOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Counter.Meta.ObjectType, Counter.Meta.OnPostBuild); 

		public CounterOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPostBuildMethodInvocation;
			}
		}
	}public partial class HomeAddressOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HomeAddressOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(HomeAddress.Meta.ObjectType, HomeAddress.Meta.OnPostBuild); 

		public HomeAddressOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HomeAddressOnPostBuildMethodInvocation;
			}
		}
	}public partial class MailboxAddressOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MailboxAddressOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(MailboxAddress.Meta.ObjectType, MailboxAddress.Meta.OnPostBuild); 

		public MailboxAddressOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MailboxAddressOnPostBuildMethodInvocation;
			}
		}
	}public partial class C2OnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation C2OnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(C2.Meta.ObjectType, C2.Meta.OnPostBuild); 

		public C2OnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C2OnPostBuildMethodInvocation;
			}
		}
	}public partial class FourOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FourOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Four.Meta.ObjectType, Four.Meta.OnPostBuild); 

		public FourOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FourOnPostBuildMethodInvocation;
			}
		}
	}public partial class OneOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OneOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(One.Meta.ObjectType, One.Meta.OnPostBuild); 

		public OneOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneOnPostBuildMethodInvocation;
			}
		}
	}public partial class TwoOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TwoOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Two.Meta.ObjectType, Two.Meta.OnPostBuild); 

		public TwoOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TwoOnPostBuildMethodInvocation;
			}
		}
	}public partial class ThreeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThreeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Three.Meta.ObjectType, Three.Meta.OnPostBuild); 

		public ThreeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThreeOnPostBuildMethodInvocation;
			}
		}
	}public partial class DerivationLogC1OnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DerivationLogC1OnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DerivationLogC1.Meta.ObjectType, DerivationLogC1.Meta.OnPostBuild); 

		public DerivationLogC1OnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DerivationLogC1OnPostBuildMethodInvocation;
			}
		}
	}public partial class DerivationLogC2OnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DerivationLogC2OnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DerivationLogC2.Meta.ObjectType, DerivationLogC2.Meta.OnPostBuild); 

		public DerivationLogC2OnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DerivationLogC2OnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaContentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(MediaContent.Meta.ObjectType, MediaContent.Meta.OnPostBuild); 

		public MediaContentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPostBuildMethodInvocation;
			}
		}
	}public partial class TransitionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Transition.Meta.ObjectType, Transition.Meta.OnPostBuild); 

		public TransitionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnPostBuildMethodInvocation;
			}
		}
	}public partial class FirstOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FirstOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(First.Meta.ObjectType, First.Meta.OnPostBuild); 

		public FirstOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FirstOnPostBuildMethodInvocation;
			}
		}
	}public partial class PlaceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PlaceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Place.Meta.ObjectType, Place.Meta.OnPostBuild); 

		public PlaceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlaceOnPostBuildMethodInvocation;
			}
		}
	}public partial class DependeeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DependeeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Dependee.Meta.ObjectType, Dependee.Meta.OnPostBuild); 

		public DependeeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependeeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SimpleJobOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SimpleJobOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SimpleJob.Meta.ObjectType, SimpleJob.Meta.OnPostBuild); 

		public SimpleJobOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SimpleJobOnPostBuildMethodInvocation;
			}
		}
	}public partial class ThirdOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThirdOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Third.Meta.ObjectType, Third.Meta.OnPostBuild); 

		public ThirdOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThirdOnPostBuildMethodInvocation;
			}
		}
	}public partial class SubdependeeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubdependeeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Subdependee.Meta.ObjectType, Subdependee.Meta.OnPostBuild); 

		public SubdependeeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubdependeeOnPostBuildMethodInvocation;
			}
		}
	}public partial class FromOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FromOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(From.Meta.ObjectType, From.Meta.OnPostBuild); 

		public FromOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FromOnPostBuildMethodInvocation;
			}
		}
	}public partial class StatefulCompanyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StatefulCompanyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(StatefulCompany.Meta.ObjectType, StatefulCompany.Meta.OnPostBuild); 

		public StatefulCompanyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatefulCompanyOnPostBuildMethodInvocation;
			}
		}
	}public partial class ToOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ToOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(To.Meta.ObjectType, To.Meta.OnPostBuild); 

		public ToOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToOnPostBuildMethodInvocation;
			}
		}
	}public partial class ExtenderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExtenderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Extender.Meta.ObjectType, Extender.Meta.OnPostBuild); 

		public ExtenderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExtenderOnPostBuildMethodInvocation;
			}
		}
	}public partial class BadUIOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BadUIOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BadUI.Meta.ObjectType, BadUI.Meta.OnPostBuild); 

		public BadUIOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BadUIOnPostBuildMethodInvocation;
			}
		}
	}public partial class SecondOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecondOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Second.Meta.ObjectType, Second.Meta.OnPostBuild); 

		public SecondOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecondOnPostBuildMethodInvocation;
			}
		}
	}public partial class ClassWithoutRolesOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ClassWithoutRolesOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ClassWithoutRoles.Meta.ObjectType, ClassWithoutRoles.Meta.OnPostBuild); 

		public ClassWithoutRolesOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClassWithoutRolesOnPostBuildMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPreDerive : Allors.Meta.Method
	{
		protected ObjectOnPreDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class GenderOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Gender.Meta.ObjectType, Gender.Meta.OnPreDerive); 

		public GenderOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.OnPreDerive); 

		public PersonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.OnPreDerive); 

		public AccessControlOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Country.Meta.ObjectType, Country.Meta.OnPreDerive); 

		public CountryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Currency.Meta.ObjectType, Currency.Meta.OnPreDerive); 

		public CurrencyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Language.Meta.ObjectType, Language.Meta.OnPreDerive); 

		public LanguageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Locale.Meta.ObjectType, Locale.Meta.OnPreDerive); 

		public LocaleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LocalisedText.Meta.ObjectType, LocalisedText.Meta.OnPreDerive); 

		public LocalisedTextOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.OnPreDerive); 

		public MediaOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MediaTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaType.Meta.ObjectType, MediaType.Meta.OnPreDerive); 

		public MediaTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.OnPreDerive); 

		public PermissionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PrintQueueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PrintQueueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PrintQueue.Meta.ObjectType, PrintQueue.Meta.OnPreDerive); 

		public PrintQueueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PrintQueueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Role.Meta.ObjectType, Role.Meta.OnPreDerive); 

		public RoleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Singleton.Meta.ObjectType, Singleton.Meta.OnPreDerive); 

		public SingletonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UserGroup.Meta.ObjectType, UserGroup.Meta.OnPreDerive); 

		public UserGroupOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.OnPreDerive); 

		public OrganisationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UnitOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Unit.Meta.ObjectType, Unit.Meta.OnPreDerive); 

		public UnitOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOnPreDeriveMethodInvocation;
			}
		}
	}public partial class C1OnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation C1OnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(C1.Meta.ObjectType, C1.Meta.OnPreDerive); 

		public C1OnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1OnPreDeriveMethodInvocation;
			}
		}
	}public partial class ImageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ImageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.OnPreDerive); 

		public ImageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.OnPreDerive); 

		public LoginOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.OnPreDerive); 

		public SecurityTokenOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DependentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DependentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Dependent.Meta.ObjectType, Dependent.Meta.OnPreDerive); 

		public DependentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StringTemplateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StringTemplate.Meta.ObjectType, StringTemplate.Meta.OnPreDerive); 

		public StringTemplateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Counter.Meta.ObjectType, Counter.Meta.OnPreDerive); 

		public CounterOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPreDeriveMethodInvocation;
			}
		}
	}public partial class HomeAddressOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HomeAddressOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(HomeAddress.Meta.ObjectType, HomeAddress.Meta.OnPreDerive); 

		public HomeAddressOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HomeAddressOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MailboxAddressOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MailboxAddressOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MailboxAddress.Meta.ObjectType, MailboxAddress.Meta.OnPreDerive); 

		public MailboxAddressOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MailboxAddressOnPreDeriveMethodInvocation;
			}
		}
	}public partial class C2OnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation C2OnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(C2.Meta.ObjectType, C2.Meta.OnPreDerive); 

		public C2OnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C2OnPreDeriveMethodInvocation;
			}
		}
	}public partial class FourOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FourOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Four.Meta.ObjectType, Four.Meta.OnPreDerive); 

		public FourOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FourOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OneOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(One.Meta.ObjectType, One.Meta.OnPreDerive); 

		public OneOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TwoOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TwoOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Two.Meta.ObjectType, Two.Meta.OnPreDerive); 

		public TwoOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TwoOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ThreeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThreeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Three.Meta.ObjectType, Three.Meta.OnPreDerive); 

		public ThreeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThreeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DerivationLogC1OnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DerivationLogC1OnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DerivationLogC1.Meta.ObjectType, DerivationLogC1.Meta.OnPreDerive); 

		public DerivationLogC1OnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DerivationLogC1OnPreDeriveMethodInvocation;
			}
		}
	}public partial class DerivationLogC2OnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DerivationLogC2OnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DerivationLogC2.Meta.ObjectType, DerivationLogC2.Meta.OnPreDerive); 

		public DerivationLogC2OnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DerivationLogC2OnPreDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaContent.Meta.ObjectType, MediaContent.Meta.OnPreDerive); 

		public MediaContentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TransitionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Transition.Meta.ObjectType, Transition.Meta.OnPreDerive); 

		public TransitionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FirstOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FirstOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(First.Meta.ObjectType, First.Meta.OnPreDerive); 

		public FirstOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FirstOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PlaceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PlaceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Place.Meta.ObjectType, Place.Meta.OnPreDerive); 

		public PlaceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlaceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DependeeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DependeeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Dependee.Meta.ObjectType, Dependee.Meta.OnPreDerive); 

		public DependeeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependeeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SimpleJobOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SimpleJobOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SimpleJob.Meta.ObjectType, SimpleJob.Meta.OnPreDerive); 

		public SimpleJobOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SimpleJobOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ThirdOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThirdOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Third.Meta.ObjectType, Third.Meta.OnPreDerive); 

		public ThirdOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThirdOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SubdependeeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubdependeeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Subdependee.Meta.ObjectType, Subdependee.Meta.OnPreDerive); 

		public SubdependeeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubdependeeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FromOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FromOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(From.Meta.ObjectType, From.Meta.OnPreDerive); 

		public FromOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FromOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StatefulCompanyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatefulCompanyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StatefulCompany.Meta.ObjectType, StatefulCompany.Meta.OnPreDerive); 

		public StatefulCompanyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatefulCompanyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ToOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ToOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(To.Meta.ObjectType, To.Meta.OnPreDerive); 

		public ToOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ExtenderOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExtenderOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Extender.Meta.ObjectType, Extender.Meta.OnPreDerive); 

		public ExtenderOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExtenderOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BadUIOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BadUIOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BadUI.Meta.ObjectType, BadUI.Meta.OnPreDerive); 

		public BadUIOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BadUIOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SecondOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecondOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Second.Meta.ObjectType, Second.Meta.OnPreDerive); 

		public SecondOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecondOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ClassWithoutRolesOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClassWithoutRolesOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ClassWithoutRoles.Meta.ObjectType, ClassWithoutRoles.Meta.OnPreDerive); 

		public ClassWithoutRolesOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClassWithoutRolesOnPreDeriveMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnDerive : Allors.Meta.Method
	{
		protected ObjectOnDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class GenderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Gender.Meta.ObjectType, Gender.Meta.OnDerive); 

		public GenderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.OnDerive); 

		public PersonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.OnDerive); 

		public AccessControlOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Country.Meta.ObjectType, Country.Meta.OnDerive); 

		public CountryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Currency.Meta.ObjectType, Currency.Meta.OnDerive); 

		public CurrencyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Language.Meta.ObjectType, Language.Meta.OnDerive); 

		public LanguageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Locale.Meta.ObjectType, Locale.Meta.OnDerive); 

		public LocaleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LocalisedText.Meta.ObjectType, LocalisedText.Meta.OnDerive); 

		public LocalisedTextOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.OnDerive); 

		public MediaOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaType.Meta.ObjectType, MediaType.Meta.OnDerive); 

		public MediaTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.OnDerive); 

		public PermissionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnDeriveMethodInvocation;
			}
		}
	}public partial class PrintQueueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PrintQueueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PrintQueue.Meta.ObjectType, PrintQueue.Meta.OnDerive); 

		public PrintQueueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PrintQueueOnDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Role.Meta.ObjectType, Role.Meta.OnDerive); 

		public RoleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Singleton.Meta.ObjectType, Singleton.Meta.OnDerive); 

		public SingletonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UserGroup.Meta.ObjectType, UserGroup.Meta.OnDerive); 

		public UserGroupOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.OnDerive); 

		public OrganisationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnDeriveMethodInvocation;
			}
		}
	}public partial class UnitOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Unit.Meta.ObjectType, Unit.Meta.OnDerive); 

		public UnitOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOnDeriveMethodInvocation;
			}
		}
	}public partial class C1OnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation C1OnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(C1.Meta.ObjectType, C1.Meta.OnDerive); 

		public C1OnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1OnDeriveMethodInvocation;
			}
		}
	}public partial class ImageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ImageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.OnDerive); 

		public ImageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageOnDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.OnDerive); 

		public LoginOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.OnDerive); 

		public SecurityTokenOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnDeriveMethodInvocation;
			}
		}
	}public partial class DependentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DependentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Dependent.Meta.ObjectType, Dependent.Meta.OnDerive); 

		public DependentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependentOnDeriveMethodInvocation;
			}
		}
	}public partial class StringTemplateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StringTemplate.Meta.ObjectType, StringTemplate.Meta.OnDerive); 

		public StringTemplateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Counter.Meta.ObjectType, Counter.Meta.OnDerive); 

		public CounterOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnDeriveMethodInvocation;
			}
		}
	}public partial class HomeAddressOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HomeAddressOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(HomeAddress.Meta.ObjectType, HomeAddress.Meta.OnDerive); 

		public HomeAddressOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HomeAddressOnDeriveMethodInvocation;
			}
		}
	}public partial class MailboxAddressOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MailboxAddressOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MailboxAddress.Meta.ObjectType, MailboxAddress.Meta.OnDerive); 

		public MailboxAddressOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MailboxAddressOnDeriveMethodInvocation;
			}
		}
	}public partial class C2OnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation C2OnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(C2.Meta.ObjectType, C2.Meta.OnDerive); 

		public C2OnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C2OnDeriveMethodInvocation;
			}
		}
	}public partial class FourOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FourOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Four.Meta.ObjectType, Four.Meta.OnDerive); 

		public FourOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FourOnDeriveMethodInvocation;
			}
		}
	}public partial class OneOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(One.Meta.ObjectType, One.Meta.OnDerive); 

		public OneOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneOnDeriveMethodInvocation;
			}
		}
	}public partial class TwoOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TwoOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Two.Meta.ObjectType, Two.Meta.OnDerive); 

		public TwoOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TwoOnDeriveMethodInvocation;
			}
		}
	}public partial class ThreeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThreeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Three.Meta.ObjectType, Three.Meta.OnDerive); 

		public ThreeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThreeOnDeriveMethodInvocation;
			}
		}
	}public partial class DerivationLogC1OnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DerivationLogC1OnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DerivationLogC1.Meta.ObjectType, DerivationLogC1.Meta.OnDerive); 

		public DerivationLogC1OnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DerivationLogC1OnDeriveMethodInvocation;
			}
		}
	}public partial class DerivationLogC2OnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DerivationLogC2OnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DerivationLogC2.Meta.ObjectType, DerivationLogC2.Meta.OnDerive); 

		public DerivationLogC2OnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DerivationLogC2OnDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaContent.Meta.ObjectType, MediaContent.Meta.OnDerive); 

		public MediaContentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnDeriveMethodInvocation;
			}
		}
	}public partial class TransitionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Transition.Meta.ObjectType, Transition.Meta.OnDerive); 

		public TransitionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnDeriveMethodInvocation;
			}
		}
	}public partial class FirstOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FirstOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(First.Meta.ObjectType, First.Meta.OnDerive); 

		public FirstOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FirstOnDeriveMethodInvocation;
			}
		}
	}public partial class PlaceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PlaceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Place.Meta.ObjectType, Place.Meta.OnDerive); 

		public PlaceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlaceOnDeriveMethodInvocation;
			}
		}
	}public partial class DependeeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DependeeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Dependee.Meta.ObjectType, Dependee.Meta.OnDerive); 

		public DependeeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependeeOnDeriveMethodInvocation;
			}
		}
	}public partial class SimpleJobOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SimpleJobOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SimpleJob.Meta.ObjectType, SimpleJob.Meta.OnDerive); 

		public SimpleJobOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SimpleJobOnDeriveMethodInvocation;
			}
		}
	}public partial class ThirdOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThirdOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Third.Meta.ObjectType, Third.Meta.OnDerive); 

		public ThirdOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThirdOnDeriveMethodInvocation;
			}
		}
	}public partial class SubdependeeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubdependeeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Subdependee.Meta.ObjectType, Subdependee.Meta.OnDerive); 

		public SubdependeeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubdependeeOnDeriveMethodInvocation;
			}
		}
	}public partial class FromOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FromOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(From.Meta.ObjectType, From.Meta.OnDerive); 

		public FromOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FromOnDeriveMethodInvocation;
			}
		}
	}public partial class StatefulCompanyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatefulCompanyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StatefulCompany.Meta.ObjectType, StatefulCompany.Meta.OnDerive); 

		public StatefulCompanyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatefulCompanyOnDeriveMethodInvocation;
			}
		}
	}public partial class ToOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ToOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(To.Meta.ObjectType, To.Meta.OnDerive); 

		public ToOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToOnDeriveMethodInvocation;
			}
		}
	}public partial class ExtenderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExtenderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Extender.Meta.ObjectType, Extender.Meta.OnDerive); 

		public ExtenderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExtenderOnDeriveMethodInvocation;
			}
		}
	}public partial class BadUIOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BadUIOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BadUI.Meta.ObjectType, BadUI.Meta.OnDerive); 

		public BadUIOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BadUIOnDeriveMethodInvocation;
			}
		}
	}public partial class SecondOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecondOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Second.Meta.ObjectType, Second.Meta.OnDerive); 

		public SecondOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecondOnDeriveMethodInvocation;
			}
		}
	}public partial class ClassWithoutRolesOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClassWithoutRolesOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ClassWithoutRoles.Meta.ObjectType, ClassWithoutRoles.Meta.OnDerive); 

		public ClassWithoutRolesOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClassWithoutRolesOnDeriveMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPostDerive : Allors.Meta.Method
	{
		protected ObjectOnPostDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class GenderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Gender.Meta.ObjectType, Gender.Meta.OnPostDerive); 

		public GenderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.OnPostDerive); 

		public PersonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.OnPostDerive); 

		public AccessControlOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Country.Meta.ObjectType, Country.Meta.OnPostDerive); 

		public CountryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Currency.Meta.ObjectType, Currency.Meta.OnPostDerive); 

		public CurrencyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Language.Meta.ObjectType, Language.Meta.OnPostDerive); 

		public LanguageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Locale.Meta.ObjectType, Locale.Meta.OnPostDerive); 

		public LocaleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LocalisedText.Meta.ObjectType, LocalisedText.Meta.OnPostDerive); 

		public LocalisedTextOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.OnPostDerive); 

		public MediaOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaType.Meta.ObjectType, MediaType.Meta.OnPostDerive); 

		public MediaTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.OnPostDerive); 

		public PermissionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PrintQueueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PrintQueueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PrintQueue.Meta.ObjectType, PrintQueue.Meta.OnPostDerive); 

		public PrintQueueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PrintQueueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Role.Meta.ObjectType, Role.Meta.OnPostDerive); 

		public RoleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Singleton.Meta.ObjectType, Singleton.Meta.OnPostDerive); 

		public SingletonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UserGroup.Meta.ObjectType, UserGroup.Meta.OnPostDerive); 

		public UserGroupOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.OnPostDerive); 

		public OrganisationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UnitOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Unit.Meta.ObjectType, Unit.Meta.OnPostDerive); 

		public UnitOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOnPostDeriveMethodInvocation;
			}
		}
	}public partial class C1OnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation C1OnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(C1.Meta.ObjectType, C1.Meta.OnPostDerive); 

		public C1OnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1OnPostDeriveMethodInvocation;
			}
		}
	}public partial class ImageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ImageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.OnPostDerive); 

		public ImageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.OnPostDerive); 

		public LoginOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.OnPostDerive); 

		public SecurityTokenOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DependentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DependentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Dependent.Meta.ObjectType, Dependent.Meta.OnPostDerive); 

		public DependentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StringTemplateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StringTemplate.Meta.ObjectType, StringTemplate.Meta.OnPostDerive); 

		public StringTemplateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Counter.Meta.ObjectType, Counter.Meta.OnPostDerive); 

		public CounterOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPostDeriveMethodInvocation;
			}
		}
	}public partial class HomeAddressOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HomeAddressOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(HomeAddress.Meta.ObjectType, HomeAddress.Meta.OnPostDerive); 

		public HomeAddressOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HomeAddressOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MailboxAddressOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MailboxAddressOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MailboxAddress.Meta.ObjectType, MailboxAddress.Meta.OnPostDerive); 

		public MailboxAddressOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MailboxAddressOnPostDeriveMethodInvocation;
			}
		}
	}public partial class C2OnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation C2OnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(C2.Meta.ObjectType, C2.Meta.OnPostDerive); 

		public C2OnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C2OnPostDeriveMethodInvocation;
			}
		}
	}public partial class FourOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FourOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Four.Meta.ObjectType, Four.Meta.OnPostDerive); 

		public FourOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FourOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OneOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(One.Meta.ObjectType, One.Meta.OnPostDerive); 

		public OneOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TwoOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TwoOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Two.Meta.ObjectType, Two.Meta.OnPostDerive); 

		public TwoOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TwoOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ThreeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThreeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Three.Meta.ObjectType, Three.Meta.OnPostDerive); 

		public ThreeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThreeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DerivationLogC1OnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DerivationLogC1OnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DerivationLogC1.Meta.ObjectType, DerivationLogC1.Meta.OnPostDerive); 

		public DerivationLogC1OnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DerivationLogC1OnPostDeriveMethodInvocation;
			}
		}
	}public partial class DerivationLogC2OnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DerivationLogC2OnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DerivationLogC2.Meta.ObjectType, DerivationLogC2.Meta.OnPostDerive); 

		public DerivationLogC2OnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DerivationLogC2OnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaContent.Meta.ObjectType, MediaContent.Meta.OnPostDerive); 

		public MediaContentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TransitionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Transition.Meta.ObjectType, Transition.Meta.OnPostDerive); 

		public TransitionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FirstOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FirstOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(First.Meta.ObjectType, First.Meta.OnPostDerive); 

		public FirstOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FirstOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PlaceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PlaceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Place.Meta.ObjectType, Place.Meta.OnPostDerive); 

		public PlaceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlaceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DependeeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DependeeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Dependee.Meta.ObjectType, Dependee.Meta.OnPostDerive); 

		public DependeeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependeeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SimpleJobOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SimpleJobOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SimpleJob.Meta.ObjectType, SimpleJob.Meta.OnPostDerive); 

		public SimpleJobOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SimpleJobOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ThirdOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThirdOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Third.Meta.ObjectType, Third.Meta.OnPostDerive); 

		public ThirdOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThirdOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SubdependeeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubdependeeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Subdependee.Meta.ObjectType, Subdependee.Meta.OnPostDerive); 

		public SubdependeeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubdependeeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FromOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FromOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(From.Meta.ObjectType, From.Meta.OnPostDerive); 

		public FromOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FromOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StatefulCompanyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatefulCompanyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StatefulCompany.Meta.ObjectType, StatefulCompany.Meta.OnPostDerive); 

		public StatefulCompanyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatefulCompanyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ToOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ToOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(To.Meta.ObjectType, To.Meta.OnPostDerive); 

		public ToOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ExtenderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExtenderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Extender.Meta.ObjectType, Extender.Meta.OnPostDerive); 

		public ExtenderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExtenderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BadUIOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BadUIOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BadUI.Meta.ObjectType, BadUI.Meta.OnPostDerive); 

		public BadUIOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BadUIOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SecondOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecondOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Second.Meta.ObjectType, Second.Meta.OnPostDerive); 

		public SecondOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecondOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ClassWithoutRolesOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClassWithoutRolesOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ClassWithoutRoles.Meta.ObjectType, ClassWithoutRoles.Meta.OnPostDerive); 

		public ClassWithoutRolesOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClassWithoutRolesOnPostDeriveMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class DeletableDelete : Allors.Meta.Method
	{
		protected DeletableDelete(Deletable @object) : base(@object)
		{
		}
	}

	public partial class AccessControlDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlDeleteMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.Delete); 

		public AccessControlDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlDeleteMethodInvocation;
			}
		}
	}public partial class ImageDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation ImageDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.Delete); 

		public ImageDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageDeleteMethodInvocation;
			}
		}
	}public partial class LoginDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation LoginDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.Delete); 

		public LoginDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginDeleteMethodInvocation;
			}
		}
	}public partial class MediaDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation MediaDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.Delete); 

		public MediaDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaDeleteMethodInvocation;
			}
		}
	}public partial class PermissionDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.Delete); 

		public PermissionDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionDeleteMethodInvocation;
			}
		}
	}public partial class PersonDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PersonDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.Delete); 

		public PersonDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonDeleteMethodInvocation;
			}
		}
	}public partial class SecurityTokenDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenDeleteMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.Delete); 

		public SecurityTokenDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenDeleteMethodInvocation;
			}
		}
	}public partial class DependentDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation DependentDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Dependent.Meta.ObjectType, Dependent.Meta.Delete); 

		public DependentDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependentDeleteMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class S1SuperinterfaceMethod : Allors.Meta.Method
	{
		protected S1SuperinterfaceMethod(S1 @object) : base(@object)
		{
		}
	}

	public partial class C1SuperinterfaceMethod : S1SuperinterfaceMethod
	{
	    private static readonly Allors.Meta.MethodInvocation C1SuperinterfaceMethodMethodInvocation = new Allors.Meta.MethodInvocation(C1.Meta.ObjectType, C1.Meta.SuperinterfaceMethod); 

		public C1SuperinterfaceMethod(S1 @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1SuperinterfaceMethodMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class I1InterfaceMethod : Allors.Meta.Method
	{
		protected I1InterfaceMethod(I1 @object) : base(@object)
		{
		}
	}

	public partial class C1InterfaceMethod : I1InterfaceMethod
	{
	    private static readonly Allors.Meta.MethodInvocation C1InterfaceMethodMethodInvocation = new Allors.Meta.MethodInvocation(C1.Meta.ObjectType, C1.Meta.InterfaceMethod); 

		public C1InterfaceMethod(I1 @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1InterfaceMethodMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class OrganisationJustDoIt : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationJustDoItInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.JustDoIt); 

		public OrganisationJustDoIt(Organisation @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationJustDoItInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class C1ClassMethod : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation C1ClassMethodInvocation = new Allors.Meta.MethodInvocation(C1.Meta.ObjectType, C1.Meta.ClassMethod); 

		public C1ClassMethod(C1 @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1ClassMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class C1Sum : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation C1SumInvocation = new Allors.Meta.MethodInvocation(C1.Meta.ObjectType, C1.Meta.Sum); 

		public C1Sum(C1 @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1SumInvocation;
			}
		}
	}
}
// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class Counter : Allors.ObjectBase , UniquelyIdentifiable
	{
		public static readonly CounterMeta Meta = CounterMeta.Instance;

		public Counter(Allors.IStrategy allors) : base(allors) {}

		public static Counter Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Counter) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.Int32 Value 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.Value);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Value, value);
			}
		}

		virtual public bool ExistValue{
			get
			{
				return Strategy.ExistUnitRole(Meta.Value);
			}
		}

		virtual public void RemoveValue()
		{
			Strategy.RemoveUnitRole(Meta.Value);
		}



		virtual public global::System.Guid UniqueId 
		{
			get
			{
				return (global::System.Guid) Strategy.GetUnitRole(Meta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(Meta.UniqueId);
		}

	}

	public class CounterMeta
	{
		public static readonly CounterMeta Instance = new CounterMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.Counter;

		public global::Allors.Meta.RoleType Value 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.CounterValue;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 

	}
}
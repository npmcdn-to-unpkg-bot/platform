// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class Locale : Allors.ObjectBase , UserInterfaceable
	{
		public static readonly LocaleMeta Meta = LocaleMeta.Instance;

		public Locale(Allors.IStrategy allors) : base(allors) {}

		public static Locale Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Locale) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Name);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(Meta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(Meta.Name);
		}


		virtual public Language Language
		{ 
			get
			{
				return (Language) Strategy.GetCompositeRole(Meta.Language);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Language ,value);
			}
		}

		virtual public bool ExistLanguage
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Language);
			}
		}

		virtual public void RemoveLanguage()
		{
			Strategy.RemoveCompositeRole(Meta.Language);
		}


		virtual public Country Country
		{ 
			get
			{
				return (Country) Strategy.GetCompositeRole(Meta.Country);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Country ,value);
			}
		}

		virtual public bool ExistCountry
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Country);
			}
		}

		virtual public void RemoveCountry()
		{
			Strategy.RemoveCompositeRole(Meta.Country);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::Allors.Extent<Singleton> SingletonsWhereDefaultLocale
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SingletonsWhereDefaultLocale);
			}
		}

		virtual public bool ExistSingletonsWhereDefaultLocale
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SingletonsWhereDefaultLocale);
			}
		}


		virtual public Singleton SingletonWhereLocale
		{ 
			get
			{
				return (Singleton) Strategy.GetCompositeAssociation(Meta.SingletonWhereLocale);
			}
		} 

		virtual public bool ExistSingletonWhereLocale
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.SingletonWhereLocale);
			}
		}


		virtual public global::Allors.Extent<Localised> LocalisedsWhereLocale
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.LocalisedsWhereLocale);
			}
		}

		virtual public bool ExistLocalisedsWhereLocale
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.LocalisedsWhereLocale);
			}
		}

	}

	public class LocaleMeta
	{
		public static readonly LocaleMeta Instance = new LocaleMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.Locale;

		public global::Allors.Meta.RoleType Name 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.LocaleName;
			}
		} 
		public global::Allors.Meta.RoleType Language 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.LocaleLanguage;
			}
		} 
		public global::Allors.Meta.RoleType Country 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.LocaleCountry;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType SingletonsWhereDefaultLocale 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SingletonDefaultLocale;
			}
		} 
		public global::Allors.Meta.AssociationType SingletonWhereLocale 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SingletonLocale;
			}
		} 
		public global::Allors.Meta.AssociationType LocalisedsWhereLocale 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.LocalisedLocale;
			}
		} 

	}
}
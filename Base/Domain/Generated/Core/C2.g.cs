// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class C2 : Allors.ObjectBase , I2
	{
		public static readonly C2Meta Meta = C2Meta.Instance;

		public C2(Allors.IStrategy allors) : base(allors) {}

		public static C2 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C2) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.Decimal? C2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.C2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsDecimal, value);
			}
		}

		virtual public bool ExistC2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsDecimal);
			}
		}

		virtual public void RemoveC2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsDecimal);
		}


		virtual public C1 C2C1One2One
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C2C1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2C1One2One ,value);
			}
		}

		virtual public bool ExistC2C1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2C1One2One);
			}
		}

		virtual public void RemoveC2C1One2One()
		{
			Strategy.RemoveCompositeRole(Meta.C2C1One2One);
		}


		virtual public C2 C2C2Many2One
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C2C2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2C2Many2One ,value);
			}
		}

		virtual public bool ExistC2C2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2C2Many2One);
			}
		}

		virtual public void RemoveC2C2Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.C2C2Many2One);
		}



		virtual public global::System.Guid? C2AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(Meta.C2AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsUnique, value);
			}
		}

		virtual public bool ExistC2AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsUnique);
			}
		}

		virtual public void RemoveC2AllorsUnique()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsUnique);
		}


		virtual public I12 C2I12Many2One
		{ 
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.C2I12Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2I12Many2One ,value);
			}
		}

		virtual public bool ExistC2I12Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2I12Many2One);
			}
		}

		virtual public void RemoveC2I12Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.C2I12Many2One);
		}


		virtual public I12 C2I12One2One
		{ 
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.C2I12One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2I12One2One ,value);
			}
		}

		virtual public bool ExistC2I12One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2I12One2One);
			}
		}

		virtual public void RemoveC2I12One2One()
		{
			Strategy.RemoveCompositeRole(Meta.C2I12One2One);
		}


		virtual public global::Allors.Extent<I1> C2I1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2I1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2I1Many2Many, value);
			}
		}

		virtual public void AddC2I1Many2Many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.C2I1Many2Many, value);
		}

		virtual public void RemoveC2I1Many2Many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2I1Many2Many,value);
		}

		virtual public bool ExistC2I1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2I1Many2Many);
			}
		}

		virtual public void RemoveC2I1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2I1Many2Many);
		}



		virtual public global::System.Double? C2AllorsFloat 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.C2AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsFloat, value);
			}
		}

		virtual public bool ExistC2AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsFloat);
			}
		}

		virtual public void RemoveC2AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsFloat);
		}


		virtual public global::Allors.Extent<I1> C2I1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2I1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2I1One2Many, value);
			}
		}

		virtual public void AddC2I1One2Many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.C2I1One2Many, value);
		}

		virtual public void RemoveC2I1One2Many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2I1One2Many,value);
		}

		virtual public bool ExistC2I1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2I1One2Many);
			}
		}

		virtual public void RemoveC2I1One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2I1One2Many);
		}


		virtual public I2 C2I2One2One
		{ 
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.C2I2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2I2One2One ,value);
			}
		}

		virtual public bool ExistC2I2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2I2One2One);
			}
		}

		virtual public void RemoveC2I2One2One()
		{
			Strategy.RemoveCompositeRole(Meta.C2I2One2One);
		}



		virtual public global::System.Int32? C2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.C2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsInteger, value);
			}
		}

		virtual public bool ExistC2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsInteger);
			}
		}

		virtual public void RemoveC2AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsInteger);
		}


		virtual public global::Allors.Extent<I2> C2I2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2I2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2I2Many2Many, value);
			}
		}

		virtual public void AddC2I2Many2Many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.C2I2Many2Many, value);
		}

		virtual public void RemoveC2I2Many2Many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2I2Many2Many,value);
		}

		virtual public bool ExistC2I2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2I2Many2Many);
			}
		}

		virtual public void RemoveC2I2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2I2Many2Many);
		}


		virtual public global::Allors.Extent<I12> C2I12Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2I12Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2I12Many2Many, value);
			}
		}

		virtual public void AddC2I12Many2Many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.C2I12Many2Many, value);
		}

		virtual public void RemoveC2I12Many2Many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2I12Many2Many,value);
		}

		virtual public bool ExistC2I12Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2I12Many2Many);
			}
		}

		virtual public void RemoveC2I12Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2I12Many2Many);
		}


		virtual public global::Allors.Extent<C2> C2C2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2C2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2C2One2Many, value);
			}
		}

		virtual public void AddC2C2One2Many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C2C2One2Many, value);
		}

		virtual public void RemoveC2C2One2Many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2C2One2Many,value);
		}

		virtual public bool ExistC2C2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2C2One2Many);
			}
		}

		virtual public void RemoveC2C2One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2C2One2Many);
		}



		virtual public global::System.Boolean? C2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.C2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsBoolean, value);
			}
		}

		virtual public bool ExistC2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsBoolean);
			}
		}

		virtual public void RemoveC2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsBoolean);
		}


		virtual public I1 C2I1Many2One
		{ 
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.C2I1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2I1Many2One ,value);
			}
		}

		virtual public bool ExistC2I1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2I1Many2One);
			}
		}

		virtual public void RemoveC2I1Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.C2I1Many2One);
		}


		virtual public I1 C2I1One2One
		{ 
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.C2I1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2I1One2One ,value);
			}
		}

		virtual public bool ExistC2I1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2I1One2One);
			}
		}

		virtual public void RemoveC2I1One2One()
		{
			Strategy.RemoveCompositeRole(Meta.C2I1One2One);
		}


		virtual public global::Allors.Extent<C1> C2C1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2C1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2C1Many2Many, value);
			}
		}

		virtual public void AddC2C1Many2Many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.C2C1Many2Many, value);
		}

		virtual public void RemoveC2C1Many2Many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2C1Many2Many,value);
		}

		virtual public bool ExistC2C1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2C1Many2Many);
			}
		}

		virtual public void RemoveC2C1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2C1Many2Many);
		}


		virtual public global::Allors.Extent<I12> C2I12One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2I12One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2I12One2Many, value);
			}
		}

		virtual public void AddC2I12One2Many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.C2I12One2Many, value);
		}

		virtual public void RemoveC2I12One2Many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2I12One2Many,value);
		}

		virtual public bool ExistC2I12One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2I12One2Many);
			}
		}

		virtual public void RemoveC2I12One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2I12One2Many);
		}


		virtual public global::Allors.Extent<I2> C2I2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2I2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2I2One2Many, value);
			}
		}

		virtual public void AddC2I2One2Many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.C2I2One2Many, value);
		}

		virtual public void RemoveC2I2One2Many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2I2One2Many,value);
		}

		virtual public bool ExistC2I2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2I2One2Many);
			}
		}

		virtual public void RemoveC2I2One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2I2One2Many);
		}


		virtual public C2 C2C2One2One
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C2C2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2C2One2One ,value);
			}
		}

		virtual public bool ExistC2C2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2C2One2One);
			}
		}

		virtual public void RemoveC2C2One2One()
		{
			Strategy.RemoveCompositeRole(Meta.C2C2One2One);
		}



		virtual public global::System.String C2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsString, value);
			}
		}

		virtual public bool ExistC2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsString);
			}
		}

		virtual public void RemoveC2AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsString);
		}


		virtual public C1 C2C1Many2One
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C2C1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2C1Many2One ,value);
			}
		}

		virtual public bool ExistC2C1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2C1Many2One);
			}
		}

		virtual public void RemoveC2C1Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.C2C1Many2One);
		}


		virtual public global::Allors.Extent<C2> C2C2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2C2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2C2Many2Many, value);
			}
		}

		virtual public void AddC2C2Many2Many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C2C2Many2Many, value);
		}

		virtual public void RemoveC2C2Many2Many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2C2Many2Many,value);
		}

		virtual public bool ExistC2C2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2C2Many2Many);
			}
		}

		virtual public void RemoveC2C2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2C2Many2Many);
		}


		virtual public I2 C2I2Many2One
		{ 
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.C2I2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2I2Many2One ,value);
			}
		}

		virtual public bool ExistC2I2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2I2Many2One);
			}
		}

		virtual public void RemoveC2I2Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.C2I2Many2One);
		}


		virtual public global::Allors.Extent<C1> C2C1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2C1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2C1One2Many, value);
			}
		}

		virtual public void AddC2C1One2Many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.C2C1One2Many, value);
		}

		virtual public void RemoveC2C1One2Many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2C1One2Many,value);
		}

		virtual public bool ExistC2C1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2C1One2Many);
			}
		}

		virtual public void RemoveC2C1One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2C1One2Many);
		}



		virtual public global::System.Byte[] C2AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(Meta.C2AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsBinary, value);
			}
		}

		virtual public bool ExistC2AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsBinary);
			}
		}

		virtual public void RemoveC2AllorsBinary()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsBinary);
		}


		virtual public I2 I2I2Many2One
		{ 
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.I2I2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I2I2Many2One ,value);
			}
		}

		virtual public bool ExistI2I2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I2I2Many2One);
			}
		}

		virtual public void RemoveI2I2Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.I2I2Many2One);
		}


		virtual public C1 I2C1Many2One
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.I2C1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I2C1Many2One ,value);
			}
		}

		virtual public bool ExistI2C1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I2C1Many2One);
			}
		}

		virtual public void RemoveI2C1Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.I2C1Many2One);
		}


		virtual public I12 I2I12Many2One
		{ 
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.I2I12Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I2I12Many2One ,value);
			}
		}

		virtual public bool ExistI2I12Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I2I12Many2One);
			}
		}

		virtual public void RemoveI2I12Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.I2I12Many2One);
		}



		virtual public global::System.Boolean? I2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.I2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsBoolean, value);
			}
		}

		virtual public bool ExistI2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsBoolean);
			}
		}

		virtual public void RemoveI2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsBoolean);
		}


		virtual public global::Allors.Extent<C1> I2C1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I2C1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I2C1One2Many, value);
			}
		}

		virtual public void AddI2C1One2Many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.I2C1One2Many, value);
		}

		virtual public void RemoveI2C1One2Many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I2C1One2Many,value);
		}

		virtual public bool ExistI2C1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I2C1One2Many);
			}
		}

		virtual public void RemoveI2C1One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I2C1One2Many);
		}


		virtual public C1 I2C1One2One
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.I2C1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I2C1One2One ,value);
			}
		}

		virtual public bool ExistI2C1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I2C1One2One);
			}
		}

		virtual public void RemoveI2C1One2One()
		{
			Strategy.RemoveCompositeRole(Meta.I2C1One2One);
		}



		virtual public global::System.Decimal? I2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsDecimal, value);
			}
		}

		virtual public bool ExistI2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsDecimal);
			}
		}

		virtual public void RemoveI2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsDecimal);
		}


		virtual public global::Allors.Extent<I2> I2I2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I2Many2any);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I2Many2any, value);
			}
		}

		virtual public void AddI2Many2any (I2 value)
		{
			Strategy.AddCompositeRole(Meta.I2Many2any, value);
		}

		virtual public void RemoveI2Many2any (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I2Many2any,value);
		}

		virtual public bool ExistI2I2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I2Many2any);
			}
		}

		virtual public void RemoveI2I2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I2Many2any);
		}



		virtual public global::System.Byte[] I2AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(Meta.I2AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsBinary, value);
			}
		}

		virtual public bool ExistI2AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsBinary);
			}
		}

		virtual public void RemoveI2AllorsBinary()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsBinary);
		}



		virtual public global::System.Guid? I2AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(Meta.I2AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsUnique, value);
			}
		}

		virtual public bool ExistI2AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsUnique);
			}
		}

		virtual public void RemoveI2AllorsUnique()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsUnique);
		}


		virtual public I1 I2I1Many2One
		{ 
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.I2I1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I2I1Many2One ,value);
			}
		}

		virtual public bool ExistI2I1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I2I1Many2One);
			}
		}

		virtual public void RemoveI2I1Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.I2I1Many2One);
		}


		virtual public global::Allors.Extent<I12> I2I12One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I2I12One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I2I12One2Many, value);
			}
		}

		virtual public void AddI2I12One2Many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.I2I12One2Many, value);
		}

		virtual public void RemoveI2I12One2Many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.I2I12One2Many,value);
		}

		virtual public bool ExistI2I12One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I2I12One2Many);
			}
		}

		virtual public void RemoveI2I12One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I2I12One2Many);
		}


		virtual public I12 I2I12One2One
		{ 
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.I2I12One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I2I12One2One ,value);
			}
		}

		virtual public bool ExistI2I12One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I2I12One2One);
			}
		}

		virtual public void RemoveI2I12One2One()
		{
			Strategy.RemoveCompositeRole(Meta.I2I12One2One);
		}


		virtual public global::Allors.Extent<C2> I2C2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I2C2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I2C2Many2Many, value);
			}
		}

		virtual public void AddI2C2Many2Many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I2C2Many2Many, value);
		}

		virtual public void RemoveI2C2Many2Many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I2C2Many2Many,value);
		}

		virtual public bool ExistI2C2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I2C2Many2Many);
			}
		}

		virtual public void RemoveI2C2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I2C2Many2Many);
		}


		virtual public global::Allors.Extent<I1> I2I1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I2I1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I2I1Many2Many, value);
			}
		}

		virtual public void AddI2I1Many2Many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.I2I1Many2Many, value);
		}

		virtual public void RemoveI2I1Many2Many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I2I1Many2Many,value);
		}

		virtual public bool ExistI2I1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I2I1Many2Many);
			}
		}

		virtual public void RemoveI2I1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I2I1Many2Many);
		}


		virtual public C2 I2C2Many2One
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I2C2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I2C2Many2One ,value);
			}
		}

		virtual public bool ExistI2C2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I2C2Many2One);
			}
		}

		virtual public void RemoveI2C2Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.I2C2Many2One);
		}



		virtual public global::System.String I2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsString, value);
			}
		}

		virtual public bool ExistI2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsString);
			}
		}

		virtual public void RemoveI2AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsString);
		}


		virtual public global::Allors.Extent<C2> I2C2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I2C2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I2C2One2Many, value);
			}
		}

		virtual public void AddI2C2One2Many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I2C2One2Many, value);
		}

		virtual public void RemoveI2C2One2Many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I2C2One2Many,value);
		}

		virtual public bool ExistI2C2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I2C2One2Many);
			}
		}

		virtual public void RemoveI2C2One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I2C2One2Many);
		}


		virtual public I1 I2I1One2One
		{ 
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.I2I1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I2I1One2One ,value);
			}
		}

		virtual public bool ExistI2I1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I2I1One2One);
			}
		}

		virtual public void RemoveI2I1One2One()
		{
			Strategy.RemoveCompositeRole(Meta.I2I1One2One);
		}


		virtual public global::Allors.Extent<I1> I2I1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I2I1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I2I1One2Many, value);
			}
		}

		virtual public void AddI2I1One2Many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.I2I1One2Many, value);
		}

		virtual public void RemoveI2I1One2Many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I2I1One2Many,value);
		}

		virtual public bool ExistI2I1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I2I1One2Many);
			}
		}

		virtual public void RemoveI2I1One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I2I1One2Many);
		}


		virtual public global::Allors.Extent<I12> I2I12Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I2I12Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I2I12Many2Many, value);
			}
		}

		virtual public void AddI2I12Many2Many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.I2I12Many2Many, value);
		}

		virtual public void RemoveI2I12Many2Many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.I2I12Many2Many,value);
		}

		virtual public bool ExistI2I12Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I2I12Many2Many);
			}
		}

		virtual public void RemoveI2I12Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I2I12Many2Many);
		}


		virtual public I2 I2I2One2One
		{ 
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.I2I2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I2I2One2One ,value);
			}
		}

		virtual public bool ExistI2I2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I2I2One2One);
			}
		}

		virtual public void RemoveI2I2One2One()
		{
			Strategy.RemoveCompositeRole(Meta.I2I2One2One);
		}



		virtual public global::System.Int32? I2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsInteger, value);
			}
		}

		virtual public bool ExistI2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsInteger);
			}
		}

		virtual public void RemoveI2AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsInteger);
		}


		virtual public global::Allors.Extent<I2> I2I2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I2I2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I2I2One2Many, value);
			}
		}

		virtual public void AddI2I2One2Many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.I2I2One2Many, value);
		}

		virtual public void RemoveI2I2One2Many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I2I2One2Many,value);
		}

		virtual public bool ExistI2I2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I2I2One2Many);
			}
		}

		virtual public void RemoveI2I2One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I2I2One2Many);
		}


		virtual public global::Allors.Extent<C1> I2C1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I2C1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I2C1Many2Many, value);
			}
		}

		virtual public void AddI2C1Many2Many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.I2C1Many2Many, value);
		}

		virtual public void RemoveI2C1Many2Many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I2C1Many2Many,value);
		}

		virtual public bool ExistI2C1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I2C1Many2Many);
			}
		}

		virtual public void RemoveI2C1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I2C1Many2Many);
		}


		virtual public C2 I2C2One2One
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I2C2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I2C2One2One ,value);
			}
		}

		virtual public bool ExistI2C2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I2C2One2One);
			}
		}

		virtual public void RemoveI2C2One2One()
		{
			Strategy.RemoveCompositeRole(Meta.I2C2One2One);
		}



		virtual public global::System.Double? I2AllorsFloat 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I2AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsFloat, value);
			}
		}

		virtual public bool ExistI2AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsFloat);
			}
		}

		virtual public void RemoveI2AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsFloat);
		}



		virtual public global::System.Byte[] I12AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(Meta.I12AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsBinary, value);
			}
		}

		virtual public bool ExistI12AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsBinary);
			}
		}

		virtual public void RemoveI12AllorsBinary()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsBinary);
		}


		virtual public C2 I12C2One2One
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I12C2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C2One2One ,value);
			}
		}

		virtual public bool ExistI12C2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C2One2One);
			}
		}

		virtual public void RemoveI12C2One2One()
		{
			Strategy.RemoveCompositeRole(Meta.I12C2One2One);
		}



		virtual public global::System.Double? I12AllorsFloat 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I12AllorsFloat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsFloat, value);
			}
		}

		virtual public bool ExistI12AllorsFloat{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsFloat);
			}
		}

		virtual public void RemoveI12AllorsFloat()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsFloat);
		}


		virtual public I1 I12I1Many2One
		{ 
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.I12I1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I1Many2One ,value);
			}
		}

		virtual public bool ExistI12I1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I1Many2One);
			}
		}

		virtual public void RemoveI12I1Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.I12I1Many2One);
		}



		virtual public global::System.String I12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsString, value);
			}
		}

		virtual public bool ExistI12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsString);
			}
		}

		virtual public void RemoveI12AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsString);
		}


		virtual public global::Allors.Extent<I12> I12I12Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I12Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I12Many2Many, value);
			}
		}

		virtual public void AddI12I12Many2Many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.I12I12Many2Many, value);
		}

		virtual public void RemoveI12I12Many2Many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I12Many2Many,value);
		}

		virtual public bool ExistI12I12Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I12Many2Many);
			}
		}

		virtual public void RemoveI12I12Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I12Many2Many);
		}



		virtual public global::System.Decimal? I12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDecimal, value);
			}
		}

		virtual public bool ExistI12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDecimal);
			}
		}

		virtual public void RemoveI12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDecimal);
		}


		virtual public global::Allors.Extent<I2> I12I2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I2Many2Many, value);
			}
		}

		virtual public void AddI12I2Many2Many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.I12I2Many2Many, value);
		}

		virtual public void RemoveI12I2Many2Many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I2Many2Many,value);
		}

		virtual public bool ExistI12I2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I2Many2Many);
			}
		}

		virtual public void RemoveI12I2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I2Many2Many);
		}


		virtual public global::Allors.Extent<C2> I12C2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C2Many2Many, value);
			}
		}

		virtual public void AddI12C2Many2Many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I12C2Many2Many, value);
		}

		virtual public void RemoveI12C2Many2Many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C2Many2Many,value);
		}

		virtual public bool ExistI12C2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C2Many2Many);
			}
		}

		virtual public void RemoveI12C2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C2Many2Many);
		}


		virtual public global::Allors.Extent<I1> I12I1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I1Many2Many, value);
			}
		}

		virtual public void AddI12I1Many2Many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.I12I1Many2Many, value);
		}

		virtual public void RemoveI12I1Many2Many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I1Many2Many,value);
		}

		virtual public bool ExistI12I1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I1Many2Many);
			}
		}

		virtual public void RemoveI12I1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I1Many2Many);
		}


		virtual public global::Allors.Extent<I12> I12I12One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I12One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I12One2Many, value);
			}
		}

		virtual public void AddI12I12One2Many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.I12I12One2Many, value);
		}

		virtual public void RemoveI12I12One2Many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I12One2Many,value);
		}

		virtual public bool ExistI12I12One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I12One2Many);
			}
		}

		virtual public void RemoveI12I12One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I12One2Many);
		}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Name);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(Meta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(Meta.Name);
		}


		virtual public global::Allors.Extent<C1> I12C1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C1Many2Many, value);
			}
		}

		virtual public void AddI12C1Many2Many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.I12C1Many2Many, value);
		}

		virtual public void RemoveI12C1Many2Many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C1Many2Many,value);
		}

		virtual public bool ExistI12C1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C1Many2Many);
			}
		}

		virtual public void RemoveI12C1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C1Many2Many);
		}


		virtual public I2 I12I2Many2One
		{ 
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.I12I2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I2Many2One ,value);
			}
		}

		virtual public bool ExistI12I2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I2Many2One);
			}
		}

		virtual public void RemoveI12I2Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.I12I2Many2One);
		}



		virtual public global::System.Guid? I12AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(Meta.I12AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsUnique, value);
			}
		}

		virtual public bool ExistI12AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsUnique);
			}
		}

		virtual public void RemoveI12AllorsUnique()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsUnique);
		}



		virtual public global::System.Int32? I12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsInteger, value);
			}
		}

		virtual public bool ExistI12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsInteger);
			}
		}

		virtual public void RemoveI12AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsInteger);
		}


		virtual public global::Allors.Extent<I1> I12I1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I1One2Many, value);
			}
		}

		virtual public void AddI12I1One2Many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.I12I1One2Many, value);
		}

		virtual public void RemoveI12I1One2Many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I1One2Many,value);
		}

		virtual public bool ExistI12I1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I1One2Many);
			}
		}

		virtual public void RemoveI12I1One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I1One2Many);
		}


		virtual public C1 I12C1One2One
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.I12C1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C1One2One ,value);
			}
		}

		virtual public bool ExistI12C1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C1One2One);
			}
		}

		virtual public void RemoveI12C1One2One()
		{
			Strategy.RemoveCompositeRole(Meta.I12C1One2One);
		}


		virtual public I12 I12I12One2One
		{ 
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.I12I12One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I12One2One ,value);
			}
		}

		virtual public bool ExistI12I12One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I12One2One);
			}
		}

		virtual public void RemoveI12I12One2One()
		{
			Strategy.RemoveCompositeRole(Meta.I12I12One2One);
		}


		virtual public I2 I12I2One2One
		{ 
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.I12I2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I2One2One ,value);
			}
		}

		virtual public bool ExistI12I2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I2One2One);
			}
		}

		virtual public void RemoveI12I2One2One()
		{
			Strategy.RemoveCompositeRole(Meta.I12I2One2One);
		}


		virtual public global::Allors.Extent<I12> Dependencies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Dependency);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Dependency, value);
			}
		}

		virtual public void AddDependency (I12 value)
		{
			Strategy.AddCompositeRole(Meta.Dependency, value);
		}

		virtual public void RemoveDependency (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.Dependency,value);
		}

		virtual public bool ExistDependencies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Dependency);
			}
		}

		virtual public void RemoveDependencies()
		{
			Strategy.RemoveCompositeRoles(Meta.Dependency);
		}


		virtual public global::Allors.Extent<I2> I12I2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I2One2Many, value);
			}
		}

		virtual public void AddI12I2One2Many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.I12I2One2Many, value);
		}

		virtual public void RemoveI12I2One2Many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I2One2Many,value);
		}

		virtual public bool ExistI12I2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I2One2Many);
			}
		}

		virtual public void RemoveI12I2One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I2One2Many);
		}


		virtual public C2 I12C2Many2One
		{ 
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I12C2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C2Many2One ,value);
			}
		}

		virtual public bool ExistI12C2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C2Many2One);
			}
		}

		virtual public void RemoveI12C2Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.I12C2Many2One);
		}


		virtual public I12 I12I12Many2One
		{ 
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.I12I12Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I12Many2One ,value);
			}
		}

		virtual public bool ExistI12I12Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I12Many2One);
			}
		}

		virtual public void RemoveI12I12Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.I12I12Many2One);
		}



		virtual public global::System.Boolean? I12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.I12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsBoolean, value);
			}
		}

		virtual public bool ExistI12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsBoolean);
			}
		}

		virtual public void RemoveI12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsBoolean);
		}


		virtual public I1 I12I1One2One
		{ 
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.I12I1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I1One2One ,value);
			}
		}

		virtual public bool ExistI12I1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I1One2One);
			}
		}

		virtual public void RemoveI12I1One2One()
		{
			Strategy.RemoveCompositeRole(Meta.I12I1One2One);
		}


		virtual public global::Allors.Extent<C1> I12C1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C1One2Many, value);
			}
		}

		virtual public void AddI12C1One2Many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.I12C1One2Many, value);
		}

		virtual public void RemoveI12C1One2Many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C1One2Many,value);
		}

		virtual public bool ExistI12C1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C1One2Many);
			}
		}

		virtual public void RemoveI12C1One2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C1One2Many);
		}


		virtual public C1 I12C1Many2One
		{ 
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.I12C1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C1Many2One ,value);
			}
		}

		virtual public bool ExistI12C1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C1Many2One);
			}
		}

		virtual public void RemoveI12C1Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.I12C1Many2One);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::Allors.Extent<I2> I2sWhereC2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I2sWhereC2Many2Many);
			}
		}

		virtual public bool ExistI2sWhereC2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I2sWhereC2Many2Many);
			}
		}


		virtual public global::Allors.Extent<I2> I2sWhereC2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I2sWhereC2Many2One);
			}
		}

		virtual public bool ExistI2sWhereC2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I2sWhereC2Many2One);
			}
		}


		virtual public I2 I2WhereC2One2Many
		{ 
			get
			{
				return (I2) Strategy.GetCompositeAssociation(Meta.I2WhereC2One2Many);
			}
		} 

		virtual public bool ExistI2WhereC2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I2WhereC2One2Many);
			}
		}


		virtual public I2 I2WhereC2One2One
		{ 
			get
			{
				return (I2) Strategy.GetCompositeAssociation(Meta.I2WhereC2One2One);
			}
		} 

		virtual public bool ExistI2WhereC2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I2WhereC2One2One);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC2Many2One);
			}
		}

		virtual public bool ExistC1sWhereC2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC2Many2One);
			}
		}


		virtual public C1 C1WhereC2One2Many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC2One2Many);
			}
		} 

		virtual public bool ExistC1WhereC2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC2One2Many);
			}
		}


		virtual public C1 C1WhereC2One2One
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC2One2One);
			}
		} 

		virtual public bool ExistC1WhereC2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC2One2One);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC2Many2Many);
			}
		}

		virtual public bool ExistC1sWhereC2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC2Many2Many);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC2Many2One);
			}
		}

		virtual public bool ExistC2sWhereC2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC2Many2One);
			}
		}


		virtual public C2 C2WhereC2One2Many
		{ 
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereC2One2Many);
			}
		} 

		virtual public bool ExistC2WhereC2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereC2One2Many);
			}
		}


		virtual public C2 C2WhereC2One2One
		{ 
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereC2One2One);
			}
		} 

		virtual public bool ExistC2WhereC2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereC2One2One);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC2Many2Many);
			}
		}

		virtual public bool ExistC2sWhereC2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC2Many2Many);
			}
		}


		virtual public I12 I12WhereC2One2One
		{ 
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereC2One2One);
			}
		} 

		virtual public bool ExistI12WhereC2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereC2One2One);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereC2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereC2Many2Many);
			}
		}

		virtual public bool ExistI12sWhereC2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereC2Many2Many);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereC2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereC2Many2One);
			}
		}

		virtual public bool ExistI12sWhereC2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereC2Many2One);
			}
		}


		virtual public I1 I1WhereC2One2Many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereC2One2Many);
			}
		} 

		virtual public bool ExistI1WhereC2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereC2One2Many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereC2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereC2Many2Many);
			}
		}

		virtual public bool ExistI1sWhereC2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereC2Many2Many);
			}
		}


		virtual public I1 I1WhereC2One2One
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereC2One2One);
			}
		} 

		virtual public bool ExistI1WhereC2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereC2One2One);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereC2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereC2Many2One);
			}
		}

		virtual public bool ExistI1sWhereC2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereC2Many2One);
			}
		}


		virtual public global::Allors.Extent<I2> I2sWhereI2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I2sWhereI2Many2One);
			}
		}

		virtual public bool ExistI2sWhereI2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I2sWhereI2Many2One);
			}
		}


		virtual public global::Allors.Extent<I2> I2sWhereI2Many2any
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I2sWhereI2Many2any);
			}
		}

		virtual public bool ExistI2sWhereI2Many2any
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I2sWhereI2Many2any);
			}
		}


		virtual public I2 I2WhereI2One2One
		{ 
			get
			{
				return (I2) Strategy.GetCompositeAssociation(Meta.I2WhereI2One2One);
			}
		} 

		virtual public bool ExistI2WhereI2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I2WhereI2One2One);
			}
		}


		virtual public I2 I2WhereI2One2Many
		{ 
			get
			{
				return (I2) Strategy.GetCompositeAssociation(Meta.I2WhereI2One2Many);
			}
		} 

		virtual public bool ExistI2WhereI2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I2WhereI2One2Many);
			}
		}


		virtual public C1 C1WhereI2One2One
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI2One2One);
			}
		} 

		virtual public bool ExistC1WhereI2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI2One2One);
			}
		}


		virtual public C1 C1WhereI2One2Many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI2One2Many);
			}
		} 

		virtual public bool ExistC1WhereI2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI2One2Many);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI2Many2Many);
			}
		}

		virtual public bool ExistC1sWhereI2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI2Many2Many);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI2Many2One);
			}
		}

		virtual public bool ExistC1sWhereI2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI2Many2One);
			}
		}


		virtual public C2 C2WhereI2One2One
		{ 
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereI2One2One);
			}
		} 

		virtual public bool ExistC2WhereI2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereI2One2One);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereI2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereI2Many2Many);
			}
		}

		virtual public bool ExistC2sWhereI2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereI2Many2Many);
			}
		}


		virtual public C2 C2WhereI2One2Many
		{ 
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereI2One2Many);
			}
		} 

		virtual public bool ExistC2WhereI2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereI2One2Many);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereI2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereI2Many2One);
			}
		}

		virtual public bool ExistC2sWhereI2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereI2Many2One);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereI2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereI2Many2Many);
			}
		}

		virtual public bool ExistI12sWhereI2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereI2Many2Many);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereI2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereI2Many2One);
			}
		}

		virtual public bool ExistI12sWhereI2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereI2Many2One);
			}
		}


		virtual public I12 I12WhereI2One2One
		{ 
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereI2One2One);
			}
		} 

		virtual public bool ExistI12WhereI2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereI2One2One);
			}
		}


		virtual public I12 I12WhereI2One2Many
		{ 
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereI2One2Many);
			}
		} 

		virtual public bool ExistI12WhereI2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereI2One2Many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI2Many2Many);
			}
		}

		virtual public bool ExistI1sWhereI2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI2Many2Many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI2Many2One);
			}
		}

		virtual public bool ExistI1sWhereI2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI2Many2One);
			}
		}


		virtual public I1 I1WhereI2One2Many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI2One2Many);
			}
		} 

		virtual public bool ExistI1WhereI2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI2One2Many);
			}
		}


		virtual public I1 I1WhereI2One2One
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI2One2One);
			}
		} 

		virtual public bool ExistI1WhereI2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI2One2One);
			}
		}


		virtual public global::Allors.Extent<I2> I2sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I2sWhereI12Many2One);
			}
		}

		virtual public bool ExistI2sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I2sWhereI12Many2One);
			}
		}


		virtual public I2 I2WhereI12One2Many
		{ 
			get
			{
				return (I2) Strategy.GetCompositeAssociation(Meta.I2WhereI12One2Many);
			}
		} 

		virtual public bool ExistI2WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I2WhereI12One2Many);
			}
		}


		virtual public I2 I2WhereI12One2One
		{ 
			get
			{
				return (I2) Strategy.GetCompositeAssociation(Meta.I2WhereI12One2One);
			}
		} 

		virtual public bool ExistI2WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I2WhereI12One2One);
			}
		}


		virtual public global::Allors.Extent<I2> I2sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I2sWhereI12Many2Many);
			}
		}

		virtual public bool ExistI2sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I2sWhereI12Many2Many);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI12Many2Many);
			}
		}

		virtual public bool ExistC1sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI12Many2Many);
			}
		}


		virtual public C1 C1WhereI12One2Many
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI12One2Many);
			}
		} 

		virtual public bool ExistC1WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI12One2Many);
			}
		}


		virtual public C1 C1WhereI12One2One
		{ 
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereI12One2One);
			}
		} 

		virtual public bool ExistC1WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereI12One2One);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereI12Many2One);
			}
		}

		virtual public bool ExistC1sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereI12Many2One);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereI12Many2One);
			}
		}

		virtual public bool ExistC2sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereI12Many2One);
			}
		}


		virtual public C2 C2WhereI12One2One
		{ 
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereI12One2One);
			}
		} 

		virtual public bool ExistC2WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereI12One2One);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereI12Many2Many);
			}
		}

		virtual public bool ExistC2sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereI12Many2Many);
			}
		}


		virtual public C2 C2WhereI12One2Many
		{ 
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereI12One2Many);
			}
		} 

		virtual public bool ExistC2WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereI12One2Many);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereI12Many2Many);
			}
		}

		virtual public bool ExistI12sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereI12Many2Many);
			}
		}


		virtual public I12 I12WhereI12One2Many
		{ 
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereI12One2Many);
			}
		} 

		virtual public bool ExistI12WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereI12One2Many);
			}
		}


		virtual public I12 I12WhereI12One2One
		{ 
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereI12One2One);
			}
		} 

		virtual public bool ExistI12WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereI12One2One);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereDependency
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereDependency);
			}
		}

		virtual public bool ExistI12sWhereDependency
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereDependency);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereI12Many2One);
			}
		}

		virtual public bool ExistI12sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereI12Many2One);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI12Many2Many);
			}
		}

		virtual public bool ExistI1sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI12Many2Many);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI12Many2One);
			}
		}

		virtual public bool ExistI1sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI12Many2One);
			}
		}


		virtual public I1 I1WhereI12One2One
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI12One2One);
			}
		} 

		virtual public bool ExistI1WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI12One2One);
			}
		}


		virtual public I1 I1WhereI12One2Many
		{ 
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI12One2Many);
			}
		} 

		virtual public bool ExistI1WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI12One2Many);
			}
		}

	}

	public class C2Meta
	{
		public static readonly C2Meta Instance = new C2Meta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.C2;

		public global::Allors.Meta.RoleType C2AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType C2C1One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C1One2One;
			}
		} 
		public global::Allors.Meta.RoleType C2C2Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C2Many2One;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsUnique 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsUnique;
			}
		} 
		public global::Allors.Meta.RoleType C2I12Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I12Many2One;
			}
		} 
		public global::Allors.Meta.RoleType C2I12One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I12One2One;
			}
		} 
		public global::Allors.Meta.RoleType C2I1Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I1Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType C2I1One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I1One2Many;
			}
		} 
		public global::Allors.Meta.RoleType C2I2One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I2One2One;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType C2I2Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I2Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType C2I12Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I12Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType C2C2One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C2One2Many;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType C2I1Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I1Many2One;
			}
		} 
		public global::Allors.Meta.RoleType C2I1One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I1One2One;
			}
		} 
		public global::Allors.Meta.RoleType C2C1Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C1Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType C2I12One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I12One2Many;
			}
		} 
		public global::Allors.Meta.RoleType C2I2One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I2One2Many;
			}
		} 
		public global::Allors.Meta.RoleType C2C2One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C2One2One;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType C2C1Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C1Many2One;
			}
		} 
		public global::Allors.Meta.RoleType C2C2Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C2Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType C2I2Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2I2Many2One;
			}
		} 
		public global::Allors.Meta.RoleType C2C1One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2C1One2Many;
			}
		} 
		public global::Allors.Meta.RoleType C2AllorsBinary 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.C2AllorsBinary;
			}
		} 
		public global::Allors.Meta.RoleType I2I2Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I2Many2One;
			}
		} 
		public global::Allors.Meta.RoleType I2C1Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2C1Many2One;
			}
		} 
		public global::Allors.Meta.RoleType I2I12Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I12Many2One;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType I2C1One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2C1One2Many;
			}
		} 
		public global::Allors.Meta.RoleType I2C1One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2C1One2One;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType I2Many2any 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I2Many2any;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsBinary 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsBinary;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsUnique 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsUnique;
			}
		} 
		public global::Allors.Meta.RoleType I2I1Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I1Many2One;
			}
		} 
		public global::Allors.Meta.RoleType I2I12One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I12One2Many;
			}
		} 
		public global::Allors.Meta.RoleType I2I12One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I12One2One;
			}
		} 
		public global::Allors.Meta.RoleType I2C2Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2C2Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType I2I1Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I1Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType I2C2Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2C2Many2One;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType I2C2One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2C2One2Many;
			}
		} 
		public global::Allors.Meta.RoleType I2I1One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I1One2One;
			}
		} 
		public global::Allors.Meta.RoleType I2I1One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I1One2Many;
			}
		} 
		public global::Allors.Meta.RoleType I2I12Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I12Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType I2I2One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I2One2One;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType I2I2One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2I2One2Many;
			}
		} 
		public global::Allors.Meta.RoleType I2C1Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2C1Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType I2C2One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2C2One2One;
			}
		} 
		public global::Allors.Meta.RoleType I2AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I2AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsBinary 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsBinary;
			}
		} 
		public global::Allors.Meta.RoleType I12C2One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2One2One;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsFloat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsFloat;
			}
		} 
		public global::Allors.Meta.RoleType I12I1Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I1Many2One;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsString;
			}
		} 
		public global::Allors.Meta.RoleType I12I12Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I12Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsDecimal 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsDecimal;
			}
		} 
		public global::Allors.Meta.RoleType I12I2Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I2Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType I12C2Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType I12I1Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I1Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType I12I12One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I12One2Many;
			}
		} 
		public global::Allors.Meta.RoleType Name 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12Name;
			}
		} 
		public global::Allors.Meta.RoleType I12C1Many2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C1Many2Many;
			}
		} 
		public global::Allors.Meta.RoleType I12I2Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I2Many2One;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsUnique 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsUnique;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsInteger 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsInteger;
			}
		} 
		public global::Allors.Meta.RoleType I12I1One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I1One2Many;
			}
		} 
		public global::Allors.Meta.RoleType I12C1One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C1One2One;
			}
		} 
		public global::Allors.Meta.RoleType I12I12One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I12One2One;
			}
		} 
		public global::Allors.Meta.RoleType I12I2One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I2One2One;
			}
		} 
		public global::Allors.Meta.RoleType Dependency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12Dependency;
			}
		} 
		public global::Allors.Meta.RoleType I12I2One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I2One2Many;
			}
		} 
		public global::Allors.Meta.RoleType I12C2Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C2Many2One;
			}
		} 
		public global::Allors.Meta.RoleType I12I12Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I12Many2One;
			}
		} 
		public global::Allors.Meta.RoleType I12AllorsBoolean 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12AllorsBoolean;
			}
		} 
		public global::Allors.Meta.RoleType I12I1One2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12I1One2One;
			}
		} 
		public global::Allors.Meta.RoleType I12C1One2Many 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C1One2Many;
			}
		} 
		public global::Allors.Meta.RoleType I12C1Many2One 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.I12C1Many2One;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 

		public global::Allors.Meta.AssociationType I2sWhereC2Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2C2Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I2sWhereC2Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2C2Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType I2WhereC2One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2C2One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I2WhereC2One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2C2One2One;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereC2Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C2Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereC2One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C2One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereC2One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C2One2One;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereC2Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1C2Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C2sWhereC2Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C2Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType C2WhereC2One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C2One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C2WhereC2One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C2One2One;
			}
		} 
		public global::Allors.Meta.AssociationType C2sWhereC2Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2C2Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I12WhereC2One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12C2One2One;
			}
		} 
		public global::Allors.Meta.AssociationType I12sWhereC2Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12C2Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I12sWhereC2Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12C2Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereC2One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C2One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereC2Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C2Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereC2One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C2One2One;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereC2Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1C2Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType I2sWhereI2Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2I2Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType I2sWhereI2Many2any 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2I2Many2any;
			}
		} 
		public global::Allors.Meta.AssociationType I2WhereI2One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2I2One2One;
			}
		} 
		public global::Allors.Meta.AssociationType I2WhereI2One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2I2One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI2One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I2One2One;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI2One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I2One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI2Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I2Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI2Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I2Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType C2WhereI2One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2I2One2One;
			}
		} 
		public global::Allors.Meta.AssociationType C2sWhereI2Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2I2Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C2WhereI2One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2I2One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C2sWhereI2Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2I2Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType I12sWhereI2Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12I2Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I12sWhereI2Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12I2Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType I12WhereI2One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12I2One2One;
			}
		} 
		public global::Allors.Meta.AssociationType I12WhereI2One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12I2One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI2Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I2Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI2Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I2Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI2One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I2One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI2One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I2One2One;
			}
		} 
		public global::Allors.Meta.AssociationType I2sWhereI12Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2I12Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType I2WhereI12One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2I12One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I2WhereI12One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2I12One2One;
			}
		} 
		public global::Allors.Meta.AssociationType I2sWhereI12Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I2I12Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI12Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI12One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C1WhereI12One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12One2One;
			}
		} 
		public global::Allors.Meta.AssociationType C1sWhereI12Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C1I12Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType C2sWhereI12Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2I12Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType C2WhereI12One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2I12One2One;
			}
		} 
		public global::Allors.Meta.AssociationType C2sWhereI12Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2I12Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType C2WhereI12One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.C2I12One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I12sWhereI12Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12I12Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I12WhereI12One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12I12One2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I12WhereI12One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12I12One2One;
			}
		} 
		public global::Allors.Meta.AssociationType I12sWhereDependency 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12Dependency;
			}
		} 
		public global::Allors.Meta.AssociationType I12sWhereI12Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I12I12Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI12Many2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12Many2Many;
			}
		} 
		public global::Allors.Meta.AssociationType I1sWhereI12Many2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12Many2One;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI12One2One 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12One2One;
			}
		} 
		public global::Allors.Meta.AssociationType I1WhereI12One2Many 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.I1I12One2Many;
			}
		} 

	}
}
// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class First : Allors.ObjectBase 
	{
		public static readonly FirstMeta Meta = FirstMeta.Instance;

		public First(Allors.IStrategy allors) : base(allors) {}

		public static First Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (First) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public Second Second
		{ 
			get
			{
				return (Second) Strategy.GetCompositeRole(Meta.Second);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Second ,value);
			}
		}

		virtual public bool ExistSecond
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Second);
			}
		}

		virtual public void RemoveSecond()
		{
			Strategy.RemoveCompositeRole(Meta.Second);
		}



		virtual public global::System.Boolean? CreateCycle 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.CreateCycle);
			}
			set
			{
				Strategy.SetUnitRole(Meta.CreateCycle, value);
			}
		}

		virtual public bool ExistCreateCycle{
			get
			{
				return Strategy.ExistUnitRole(Meta.CreateCycle);
			}
		}

		virtual public void RemoveCreateCycle()
		{
			Strategy.RemoveUnitRole(Meta.CreateCycle);
		}



		virtual public global::System.Boolean? IsDerived 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.IsDerived);
			}
			set
			{
				Strategy.SetUnitRole(Meta.IsDerived, value);
			}
		}

		virtual public bool ExistIsDerived{
			get
			{
				return Strategy.ExistUnitRole(Meta.IsDerived);
			}
		}

		virtual public void RemoveIsDerived()
		{
			Strategy.RemoveUnitRole(Meta.IsDerived);
		}

	}

	public class FirstMeta
	{
		public static readonly FirstMeta Instance = new FirstMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.First;

		public global::Allors.Meta.RoleType Second 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.FirstSecond;
			}
		} 
		public global::Allors.Meta.RoleType CreateCycle 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.FirstCreateCycle;
			}
		} 
		public global::Allors.Meta.RoleType IsDerived 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.FirstIsDerived;
			}
		} 

	}
}
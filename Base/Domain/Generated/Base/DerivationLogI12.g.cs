// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface DerivationLogI12 :  Derivable, Allors.IObject
	{


		global::System.Guid? UniqueId 
		{
			get;
			set;
		}

		bool ExistUniqueId{get;}

		void RemoveUniqueId();

	}

	public class DerivationLogI12Meta
	{
		public static readonly DerivationLogI12Meta Instance = new DerivationLogI12Meta();

		public global::Allors.Meta.Interface ObjectType = global::Allors.Meta.Interfaces.DerivationLogI12;

		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.DerivationLogI12UniqueId;
			}
		} 

		public global::Allors.Meta.MethodType PrepareDerivation 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.DerivablePrepareDerivation;
			}
		} 
		public global::Allors.Meta.MethodType Derive 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.DerivableDerive;
			}
		} 
		public global::Allors.Meta.MethodType ApplySecurityOnDerive 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.DerivableApplySecurityOnDerive;
			}
		} 
		public global::Allors.Meta.MethodType OnPostBuild 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.ObjectOnPostBuild;
			}
		} 
		public global::Allors.Meta.MethodType ApplySecurityOnPostBuild 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.ObjectApplySecurityOnPostBuild;
			}
		} 

	}

	public partial interface DerivationLogI12Builder : DerivableBuilder , global::System.IDisposable
	{	
		global::System.Guid? UniqueId {get;}
		
	}

	public partial class DerivationLogI12s : global::Allors.ObjectsBase<DerivationLogI12>
	{
		public static readonly DerivationLogI12Meta Meta = DerivationLogI12Meta.Instance;

		public DerivationLogI12s(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}
// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface Period :  Object, Allors.IObject
	{


		global::System.DateTime FromDate 
		{
			get;
			set;
		}

		bool ExistFromDate{get;}

		void RemoveFromDate();


		global::System.DateTime? ThroughDate 
		{
			get;
			set;
		}

		bool ExistThroughDate{get;}

		void RemoveThroughDate();

	}

	public class PeriodMeta
	{
		public static readonly PeriodMeta Instance = new PeriodMeta();

		public global::Allors.Meta.Interface ObjectType = global::Allors.Meta.Interfaces.Period;

		public global::Allors.Meta.RoleType FromDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PeriodFromDate;
			}
		} 
		public global::Allors.Meta.RoleType ThroughDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PeriodThroughDate;
			}
		} 

		public global::Allors.Meta.MethodType OnPostBuild 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.ObjectOnPostBuild;
			}
		} 
		public global::Allors.Meta.MethodType ApplySecurityOnPostBuild 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.ObjectApplySecurityOnPostBuild;
			}
		} 

	}

	public partial interface PeriodBuilder : ObjectBuilder , global::System.IDisposable
	{	
		global::System.DateTime? FromDate {get;}
		
		global::System.DateTime? ThroughDate {get;}
		
	}

	public partial class Periods : global::Allors.ObjectsBase<Period>
	{
		public static readonly PeriodMeta Meta = PeriodMeta.Instance;

		public Periods(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}
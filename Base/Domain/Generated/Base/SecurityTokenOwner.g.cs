// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface SecurityTokenOwner :  Object, Allors.IObject
	{


		SecurityToken OwnerSecurityToken
		{ 
			get;
			set;
		}

		bool ExistOwnerSecurityToken
		{
			get;
		}

		void RemoveOwnerSecurityToken();

	}

	public class SecurityTokenOwnerMeta
	{
		public static readonly SecurityTokenOwnerMeta Instance = new SecurityTokenOwnerMeta();

		public global::Allors.Meta.Interface ObjectType = global::Allors.Meta.Interfaces.SecurityTokenOwner;

		public global::Allors.Meta.RoleType OwnerSecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SecurityTokenOwnerOwnerSecurityToken;
			}
		} 

		public global::Allors.Meta.MethodType OnPostBuild 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.ObjectOnPostBuild;
			}
		} 
		public global::Allors.Meta.MethodType ApplySecurityOnPostBuild 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.ObjectApplySecurityOnPostBuild;
			}
		} 

	}

	public partial interface SecurityTokenOwnerBuilder : ObjectBuilder , global::System.IDisposable
	{	
		SecurityToken OwnerSecurityToken {get;}

		
	}

	public partial class SecurityTokenOwners : global::Allors.ObjectsBase<SecurityTokenOwner>
	{
		public static readonly SecurityTokenOwnerMeta Meta = SecurityTokenOwnerMeta.Instance;

		public SecurityTokenOwners(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}
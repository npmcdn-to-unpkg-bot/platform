// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class C2
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (C2Builder)objectBuilder;
			

			if(builder.C2AllorsDecimal.HasValue)
			{
				this.C2AllorsDecimal = builder.C2AllorsDecimal.Value;
			}			
					

			if(builder.C2AllorsUnique.HasValue)
			{
				this.C2AllorsUnique = builder.C2AllorsUnique.Value;
			}			
					

			if(builder.C2AllorsDate.HasValue)
			{
				this.C2AllorsDate = builder.C2AllorsDate.Value;
			}			
					

			if(builder.C2AllorsFloat.HasValue)
			{
				this.C2AllorsFloat = builder.C2AllorsFloat.Value;
			}			
					

			if(builder.C2AllorsInteger.HasValue)
			{
				this.C2AllorsInteger = builder.C2AllorsInteger.Value;
			}			
					

			if(builder.C2AllorsBoolean.HasValue)
			{
				this.C2AllorsBoolean = builder.C2AllorsBoolean.Value;
			}			
		

			this.C2AllorsString = builder.C2AllorsString;
		

			this.C2AllorsBinary = builder.C2AllorsBinary;
					

			if(builder.I2AllorsBoolean.HasValue)
			{
				this.I2AllorsBoolean = builder.I2AllorsBoolean.Value;
			}			
					

			if(builder.I2AllorsDecimal.HasValue)
			{
				this.I2AllorsDecimal = builder.I2AllorsDecimal.Value;
			}			
		

			this.I2AllorsBinary = builder.I2AllorsBinary;
					

			if(builder.I2AllorsUnique.HasValue)
			{
				this.I2AllorsUnique = builder.I2AllorsUnique.Value;
			}			
					

			if(builder.I2AllorsDate.HasValue)
			{
				this.I2AllorsDate = builder.I2AllorsDate.Value;
			}			
		

			this.I2AllorsString = builder.I2AllorsString;
					

			if(builder.I2AllorsInteger.HasValue)
			{
				this.I2AllorsInteger = builder.I2AllorsInteger.Value;
			}			
					

			if(builder.I2AllorsFloat.HasValue)
			{
				this.I2AllorsFloat = builder.I2AllorsFloat.Value;
			}			
		

			this.I12AllorsBinary = builder.I12AllorsBinary;
					

			if(builder.I12AllorsFloat.HasValue)
			{
				this.I12AllorsFloat = builder.I12AllorsFloat.Value;
			}			
		

			this.I12AllorsString = builder.I12AllorsString;
					

			if(builder.I12AllorsDecimal.HasValue)
			{
				this.I12AllorsDecimal = builder.I12AllorsDecimal.Value;
			}			
		

			this.Name = builder.Name;
					

			if(builder.I12AllorsUnique.HasValue)
			{
				this.I12AllorsUnique = builder.I12AllorsUnique.Value;
			}			
					

			if(builder.I12AllorsInteger.HasValue)
			{
				this.I12AllorsInteger = builder.I12AllorsInteger.Value;
			}			
					

			if(builder.I12AllorsBoolean.HasValue)
			{
				this.I12AllorsBoolean = builder.I12AllorsBoolean.Value;
			}			
					

			if(builder.I12AllorsDate.HasValue)
			{
				this.I12AllorsDate = builder.I12AllorsDate.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
		

			this.C2C1One2One = builder.C2C1One2One;



			this.C2C2Many2One = builder.C2C2Many2One;



			this.C2I12Many2One = builder.C2I12Many2One;



			this.C2I12One2One = builder.C2I12One2One;


			if(builder.C2I1Many2Manies!=null)
			{
				this.C2I1Many2Manies = builder.C2I1Many2Manies.ToArray();
			}

			if(builder.C2I1One2Manies!=null)
			{
				this.C2I1One2Manies = builder.C2I1One2Manies.ToArray();
			}


			this.C2I2One2One = builder.C2I2One2One;


			if(builder.C2I2Many2Manies!=null)
			{
				this.C2I2Many2Manies = builder.C2I2Many2Manies.ToArray();
			}

			if(builder.C2I12Many2Manies!=null)
			{
				this.C2I12Many2Manies = builder.C2I12Many2Manies.ToArray();
			}

			if(builder.C2C2One2Manies!=null)
			{
				this.C2C2One2Manies = builder.C2C2One2Manies.ToArray();
			}


			this.C2I1Many2One = builder.C2I1Many2One;



			this.C2I1One2One = builder.C2I1One2One;


			if(builder.C2C1Many2Manies!=null)
			{
				this.C2C1Many2Manies = builder.C2C1Many2Manies.ToArray();
			}

			if(builder.C2I12One2Manies!=null)
			{
				this.C2I12One2Manies = builder.C2I12One2Manies.ToArray();
			}

			if(builder.C2I2One2Manies!=null)
			{
				this.C2I2One2Manies = builder.C2I2One2Manies.ToArray();
			}


			this.C2C2One2One = builder.C2C2One2One;



			this.C2C1Many2One = builder.C2C1Many2One;


			if(builder.C2C2Many2Manies!=null)
			{
				this.C2C2Many2Manies = builder.C2C2Many2Manies.ToArray();
			}


			this.C2I2Many2One = builder.C2I2Many2One;


			if(builder.C2C1One2Manies!=null)
			{
				this.C2C1One2Manies = builder.C2C1One2Manies.ToArray();
			}


			this.I2I2Many2One = builder.I2I2Many2One;



			this.I2C1Many2One = builder.I2C1Many2One;



			this.I2I12Many2One = builder.I2I12Many2One;


			if(builder.I2C1One2Manies!=null)
			{
				this.I2C1One2Manies = builder.I2C1One2Manies.ToArray();
			}


			this.I2C1One2One = builder.I2C1One2One;


			if(builder.I2I2Many2Manies!=null)
			{
				this.I2I2Many2Manies = builder.I2I2Many2Manies.ToArray();
			}


			this.I2I1Many2One = builder.I2I1Many2One;


			if(builder.I2I12One2Manies!=null)
			{
				this.I2I12One2Manies = builder.I2I12One2Manies.ToArray();
			}


			this.I2I12One2One = builder.I2I12One2One;


			if(builder.I2C2Many2Manies!=null)
			{
				this.I2C2Many2Manies = builder.I2C2Many2Manies.ToArray();
			}

			if(builder.I2I1Many2Manies!=null)
			{
				this.I2I1Many2Manies = builder.I2I1Many2Manies.ToArray();
			}


			this.I2C2Many2One = builder.I2C2Many2One;


			if(builder.I2C2One2Manies!=null)
			{
				this.I2C2One2Manies = builder.I2C2One2Manies.ToArray();
			}


			this.I2I1One2One = builder.I2I1One2One;


			if(builder.I2I1One2Manies!=null)
			{
				this.I2I1One2Manies = builder.I2I1One2Manies.ToArray();
			}

			if(builder.I2I12Many2Manies!=null)
			{
				this.I2I12Many2Manies = builder.I2I12Many2Manies.ToArray();
			}


			this.I2I2One2One = builder.I2I2One2One;


			if(builder.I2I2One2Manies!=null)
			{
				this.I2I2One2Manies = builder.I2I2One2Manies.ToArray();
			}

			if(builder.I2C1Many2Manies!=null)
			{
				this.I2C1Many2Manies = builder.I2C1Many2Manies.ToArray();
			}


			this.I2C2One2One = builder.I2C2One2One;



			this.I12C2One2One = builder.I12C2One2One;



			this.I12I1Many2One = builder.I12I1Many2One;


			if(builder.I12I12Many2Manies!=null)
			{
				this.I12I12Many2Manies = builder.I12I12Many2Manies.ToArray();
			}

			if(builder.I12I2Many2Manies!=null)
			{
				this.I12I2Many2Manies = builder.I12I2Many2Manies.ToArray();
			}

			if(builder.I12C2Many2Manies!=null)
			{
				this.I12C2Many2Manies = builder.I12C2Many2Manies.ToArray();
			}

			if(builder.I12I1Many2Manies!=null)
			{
				this.I12I1Many2Manies = builder.I12I1Many2Manies.ToArray();
			}

			if(builder.I12I12One2Manies!=null)
			{
				this.I12I12One2Manies = builder.I12I12One2Manies.ToArray();
			}

			if(builder.I12C1Many2Manies!=null)
			{
				this.I12C1Many2Manies = builder.I12C1Many2Manies.ToArray();
			}


			this.I12I2Many2One = builder.I12I2Many2One;


			if(builder.I12I1One2Manies!=null)
			{
				this.I12I1One2Manies = builder.I12I1One2Manies.ToArray();
			}


			this.I12C1One2One = builder.I12C1One2One;



			this.I12I12One2One = builder.I12I12One2One;



			this.I12I2One2One = builder.I12I2One2One;


			if(builder.Dependencies!=null)
			{
				this.Dependencies = builder.Dependencies.ToArray();
			}

			if(builder.I12I2One2Manies!=null)
			{
				this.I12I2One2Manies = builder.I12I2One2Manies.ToArray();
			}


			this.I12C2Many2One = builder.I12C2Many2One;



			this.I12I12Many2One = builder.I12I12Many2One;



			this.I12I1One2One = builder.I12I1One2One;


			if(builder.I12C1One2Manies!=null)
			{
				this.I12C1One2Manies = builder.I12C1One2Manies.ToArray();
			}


			this.I12C1Many2One = builder.I12C1Many2One;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}


			this.SearchData = builder.SearchData;


		}
	}

	public partial class C2Builder : Allors.ObjectBuilder<C2> , I2Builder, global::System.IDisposable
	{		
		public C2Builder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Decimal? C2AllorsDecimal {get; set;}

				/// <exclude/>
				public C2Builder WithC2AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.C2AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C2AllorsDecimal = value;
		            return this;
		        }	

				public C1 C2C1One2One {get; set;}

				/// <exclude/>
				public C2Builder WithC2C1One2One(C1 value)
		        {
		            if(this.C2C1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C2C1One2One = value;
		            return this;
		        }		

				
				public C2 C2C2Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithC2C2Many2One(C2 value)
		        {
		            if(this.C2C2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C2C2Many2One = value;
		            return this;
		        }		

				
				public global::System.Guid? C2AllorsUnique {get; set;}

				/// <exclude/>
				public C2Builder WithC2AllorsUnique(global::System.Guid? value)
		        {
				    if(this.C2AllorsUnique!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C2AllorsUnique = value;
		            return this;
		        }	

				public I12 C2I12Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithC2I12Many2One(I12 value)
		        {
		            if(this.C2I12Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C2I12Many2One = value;
		            return this;
		        }		

				
				public global::System.DateTime? C2AllorsDate {get; set;}

				/// <exclude/>
				public C2Builder WithC2AllorsDate(global::System.DateTime? value)
		        {
				    if(this.C2AllorsDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C2AllorsDate = value;
		            return this;
		        }	

				public I12 C2I12One2One {get; set;}

				/// <exclude/>
				public C2Builder WithC2I12One2One(I12 value)
		        {
		            if(this.C2I12One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C2I12One2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> C2I1Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithC2I1Many2Many(I1 value)
		        {
					if(this.C2I1Many2Manies == null)
					{
						this.C2I1Many2Manies = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.C2I1Many2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Double? C2AllorsFloat {get; set;}

				/// <exclude/>
				public C2Builder WithC2AllorsFloat(global::System.Double? value)
		        {
				    if(this.C2AllorsFloat!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C2AllorsFloat = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I1> C2I1One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithC2I1One2Many(I1 value)
		        {
					if(this.C2I1One2Manies == null)
					{
						this.C2I1One2Manies = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.C2I1One2Manies.Add(value);
		            return this;
		        }		

				
				public I2 C2I2One2One {get; set;}

				/// <exclude/>
				public C2Builder WithC2I2One2One(I2 value)
		        {
		            if(this.C2I2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C2I2One2One = value;
		            return this;
		        }		

				
				public global::System.Int32? C2AllorsInteger {get; set;}

				/// <exclude/>
				public C2Builder WithC2AllorsInteger(global::System.Int32? value)
		        {
				    if(this.C2AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C2AllorsInteger = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I2> C2I2Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithC2I2Many2Many(I2 value)
		        {
					if(this.C2I2Many2Manies == null)
					{
						this.C2I2Many2Manies = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.C2I2Many2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> C2I12Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithC2I12Many2Many(I12 value)
		        {
					if(this.C2I12Many2Manies == null)
					{
						this.C2I12Many2Manies = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.C2I12Many2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> C2C2One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithC2C2One2Many(C2 value)
		        {
					if(this.C2C2One2Manies == null)
					{
						this.C2C2One2Manies = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.C2C2One2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Boolean? C2AllorsBoolean {get; set;}

				/// <exclude/>
				public C2Builder WithC2AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.C2AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C2AllorsBoolean = value;
		            return this;
		        }	

				public I1 C2I1Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithC2I1Many2One(I1 value)
		        {
		            if(this.C2I1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C2I1Many2One = value;
		            return this;
		        }		

				
				public I1 C2I1One2One {get; set;}

				/// <exclude/>
				public C2Builder WithC2I1One2One(I1 value)
		        {
		            if(this.C2I1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C2I1One2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C1> C2C1Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithC2C1Many2Many(C1 value)
		        {
					if(this.C2C1Many2Manies == null)
					{
						this.C2C1Many2Manies = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.C2C1Many2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> C2I12One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithC2I12One2Many(I12 value)
		        {
					if(this.C2I12One2Manies == null)
					{
						this.C2I12One2Manies = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.C2I12One2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I2> C2I2One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithC2I2One2Many(I2 value)
		        {
					if(this.C2I2One2Manies == null)
					{
						this.C2I2One2Manies = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.C2I2One2Manies.Add(value);
		            return this;
		        }		

				
				public C2 C2C2One2One {get; set;}

				/// <exclude/>
				public C2Builder WithC2C2One2One(C2 value)
		        {
		            if(this.C2C2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C2C2One2One = value;
		            return this;
		        }		

				
				public global::System.String C2AllorsString {get; set;}

				/// <exclude/>
				public C2Builder WithC2AllorsString(global::System.String value)
		        {
				    if(this.C2AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C2AllorsString = value;
		            return this;
		        }	

				public C1 C2C1Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithC2C1Many2One(C1 value)
		        {
		            if(this.C2C1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C2C1Many2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> C2C2Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithC2C2Many2Many(C2 value)
		        {
					if(this.C2C2Many2Manies == null)
					{
						this.C2C2Many2Manies = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.C2C2Many2Manies.Add(value);
		            return this;
		        }		

				
				public I2 C2I2Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithC2I2Many2One(I2 value)
		        {
		            if(this.C2I2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C2I2Many2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C1> C2C1One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithC2C1One2Many(C1 value)
		        {
					if(this.C2C1One2Manies == null)
					{
						this.C2C1One2Manies = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.C2C1One2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Byte[] C2AllorsBinary {get; set;}

				/// <exclude/>
				public C2Builder WithC2AllorsBinary(global::System.Byte[] value)
		        {
				    if(this.C2AllorsBinary!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C2AllorsBinary = value;
		            return this;
		        }	

				public I2 I2I2Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithI2I2Many2One(I2 value)
		        {
		            if(this.I2I2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I2I2Many2One = value;
		            return this;
		        }		

				
				public C1 I2C1Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithI2C1Many2One(C1 value)
		        {
		            if(this.I2C1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I2C1Many2One = value;
		            return this;
		        }		

				
				public I12 I2I12Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithI2I12Many2One(I12 value)
		        {
		            if(this.I2I12Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I2I12Many2One = value;
		            return this;
		        }		

				
				public global::System.Boolean? I2AllorsBoolean {get; set;}

				/// <exclude/>
				public C2Builder WithI2AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.I2AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I2AllorsBoolean = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C1> I2C1One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI2C1One2Many(C1 value)
		        {
					if(this.I2C1One2Manies == null)
					{
						this.I2C1One2Manies = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.I2C1One2Manies.Add(value);
		            return this;
		        }		

				
				public C1 I2C1One2One {get; set;}

				/// <exclude/>
				public C2Builder WithI2C1One2One(C1 value)
		        {
		            if(this.I2C1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I2C1One2One = value;
		            return this;
		        }		

				
				public global::System.Decimal? I2AllorsDecimal {get; set;}

				/// <exclude/>
				public C2Builder WithI2AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.I2AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I2AllorsDecimal = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I2> I2I2Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI2Many2any(I2 value)
		        {
					if(this.I2I2Many2Manies == null)
					{
						this.I2I2Many2Manies = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.I2I2Many2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Byte[] I2AllorsBinary {get; set;}

				/// <exclude/>
				public C2Builder WithI2AllorsBinary(global::System.Byte[] value)
		        {
				    if(this.I2AllorsBinary!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I2AllorsBinary = value;
		            return this;
		        }	

				public global::System.Guid? I2AllorsUnique {get; set;}

				/// <exclude/>
				public C2Builder WithI2AllorsUnique(global::System.Guid? value)
		        {
				    if(this.I2AllorsUnique!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I2AllorsUnique = value;
		            return this;
		        }	

				public I1 I2I1Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithI2I1Many2One(I1 value)
		        {
		            if(this.I2I1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I2I1Many2One = value;
		            return this;
		        }		

				
				public global::System.DateTime? I2AllorsDate {get; set;}

				/// <exclude/>
				public C2Builder WithI2AllorsDate(global::System.DateTime? value)
		        {
				    if(this.I2AllorsDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I2AllorsDate = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I12> I2I12One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI2I12One2Many(I12 value)
		        {
					if(this.I2I12One2Manies == null)
					{
						this.I2I12One2Manies = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.I2I12One2Manies.Add(value);
		            return this;
		        }		

				
				public I12 I2I12One2One {get; set;}

				/// <exclude/>
				public C2Builder WithI2I12One2One(I12 value)
		        {
		            if(this.I2I12One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I2I12One2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> I2C2Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI2C2Many2Many(C2 value)
		        {
					if(this.I2C2Many2Manies == null)
					{
						this.I2C2Many2Manies = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.I2C2Many2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> I2I1Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI2I1Many2Many(I1 value)
		        {
					if(this.I2I1Many2Manies == null)
					{
						this.I2I1Many2Manies = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.I2I1Many2Manies.Add(value);
		            return this;
		        }		

				
				public C2 I2C2Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithI2C2Many2One(C2 value)
		        {
		            if(this.I2C2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I2C2Many2One = value;
		            return this;
		        }		

				
				public global::System.String I2AllorsString {get; set;}

				/// <exclude/>
				public C2Builder WithI2AllorsString(global::System.String value)
		        {
				    if(this.I2AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I2AllorsString = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C2> I2C2One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI2C2One2Many(C2 value)
		        {
					if(this.I2C2One2Manies == null)
					{
						this.I2C2One2Manies = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.I2C2One2Manies.Add(value);
		            return this;
		        }		

				
				public I1 I2I1One2One {get; set;}

				/// <exclude/>
				public C2Builder WithI2I1One2One(I1 value)
		        {
		            if(this.I2I1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I2I1One2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> I2I1One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI2I1One2Many(I1 value)
		        {
					if(this.I2I1One2Manies == null)
					{
						this.I2I1One2Manies = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.I2I1One2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> I2I12Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI2I12Many2Many(I12 value)
		        {
					if(this.I2I12Many2Manies == null)
					{
						this.I2I12Many2Manies = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.I2I12Many2Manies.Add(value);
		            return this;
		        }		

				
				public I2 I2I2One2One {get; set;}

				/// <exclude/>
				public C2Builder WithI2I2One2One(I2 value)
		        {
		            if(this.I2I2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I2I2One2One = value;
		            return this;
		        }		

				
				public global::System.Int32? I2AllorsInteger {get; set;}

				/// <exclude/>
				public C2Builder WithI2AllorsInteger(global::System.Int32? value)
		        {
				    if(this.I2AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I2AllorsInteger = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I2> I2I2One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI2I2One2Many(I2 value)
		        {
					if(this.I2I2One2Manies == null)
					{
						this.I2I2One2Manies = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.I2I2One2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C1> I2C1Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI2C1Many2Many(C1 value)
		        {
					if(this.I2C1Many2Manies == null)
					{
						this.I2C1Many2Manies = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.I2C1Many2Manies.Add(value);
		            return this;
		        }		

				
				public C2 I2C2One2One {get; set;}

				/// <exclude/>
				public C2Builder WithI2C2One2One(C2 value)
		        {
		            if(this.I2C2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I2C2One2One = value;
		            return this;
		        }		

				
				public global::System.Double? I2AllorsFloat {get; set;}

				/// <exclude/>
				public C2Builder WithI2AllorsFloat(global::System.Double? value)
		        {
				    if(this.I2AllorsFloat!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I2AllorsFloat = value;
		            return this;
		        }	

				public global::System.Byte[] I12AllorsBinary {get; set;}

				/// <exclude/>
				public C2Builder WithI12AllorsBinary(global::System.Byte[] value)
		        {
				    if(this.I12AllorsBinary!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsBinary = value;
		            return this;
		        }	

				public C2 I12C2One2One {get; set;}

				/// <exclude/>
				public C2Builder WithI12C2One2One(C2 value)
		        {
		            if(this.I12C2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C2One2One = value;
		            return this;
		        }		

				
				public global::System.Double? I12AllorsFloat {get; set;}

				/// <exclude/>
				public C2Builder WithI12AllorsFloat(global::System.Double? value)
		        {
				    if(this.I12AllorsFloat!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsFloat = value;
		            return this;
		        }	

				public I1 I12I1Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithI12I1Many2One(I1 value)
		        {
		            if(this.I12I1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I1Many2One = value;
		            return this;
		        }		

				
				public global::System.String I12AllorsString {get; set;}

				/// <exclude/>
				public C2Builder WithI12AllorsString(global::System.String value)
		        {
				    if(this.I12AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsString = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I12> I12I12Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI12I12Many2Many(I12 value)
		        {
					if(this.I12I12Many2Manies == null)
					{
						this.I12I12Many2Manies = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.I12I12Many2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? I12AllorsDecimal {get; set;}

				/// <exclude/>
				public C2Builder WithI12AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.I12AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsDecimal = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I2> I12I2Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI12I2Many2Many(I2 value)
		        {
					if(this.I12I2Many2Manies == null)
					{
						this.I12I2Many2Manies = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.I12I2Many2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> I12C2Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI12C2Many2Many(C2 value)
		        {
					if(this.I12C2Many2Manies == null)
					{
						this.I12C2Many2Manies = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.I12C2Many2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> I12I1Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI12I1Many2Many(I1 value)
		        {
					if(this.I12I1Many2Manies == null)
					{
						this.I12I1Many2Manies = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.I12I1Many2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> I12I12One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI12I12One2Many(I12 value)
		        {
					if(this.I12I12One2Manies == null)
					{
						this.I12I12One2Manies = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.I12I12One2Manies.Add(value);
		            return this;
		        }		

				
				public global::System.String Name {get; set;}

				/// <exclude/>
				public C2Builder WithName(global::System.String value)
		        {
				    if(this.Name!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Name = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C1> I12C1Many2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI12C1Many2Many(C1 value)
		        {
					if(this.I12C1Many2Manies == null)
					{
						this.I12C1Many2Manies = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.I12C1Many2Manies.Add(value);
		            return this;
		        }		

				
				public I2 I12I2Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithI12I2Many2One(I2 value)
		        {
		            if(this.I12I2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I2Many2One = value;
		            return this;
		        }		

				
				public global::System.Guid? I12AllorsUnique {get; set;}

				/// <exclude/>
				public C2Builder WithI12AllorsUnique(global::System.Guid? value)
		        {
				    if(this.I12AllorsUnique!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsUnique = value;
		            return this;
		        }	

				public global::System.Int32? I12AllorsInteger {get; set;}

				/// <exclude/>
				public C2Builder WithI12AllorsInteger(global::System.Int32? value)
		        {
				    if(this.I12AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsInteger = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I1> I12I1One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI12I1One2Many(I1 value)
		        {
					if(this.I12I1One2Manies == null)
					{
						this.I12I1One2Manies = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.I12I1One2Manies.Add(value);
		            return this;
		        }		

				
				public C1 I12C1One2One {get; set;}

				/// <exclude/>
				public C2Builder WithI12C1One2One(C1 value)
		        {
		            if(this.I12C1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C1One2One = value;
		            return this;
		        }		

				
				public I12 I12I12One2One {get; set;}

				/// <exclude/>
				public C2Builder WithI12I12One2One(I12 value)
		        {
		            if(this.I12I12One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I12One2One = value;
		            return this;
		        }		

				
				public I2 I12I2One2One {get; set;}

				/// <exclude/>
				public C2Builder WithI12I2One2One(I2 value)
		        {
		            if(this.I12I2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I2One2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> Dependencies {get; set;}	

				/// <exclude/>
				public C2Builder WithDependency(I12 value)
		        {
					if(this.Dependencies == null)
					{
						this.Dependencies = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.Dependencies.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I2> I12I2One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI12I2One2Many(I2 value)
		        {
					if(this.I12I2One2Manies == null)
					{
						this.I12I2One2Manies = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.I12I2One2Manies.Add(value);
		            return this;
		        }		

				
				public C2 I12C2Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithI12C2Many2One(C2 value)
		        {
		            if(this.I12C2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C2Many2One = value;
		            return this;
		        }		

				
				public I12 I12I12Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithI12I12Many2One(I12 value)
		        {
		            if(this.I12I12Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I12Many2One = value;
		            return this;
		        }		

				
				public global::System.Boolean? I12AllorsBoolean {get; set;}

				/// <exclude/>
				public C2Builder WithI12AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.I12AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsBoolean = value;
		            return this;
		        }	

				public I1 I12I1One2One {get; set;}

				/// <exclude/>
				public C2Builder WithI12I1One2One(I1 value)
		        {
		            if(this.I12I1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I1One2One = value;
		            return this;
		        }		

				
				public global::System.DateTime? I12AllorsDate {get; set;}

				/// <exclude/>
				public C2Builder WithI12AllorsDate(global::System.DateTime? value)
		        {
				    if(this.I12AllorsDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsDate = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C1> I12C1One2Manies {get; set;}	

				/// <exclude/>
				public C2Builder WithI12C1One2Many(C1 value)
		        {
					if(this.I12C1One2Manies == null)
					{
						this.I12C1One2Manies = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.I12C1One2Manies.Add(value);
		            return this;
		        }		

				
				public C1 I12C1Many2One {get; set;}

				/// <exclude/>
				public C2Builder WithI12C1Many2One(C1 value)
		        {
		            if(this.I12C1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C1Many2One = value;
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public C2Builder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public C2Builder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public C2Builder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public SearchData SearchData {get; set;}

				/// <exclude/>
				public C2Builder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				

	}

	public partial class C2s : global::Allors.ObjectsBase<C2>
	{
		public static readonly C2Meta Meta = C2Meta.Instance;

		public C2s(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}
// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class SearchFragment : Allors.IObject , Derivable
	{
		public static readonly SearchFragmentMeta Meta = SearchFragmentMeta.Instance;

		private readonly IStrategy strategy;

		public SearchFragment(Allors.IStrategy strategy) 
		{
			this.strategy = strategy;
		}

		public ObjectId Id
		{
			get { return this.strategy.ObjectId; }
		}

		public IStrategy Strategy
        {
            [System.Diagnostics.DebuggerStepThrough]
            get { return this.strategy; }
        }

		public static SearchFragment Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (SearchFragment) allorsSession.Instantiate(allorsObjectId);		
		}

		public void OnBuild(IObjectBuilder objectBuilder)
		{
			var builder = (SearchFragmentBuilder)objectBuilder;

			this.LowerCaseText = builder.LowerCaseText;
		
		}

		public override bool Equals(object obj)
        {
            var typedObj = obj as IObject;
            return typedObj != null &&
                   typedObj.Strategy.ObjectId.Equals(this.Strategy.ObjectId) &&
                   typedObj.Strategy.Session.Population.Id.Equals(this.Strategy.Session.Population.Id);
        }

		public override int GetHashCode()
        {
            return this.Strategy.ObjectId.GetHashCode();
        }



		virtual public global::System.String LowerCaseText 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.LowerCaseText);
			}
			set
			{
				Strategy.SetUnitRole(Meta.LowerCaseText, value);
			}
		}

		virtual public bool ExistLowerCaseText{
			get
			{
				return Strategy.ExistUnitRole(Meta.LowerCaseText);
			}
		}

		virtual public void RemoveLowerCaseText()
		{
			Strategy.RemoveUnitRole(Meta.LowerCaseText);
		}



		virtual public global::Allors.Extent<SearchData> SearchDatasWhereSearchFragment
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SearchDatasWhereSearchFragment);
			}
		}

		virtual public bool ExistSearchDatasWhereSearchFragment
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SearchDatasWhereSearchFragment);
			}
		}



		public DerivablePrepareDerivation PrepareDerivation()
		{ 
			return new SearchFragmentPrepareDerivation(this);
		}

		public DerivableDerive Derive()
		{ 
			return new SearchFragmentDerive(this);
		}

		public DerivableApplySecurityOnDerive ApplySecurityOnDerive()
		{ 
			return new SearchFragmentApplySecurityOnDerive(this);
		}

		public ObjectOnPostBuild OnPostBuild()
		{ 
			return new SearchFragmentOnPostBuild(this);
		}

		public ObjectApplySecurityOnPostBuild ApplySecurityOnPostBuild()
		{ 
			return new SearchFragmentApplySecurityOnPostBuild(this);
		}
	}

	public class SearchFragmentMeta
	{
		public static readonly SearchFragmentMeta Instance = new SearchFragmentMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.SearchFragment;

		public global::Allors.Meta.RoleType LowerCaseText 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchFragmentLowerCaseText;
			}
		} 

		public global::Allors.Meta.AssociationType SearchDatasWhereSearchFragment 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SearchDataSearchFragment;
			}
		} 

		public global::Allors.Meta.MethodType PrepareDerivation 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.DerivablePrepareDerivation;
			}
		} 
		public global::Allors.Meta.MethodType Derive 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.DerivableDerive;
			}
		} 
		public global::Allors.Meta.MethodType ApplySecurityOnDerive 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.DerivableApplySecurityOnDerive;
			}
		} 
		public global::Allors.Meta.MethodType OnPostBuild 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.ObjectOnPostBuild;
			}
		} 
		public global::Allors.Meta.MethodType ApplySecurityOnPostBuild 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.ObjectApplySecurityOnPostBuild;
			}
		} 

	}

	public partial class SearchFragmentBuilder : Allors.ObjectBuilder<SearchFragment> , DerivableBuilder, global::System.IDisposable
	{		
		public SearchFragmentBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.String LowerCaseText {get; set;}

				/// <exclude/>
				public SearchFragmentBuilder WithLowerCaseText(global::System.String value)
		        {
				    if(this.LowerCaseText!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.LowerCaseText = value;
		            return this;
		        }	


	}

	public partial class SearchFragments : global::Allors.ObjectsBase<SearchFragment>
	{
		public static readonly SearchFragmentMeta Meta = SearchFragmentMeta.Instance;

		public SearchFragments(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}
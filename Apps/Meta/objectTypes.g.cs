namespace Allors.Meta
{
	using System;

	public partial class ProductFeatureApplicabilityRelationshipClass : Class
	{
		public static ProductFeatureApplicabilityRelationshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductFeatureApplicabilityRelationshipClass() : base(AppsDomain.Instance, new Guid("003433eb-a0c6-454d-8517-0c03e9be3e96"))
        {
			this.SingularName = "ProductFeatureApplicabilityRelationship";
			this.PluralName = "ProductFeatureApplicabilityRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f3cefb71-6ffc-4d50-9458-4fcb6d235381"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductFeatureApplicabilityRelationshipAvailableFor = new RelationType(AppsDomain.Instance, new Guid("3198ade4-8080-4584-9b67-b00af681c5cf"), new Guid("d0f5e3af-01ea-44fc-8921-a7eec052ed22"), new Guid("73ff3323-7903-42c7-8278-b5f36f547463"));
			ProductFeatureApplicabilityRelationshipAvailableFor.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductFeatureApplicabilityRelationshipAvailableFor.IsIndexed = true;

			ProductFeatureApplicabilityRelationshipAvailableFor.AssociationType.ObjectType = this;

			ProductFeatureApplicabilityRelationshipAvailableFor.RoleType.ObjectType = ProductInterface.Instance;;
			ProductFeatureApplicabilityRelationshipAvailableFor.RoleType.AssignedSingularName = "AvailableFor";
			ProductFeatureApplicabilityRelationshipAvailableFor.RoleType.AssignedPluralName = "AvailableFor";
			this.Roles.AvailableFor = ProductFeatureApplicabilityRelationshipAvailableFor.RoleType;

			var ProductFeatureApplicabilityRelationshipUsedToDefine = new RelationType(AppsDomain.Instance, new Guid("c17d3bde-ebbc-463c-b9cb-b0a5a700c6a1"), new Guid("323a85e8-ee5c-4967-9f3d-64e8e5b04d7c"), new Guid("22a7598e-6862-4627-b380-06804e263871"));
			ProductFeatureApplicabilityRelationshipUsedToDefine.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductFeatureApplicabilityRelationshipUsedToDefine.IsIndexed = true;

			ProductFeatureApplicabilityRelationshipUsedToDefine.AssociationType.ObjectType = this;

			ProductFeatureApplicabilityRelationshipUsedToDefine.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			ProductFeatureApplicabilityRelationshipUsedToDefine.RoleType.AssignedSingularName = "UsedToDefine";
			ProductFeatureApplicabilityRelationshipUsedToDefine.RoleType.AssignedPluralName = "UsedToDefines";
			this.Roles.UsedToDefine = ProductFeatureApplicabilityRelationshipUsedToDefine.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductFeatureApplicabilityRelationshipClass.Instance.ConcreteRoles.AvailableFor = ProductFeatureApplicabilityRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AvailableFor]; 

			ProductFeatureApplicabilityRelationshipClass.Instance.ConcreteRoles.UsedToDefine = ProductFeatureApplicabilityRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UsedToDefine]; 


		}

		internal class RolesType
		{
			internal RoleType AvailableFor;
			internal RoleType UsedToDefine;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AvailableFor;
			internal ConcreteRoleType UsedToDefine;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartSpecificationInterface: Interface
	{
		public static PartSpecificationInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PartSpecificationInterface() : base(AppsDomain.Instance, new Guid("0091574c-edac-4376-8d03-c7e2c2d8132f"))
        {
			this.SingularName = "PartSpecification";
			this.PluralName = "PartSpecifications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("16398cb8-bc6d-4ffc-ae21-1bd358698faa"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("5dfa15ec-52fb-450d-b58f-fe8b72182036"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ea2f5159-9333-4860-bc26-d42776ae639c"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ef6b7736-4b92-43a4-bcdf-15f974f6148b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PartSpecificationPartSpecificationStatus = new RelationType(AppsDomain.Instance, new Guid("202bc60e-5702-4dce-a41a-8dc5e198090c"), new Guid("854fcf78-d6fe-40c8-a988-54df5fb5933c"), new Guid("e60cafba-ec5a-4578-83e4-a4a63d4e49a6"));
			PartSpecificationPartSpecificationStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PartSpecificationPartSpecificationStatus.IsDerived = true;
			PartSpecificationPartSpecificationStatus.IsIndexed = true;

			PartSpecificationPartSpecificationStatus.AssociationType.ObjectType = this;

			PartSpecificationPartSpecificationStatus.RoleType.ObjectType = PartSpecificationStatusClass.Instance;;
			PartSpecificationPartSpecificationStatus.RoleType.AssignedSingularName = "PartSpecificationStatus";
			PartSpecificationPartSpecificationStatus.RoleType.AssignedPluralName = "PartSpecificationStatuses";
			this.Roles.PartSpecificationStatus = PartSpecificationPartSpecificationStatus.RoleType;

			var PartSpecificationCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("4bfcdcc0-d6d3-4335-92ce-a8b1271f4124"), new Guid("792ce48c-749e-4bd3-b0a9-3ab93e802d8d"), new Guid("1ef186ee-e996-4e79-bb81-7f7c406702d1"));
			PartSpecificationCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartSpecificationCurrentObjectState.IsDerived = true;
			PartSpecificationCurrentObjectState.IsIndexed = true;

			PartSpecificationCurrentObjectState.AssociationType.ObjectType = this;

			PartSpecificationCurrentObjectState.RoleType.ObjectType = PartSpecificationObjectStateClass.Instance;;
			PartSpecificationCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			PartSpecificationCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = PartSpecificationCurrentObjectState.RoleType;

			var PartSpecificationDocumentationDate = new RelationType(AppsDomain.Instance, new Guid("6a83ef4b-1ef5-4782-b9fd-19e3231c29c5"), new Guid("93f4241d-23ea-46ad-bcaa-fd1f5c909c43"), new Guid("c2b4a79f-c245-40d5-834e-5939c7748462"));
			PartSpecificationDocumentationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PartSpecificationDocumentationDate.AssociationType.ObjectType = this;

			PartSpecificationDocumentationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PartSpecificationDocumentationDate.RoleType.AssignedSingularName = "DocumentationDate";
			PartSpecificationDocumentationDate.RoleType.AssignedPluralName = "DocumentationDates";
			this.Roles.DocumentationDate = PartSpecificationDocumentationDate.RoleType;

			var PartSpecificationCurrentPartSpecificationStatus = new RelationType(AppsDomain.Instance, new Guid("79f03090-e058-439c-9398-738f08be2be1"), new Guid("8d5e16e5-2a18-4779-ad87-537db639c94e"), new Guid("f5451e3d-67ed-416f-aeeb-45daf876fd0d"));
			PartSpecificationCurrentPartSpecificationStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PartSpecificationCurrentPartSpecificationStatus.IsDerived = true;
			PartSpecificationCurrentPartSpecificationStatus.IsIndexed = true;

			PartSpecificationCurrentPartSpecificationStatus.AssociationType.ObjectType = this;

			PartSpecificationCurrentPartSpecificationStatus.RoleType.ObjectType = PartSpecificationStatusClass.Instance;;
			PartSpecificationCurrentPartSpecificationStatus.RoleType.AssignedSingularName = "CurrentPartSpecificationStatus";
			PartSpecificationCurrentPartSpecificationStatus.RoleType.AssignedPluralName = "CurrenPartSpecificationStatuses";
			this.Roles.CurrentPartSpecificationStatus = PartSpecificationCurrentPartSpecificationStatus.RoleType;

			var PartSpecificationPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("b31753c5-6983-4753-8016-be389a71504b"), new Guid("702aad92-4bd9-461d-87c5-b438ecaa1387"), new Guid("f7307e39-1cce-4e70-a51a-d155a602526b"));
			PartSpecificationPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartSpecificationPreviousObjectState.IsDerived = true;
			PartSpecificationPreviousObjectState.IsIndexed = true;

			PartSpecificationPreviousObjectState.AssociationType.ObjectType = this;

			PartSpecificationPreviousObjectState.RoleType.ObjectType = PartSpecificationObjectStateClass.Instance;;
			PartSpecificationPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			PartSpecificationPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = PartSpecificationPreviousObjectState.RoleType;

			var PartSpecificationDescription = new RelationType(AppsDomain.Instance, new Guid("e20b0fd5-f10a-44df-8bef-f454e7d23bce"), new Guid("0c7ad60f-57c9-469b-b8e4-dabeae4398ee"), new Guid("6a208020-712c-4ce8-b69b-ea4523ba2e85"));
			PartSpecificationDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			PartSpecificationDescription.AssociationType.ObjectType = this;

			PartSpecificationDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartSpecificationDescription.RoleType.AssignedSingularName = "Description";
			PartSpecificationDescription.RoleType.AssignedPluralName = "Descriptions";
			PartSpecificationDescription.RoleType.Size = 256;
			this.Roles.Description = PartSpecificationDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OperatingConditionClass.Instance.ConcreteRoles.PartSpecificationStatus = OperatingConditionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartSpecificationStatus]; 
			PerformanceSpecificationClass.Instance.ConcreteRoles.PartSpecificationStatus = PerformanceSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartSpecificationStatus]; 
			TestingRequirementClass.Instance.ConcreteRoles.PartSpecificationStatus = TestingRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartSpecificationStatus]; 
			ToleranceClass.Instance.ConcreteRoles.PartSpecificationStatus = ToleranceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartSpecificationStatus]; 
			ConstraintSpecificationClass.Instance.ConcreteRoles.PartSpecificationStatus = ConstraintSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartSpecificationStatus]; 

			OperatingConditionClass.Instance.ConcreteRoles.CurrentObjectState = OperatingConditionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			PerformanceSpecificationClass.Instance.ConcreteRoles.CurrentObjectState = PerformanceSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			TestingRequirementClass.Instance.ConcreteRoles.CurrentObjectState = TestingRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			ToleranceClass.Instance.ConcreteRoles.CurrentObjectState = ToleranceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			ConstraintSpecificationClass.Instance.ConcreteRoles.CurrentObjectState = ConstraintSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			OperatingConditionClass.Instance.ConcreteRoles.DocumentationDate = OperatingConditionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentationDate]; 
			PerformanceSpecificationClass.Instance.ConcreteRoles.DocumentationDate = PerformanceSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentationDate]; 
			TestingRequirementClass.Instance.ConcreteRoles.DocumentationDate = TestingRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentationDate]; 
			ToleranceClass.Instance.ConcreteRoles.DocumentationDate = ToleranceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentationDate]; 
			ConstraintSpecificationClass.Instance.ConcreteRoles.DocumentationDate = ConstraintSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentationDate]; 

			OperatingConditionClass.Instance.ConcreteRoles.CurrentPartSpecificationStatus = OperatingConditionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPartSpecificationStatus]; 
			PerformanceSpecificationClass.Instance.ConcreteRoles.CurrentPartSpecificationStatus = PerformanceSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPartSpecificationStatus]; 
			TestingRequirementClass.Instance.ConcreteRoles.CurrentPartSpecificationStatus = TestingRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPartSpecificationStatus]; 
			ToleranceClass.Instance.ConcreteRoles.CurrentPartSpecificationStatus = ToleranceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPartSpecificationStatus]; 
			ConstraintSpecificationClass.Instance.ConcreteRoles.CurrentPartSpecificationStatus = ConstraintSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPartSpecificationStatus]; 

			OperatingConditionClass.Instance.ConcreteRoles.PreviousObjectState = OperatingConditionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			PerformanceSpecificationClass.Instance.ConcreteRoles.PreviousObjectState = PerformanceSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			TestingRequirementClass.Instance.ConcreteRoles.PreviousObjectState = TestingRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			ToleranceClass.Instance.ConcreteRoles.PreviousObjectState = ToleranceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			ConstraintSpecificationClass.Instance.ConcreteRoles.PreviousObjectState = ConstraintSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			OperatingConditionClass.Instance.ConcreteRoles.Description = OperatingConditionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			PerformanceSpecificationClass.Instance.ConcreteRoles.Description = PerformanceSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			TestingRequirementClass.Instance.ConcreteRoles.Description = TestingRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ToleranceClass.Instance.ConcreteRoles.Description = ToleranceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ConstraintSpecificationClass.Instance.ConcreteRoles.Description = ConstraintSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType PartSpecificationStatus;
			internal RoleType CurrentObjectState;
			internal RoleType DocumentationDate;
			internal RoleType CurrentPartSpecificationStatus;
			internal RoleType PreviousObjectState;
			internal RoleType Description;

		}
	}public partial class OrderShipmentClass : Class
	{
		public static OrderShipmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrderShipmentClass() : base(AppsDomain.Instance, new Guid("00be6409-1ca0-491e-b0a1-3d53e17005f6"))
        {
			this.SingularName = "OrderShipment";
			this.PluralName = "OrderShipments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("29149755-2851-46e4-96eb-24fb6d33179d"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrderShipmentSalesOrderItem = new RelationType(AppsDomain.Instance, new Guid("1494758b-f763-48e5-a5a9-cd5c83a8af95"), new Guid("5aa8e3aa-cc9c-4b12-9126-5ab6f160d661"), new Guid("d49541c8-7cf6-439f-84e0-c8a1d73e5f3c"));
			OrderShipmentSalesOrderItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderShipmentSalesOrderItem.IsIndexed = true;

			OrderShipmentSalesOrderItem.AssociationType.ObjectType = this;

			OrderShipmentSalesOrderItem.RoleType.ObjectType = SalesOrderItemClass.Instance;;
			OrderShipmentSalesOrderItem.RoleType.AssignedSingularName = "SalesOrderItem";
			OrderShipmentSalesOrderItem.RoleType.AssignedPluralName = "SalesOrderItems";
			this.Roles.SalesOrderItem = OrderShipmentSalesOrderItem.RoleType;

			var OrderShipmentPicked = new RelationType(AppsDomain.Instance, new Guid("261a25f4-672a-44a0-ad2d-1c62ba383006"), new Guid("cfaa2021-233c-4b55-b33d-65b9344adb67"), new Guid("69f35130-996e-4a55-b6be-90199a2548d0"));
			OrderShipmentPicked.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderShipmentPicked.AssociationType.ObjectType = this;

			OrderShipmentPicked.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			OrderShipmentPicked.RoleType.AssignedSingularName = "Picked";
			OrderShipmentPicked.RoleType.AssignedPluralName = "Pickeds";
			this.Roles.Picked = OrderShipmentPicked.RoleType;

			var OrderShipmentShipmentItem = new RelationType(AppsDomain.Instance, new Guid("b55bbdb8-af05-4008-a6a7-b4eea78096bd"), new Guid("a4d6f79e-c204-44ca-b7db-3a0a3eacff69"), new Guid("a6a0d0ac-15c6-489f-ab15-197314f4f52c"));
			OrderShipmentShipmentItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderShipmentShipmentItem.IsIndexed = true;

			OrderShipmentShipmentItem.AssociationType.ObjectType = this;

			OrderShipmentShipmentItem.RoleType.ObjectType = ShipmentItemClass.Instance;;
			OrderShipmentShipmentItem.RoleType.AssignedSingularName = "ShipmentItem";
			OrderShipmentShipmentItem.RoleType.AssignedPluralName = "ShipmentItems";
			this.Roles.ShipmentItem = OrderShipmentShipmentItem.RoleType;

			var OrderShipmentQuantity = new RelationType(AppsDomain.Instance, new Guid("d4725e9c-b72c-4cdf-95f9-70f9c4b57b11"), new Guid("4f4c74fc-44d8-445e-aa2e-1e79c2fd6b87"), new Guid("c9ce4f17-3bef-4b0b-a5e0-4fc38641f8ed"));
			OrderShipmentQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderShipmentQuantity.AssociationType.ObjectType = this;

			OrderShipmentQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderShipmentQuantity.RoleType.AssignedSingularName = "Quantity";
			OrderShipmentQuantity.RoleType.AssignedPluralName = "Quantities";
			OrderShipmentQuantity.RoleType.Scale = 2;
			OrderShipmentQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = OrderShipmentQuantity.RoleType;

			var OrderShipmentPurchaseOrderItem = new RelationType(AppsDomain.Instance, new Guid("d6c35df9-dad3-4e4c-b66e-5ccda26093d5"), new Guid("b8ea1ed0-ba19-44c3-9e8d-5228734b3bc4"), new Guid("78bddfef-0bbe-4185-8a5a-78e5a3ba42a0"));
			OrderShipmentPurchaseOrderItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderShipmentPurchaseOrderItem.IsIndexed = true;

			OrderShipmentPurchaseOrderItem.AssociationType.ObjectType = this;

			OrderShipmentPurchaseOrderItem.RoleType.ObjectType = PurchaseOrderItemClass.Instance;;
			OrderShipmentPurchaseOrderItem.RoleType.AssignedSingularName = "PurchaseOrderItem";
			OrderShipmentPurchaseOrderItem.RoleType.AssignedPluralName = "PurchaseOrderItems";
			this.Roles.PurchaseOrderItem = OrderShipmentPurchaseOrderItem.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrderShipmentClass.Instance.ConcreteRoles.SalesOrderItem = OrderShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOrderItem]; 

			OrderShipmentClass.Instance.ConcreteRoles.Picked = OrderShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Picked]; 

			OrderShipmentClass.Instance.ConcreteRoles.ShipmentItem = OrderShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentItem]; 

			OrderShipmentClass.Instance.ConcreteRoles.Quantity = OrderShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			OrderShipmentClass.Instance.ConcreteRoles.PurchaseOrderItem = OrderShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseOrderItem]; 


		}

		internal class RolesType
		{
			internal RoleType SalesOrderItem;
			internal RoleType Picked;
			internal RoleType ShipmentItem;
			internal RoleType Quantity;
			internal RoleType PurchaseOrderItem;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType SalesOrderItem;
			internal ConcreteRoleType Picked;
			internal ConcreteRoleType ShipmentItem;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType PurchaseOrderItem;

		}
	}public partial class ProductRequirementClass : Class
	{
		public static ProductRequirementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductRequirementClass() : base(AppsDomain.Instance, new Guid("00cba2fb-feb8-4566-8898-3bde8820211f"))
        {
			this.SingularName = "ProductRequirement";
			this.PluralName = "ProductRequirements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7f440f68-d7ef-4ce7-b80c-8fba40b9fd4d"))
			{
				Subtype = Instance,
				Supertype = RequirementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductRequirementProduct = new RelationType(AppsDomain.Instance, new Guid("48ce0470-5738-4d9b-ab23-ea244e90091d"), new Guid("af379058-8ac3-4d0e-8eb4-715fcdda5e44"), new Guid("9237556e-d3c2-4404-a39c-11660471d23d"));
			ProductRequirementProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductRequirementProduct.IsIndexed = true;

			ProductRequirementProduct.AssociationType.ObjectType = this;

			ProductRequirementProduct.RoleType.ObjectType = ProductInterface.Instance;;
			ProductRequirementProduct.RoleType.AssignedSingularName = "Product";
			ProductRequirementProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = ProductRequirementProduct.RoleType;

			var ProductRequirementDesiredProductFeature = new RelationType(AppsDomain.Instance, new Guid("a72274b6-2767-4cb9-8f3d-dc1e367c6f1b"), new Guid("e991712f-bbed-4cb9-98ef-e7ff2506fc11"), new Guid("57ed8d56-0c40-47a8-9e49-be7a35294800"));
			ProductRequirementDesiredProductFeature.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductRequirementDesiredProductFeature.IsIndexed = true;

			ProductRequirementDesiredProductFeature.AssociationType.ObjectType = this;

			ProductRequirementDesiredProductFeature.RoleType.ObjectType = DesiredProductFeatureClass.Instance;;
			ProductRequirementDesiredProductFeature.RoleType.AssignedSingularName = "DesiredProductFeature";
			ProductRequirementDesiredProductFeature.RoleType.AssignedPluralName = "DesiredProductFeatures";
			this.Roles.DesiredProductFeature = ProductRequirementDesiredProductFeature.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductRequirementClass.Instance.ConcreteRoles.Product = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			ProductRequirementClass.Instance.ConcreteRoles.DesiredProductFeature = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DesiredProductFeature]; 


		}

		internal class RolesType
		{
			internal RoleType Product;
			internal RoleType DesiredProductFeature;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Product;
			internal ConcreteRoleType DesiredProductFeature;
			internal ConcreteRoleType RequiredByDate;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Authorizer;
			internal ConcreteRoleType RequirementStatus;
			internal ConcreteRoleType Reason;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType NeededFor;
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType CurrentRequirementStatus;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ServicedBy;
			internal ConcreteRoleType EstimatedBudget;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class RequestForProposalClass : Class
	{
		public static RequestForProposalClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RequestForProposalClass() : base(AppsDomain.Instance, new Guid("0112ddd0-14de-43e2-97d3-981766dd957e"))
        {
			this.SingularName = "RequestForProposal";
			this.PluralName = "RequestsForProposal";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("489dff28-2aaf-42c4-a2ec-45eb42ba34b1"))
			{
				Subtype = Instance,
				Supertype = RequestInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType RequiredResponseDate;
			internal ConcreteRoleType RequestItem;
			internal ConcreteRoleType RequestNumber;
			internal ConcreteRoleType RespondingParty;
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class SalesInvoiceItemStatusClass : Class
	{
		public static SalesInvoiceItemStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesInvoiceItemStatusClass() : base(AppsDomain.Instance, new Guid("013d3508-a663-4af5-ba01-24b7b907f581"))
        {
			this.SingularName = "SalesInvoiceItemStatus";
			this.PluralName = "SalesInvoiceItemStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("91e4110a-25cc-49b3-b44d-355444140474"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesInvoiceItemStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("2d0de395-ccfe-46b4-9391-020c276ddafd"), new Guid("a4d34c93-13ee-449f-b016-47707c7ae72d"), new Guid("054b768e-78ae-44e9-939f-765fe5c4ccf4"));
			SalesInvoiceItemStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceItemStatusStartDateTime.AssociationType.ObjectType = this;

			SalesInvoiceItemStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			SalesInvoiceItemStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			SalesInvoiceItemStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = SalesInvoiceItemStatusStartDateTime.RoleType;

			var SalesInvoiceItemStatusSalesInvoiceItemObjectState = new RelationType(AppsDomain.Instance, new Guid("ea2f0286-38d6-42ad-825a-a692e51cd209"), new Guid("0b1f32c0-e8de-4d3e-9de8-e172c1477ada"), new Guid("54b5248a-d692-4c78-9cd9-b6a9e7bc3e34"));
			SalesInvoiceItemStatusSalesInvoiceItemObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceItemStatusSalesInvoiceItemObjectState.IsIndexed = true;

			SalesInvoiceItemStatusSalesInvoiceItemObjectState.AssociationType.ObjectType = this;

			SalesInvoiceItemStatusSalesInvoiceItemObjectState.RoleType.ObjectType = SalesInvoiceItemObjectStateClass.Instance;;
			SalesInvoiceItemStatusSalesInvoiceItemObjectState.RoleType.AssignedSingularName = "SalesInvoiceItemObjectState";
			SalesInvoiceItemStatusSalesInvoiceItemObjectState.RoleType.AssignedPluralName = "SalesInvoiceItemObjectStates";
			this.Roles.SalesInvoiceItemObjectState = SalesInvoiceItemStatusSalesInvoiceItemObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesInvoiceItemStatusClass.Instance.ConcreteRoles.StartDateTime = SalesInvoiceItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			SalesInvoiceItemStatusClass.Instance.ConcreteRoles.SalesInvoiceItemObjectState = SalesInvoiceItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesInvoiceItemObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType SalesInvoiceItemObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType SalesInvoiceItemObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class QuoteItemClass : Class
	{
		public static QuoteItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal QuoteItemClass() : base(AppsDomain.Instance, new Guid("01fc58a0-89b8-4dc0-97f9-5f628b9c9577"))
        {
			this.SingularName = "QuoteItem";
			this.PluralName = "QuoteItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("440f228c-b7a4-42c5-8d1e-85a58a9a3f10"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("4b6d22b2-8bae-44e5-b29d-85ad3aa2bd63"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var QuoteItemAuthorizer = new RelationType(AppsDomain.Instance, new Guid("05c69ae6-e671-4520-87c7-5fa24a92c44d"), new Guid("3f668e84-81dc-479a-a26f-b4fbc1cd79ee"), new Guid("e47f270a-f3d9-4c7b-968f-395bbf8e7e68"));
			QuoteItemAuthorizer.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteItemAuthorizer.IsIndexed = true;

			QuoteItemAuthorizer.AssociationType.ObjectType = this;

			QuoteItemAuthorizer.RoleType.ObjectType = PartyInterface.Instance;;
			QuoteItemAuthorizer.RoleType.AssignedSingularName = "Authorizer";
			QuoteItemAuthorizer.RoleType.AssignedPluralName = "Authorizers";
			this.Roles.Authorizer = QuoteItemAuthorizer.RoleType;

			var QuoteItemDeliverable = new RelationType(AppsDomain.Instance, new Guid("1214acee-1b91-4c16-b6d0-84f865b6a43a"), new Guid("b9120662-ebae-4f52-a913-4a3f9a91398e"), new Guid("d008f8e2-a378-4e50-a9dd-32ffa427708c"));
			QuoteItemDeliverable.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteItemDeliverable.IsIndexed = true;

			QuoteItemDeliverable.AssociationType.ObjectType = this;

			QuoteItemDeliverable.RoleType.ObjectType = DeliverableClass.Instance;;
			QuoteItemDeliverable.RoleType.AssignedSingularName = "Deliverable";
			QuoteItemDeliverable.RoleType.AssignedPluralName = "Deliverables";
			this.Roles.Deliverable = QuoteItemDeliverable.RoleType;

			var QuoteItemProduct = new RelationType(AppsDomain.Instance, new Guid("20a5f3d3-8b12-4717-874f-eb62ad0a1654"), new Guid("10c5839d-c046-4b43-919b-d647c70bd94f"), new Guid("56e57558-988c-4b1a-a6f8-7f93f621bd06"));
			QuoteItemProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteItemProduct.IsIndexed = true;

			QuoteItemProduct.AssociationType.ObjectType = this;

			QuoteItemProduct.RoleType.ObjectType = ProductInterface.Instance;;
			QuoteItemProduct.RoleType.AssignedSingularName = "Product";
			QuoteItemProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = QuoteItemProduct.RoleType;

			var QuoteItemEstimatedDeliveryDate = new RelationType(AppsDomain.Instance, new Guid("262a458d-0b38-4123-b210-576633297f44"), new Guid("e252b457-9fac-429d-a337-0c48a46c2bf0"), new Guid("a7ae793d-d315-4ac1-93c7-783391b2d294"));
			QuoteItemEstimatedDeliveryDate.AssignedMultiplicity = Multiplicity.OneToOne;
			QuoteItemEstimatedDeliveryDate.AssociationType.ObjectType = this;

			QuoteItemEstimatedDeliveryDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			QuoteItemEstimatedDeliveryDate.RoleType.AssignedSingularName = "EstimatedDeliveryDate";
			QuoteItemEstimatedDeliveryDate.RoleType.AssignedPluralName = "EstimatedDeliveryDate";
			this.Roles.EstimatedDeliveryDate = QuoteItemEstimatedDeliveryDate.RoleType;

			var QuoteItemUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("28c0e280-16ce-48fc-8bc4-734e1ea0cd36"), new Guid("49bd248e-a34f-43ce-b2fd-9db0d5b01db4"), new Guid("6eb4000d-559d-42b2-b02b-452370fa15b4"));
			QuoteItemUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteItemUnitOfMeasure.IsIndexed = true;

			QuoteItemUnitOfMeasure.AssociationType.ObjectType = this;

			QuoteItemUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			QuoteItemUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			QuoteItemUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = QuoteItemUnitOfMeasure.RoleType;

			var QuoteItemProductFeature = new RelationType(AppsDomain.Instance, new Guid("28f5767e-16fa-40aa-89d9-c23ee29572d1"), new Guid("4d7a3080-b3f9-47e8-8363-474a94699772"), new Guid("1da894ac-53bb-4414-b582-9bc6717f369a"));
			QuoteItemProductFeature.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteItemProductFeature.IsIndexed = true;

			QuoteItemProductFeature.AssociationType.ObjectType = this;

			QuoteItemProductFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			QuoteItemProductFeature.RoleType.AssignedSingularName = "ProductFeature";
			QuoteItemProductFeature.RoleType.AssignedPluralName = "ProductFeatures";
			this.Roles.ProductFeature = QuoteItemProductFeature.RoleType;

			var QuoteItemUnitPrice = new RelationType(AppsDomain.Instance, new Guid("73ecd49f-9614-4902-8ec6-9b503bffe9f2"), new Guid("7ee32e78-a214-4e4a-bb43-d2f6642e997a"), new Guid("e64fb7aa-75de-41a6-a76c-f25f22dfcf47"));
			QuoteItemUnitPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			QuoteItemUnitPrice.AssociationType.ObjectType = this;

			QuoteItemUnitPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			QuoteItemUnitPrice.RoleType.AssignedSingularName = "UnitPrice";
			QuoteItemUnitPrice.RoleType.AssignedPluralName = "UnitPrices";
			QuoteItemUnitPrice.RoleType.Scale = 2;
			QuoteItemUnitPrice.RoleType.Precision = 19;
			this.Roles.UnitPrice = QuoteItemUnitPrice.RoleType;

			var QuoteItemSkill = new RelationType(AppsDomain.Instance, new Guid("8b1280eb-0fef-450e-afc8-dbdc6fc65abb"), new Guid("8a93a23b-6be9-44db-8c92-4ad4c2cc405b"), new Guid("1961e2a8-ecf5-4c7b-8815-8ee4b2461820"));
			QuoteItemSkill.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteItemSkill.IsIndexed = true;

			QuoteItemSkill.AssociationType.ObjectType = this;

			QuoteItemSkill.RoleType.ObjectType = SkillClass.Instance;;
			QuoteItemSkill.RoleType.AssignedSingularName = "Skill";
			QuoteItemSkill.RoleType.AssignedPluralName = "Skill";
			this.Roles.Skill = QuoteItemSkill.RoleType;

			var QuoteItemWorkEffort = new RelationType(AppsDomain.Instance, new Guid("8be8dc07-a358-4b8d-a84c-01bd3efea6fb"), new Guid("803fc0c9-ad84-4679-8906-4f9536c7ff6d"), new Guid("a997bb36-f534-4d90-9a90-947cc2a56a64"));
			QuoteItemWorkEffort.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteItemWorkEffort.IsIndexed = true;

			QuoteItemWorkEffort.AssociationType.ObjectType = this;

			QuoteItemWorkEffort.RoleType.ObjectType = WorkEffortInterface.Instance;;
			QuoteItemWorkEffort.RoleType.AssignedSingularName = "WorkEffort";
			QuoteItemWorkEffort.RoleType.AssignedPluralName = "WorkEfforts";
			this.Roles.WorkEffort = QuoteItemWorkEffort.RoleType;

			var QuoteItemQuoteTerm = new RelationType(AppsDomain.Instance, new Guid("d1f7f2cb-cbc8-42b4-a3f0-198ff35957de"), new Guid("0f429c19-5cb8-459a-b95a-9e3ec1e045f3"), new Guid("0750e77a-40bd-4a0b-89a6-6e6fbb797cc4"));
			QuoteItemQuoteTerm.AssignedMultiplicity = Multiplicity.OneToMany;
			QuoteItemQuoteTerm.IsIndexed = true;

			QuoteItemQuoteTerm.AssociationType.ObjectType = this;

			QuoteItemQuoteTerm.RoleType.ObjectType = QuoteTermClass.Instance;;
			QuoteItemQuoteTerm.RoleType.AssignedSingularName = "QuoteTerm";
			QuoteItemQuoteTerm.RoleType.AssignedPluralName = "QuoteTerms";
			this.Roles.QuoteTerm = QuoteItemQuoteTerm.RoleType;

			var QuoteItemQuantity = new RelationType(AppsDomain.Instance, new Guid("d7805656-dd9c-4144-a11f-efbb32e6ecb3"), new Guid("a1d818f2-8e1a-4984-b2d7-4b1f34558568"), new Guid("3a3442f4-26af-407d-90c6-38c4d5d40bae"));
			QuoteItemQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			QuoteItemQuantity.AssociationType.ObjectType = this;

			QuoteItemQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			QuoteItemQuantity.RoleType.AssignedSingularName = "Quantity";
			QuoteItemQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = QuoteItemQuantity.RoleType;

			var QuoteItemRequestItem = new RelationType(AppsDomain.Instance, new Guid("dc00905b-bb4f-4a47-88d6-1ae6ce0855f7"), new Guid("f9a2cdde-485c-46a0-8f06-9f9687328737"), new Guid("e3308741-e48e-4b91-81ef-de38dcb5d80d"));
			QuoteItemRequestItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteItemRequestItem.IsIndexed = true;

			QuoteItemRequestItem.AssociationType.ObjectType = this;

			QuoteItemRequestItem.RoleType.ObjectType = RequestItemClass.Instance;;
			QuoteItemRequestItem.RoleType.AssignedSingularName = "RequestItem";
			QuoteItemRequestItem.RoleType.AssignedPluralName = "RequestItems";
			this.Roles.RequestItem = QuoteItemRequestItem.RoleType;


		}

		internal override void SetRelationTypes()
		{
			QuoteItemClass.Instance.ConcreteRoles.Authorizer = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Authorizer]; 

			QuoteItemClass.Instance.ConcreteRoles.Deliverable = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Deliverable]; 

			QuoteItemClass.Instance.ConcreteRoles.Product = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			QuoteItemClass.Instance.ConcreteRoles.EstimatedDeliveryDate = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedDeliveryDate]; 

			QuoteItemClass.Instance.ConcreteRoles.UnitOfMeasure = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 

			QuoteItemClass.Instance.ConcreteRoles.ProductFeature = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 

			QuoteItemClass.Instance.ConcreteRoles.UnitPrice = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitPrice]; 

			QuoteItemClass.Instance.ConcreteRoles.Skill = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Skill]; 

			QuoteItemClass.Instance.ConcreteRoles.WorkEffort = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 

			QuoteItemClass.Instance.ConcreteRoles.QuoteTerm = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteTerm]; 

			QuoteItemClass.Instance.ConcreteRoles.Quantity = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			QuoteItemClass.Instance.ConcreteRoles.RequestItem = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequestItem]; 


		}

		internal class RolesType
		{
			internal RoleType Authorizer;
			internal RoleType Deliverable;
			internal RoleType Product;
			internal RoleType EstimatedDeliveryDate;
			internal RoleType UnitOfMeasure;
			internal RoleType ProductFeature;
			internal RoleType UnitPrice;
			internal RoleType Skill;
			internal RoleType WorkEffort;
			internal RoleType QuoteTerm;
			internal RoleType Quantity;
			internal RoleType RequestItem;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Authorizer;
			internal ConcreteRoleType Deliverable;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType EstimatedDeliveryDate;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType UnitPrice;
			internal ConcreteRoleType Skill;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType QuoteTerm;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType RequestItem;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesRepPartyProductCategoryRevenueClass : Class
	{
		public static SalesRepPartyProductCategoryRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesRepPartyProductCategoryRevenueClass() : base(AppsDomain.Instance, new Guid("01fd14a1-c852-42c9-8d16-3243ff655b8f"))
        {
			this.SingularName = "SalesRepPartyProductCategoryRevenue";
			this.PluralName = "SalesRepPartyProductCategoryRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("48cb2131-bdf7-4aba-8bd4-3ac204045111"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("dc73b06a-10ac-4586-be69-1298f7a38176"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesRepPartyProductCategoryRevenueYear = new RelationType(AppsDomain.Instance, new Guid("192f7c27-fd25-45a2-8de2-4101b7ce42f9"), new Guid("8e411184-ed58-4bb2-bb06-771cc93b8f53"), new Guid("06ddf58f-379e-4c8e-9679-c6677fe124e8"));
			SalesRepPartyProductCategoryRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepPartyProductCategoryRevenueYear.AssociationType.ObjectType = this;

			SalesRepPartyProductCategoryRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesRepPartyProductCategoryRevenueYear.RoleType.AssignedSingularName = "Year";
			SalesRepPartyProductCategoryRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = SalesRepPartyProductCategoryRevenueYear.RoleType;

			var SalesRepPartyProductCategoryRevenueSalesRep = new RelationType(AppsDomain.Instance, new Guid("25bd83fe-0ff9-4241-b3e6-d0f1d06ab4be"), new Guid("fa5dfed6-df70-4316-a2ab-f9b3499dd987"), new Guid("fb2b7da7-d226-40fd-a638-d7cb906afa14"));
			SalesRepPartyProductCategoryRevenueSalesRep.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepPartyProductCategoryRevenueSalesRep.IsIndexed = true;

			SalesRepPartyProductCategoryRevenueSalesRep.AssociationType.ObjectType = this;

			SalesRepPartyProductCategoryRevenueSalesRep.RoleType.ObjectType = PersonClass.Instance;;
			SalesRepPartyProductCategoryRevenueSalesRep.RoleType.AssignedSingularName = "SalesRep";
			SalesRepPartyProductCategoryRevenueSalesRep.RoleType.AssignedPluralName = "SalesReps";
			this.Roles.SalesRep = SalesRepPartyProductCategoryRevenueSalesRep.RoleType;

			var SalesRepPartyProductCategoryRevenueProductCategory = new RelationType(AppsDomain.Instance, new Guid("2a3346f4-ea7f-4be0-a69e-fcfb88cba88a"), new Guid("f6b88a6a-a906-4002-a2bf-d9007750bc0d"), new Guid("3e6ee104-2371-48be-aac1-f4f7d752c2e8"));
			SalesRepPartyProductCategoryRevenueProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepPartyProductCategoryRevenueProductCategory.IsIndexed = true;

			SalesRepPartyProductCategoryRevenueProductCategory.AssociationType.ObjectType = this;

			SalesRepPartyProductCategoryRevenueProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			SalesRepPartyProductCategoryRevenueProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			SalesRepPartyProductCategoryRevenueProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = SalesRepPartyProductCategoryRevenueProductCategory.RoleType;

			var SalesRepPartyProductCategoryRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("3ec97b92-b4d9-456a-8a38-6f129fa8f963"), new Guid("67b70d49-9dad-4d20-9388-1cd98e2af413"), new Guid("589a1da1-1add-441b-8cfc-55f0fa0b2242"));
			SalesRepPartyProductCategoryRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepPartyProductCategoryRevenueMonth.AssociationType.ObjectType = this;

			SalesRepPartyProductCategoryRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesRepPartyProductCategoryRevenueMonth.RoleType.AssignedSingularName = "Month";
			SalesRepPartyProductCategoryRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = SalesRepPartyProductCategoryRevenueMonth.RoleType;

			var SalesRepPartyProductCategoryRevenueParty = new RelationType(AppsDomain.Instance, new Guid("46deffbe-e2b7-46d8-9669-27ade84de02c"), new Guid("58fd5226-a4f7-4971-a3e2-54a5b41c2eb7"), new Guid("ea0e2bc7-8df9-4380-abd9-588e6805e84f"));
			SalesRepPartyProductCategoryRevenueParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepPartyProductCategoryRevenueParty.IsIndexed = true;

			SalesRepPartyProductCategoryRevenueParty.AssociationType.ObjectType = this;

			SalesRepPartyProductCategoryRevenueParty.RoleType.ObjectType = PartyInterface.Instance;;
			SalesRepPartyProductCategoryRevenueParty.RoleType.AssignedSingularName = "Party";
			SalesRepPartyProductCategoryRevenueParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = SalesRepPartyProductCategoryRevenueParty.RoleType;

			var SalesRepPartyProductCategoryRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("689ea9aa-082f-43e5-be65-554df3b0f8dc"), new Guid("f3a151f6-3d05-4401-9925-401aff21d437"), new Guid("93a71bd3-c6e1-42a8-9425-9704698c0f1c"));
			SalesRepPartyProductCategoryRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepPartyProductCategoryRevenueRevenue.AssociationType.ObjectType = this;

			SalesRepPartyProductCategoryRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesRepPartyProductCategoryRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			SalesRepPartyProductCategoryRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			SalesRepPartyProductCategoryRevenueRevenue.RoleType.Scale = 2;
			SalesRepPartyProductCategoryRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = SalesRepPartyProductCategoryRevenueRevenue.RoleType;

			var SalesRepPartyProductCategoryRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("77715cdd-a0c6-47da-8072-6a23be984cad"), new Guid("fb61b669-ebf2-46de-9178-a5ded1d03930"), new Guid("c00dfdba-f353-4e2f-a875-70d16e96daaf"));
			SalesRepPartyProductCategoryRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepPartyProductCategoryRevenueCurrency.IsIndexed = true;

			SalesRepPartyProductCategoryRevenueCurrency.AssociationType.ObjectType = this;

			SalesRepPartyProductCategoryRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			SalesRepPartyProductCategoryRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			SalesRepPartyProductCategoryRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = SalesRepPartyProductCategoryRevenueCurrency.RoleType;

			var SalesRepPartyProductCategoryRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("ee15e022-a420-4bbf-84f4-75b380cea7bb"), new Guid("fece3c35-cbf8-495c-820b-bad9f6dd02eb"), new Guid("eac4e8b1-fd89-4d16-86bd-3be5cb1178e2"));
			SalesRepPartyProductCategoryRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepPartyProductCategoryRevenueInternalOrganisation.IsIndexed = true;

			SalesRepPartyProductCategoryRevenueInternalOrganisation.AssociationType.ObjectType = this;

			SalesRepPartyProductCategoryRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesRepPartyProductCategoryRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			SalesRepPartyProductCategoryRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = SalesRepPartyProductCategoryRevenueInternalOrganisation.RoleType;

			var SalesRepPartyProductCategoryRevenueSalesRepName = new RelationType(AppsDomain.Instance, new Guid("f378a0a3-0ffc-4761-8ccc-d906b257c2f2"), new Guid("1f9500ce-38dc-4b90-a638-c2a457978cc4"), new Guid("a7b8f672-2e7e-4413-a3ff-a3a9ac7b3452"));
			SalesRepPartyProductCategoryRevenueSalesRepName.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepPartyProductCategoryRevenueSalesRepName.AssociationType.ObjectType = this;

			SalesRepPartyProductCategoryRevenueSalesRepName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			SalesRepPartyProductCategoryRevenueSalesRepName.RoleType.AssignedSingularName = "SalesRepName";
			SalesRepPartyProductCategoryRevenueSalesRepName.RoleType.AssignedPluralName = "SalesRepNames";
			SalesRepPartyProductCategoryRevenueSalesRepName.RoleType.Size = 256;
			this.Roles.SalesRepName = SalesRepPartyProductCategoryRevenueSalesRepName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.Year = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.SalesRep = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRep]; 

			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.ProductCategory = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.Month = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.Party = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.Revenue = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.Currency = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.InternalOrganisation = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.SalesRepName = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRepName]; 


		}

		internal class RolesType
		{
			internal RoleType Year;
			internal RoleType SalesRep;
			internal RoleType ProductCategory;
			internal RoleType Month;
			internal RoleType Party;
			internal RoleType Revenue;
			internal RoleType Currency;
			internal RoleType InternalOrganisation;
			internal RoleType SalesRepName;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Year;
			internal ConcreteRoleType SalesRep;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType SalesRepName;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PayGradeClass : Class
	{
		public static PayGradeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PayGradeClass() : base(AppsDomain.Instance, new Guid("028de4a4-12d4-422f-8d82-4f1edaa471ae"))
        {
			this.SingularName = "PayGrade";
			this.PluralName = "PayGrades";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("021c31b8-e556-4632-92dc-74a07d4f9f3d"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a90c1e14-fd06-4765-b453-54191be8e875"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PayGradeName = new RelationType(AppsDomain.Instance, new Guid("88ba9ad4-e7de-42d9-89d7-9292d34d308b"), new Guid("36e42e9c-a623-493f-a29b-a34cdf485612"), new Guid("64944205-252c-49d7-8a59-771b4a8a4318"));
			PayGradeName.AssignedMultiplicity = Multiplicity.OneToOne;
			PayGradeName.AssociationType.ObjectType = this;

			PayGradeName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PayGradeName.RoleType.AssignedSingularName = "Name";
			PayGradeName.RoleType.AssignedPluralName = "Names";
			PayGradeName.RoleType.Size = 256;
			this.Roles.Name = PayGradeName.RoleType;

			var PayGradeSalaryStep = new RelationType(AppsDomain.Instance, new Guid("f7e52596-8814-48ff-a703-d80255110c5f"), new Guid("7ff0bc91-cc37-468d-b5ed-ae2de433acc8"), new Guid("dc165e1f-88d2-4fb3-af0d-10d229f93528"));
			PayGradeSalaryStep.AssignedMultiplicity = Multiplicity.OneToMany;
			PayGradeSalaryStep.IsIndexed = true;

			PayGradeSalaryStep.AssociationType.ObjectType = this;

			PayGradeSalaryStep.RoleType.ObjectType = SalaryStepClass.Instance;;
			PayGradeSalaryStep.RoleType.AssignedSingularName = "SalaryStep";
			PayGradeSalaryStep.RoleType.AssignedPluralName = "SalarySteps";
			this.Roles.SalaryStep = PayGradeSalaryStep.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PayGradeClass.Instance.ConcreteRoles.Name = PayGradeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			PayGradeClass.Instance.ConcreteRoles.SalaryStep = PayGradeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalaryStep]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType SalaryStep;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType SalaryStep;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class PartyProductCategoryRevenueHistoryClass : Class
	{
		public static PartyProductCategoryRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyProductCategoryRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("02dec829-d0f0-4dfe-8dea-74aeadbe4fc3"))
        {
			this.SingularName = "PartyProductCategoryRevenueHistory";
			this.PluralName = "PartyProductCategoryRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2a2ac822-d86d-4260-8340-e7077ce77e20"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyProductCategoryRevenueHistoryProductCategory = new RelationType(AppsDomain.Instance, new Guid("045cbf8e-1fef-4d3b-a111-1eaccfceba3b"), new Guid("6b752901-eecb-4f07-bf49-73ef66fd11a8"), new Guid("4c5aa074-4d26-476e-bd2f-ff80e348dec1"));
			PartyProductCategoryRevenueHistoryProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductCategoryRevenueHistoryProductCategory.IsIndexed = true;

			PartyProductCategoryRevenueHistoryProductCategory.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueHistoryProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			PartyProductCategoryRevenueHistoryProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			PartyProductCategoryRevenueHistoryProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = PartyProductCategoryRevenueHistoryProductCategory.RoleType;

			var PartyProductCategoryRevenueHistoryParty = new RelationType(AppsDomain.Instance, new Guid("06ae29c3-7375-47ee-8e0f-9eaa62874adc"), new Guid("d1a9033b-14cd-4bd6-aaea-0edff9c28ac3"), new Guid("ef5995f9-61c8-49cc-afa8-28bea455e573"));
			PartyProductCategoryRevenueHistoryParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductCategoryRevenueHistoryParty.IsIndexed = true;

			PartyProductCategoryRevenueHistoryParty.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueHistoryParty.RoleType.ObjectType = PartyInterface.Instance;;
			PartyProductCategoryRevenueHistoryParty.RoleType.AssignedSingularName = "Party";
			PartyProductCategoryRevenueHistoryParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = PartyProductCategoryRevenueHistoryParty.RoleType;

			var PartyProductCategoryRevenueHistoryQuantity = new RelationType(AppsDomain.Instance, new Guid("4211bfb3-5162-448a-878c-79e107af79e9"), new Guid("3023fbcd-d4ab-4d59-9250-332ed7dd45a3"), new Guid("c3659cb8-de68-401a-b206-a58bdc94dd27"));
			PartyProductCategoryRevenueHistoryQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductCategoryRevenueHistoryQuantity.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueHistoryQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyProductCategoryRevenueHistoryQuantity.RoleType.AssignedSingularName = "Quantity";
			PartyProductCategoryRevenueHistoryQuantity.RoleType.AssignedPluralName = "Quantities";
			PartyProductCategoryRevenueHistoryQuantity.RoleType.Scale = 2;
			PartyProductCategoryRevenueHistoryQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = PartyProductCategoryRevenueHistoryQuantity.RoleType;

			var PartyProductCategoryRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("4e4845c9-9c37-49ec-9b5c-1cd5f247edd4"), new Guid("f311eb9c-0aa9-4a8d-9283-ab8f32760519"), new Guid("bd33990b-5cf6-4e53-85c2-bfc743f1dfb8"));
			PartyProductCategoryRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductCategoryRevenueHistoryRevenue.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyProductCategoryRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			PartyProductCategoryRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			PartyProductCategoryRevenueHistoryRevenue.RoleType.Scale = 2;
			PartyProductCategoryRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = PartyProductCategoryRevenueHistoryRevenue.RoleType;

			var PartyProductCategoryRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("785561cc-1c88-4ac2-811c-4fd304c1c0c1"), new Guid("5c235877-9214-45d6-956b-a7e0d2cdafa1"), new Guid("aec14320-5fa6-405b-b02d-dadef054e952"));
			PartyProductCategoryRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductCategoryRevenueHistoryInternalOrganisation.IsIndexed = true;

			PartyProductCategoryRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PartyProductCategoryRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PartyProductCategoryRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PartyProductCategoryRevenueHistoryInternalOrganisation.RoleType;

			var PartyProductCategoryRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("9154e239-b23b-43f5-b77d-e5bb81c0bcc2"), new Guid("71b45408-43d1-457f-aba1-30c6641fe996"), new Guid("bdc40f4d-2bbe-485f-ae7e-1e8942a339cf"));
			PartyProductCategoryRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductCategoryRevenueHistoryCurrency.IsIndexed = true;

			PartyProductCategoryRevenueHistoryCurrency.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PartyProductCategoryRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			PartyProductCategoryRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PartyProductCategoryRevenueHistoryCurrency.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.ProductCategory = PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.Party = PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.Quantity = PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.Revenue = PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.Currency = PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 


		}

		internal class RolesType
		{
			internal RoleType ProductCategory;
			internal RoleType Party;
			internal RoleType Quantity;
			internal RoleType Revenue;
			internal RoleType InternalOrganisation;
			internal RoleType Currency;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DiscountAdjustmentClass : Class
	{
		public static DiscountAdjustmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DiscountAdjustmentClass() : base(AppsDomain.Instance, new Guid("0346a1e2-03c7-4f1e-94ae-35fdf64143a9"))
        {
			this.SingularName = "DiscountAdjustment";
			this.PluralName = "DiscountAdjustments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("81324939-fae1-4c18-a420-28b41b1fe5a8"))
			{
				Subtype = Instance,
				Supertype = OrderAdjustmentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType Percentage;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PositionClass : Class
	{
		public static PositionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PositionClass() : base(AppsDomain.Instance, new Guid("04540476-602f-456a-b300-54166b65c8b1"))
        {
			this.SingularName = "Position";
			this.PluralName = "Positions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("38946670-4ca1-43c6-933c-ae60e1857166"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PositionOrganisation = new RelationType(AppsDomain.Instance, new Guid("137841cd-fa69-4704-a6e3-cd710c51af43"), new Guid("834d2485-8aac-4e7e-86ad-0b7c5c21b368"), new Guid("7f6522ca-1f5b-4c97-99b4-1f4ac6670d8e"));
			PositionOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionOrganisation.IsIndexed = true;

			PositionOrganisation.AssociationType.ObjectType = this;

			PositionOrganisation.RoleType.ObjectType = OrganisationClass.Instance;;
			PositionOrganisation.RoleType.AssignedSingularName = "Organisation";
			PositionOrganisation.RoleType.AssignedPluralName = "Organisations";
			this.Roles.Organisation = PositionOrganisation.RoleType;

			var PositionTemporary = new RelationType(AppsDomain.Instance, new Guid("2806ca00-0b79-45e5-835e-b11f45b05f15"), new Guid("144fcdd3-d66c-4ad3-9c68-a6f8c96afdc5"), new Guid("cc54251d-b913-41f7-ba48-982e5829c0f0"));
			PositionTemporary.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionTemporary.AssociationType.ObjectType = this;

			PositionTemporary.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			PositionTemporary.RoleType.AssignedSingularName = "Temporary";
			PositionTemporary.RoleType.AssignedPluralName = "Temporaries";
			this.Roles.Temporary = PositionTemporary.RoleType;

			var PositionEstimatedThroughDate = new RelationType(AppsDomain.Instance, new Guid("39298cc2-0869-4dc9-b0ff-bea8269ba958"), new Guid("7ca00aff-ad0b-4195-902b-39b3d5cc2c25"), new Guid("949968c0-dc95-44d3-a8f0-65829a884c3b"));
			PositionEstimatedThroughDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionEstimatedThroughDate.AssociationType.ObjectType = this;

			PositionEstimatedThroughDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PositionEstimatedThroughDate.RoleType.AssignedSingularName = "EstimatedThroughDate";
			PositionEstimatedThroughDate.RoleType.AssignedPluralName = "EstimatedThroughDates";
			this.Roles.EstimatedThroughDate = PositionEstimatedThroughDate.RoleType;

			var PositionEstimatedFromDate = new RelationType(AppsDomain.Instance, new Guid("6ede43f7-87a5-429c-8fc0-6441ca8753f1"), new Guid("c2100e41-9586-485c-8110-693de5479a9e"), new Guid("5f2fa20d-f4c8-468e-b9bb-d9a3cd777b70"));
			PositionEstimatedFromDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionEstimatedFromDate.AssociationType.ObjectType = this;

			PositionEstimatedFromDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PositionEstimatedFromDate.RoleType.AssignedSingularName = "EstimatedFromDate";
			PositionEstimatedFromDate.RoleType.AssignedPluralName = "EstimatedFromDates";
			this.Roles.EstimatedFromDate = PositionEstimatedFromDate.RoleType;

			var PositionPositionType = new RelationType(AppsDomain.Instance, new Guid("8166d3b6-cc9d-486a-9321-5cd97ff49ddc"), new Guid("2c5ea5b2-9bea-4181-8c4e-ae903e93c8f8"), new Guid("03b86a68-6063-4299-aa94-ed3f1850f115"));
			PositionPositionType.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionPositionType.IsIndexed = true;

			PositionPositionType.AssociationType.ObjectType = this;

			PositionPositionType.RoleType.ObjectType = PositionTypeClass.Instance;;
			PositionPositionType.RoleType.AssignedSingularName = "PositionType";
			PositionPositionType.RoleType.AssignedPluralName = "PositionTypes";
			this.Roles.PositionType = PositionPositionType.RoleType;

			var PositionFulltime = new RelationType(AppsDomain.Instance, new Guid("bf81174e-1105-4313-8d42-4a7b03bfc308"), new Guid("679e6db2-ffd5-47db-a601-624d9f852057"), new Guid("a345fe4c-caa6-4d40-a168-e97d315bc37d"));
			PositionFulltime.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionFulltime.AssociationType.ObjectType = this;

			PositionFulltime.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			PositionFulltime.RoleType.AssignedSingularName = "Fulltime";
			PositionFulltime.RoleType.AssignedPluralName = "Fulltimes";
			this.Roles.Fulltime = PositionFulltime.RoleType;

			var PositionSalary = new RelationType(AppsDomain.Instance, new Guid("cb040fe9-8cdb-4e3a-9a32-e6700f1a8867"), new Guid("0ee703ac-5647-4402-aee8-bfc1eaad2b7c"), new Guid("ec97642c-97dc-423d-b379-e3dce90d0d0d"));
			PositionSalary.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionSalary.AssociationType.ObjectType = this;

			PositionSalary.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			PositionSalary.RoleType.AssignedSingularName = "Salary";
			PositionSalary.RoleType.AssignedPluralName = "Salaries";
			this.Roles.Salary = PositionSalary.RoleType;

			var PositionPositionStatus = new RelationType(AppsDomain.Instance, new Guid("db94dd2c-5f39-4f64-ad6d-ce80bf7a4c22"), new Guid("1e391ccb-da94-4b69-8dc7-b0659eaaf201"), new Guid("c3123ffe-f6d2-4d46-87be-77e184ec8adb"));
			PositionPositionStatus.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionPositionStatus.IsIndexed = true;

			PositionPositionStatus.AssociationType.ObjectType = this;

			PositionPositionStatus.RoleType.ObjectType = PositionStatusClass.Instance;;
			PositionPositionStatus.RoleType.AssignedSingularName = "PositionStatus";
			PositionPositionStatus.RoleType.AssignedPluralName = "PositionStatuses";
			this.Roles.PositionStatus = PositionPositionStatus.RoleType;

			var PositionApprovedBudgetItem = new RelationType(AppsDomain.Instance, new Guid("e1f8d2a3-83a7-4357-9451-858c314dbefc"), new Guid("5d53246b-9497-476e-b68a-e8e5bea2c851"), new Guid("a026d5da-a2dd-4443-956f-2c6d8c73a894"));
			PositionApprovedBudgetItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionApprovedBudgetItem.IsIndexed = true;

			PositionApprovedBudgetItem.AssociationType.ObjectType = this;

			PositionApprovedBudgetItem.RoleType.ObjectType = BudgetItemClass.Instance;;
			PositionApprovedBudgetItem.RoleType.AssignedSingularName = "ApprovedBudgetItem";
			PositionApprovedBudgetItem.RoleType.AssignedPluralName = "ApprovedBudgetItems";
			this.Roles.ApprovedBudgetItem = PositionApprovedBudgetItem.RoleType;

			var PositionActualFromDate = new RelationType(AppsDomain.Instance, new Guid("ec8beecc-9e28-4103-94d3-249aed76c934"), new Guid("c68b7794-0379-4542-8f1b-24311e2358a4"), new Guid("3a72f3f0-0476-4629-9831-ed43ebaa8cf5"));
			PositionActualFromDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionActualFromDate.AssociationType.ObjectType = this;

			PositionActualFromDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PositionActualFromDate.RoleType.AssignedSingularName = "ActualFromDate";
			PositionActualFromDate.RoleType.AssignedPluralName = "ActualFromDates";
			this.Roles.ActualFromDate = PositionActualFromDate.RoleType;

			var PositionActualThroughDate = new RelationType(AppsDomain.Instance, new Guid("fc328a1a-4f62-42de-96b2-a61c612a1602"), new Guid("f815e446-05a5-4fa3-b3b4-4c7a94b7ca1f"), new Guid("c8cb5709-08d5-4b3b-9598-15289ba9d689"));
			PositionActualThroughDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionActualThroughDate.AssociationType.ObjectType = this;

			PositionActualThroughDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PositionActualThroughDate.RoleType.AssignedSingularName = "ActualThroughDate";
			PositionActualThroughDate.RoleType.AssignedPluralName = "ActualThroughDates";
			this.Roles.ActualThroughDate = PositionActualThroughDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PositionClass.Instance.ConcreteRoles.Organisation = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Organisation]; 

			PositionClass.Instance.ConcreteRoles.Temporary = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Temporary]; 

			PositionClass.Instance.ConcreteRoles.EstimatedThroughDate = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedThroughDate]; 

			PositionClass.Instance.ConcreteRoles.EstimatedFromDate = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedFromDate]; 

			PositionClass.Instance.ConcreteRoles.PositionType = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PositionType]; 

			PositionClass.Instance.ConcreteRoles.Fulltime = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Fulltime]; 

			PositionClass.Instance.ConcreteRoles.Salary = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Salary]; 

			PositionClass.Instance.ConcreteRoles.PositionStatus = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PositionStatus]; 

			PositionClass.Instance.ConcreteRoles.ApprovedBudgetItem = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ApprovedBudgetItem]; 

			PositionClass.Instance.ConcreteRoles.ActualFromDate = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualFromDate]; 

			PositionClass.Instance.ConcreteRoles.ActualThroughDate = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualThroughDate]; 


		}

		internal class RolesType
		{
			internal RoleType Organisation;
			internal RoleType Temporary;
			internal RoleType EstimatedThroughDate;
			internal RoleType EstimatedFromDate;
			internal RoleType PositionType;
			internal RoleType Fulltime;
			internal RoleType Salary;
			internal RoleType PositionStatus;
			internal RoleType ApprovedBudgetItem;
			internal RoleType ActualFromDate;
			internal RoleType ActualThroughDate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Organisation;
			internal ConcreteRoleType Temporary;
			internal ConcreteRoleType EstimatedThroughDate;
			internal ConcreteRoleType EstimatedFromDate;
			internal ConcreteRoleType PositionType;
			internal ConcreteRoleType Fulltime;
			internal ConcreteRoleType Salary;
			internal ConcreteRoleType PositionStatus;
			internal ConcreteRoleType ApprovedBudgetItem;
			internal ConcreteRoleType ActualFromDate;
			internal ConcreteRoleType ActualThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class LetterCorrespondenceClass : Class
	{
		public static LetterCorrespondenceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal LetterCorrespondenceClass() : base(AppsDomain.Instance, new Guid("05964e28-2c1d-4837-a887-2255f157e889"))
        {
			this.SingularName = "LetterCorrespondence";
			this.PluralName = "LetterCorrespondences";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3eb4a962-9834-4bf1-883c-9cda6af83099"))
			{
				Subtype = Instance,
				Supertype = CommunicationEventInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var LetterCorrespondencePostalAddress = new RelationType(AppsDomain.Instance, new Guid("3e0f1be5-0685-48d6-922f-6e971110b414"), new Guid("d063c86e-bbee-41b9-9823-10e96c69c5a0"), new Guid("14ca37a9-7ce4-4d2a-b7ba-1a43bccc1664"));
			LetterCorrespondencePostalAddress.AssignedMultiplicity = Multiplicity.ManyToMany;
			LetterCorrespondencePostalAddress.IsIndexed = true;

			LetterCorrespondencePostalAddress.AssociationType.ObjectType = this;

			LetterCorrespondencePostalAddress.RoleType.ObjectType = PostalAddressClass.Instance;;
			LetterCorrespondencePostalAddress.RoleType.AssignedSingularName = "PostalAddress";
			LetterCorrespondencePostalAddress.RoleType.AssignedPluralName = "PostalAddresses";
			this.Roles.PostalAddress = LetterCorrespondencePostalAddress.RoleType;

			var LetterCorrespondenceOriginator = new RelationType(AppsDomain.Instance, new Guid("e8fd2c39-bcb7-4914-8cd3-6dcc6a7a9997"), new Guid("d5ed6948-f657-4d47-89c8-d860e2971138"), new Guid("b65552b5-99c7-4b91-b9b6-a70ec35c3ae2"));
			LetterCorrespondenceOriginator.AssignedMultiplicity = Multiplicity.ManyToOne;
			LetterCorrespondenceOriginator.IsIndexed = true;

			LetterCorrespondenceOriginator.AssociationType.ObjectType = this;

			LetterCorrespondenceOriginator.RoleType.ObjectType = PartyInterface.Instance;;
			LetterCorrespondenceOriginator.RoleType.AssignedSingularName = "Originator";
			LetterCorrespondenceOriginator.RoleType.AssignedPluralName = "Originators";
			this.Roles.Originator = LetterCorrespondenceOriginator.RoleType;

			var LetterCorrespondenceReceiver = new RelationType(AppsDomain.Instance, new Guid("ece02647-000a-4373-8f01-f4b7d1c75dd5"), new Guid("e580ed8f-a7a4-40c3-9c0a-4cdbe95354a6"), new Guid("dde368dc-c198-4744-b3b2-1a2e0d2976e4"));
			LetterCorrespondenceReceiver.AssignedMultiplicity = Multiplicity.ManyToMany;
			LetterCorrespondenceReceiver.IsIndexed = true;

			LetterCorrespondenceReceiver.AssociationType.ObjectType = this;

			LetterCorrespondenceReceiver.RoleType.ObjectType = PartyInterface.Instance;;
			LetterCorrespondenceReceiver.RoleType.AssignedSingularName = "Receiver";
			LetterCorrespondenceReceiver.RoleType.AssignedPluralName = "Receivers";
			this.Roles.Receiver = LetterCorrespondenceReceiver.RoleType;


		}

		internal override void SetRelationTypes()
		{
			LetterCorrespondenceClass.Instance.ConcreteRoles.PostalAddress = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PostalAddress]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.Originator = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.Receiver = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Receiver]; 


		}

		internal class RolesType
		{
			internal RoleType PostalAddress;
			internal RoleType Originator;
			internal RoleType Receiver;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PostalAddress;
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType Receiver;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType ToContactMechanism;
			internal ConcreteRoleType CommunicationEventStatus;
			internal ConcreteRoleType InvolvedParty;
			internal ConcreteRoleType InitialScheduledStart;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType EventPurpose;
			internal ConcreteRoleType ScheduledEnd;
			internal ConcreteRoleType ActualEnd;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType InitialScheduledEnd;
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType Subject;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType Case;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType FromContactMechanism;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType CurrentCommunicationEventStatus;
			internal ConcreteRoleType Note;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PurchaseOrderClass : Class
	{
		public static PurchaseOrderClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseOrderClass() : base(AppsDomain.Instance, new Guid("062bd939-9902-4747-a631-99ea10002156"))
        {
			this.SingularName = "PurchaseOrder";
			this.PluralName = "PurchaseOrders";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("de9d74cb-1148-4411-9c97-a742cd57e3a4"))
			{
				Subtype = Instance,
				Supertype = OrderInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseOrderPurchaseOrderItem = new RelationType(AppsDomain.Instance, new Guid("15ea478f-b71d-412f-8ee4-abe554b9a7d8"), new Guid("e48c8211-2539-41ba-9250-27a08799b31b"), new Guid("6ef2d258-4291-4a9f-b7f0-9f154b789775"));
			PurchaseOrderPurchaseOrderItem.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseOrderPurchaseOrderItem.IsIndexed = true;

			PurchaseOrderPurchaseOrderItem.AssociationType.ObjectType = this;

			PurchaseOrderPurchaseOrderItem.RoleType.ObjectType = PurchaseOrderItemClass.Instance;;
			PurchaseOrderPurchaseOrderItem.RoleType.AssignedSingularName = "PurchaseOrderItem";
			PurchaseOrderPurchaseOrderItem.RoleType.AssignedPluralName = "PurchaseOrderItems";
			this.Roles.PurchaseOrderItem = PurchaseOrderPurchaseOrderItem.RoleType;

			var PurchaseOrderPreviousTakenViaSupplier = new RelationType(AppsDomain.Instance, new Guid("1638a432-3a4f-4cca-906e-660b9164838b"), new Guid("04f4151a-1adf-426a-9fb1-a0f8cc782b0e"), new Guid("20131db5-50af-42a8-9ac8-fd250c1aa8b6"));
			PurchaseOrderPreviousTakenViaSupplier.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderPreviousTakenViaSupplier.IsDerived = true;
			PurchaseOrderPreviousTakenViaSupplier.IsIndexed = true;

			PurchaseOrderPreviousTakenViaSupplier.AssociationType.ObjectType = this;

			PurchaseOrderPreviousTakenViaSupplier.RoleType.ObjectType = PartyInterface.Instance;;
			PurchaseOrderPreviousTakenViaSupplier.RoleType.AssignedSingularName = "PreviousTakenViaSupplier";
			PurchaseOrderPreviousTakenViaSupplier.RoleType.AssignedPluralName = "PreviousTakenViaSuppliers";
			this.Roles.PreviousTakenViaSupplier = PurchaseOrderPreviousTakenViaSupplier.RoleType;

			var PurchaseOrderPaymentStatus = new RelationType(AppsDomain.Instance, new Guid("169ea375-cb46-44b9-a0b8-e0c9c37d6eb5"), new Guid("259aaa98-e60f-4c2e-a08d-ae3e25c44434"), new Guid("c442da88-7371-4305-96e0-a2771502fefc"));
			PurchaseOrderPaymentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseOrderPaymentStatus.IsDerived = true;
			PurchaseOrderPaymentStatus.IsIndexed = true;

			PurchaseOrderPaymentStatus.AssociationType.ObjectType = this;

			PurchaseOrderPaymentStatus.RoleType.ObjectType = PurchaseOrderStatusClass.Instance;;
			PurchaseOrderPaymentStatus.RoleType.AssignedSingularName = "PaymentStatus";
			PurchaseOrderPaymentStatus.RoleType.AssignedPluralName = "PaymentStatuses";
			this.Roles.PaymentStatus = PurchaseOrderPaymentStatus.RoleType;

			var PurchaseOrderCurrentPaymentStatus = new RelationType(AppsDomain.Instance, new Guid("2a4ce670-53f4-4c31-9e46-96437f4a80e1"), new Guid("82e04803-a492-45ef-b7ce-9eca4f521c51"), new Guid("e52f200c-d14c-442b-a4cc-1670ec47efe1"));
			PurchaseOrderCurrentPaymentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseOrderCurrentPaymentStatus.IsDerived = true;
			PurchaseOrderCurrentPaymentStatus.IsIndexed = true;

			PurchaseOrderCurrentPaymentStatus.AssociationType.ObjectType = this;

			PurchaseOrderCurrentPaymentStatus.RoleType.ObjectType = PurchaseOrderStatusClass.Instance;;
			PurchaseOrderCurrentPaymentStatus.RoleType.AssignedSingularName = "CurrentPaymentStatus";
			PurchaseOrderCurrentPaymentStatus.RoleType.AssignedPluralName = "CurrentPaymentStatuses";
			this.Roles.CurrentPaymentStatus = PurchaseOrderCurrentPaymentStatus.RoleType;

			var PurchaseOrderTakenViaSupplier = new RelationType(AppsDomain.Instance, new Guid("36607a9e-d411-4726-a63c-7622b928bfe8"), new Guid("a8573588-3898-4422-92a2-056448200216"), new Guid("31a6a1a2-92ee-4ffd-9eb8-d69e8f2183fd"));
			PurchaseOrderTakenViaSupplier.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderTakenViaSupplier.IsIndexed = true;

			PurchaseOrderTakenViaSupplier.AssociationType.ObjectType = this;

			PurchaseOrderTakenViaSupplier.RoleType.ObjectType = PartyInterface.Instance;;
			PurchaseOrderTakenViaSupplier.RoleType.AssignedSingularName = "TakenViaSupplier";
			PurchaseOrderTakenViaSupplier.RoleType.AssignedPluralName = "TakenViaSuppliers";
			this.Roles.TakenViaSupplier = PurchaseOrderTakenViaSupplier.RoleType;

			var PurchaseOrderCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("3b1f04bd-c9ad-4fca-981c-2ca243fdc292"), new Guid("e50e5e9b-f312-4520-81d1-1dbd7f856d0f"), new Guid("64e08e15-4d4d-465b-9d9e-c9e7c971a56d"));
			PurchaseOrderCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderCurrentObjectState.IsDerived = true;
			PurchaseOrderCurrentObjectState.IsIndexed = true;

			PurchaseOrderCurrentObjectState.AssociationType.ObjectType = this;

			PurchaseOrderCurrentObjectState.RoleType.ObjectType = PurchaseOrderObjectStateClass.Instance;;
			PurchaseOrderCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			PurchaseOrderCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = PurchaseOrderCurrentObjectState.RoleType;

			var PurchaseOrderCurrentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("3edb1f6e-8497-4730-8144-e64f6c8d4446"), new Guid("c5628e77-b2cf-42c0-a583-930731aa8474"), new Guid("4c8c8e44-84d7-450a-bfcc-158e1879b189"));
			PurchaseOrderCurrentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseOrderCurrentShipmentStatus.IsDerived = true;
			PurchaseOrderCurrentShipmentStatus.IsIndexed = true;

			PurchaseOrderCurrentShipmentStatus.AssociationType.ObjectType = this;

			PurchaseOrderCurrentShipmentStatus.RoleType.ObjectType = PurchaseOrderStatusClass.Instance;;
			PurchaseOrderCurrentShipmentStatus.RoleType.AssignedSingularName = "CurrentShipmentStatus";
			PurchaseOrderCurrentShipmentStatus.RoleType.AssignedPluralName = "CurrentShipmentStatuses";
			this.Roles.CurrentShipmentStatus = PurchaseOrderCurrentShipmentStatus.RoleType;

			var PurchaseOrderTakenViaContactMechanism = new RelationType(AppsDomain.Instance, new Guid("4830cfc5-0375-4996-8cd8-27e36c102b65"), new Guid("efa439f8-787e-43d7-bd1b-400cba7e3a62"), new Guid("583bfc51-0bb7-4ea5-914c-33a5c2d64196"));
			PurchaseOrderTakenViaContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderTakenViaContactMechanism.IsIndexed = true;

			PurchaseOrderTakenViaContactMechanism.AssociationType.ObjectType = this;

			PurchaseOrderTakenViaContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			PurchaseOrderTakenViaContactMechanism.RoleType.AssignedSingularName = "TakenViaContactMechanism";
			PurchaseOrderTakenViaContactMechanism.RoleType.AssignedPluralName = "TakenViaContactMechanisms";
			this.Roles.TakenViaContactMechanism = PurchaseOrderTakenViaContactMechanism.RoleType;

			var PurchaseOrderOrderStatus = new RelationType(AppsDomain.Instance, new Guid("6d0f4867-3237-4c3e-b00b-96f4ad456c55"), new Guid("ac51d7e6-abd1-4d07-9b25-34888b4f830d"), new Guid("e146ab05-15d4-4f29-a89c-c97b5a75d0cf"));
			PurchaseOrderOrderStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseOrderOrderStatus.IsDerived = true;
			PurchaseOrderOrderStatus.IsIndexed = true;

			PurchaseOrderOrderStatus.AssociationType.ObjectType = this;

			PurchaseOrderOrderStatus.RoleType.ObjectType = PurchaseOrderStatusClass.Instance;;
			PurchaseOrderOrderStatus.RoleType.AssignedSingularName = "OrderStatus";
			PurchaseOrderOrderStatus.RoleType.AssignedPluralName = "OrderStatuses";
			this.Roles.OrderStatus = PurchaseOrderOrderStatus.RoleType;

			var PurchaseOrderBillToContactMechanism = new RelationType(AppsDomain.Instance, new Guid("7eceb1b6-1395-4655-a558-6d72ad4b380e"), new Guid("b6e1159c-fcb7-47f1-822b-4ab75e5dac14"), new Guid("ab3ee3c7-dc02-4acf-a34e-6b25783e11fc"));
			PurchaseOrderBillToContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderBillToContactMechanism.IsIndexed = true;

			PurchaseOrderBillToContactMechanism.AssociationType.ObjectType = this;

			PurchaseOrderBillToContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			PurchaseOrderBillToContactMechanism.RoleType.AssignedSingularName = "BillToContactMechanism";
			PurchaseOrderBillToContactMechanism.RoleType.AssignedPluralName = "BillToContactMechanisms";
			this.Roles.BillToContactMechanism = PurchaseOrderBillToContactMechanism.RoleType;

			var PurchaseOrderShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("87a2439e-83e1-4b51-97b8-9c21cc743e07"), new Guid("711e264a-74eb-4229-a4d1-82ddef1bb597"), new Guid("0316aafc-f5b2-41b2-bf39-7c2b7e4e0afc"));
			PurchaseOrderShipmentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseOrderShipmentStatus.IsDerived = true;
			PurchaseOrderShipmentStatus.IsIndexed = true;

			PurchaseOrderShipmentStatus.AssociationType.ObjectType = this;

			PurchaseOrderShipmentStatus.RoleType.ObjectType = PurchaseOrderStatusClass.Instance;;
			PurchaseOrderShipmentStatus.RoleType.AssignedSingularName = "ShipmentStatus";
			PurchaseOrderShipmentStatus.RoleType.AssignedPluralName = "ShipmentStatuses";
			this.Roles.ShipmentStatus = PurchaseOrderShipmentStatus.RoleType;

			var PurchaseOrderShipToBuyer = new RelationType(AppsDomain.Instance, new Guid("b390a733-e322-4ada-9ead-75a8c9976337"), new Guid("6082b0af-f5ed-493c-bb2b-ad4764053819"), new Guid("c725b348-df8f-4a64-adc2-c3d8b3b986b5"));
			PurchaseOrderShipToBuyer.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderShipToBuyer.IsIndexed = true;

			PurchaseOrderShipToBuyer.AssociationType.ObjectType = this;

			PurchaseOrderShipToBuyer.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PurchaseOrderShipToBuyer.RoleType.AssignedSingularName = "ShipToBuyer";
			PurchaseOrderShipToBuyer.RoleType.AssignedPluralName = "ShipToBuyers";
			this.Roles.ShipToBuyer = PurchaseOrderShipToBuyer.RoleType;

			var PurchaseOrderCurrentOrderStatus = new RelationType(AppsDomain.Instance, new Guid("cbcf2101-3e38-4c69-b5ea-a6860ea056f0"), new Guid("72fdb437-3f79-454a-9294-883901f7ffd5"), new Guid("9c2cd7fa-6279-4bab-a2d3-c2eaf6ef7cff"));
			PurchaseOrderCurrentOrderStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseOrderCurrentOrderStatus.IsDerived = true;
			PurchaseOrderCurrentOrderStatus.IsIndexed = true;

			PurchaseOrderCurrentOrderStatus.AssociationType.ObjectType = this;

			PurchaseOrderCurrentOrderStatus.RoleType.ObjectType = PurchaseOrderStatusClass.Instance;;
			PurchaseOrderCurrentOrderStatus.RoleType.AssignedSingularName = "CurrentOrderStatus";
			PurchaseOrderCurrentOrderStatus.RoleType.AssignedPluralName = "CurrentOrderStatuses";
			this.Roles.CurrentOrderStatus = PurchaseOrderCurrentOrderStatus.RoleType;

			var PurchaseOrderFacility = new RelationType(AppsDomain.Instance, new Guid("ccf88515-6441-4d0f-a2e7-8f5ed7c0533e"), new Guid("ce230886-53a7-4360-b545-a20d3cf47f1f"), new Guid("2f7e7d1b-6a61-41a6-a05f-375e8a5feeb2"));
			PurchaseOrderFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderFacility.IsIndexed = true;

			PurchaseOrderFacility.AssociationType.ObjectType = this;

			PurchaseOrderFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			PurchaseOrderFacility.RoleType.AssignedSingularName = "Facility";
			PurchaseOrderFacility.RoleType.AssignedPluralName = "Facilities";
			this.Roles.Facility = PurchaseOrderFacility.RoleType;

			var PurchaseOrderShipToAddress = new RelationType(AppsDomain.Instance, new Guid("d74bd1fd-f243-4b5d-8061-1eafe7c25beb"), new Guid("5465663b-6757-4b1d-9f91-233bfd86bc5d"), new Guid("35c28c9f-852a-4ebb-bc2b-1dce9e3812fa"));
			PurchaseOrderShipToAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderShipToAddress.IsIndexed = true;

			PurchaseOrderShipToAddress.AssociationType.ObjectType = this;

			PurchaseOrderShipToAddress.RoleType.ObjectType = PostalAddressClass.Instance;;
			PurchaseOrderShipToAddress.RoleType.AssignedSingularName = "ShipToAddress";
			PurchaseOrderShipToAddress.RoleType.AssignedPluralName = "ShipToAdresses";
			this.Roles.ShipToAddress = PurchaseOrderShipToAddress.RoleType;

			var PurchaseOrderPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("dd73dbd1-aa0e-4a19-a31d-5ebcdafccd45"), new Guid("f824cb43-7bc9-47f2-b754-36dc16c43076"), new Guid("8b52f909-abe4-4e77-85fa-6cf37198f179"));
			PurchaseOrderPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderPreviousObjectState.IsDerived = true;
			PurchaseOrderPreviousObjectState.IsIndexed = true;

			PurchaseOrderPreviousObjectState.AssociationType.ObjectType = this;

			PurchaseOrderPreviousObjectState.RoleType.ObjectType = PurchaseOrderObjectStateClass.Instance;;
			PurchaseOrderPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			PurchaseOrderPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = PurchaseOrderPreviousObjectState.RoleType;

			var PurchaseOrderBillToPurchaser = new RelationType(AppsDomain.Instance, new Guid("f05e0ba5-4321-4d88-8f2c-8994de5b44b7"), new Guid("38d76559-6a9c-48c7-bde5-1a2e685b9a40"), new Guid("a0b2ec91-5b7e-4abb-91fb-91836cb88490"));
			PurchaseOrderBillToPurchaser.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderBillToPurchaser.IsIndexed = true;

			PurchaseOrderBillToPurchaser.AssociationType.ObjectType = this;

			PurchaseOrderBillToPurchaser.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PurchaseOrderBillToPurchaser.RoleType.AssignedSingularName = "BillToPurchaser";
			PurchaseOrderBillToPurchaser.RoleType.AssignedPluralName = "BillToPurchasers";
			this.Roles.BillToPurchaser = PurchaseOrderBillToPurchaser.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseOrderClass.Instance.ConcreteRoles.PurchaseOrderItem = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseOrderItem]; 

			PurchaseOrderClass.Instance.ConcreteRoles.PreviousTakenViaSupplier = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousTakenViaSupplier]; 

			PurchaseOrderClass.Instance.ConcreteRoles.PaymentStatus = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentStatus]; 

			PurchaseOrderClass.Instance.ConcreteRoles.CurrentPaymentStatus = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPaymentStatus]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TakenViaSupplier = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TakenViaSupplier]; 

			PurchaseOrderClass.Instance.ConcreteRoles.CurrentObjectState = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			PurchaseOrderClass.Instance.ConcreteRoles.CurrentShipmentStatus = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentShipmentStatus]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TakenViaContactMechanism = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TakenViaContactMechanism]; 

			PurchaseOrderClass.Instance.ConcreteRoles.OrderStatus = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderStatus]; 

			PurchaseOrderClass.Instance.ConcreteRoles.BillToContactMechanism = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToContactMechanism]; 

			PurchaseOrderClass.Instance.ConcreteRoles.ShipmentStatus = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentStatus]; 

			PurchaseOrderClass.Instance.ConcreteRoles.ShipToBuyer = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToBuyer]; 

			PurchaseOrderClass.Instance.ConcreteRoles.CurrentOrderStatus = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentOrderStatus]; 

			PurchaseOrderClass.Instance.ConcreteRoles.Facility = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 

			PurchaseOrderClass.Instance.ConcreteRoles.ShipToAddress = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToAddress]; 

			PurchaseOrderClass.Instance.ConcreteRoles.PreviousObjectState = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			PurchaseOrderClass.Instance.ConcreteRoles.BillToPurchaser = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToPurchaser]; 


		}

		internal class RolesType
		{
			internal RoleType PurchaseOrderItem;
			internal RoleType PreviousTakenViaSupplier;
			internal RoleType PaymentStatus;
			internal RoleType CurrentPaymentStatus;
			internal RoleType TakenViaSupplier;
			internal RoleType CurrentObjectState;
			internal RoleType CurrentShipmentStatus;
			internal RoleType TakenViaContactMechanism;
			internal RoleType OrderStatus;
			internal RoleType BillToContactMechanism;
			internal RoleType ShipmentStatus;
			internal RoleType ShipToBuyer;
			internal RoleType CurrentOrderStatus;
			internal RoleType Facility;
			internal RoleType ShipToAddress;
			internal RoleType PreviousObjectState;
			internal RoleType BillToPurchaser;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PurchaseOrderItem;
			internal ConcreteRoleType PreviousTakenViaSupplier;
			internal ConcreteRoleType PaymentStatus;
			internal ConcreteRoleType CurrentPaymentStatus;
			internal ConcreteRoleType TakenViaSupplier;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType CurrentShipmentStatus;
			internal ConcreteRoleType TakenViaContactMechanism;
			internal ConcreteRoleType OrderStatus;
			internal ConcreteRoleType BillToContactMechanism;
			internal ConcreteRoleType ShipmentStatus;
			internal ConcreteRoleType ShipToBuyer;
			internal ConcreteRoleType CurrentOrderStatus;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ShipToAddress;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType BillToPurchaser;
			internal ConcreteRoleType CustomerCurrency;
			internal ConcreteRoleType TotalBasePriceCustomerCurrency;
			internal ConcreteRoleType TotalIncVatCustomerCurrency;
			internal ConcreteRoleType TotalDiscountCustomerCurrency;
			internal ConcreteRoleType CustomerReference;
			internal ConcreteRoleType Fee;
			internal ConcreteRoleType TotalExVat;
			internal ConcreteRoleType OrderTerm;
			internal ConcreteRoleType TotalVat;
			internal ConcreteRoleType TotalSurcharge;
			internal ConcreteRoleType ValidOrderItem;
			internal ConcreteRoleType OrderNumber;
			internal ConcreteRoleType TotalVatCustomerCurrency;
			internal ConcreteRoleType TotalDiscount;
			internal ConcreteRoleType Message;
			internal ConcreteRoleType TotalShippingAndHandlingCustomerCurrency;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DiscountAdjustment;
			internal ConcreteRoleType OrderKind;
			internal ConcreteRoleType TotalIncVat;
			internal ConcreteRoleType TotalSurchargeCustomerCurrency;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType TotalFeeCustomerCurrency;
			internal ConcreteRoleType TotalShippingAndHandling;
			internal ConcreteRoleType ShippingAndHandlingCharge;
			internal ConcreteRoleType OrderDate;
			internal ConcreteRoleType TotalExVatCustomerCurrency;
			internal ConcreteRoleType DeliveryDate;
			internal ConcreteRoleType TotalBasePrice;
			internal ConcreteRoleType TotalFee;
			internal ConcreteRoleType SurchargeAdjustment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType Locale;

		}
	}public partial class QuoteInterface: Interface
	{
		public static QuoteInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal QuoteInterface() : base(AppsDomain.Instance, new Guid("066bf242-2710-4a68-8ff6-ce4d7d88a04a"))
        {
			this.SingularName = "Quote";
			this.PluralName = "Quotes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0f5351ea-f5b9-4101-841e-67ac605f3293"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var QuoteValidFromDate = new RelationType(AppsDomain.Instance, new Guid("033df6dd-fdf7-44e4-84ca-5c7e100cb3f5"), new Guid("4b19f443-0d27-447d-8186-e5361a094460"), new Guid("fa17ef86-c074-414e-b223-b62522d68280"));
			QuoteValidFromDate.AssignedMultiplicity = Multiplicity.OneToOne;
			QuoteValidFromDate.AssociationType.ObjectType = this;

			QuoteValidFromDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			QuoteValidFromDate.RoleType.AssignedSingularName = "ValidFromDate";
			QuoteValidFromDate.RoleType.AssignedPluralName = "ValidFromDates";
			this.Roles.ValidFromDate = QuoteValidFromDate.RoleType;

			var QuoteQuoteTerm = new RelationType(AppsDomain.Instance, new Guid("05e3454a-0a7a-488d-b4b1-f0fd41392ddf"), new Guid("ca3f0d26-9ead-4691-8f7f-f79272065251"), new Guid("92e46228-ad44-4b9b-b727-23159a59bca3"));
			QuoteQuoteTerm.AssignedMultiplicity = Multiplicity.ManyToMany;
			QuoteQuoteTerm.IsIndexed = true;

			QuoteQuoteTerm.AssociationType.ObjectType = this;

			QuoteQuoteTerm.RoleType.ObjectType = QuoteTermClass.Instance;;
			QuoteQuoteTerm.RoleType.AssignedSingularName = "QuoteTerm";
			QuoteQuoteTerm.RoleType.AssignedPluralName = "QuoteTerms";
			this.Roles.QuoteTerm = QuoteQuoteTerm.RoleType;

			var QuoteIssuer = new RelationType(AppsDomain.Instance, new Guid("20880670-0496-4d24-8c97-69b83867c09e"), new Guid("c2bfd7fd-7956-4c28-960e-539f8159e46a"), new Guid("3242cf4f-589c-457b-9ecd-59110041ab34"));
			QuoteIssuer.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteIssuer.IsIndexed = true;

			QuoteIssuer.AssociationType.ObjectType = this;

			QuoteIssuer.RoleType.ObjectType = PartyInterface.Instance;;
			QuoteIssuer.RoleType.AssignedSingularName = "Issuer";
			QuoteIssuer.RoleType.AssignedPluralName = "Issuers";
			this.Roles.Issuer = QuoteIssuer.RoleType;

			var QuoteValidThroughDate = new RelationType(AppsDomain.Instance, new Guid("2140e106-2ef3-427a-be94-458c2b8e154d"), new Guid("9d81ada4-a4f3-44bb-9098-bc1a3e61de19"), new Guid("60581583-2536-4b09-acae-f0f877169dae"));
			QuoteValidThroughDate.AssignedMultiplicity = Multiplicity.OneToOne;
			QuoteValidThroughDate.AssociationType.ObjectType = this;

			QuoteValidThroughDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			QuoteValidThroughDate.RoleType.AssignedSingularName = "ValidThroughDate";
			QuoteValidThroughDate.RoleType.AssignedPluralName = "ValidThroughDates";
			this.Roles.ValidThroughDate = QuoteValidThroughDate.RoleType;

			var QuoteDescription = new RelationType(AppsDomain.Instance, new Guid("3da51ccc-24b9-4b03-9218-7da06492224d"), new Guid("602c70c9-ddc4-4cf5-a79f-0abcc0beba15"), new Guid("d4d93ad0-c59d-40e7-a82c-4fb1e54a85f2"));
			QuoteDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			QuoteDescription.AssociationType.ObjectType = this;

			QuoteDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			QuoteDescription.RoleType.AssignedSingularName = "Description";
			QuoteDescription.RoleType.AssignedPluralName = "Descriptions";
			QuoteDescription.RoleType.Size = 256;
			this.Roles.Description = QuoteDescription.RoleType;

			var QuoteReceiver = new RelationType(AppsDomain.Instance, new Guid("9119c598-cd98-43da-bfdf-1e6573112c9e"), new Guid("d48cd46d-889b-4e2d-a6d6-ee26f30fb3e5"), new Guid("56f5d5ee-1ab5-48f2-a413-7b80dd2c283e"));
			QuoteReceiver.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteReceiver.IsIndexed = true;

			QuoteReceiver.AssociationType.ObjectType = this;

			QuoteReceiver.RoleType.ObjectType = PartyInterface.Instance;;
			QuoteReceiver.RoleType.AssignedSingularName = "Receiver";
			QuoteReceiver.RoleType.AssignedPluralName = "Receivers";
			this.Roles.Receiver = QuoteReceiver.RoleType;

			var QuoteAmount = new RelationType(AppsDomain.Instance, new Guid("b5bcf357-ef14-424d-ad8d-01a8e3ff478c"), new Guid("b9338369-9081-4fa7-91c2-140a46ea7d27"), new Guid("984b073d-0213-4539-8d3c-a35a81a71bd5"));
			QuoteAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			QuoteAmount.AssociationType.ObjectType = this;

			QuoteAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			QuoteAmount.RoleType.AssignedSingularName = "Amount";
			QuoteAmount.RoleType.AssignedPluralName = "Amounts";
			QuoteAmount.RoleType.Scale = 2;
			QuoteAmount.RoleType.Precision = 19;
			this.Roles.Amount = QuoteAmount.RoleType;

			var QuoteIssueDate = new RelationType(AppsDomain.Instance, new Guid("d7dc81e8-76e7-4c68-9843-a2aaf8293510"), new Guid("6fbc80d1-e72b-4484-a9b1-e606f15d2435"), new Guid("219cb27f-20b5-48b3-9d89-4b119798b092"));
			QuoteIssueDate.AssignedMultiplicity = Multiplicity.OneToOne;
			QuoteIssueDate.AssociationType.ObjectType = this;

			QuoteIssueDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			QuoteIssueDate.RoleType.AssignedSingularName = "IssueDate";
			QuoteIssueDate.RoleType.AssignedPluralName = "IssueDates";
			this.Roles.IssueDate = QuoteIssueDate.RoleType;

			var QuoteQuoteItem = new RelationType(AppsDomain.Instance, new Guid("e250154a-77c5-4a0b-ae3d-28668a9037d1"), new Guid("b5ba8cfd-2b16-4a50-89cd-46927d59b97a"), new Guid("f5b6881b-c4d5-42e3-a024-0ae4564cb970"));
			QuoteQuoteItem.AssignedMultiplicity = Multiplicity.OneToMany;
			QuoteQuoteItem.IsIndexed = true;

			QuoteQuoteItem.AssociationType.ObjectType = this;

			QuoteQuoteItem.RoleType.ObjectType = QuoteItemClass.Instance;;
			QuoteQuoteItem.RoleType.AssignedSingularName = "QuoteItem";
			QuoteQuoteItem.RoleType.AssignedPluralName = "QuoteItems";
			this.Roles.QuoteItem = QuoteQuoteItem.RoleType;

			var QuoteQuoteNumber = new RelationType(AppsDomain.Instance, new Guid("e76cbd73-78b7-4ef8-a24c-9ac0db152f7f"), new Guid("057ad29f-c245-44b2-8a95-71bd6607830b"), new Guid("218e3a6e-b530-41f7-a60e-7587f8072c8c"));
			QuoteQuoteNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			QuoteQuoteNumber.AssociationType.ObjectType = this;

			QuoteQuoteNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			QuoteQuoteNumber.RoleType.AssignedSingularName = "QuoteNumber";
			QuoteQuoteNumber.RoleType.AssignedPluralName = "QuoteNumbers";
			QuoteQuoteNumber.RoleType.Size = 256;
			this.Roles.QuoteNumber = QuoteQuoteNumber.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProposalClass.Instance.ConcreteRoles.ValidFromDate = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ValidFromDate]; 
			StatementOfWorkClass.Instance.ConcreteRoles.ValidFromDate = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ValidFromDate]; 
			ProductQuoteClass.Instance.ConcreteRoles.ValidFromDate = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ValidFromDate]; 

			ProposalClass.Instance.ConcreteRoles.QuoteTerm = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteTerm]; 
			StatementOfWorkClass.Instance.ConcreteRoles.QuoteTerm = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteTerm]; 
			ProductQuoteClass.Instance.ConcreteRoles.QuoteTerm = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteTerm]; 

			ProposalClass.Instance.ConcreteRoles.Issuer = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Issuer]; 
			StatementOfWorkClass.Instance.ConcreteRoles.Issuer = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Issuer]; 
			ProductQuoteClass.Instance.ConcreteRoles.Issuer = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Issuer]; 

			ProposalClass.Instance.ConcreteRoles.ValidThroughDate = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ValidThroughDate]; 
			StatementOfWorkClass.Instance.ConcreteRoles.ValidThroughDate = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ValidThroughDate]; 
			ProductQuoteClass.Instance.ConcreteRoles.ValidThroughDate = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ValidThroughDate]; 

			ProposalClass.Instance.ConcreteRoles.Description = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			StatementOfWorkClass.Instance.ConcreteRoles.Description = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ProductQuoteClass.Instance.ConcreteRoles.Description = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			ProposalClass.Instance.ConcreteRoles.Receiver = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Receiver]; 
			StatementOfWorkClass.Instance.ConcreteRoles.Receiver = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Receiver]; 
			ProductQuoteClass.Instance.ConcreteRoles.Receiver = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Receiver]; 

			ProposalClass.Instance.ConcreteRoles.Amount = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 
			StatementOfWorkClass.Instance.ConcreteRoles.Amount = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 
			ProductQuoteClass.Instance.ConcreteRoles.Amount = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 

			ProposalClass.Instance.ConcreteRoles.IssueDate = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IssueDate]; 
			StatementOfWorkClass.Instance.ConcreteRoles.IssueDate = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IssueDate]; 
			ProductQuoteClass.Instance.ConcreteRoles.IssueDate = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IssueDate]; 

			ProposalClass.Instance.ConcreteRoles.QuoteItem = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteItem]; 
			StatementOfWorkClass.Instance.ConcreteRoles.QuoteItem = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteItem]; 
			ProductQuoteClass.Instance.ConcreteRoles.QuoteItem = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteItem]; 

			ProposalClass.Instance.ConcreteRoles.QuoteNumber = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteNumber]; 
			StatementOfWorkClass.Instance.ConcreteRoles.QuoteNumber = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteNumber]; 
			ProductQuoteClass.Instance.ConcreteRoles.QuoteNumber = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteNumber]; 


		}

		internal class RolesType
		{
			internal RoleType ValidFromDate;
			internal RoleType QuoteTerm;
			internal RoleType Issuer;
			internal RoleType ValidThroughDate;
			internal RoleType Description;
			internal RoleType Receiver;
			internal RoleType Amount;
			internal RoleType IssueDate;
			internal RoleType QuoteItem;
			internal RoleType QuoteNumber;

		}
	}public partial class GlBudgetAllocationClass : Class
	{
		public static GlBudgetAllocationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal GlBudgetAllocationClass() : base(AppsDomain.Instance, new Guid("084829bc-d347-489a-9557-9ff1ac7fb5a0"))
        {
			this.SingularName = "GlBudgetAllocation";
			this.PluralName = "GlBudgetAllocations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7c3ae79e-6137-4c65-815f-c140637c70e7"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var GlBudgetAllocationGeneralLedgerAccount = new RelationType(AppsDomain.Instance, new Guid("b09babba-1379-44fe-9e5f-89ec75c65a9c"), new Guid("9531b256-5424-4c34-9b3c-4348fb1e1672"), new Guid("8908be29-0ab1-446a-b4e0-e251fcb546d2"));
			GlBudgetAllocationGeneralLedgerAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			GlBudgetAllocationGeneralLedgerAccount.IsIndexed = true;

			GlBudgetAllocationGeneralLedgerAccount.AssociationType.ObjectType = this;

			GlBudgetAllocationGeneralLedgerAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			GlBudgetAllocationGeneralLedgerAccount.RoleType.AssignedSingularName = "GeneralLedgerAccount";
			GlBudgetAllocationGeneralLedgerAccount.RoleType.AssignedPluralName = "GeneralLedgerAccounts";
			this.Roles.GeneralLedgerAccount = GlBudgetAllocationGeneralLedgerAccount.RoleType;

			var GlBudgetAllocationBudgetItem = new RelationType(AppsDomain.Instance, new Guid("dddccd24-864c-48bb-b1ac-35b8a201cd65"), new Guid("babbcdc0-7d4b-4679-a937-cbf6f5632c8b"), new Guid("2ee2162b-6936-4322-8d5b-1175d29f1308"));
			GlBudgetAllocationBudgetItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			GlBudgetAllocationBudgetItem.IsIndexed = true;

			GlBudgetAllocationBudgetItem.AssociationType.ObjectType = this;

			GlBudgetAllocationBudgetItem.RoleType.ObjectType = BudgetItemClass.Instance;;
			GlBudgetAllocationBudgetItem.RoleType.AssignedSingularName = "BudgetItem";
			GlBudgetAllocationBudgetItem.RoleType.AssignedPluralName = "BudgetItems";
			this.Roles.BudgetItem = GlBudgetAllocationBudgetItem.RoleType;

			var GlBudgetAllocationAllocationPercentage = new RelationType(AppsDomain.Instance, new Guid("eb1e7e03-8b88-4a69-b1cc-46dc77b44a8b"), new Guid("cd06b83b-3b19-4b6d-bed8-90c5ece3c600"), new Guid("fb5e417d-b1b1-4e23-90d4-01b0464e3a1b"));
			GlBudgetAllocationAllocationPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			GlBudgetAllocationAllocationPercentage.AssociationType.ObjectType = this;

			GlBudgetAllocationAllocationPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			GlBudgetAllocationAllocationPercentage.RoleType.AssignedSingularName = "AllocationPercentage";
			GlBudgetAllocationAllocationPercentage.RoleType.AssignedPluralName = "AllocationPercentages";
			GlBudgetAllocationAllocationPercentage.RoleType.Scale = 2;
			GlBudgetAllocationAllocationPercentage.RoleType.Precision = 19;
			this.Roles.AllocationPercentage = GlBudgetAllocationAllocationPercentage.RoleType;


		}

		internal override void SetRelationTypes()
		{
			GlBudgetAllocationClass.Instance.ConcreteRoles.GeneralLedgerAccount = GlBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccount]; 

			GlBudgetAllocationClass.Instance.ConcreteRoles.BudgetItem = GlBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetItem]; 

			GlBudgetAllocationClass.Instance.ConcreteRoles.AllocationPercentage = GlBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AllocationPercentage]; 


		}

		internal class RolesType
		{
			internal RoleType GeneralLedgerAccount;
			internal RoleType BudgetItem;
			internal RoleType AllocationPercentage;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType GeneralLedgerAccount;
			internal ConcreteRoleType BudgetItem;
			internal ConcreteRoleType AllocationPercentage;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartyRelationshipInterface: Interface
	{
		public static PartyRelationshipInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PartyRelationshipInterface() : base(AppsDomain.Instance, new Guid("084abb92-31fd-46e6-ab85-9a7a88c9d72b"))
        {
			this.SingularName = "PartyRelationship";
			this.PluralName = "PartyRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("39652d34-eea4-4f93-a24a-74ecbc07dcdb"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("422d340c-9246-4020-90ec-c33975856499"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a617b0ed-81db-4dbe-8f26-55438aee4e84"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PartyRelationshipPartyRelationshipStatus = new RelationType(AppsDomain.Instance, new Guid("1da069bb-5e29-49e0-93a8-b869a7f2d61a"), new Guid("5a6aeb4c-b76a-4044-b43a-2d226225bac1"), new Guid("86b546d6-d286-4048-bf5c-2de020b39690"));
			PartyRelationshipPartyRelationshipStatus.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyRelationshipPartyRelationshipStatus.IsIndexed = true;

			PartyRelationshipPartyRelationshipStatus.AssociationType.ObjectType = this;

			PartyRelationshipPartyRelationshipStatus.RoleType.ObjectType = PartyRelationshipStatusClass.Instance;;
			PartyRelationshipPartyRelationshipStatus.RoleType.AssignedSingularName = "PartyRelationshipStatus";
			PartyRelationshipPartyRelationshipStatus.RoleType.AssignedPluralName = "PartyRelationshipStatuses";
			this.Roles.PartyRelationshipStatus = PartyRelationshipPartyRelationshipStatus.RoleType;

			var PartyRelationshipRelationshipAgreement = new RelationType(AppsDomain.Instance, new Guid("296628f5-ad97-47b0-8865-6221a43f45e9"), new Guid("c04bb236-5c81-445d-a363-125002b01cea"), new Guid("0a2a7b62-da4d-4099-b89e-7bf451ed9009"));
			PartyRelationshipRelationshipAgreement.AssignedMultiplicity = Multiplicity.OneToMany;
			PartyRelationshipRelationshipAgreement.IsIndexed = true;

			PartyRelationshipRelationshipAgreement.AssociationType.ObjectType = this;

			PartyRelationshipRelationshipAgreement.RoleType.ObjectType = AgreementInterface.Instance;;
			PartyRelationshipRelationshipAgreement.RoleType.AssignedSingularName = "RelationshipAgreement";
			PartyRelationshipRelationshipAgreement.RoleType.AssignedPluralName = "RelationshipAgreements";
			this.Roles.RelationshipAgreement = PartyRelationshipRelationshipAgreement.RoleType;

			var PartyRelationshipPartyRelationshipPriority = new RelationType(AppsDomain.Instance, new Guid("37273d64-63d7-4878-a5c0-1d4a834ebc9f"), new Guid("72d44569-cb28-42a4-8b70-a3298ef36dfd"), new Guid("426a2ea4-2335-4a9c-8e1d-3258c4f58639"));
			PartyRelationshipPartyRelationshipPriority.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyRelationshipPartyRelationshipPriority.IsIndexed = true;

			PartyRelationshipPartyRelationshipPriority.AssociationType.ObjectType = this;

			PartyRelationshipPartyRelationshipPriority.RoleType.ObjectType = PriorityClass.Instance;;
			PartyRelationshipPartyRelationshipPriority.RoleType.AssignedSingularName = "PartyRelationshipPriority";
			PartyRelationshipPartyRelationshipPriority.RoleType.AssignedPluralName = "PartyRelationshipPriorities";
			this.Roles.PartyRelationshipPriority = PartyRelationshipPartyRelationshipPriority.RoleType;

			var PartyRelationshipSimpleMovingAverage = new RelationType(AppsDomain.Instance, new Guid("9a0effb1-eff9-402a-9864-470569be9e7b"), new Guid("fbb79a3b-013d-4ec9-93ae-3b80b759f6eb"), new Guid("f4e6833d-da52-484e-8c6f-b1f55730178e"));
			PartyRelationshipSimpleMovingAverage.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyRelationshipSimpleMovingAverage.AssociationType.ObjectType = this;

			PartyRelationshipSimpleMovingAverage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyRelationshipSimpleMovingAverage.RoleType.AssignedSingularName = "SimpleMovingAverage";
			PartyRelationshipSimpleMovingAverage.RoleType.AssignedPluralName = "SimpleMovingAverages";
			PartyRelationshipSimpleMovingAverage.RoleType.Scale = 2;
			PartyRelationshipSimpleMovingAverage.RoleType.Precision = 19;
			this.Roles.SimpleMovingAverage = PartyRelationshipSimpleMovingAverage.RoleType;

			var PartyRelationshipCommunicationEvent = new RelationType(AppsDomain.Instance, new Guid("9dc11de2-ddf4-4f38-8cbe-776d9fad599d"), new Guid("f4b2e224-e024-471e-b145-4d2f819d7e8b"), new Guid("f2d86632-03c8-4724-bf11-3aad09bea789"));
			PartyRelationshipCommunicationEvent.AssignedMultiplicity = Multiplicity.OneToMany;
			PartyRelationshipCommunicationEvent.IsIndexed = true;

			PartyRelationshipCommunicationEvent.AssociationType.ObjectType = this;

			PartyRelationshipCommunicationEvent.RoleType.ObjectType = CommunicationEventInterface.Instance;;
			PartyRelationshipCommunicationEvent.RoleType.AssignedSingularName = "CommunicationEvent";
			PartyRelationshipCommunicationEvent.RoleType.AssignedPluralName = "CommunicationEvents";
			this.Roles.CommunicationEvent = PartyRelationshipCommunicationEvent.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SupplierRelationshipClass.Instance.ConcreteRoles.PartyRelationshipStatus = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			OrganisationRollUpClass.Instance.ConcreteRoles.PartyRelationshipStatus = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			CustomerRelationshipClass.Instance.ConcreteRoles.PartyRelationshipStatus = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			EmploymentClass.Instance.ConcreteRoles.PartyRelationshipStatus = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			SalesRepRelationshipClass.Instance.ConcreteRoles.PartyRelationshipStatus = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.PartyRelationshipStatus = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.PartyRelationshipStatus = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			ClientRelationshipClass.Instance.ConcreteRoles.PartyRelationshipStatus = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			PartnershipClass.Instance.ConcreteRoles.PartyRelationshipStatus = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			ProspectRelationshipClass.Instance.ConcreteRoles.PartyRelationshipStatus = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			SubContractorRelationshipClass.Instance.ConcreteRoles.PartyRelationshipStatus = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.PartyRelationshipStatus = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipStatus]; 

			SupplierRelationshipClass.Instance.ConcreteRoles.RelationshipAgreement = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			OrganisationRollUpClass.Instance.ConcreteRoles.RelationshipAgreement = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			CustomerRelationshipClass.Instance.ConcreteRoles.RelationshipAgreement = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			EmploymentClass.Instance.ConcreteRoles.RelationshipAgreement = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			SalesRepRelationshipClass.Instance.ConcreteRoles.RelationshipAgreement = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.RelationshipAgreement = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.RelationshipAgreement = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			ClientRelationshipClass.Instance.ConcreteRoles.RelationshipAgreement = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			PartnershipClass.Instance.ConcreteRoles.RelationshipAgreement = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			ProspectRelationshipClass.Instance.ConcreteRoles.RelationshipAgreement = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			SubContractorRelationshipClass.Instance.ConcreteRoles.RelationshipAgreement = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.RelationshipAgreement = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RelationshipAgreement]; 

			SupplierRelationshipClass.Instance.ConcreteRoles.PartyRelationshipPriority = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			OrganisationRollUpClass.Instance.ConcreteRoles.PartyRelationshipPriority = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			CustomerRelationshipClass.Instance.ConcreteRoles.PartyRelationshipPriority = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			EmploymentClass.Instance.ConcreteRoles.PartyRelationshipPriority = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			SalesRepRelationshipClass.Instance.ConcreteRoles.PartyRelationshipPriority = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.PartyRelationshipPriority = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.PartyRelationshipPriority = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			ClientRelationshipClass.Instance.ConcreteRoles.PartyRelationshipPriority = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			PartnershipClass.Instance.ConcreteRoles.PartyRelationshipPriority = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			ProspectRelationshipClass.Instance.ConcreteRoles.PartyRelationshipPriority = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			SubContractorRelationshipClass.Instance.ConcreteRoles.PartyRelationshipPriority = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.PartyRelationshipPriority = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyRelationshipPriority]; 

			SupplierRelationshipClass.Instance.ConcreteRoles.SimpleMovingAverage = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			OrganisationRollUpClass.Instance.ConcreteRoles.SimpleMovingAverage = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			CustomerRelationshipClass.Instance.ConcreteRoles.SimpleMovingAverage = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			EmploymentClass.Instance.ConcreteRoles.SimpleMovingAverage = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			SalesRepRelationshipClass.Instance.ConcreteRoles.SimpleMovingAverage = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.SimpleMovingAverage = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.SimpleMovingAverage = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			ClientRelationshipClass.Instance.ConcreteRoles.SimpleMovingAverage = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			PartnershipClass.Instance.ConcreteRoles.SimpleMovingAverage = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			ProspectRelationshipClass.Instance.ConcreteRoles.SimpleMovingAverage = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			SubContractorRelationshipClass.Instance.ConcreteRoles.SimpleMovingAverage = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.SimpleMovingAverage = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SimpleMovingAverage]; 

			SupplierRelationshipClass.Instance.ConcreteRoles.CommunicationEvent = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			OrganisationRollUpClass.Instance.ConcreteRoles.CommunicationEvent = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			CustomerRelationshipClass.Instance.ConcreteRoles.CommunicationEvent = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			EmploymentClass.Instance.ConcreteRoles.CommunicationEvent = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			SalesRepRelationshipClass.Instance.ConcreteRoles.CommunicationEvent = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.CommunicationEvent = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.CommunicationEvent = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			ClientRelationshipClass.Instance.ConcreteRoles.CommunicationEvent = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			PartnershipClass.Instance.ConcreteRoles.CommunicationEvent = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			ProspectRelationshipClass.Instance.ConcreteRoles.CommunicationEvent = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			SubContractorRelationshipClass.Instance.ConcreteRoles.CommunicationEvent = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.CommunicationEvent = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 


		}

		internal class RolesType
		{
			internal RoleType PartyRelationshipStatus;
			internal RoleType RelationshipAgreement;
			internal RoleType PartyRelationshipPriority;
			internal RoleType SimpleMovingAverage;
			internal RoleType CommunicationEvent;

		}
	}public partial class RateTypeClass : Class
	{
		public static RateTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RateTypeClass() : base(AppsDomain.Instance, new Guid("096448e3-991d-481e-b323-39064387141c"))
        {
			this.SingularName = "RateType";
			this.PluralName = "RateTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5495321c-9ac9-4631-b3dc-042cefb5bf6f"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class BrandClass : Class
	{
		public static BrandClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BrandClass() : base(AppsDomain.Instance, new Guid("0a7ac589-946b-4d49-b7e0-7e0b9bc90111"))
        {
			this.SingularName = "Brand";
			this.PluralName = "Brands";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("6c8b19f3-8f69-4da4-9d16-9ce7abaad581"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var BrandName = new RelationType(AppsDomain.Instance, new Guid("08b0dfc6-2e2f-4e40-96d1-851e26b38e8d"), new Guid("8b22eb1a-ecc3-4e0d-898c-4a5c651f1d2c"), new Guid("2f85b937-569a-4317-ac4a-aa1e89541a20"));
			BrandName.AssignedMultiplicity = Multiplicity.OneToOne;
			BrandName.AssociationType.ObjectType = this;

			BrandName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BrandName.RoleType.AssignedSingularName = "Name";
			BrandName.RoleType.AssignedPluralName = "Names";
			BrandName.RoleType.Size = 256;
			this.Roles.Name = BrandName.RoleType;

			var BrandProductCategory = new RelationType(AppsDomain.Instance, new Guid("25729ffa-4f97-464a-9b34-fe1661e0d932"), new Guid("ae59e80c-289d-487f-996c-c83615d8750d"), new Guid("f02d54d1-8ed9-4f63-96b5-397cb4b761d2"));
			BrandProductCategory.AssignedMultiplicity = Multiplicity.ManyToMany;
			BrandProductCategory.IsIndexed = true;

			BrandProductCategory.AssociationType.ObjectType = this;

			BrandProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			BrandProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			BrandProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = BrandProductCategory.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BrandClass.Instance.ConcreteRoles.Name = BrandClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			BrandClass.Instance.ConcreteRoles.ProductCategory = BrandClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType ProductCategory;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OrganisationClassificationInterface: Interface
	{
		public static OrganisationClassificationInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal OrganisationClassificationInterface() : base(AppsDomain.Instance, new Guid("0aaee7b0-0a32-4d0b-a3ed-a448608fe935"))
        {
			this.SingularName = "OrganisationClassification";
			this.PluralName = "OrganisationClassifications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("496416d0-e82f-4bd3-b975-d1f0182bec8b"))
			{
				Subtype = Instance,
				Supertype = PartyClassificationInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}
	}public partial class SupplierOfferingClass : Class
	{
		public static SupplierOfferingClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SupplierOfferingClass() : base(AppsDomain.Instance, new Guid("0ae3caca-9b4b-407f-bd98-46db03b72a43"))
        {
			this.SingularName = "SupplierOffering";
			this.PluralName = "SupplierOfferings";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("15f94cb3-467e-4362-989e-3e09f935c9dd"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("2bf4ff17-ed5e-491e-b042-f1c011c92b65"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e60784ca-6ec9-4619-a6e3-3fb87b30e0f8"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SupplierOfferingRating = new RelationType(AppsDomain.Instance, new Guid("44e38ad4-833c-4da9-894d-bbe57d0f784e"), new Guid("c5769d37-d236-4ab6-9cab-dcc861dfbade"), new Guid("68ab327e-4ad4-460a-8b9f-f740a19670e0"));
			SupplierOfferingRating.AssignedMultiplicity = Multiplicity.ManyToOne;
			SupplierOfferingRating.IsIndexed = true;

			SupplierOfferingRating.AssociationType.ObjectType = this;

			SupplierOfferingRating.RoleType.ObjectType = RatingTypeClass.Instance;;
			SupplierOfferingRating.RoleType.AssignedSingularName = "Rating";
			SupplierOfferingRating.RoleType.AssignedPluralName = "Rating";
			this.Roles.Rating = SupplierOfferingRating.RoleType;

			var SupplierOfferingStandardLeadTime = new RelationType(AppsDomain.Instance, new Guid("74895df9-e416-41cb-ab36-24694dc63334"), new Guid("b81877b2-f7cd-4951-b02e-e60722ca0d72"), new Guid("80326eaa-5546-490e-b433-9ff57f42f85e"));
			SupplierOfferingStandardLeadTime.AssignedMultiplicity = Multiplicity.OneToOne;
			SupplierOfferingStandardLeadTime.AssociationType.ObjectType = this;

			SupplierOfferingStandardLeadTime.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SupplierOfferingStandardLeadTime.RoleType.AssignedSingularName = "StandardLeadTime";
			SupplierOfferingStandardLeadTime.RoleType.AssignedPluralName = "StandardLeadTimes";
			this.Roles.StandardLeadTime = SupplierOfferingStandardLeadTime.RoleType;

			var SupplierOfferingProductPurchasePrice = new RelationType(AppsDomain.Instance, new Guid("806da6e8-b58d-46cf-b703-7e67aa7dfcf9"), new Guid("05a12a65-920d-4d6e-9490-1a5d8ae651c3"), new Guid("ce335230-1191-484e-93f1-8bf0533090d4"));
			SupplierOfferingProductPurchasePrice.AssignedMultiplicity = Multiplicity.OneToMany;
			SupplierOfferingProductPurchasePrice.IsIndexed = true;

			SupplierOfferingProductPurchasePrice.AssociationType.ObjectType = this;

			SupplierOfferingProductPurchasePrice.RoleType.ObjectType = ProductPurchasePriceClass.Instance;;
			SupplierOfferingProductPurchasePrice.RoleType.AssignedSingularName = "ProductPurchasePrice";
			SupplierOfferingProductPurchasePrice.RoleType.AssignedPluralName = "ProductPurchasePrices";
			this.Roles.ProductPurchasePrice = SupplierOfferingProductPurchasePrice.RoleType;

			var SupplierOfferingPreference = new RelationType(AppsDomain.Instance, new Guid("9c3458aa-7062-4c4c-9160-2f978b088082"), new Guid("2efde592-4a60-4c79-bc20-f389c5df5966"), new Guid("99b85157-6b6a-4556-a910-af955802b6da"));
			SupplierOfferingPreference.AssignedMultiplicity = Multiplicity.ManyToOne;
			SupplierOfferingPreference.IsIndexed = true;

			SupplierOfferingPreference.AssociationType.ObjectType = this;

			SupplierOfferingPreference.RoleType.ObjectType = OrdinalClass.Instance;;
			SupplierOfferingPreference.RoleType.AssignedSingularName = "Preference";
			SupplierOfferingPreference.RoleType.AssignedPluralName = "Preferences";
			this.Roles.Preference = SupplierOfferingPreference.RoleType;

			var SupplierOfferingMinimalOrderQuantity = new RelationType(AppsDomain.Instance, new Guid("b4cdcc85-583a-49e7-ba35-8985936c7f64"), new Guid("2133d78d-9f26-46bf-b706-e01e032402df"), new Guid("12dd7fcb-0777-43a6-9524-b2b79c92c40c"));
			SupplierOfferingMinimalOrderQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			SupplierOfferingMinimalOrderQuantity.AssociationType.ObjectType = this;

			SupplierOfferingMinimalOrderQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SupplierOfferingMinimalOrderQuantity.RoleType.AssignedSingularName = "MinimalOrderQuantity";
			SupplierOfferingMinimalOrderQuantity.RoleType.AssignedPluralName = "MinimalOrderQuantities";
			SupplierOfferingMinimalOrderQuantity.RoleType.Scale = 2;
			SupplierOfferingMinimalOrderQuantity.RoleType.Precision = 19;
			this.Roles.MinimalOrderQuantity = SupplierOfferingMinimalOrderQuantity.RoleType;

			var SupplierOfferingProduct = new RelationType(AppsDomain.Instance, new Guid("cd1ce1c1-222f-461b-8d9c-7d58f997d129"), new Guid("f719728f-7def-44d7-8c68-0996f3834887"), new Guid("9204493f-f47d-4fb6-bef7-de91fb2cd53f"));
			SupplierOfferingProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			SupplierOfferingProduct.IsIndexed = true;

			SupplierOfferingProduct.AssociationType.ObjectType = this;

			SupplierOfferingProduct.RoleType.ObjectType = ProductInterface.Instance;;
			SupplierOfferingProduct.RoleType.AssignedSingularName = "Product";
			SupplierOfferingProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = SupplierOfferingProduct.RoleType;

			var SupplierOfferingSupplier = new RelationType(AppsDomain.Instance, new Guid("d2de1e9e-196f-43d7-903e-566a4858bc02"), new Guid("a78c953d-0feb-463a-a7c6-e00640db9e44"), new Guid("4dfd5ba4-ebdf-4ea1-b4d4-ecff642525cb"));
			SupplierOfferingSupplier.AssignedMultiplicity = Multiplicity.ManyToOne;
			SupplierOfferingSupplier.IsIndexed = true;

			SupplierOfferingSupplier.AssociationType.ObjectType = this;

			SupplierOfferingSupplier.RoleType.ObjectType = PartyInterface.Instance;;
			SupplierOfferingSupplier.RoleType.AssignedSingularName = "Supplier";
			SupplierOfferingSupplier.RoleType.AssignedPluralName = "Suppliers";
			this.Roles.Supplier = SupplierOfferingSupplier.RoleType;

			var SupplierOfferingReferenceNumber = new RelationType(AppsDomain.Instance, new Guid("d741765d-d17e-4e6a-88fd-9eee70c82bcf"), new Guid("3e237d3b-6d44-4afd-a248-f9d15e7822d7"), new Guid("79affcb8-28b2-4629-a918-c863089f1dbc"));
			SupplierOfferingReferenceNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			SupplierOfferingReferenceNumber.AssociationType.ObjectType = this;

			SupplierOfferingReferenceNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			SupplierOfferingReferenceNumber.RoleType.AssignedSingularName = "ReferenceNumber";
			SupplierOfferingReferenceNumber.RoleType.AssignedPluralName = "ReferenceNumber";
			SupplierOfferingReferenceNumber.RoleType.Size = 256;
			this.Roles.ReferenceNumber = SupplierOfferingReferenceNumber.RoleType;

			var SupplierOfferingPart = new RelationType(AppsDomain.Instance, new Guid("ea5e3f12-417c-40c4-97e0-d8c7dd41300c"), new Guid("ba708825-f930-445c-8eaf-29221a405edf"), new Guid("b43787c4-8d38-425a-ab87-b5d3b80f9a5d"));
			SupplierOfferingPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			SupplierOfferingPart.IsIndexed = true;

			SupplierOfferingPart.AssociationType.ObjectType = this;

			SupplierOfferingPart.RoleType.ObjectType = PartInterface.Instance;;
			SupplierOfferingPart.RoleType.AssignedSingularName = "Part";
			SupplierOfferingPart.RoleType.AssignedPluralName = "Parts";
			this.Roles.Part = SupplierOfferingPart.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SupplierOfferingClass.Instance.ConcreteRoles.Rating = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Rating]; 

			SupplierOfferingClass.Instance.ConcreteRoles.StandardLeadTime = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StandardLeadTime]; 

			SupplierOfferingClass.Instance.ConcreteRoles.ProductPurchasePrice = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductPurchasePrice]; 

			SupplierOfferingClass.Instance.ConcreteRoles.Preference = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Preference]; 

			SupplierOfferingClass.Instance.ConcreteRoles.MinimalOrderQuantity = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MinimalOrderQuantity]; 

			SupplierOfferingClass.Instance.ConcreteRoles.Product = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			SupplierOfferingClass.Instance.ConcreteRoles.Supplier = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Supplier]; 

			SupplierOfferingClass.Instance.ConcreteRoles.ReferenceNumber = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReferenceNumber]; 

			SupplierOfferingClass.Instance.ConcreteRoles.Part = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 


		}

		internal class RolesType
		{
			internal RoleType Rating;
			internal RoleType StandardLeadTime;
			internal RoleType ProductPurchasePrice;
			internal RoleType Preference;
			internal RoleType MinimalOrderQuantity;
			internal RoleType Product;
			internal RoleType Supplier;
			internal RoleType ReferenceNumber;
			internal RoleType Part;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Rating;
			internal ConcreteRoleType StandardLeadTime;
			internal ConcreteRoleType ProductPurchasePrice;
			internal ConcreteRoleType Preference;
			internal ConcreteRoleType MinimalOrderQuantity;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType Supplier;
			internal ConcreteRoleType ReferenceNumber;
			internal ConcreteRoleType Part;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesAccountingTransactionClass : Class
	{
		public static SalesAccountingTransactionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesAccountingTransactionClass() : base(AppsDomain.Instance, new Guid("0aecacff-23d0-48ff-8934-a4e5f711c729"))
        {
			this.SingularName = "SalesAccountingTransaction";
			this.PluralName = "SalesAccountingTransactions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("39175119-6bb5-4cac-b48c-8e184134bdd7"))
			{
				Subtype = Instance,
				Supertype = ExternalAccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesAccountingTransactionInvoice = new RelationType(AppsDomain.Instance, new Guid("9b376e18-7cf8-43f7-ac89-ef4b32a1c8fd"), new Guid("ee71978e-2085-48d2-81ad-571cfcec8264"), new Guid("3fe3be8d-563d-4455-8f1a-7771ff97005f"));
			SalesAccountingTransactionInvoice.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesAccountingTransactionInvoice.IsIndexed = true;

			SalesAccountingTransactionInvoice.AssociationType.ObjectType = this;

			SalesAccountingTransactionInvoice.RoleType.ObjectType = InvoiceInterface.Instance;;
			SalesAccountingTransactionInvoice.RoleType.AssignedSingularName = "Invoice";
			SalesAccountingTransactionInvoice.RoleType.AssignedPluralName = "Invoices";
			this.Roles.Invoice = SalesAccountingTransactionInvoice.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesAccountingTransactionClass.Instance.ConcreteRoles.Invoice = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Invoice]; 


		}

		internal class RolesType
		{
			internal RoleType Invoice;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Invoice;
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class VehicleClass : Class
	{
		public static VehicleClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VehicleClass() : base(AppsDomain.Instance, new Guid("0b476761-ad10-4e00-88bb-0e44b4574990"))
        {
			this.SingularName = "Vehicle";
			this.PluralName = "Vehicles";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4e47845e-f455-415c-9389-b8b0ab9cdf4a"))
			{
				Subtype = Instance,
				Supertype = FixedAssetInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType LastServiceDate;
			internal ConcreteRoleType AcquiredDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ProductionCapacity;
			internal ConcreteRoleType NextServiceDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AccountingTransactionNumberClass : Class
	{
		public static AccountingTransactionNumberClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AccountingTransactionNumberClass() : base(AppsDomain.Instance, new Guid("0b9034b1-288a-48a7-9d46-3ca6dcb7ca3f"))
        {
			this.SingularName = "AccountingTransactionNumber";
			this.PluralName = "AccountingTransactionNumbers";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("de011916-b476-4606-bc93-6b11677e2eed"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var AccountingTransactionNumberNumber = new RelationType(AppsDomain.Instance, new Guid("1a7eda6e-7b1c-4faf-8635-05bc233c5dd8"), new Guid("ad6df638-67d2-4d41-9695-01c6adf3f251"), new Guid("e2178198-6bbd-4caa-9402-40137b2bd529"));
			AccountingTransactionNumberNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingTransactionNumberNumber.AssociationType.ObjectType = this;

			AccountingTransactionNumberNumber.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			AccountingTransactionNumberNumber.RoleType.AssignedSingularName = "Number";
			AccountingTransactionNumberNumber.RoleType.AssignedPluralName = "Numbers";
			this.Roles.Number = AccountingTransactionNumberNumber.RoleType;

			var AccountingTransactionNumberYear = new RelationType(AppsDomain.Instance, new Guid("e01605b0-ba04-4775-ad15-cac1281cec9e"), new Guid("75523554-b713-433b-8916-c70278649b52"), new Guid("dcaeed3f-1bbe-40a0-aacc-9c26db3f984f"));
			AccountingTransactionNumberYear.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingTransactionNumberYear.AssociationType.ObjectType = this;

			AccountingTransactionNumberYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			AccountingTransactionNumberYear.RoleType.AssignedSingularName = "Year";
			AccountingTransactionNumberYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = AccountingTransactionNumberYear.RoleType;

			var AccountingTransactionNumberAccountingTransactionType = new RelationType(AppsDomain.Instance, new Guid("f3bcec3b-b08e-4eab-812e-bb5b31fe6a4d"), new Guid("e447318b-ab6a-4259-8fb0-fb0ae81b15f7"), new Guid("018e866e-3593-45d2-a10e-45bd79a0faeb"));
			AccountingTransactionNumberAccountingTransactionType.AssignedMultiplicity = Multiplicity.ManyToOne;
			AccountingTransactionNumberAccountingTransactionType.IsIndexed = true;

			AccountingTransactionNumberAccountingTransactionType.AssociationType.ObjectType = this;

			AccountingTransactionNumberAccountingTransactionType.RoleType.ObjectType = AccountingTransactionTypeClass.Instance;;
			AccountingTransactionNumberAccountingTransactionType.RoleType.AssignedSingularName = "AccountingTransactionType";
			AccountingTransactionNumberAccountingTransactionType.RoleType.AssignedPluralName = "AccountingTransactionTypes";
			this.Roles.AccountingTransactionType = AccountingTransactionNumberAccountingTransactionType.RoleType;


		}

		internal override void SetRelationTypes()
		{
			AccountingTransactionNumberClass.Instance.ConcreteRoles.Number = AccountingTransactionNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Number]; 

			AccountingTransactionNumberClass.Instance.ConcreteRoles.Year = AccountingTransactionNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			AccountingTransactionNumberClass.Instance.ConcreteRoles.AccountingTransactionType = AccountingTransactionNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionType]; 


		}

		internal class RolesType
		{
			internal RoleType Number;
			internal RoleType Year;
			internal RoleType AccountingTransactionType;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Number;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType AccountingTransactionType;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class WorkEffortPartyAssignmentClass : Class
	{
		public static WorkEffortPartyAssignmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortPartyAssignmentClass() : base(AppsDomain.Instance, new Guid("0bdfb093-35af-4c87-9c1c-05ed9dae6df6"))
        {
			this.SingularName = "WorkEffortPartyAssignment";
			this.PluralName = "WorkEffortPartyAssignments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8c8c0011-2cd4-4534-b6fc-2b4f39553566"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("8e2a810a-f464-4307-a975-30a0e7b4de41"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("d1c596c2-94c8-4331-8591-c4e02bba7be2"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortPartyAssignmentAssignment = new RelationType(AppsDomain.Instance, new Guid("2723be72-6775-4f39-9bf6-e95abc2c0b24"), new Guid("9014f6ec-c005-43ab-861c-b150474b9dca"), new Guid("ea3986d9-81c8-4353-bc13-7d03255ed9f8"));
			WorkEffortPartyAssignmentAssignment.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortPartyAssignmentAssignment.IsIndexed = true;

			WorkEffortPartyAssignmentAssignment.AssociationType.ObjectType = this;

			WorkEffortPartyAssignmentAssignment.RoleType.ObjectType = WorkEffortInterface.Instance;;
			WorkEffortPartyAssignmentAssignment.RoleType.AssignedSingularName = "Assignment";
			WorkEffortPartyAssignmentAssignment.RoleType.AssignedPluralName = "Assignments";
			this.Roles.Assignment = WorkEffortPartyAssignmentAssignment.RoleType;

			var WorkEffortPartyAssignmentParty = new RelationType(AppsDomain.Instance, new Guid("92081ae5-3e2a-4b13-98b8-0fc45403b877"), new Guid("2b11931c-a007-4fec-ab78-ecc8388b2a77"), new Guid("90617602-f9c1-4f71-bc6c-c5e4987d008f"));
			WorkEffortPartyAssignmentParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortPartyAssignmentParty.IsIndexed = true;

			WorkEffortPartyAssignmentParty.AssociationType.ObjectType = this;

			WorkEffortPartyAssignmentParty.RoleType.ObjectType = PartyInterface.Instance;;
			WorkEffortPartyAssignmentParty.RoleType.AssignedSingularName = "Party";
			WorkEffortPartyAssignmentParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = WorkEffortPartyAssignmentParty.RoleType;

			var WorkEffortPartyAssignmentFacility = new RelationType(AppsDomain.Instance, new Guid("f88ae79d-7605-4be9-972e-541489bdb72b"), new Guid("b527fed9-c720-45aa-b8c5-fe5336f43f5c"), new Guid("92716fbf-aae3-433f-85f1-9fcfeb68568c"));
			WorkEffortPartyAssignmentFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortPartyAssignmentFacility.IsIndexed = true;

			WorkEffortPartyAssignmentFacility.AssociationType.ObjectType = this;

			WorkEffortPartyAssignmentFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			WorkEffortPartyAssignmentFacility.RoleType.AssignedSingularName = "Facility";
			WorkEffortPartyAssignmentFacility.RoleType.AssignedPluralName = "Facilities";
			this.Roles.Facility = WorkEffortPartyAssignmentFacility.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortPartyAssignmentClass.Instance.ConcreteRoles.Assignment = WorkEffortPartyAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Assignment]; 

			WorkEffortPartyAssignmentClass.Instance.ConcreteRoles.Party = WorkEffortPartyAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			WorkEffortPartyAssignmentClass.Instance.ConcreteRoles.Facility = WorkEffortPartyAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 


		}

		internal class RolesType
		{
			internal RoleType Assignment;
			internal RoleType Party;
			internal RoleType Facility;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Assignment;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class ContactMechanismPurposeClass : Class
	{
		public static ContactMechanismPurposeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ContactMechanismPurposeClass() : base(AppsDomain.Instance, new Guid("0c6880e7-b41c-47a6-ab40-83e391c7a025"))
        {
			this.SingularName = "ContactMechanismPurpose";
			this.PluralName = "ContactMechanismPurposes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("9988af68-db93-4ac5-948d-2a20ffc95bd0"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class TaxDocumentClass : Class
	{
		public static TaxDocumentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TaxDocumentClass() : base(AppsDomain.Instance, new Guid("0d03a71b-c58e-405d-a995-c467a0b25d5b"))
        {
			this.SingularName = "TaxDocument";
			this.PluralName = "TaxDocuments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7138cb8f-09c1-48c8-9ef2-5d13bfa2f94c"))
			{
				Subtype = Instance,
				Supertype = DocumentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DocumentLocation;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;

		}
	}public partial class TrainingClass : Class
	{
		public static TrainingClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TrainingClass() : base(AppsDomain.Instance, new Guid("0eaa8719-bbf4-408a-8226-851580556024"))
        {
			this.SingularName = "Training";
			this.PluralName = "Trainings";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("69d8bdc5-1630-410b-bb97-ca90afb0918c"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var TrainingDescription = new RelationType(AppsDomain.Instance, new Guid("7d2e7956-fb60-4a1b-8e5f-ee88b1b8e3b7"), new Guid("ff4c2753-ce42-4aa8-b1b1-3486e6aa11d9"), new Guid("ee47ec51-a1d0-4d12-97cc-5a089869caa6"));
			TrainingDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			TrainingDescription.AssociationType.ObjectType = this;

			TrainingDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			TrainingDescription.RoleType.AssignedSingularName = "Description";
			TrainingDescription.RoleType.AssignedPluralName = "Descriptions";
			TrainingDescription.RoleType.Size = 256;
			this.Roles.Description = TrainingDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TrainingClass.Instance.ConcreteRoles.Description = TrainingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PurchaseAgreementClass : Class
	{
		public static PurchaseAgreementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseAgreementClass() : base(AppsDomain.Instance, new Guid("1032dc2f-72b7-4ba2-b47d-ba14d52a18c9"))
        {
			this.SingularName = "PurchaseAgreement";
			this.PluralName = "PurchaseAgreements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ecc849aa-0cbb-489f-a0da-7ed86d6a2301"))
			{
				Subtype = Instance,
				Supertype = AgreementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AgreementDate;
			internal ConcreteRoleType Addendum;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType AgreementTerm;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType AgreementItem;
			internal ConcreteRoleType AgreementNumber;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class CostCenterCategoryClass : Class
	{
		public static CostCenterCategoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CostCenterCategoryClass() : base(AppsDomain.Instance, new Guid("11214660-3c3a-42e9-8f12-f475d823da64"))
        {
			this.SingularName = "CostCenterCategory";
			this.PluralName = "CostCenterCategories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c063f83b-6847-434b-bf4c-2f96884b7a58"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CostCenterCategoryParent = new RelationType(AppsDomain.Instance, new Guid("15eade6f-f540-4916-9d66-30f4bd0f260a"), new Guid("f67c26e6-73e2-490a-aaf5-b66cd8e30972"), new Guid("b0767ddc-1b97-4289-afec-0519182982d0"));
			CostCenterCategoryParent.AssignedMultiplicity = Multiplicity.ManyToOne;
			CostCenterCategoryParent.IsIndexed = true;

			CostCenterCategoryParent.AssociationType.ObjectType = this;

			CostCenterCategoryParent.RoleType.ObjectType = CostCenterCategoryClass.Instance;;
			CostCenterCategoryParent.RoleType.AssignedSingularName = "Parent";
			CostCenterCategoryParent.RoleType.AssignedPluralName = "Parents";
			this.Roles.Parent = CostCenterCategoryParent.RoleType;

			var CostCenterCategoryAncestor = new RelationType(AppsDomain.Instance, new Guid("45b0b049-e047-4490-9dde-c48fb1e7bfc3"), new Guid("130462ef-9d1d-48d9-b0f5-40c82ccea0a2"), new Guid("1fd21431-34f6-4f5c-ad54-abecb5e717e1"));
			CostCenterCategoryAncestor.AssignedMultiplicity = Multiplicity.ManyToMany;
			CostCenterCategoryAncestor.IsDerived = true;
			CostCenterCategoryAncestor.IsIndexed = true;

			CostCenterCategoryAncestor.AssociationType.ObjectType = this;

			CostCenterCategoryAncestor.RoleType.ObjectType = CostCenterCategoryClass.Instance;;
			CostCenterCategoryAncestor.RoleType.AssignedSingularName = "Ancestor";
			CostCenterCategoryAncestor.RoleType.AssignedPluralName = "Ancestors";
			this.Roles.Ancestor = CostCenterCategoryAncestor.RoleType;

			var CostCenterCategoryChild = new RelationType(AppsDomain.Instance, new Guid("b20dc3d5-5067-4697-becf-0e8d44f117c7"), new Guid("d88647c8-b367-48e0-aef9-2af923a17b6f"), new Guid("0a65a2da-f091-4ed1-9af9-80ff63123adf"));
			CostCenterCategoryChild.AssignedMultiplicity = Multiplicity.ManyToMany;
			CostCenterCategoryChild.IsDerived = true;
			CostCenterCategoryChild.IsIndexed = true;

			CostCenterCategoryChild.AssociationType.ObjectType = this;

			CostCenterCategoryChild.RoleType.ObjectType = CostCenterCategoryClass.Instance;;
			CostCenterCategoryChild.RoleType.AssignedSingularName = "Child";
			CostCenterCategoryChild.RoleType.AssignedPluralName = "Children";
			this.Roles.Child = CostCenterCategoryChild.RoleType;

			var CostCenterCategoryDescription = new RelationType(AppsDomain.Instance, new Guid("fcb56761-342b-4d62-ba5b-27e0a0f405dd"), new Guid("4804ef05-ddb6-4f15-940a-cd663a7bef55"), new Guid("c1d56a33-314d-4aa7-a202-77ae675092ab"));
			CostCenterCategoryDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			CostCenterCategoryDescription.AssociationType.ObjectType = this;

			CostCenterCategoryDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CostCenterCategoryDescription.RoleType.AssignedSingularName = "Description";
			CostCenterCategoryDescription.RoleType.AssignedPluralName = "Descriptions";
			CostCenterCategoryDescription.RoleType.Size = 256;
			this.Roles.Description = CostCenterCategoryDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CostCenterCategoryClass.Instance.ConcreteRoles.Parent = CostCenterCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Parent]; 

			CostCenterCategoryClass.Instance.ConcreteRoles.Ancestor = CostCenterCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Ancestor]; 

			CostCenterCategoryClass.Instance.ConcreteRoles.Child = CostCenterCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 

			CostCenterCategoryClass.Instance.ConcreteRoles.Description = CostCenterCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType Parent;
			internal RoleType Ancestor;
			internal RoleType Child;
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Parent;
			internal ConcreteRoleType Ancestor;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class BasePriceClass : Class
	{
		public static BasePriceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BasePriceClass() : base(AppsDomain.Instance, new Guid("11c608b0-4755-4e74-b720-4eb94e83c24d"))
        {
			this.SingularName = "BasePrice";
			this.PluralName = "BasePrices";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("567ec306-8c47-4425-a4d1-e7c1a3acefc5"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ea2621d8-86d5-4203-a8db-30fea5fc218f"))
			{
				Subtype = Instance,
				Supertype = PriceComponentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType Rate;
			internal ConcreteRoleType RevenueValueBreak;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType OrderQuantityBreak;
			internal ConcreteRoleType PackageQuantityBreak;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType RevenueQuantityBreak;
			internal ConcreteRoleType SpecifiedFor;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType AgreementPricingProgram;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType OrderKind;
			internal ConcreteRoleType OrderValue;
			internal ConcreteRoleType Price;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class JournalEntryClass : Class
	{
		public static JournalEntryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal JournalEntryClass() : base(AppsDomain.Instance, new Guid("11d75a7a-2e86-4430-a6af-2916440c9ecb"))
        {
			this.SingularName = "JournalEntry";
			this.PluralName = "JournalEntries";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2c217c25-84d0-4362-9f64-f8b4a3f8ad94"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("2ebbfd53-6336-405a-ab4d-07ed5f34064b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var JournalEntryDescription = new RelationType(AppsDomain.Instance, new Guid("09202ffd-6b78-455b-a140-a354a771d761"), new Guid("f4b83ae6-6dc6-495a-8081-a5137434bc7f"), new Guid("0dda1ff5-1420-454b-ad8d-be6e5ee68b91"));
			JournalEntryDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalEntryDescription.AssociationType.ObjectType = this;

			JournalEntryDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			JournalEntryDescription.RoleType.AssignedSingularName = "Description";
			JournalEntryDescription.RoleType.AssignedPluralName = "Descriptions";
			JournalEntryDescription.RoleType.Size = 256;
			this.Roles.Description = JournalEntryDescription.RoleType;

			var JournalEntryEntryNumber = new RelationType(AppsDomain.Instance, new Guid("1452d159-857a-4fff-b1d6-6d27772e54bc"), new Guid("eb122f1d-8615-4342-8beb-2a197677947a"), new Guid("bf8485f3-d5dd-4236-b542-61674c2298db"));
			JournalEntryEntryNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalEntryEntryNumber.AssociationType.ObjectType = this;

			JournalEntryEntryNumber.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			JournalEntryEntryNumber.RoleType.AssignedSingularName = "EntryNumber";
			JournalEntryEntryNumber.RoleType.AssignedPluralName = "EntryNumbers";
			this.Roles.EntryNumber = JournalEntryEntryNumber.RoleType;

			var JournalEntryEntryDate = new RelationType(AppsDomain.Instance, new Guid("1b5f8acd-872d-498e-9c2d-ded4b7d31efe"), new Guid("9bb9541a-f0fc-4ed8-bc3f-13e1d7901395"), new Guid("0b9dd5eb-10a1-470b-a119-158c66c558f1"));
			JournalEntryEntryDate.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalEntryEntryDate.AssociationType.ObjectType = this;

			JournalEntryEntryDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			JournalEntryEntryDate.RoleType.AssignedSingularName = "EntryDate";
			JournalEntryEntryDate.RoleType.AssignedPluralName = "EntryDates";
			this.Roles.EntryDate = JournalEntryEntryDate.RoleType;

			var JournalEntryJournalDate = new RelationType(AppsDomain.Instance, new Guid("4eca8284-cc27-4440-8b5f-adeffd3b078b"), new Guid("b7897efa-b2f5-4807-8385-3da4936998c7"), new Guid("f8bcd82b-5209-45d1-a6ee-5452ca9cf11b"));
			JournalEntryJournalDate.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalEntryJournalDate.AssociationType.ObjectType = this;

			JournalEntryJournalDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			JournalEntryJournalDate.RoleType.AssignedSingularName = "JournalDate";
			JournalEntryJournalDate.RoleType.AssignedPluralName = "JournalDates";
			this.Roles.JournalDate = JournalEntryJournalDate.RoleType;

			var JournalEntryJournalEntryDetail = new RelationType(AppsDomain.Instance, new Guid("e81fe73b-1486-4a9d-ab2b-2d49dfcbb777"), new Guid("77a3f9d6-814b-438e-b424-e63763bb4213"), new Guid("9afbe2d8-116b-4e35-bbb5-e35085697b30"));
			JournalEntryJournalEntryDetail.AssignedMultiplicity = Multiplicity.OneToMany;
			JournalEntryJournalEntryDetail.IsIndexed = true;

			JournalEntryJournalEntryDetail.AssociationType.ObjectType = this;

			JournalEntryJournalEntryDetail.RoleType.ObjectType = JournalEntryDetailClass.Instance;;
			JournalEntryJournalEntryDetail.RoleType.AssignedSingularName = "JournalEntryDetail";
			JournalEntryJournalEntryDetail.RoleType.AssignedPluralName = "JournalEntryDetails";
			this.Roles.JournalEntryDetail = JournalEntryJournalEntryDetail.RoleType;


		}

		internal override void SetRelationTypes()
		{
			JournalEntryClass.Instance.ConcreteRoles.Description = JournalEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			JournalEntryClass.Instance.ConcreteRoles.EntryNumber = JournalEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryNumber]; 

			JournalEntryClass.Instance.ConcreteRoles.EntryDate = JournalEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 

			JournalEntryClass.Instance.ConcreteRoles.JournalDate = JournalEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.JournalDate]; 

			JournalEntryClass.Instance.ConcreteRoles.JournalEntryDetail = JournalEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.JournalEntryDetail]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType EntryNumber;
			internal RoleType EntryDate;
			internal RoleType JournalDate;
			internal RoleType JournalEntryDetail;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType EntryNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType JournalDate;
			internal ConcreteRoleType JournalEntryDetail;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SubAgreementClass : Class
	{
		public static SubAgreementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SubAgreementClass() : base(AppsDomain.Instance, new Guid("11e8fae8-3270-4789-a4eb-ca89cddd2859"))
        {
			this.SingularName = "SubAgreement";
			this.PluralName = "SubAgreements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("e7f1378a-902e-4356-9312-24e1cb1ce9f1"))
			{
				Subtype = Instance,
				Supertype = AgreementItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Text;
			internal ConcreteRoleType Addendum;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType AgreementTerm;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SkillClass : Class
	{
		public static SkillClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SkillClass() : base(AppsDomain.Instance, new Guid("123bfcba-0548-4637-8dfc-267d6c0ac262"))
        {
			this.SingularName = "Skill";
			this.PluralName = "Skills";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cbfaada0-9a37-4541-8e12-953ddafae04e"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class EmploymentTerminationClass : Class
	{
		public static EmploymentTerminationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EmploymentTerminationClass() : base(AppsDomain.Instance, new Guid("129e6fe8-01d0-40ad-bc6a-e5449c19274f"))
        {
			this.SingularName = "EmploymentTermination";
			this.PluralName = "EmploymentTerminations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("fa5f0af7-4829-4571-a6b2-37e8bc51c0d7"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class FinancialAccountAdjustmentClass : Class
	{
		public static FinancialAccountAdjustmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal FinancialAccountAdjustmentClass() : base(AppsDomain.Instance, new Guid("12ba6843-bae1-41d1-9ef2-c19d74b0a365"))
        {
			this.SingularName = "FinancialAccountAdjustment";
			this.PluralName = "FinancialAccountAdjustments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("e6b3756b-51d7-4614-9681-2a8e431d59f6"))
			{
				Subtype = Instance,
				Supertype = FinancialAccountTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ServiceInterface: Interface
	{
		public static ServiceInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ServiceInterface() : base(AppsDomain.Instance, new Guid("13d519ec-468e-4fa7-9803-b95dbab4eb82"))
        {
			this.SingularName = "Service";
			this.PluralName = "Services";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("37717b97-25e0-4e7b-a505-0b21d97f86da"))
			{
				Subtype = Instance,
				Supertype = ProductInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}
	}public partial class OperatingConditionClass : Class
	{
		public static OperatingConditionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OperatingConditionClass() : base(AppsDomain.Instance, new Guid("1409bf2c-3ea8-4a62-ac7e-e1e113eacb7a"))
        {
			this.SingularName = "OperatingCondition";
			this.PluralName = "OperatingConditions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5de004c7-10fd-42e8-9d85-c124f597660e"))
			{
				Subtype = Instance,
				Supertype = PartSpecificationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PartSpecificationStatus;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType DocumentationDate;
			internal ConcreteRoleType CurrentPartSpecificationStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class TermTypeClass : Class
	{
		public static TermTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TermTypeClass() : base(AppsDomain.Instance, new Guid("1468c86a-4ac4-4c64-a93b-1b0c5f4b41bc"))
        {
			this.SingularName = "TermType";
			this.PluralName = "TermTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8faa4782-f340-4550-aa37-7c861eb4be67"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class LegalTermClass : Class
	{
		public static LegalTermClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal LegalTermClass() : base(AppsDomain.Instance, new Guid("14a2576c-3ea7-4016-aba2-44172fb7a952"))
        {
			this.SingularName = "LegalTerm";
			this.PluralName = "LegalTerms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("bbde0f72-8943-4d3d-b89f-769deeffc0c4"))
			{
				Subtype = Instance,
				Supertype = AgreementTermInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType TermValue;
			internal ConcreteRoleType TermType;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EngineeringBomClass : Class
	{
		public static EngineeringBomClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EngineeringBomClass() : base(AppsDomain.Instance, new Guid("14a85148-0d92-4869-8a94-b102f047931f"))
        {
			this.SingularName = "EngineeringBom";
			this.PluralName = "EngineeringBoms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("23049d7d-0902-4282-a549-92e8b2d2fa6e"))
			{
				Subtype = Instance,
				Supertype = PartBillOfMaterialInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Part;
			internal ConcreteRoleType Instruction;
			internal ConcreteRoleType QuantityUsed;
			internal ConcreteRoleType ComponentPart;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class PurchaseInvoiceItemTypeClass : Class
	{
		public static PurchaseInvoiceItemTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseInvoiceItemTypeClass() : base(AppsDomain.Instance, new Guid("14f7d6d1-ade6-4a3a-a3ef-f614a375180e"))
        {
			this.SingularName = "PurchaseInvoiceItemType";
			this.PluralName = "PurchaseInvoiceItemTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4066b39e-d8a2-4ecc-a04a-f2dc64bf03af"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class IncentiveClass : Class
	{
		public static IncentiveClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal IncentiveClass() : base(AppsDomain.Instance, new Guid("150d21f7-20dd-4951-848f-f74a69dadb5b"))
        {
			this.SingularName = "Incentive";
			this.PluralName = "Incentives";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("903ba144-a54d-427f-a795-7636c5e3e3cc"))
			{
				Subtype = Instance,
				Supertype = AgreementTermInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType TermValue;
			internal ConcreteRoleType TermType;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class WorkEffortBillingClass : Class
	{
		public static WorkEffortBillingClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortBillingClass() : base(AppsDomain.Instance, new Guid("15c8c72b-f551-41b0-86c8-80f02424ec4c"))
        {
			this.SingularName = "WorkEffortBilling";
			this.PluralName = "WorkEffortBillings";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortBillingWorkEffort = new RelationType(AppsDomain.Instance, new Guid("3c83ca1d-b20e-4e8c-aa23-3bb03f421ba7"), new Guid("506b220c-7965-4d51-8413-feabfef71c07"), new Guid("4d2f7ed8-881f-49e4-944a-ba291ec671d0"));
			WorkEffortBillingWorkEffort.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortBillingWorkEffort.IsIndexed = true;

			WorkEffortBillingWorkEffort.AssociationType.ObjectType = this;

			WorkEffortBillingWorkEffort.RoleType.ObjectType = WorkEffortInterface.Instance;;
			WorkEffortBillingWorkEffort.RoleType.AssignedSingularName = "WorkEffort";
			WorkEffortBillingWorkEffort.RoleType.AssignedPluralName = "WorkEfforts";
			this.Roles.WorkEffort = WorkEffortBillingWorkEffort.RoleType;

			var WorkEffortBillingPercentage = new RelationType(AppsDomain.Instance, new Guid("91d38ce9-bf06-4272-bdd8-13401084223d"), new Guid("d0189269-2f90-46c5-a1ff-48bad8712b34"), new Guid("e2a7d998-78bb-4d21-b4a8-d6fbddc4b089"));
			WorkEffortBillingPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortBillingPercentage.AssociationType.ObjectType = this;

			WorkEffortBillingPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortBillingPercentage.RoleType.AssignedSingularName = "Percentage";
			WorkEffortBillingPercentage.RoleType.AssignedPluralName = "Percentages";
			WorkEffortBillingPercentage.RoleType.Scale = 2;
			WorkEffortBillingPercentage.RoleType.Precision = 19;
			this.Roles.Percentage = WorkEffortBillingPercentage.RoleType;

			var WorkEffortBillingInvoiceItem = new RelationType(AppsDomain.Instance, new Guid("c6ed6a42-6889-4ad9-b76a-22bd45e02e75"), new Guid("99eb5187-9c6b-48bf-a587-81a5d1603cb1"), new Guid("977e55a2-1592-42ff-b7a2-9f1630b36714"));
			WorkEffortBillingInvoiceItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortBillingInvoiceItem.IsIndexed = true;

			WorkEffortBillingInvoiceItem.AssociationType.ObjectType = this;

			WorkEffortBillingInvoiceItem.RoleType.ObjectType = InvoiceItemInterface.Instance;;
			WorkEffortBillingInvoiceItem.RoleType.AssignedSingularName = "InvoiceItem";
			WorkEffortBillingInvoiceItem.RoleType.AssignedPluralName = "InvoiceItems";
			this.Roles.InvoiceItem = WorkEffortBillingInvoiceItem.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortBillingClass.Instance.ConcreteRoles.WorkEffort = WorkEffortBillingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 

			WorkEffortBillingClass.Instance.ConcreteRoles.Percentage = WorkEffortBillingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Percentage]; 

			WorkEffortBillingClass.Instance.ConcreteRoles.InvoiceItem = WorkEffortBillingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceItem]; 


		}

		internal class RolesType
		{
			internal RoleType WorkEffort;
			internal RoleType Percentage;
			internal RoleType InvoiceItem;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Percentage;
			internal ConcreteRoleType InvoiceItem;

		}
	}public partial class PurchaseReturnStatusClass : Class
	{
		public static PurchaseReturnStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseReturnStatusClass() : base(AppsDomain.Instance, new Guid("15f511a9-7a08-42e4-a690-e0d2f01c9686"))
        {
			this.SingularName = "PurchaseReturnStatus";
			this.PluralName = "PurchaseReturnStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("326e3cb6-271d-4fa1-a2de-4a92f473b86b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseReturnStatusPurchaseReturnObjectState = new RelationType(AppsDomain.Instance, new Guid("1485de84-2719-4543-9250-807f1a9e60bf"), new Guid("9694eb68-d7c4-40db-b15d-deacb698e976"), new Guid("48bd4dce-ecae-4acf-b820-70352958c04b"));
			PurchaseReturnStatusPurchaseReturnObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseReturnStatusPurchaseReturnObjectState.IsIndexed = true;

			PurchaseReturnStatusPurchaseReturnObjectState.AssociationType.ObjectType = this;

			PurchaseReturnStatusPurchaseReturnObjectState.RoleType.ObjectType = PurchaseReturnObjectStateClass.Instance;;
			PurchaseReturnStatusPurchaseReturnObjectState.RoleType.AssignedSingularName = "PurchaseReturnObjectState";
			PurchaseReturnStatusPurchaseReturnObjectState.RoleType.AssignedPluralName = "PurchaseReturnObjectStates";
			this.Roles.PurchaseReturnObjectState = PurchaseReturnStatusPurchaseReturnObjectState.RoleType;

			var PurchaseReturnStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("46004f49-9d2e-49a6-870e-c81f44458c59"), new Guid("3b2a6ce5-a5c8-45c3-ba3b-3fa5326e4293"), new Guid("bd72c728-57ef-4e68-9bd1-2517bfe7e972"));
			PurchaseReturnStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseReturnStatusStartDateTime.AssociationType.ObjectType = this;

			PurchaseReturnStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PurchaseReturnStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			PurchaseReturnStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = PurchaseReturnStatusStartDateTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseReturnStatusClass.Instance.ConcreteRoles.PurchaseReturnObjectState = PurchaseReturnStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseReturnObjectState]; 

			PurchaseReturnStatusClass.Instance.ConcreteRoles.StartDateTime = PurchaseReturnStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 


		}

		internal class RolesType
		{
			internal RoleType PurchaseReturnObjectState;
			internal RoleType StartDateTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PurchaseReturnObjectState;
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartyRevenueHistoryClass : Class
	{
		public static PartyRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("16b7143f-d69e-402a-88af-405b5b88b1c9"))
        {
			this.SingularName = "PartyRevenueHistory";
			this.PluralName = "PartyRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("e70ab0a4-5380-4fb2-9347-7fc84de117d5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("00cc3ce5-d0d8-4082-a1af-8ee850bc76b3"), new Guid("dc4ec595-5121-4b69-bb2b-203d13ffdf75"), new Guid("b2bff84f-9e85-4b2d-bcb5-3860378aa6a0"));
			PartyRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyRevenueHistoryCurrency.IsIndexed = true;

			PartyRevenueHistoryCurrency.AssociationType.ObjectType = this;

			PartyRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PartyRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			PartyRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PartyRevenueHistoryCurrency.RoleType;

			var PartyRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("415b03ac-658e-4a1d-b137-ca45ddb89943"), new Guid("2c225add-0f0a-4269-9ea2-cb89b808050a"), new Guid("e3030338-fd1f-4db2-8a94-39fc9b0597b8"));
			PartyRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyRevenueHistoryRevenue.AssociationType.ObjectType = this;

			PartyRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			PartyRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			PartyRevenueHistoryRevenue.RoleType.Scale = 2;
			PartyRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = PartyRevenueHistoryRevenue.RoleType;

			var PartyRevenueHistoryParty = new RelationType(AppsDomain.Instance, new Guid("63cba080-c950-4956-99ee-e380d482a272"), new Guid("fe3a4195-64ac-4ee7-9c27-07cb125489a5"), new Guid("3dbf35cc-5e84-40b0-bac5-c388a8e9b241"));
			PartyRevenueHistoryParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyRevenueHistoryParty.IsIndexed = true;

			PartyRevenueHistoryParty.AssociationType.ObjectType = this;

			PartyRevenueHistoryParty.RoleType.ObjectType = PartyInterface.Instance;;
			PartyRevenueHistoryParty.RoleType.AssignedSingularName = "Party";
			PartyRevenueHistoryParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = PartyRevenueHistoryParty.RoleType;

			var PartyRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("c4610b89-4e21-4e03-a1d5-7487dce9ad42"), new Guid("0ebd138c-0a0f-4a6e-b792-0cc8e88a614e"), new Guid("cacac289-9986-49a5-a0da-764af0dd5a9c"));
			PartyRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyRevenueHistoryInternalOrganisation.IsIndexed = true;

			PartyRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			PartyRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PartyRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PartyRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PartyRevenueHistoryInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyRevenueHistoryClass.Instance.ConcreteRoles.Currency = PartyRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			PartyRevenueHistoryClass.Instance.ConcreteRoles.Revenue = PartyRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			PartyRevenueHistoryClass.Instance.ConcreteRoles.Party = PartyRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			PartyRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = PartyRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType Currency;
			internal RoleType Revenue;
			internal RoleType Party;
			internal RoleType InternalOrganisation;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartSpecificationObjectStateClass : Class
	{
		public static PartSpecificationObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartSpecificationObjectStateClass() : base(AppsDomain.Instance, new Guid("17b5b8ec-cb0e-4d81-b5e5-1a99a5afff2e"))
        {
			this.SingularName = "PartSpecificationObjectState";
			this.PluralName = "PartSpecificationObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8726fbb2-85ea-42ce-aaba-ace565993c5f"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PositionTypeRateClass : Class
	{
		public static PositionTypeRateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PositionTypeRateClass() : base(AppsDomain.Instance, new Guid("17b9c8f1-ddf2-4db0-8358-ae66a02395ce"))
        {
			this.SingularName = "PositionTypeRate";
			this.PluralName = "PositionTypeRates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ec4bdbaf-faea-44e9-b2ff-3e4aff86f1d3"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PositionTypeRateRate = new RelationType(AppsDomain.Instance, new Guid("ab942018-51fd-4135-9005-c81443b72a96"), new Guid("c35de10d-2f22-4be8-b1e0-6a0e8e3b0922"), new Guid("a443b5af-ae94-4a8b-9c56-2bd9459d9fd8"));
			PositionTypeRateRate.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionTypeRateRate.AssociationType.ObjectType = this;

			PositionTypeRateRate.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PositionTypeRateRate.RoleType.AssignedSingularName = "Rate";
			PositionTypeRateRate.RoleType.AssignedPluralName = "Rates";
			PositionTypeRateRate.RoleType.Scale = 2;
			PositionTypeRateRate.RoleType.Precision = 19;
			this.Roles.Rate = PositionTypeRateRate.RoleType;

			var PositionTypeRateRateType = new RelationType(AppsDomain.Instance, new Guid("c49a44b8-dff1-471c-8309-cf9c7e9188c2"), new Guid("7de3e158-9900-40c4-a015-c62947c0248a"), new Guid("651d72f5-61af-4800-af6a-704159998bfa"));
			PositionTypeRateRateType.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionTypeRateRateType.IsIndexed = true;

			PositionTypeRateRateType.AssociationType.ObjectType = this;

			PositionTypeRateRateType.RoleType.ObjectType = RateTypeClass.Instance;;
			PositionTypeRateRateType.RoleType.AssignedSingularName = "RateType";
			PositionTypeRateRateType.RoleType.AssignedPluralName = "RateTypes";
			this.Roles.RateType = PositionTypeRateRateType.RoleType;

			var PositionTypeRateTimeFrequency = new RelationType(AppsDomain.Instance, new Guid("f49e4e9e-2e8f-49f6-9c10-4aefb4bb61bf"), new Guid("6f36fb29-7820-45fa-9dca-888c11d8b0a3"), new Guid("135731d2-4120-45dd-b36c-36c8c93ea99e"));
			PositionTypeRateTimeFrequency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionTypeRateTimeFrequency.IsIndexed = true;

			PositionTypeRateTimeFrequency.AssociationType.ObjectType = this;

			PositionTypeRateTimeFrequency.RoleType.ObjectType = TimeFrequencyClass.Instance;;
			PositionTypeRateTimeFrequency.RoleType.AssignedSingularName = "TimeFrequency";
			PositionTypeRateTimeFrequency.RoleType.AssignedPluralName = "TimeFrequencies";
			this.Roles.TimeFrequency = PositionTypeRateTimeFrequency.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PositionTypeRateClass.Instance.ConcreteRoles.Rate = PositionTypeRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Rate]; 

			PositionTypeRateClass.Instance.ConcreteRoles.RateType = PositionTypeRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RateType]; 

			PositionTypeRateClass.Instance.ConcreteRoles.TimeFrequency = PositionTypeRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TimeFrequency]; 


		}

		internal class RolesType
		{
			internal RoleType Rate;
			internal RoleType RateType;
			internal RoleType TimeFrequency;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Rate;
			internal ConcreteRoleType RateType;
			internal ConcreteRoleType TimeFrequency;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RatingTypeClass : Class
	{
		public static RatingTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RatingTypeClass() : base(AppsDomain.Instance, new Guid("17d7e31c-9b12-4e0b-a3a7-e687e3991e23"))
        {
			this.SingularName = "RatingType";
			this.PluralName = "RatingTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a7b72e98-5c02-4e0a-b57c-ccbebfbbb994"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PurchaseInvoiceTypeClass : Class
	{
		public static PurchaseInvoiceTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseInvoiceTypeClass() : base(AppsDomain.Instance, new Guid("18cd7011-e0ed-4f45-a6a8-c28fbf80d95a"))
        {
			this.SingularName = "PurchaseInvoiceType";
			this.PluralName = "PurchaseInvoiceTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("00a50c26-1004-4d67-a6ab-d992c57a1811"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class GeneralLedgerAccountClass : Class
	{
		public static GeneralLedgerAccountClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal GeneralLedgerAccountClass() : base(AppsDomain.Instance, new Guid("1a0e396b-69bd-4e77-a602-3d7f7938fd74"))
        {
			this.SingularName = "GeneralLedgerAccount";
			this.PluralName = "GeneralLedgerAccounts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0e82896b-a3da-4431-b6d5-cd5a3f3399ec"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("42e74201-82ba-4fa4-b632-5238c42135d1"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var GeneralLedgerAccountDefaultCostUnit = new RelationType(AppsDomain.Instance, new Guid("0144834d-c5a9-42e7-bf22-af46ff95ee5f"), new Guid("01f0ef35-7ecd-44a9-9366-bad1c213246c"), new Guid("76129210-c674-43d8-9864-39ac497f7a48"));
			GeneralLedgerAccountDefaultCostUnit.AssignedMultiplicity = Multiplicity.ManyToOne;
			GeneralLedgerAccountDefaultCostUnit.IsIndexed = true;

			GeneralLedgerAccountDefaultCostUnit.AssociationType.ObjectType = this;

			GeneralLedgerAccountDefaultCostUnit.RoleType.ObjectType = ProductInterface.Instance;;
			GeneralLedgerAccountDefaultCostUnit.RoleType.AssignedSingularName = "DefaultCostUnit";
			GeneralLedgerAccountDefaultCostUnit.RoleType.AssignedPluralName = "DefaultCostUnits";
			this.Roles.DefaultCostUnit = GeneralLedgerAccountDefaultCostUnit.RoleType;

			var GeneralLedgerAccountDefaultCostCenter = new RelationType(AppsDomain.Instance, new Guid("01c49e6f-087a-494d-902d-12811442470e"), new Guid("839d77a1-7307-4aeb-921b-9aa8832ef853"), new Guid("6a616950-edba-4ed1-8419-7ed4ab3a8fcd"));
			GeneralLedgerAccountDefaultCostCenter.AssignedMultiplicity = Multiplicity.ManyToOne;
			GeneralLedgerAccountDefaultCostCenter.IsIndexed = true;

			GeneralLedgerAccountDefaultCostCenter.AssociationType.ObjectType = this;

			GeneralLedgerAccountDefaultCostCenter.RoleType.ObjectType = CostCenterClass.Instance;;
			GeneralLedgerAccountDefaultCostCenter.RoleType.AssignedSingularName = "DefaultCostCenter";
			GeneralLedgerAccountDefaultCostCenter.RoleType.AssignedPluralName = "DefaultCostCenters";
			this.Roles.DefaultCostCenter = GeneralLedgerAccountDefaultCostCenter.RoleType;

			var GeneralLedgerAccountDescription = new RelationType(AppsDomain.Instance, new Guid("08bb53f7-9b27-4079-bb9b-d8ff96f89b42"), new Guid("032959df-bd6a-4043-9703-1ed9ce1ca0ee"), new Guid("671e880a-e52a-45ed-8712-c0b6280de422"));
			GeneralLedgerAccountDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountDescription.AssociationType.ObjectType = this;

			GeneralLedgerAccountDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			GeneralLedgerAccountDescription.RoleType.AssignedSingularName = "Description";
			GeneralLedgerAccountDescription.RoleType.AssignedPluralName = "Descriptions";
			GeneralLedgerAccountDescription.RoleType.Size = 256;
			this.Roles.Description = GeneralLedgerAccountDescription.RoleType;

			var GeneralLedgerAccountGeneralLedgerAccountType = new RelationType(AppsDomain.Instance, new Guid("27ba2d5b-9e0b-4b20-9b34-f007a0f2e2f2"), new Guid("b05953d9-4d24-4fc6-8ee6-eeda14d519ca"), new Guid("c6cb1d95-1734-4d37-ad1c-d4cb19546b03"));
			GeneralLedgerAccountGeneralLedgerAccountType.AssignedMultiplicity = Multiplicity.ManyToOne;
			GeneralLedgerAccountGeneralLedgerAccountType.IsIndexed = true;

			GeneralLedgerAccountGeneralLedgerAccountType.AssociationType.ObjectType = this;

			GeneralLedgerAccountGeneralLedgerAccountType.RoleType.ObjectType = GeneralLedgerAccountTypeClass.Instance;;
			GeneralLedgerAccountGeneralLedgerAccountType.RoleType.AssignedSingularName = "GeneralLedgerAccountType";
			GeneralLedgerAccountGeneralLedgerAccountType.RoleType.AssignedPluralName = "GeneralLedgerAccountTypes";
			this.Roles.GeneralLedgerAccountType = GeneralLedgerAccountGeneralLedgerAccountType.RoleType;

			var GeneralLedgerAccountCashAccount = new RelationType(AppsDomain.Instance, new Guid("2e6545f8-5fcf-4129-99f6-1f41280cd02d"), new Guid("559a7346-4ec8-449c-ae3a-2e9360933196"), new Guid("62f62635-b19e-4985-98f7-55c677badb26"));
			GeneralLedgerAccountCashAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountCashAccount.AssociationType.ObjectType = this;

			GeneralLedgerAccountCashAccount.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			GeneralLedgerAccountCashAccount.RoleType.AssignedSingularName = "CashAccount";
			GeneralLedgerAccountCashAccount.RoleType.AssignedPluralName = "CashAccounts";
			this.Roles.CashAccount = GeneralLedgerAccountCashAccount.RoleType;

			var GeneralLedgerAccountCostCenterAccount = new RelationType(AppsDomain.Instance, new Guid("3fc28997-124c-4e16-9c4d-128314e6395c"), new Guid("f42c835a-4325-4d25-a2e4-ea621d9bab6b"), new Guid("c8224cdd-85c3-4dd7-85cc-3eee6b0ee010"));
			GeneralLedgerAccountCostCenterAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountCostCenterAccount.AssociationType.ObjectType = this;

			GeneralLedgerAccountCostCenterAccount.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			GeneralLedgerAccountCostCenterAccount.RoleType.AssignedSingularName = "CostCenterAccount";
			GeneralLedgerAccountCostCenterAccount.RoleType.AssignedPluralName = "CostCenterAccounts";
			this.Roles.CostCenterAccount = GeneralLedgerAccountCostCenterAccount.RoleType;

			var GeneralLedgerAccountSide = new RelationType(AppsDomain.Instance, new Guid("4877e61b-443f-4bef-820f-5c93f8d42b8a"), new Guid("6f44b333-9270-4215-842e-12520d4fc5f6"), new Guid("e48f4a4a-bf66-49b2-b457-76b48e3cab21"));
			GeneralLedgerAccountSide.AssignedMultiplicity = Multiplicity.ManyToOne;
			GeneralLedgerAccountSide.IsIndexed = true;

			GeneralLedgerAccountSide.AssociationType.ObjectType = this;

			GeneralLedgerAccountSide.RoleType.ObjectType = DebitCreditConstantClass.Instance;;
			GeneralLedgerAccountSide.RoleType.AssignedSingularName = "Side";
			GeneralLedgerAccountSide.RoleType.AssignedPluralName = "Sides";
			this.Roles.Side = GeneralLedgerAccountSide.RoleType;

			var GeneralLedgerAccountBalanceSheetAccount = new RelationType(AppsDomain.Instance, new Guid("5f797e0d-05aa-4dfb-a826-157ac6cdb0a9"), new Guid("b7e05caa-992f-4676-ab9d-f3ba8d678032"), new Guid("674a2d4f-62b2-41ec-8de8-b1fad7d05686"));
			GeneralLedgerAccountBalanceSheetAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountBalanceSheetAccount.AssociationType.ObjectType = this;

			GeneralLedgerAccountBalanceSheetAccount.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			GeneralLedgerAccountBalanceSheetAccount.RoleType.AssignedSingularName = "BalanceSheetAccount";
			GeneralLedgerAccountBalanceSheetAccount.RoleType.AssignedPluralName = "BalanceSheetAccounts";
			this.Roles.BalanceSheetAccount = GeneralLedgerAccountBalanceSheetAccount.RoleType;

			var GeneralLedgerAccountReconciliationAccount = new RelationType(AppsDomain.Instance, new Guid("7f2e28ea-124a-45fa-9ed3-e3c2b0bb1822"), new Guid("c5ad5e4e-9437-4838-8b23-88a72a3f51f0"), new Guid("1a860600-659d-410e-91c7-21682ba9002c"));
			GeneralLedgerAccountReconciliationAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountReconciliationAccount.AssociationType.ObjectType = this;

			GeneralLedgerAccountReconciliationAccount.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			GeneralLedgerAccountReconciliationAccount.RoleType.AssignedSingularName = "ReconciliationAccount";
			GeneralLedgerAccountReconciliationAccount.RoleType.AssignedPluralName = "ReconciliationsAccount";
			this.Roles.ReconciliationAccount = GeneralLedgerAccountReconciliationAccount.RoleType;

			var GeneralLedgerAccountName = new RelationType(AppsDomain.Instance, new Guid("8616e916-a3e2-4cfe-84a4-778fd4b50d87"), new Guid("ef7a784f-0f35-4973-b8d0-e732e3a9a741"), new Guid("d758a087-f381-4a5c-ab9f-e433ba786166"));
			GeneralLedgerAccountName.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountName.AssociationType.ObjectType = this;

			GeneralLedgerAccountName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			GeneralLedgerAccountName.RoleType.AssignedSingularName = "Name";
			GeneralLedgerAccountName.RoleType.AssignedPluralName = "Names";
			GeneralLedgerAccountName.RoleType.Size = 256;
			this.Roles.Name = GeneralLedgerAccountName.RoleType;

			var GeneralLedgerAccountCostCenterRequired = new RelationType(AppsDomain.Instance, new Guid("9b679f99-d678-4ec0-8ab1-e02eaabe6658"), new Guid("bd544bfa-d073-4534-8c11-de070571f5cb"), new Guid("8a1191c3-3ef7-4932-b6b0-d52f2eb604fb"));
			GeneralLedgerAccountCostCenterRequired.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountCostCenterRequired.AssociationType.ObjectType = this;

			GeneralLedgerAccountCostCenterRequired.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			GeneralLedgerAccountCostCenterRequired.RoleType.AssignedSingularName = "CostCenterRequired";
			GeneralLedgerAccountCostCenterRequired.RoleType.AssignedPluralName = "CostCenterRequireds";
			this.Roles.CostCenterRequired = GeneralLedgerAccountCostCenterRequired.RoleType;

			var GeneralLedgerAccountCostUnitRequired = new RelationType(AppsDomain.Instance, new Guid("a3aa445f-2aae-41be-8024-7b4a7e0a76ed"), new Guid("eae74634-5d98-482f-bfc5-c81e9731c2e0"), new Guid("5d60a6f0-eb91-4048-99fd-285c9685c555"));
			GeneralLedgerAccountCostUnitRequired.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountCostUnitRequired.AssociationType.ObjectType = this;

			GeneralLedgerAccountCostUnitRequired.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			GeneralLedgerAccountCostUnitRequired.RoleType.AssignedSingularName = "CostUnitRequired";
			GeneralLedgerAccountCostUnitRequired.RoleType.AssignedPluralName = "CostUnitsRequired";
			this.Roles.CostUnitRequired = GeneralLedgerAccountCostUnitRequired.RoleType;

			var GeneralLedgerAccountGeneralLedgerAccountGroup = new RelationType(AppsDomain.Instance, new Guid("aa569c0a-597d-4b75-a527-25c6ef339547"), new Guid("73a33f92-462b-46c6-83d1-41d6f170aaee"), new Guid("b32aa8cb-b590-4302-8a30-66eacd2ec4f7"));
			GeneralLedgerAccountGeneralLedgerAccountGroup.AssignedMultiplicity = Multiplicity.ManyToOne;
			GeneralLedgerAccountGeneralLedgerAccountGroup.IsIndexed = true;

			GeneralLedgerAccountGeneralLedgerAccountGroup.AssociationType.ObjectType = this;

			GeneralLedgerAccountGeneralLedgerAccountGroup.RoleType.ObjectType = GeneralLedgerAccountGroupClass.Instance;;
			GeneralLedgerAccountGeneralLedgerAccountGroup.RoleType.AssignedSingularName = "GeneralLedgerAccountGroup";
			GeneralLedgerAccountGeneralLedgerAccountGroup.RoleType.AssignedPluralName = "GeneralLedgerAccountGroups";
			this.Roles.GeneralLedgerAccountGroup = GeneralLedgerAccountGeneralLedgerAccountGroup.RoleType;

			var GeneralLedgerAccountCostCenterAllowed = new RelationType(AppsDomain.Instance, new Guid("beda5c75-e1a0-493a-85ec-a943214cec8d"), new Guid("319a12b6-4ee9-4bbd-9026-480b02e71255"), new Guid("be03ce0d-4023-4d62-8f2e-918e46d1f097"));
			GeneralLedgerAccountCostCenterAllowed.AssignedMultiplicity = Multiplicity.ManyToMany;
			GeneralLedgerAccountCostCenterAllowed.IsIndexed = true;

			GeneralLedgerAccountCostCenterAllowed.AssociationType.ObjectType = this;

			GeneralLedgerAccountCostCenterAllowed.RoleType.ObjectType = CostCenterClass.Instance;;
			GeneralLedgerAccountCostCenterAllowed.RoleType.AssignedSingularName = "CostCenterAllowed";
			GeneralLedgerAccountCostCenterAllowed.RoleType.AssignedPluralName = "CostCentersAllowed";
			this.Roles.CostCenterAllowed = GeneralLedgerAccountCostCenterAllowed.RoleType;

			var GeneralLedgerAccountCostUnitAccount = new RelationType(AppsDomain.Instance, new Guid("bfe446ee-f9ff-462f-bb45-9bf52d61daa4"), new Guid("dca53c27-9157-4f61-a3e5-eac272b764cd"), new Guid("e1b47d11-4212-4594-b405-3eff0ba3ef82"));
			GeneralLedgerAccountCostUnitAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountCostUnitAccount.AssociationType.ObjectType = this;

			GeneralLedgerAccountCostUnitAccount.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			GeneralLedgerAccountCostUnitAccount.RoleType.AssignedSingularName = "CostUnitAccount";
			GeneralLedgerAccountCostUnitAccount.RoleType.AssignedPluralName = "CostUnitsAccount";
			this.Roles.CostUnitAccount = GeneralLedgerAccountCostUnitAccount.RoleType;

			var GeneralLedgerAccountAccountNumber = new RelationType(AppsDomain.Instance, new Guid("cedccf34-0386-4be3-aa77-6ec0a9032c15"), new Guid("06fdbd7c-2693-4f23-ab53-965bb40aa79c"), new Guid("1ed39598-1583-401d-8a8e-4a34bf342001"));
			GeneralLedgerAccountAccountNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountAccountNumber.AssociationType.ObjectType = this;

			GeneralLedgerAccountAccountNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			GeneralLedgerAccountAccountNumber.RoleType.AssignedSingularName = "AccountNumber";
			GeneralLedgerAccountAccountNumber.RoleType.AssignedPluralName = "AccountNumbers";
			GeneralLedgerAccountAccountNumber.RoleType.Size = 256;
			this.Roles.AccountNumber = GeneralLedgerAccountAccountNumber.RoleType;

			var GeneralLedgerAccountCostUnitAllowed = new RelationType(AppsDomain.Instance, new Guid("d2078f49-9745-48e5-bdd2-7d7738f25d4e"), new Guid("276120e0-5e26-415c-bdc0-b1da8790d7f5"), new Guid("42f7e330-3be1-4eb7-8649-289c3907fb8f"));
			GeneralLedgerAccountCostUnitAllowed.AssignedMultiplicity = Multiplicity.ManyToMany;
			GeneralLedgerAccountCostUnitAllowed.IsIndexed = true;

			GeneralLedgerAccountCostUnitAllowed.AssociationType.ObjectType = this;

			GeneralLedgerAccountCostUnitAllowed.RoleType.ObjectType = ProductInterface.Instance;;
			GeneralLedgerAccountCostUnitAllowed.RoleType.AssignedSingularName = "CostUnitAllowed";
			GeneralLedgerAccountCostUnitAllowed.RoleType.AssignedPluralName = "CostUnitsAllowed";
			this.Roles.CostUnitAllowed = GeneralLedgerAccountCostUnitAllowed.RoleType;

			var GeneralLedgerAccountProtected = new RelationType(AppsDomain.Instance, new Guid("e433abed-8f41-4a23-8e5b-e597bb6a14d2"), new Guid("9d56bae8-0cf9-4a5f-81db-a9fcc6aea183"), new Guid("da4c5d7b-2f0b-4c18-8f6a-850064c81b9e"));
			GeneralLedgerAccountProtected.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountProtected.AssociationType.ObjectType = this;

			GeneralLedgerAccountProtected.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			GeneralLedgerAccountProtected.RoleType.AssignedSingularName = "Protected";
			GeneralLedgerAccountProtected.RoleType.AssignedPluralName = "Protecteds";
			this.Roles.Protected = GeneralLedgerAccountProtected.RoleType;


		}

		internal override void SetRelationTypes()
		{
			GeneralLedgerAccountClass.Instance.ConcreteRoles.DefaultCostUnit = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultCostUnit]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.DefaultCostCenter = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultCostCenter]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.Description = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.GeneralLedgerAccountType = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccountType]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.CashAccount = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CashAccount]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.CostCenterAccount = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CostCenterAccount]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.Side = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Side]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.BalanceSheetAccount = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BalanceSheetAccount]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.ReconciliationAccount = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReconciliationAccount]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.Name = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.CostCenterRequired = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CostCenterRequired]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.CostUnitRequired = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CostUnitRequired]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.GeneralLedgerAccountGroup = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccountGroup]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.CostCenterAllowed = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CostCenterAllowed]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.CostUnitAccount = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CostUnitAccount]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.AccountNumber = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountNumber]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.CostUnitAllowed = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CostUnitAllowed]; 

			GeneralLedgerAccountClass.Instance.ConcreteRoles.Protected = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Protected]; 


		}

		internal class RolesType
		{
			internal RoleType DefaultCostUnit;
			internal RoleType DefaultCostCenter;
			internal RoleType Description;
			internal RoleType GeneralLedgerAccountType;
			internal RoleType CashAccount;
			internal RoleType CostCenterAccount;
			internal RoleType Side;
			internal RoleType BalanceSheetAccount;
			internal RoleType ReconciliationAccount;
			internal RoleType Name;
			internal RoleType CostCenterRequired;
			internal RoleType CostUnitRequired;
			internal RoleType GeneralLedgerAccountGroup;
			internal RoleType CostCenterAllowed;
			internal RoleType CostUnitAccount;
			internal RoleType AccountNumber;
			internal RoleType CostUnitAllowed;
			internal RoleType Protected;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DefaultCostUnit;
			internal ConcreteRoleType DefaultCostCenter;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType GeneralLedgerAccountType;
			internal ConcreteRoleType CashAccount;
			internal ConcreteRoleType CostCenterAccount;
			internal ConcreteRoleType Side;
			internal ConcreteRoleType BalanceSheetAccount;
			internal ConcreteRoleType ReconciliationAccount;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType CostCenterRequired;
			internal ConcreteRoleType CostUnitRequired;
			internal ConcreteRoleType GeneralLedgerAccountGroup;
			internal ConcreteRoleType CostCenterAllowed;
			internal ConcreteRoleType CostUnitAccount;
			internal ConcreteRoleType AccountNumber;
			internal ConcreteRoleType CostUnitAllowed;
			internal ConcreteRoleType Protected;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ShippingAndHandlingComponentClass : Class
	{
		public static ShippingAndHandlingComponentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ShippingAndHandlingComponentClass() : base(AppsDomain.Instance, new Guid("1a174f59-c8cd-49ad-b0f4-a561cdcdcfb2"))
        {
			this.SingularName = "ShippingAndHandlingComponent";
			this.PluralName = "ShippingAndHandlingComponents";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b28feb35-aec2-451c-95ee-2c0cdd5a090c"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("c98d9a4c-a7d5-4b39-b4b4-224b73fe1a9c"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ShippingAndHandlingComponentCost = new RelationType(AppsDomain.Instance, new Guid("0021e1ff-bfc3-4d0b-8168-a8f5789121f7"), new Guid("f1c6cb2b-7c7a-4ca5-b594-152238131cb2"), new Guid("09d4c34a-b5b8-490c-85e3-00470bb8270e"));
			ShippingAndHandlingComponentCost.AssignedMultiplicity = Multiplicity.OneToOne;
			ShippingAndHandlingComponentCost.AssociationType.ObjectType = this;

			ShippingAndHandlingComponentCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ShippingAndHandlingComponentCost.RoleType.AssignedSingularName = "Cost";
			ShippingAndHandlingComponentCost.RoleType.AssignedPluralName = "Costs";
			ShippingAndHandlingComponentCost.RoleType.Scale = 2;
			ShippingAndHandlingComponentCost.RoleType.Precision = 19;
			this.Roles.Cost = ShippingAndHandlingComponentCost.RoleType;

			var ShippingAndHandlingComponentShipmentMethod = new RelationType(AppsDomain.Instance, new Guid("4dfb4bda-1add-45d5-92c7-6393186301f0"), new Guid("44088ee8-b84a-494c-a59c-3164c511176c"), new Guid("eac922da-3beb-41b2-a3ca-f91120f927bd"));
			ShippingAndHandlingComponentShipmentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShippingAndHandlingComponentShipmentMethod.IsIndexed = true;

			ShippingAndHandlingComponentShipmentMethod.AssociationType.ObjectType = this;

			ShippingAndHandlingComponentShipmentMethod.RoleType.ObjectType = ShipmentMethodClass.Instance;;
			ShippingAndHandlingComponentShipmentMethod.RoleType.AssignedSingularName = "ShipmentMethod";
			ShippingAndHandlingComponentShipmentMethod.RoleType.AssignedPluralName = "ShipmentMethods";
			this.Roles.ShipmentMethod = ShippingAndHandlingComponentShipmentMethod.RoleType;

			var ShippingAndHandlingComponentCarrier = new RelationType(AppsDomain.Instance, new Guid("a029fb4c-4f80-4216-8fc9-9d9b44997816"), new Guid("9e7b4c12-5168-4fe3-adaf-f8d14f7be01f"), new Guid("b0e26bbb-aef7-40ca-9a64-d78bc02affb9"));
			ShippingAndHandlingComponentCarrier.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShippingAndHandlingComponentCarrier.IsIndexed = true;

			ShippingAndHandlingComponentCarrier.AssociationType.ObjectType = this;

			ShippingAndHandlingComponentCarrier.RoleType.ObjectType = CarrierClass.Instance;;
			ShippingAndHandlingComponentCarrier.RoleType.AssignedSingularName = "Carrier";
			ShippingAndHandlingComponentCarrier.RoleType.AssignedPluralName = "Carriers";
			this.Roles.Carrier = ShippingAndHandlingComponentCarrier.RoleType;

			var ShippingAndHandlingComponentShipmentValue = new RelationType(AppsDomain.Instance, new Guid("ab4377d4-69c6-4b0c-b9d4-e3a01c1a6a94"), new Guid("2ad57105-a5c4-4e7f-a6df-79af9cddf9ca"), new Guid("742dcf46-5fa5-44b4-bf02-582681b0f6aa"));
			ShippingAndHandlingComponentShipmentValue.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShippingAndHandlingComponentShipmentValue.IsIndexed = true;

			ShippingAndHandlingComponentShipmentValue.AssociationType.ObjectType = this;

			ShippingAndHandlingComponentShipmentValue.RoleType.ObjectType = ShipmentValueClass.Instance;;
			ShippingAndHandlingComponentShipmentValue.RoleType.AssignedSingularName = "ShipmentValue";
			ShippingAndHandlingComponentShipmentValue.RoleType.AssignedPluralName = "ShipmentValues";
			this.Roles.ShipmentValue = ShippingAndHandlingComponentShipmentValue.RoleType;

			var ShippingAndHandlingComponentCurrency = new RelationType(AppsDomain.Instance, new Guid("df4727ab-29a8-448c-97b4-c16033e03dcf"), new Guid("a57b1bd3-a060-41c1-91bd-ecc428dd9b55"), new Guid("a554ced2-84e0-41bb-97d9-d0b04ef56679"));
			ShippingAndHandlingComponentCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShippingAndHandlingComponentCurrency.IsIndexed = true;

			ShippingAndHandlingComponentCurrency.AssociationType.ObjectType = this;

			ShippingAndHandlingComponentCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			ShippingAndHandlingComponentCurrency.RoleType.AssignedSingularName = "Currency";
			ShippingAndHandlingComponentCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = ShippingAndHandlingComponentCurrency.RoleType;

			var ShippingAndHandlingComponentSpecifiedFor = new RelationType(AppsDomain.Instance, new Guid("eb0b4419-e09c-43c6-a221-27e54872026e"), new Guid("699e4c3c-5cb2-44ab-8e8c-187d0006e4e9"), new Guid("6c6e0c2f-6475-415d-b916-c4489f7f4fc5"));
			ShippingAndHandlingComponentSpecifiedFor.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShippingAndHandlingComponentSpecifiedFor.IsIndexed = true;

			ShippingAndHandlingComponentSpecifiedFor.AssociationType.ObjectType = this;

			ShippingAndHandlingComponentSpecifiedFor.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			ShippingAndHandlingComponentSpecifiedFor.RoleType.AssignedSingularName = "SpecifiedFor";
			ShippingAndHandlingComponentSpecifiedFor.RoleType.AssignedPluralName = "SpecifiedFors";
			this.Roles.SpecifiedFor = ShippingAndHandlingComponentSpecifiedFor.RoleType;

			var ShippingAndHandlingComponentGeographicBoundary = new RelationType(AppsDomain.Instance, new Guid("f2bfd9d5-01b2-4bec-8dc2-018cc2187037"), new Guid("cf282301-2e6c-43ed-8447-cc09edcb9810"), new Guid("a3ee85b7-be6a-4e2b-a15d-57872bb57783"));
			ShippingAndHandlingComponentGeographicBoundary.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShippingAndHandlingComponentGeographicBoundary.IsIndexed = true;

			ShippingAndHandlingComponentGeographicBoundary.AssociationType.ObjectType = this;

			ShippingAndHandlingComponentGeographicBoundary.RoleType.ObjectType = GeographicBoundaryInterface.Instance;;
			ShippingAndHandlingComponentGeographicBoundary.RoleType.AssignedSingularName = "GeographicBoundary";
			ShippingAndHandlingComponentGeographicBoundary.RoleType.AssignedPluralName = "GeographicBoundaries";
			this.Roles.GeographicBoundary = ShippingAndHandlingComponentGeographicBoundary.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.Cost = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Cost]; 

			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.ShipmentMethod = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentMethod]; 

			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.Carrier = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Carrier]; 

			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.ShipmentValue = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentValue]; 

			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.Currency = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.SpecifiedFor = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecifiedFor]; 

			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.GeographicBoundary = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 


		}

		internal class RolesType
		{
			internal RoleType Cost;
			internal RoleType ShipmentMethod;
			internal RoleType Carrier;
			internal RoleType ShipmentValue;
			internal RoleType Currency;
			internal RoleType SpecifiedFor;
			internal RoleType GeographicBoundary;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Cost;
			internal ConcreteRoleType ShipmentMethod;
			internal ConcreteRoleType Carrier;
			internal ConcreteRoleType ShipmentValue;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType SpecifiedFor;
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class PersonalTitleClass : Class
	{
		public static PersonalTitleClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PersonalTitleClass() : base(AppsDomain.Instance, new Guid("1a4166b3-9d9c-427b-a0d8-da53b0e601a2"))
        {
			this.SingularName = "PersonalTitle";
			this.PluralName = "PersonalTitles";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7acbe506-369f-4373-86ad-a6bd25df1d09"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ReceiptAccountingTransactionClass : Class
	{
		public static ReceiptAccountingTransactionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ReceiptAccountingTransactionClass() : base(AppsDomain.Instance, new Guid("1a5195d6-8fff-4590-afe1-3f50c4fa0c67"))
        {
			this.SingularName = "ReceiptAccountingTransaction";
			this.PluralName = "ReceiptAccountingTransactions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f21f366f-ade9-478a-8a8b-c15354d019df"))
			{
				Subtype = Instance,
				Supertype = ExternalAccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ReceiptAccountingTransactionReceipt = new RelationType(AppsDomain.Instance, new Guid("a69440e0-34f3-42ce-9f21-38ea22c5762e"), new Guid("0d841c4a-1f7b-443d-95a6-29a1205f203c"), new Guid("52a40ec0-a108-491a-9f41-94885fcb09b5"));
			ReceiptAccountingTransactionReceipt.AssignedMultiplicity = Multiplicity.OneToOne;
			ReceiptAccountingTransactionReceipt.IsIndexed = true;

			ReceiptAccountingTransactionReceipt.AssociationType.ObjectType = this;

			ReceiptAccountingTransactionReceipt.RoleType.ObjectType = ReceiptClass.Instance;;
			ReceiptAccountingTransactionReceipt.RoleType.AssignedSingularName = "Receipt";
			ReceiptAccountingTransactionReceipt.RoleType.AssignedPluralName = "Receipts";
			this.Roles.Receipt = ReceiptAccountingTransactionReceipt.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.Receipt = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Receipt]; 


		}

		internal class RolesType
		{
			internal RoleType Receipt;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Receipt;
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class TimeFrequencyClass : Class
	{
		public static TimeFrequencyClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TimeFrequencyClass() : base(AppsDomain.Instance, new Guid("1aba0c3c-2a1c-414d-86df-5a9b8c672587"))
        {
			this.SingularName = "TimeFrequency";
			this.PluralName = "TimeFrequencies";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("544d5778-7a4a-4da6-adf8-b46b8b521327"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("c7aaa04d-016a-4a7b-8f78-399ca0224752"))
			{
				Subtype = Instance,
				Supertype = IUnitOfMeasureInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UnitOfMeasureConversion;
			internal ConcreteRoleType Abbreviation;

		}
	}public partial class SubContractorAgreementClass : Class
	{
		public static SubContractorAgreementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SubContractorAgreementClass() : base(AppsDomain.Instance, new Guid("1b2113f6-2c00-4ea7-9408-72bae667eaa3"))
        {
			this.SingularName = "SubContractorAgreement";
			this.PluralName = "SubContractorAgreements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("96b23739-dc6a-4988-9ff0-84fa90804977"))
			{
				Subtype = Instance,
				Supertype = AgreementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AgreementDate;
			internal ConcreteRoleType Addendum;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType AgreementTerm;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType AgreementItem;
			internal ConcreteRoleType AgreementNumber;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class PackagingContentClass : Class
	{
		public static PackagingContentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PackagingContentClass() : base(AppsDomain.Instance, new Guid("1c05a785-2de1-48fa-813f-6e740f6f7cec"))
        {
			this.SingularName = "PackagingContent";
			this.PluralName = "PackagingContents";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d13003bb-9eee-4369-8e0e-8665fb3aa2c0"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PackagingContentShipmentItem = new RelationType(AppsDomain.Instance, new Guid("316a8ff4-1073-486e-ad62-5bee3d3504d2"), new Guid("c2970739-17c4-488a-8f12-9e35ad72d311"), new Guid("536e372d-5062-418a-b17e-752ebf32d430"));
			PackagingContentShipmentItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			PackagingContentShipmentItem.IsIndexed = true;

			PackagingContentShipmentItem.AssociationType.ObjectType = this;

			PackagingContentShipmentItem.RoleType.ObjectType = ShipmentItemClass.Instance;;
			PackagingContentShipmentItem.RoleType.AssignedSingularName = "ShipmentItem";
			PackagingContentShipmentItem.RoleType.AssignedPluralName = "ShipmentItems";
			this.Roles.ShipmentItem = PackagingContentShipmentItem.RoleType;

			var PackagingContentQuantity = new RelationType(AppsDomain.Instance, new Guid("ca8bcf75-c40e-4d73-8d0c-f35d1005f73b"), new Guid("a97a1fd4-6d74-424c-aab4-909bdd198856"), new Guid("db47bbd5-e9d8-4dea-801f-bae1c49fe67c"));
			PackagingContentQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			PackagingContentQuantity.AssociationType.ObjectType = this;

			PackagingContentQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PackagingContentQuantity.RoleType.AssignedSingularName = "Quantity";
			PackagingContentQuantity.RoleType.AssignedPluralName = "Quantities";
			PackagingContentQuantity.RoleType.Scale = 2;
			PackagingContentQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = PackagingContentQuantity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PackagingContentClass.Instance.ConcreteRoles.ShipmentItem = PackagingContentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentItem]; 

			PackagingContentClass.Instance.ConcreteRoles.Quantity = PackagingContentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 


		}

		internal class RolesType
		{
			internal RoleType ShipmentItem;
			internal RoleType Quantity;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ShipmentItem;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartySkillClass : Class
	{
		public static PartySkillClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartySkillClass() : base(AppsDomain.Instance, new Guid("1d157965-59b5-4ead-b4e4-c722495d7658"))
        {
			this.SingularName = "PartySkill";
			this.PluralName = "PartySkills";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("9dbd27e6-0c94-4ca8-b037-5cba9c57b4a9"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartySkillYearsExperience = new RelationType(AppsDomain.Instance, new Guid("3254f43d-7b3a-49c8-8c1b-19fa0e4f6901"), new Guid("a25f511d-a4f9-4360-9150-304ed62d411f"), new Guid("a6c023ba-549c-4895-bd32-ed70f05ef121"));
			PartySkillYearsExperience.AssignedMultiplicity = Multiplicity.OneToOne;
			PartySkillYearsExperience.AssociationType.ObjectType = this;

			PartySkillYearsExperience.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartySkillYearsExperience.RoleType.AssignedSingularName = "YearsExperience";
			PartySkillYearsExperience.RoleType.AssignedPluralName = "YearsExperiences";
			PartySkillYearsExperience.RoleType.Scale = 2;
			PartySkillYearsExperience.RoleType.Precision = 19;
			this.Roles.YearsExperience = PartySkillYearsExperience.RoleType;

			var PartySkillStartedUsingDate = new RelationType(AppsDomain.Instance, new Guid("7ed819c8-78ef-4fe3-b499-b381c246711f"), new Guid("4a88ee23-2c4a-41d2-9891-77e5086db97d"), new Guid("ecb7eb99-dc8f-4ca0-9744-fb87a708430a"));
			PartySkillStartedUsingDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PartySkillStartedUsingDate.AssociationType.ObjectType = this;

			PartySkillStartedUsingDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PartySkillStartedUsingDate.RoleType.AssignedSingularName = "StartedUsingDate";
			PartySkillStartedUsingDate.RoleType.AssignedPluralName = "StartedUsingDates";
			this.Roles.StartedUsingDate = PartySkillStartedUsingDate.RoleType;

			var PartySkillSkillRating = new RelationType(AppsDomain.Instance, new Guid("a341478c-503c-49ee-8c9a-e85b777e9ff4"), new Guid("0a9d48d6-e307-461d-b30f-14deae3d5bd8"), new Guid("cd88bbe3-aa6a-4051-a800-57e685d85587"));
			PartySkillSkillRating.AssignedMultiplicity = Multiplicity.OneToOne;
			PartySkillSkillRating.AssociationType.ObjectType = this;

			PartySkillSkillRating.RoleType.ObjectType = SkillRatingClass.Instance;;
			PartySkillSkillRating.RoleType.AssignedSingularName = "SkillRating";
			PartySkillSkillRating.RoleType.AssignedPluralName = "SkillRatings";
			this.Roles.SkillRating = PartySkillSkillRating.RoleType;

			var PartySkillSkillLevel = new RelationType(AppsDomain.Instance, new Guid("eb3e02dc-6ee5-4aca-9f35-68edafed6dd2"), new Guid("9223e489-7115-4765-88fd-b18f0d7e8c28"), new Guid("5d9c639a-7c94-4771-ad37-be6e4b68dd06"));
			PartySkillSkillLevel.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartySkillSkillLevel.IsIndexed = true;

			PartySkillSkillLevel.AssociationType.ObjectType = this;

			PartySkillSkillLevel.RoleType.ObjectType = SkillLevelClass.Instance;;
			PartySkillSkillLevel.RoleType.AssignedSingularName = "SkillLevel";
			PartySkillSkillLevel.RoleType.AssignedPluralName = "SkillLevels";
			this.Roles.SkillLevel = PartySkillSkillLevel.RoleType;

			var PartySkillSkill = new RelationType(AppsDomain.Instance, new Guid("fec11de5-a33c-4dd7-9af9-b32c3889c8a3"), new Guid("9c16c4b8-b80f-478f-96b0-a534f9de5663"), new Guid("9728a273-f8d7-4edd-94ff-7a91d178fe82"));
			PartySkillSkill.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartySkillSkill.IsIndexed = true;

			PartySkillSkill.AssociationType.ObjectType = this;

			PartySkillSkill.RoleType.ObjectType = SkillClass.Instance;;
			PartySkillSkill.RoleType.AssignedSingularName = "Skill";
			PartySkillSkill.RoleType.AssignedPluralName = "Skills";
			this.Roles.Skill = PartySkillSkill.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartySkillClass.Instance.ConcreteRoles.YearsExperience = PartySkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.YearsExperience]; 

			PartySkillClass.Instance.ConcreteRoles.StartedUsingDate = PartySkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartedUsingDate]; 

			PartySkillClass.Instance.ConcreteRoles.SkillRating = PartySkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SkillRating]; 

			PartySkillClass.Instance.ConcreteRoles.SkillLevel = PartySkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SkillLevel]; 

			PartySkillClass.Instance.ConcreteRoles.Skill = PartySkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Skill]; 


		}

		internal class RolesType
		{
			internal RoleType YearsExperience;
			internal RoleType StartedUsingDate;
			internal RoleType SkillRating;
			internal RoleType SkillLevel;
			internal RoleType Skill;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType YearsExperience;
			internal ConcreteRoleType StartedUsingDate;
			internal ConcreteRoleType SkillRating;
			internal ConcreteRoleType SkillLevel;
			internal ConcreteRoleType Skill;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DocumentInterface: Interface
	{
		public static DocumentInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal DocumentInterface() : base(AppsDomain.Instance, new Guid("1d21adf0-6008-459d-9f6a-3a026e7640bc"))
        {
			this.SingularName = "Document";
			this.PluralName = "Documents";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("38487973-8cf7-4648-b679-b8988f4f9cfb"))
			{
				Subtype = Instance,
				Supertype = PrintableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("38f3c0fa-2aaf-4c6b-9cc9-8ac46315cf00"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("40d2852a-9226-4261-b58c-3e28d89e781a"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var DocumentName = new RelationType(AppsDomain.Instance, new Guid("484d082e-b3e4-4915-a355-43315f466e6d"), new Guid("47509fbb-ba47-4ca7-8689-51b9c5b46746"), new Guid("b8a938cf-302c-4aa0-8e1c-e23752dee601"));
			DocumentName.AssignedMultiplicity = Multiplicity.OneToOne;
			DocumentName.AssociationType.ObjectType = this;

			DocumentName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			DocumentName.RoleType.AssignedSingularName = "Name";
			DocumentName.RoleType.AssignedPluralName = "Names";
			DocumentName.RoleType.Size = 256;
			this.Roles.Name = DocumentName.RoleType;

			var DocumentDescription = new RelationType(AppsDomain.Instance, new Guid("6f6ef875-2b0b-4a03-8b2e-bf242b48c843"), new Guid("de6d7bb7-0e38-4ed0-b881-8c1cf99dc101"), new Guid("0d58ab92-ffed-4c8b-942e-f9b1780d150f"));
			DocumentDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			DocumentDescription.AssociationType.ObjectType = this;

			DocumentDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			DocumentDescription.RoleType.AssignedSingularName = "Description";
			DocumentDescription.RoleType.AssignedPluralName = "Descriptions";
			DocumentDescription.RoleType.Size = -1;
			this.Roles.Description = DocumentDescription.RoleType;

			var DocumentText = new RelationType(AppsDomain.Instance, new Guid("d579e6e7-6791-4b9b-bf20-43ab1a701866"), new Guid("771bee4a-2e75-4826-8b15-43bfa140830b"), new Guid("feeb5f20-6b25-40df-b2e0-d6c21753ea8a"));
			DocumentText.AssignedMultiplicity = Multiplicity.OneToOne;
			DocumentText.AssociationType.ObjectType = this;

			DocumentText.RoleType.ObjectType = AllorsStringUnit.Instance;;
			DocumentText.RoleType.AssignedSingularName = "Text";
			DocumentText.RoleType.AssignedPluralName = "Texts";
			DocumentText.RoleType.Size = -1;
			this.Roles.Text = DocumentText.RoleType;

			var DocumentDocumentLocation = new RelationType(AppsDomain.Instance, new Guid("e97710fe-8def-44a8-8516-18d4eae8433b"), new Guid("e73dc13b-9f24-4f09-8039-52fbddb54664"), new Guid("9388eba9-d3b7-4c8a-8e03-d8d2d31b476b"));
			DocumentDocumentLocation.AssignedMultiplicity = Multiplicity.OneToOne;
			DocumentDocumentLocation.AssociationType.ObjectType = this;

			DocumentDocumentLocation.RoleType.ObjectType = AllorsStringUnit.Instance;;
			DocumentDocumentLocation.RoleType.AssignedSingularName = "DocumentLocation";
			DocumentDocumentLocation.RoleType.AssignedPluralName = "DocumentLocations";
			DocumentDocumentLocation.RoleType.Size = 256;
			this.Roles.DocumentLocation = DocumentDocumentLocation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TaxDocumentClass.Instance.ConcreteRoles.Name = TaxDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ProductDrawingClass.Instance.ConcreteRoles.Name = ProductDrawingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			BillOfLadingClass.Instance.ConcreteRoles.Name = BillOfLadingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PackagingSlipClass.Instance.ConcreteRoles.Name = PackagingSlipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			MarketingMaterialClass.Instance.ConcreteRoles.Name = MarketingMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			EngineeringDocumentClass.Instance.ConcreteRoles.Name = EngineeringDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			HazardousMaterialsDocumentClass.Instance.ConcreteRoles.Name = HazardousMaterialsDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ProductModelClass.Instance.ConcreteRoles.Name = ProductModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ManifestClass.Instance.ConcreteRoles.Name = ManifestClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ExportDocumentClass.Instance.ConcreteRoles.Name = ExportDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			TaxDocumentClass.Instance.ConcreteRoles.Description = TaxDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ProductDrawingClass.Instance.ConcreteRoles.Description = ProductDrawingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			BillOfLadingClass.Instance.ConcreteRoles.Description = BillOfLadingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			PackagingSlipClass.Instance.ConcreteRoles.Description = PackagingSlipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			MarketingMaterialClass.Instance.ConcreteRoles.Description = MarketingMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			EngineeringDocumentClass.Instance.ConcreteRoles.Description = EngineeringDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			HazardousMaterialsDocumentClass.Instance.ConcreteRoles.Description = HazardousMaterialsDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ProductModelClass.Instance.ConcreteRoles.Description = ProductModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ManifestClass.Instance.ConcreteRoles.Description = ManifestClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ExportDocumentClass.Instance.ConcreteRoles.Description = ExportDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			TaxDocumentClass.Instance.ConcreteRoles.Text = TaxDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			ProductDrawingClass.Instance.ConcreteRoles.Text = ProductDrawingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			BillOfLadingClass.Instance.ConcreteRoles.Text = BillOfLadingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			PackagingSlipClass.Instance.ConcreteRoles.Text = PackagingSlipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			MarketingMaterialClass.Instance.ConcreteRoles.Text = MarketingMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			EngineeringDocumentClass.Instance.ConcreteRoles.Text = EngineeringDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			HazardousMaterialsDocumentClass.Instance.ConcreteRoles.Text = HazardousMaterialsDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			ProductModelClass.Instance.ConcreteRoles.Text = ProductModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			ManifestClass.Instance.ConcreteRoles.Text = ManifestClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			ExportDocumentClass.Instance.ConcreteRoles.Text = ExportDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 

			TaxDocumentClass.Instance.ConcreteRoles.DocumentLocation = TaxDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentLocation]; 
			ProductDrawingClass.Instance.ConcreteRoles.DocumentLocation = ProductDrawingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentLocation]; 
			BillOfLadingClass.Instance.ConcreteRoles.DocumentLocation = BillOfLadingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentLocation]; 
			PackagingSlipClass.Instance.ConcreteRoles.DocumentLocation = PackagingSlipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentLocation]; 
			MarketingMaterialClass.Instance.ConcreteRoles.DocumentLocation = MarketingMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentLocation]; 
			EngineeringDocumentClass.Instance.ConcreteRoles.DocumentLocation = EngineeringDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentLocation]; 
			HazardousMaterialsDocumentClass.Instance.ConcreteRoles.DocumentLocation = HazardousMaterialsDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentLocation]; 
			ProductModelClass.Instance.ConcreteRoles.DocumentLocation = ProductModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentLocation]; 
			ManifestClass.Instance.ConcreteRoles.DocumentLocation = ManifestClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentLocation]; 
			ExportDocumentClass.Instance.ConcreteRoles.DocumentLocation = ExportDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DocumentLocation]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType Description;
			internal RoleType Text;
			internal RoleType DocumentLocation;

		}
	}public partial class SerializedInventoryItemStatusClass : Class
	{
		public static SerializedInventoryItemStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SerializedInventoryItemStatusClass() : base(AppsDomain.Instance, new Guid("1da3e549-47cb-4896-94ec-3f8a263bb559"))
        {
			this.SingularName = "SerializedInventoryItemStatus";
			this.PluralName = "SerializedInventoryItemStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("aef6b599-8590-469a-902d-41192a5991f5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SerializedInventoryItemStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("aabb931a-38ee-4568-af8c-5f8ed98ed7b9"), new Guid("85598163-c71c-4bdc-942b-5ad461943e01"), new Guid("87e945cc-864b-42b6-ad9b-c3d447d96073"));
			SerializedInventoryItemStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			SerializedInventoryItemStatusStartDateTime.AssociationType.ObjectType = this;

			SerializedInventoryItemStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			SerializedInventoryItemStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			SerializedInventoryItemStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = SerializedInventoryItemStatusStartDateTime.RoleType;

			var SerializedInventoryItemStatusSerializedInventoryItemObjectState = new RelationType(AppsDomain.Instance, new Guid("d2c2fff8-73ec-4748-9c8f-29304abbdb0d"), new Guid("ee25cfd7-7389-4db7-9bb2-ee388e57f6d1"), new Guid("584017a5-99b5-414a-b32e-c64f7f2a0d4e"));
			SerializedInventoryItemStatusSerializedInventoryItemObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SerializedInventoryItemStatusSerializedInventoryItemObjectState.IsIndexed = true;

			SerializedInventoryItemStatusSerializedInventoryItemObjectState.AssociationType.ObjectType = this;

			SerializedInventoryItemStatusSerializedInventoryItemObjectState.RoleType.ObjectType = SerializedInventoryItemObjectStateClass.Instance;;
			SerializedInventoryItemStatusSerializedInventoryItemObjectState.RoleType.AssignedSingularName = "SerializedInventoryItemObjectState";
			SerializedInventoryItemStatusSerializedInventoryItemObjectState.RoleType.AssignedPluralName = "SerializedInventoryItemObjectStates";
			this.Roles.SerializedInventoryItemObjectState = SerializedInventoryItemStatusSerializedInventoryItemObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SerializedInventoryItemStatusClass.Instance.ConcreteRoles.StartDateTime = SerializedInventoryItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			SerializedInventoryItemStatusClass.Instance.ConcreteRoles.SerializedInventoryItemObjectState = SerializedInventoryItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SerializedInventoryItemObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType SerializedInventoryItemObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType SerializedInventoryItemObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class FaxCommunicationClass : Class
	{
		public static FaxCommunicationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal FaxCommunicationClass() : base(AppsDomain.Instance, new Guid("1e67320b-9680-4477-bf1b-70ccd24ab758"))
        {
			this.SingularName = "FaxCommunication";
			this.PluralName = "FaxCommunications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c437d741-9891-43f9-b8f4-ccbbcff056ed"))
			{
				Subtype = Instance,
				Supertype = CommunicationEventInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var FaxCommunicationOriginator = new RelationType(AppsDomain.Instance, new Guid("3c4bea84-e00e-4ab3-8d40-5de7f394e835"), new Guid("30a33d23-6c06-45cc-8cef-25a2d02cfc5f"), new Guid("c3ad4d30-c9ef-41da-b7de-f71c625b8549"));
			FaxCommunicationOriginator.AssignedMultiplicity = Multiplicity.ManyToOne;
			FaxCommunicationOriginator.IsIndexed = true;

			FaxCommunicationOriginator.AssociationType.ObjectType = this;

			FaxCommunicationOriginator.RoleType.ObjectType = PartyInterface.Instance;;
			FaxCommunicationOriginator.RoleType.AssignedSingularName = "Originator";
			FaxCommunicationOriginator.RoleType.AssignedPluralName = "Originators";
			this.Roles.Originator = FaxCommunicationOriginator.RoleType;

			var FaxCommunicationReceiver = new RelationType(AppsDomain.Instance, new Guid("79ec572e-b4a2-4a33-90c3-65c9f9e4012c"), new Guid("2a477a7f-bc36-437c-97df-dfca39236eb5"), new Guid("2e213178-fe72-4258-a8f5-ff926f8e5591"));
			FaxCommunicationReceiver.AssignedMultiplicity = Multiplicity.ManyToOne;
			FaxCommunicationReceiver.IsIndexed = true;

			FaxCommunicationReceiver.AssociationType.ObjectType = this;

			FaxCommunicationReceiver.RoleType.ObjectType = PartyInterface.Instance;;
			FaxCommunicationReceiver.RoleType.AssignedSingularName = "Receiver";
			FaxCommunicationReceiver.RoleType.AssignedPluralName = "Receivers";
			this.Roles.Receiver = FaxCommunicationReceiver.RoleType;

			var FaxCommunicationOutgoingFaxNumber = new RelationType(AppsDomain.Instance, new Guid("8797fd5b-0d89-420f-b656-aff35b50e75c"), new Guid("42e2cb18-3596-443c-876c-3e557189ef2a"), new Guid("7c820d65-87d3-4be3-be2e-8fa6a8b13a97"));
			FaxCommunicationOutgoingFaxNumber.AssignedMultiplicity = Multiplicity.ManyToOne;
			FaxCommunicationOutgoingFaxNumber.IsIndexed = true;

			FaxCommunicationOutgoingFaxNumber.AssociationType.ObjectType = this;

			FaxCommunicationOutgoingFaxNumber.RoleType.ObjectType = TelecommunicationsNumberClass.Instance;;
			FaxCommunicationOutgoingFaxNumber.RoleType.AssignedSingularName = "OutgoingFaxNumber";
			FaxCommunicationOutgoingFaxNumber.RoleType.AssignedPluralName = "OutgoingFaxNumbers";
			this.Roles.OutgoingFaxNumber = FaxCommunicationOutgoingFaxNumber.RoleType;


		}

		internal override void SetRelationTypes()
		{
			FaxCommunicationClass.Instance.ConcreteRoles.Originator = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 

			FaxCommunicationClass.Instance.ConcreteRoles.Receiver = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Receiver]; 

			FaxCommunicationClass.Instance.ConcreteRoles.OutgoingFaxNumber = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OutgoingFaxNumber]; 


		}

		internal class RolesType
		{
			internal RoleType Originator;
			internal RoleType Receiver;
			internal RoleType OutgoingFaxNumber;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType Receiver;
			internal ConcreteRoleType OutgoingFaxNumber;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType ToContactMechanism;
			internal ConcreteRoleType CommunicationEventStatus;
			internal ConcreteRoleType InvolvedParty;
			internal ConcreteRoleType InitialScheduledStart;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType EventPurpose;
			internal ConcreteRoleType ScheduledEnd;
			internal ConcreteRoleType ActualEnd;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType InitialScheduledEnd;
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType Subject;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType Case;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType FromContactMechanism;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType CurrentCommunicationEventStatus;
			internal ConcreteRoleType Note;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PurchaseInvoiceItemClass : Class
	{
		public static PurchaseInvoiceItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseInvoiceItemClass() : base(AppsDomain.Instance, new Guid("1ee19062-e36d-4836-b0e6-928a3957bd57"))
        {
			this.SingularName = "PurchaseInvoiceItem";
			this.PluralName = "PurchaseInvoiceItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7536e46d-2c16-4dfd-83ce-7f080ce32056"))
			{
				Subtype = Instance,
				Supertype = InvoiceItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseInvoiceItemPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("40e7bdfa-4c3e-420c-a705-70fdc822e9e9"), new Guid("5a23a9e8-afc3-4cc5-91c8-cc98b7ebf8a9"), new Guid("8980c5f1-7cda-4486-b203-4e82e039aab6"));
			PurchaseInvoiceItemPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoiceItemPreviousObjectState.IsDerived = true;
			PurchaseInvoiceItemPreviousObjectState.IsIndexed = true;

			PurchaseInvoiceItemPreviousObjectState.AssociationType.ObjectType = this;

			PurchaseInvoiceItemPreviousObjectState.RoleType.ObjectType = PurchaseInvoiceItemObjectStateClass.Instance;;
			PurchaseInvoiceItemPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			PurchaseInvoiceItemPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = PurchaseInvoiceItemPreviousObjectState.RoleType;

			var PurchaseInvoiceItemPurchaseInvoiceItemType = new RelationType(AppsDomain.Instance, new Guid("56e47122-faaa-4211-806c-1c19695fe434"), new Guid("826db2b1-3048-4237-8e83-0c472a166d49"), new Guid("893de8bc-93eb-4864-89ba-efdb66b32fd5"));
			PurchaseInvoiceItemPurchaseInvoiceItemType.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoiceItemPurchaseInvoiceItemType.IsIndexed = true;

			PurchaseInvoiceItemPurchaseInvoiceItemType.AssociationType.ObjectType = this;

			PurchaseInvoiceItemPurchaseInvoiceItemType.RoleType.ObjectType = PurchaseInvoiceItemTypeClass.Instance;;
			PurchaseInvoiceItemPurchaseInvoiceItemType.RoleType.AssignedSingularName = "PurchaseInvoiceItemType";
			PurchaseInvoiceItemPurchaseInvoiceItemType.RoleType.AssignedPluralName = "PurchaseInvoiceItemTypes";
			this.Roles.PurchaseInvoiceItemType = PurchaseInvoiceItemPurchaseInvoiceItemType.RoleType;

			var PurchaseInvoiceItemPart = new RelationType(AppsDomain.Instance, new Guid("65eebcc4-d5ef-4933-8640-973b67c65127"), new Guid("40703e06-25f8-425d-aa95-3c73fafbfa81"), new Guid("05f86785-08d8-4282-9734-6230e807181b"));
			PurchaseInvoiceItemPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoiceItemPart.IsIndexed = true;

			PurchaseInvoiceItemPart.AssociationType.ObjectType = this;

			PurchaseInvoiceItemPart.RoleType.ObjectType = PartInterface.Instance;;
			PurchaseInvoiceItemPart.RoleType.AssignedSingularName = "Part";
			PurchaseInvoiceItemPart.RoleType.AssignedPluralName = "Parts";
			this.Roles.Part = PurchaseInvoiceItemPart.RoleType;

			var PurchaseInvoiceItemCurrentInvoiceItemStatus = new RelationType(AppsDomain.Instance, new Guid("99b3395c-bb6a-4a4f-b22f-900e76e22520"), new Guid("7ed44fc9-fc12-4a68-8938-1573ec28da2f"), new Guid("7b17b8a8-fda9-4707-a7a3-e263b51bcd4f"));
			PurchaseInvoiceItemCurrentInvoiceItemStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseInvoiceItemCurrentInvoiceItemStatus.IsDerived = true;
			PurchaseInvoiceItemCurrentInvoiceItemStatus.IsIndexed = true;

			PurchaseInvoiceItemCurrentInvoiceItemStatus.AssociationType.ObjectType = this;

			PurchaseInvoiceItemCurrentInvoiceItemStatus.RoleType.ObjectType = PurchaseInvoiceItemStatusClass.Instance;;
			PurchaseInvoiceItemCurrentInvoiceItemStatus.RoleType.AssignedSingularName = "CurrentInvoiceItemStatus";
			PurchaseInvoiceItemCurrentInvoiceItemStatus.RoleType.AssignedPluralName = "CurrentInvoiceItemStatuses";
			this.Roles.CurrentInvoiceItemStatus = PurchaseInvoiceItemCurrentInvoiceItemStatus.RoleType;

			var PurchaseInvoiceItemInvoiceItemStatus = new RelationType(AppsDomain.Instance, new Guid("c850d9db-682d-4a05-b62e-ab67eb19bd0d"), new Guid("b79e9e5b-f4a5-4bd0-bc46-ab55eea2f027"), new Guid("136970e5-2ec7-4036-9abc-c84747d59d54"));
			PurchaseInvoiceItemInvoiceItemStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseInvoiceItemInvoiceItemStatus.IsDerived = true;
			PurchaseInvoiceItemInvoiceItemStatus.IsIndexed = true;

			PurchaseInvoiceItemInvoiceItemStatus.AssociationType.ObjectType = this;

			PurchaseInvoiceItemInvoiceItemStatus.RoleType.ObjectType = PurchaseInvoiceItemStatusClass.Instance;;
			PurchaseInvoiceItemInvoiceItemStatus.RoleType.AssignedSingularName = "InvoiceItemStatus";
			PurchaseInvoiceItemInvoiceItemStatus.RoleType.AssignedPluralName = "InvoiceItemStatuses";
			this.Roles.InvoiceItemStatus = PurchaseInvoiceItemInvoiceItemStatus.RoleType;

			var PurchaseInvoiceItemCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("dbe5c72f-63e0-47a5-a5f5-f8a3ff83fd57"), new Guid("f8082d94-30fa-4a58-8bb0-bc5bb4f045ef"), new Guid("69360188-077f-49f0-ba88-abb1f546d72c"));
			PurchaseInvoiceItemCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoiceItemCurrentObjectState.IsDerived = true;
			PurchaseInvoiceItemCurrentObjectState.IsIndexed = true;

			PurchaseInvoiceItemCurrentObjectState.AssociationType.ObjectType = this;

			PurchaseInvoiceItemCurrentObjectState.RoleType.ObjectType = PurchaseInvoiceItemObjectStateClass.Instance;;
			PurchaseInvoiceItemCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			PurchaseInvoiceItemCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = PurchaseInvoiceItemCurrentObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseInvoiceItemClass.Instance.ConcreteRoles.PreviousObjectState = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.PurchaseInvoiceItemType = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseInvoiceItemType]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.Part = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.CurrentInvoiceItemStatus = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentInvoiceItemStatus]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.InvoiceItemStatus = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceItemStatus]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.CurrentObjectState = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType PreviousObjectState;
			internal RoleType PurchaseInvoiceItemType;
			internal RoleType Part;
			internal RoleType CurrentInvoiceItemStatus;
			internal RoleType InvoiceItemStatus;
			internal RoleType CurrentObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType PurchaseInvoiceItemType;
			internal ConcreteRoleType Part;
			internal ConcreteRoleType CurrentInvoiceItemStatus;
			internal ConcreteRoleType InvoiceItemStatus;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType TotalIncVatCustomerCurrency;
			internal ConcreteRoleType InvoiceTerm;
			internal ConcreteRoleType TotalVatCustomerCurrency;
			internal ConcreteRoleType TotalBasePrice;
			internal ConcreteRoleType TotalSurcharge;
			internal ConcreteRoleType TotalInvoiceAdjustment;
			internal ConcreteRoleType TotalExVatCustomerCurrency;
			internal ConcreteRoleType TotalDiscount;
			internal ConcreteRoleType InvoiceVatRateItem;
			internal ConcreteRoleType TotalDiscountAsPercentage;
			internal ConcreteRoleType CalculatedUnitPrice;
			internal ConcreteRoleType UnitDiscount;
			internal ConcreteRoleType AssignedVatRegime;
			internal ConcreteRoleType TotalIncVat;
			internal ConcreteRoleType AdjustmentFor;
			internal ConcreteRoleType UnitBasePrice;
			internal ConcreteRoleType TotalSurchargeCustomerCurrency;
			internal ConcreteRoleType SerializedInventoryItem;
			internal ConcreteRoleType CurrentPriceComponent;
			internal ConcreteRoleType DiscountAdjustment;
			internal ConcreteRoleType ActualUnitPrice;
			internal ConcreteRoleType Message;
			internal ConcreteRoleType TotalInvoiceAdjustmentCustomerCurrency;
			internal ConcreteRoleType AmountPaid;
			internal ConcreteRoleType DerivedVatRate;
			internal ConcreteRoleType TotalDiscountCustomerCurrency;
			internal ConcreteRoleType UnitSurcharge;
			internal ConcreteRoleType TotalExVat;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType TotalSurchargeAsPercentage;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType TotalBasePriceCustomerCurrency;
			internal ConcreteRoleType TotalVat;
			internal ConcreteRoleType SurchargeAdjustment;
			internal ConcreteRoleType UnitVat;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OrderItemBillingClass : Class
	{
		public static OrderItemBillingClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrderItemBillingClass() : base(AppsDomain.Instance, new Guid("1f14fdb3-9e0f-4cea-b7c7-3ca2ab898f56"))
        {
			this.SingularName = "OrderItemBilling";
			this.PluralName = "OrderItemsBilling";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrderItemBillingOrderItem = new RelationType(AppsDomain.Instance, new Guid("214988fc-b5a2-4944-9c83-93a645a96853"), new Guid("2007bddd-e78c-40a8-9015-5d3f027586c0"), new Guid("624c3c0b-faac-4542-aeb2-466952cbf832"));
			OrderItemBillingOrderItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderItemBillingOrderItem.IsIndexed = true;

			OrderItemBillingOrderItem.AssociationType.ObjectType = this;

			OrderItemBillingOrderItem.RoleType.ObjectType = OrderItemInterface.Instance;;
			OrderItemBillingOrderItem.RoleType.AssignedSingularName = "OrderItem";
			OrderItemBillingOrderItem.RoleType.AssignedPluralName = "OrderItems";
			this.Roles.OrderItem = OrderItemBillingOrderItem.RoleType;

			var OrderItemBillingSalesInvoiceItem = new RelationType(AppsDomain.Instance, new Guid("23a0d52d-3ec7-4ddf-a300-c0ee46edf41a"), new Guid("03ac8386-6706-4e3f-9ad2-a64e67edf08f"), new Guid("61e3ad81-395e-46e9-837f-e48257141164"));
			OrderItemBillingSalesInvoiceItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderItemBillingSalesInvoiceItem.IsIndexed = true;

			OrderItemBillingSalesInvoiceItem.AssociationType.ObjectType = this;

			OrderItemBillingSalesInvoiceItem.RoleType.ObjectType = SalesInvoiceItemClass.Instance;;
			OrderItemBillingSalesInvoiceItem.RoleType.AssignedSingularName = "SalesInvoiceItem";
			OrderItemBillingSalesInvoiceItem.RoleType.AssignedPluralName = "SalesInvoiceItems";
			this.Roles.SalesInvoiceItem = OrderItemBillingSalesInvoiceItem.RoleType;

			var OrderItemBillingAmount = new RelationType(AppsDomain.Instance, new Guid("2f75bdee-46f9-4dd0-b349-00a497462fdb"), new Guid("86dc1660-7719-4dae-93d8-ce4ca7a00f2a"), new Guid("bc0b7bb6-c77b-451d-bf95-c32967766c49"));
			OrderItemBillingAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemBillingAmount.AssociationType.ObjectType = this;

			OrderItemBillingAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemBillingAmount.RoleType.AssignedSingularName = "Amount";
			OrderItemBillingAmount.RoleType.AssignedPluralName = "Amounts";
			OrderItemBillingAmount.RoleType.Scale = 2;
			OrderItemBillingAmount.RoleType.Precision = 19;
			this.Roles.Amount = OrderItemBillingAmount.RoleType;

			var OrderItemBillingQuantity = new RelationType(AppsDomain.Instance, new Guid("cfff23f0-1f3c-48a1-b4a7-85bc2254dbff"), new Guid("ed09cee4-3c01-4a2a-ab3d-6f9e8de16466"), new Guid("6193e84f-882a-4b7a-b51c-8ec93f09aff2"));
			OrderItemBillingQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemBillingQuantity.AssociationType.ObjectType = this;

			OrderItemBillingQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemBillingQuantity.RoleType.AssignedSingularName = "Quantity";
			OrderItemBillingQuantity.RoleType.AssignedPluralName = "Quantities";
			OrderItemBillingQuantity.RoleType.Scale = 2;
			OrderItemBillingQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = OrderItemBillingQuantity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrderItemBillingClass.Instance.ConcreteRoles.OrderItem = OrderItemBillingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItem]; 

			OrderItemBillingClass.Instance.ConcreteRoles.SalesInvoiceItem = OrderItemBillingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesInvoiceItem]; 

			OrderItemBillingClass.Instance.ConcreteRoles.Amount = OrderItemBillingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 

			OrderItemBillingClass.Instance.ConcreteRoles.Quantity = OrderItemBillingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 


		}

		internal class RolesType
		{
			internal RoleType OrderItem;
			internal RoleType SalesInvoiceItem;
			internal RoleType Amount;
			internal RoleType Quantity;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType OrderItem;
			internal ConcreteRoleType SalesInvoiceItem;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType Quantity;

		}
	}public partial class ProductDrawingClass : Class
	{
		public static ProductDrawingClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductDrawingClass() : base(AppsDomain.Instance, new Guid("1fb8d537-a870-4793-95a1-7742749e16fc"))
        {
			this.SingularName = "ProductDrawing";
			this.PluralName = "ProductDrawings";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8f231f94-2f90-44a0-9315-272b95427ffe"))
			{
				Subtype = Instance,
				Supertype = DocumentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DocumentLocation;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;

		}
	}public partial class PayHistoryClass : Class
	{
		public static PayHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PayHistoryClass() : base(AppsDomain.Instance, new Guid("208a5af6-8dd8-4a48-acb2-2ecb89e8d322"))
        {
			this.SingularName = "PayHistory";
			this.PluralName = "PayHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("97061b68-ceb2-4c1b-aaae-a193fed344d7"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a1aaba5c-b837-4b2a-b1bf-040302eb437c"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PayHistoryEmployment = new RelationType(AppsDomain.Instance, new Guid("2f14e234-c808-4059-bb29-48e6d9493b7b"), new Guid("e44919c4-eac2-4be0-a244-b2cacdf1c4c4"), new Guid("0441ebf6-3607-44e7-98ca-831e146cf9d7"));
			PayHistoryEmployment.AssignedMultiplicity = Multiplicity.ManyToOne;
			PayHistoryEmployment.IsIndexed = true;

			PayHistoryEmployment.AssociationType.ObjectType = this;

			PayHistoryEmployment.RoleType.ObjectType = EmploymentClass.Instance;;
			PayHistoryEmployment.RoleType.AssignedSingularName = "Employment";
			PayHistoryEmployment.RoleType.AssignedPluralName = "Employments";
			this.Roles.Employment = PayHistoryEmployment.RoleType;

			var PayHistoryTimeFrequency = new RelationType(AppsDomain.Instance, new Guid("6d26369b-eea2-4712-a7d1-56884a3cc715"), new Guid("6e23ddf7-9766-4f56-bd4f-587bb6f00e00"), new Guid("9d1f6129-281c-413d-ba78-fdb99c84a8b2"));
			PayHistoryTimeFrequency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PayHistoryTimeFrequency.IsIndexed = true;

			PayHistoryTimeFrequency.AssociationType.ObjectType = this;

			PayHistoryTimeFrequency.RoleType.ObjectType = TimeFrequencyClass.Instance;;
			PayHistoryTimeFrequency.RoleType.AssignedSingularName = "TimeFrequency";
			PayHistoryTimeFrequency.RoleType.AssignedPluralName = "TimeFrequencies";
			this.Roles.TimeFrequency = PayHistoryTimeFrequency.RoleType;

			var PayHistorySalaryStep = new RelationType(AppsDomain.Instance, new Guid("b3f1071f-7e71-4ef1-aa9b-545ad694f44c"), new Guid("717107b5-fafc-4cca-b85d-364d819a7529"), new Guid("3f7535b3-76dc-47c8-9668-895596bafc16"));
			PayHistorySalaryStep.AssignedMultiplicity = Multiplicity.ManyToOne;
			PayHistorySalaryStep.IsIndexed = true;

			PayHistorySalaryStep.AssociationType.ObjectType = this;

			PayHistorySalaryStep.RoleType.ObjectType = SalaryStepClass.Instance;;
			PayHistorySalaryStep.RoleType.AssignedSingularName = "SalaryStep";
			PayHistorySalaryStep.RoleType.AssignedPluralName = "SalarySteps";
			this.Roles.SalaryStep = PayHistorySalaryStep.RoleType;

			var PayHistoryAmount = new RelationType(AppsDomain.Instance, new Guid("b7ef1bf8-b16b-400e-903e-d0a7454572a0"), new Guid("9717c46c-8c64-477a-916a-98594dd21039"), new Guid("fcae3d2d-fe78-4501-8c8e-bda78822c6f2"));
			PayHistoryAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			PayHistoryAmount.AssociationType.ObjectType = this;

			PayHistoryAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PayHistoryAmount.RoleType.AssignedSingularName = "Amount";
			PayHistoryAmount.RoleType.AssignedPluralName = "Amounts";
			PayHistoryAmount.RoleType.Scale = 2;
			PayHistoryAmount.RoleType.Precision = 19;
			this.Roles.Amount = PayHistoryAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PayHistoryClass.Instance.ConcreteRoles.Employment = PayHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Employment]; 

			PayHistoryClass.Instance.ConcreteRoles.TimeFrequency = PayHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TimeFrequency]; 

			PayHistoryClass.Instance.ConcreteRoles.SalaryStep = PayHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalaryStep]; 

			PayHistoryClass.Instance.ConcreteRoles.Amount = PayHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 


		}

		internal class RolesType
		{
			internal RoleType Employment;
			internal RoleType TimeFrequency;
			internal RoleType SalaryStep;
			internal RoleType Amount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Employment;
			internal ConcreteRoleType TimeFrequency;
			internal ConcreteRoleType SalaryStep;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class ShipmentValueClass : Class
	{
		public static ShipmentValueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ShipmentValueClass() : base(AppsDomain.Instance, new Guid("20ef8456-83f2-4722-b8a8-1d8ab3129843"))
        {
			this.SingularName = "ShipmentValue";
			this.PluralName = "ShipmentValues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("25a23ae0-46ab-4683-8f98-8708522f0068"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ShipmentValueThroughAmount = new RelationType(AppsDomain.Instance, new Guid("a87bb4e3-ca1c-4887-9305-19febfc531fd"), new Guid("dd6f8067-ae66-41d1-b211-9d9b68459bcc"), new Guid("48754c2d-fc0c-47ac-af53-bc4b2f9adc20"));
			ShipmentValueThroughAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentValueThroughAmount.AssociationType.ObjectType = this;

			ShipmentValueThroughAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ShipmentValueThroughAmount.RoleType.AssignedSingularName = "ThroughAmount";
			ShipmentValueThroughAmount.RoleType.AssignedPluralName = "ThroughAmounts";
			ShipmentValueThroughAmount.RoleType.Scale = 2;
			ShipmentValueThroughAmount.RoleType.Precision = 19;
			this.Roles.ThroughAmount = ShipmentValueThroughAmount.RoleType;

			var ShipmentValueFromAmount = new RelationType(AppsDomain.Instance, new Guid("d637b8ab-c6ac-4855-81db-f0a1f1584219"), new Guid("af4f35a2-6f4b-4e99-9d5d-271eafc5db17"), new Guid("3f7500ff-afc7-4dc8-a454-e35838380a0c"));
			ShipmentValueFromAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentValueFromAmount.AssociationType.ObjectType = this;

			ShipmentValueFromAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ShipmentValueFromAmount.RoleType.AssignedSingularName = "FromAmount";
			ShipmentValueFromAmount.RoleType.AssignedPluralName = "FromAmounts";
			ShipmentValueFromAmount.RoleType.Scale = 2;
			ShipmentValueFromAmount.RoleType.Precision = 19;
			this.Roles.FromAmount = ShipmentValueFromAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ShipmentValueClass.Instance.ConcreteRoles.ThroughAmount = ShipmentValueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughAmount]; 

			ShipmentValueClass.Instance.ConcreteRoles.FromAmount = ShipmentValueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromAmount]; 


		}

		internal class RolesType
		{
			internal RoleType ThroughAmount;
			internal RoleType FromAmount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ThroughAmount;
			internal ConcreteRoleType FromAmount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class InternalOrganisationAccountingPreferenceClass : Class
	{
		public static InternalOrganisationAccountingPreferenceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InternalOrganisationAccountingPreferenceClass() : base(AppsDomain.Instance, new Guid("20f97398-6614-44ec-8e33-3a0b3f113e11"))
        {
			this.SingularName = "InternalOrganisationAccountingPreference";
			this.PluralName = "InternalOrganisationAccountingPreferences";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a5338881-3dec-435d-a99e-6c6470ef0f6b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var InternalOrganisationAccountingPreferenceGeneralLedgerAccount = new RelationType(AppsDomain.Instance, new Guid("0ac44c21-6a2c-4162-9d77-fe1b16b60b73"), new Guid("4d61b711-7aab-4162-bb31-74db09f666fe"), new Guid("0da9c561-a6fc-4fea-aee3-5c24a2b08aea"));
			InternalOrganisationAccountingPreferenceGeneralLedgerAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationAccountingPreferenceGeneralLedgerAccount.IsIndexed = true;

			InternalOrganisationAccountingPreferenceGeneralLedgerAccount.AssociationType.ObjectType = this;

			InternalOrganisationAccountingPreferenceGeneralLedgerAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			InternalOrganisationAccountingPreferenceGeneralLedgerAccount.RoleType.AssignedSingularName = "GeneralLedgerAccount";
			InternalOrganisationAccountingPreferenceGeneralLedgerAccount.RoleType.AssignedPluralName = "GeneralLedgerAccounts";
			this.Roles.GeneralLedgerAccount = InternalOrganisationAccountingPreferenceGeneralLedgerAccount.RoleType;

			var InternalOrganisationAccountingPreferenceInventoryItemKind = new RelationType(AppsDomain.Instance, new Guid("7279a067-a219-478a-8573-4a212448328b"), new Guid("c86e149d-dba6-4928-ac01-66f74cb7f102"), new Guid("0dd6f18e-4ec3-491e-b6d0-fbfb7fceb37d"));
			InternalOrganisationAccountingPreferenceInventoryItemKind.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationAccountingPreferenceInventoryItemKind.IsIndexed = true;

			InternalOrganisationAccountingPreferenceInventoryItemKind.AssociationType.ObjectType = this;

			InternalOrganisationAccountingPreferenceInventoryItemKind.RoleType.ObjectType = InventoryItemKindClass.Instance;;
			InternalOrganisationAccountingPreferenceInventoryItemKind.RoleType.AssignedSingularName = "InventoryItemKind";
			InternalOrganisationAccountingPreferenceInventoryItemKind.RoleType.AssignedPluralName = "InventoryItemKinds";
			this.Roles.InventoryItemKind = InternalOrganisationAccountingPreferenceInventoryItemKind.RoleType;

			var InternalOrganisationAccountingPreferencePaymentMethod = new RelationType(AppsDomain.Instance, new Guid("bd24005a-4391-417b-83f3-da7fa0324cf1"), new Guid("588aff14-7523-47be-bf96-5a81630754a7"), new Guid("f4799bf2-32bc-4f3e-b337-dfca87a58b21"));
			InternalOrganisationAccountingPreferencePaymentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationAccountingPreferencePaymentMethod.IsIndexed = true;

			InternalOrganisationAccountingPreferencePaymentMethod.AssociationType.ObjectType = this;

			InternalOrganisationAccountingPreferencePaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			InternalOrganisationAccountingPreferencePaymentMethod.RoleType.AssignedSingularName = "PaymentMethod";
			InternalOrganisationAccountingPreferencePaymentMethod.RoleType.AssignedPluralName = "PaymentMethods";
			this.Roles.PaymentMethod = InternalOrganisationAccountingPreferencePaymentMethod.RoleType;

			var InternalOrganisationAccountingPreferenceReceipt = new RelationType(AppsDomain.Instance, new Guid("bdd72700-8be8-4db4-8d1c-3fa3fdb8548f"), new Guid("d27bfc28-e617-438c-a8d6-c36ce7cd22b6"), new Guid("e9b60088-c318-4755-a3ac-d25737e0a21b"));
			InternalOrganisationAccountingPreferenceReceipt.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationAccountingPreferenceReceipt.IsIndexed = true;

			InternalOrganisationAccountingPreferenceReceipt.AssociationType.ObjectType = this;

			InternalOrganisationAccountingPreferenceReceipt.RoleType.ObjectType = ReceiptClass.Instance;;
			InternalOrganisationAccountingPreferenceReceipt.RoleType.AssignedSingularName = "Receipt";
			InternalOrganisationAccountingPreferenceReceipt.RoleType.AssignedPluralName = "Receipts";
			this.Roles.Receipt = InternalOrganisationAccountingPreferenceReceipt.RoleType;

			var InternalOrganisationAccountingPreferenceInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("bf3732f2-2c6e-4931-9f35-ab46b8b26e63"), new Guid("28945e7e-6cce-43e5-afb6-13c224a3bf34"), new Guid("f94c3b98-53ec-4622-96f3-d8d7d8baa383"));
			InternalOrganisationAccountingPreferenceInternalOrganisation.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationAccountingPreferenceInternalOrganisation.IsIndexed = true;

			InternalOrganisationAccountingPreferenceInternalOrganisation.AssociationType.ObjectType = this;

			InternalOrganisationAccountingPreferenceInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			InternalOrganisationAccountingPreferenceInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			InternalOrganisationAccountingPreferenceInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = InternalOrganisationAccountingPreferenceInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoles.GeneralLedgerAccount = InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccount]; 

			InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoles.InventoryItemKind = InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemKind]; 

			InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoles.PaymentMethod = InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 

			InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoles.Receipt = InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Receipt]; 

			InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoles.InternalOrganisation = InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType GeneralLedgerAccount;
			internal RoleType InventoryItemKind;
			internal RoleType PaymentMethod;
			internal RoleType Receipt;
			internal RoleType InternalOrganisation;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType GeneralLedgerAccount;
			internal ConcreteRoleType InventoryItemKind;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType Receipt;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PurchaseShipmentObjectStateClass : Class
	{
		public static PurchaseShipmentObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseShipmentObjectStateClass() : base(AppsDomain.Instance, new Guid("21840af7-e7e7-4e8d-a720-3ea7ee5d2bfd"))
        {
			this.SingularName = "PurchaseShipmentObjectState";
			this.PluralName = "PurchaseShipmentObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c0c59cf9-f137-4b89-8d2e-fc82c3d63d39"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class SalesOrderItemObjectStateClass : Class
	{
		public static SalesOrderItemObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesOrderItemObjectStateClass() : base(AppsDomain.Instance, new Guid("21f09e4c-7b3f-4152-8822-8c485011759c"))
        {
			this.SingularName = "SalesOrderItemObjectState";
			this.PluralName = "SalesOrderItemObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("84e11562-6cb1-471a-a91b-f769199d0e75"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class BankAccountClass : Class
	{
		public static BankAccountClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BankAccountClass() : base(AppsDomain.Instance, new Guid("22bc5b67-8015-49c5-bc47-6f9e7e678943"))
        {
			this.SingularName = "BankAccount";
			this.PluralName = "BankAccounts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8df0a5f1-ddd5-4a20-87e5-00f369c9e6a4"))
			{
				Subtype = Instance,
				Supertype = FinancialAccountInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var BankAccountBank = new RelationType(AppsDomain.Instance, new Guid("52677328-d903-4e97-83c1-b55668ced66d"), new Guid("6895f657-2e32-4a12-af0c-bb2d5d633174"), new Guid("ddf52c63-b6d5-4bae-9d54-f1c71e76c289"));
			BankAccountBank.AssignedMultiplicity = Multiplicity.ManyToOne;
			BankAccountBank.IsIndexed = true;

			BankAccountBank.AssociationType.ObjectType = this;

			BankAccountBank.RoleType.ObjectType = BankClass.Instance;;
			BankAccountBank.RoleType.AssignedSingularName = "Bank";
			BankAccountBank.RoleType.AssignedPluralName = "Banks";
			this.Roles.Bank = BankAccountBank.RoleType;

			var BankAccountNameOnAccount = new RelationType(AppsDomain.Instance, new Guid("53bb9d62-a8e5-417c-9392-c54cf99bc24b"), new Guid("65fc437f-ae06-4d85-a300-3508edeec4c1"), new Guid("2d1f34f5-6a15-4b4d-901e-f8b8dcf1df01"));
			BankAccountNameOnAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			BankAccountNameOnAccount.AssociationType.ObjectType = this;

			BankAccountNameOnAccount.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BankAccountNameOnAccount.RoleType.AssignedSingularName = "NameOnAccount";
			BankAccountNameOnAccount.RoleType.AssignedPluralName = "NamesOnAccount";
			BankAccountNameOnAccount.RoleType.Size = 256;
			this.Roles.NameOnAccount = BankAccountNameOnAccount.RoleType;

			var BankAccountContactMechanism = new RelationType(AppsDomain.Instance, new Guid("93447a57-a049-4eaa-98ec-6fec60bdb64c"), new Guid("68e37671-a29b-44fa-9f19-2efe76a409f3"), new Guid("f22eb146-8e3f-4ea6-85f5-3a2b0d08ecc5"));
			BankAccountContactMechanism.AssignedMultiplicity = Multiplicity.OneToMany;
			BankAccountContactMechanism.IsIndexed = true;

			BankAccountContactMechanism.AssociationType.ObjectType = this;

			BankAccountContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			BankAccountContactMechanism.RoleType.AssignedSingularName = "ContactMechanism";
			BankAccountContactMechanism.RoleType.AssignedPluralName = "ContactMechanisms";
			this.Roles.ContactMechanism = BankAccountContactMechanism.RoleType;

			var BankAccountCurrency = new RelationType(AppsDomain.Instance, new Guid("a7d242b4-4d39-4254-beb2-914eb556f7b7"), new Guid("2911fab2-a04f-4afc-961d-4fac26f01ae3"), new Guid("ab751b97-c9d9-46bc-9209-6a0b3c191ea0"));
			BankAccountCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			BankAccountCurrency.IsIndexed = true;

			BankAccountCurrency.AssociationType.ObjectType = this;

			BankAccountCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			BankAccountCurrency.RoleType.AssignedSingularName = "Currency";
			BankAccountCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = BankAccountCurrency.RoleType;

			var BankAccountIban = new RelationType(AppsDomain.Instance, new Guid("ac2d58e5-ad74-4afe-b9f0-aeb9dfdcd4b3"), new Guid("55e4252b-7543-4384-8fe5-65aff3648744"), new Guid("3783ab93-3ca8-4a04-be01-5831b7f3ab02"));
			BankAccountIban.AssignedMultiplicity = Multiplicity.OneToOne;
			BankAccountIban.AssociationType.ObjectType = this;

			BankAccountIban.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BankAccountIban.RoleType.AssignedSingularName = "Iban";
			BankAccountIban.RoleType.AssignedPluralName = "Ibans";
			BankAccountIban.RoleType.Size = 256;
			this.Roles.Iban = BankAccountIban.RoleType;

			var BankAccountBranch = new RelationType(AppsDomain.Instance, new Guid("b06a858d-a8ee-41b8-a747-7fd46336ae4f"), new Guid("00656807-27c8-4803-a1e3-aad812af2f9e"), new Guid("08604620-9d2f-4b98-bba6-16147c0d9978"));
			BankAccountBranch.AssignedMultiplicity = Multiplicity.OneToOne;
			BankAccountBranch.AssociationType.ObjectType = this;

			BankAccountBranch.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BankAccountBranch.RoleType.AssignedSingularName = "Branch";
			BankAccountBranch.RoleType.AssignedPluralName = "Branches";
			BankAccountBranch.RoleType.Size = 256;
			this.Roles.Branch = BankAccountBranch.RoleType;

			var BankAccountContactPerson = new RelationType(AppsDomain.Instance, new Guid("ecaedf71-98a2-425d-8046-cc8865fdbe73"), new Guid("9174bacb-3955-462a-a53f-ec251466da1b"), new Guid("7d0da5fc-29a4-4a53-a834-9c58662145d0"));
			BankAccountContactPerson.AssignedMultiplicity = Multiplicity.OneToMany;
			BankAccountContactPerson.IsIndexed = true;

			BankAccountContactPerson.AssociationType.ObjectType = this;

			BankAccountContactPerson.RoleType.ObjectType = PersonClass.Instance;;
			BankAccountContactPerson.RoleType.AssignedSingularName = "ContactPerson";
			BankAccountContactPerson.RoleType.AssignedPluralName = "ContactPersons";
			this.Roles.ContactPerson = BankAccountContactPerson.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BankAccountClass.Instance.ConcreteRoles.Bank = BankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Bank]; 

			BankAccountClass.Instance.ConcreteRoles.NameOnAccount = BankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NameOnAccount]; 

			BankAccountClass.Instance.ConcreteRoles.ContactMechanism = BankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContactMechanism]; 

			BankAccountClass.Instance.ConcreteRoles.Currency = BankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			BankAccountClass.Instance.ConcreteRoles.Iban = BankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Iban]; 

			BankAccountClass.Instance.ConcreteRoles.Branch = BankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Branch]; 

			BankAccountClass.Instance.ConcreteRoles.ContactPerson = BankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContactPerson]; 


		}

		internal class RolesType
		{
			internal RoleType Bank;
			internal RoleType NameOnAccount;
			internal RoleType ContactMechanism;
			internal RoleType Currency;
			internal RoleType Iban;
			internal RoleType Branch;
			internal RoleType ContactPerson;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Bank;
			internal ConcreteRoleType NameOnAccount;
			internal ConcreteRoleType ContactMechanism;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Iban;
			internal ConcreteRoleType Branch;
			internal ConcreteRoleType ContactPerson;
			internal ConcreteRoleType FinancialAccountTransaction;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ServiceEntryHeaderClass : Class
	{
		public static ServiceEntryHeaderClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ServiceEntryHeaderClass() : base(AppsDomain.Instance, new Guid("22e85314-cfdf-4ead-a816-18588294fa79"))
        {
			this.SingularName = "ServiceEntryHeader";
			this.PluralName = "ServiceEntryHeaders";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("71ce40ce-9bec-4793-a275-5d4eca7fefb4"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("c8bd934b-b7f2-4295-bb59-55b510cf0639"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ServiceEntryHeaderServiceEntry = new RelationType(AppsDomain.Instance, new Guid("6b29a626-04f6-423f-8ae5-cb49e8f9211d"), new Guid("9f14e67f-328b-44e6-8c80-707441848265"), new Guid("21500c76-8a3e-4737-aa69-e348e06440e2"));
			ServiceEntryHeaderServiceEntry.AssignedMultiplicity = Multiplicity.OneToMany;
			ServiceEntryHeaderServiceEntry.IsIndexed = true;

			ServiceEntryHeaderServiceEntry.AssociationType.ObjectType = this;

			ServiceEntryHeaderServiceEntry.RoleType.ObjectType = ServiceEntryInterface.Instance;;
			ServiceEntryHeaderServiceEntry.RoleType.AssignedSingularName = "ServiceEntry";
			ServiceEntryHeaderServiceEntry.RoleType.AssignedPluralName = "ServiceEntries";
			this.Roles.ServiceEntry = ServiceEntryHeaderServiceEntry.RoleType;

			var ServiceEntryHeaderSubmittedDate = new RelationType(AppsDomain.Instance, new Guid("7e160fbc-1339-433c-9dcb-9b3ad58ad400"), new Guid("a9d0cbd8-bb20-45e1-b109-6620b23fa1b7"), new Guid("ef8b435e-e354-45e2-89bc-3d452cc84f5a"));
			ServiceEntryHeaderSubmittedDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ServiceEntryHeaderSubmittedDate.AssociationType.ObjectType = this;

			ServiceEntryHeaderSubmittedDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ServiceEntryHeaderSubmittedDate.RoleType.AssignedSingularName = "SubmittedDate";
			ServiceEntryHeaderSubmittedDate.RoleType.AssignedPluralName = "SubmittedDates";
			this.Roles.SubmittedDate = ServiceEntryHeaderSubmittedDate.RoleType;

			var ServiceEntryHeaderSubmittedBy = new RelationType(AppsDomain.Instance, new Guid("902235fe-a6c5-47bb-936b-8b6ce54b3d15"), new Guid("1f93dde3-a9bd-4e10-8ec6-38edaec6ffb5"), new Guid("3b27dd30-5452-480f-ae19-6937c422b541"));
			ServiceEntryHeaderSubmittedBy.AssignedMultiplicity = Multiplicity.ManyToOne;
			ServiceEntryHeaderSubmittedBy.IsIndexed = true;

			ServiceEntryHeaderSubmittedBy.AssociationType.ObjectType = this;

			ServiceEntryHeaderSubmittedBy.RoleType.ObjectType = PersonClass.Instance;;
			ServiceEntryHeaderSubmittedBy.RoleType.AssignedSingularName = "SubmittedBy";
			ServiceEntryHeaderSubmittedBy.RoleType.AssignedPluralName = "SubmittedBys";
			this.Roles.SubmittedBy = ServiceEntryHeaderSubmittedBy.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ServiceEntryHeaderClass.Instance.ConcreteRoles.ServiceEntry = ServiceEntryHeaderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ServiceEntry]; 

			ServiceEntryHeaderClass.Instance.ConcreteRoles.SubmittedDate = ServiceEntryHeaderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubmittedDate]; 

			ServiceEntryHeaderClass.Instance.ConcreteRoles.SubmittedBy = ServiceEntryHeaderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubmittedBy]; 


		}

		internal class RolesType
		{
			internal RoleType ServiceEntry;
			internal RoleType SubmittedDate;
			internal RoleType SubmittedBy;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ServiceEntry;
			internal ConcreteRoleType SubmittedDate;
			internal ConcreteRoleType SubmittedBy;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartRevisionClass : Class
	{
		public static PartRevisionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartRevisionClass() : base(AppsDomain.Instance, new Guid("22f87630-11dd-480e-a721-9836af7685b1"))
        {
			this.SingularName = "PartRevision";
			this.PluralName = "PartRevisions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("946f6f5c-01ef-4db2-a285-c40c7b76b19e"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("d6ba631b-0e52-417d-aec7-35fb6b0f86b1"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartRevisionReason = new RelationType(AppsDomain.Instance, new Guid("6d1b4cec-abff-46db-a446-0f8889426b28"), new Guid("82cf09e8-535f-45fe-876e-484dfb3ea102"), new Guid("946a84d0-36f8-4805-bbdd-a0779c9d008c"));
			PartRevisionReason.AssignedMultiplicity = Multiplicity.OneToOne;
			PartRevisionReason.AssociationType.ObjectType = this;

			PartRevisionReason.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartRevisionReason.RoleType.AssignedSingularName = "Reason";
			PartRevisionReason.RoleType.AssignedPluralName = "Reasons";
			PartRevisionReason.RoleType.Size = -1;
			this.Roles.Reason = PartRevisionReason.RoleType;

			var PartRevisionSupersededByPart = new RelationType(AppsDomain.Instance, new Guid("84561abd-08bc-4d28-b25c-22787d8bd7f0"), new Guid("4f700281-794b-4250-8bbe-f4fbbbcf8243"), new Guid("8c408bc0-82f2-4343-93d2-87047c024ef9"));
			PartRevisionSupersededByPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartRevisionSupersededByPart.IsIndexed = true;

			PartRevisionSupersededByPart.AssociationType.ObjectType = this;

			PartRevisionSupersededByPart.RoleType.ObjectType = PartInterface.Instance;;
			PartRevisionSupersededByPart.RoleType.AssignedSingularName = "SupersededByPart";
			PartRevisionSupersededByPart.RoleType.AssignedPluralName = "SupersededByParts";
			this.Roles.SupersededByPart = PartRevisionSupersededByPart.RoleType;

			var PartRevisionPart = new RelationType(AppsDomain.Instance, new Guid("8a064340-def3-4d9f-89d6-3325b8a41f4d"), new Guid("6c674199-8f5f-469c-8f94-f35d64304968"), new Guid("190e180b-cf6f-485d-80b2-9042e0fe04a7"));
			PartRevisionPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartRevisionPart.IsIndexed = true;

			PartRevisionPart.AssociationType.ObjectType = this;

			PartRevisionPart.RoleType.ObjectType = PartInterface.Instance;;
			PartRevisionPart.RoleType.AssignedSingularName = "Part";
			PartRevisionPart.RoleType.AssignedPluralName = "Parts";
			this.Roles.Part = PartRevisionPart.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartRevisionClass.Instance.ConcreteRoles.Reason = PartRevisionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Reason]; 

			PartRevisionClass.Instance.ConcreteRoles.SupersededByPart = PartRevisionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SupersededByPart]; 

			PartRevisionClass.Instance.ConcreteRoles.Part = PartRevisionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 


		}

		internal class RolesType
		{
			internal RoleType Reason;
			internal RoleType SupersededByPart;
			internal RoleType Part;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Reason;
			internal ConcreteRoleType SupersededByPart;
			internal ConcreteRoleType Part;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PurchaseReturnObjectStateClass : Class
	{
		public static PurchaseReturnObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseReturnObjectStateClass() : base(AppsDomain.Instance, new Guid("23162c0f-f5ec-45a5-a948-13a3355d99f2"))
        {
			this.SingularName = "PurchaseReturnObjectState";
			this.PluralName = "PurchaseReturnObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8ce3de24-7535-42c1-9953-a249a7d658a5"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ProductConfigurationClass : Class
	{
		public static ProductConfigurationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductConfigurationClass() : base(AppsDomain.Instance, new Guid("23503dae-02ff-4dae-950e-d699dcb12a3c"))
        {
			this.SingularName = "ProductConfiguration";
			this.PluralName = "ProductConfigurations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0a9d4662-d1bb-46dc-b534-b8663da6cecd"))
			{
				Subtype = Instance,
				Supertype = ProductAssociationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductConfigurationProductUsedIn = new RelationType(AppsDomain.Instance, new Guid("463f9523-62e0-4f33-a0fd-29b42f4af046"), new Guid("4c878c18-a3d4-4928-a675-4c0940f05c41"), new Guid("acf16223-8095-4133-89e9-841e11447a63"));
			ProductConfigurationProductUsedIn.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductConfigurationProductUsedIn.IsIndexed = true;

			ProductConfigurationProductUsedIn.AssociationType.ObjectType = this;

			ProductConfigurationProductUsedIn.RoleType.ObjectType = ProductInterface.Instance;;
			ProductConfigurationProductUsedIn.RoleType.AssignedSingularName = "ProductUsedIn";
			ProductConfigurationProductUsedIn.RoleType.AssignedPluralName = "ProductsUsedIn";
			this.Roles.ProductUsedIn = ProductConfigurationProductUsedIn.RoleType;

			var ProductConfigurationProduct = new RelationType(AppsDomain.Instance, new Guid("528afcdf-09c2-4b3a-89b0-4da8fd732e83"), new Guid("774872d1-6b99-4e5e-8f00-f791a11ea337"), new Guid("b2fe3235-8886-4ed1-b8df-edb36e9c8e17"));
			ProductConfigurationProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductConfigurationProduct.IsIndexed = true;

			ProductConfigurationProduct.AssociationType.ObjectType = this;

			ProductConfigurationProduct.RoleType.ObjectType = ProductInterface.Instance;;
			ProductConfigurationProduct.RoleType.AssignedSingularName = "Product";
			ProductConfigurationProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = ProductConfigurationProduct.RoleType;

			var ProductConfigurationQuantityUsed = new RelationType(AppsDomain.Instance, new Guid("9e6d3782-2f32-4155-a1bf-62c02e8cbe82"), new Guid("aba19375-c6c7-4955-b764-bf731822b4f8"), new Guid("53546606-dc80-4224-a6ce-45acff613fb9"));
			ProductConfigurationQuantityUsed.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductConfigurationQuantityUsed.AssociationType.ObjectType = this;

			ProductConfigurationQuantityUsed.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ProductConfigurationQuantityUsed.RoleType.AssignedSingularName = "QuantityUsed";
			ProductConfigurationQuantityUsed.RoleType.AssignedPluralName = "QuantitiesUsed";
			ProductConfigurationQuantityUsed.RoleType.Scale = 2;
			ProductConfigurationQuantityUsed.RoleType.Precision = 19;
			this.Roles.QuantityUsed = ProductConfigurationQuantityUsed.RoleType;

			var ProductConfigurationDescription = new RelationType(AppsDomain.Instance, new Guid("caabfae5-6cff-41df-a267-9f4bde0b4808"), new Guid("d76092e1-40e4-45ab-ada5-cbe9206dcf84"), new Guid("3afc48ad-7897-4741-9d32-78f857b414fb"));
			ProductConfigurationDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductConfigurationDescription.AssociationType.ObjectType = this;

			ProductConfigurationDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProductConfigurationDescription.RoleType.AssignedSingularName = "Description";
			ProductConfigurationDescription.RoleType.AssignedPluralName = "Descriptions";
			ProductConfigurationDescription.RoleType.Size = 256;
			this.Roles.Description = ProductConfigurationDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductConfigurationClass.Instance.ConcreteRoles.ProductUsedIn = ProductConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductUsedIn]; 

			ProductConfigurationClass.Instance.ConcreteRoles.Product = ProductConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			ProductConfigurationClass.Instance.ConcreteRoles.QuantityUsed = ProductConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityUsed]; 

			ProductConfigurationClass.Instance.ConcreteRoles.Description = ProductConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType ProductUsedIn;
			internal RoleType Product;
			internal RoleType QuantityUsed;
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ProductUsedIn;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType QuantityUsed;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class OwnCreditCardClass : Class
	{
		public static OwnCreditCardClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OwnCreditCardClass() : base(AppsDomain.Instance, new Guid("23848955-69ae-40ce-b973-0d416ae80c78"))
        {
			this.SingularName = "OwnCreditCard";
			this.PluralName = "OwnCreditCards";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0a98daed-940f-42fb-acea-718acd0ce1a5"))
			{
				Subtype = Instance,
				Supertype = PaymentMethodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("0ba36575-ca62-448b-b6ec-08601b5436c7"))
			{
				Subtype = Instance,
				Supertype = FinancialAccountInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OwnCreditCardOwner = new RelationType(AppsDomain.Instance, new Guid("7ca9a38c-4318-4bb6-8bc6-50e5dfe9c701"), new Guid("3dc97f13-b6b7-47eb-ae6c-b57b45a2f129"), new Guid("0bfa9940-e320-4e52-903a-b6765830069a"));
			OwnCreditCardOwner.AssignedMultiplicity = Multiplicity.ManyToOne;
			OwnCreditCardOwner.IsIndexed = true;

			OwnCreditCardOwner.AssociationType.ObjectType = this;

			OwnCreditCardOwner.RoleType.ObjectType = PersonClass.Instance;;
			OwnCreditCardOwner.RoleType.AssignedSingularName = "Owner";
			OwnCreditCardOwner.RoleType.AssignedPluralName = "Owners";
			this.Roles.Owner = OwnCreditCardOwner.RoleType;

			var OwnCreditCardCreditCard = new RelationType(AppsDomain.Instance, new Guid("e2514c8b-5980-4e58-a75f-20890ed79516"), new Guid("2f572644-647a-4d4e-b085-400ba3a88f7a"), new Guid("81d792be-5f29-415e-8290-66b98a95e9e3"));
			OwnCreditCardCreditCard.AssignedMultiplicity = Multiplicity.ManyToOne;
			OwnCreditCardCreditCard.IsIndexed = true;

			OwnCreditCardCreditCard.AssociationType.ObjectType = this;

			OwnCreditCardCreditCard.RoleType.ObjectType = CreditCardClass.Instance;;
			OwnCreditCardCreditCard.RoleType.AssignedSingularName = "CreditCard";
			OwnCreditCardCreditCard.RoleType.AssignedPluralName = "CreditCards";
			this.Roles.CreditCard = OwnCreditCardCreditCard.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OwnCreditCardClass.Instance.ConcreteRoles.Owner = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 

			OwnCreditCardClass.Instance.ConcreteRoles.CreditCard = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreditCard]; 


		}

		internal class RolesType
		{
			internal RoleType Owner;
			internal RoleType CreditCard;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType CreditCard;
			internal ConcreteRoleType BalanceLimit;
			internal ConcreteRoleType CurrentBalance;
			internal ConcreteRoleType Journal;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType GlPaymentInTransit;
			internal ConcreteRoleType Remarks;
			internal ConcreteRoleType GeneralLedgerAccount;
			internal ConcreteRoleType Creditor;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType FinancialAccountTransaction;

		}
	}public partial class DimensionClass : Class
	{
		public static DimensionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DimensionClass() : base(AppsDomain.Instance, new Guid("26981f3f-f683-4a59-91ad-7a0e4243aea6"))
        {
			this.SingularName = "Dimension";
			this.PluralName = "Dimensions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("722e2b6a-ef37-4d58-8d4e-ec247e9003df"))
			{
				Subtype = Instance,
				Supertype = ProductFeatureInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DimensionUnit = new RelationType(AppsDomain.Instance, new Guid("6901f550-4470-4acf-8234-96c1b1bd0bc6"), new Guid("094356ad-e8d6-4f6b-b1c6-910a3d9fc518"), new Guid("1863b99e-415e-42a0-acef-613f7b3e3315"));
			DimensionUnit.AssignedMultiplicity = Multiplicity.OneToOne;
			DimensionUnit.AssociationType.ObjectType = this;

			DimensionUnit.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			DimensionUnit.RoleType.AssignedSingularName = "Unit";
			DimensionUnit.RoleType.AssignedPluralName = "Units";
			DimensionUnit.RoleType.Scale = 2;
			DimensionUnit.RoleType.Precision = 19;
			this.Roles.Unit = DimensionUnit.RoleType;

			var DimensionUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("c4fa3792-9784-43ea-91f1-1533f1d12765"), new Guid("ea393d05-73c8-4b52-b578-c02cc718f076"), new Guid("fae40aa7-15ea-4b37-8d33-86df26b14b54"));
			DimensionUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			DimensionUnitOfMeasure.IsIndexed = true;

			DimensionUnitOfMeasure.AssociationType.ObjectType = this;

			DimensionUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			DimensionUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			DimensionUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = DimensionUnitOfMeasure.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DimensionClass.Instance.ConcreteRoles.Unit = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Unit]; 

			DimensionClass.Instance.ConcreteRoles.UnitOfMeasure = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 


		}

		internal class RolesType
		{
			internal RoleType Unit;
			internal RoleType UnitOfMeasure;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Unit;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType EstimatedProductCost;
			internal ConcreteRoleType BasePrice;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DependentFeature;
			internal ConcreteRoleType IncompatibleFeature;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesInvoiceItemTypeClass : Class
	{
		public static SalesInvoiceItemTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesInvoiceItemTypeClass() : base(AppsDomain.Instance, new Guid("26f60d84-0659-4874-9c00-d6f3db11f073"))
        {
			this.SingularName = "SalesInvoiceItemType";
			this.PluralName = "SalesInvoiceItemTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1233069b-7012-44aa-bafa-1e567361f161"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ModelClass : Class
	{
		public static ModelClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ModelClass() : base(AppsDomain.Instance, new Guid("273e69b7-6cda-44d4-b1d6-605b32a6a70d"))
        {
			this.SingularName = "Model";
			this.PluralName = "Models";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("906a7290-c097-465f-afb1-f2469ff440d0"))
			{
				Subtype = Instance,
				Supertype = ProductFeatureInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ac18467a-2bb0-49ad-a3fa-eec3de4333ad"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType EstimatedProductCost;
			internal ConcreteRoleType BasePrice;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DependentFeature;
			internal ConcreteRoleType IncompatibleFeature;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;

		}
	}public partial class FinancialAccountInterface: Interface
	{
		public static FinancialAccountInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal FinancialAccountInterface() : base(AppsDomain.Instance, new Guid("27b45d45-459a-43cb-87b0-f8842ec56445"))
        {
			this.SingularName = "FinancialAccount";
			this.PluralName = "FinancialAccounts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3b80335c-4145-4276-bce3-d0894c4872a5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var FinancialAccountFinancialAccountTransaction = new RelationType(AppsDomain.Instance, new Guid("f90475c7-4a2d-42fd-bafd-96557c217c19"), new Guid("5566f06a-feb0-45f0-9a84-673b758b6af9"), new Guid("29bda327-86c2-4fa4-af63-8e870cc736b5"));
			FinancialAccountFinancialAccountTransaction.AssignedMultiplicity = Multiplicity.OneToMany;
			FinancialAccountFinancialAccountTransaction.IsIndexed = true;

			FinancialAccountFinancialAccountTransaction.AssociationType.ObjectType = this;

			FinancialAccountFinancialAccountTransaction.RoleType.ObjectType = FinancialAccountTransactionInterface.Instance;;
			FinancialAccountFinancialAccountTransaction.RoleType.AssignedSingularName = "FinancialAccountTransaction";
			FinancialAccountFinancialAccountTransaction.RoleType.AssignedPluralName = "FinancialAccountTransactions";
			this.Roles.FinancialAccountTransaction = FinancialAccountFinancialAccountTransaction.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BankAccountClass.Instance.ConcreteRoles.FinancialAccountTransaction = BankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FinancialAccountTransaction]; 
			OwnCreditCardClass.Instance.ConcreteRoles.FinancialAccountTransaction = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FinancialAccountTransaction]; 
			InvestmentAccountClass.Instance.ConcreteRoles.FinancialAccountTransaction = InvestmentAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FinancialAccountTransaction]; 
			CreditCardClass.Instance.ConcreteRoles.FinancialAccountTransaction = CreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FinancialAccountTransaction]; 
			OwnBankAccountClass.Instance.ConcreteRoles.FinancialAccountTransaction = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FinancialAccountTransaction]; 


		}

		internal class RolesType
		{
			internal RoleType FinancialAccountTransaction;

		}
	}public partial class PickListClass : Class
	{
		public static PickListClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PickListClass() : base(AppsDomain.Instance, new Guid("27b6630a-35d0-4352-9223-b5b6c8d7496b"))
        {
			this.SingularName = "PickList";
			this.PluralName = "PickLists";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2640c852-86a9-4dce-8081-773a2c9e77b1"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("45e10918-bcd3-4d20-b93a-759d0684913d"))
			{
				Subtype = Instance,
				Supertype = PrintableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("4c25568f-f736-4a62-8109-93492f5de34c"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e36c247e-3280-4ba4-bb2a-42fee831d6cd"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PickListCustomerShipmentCorrection = new RelationType(AppsDomain.Instance, new Guid("0bdfcd8a-af37-41a7-be2c-db7848d4fd05"), new Guid("88919577-6835-4c84-9e3d-a1ec50fc5c2b"), new Guid("6042abcd-a859-42bb-818d-9409f7b08d7a"));
			PickListCustomerShipmentCorrection.AssignedMultiplicity = Multiplicity.OneToOne;
			PickListCustomerShipmentCorrection.IsIndexed = true;

			PickListCustomerShipmentCorrection.AssociationType.ObjectType = this;

			PickListCustomerShipmentCorrection.RoleType.ObjectType = CustomerShipmentClass.Instance;;
			PickListCustomerShipmentCorrection.RoleType.AssignedSingularName = "CustomerShipmentCorrection";
			PickListCustomerShipmentCorrection.RoleType.AssignedPluralName = "CustomerShipmentsCorrection";
			this.Roles.CustomerShipmentCorrection = PickListCustomerShipmentCorrection.RoleType;

			var PickListCreationDate = new RelationType(AppsDomain.Instance, new Guid("1176ffe1-efff-4c02-b4df-5bba9052f6da"), new Guid("dcb3602c-f60e-4798-b32d-2a69f9e1056b"), new Guid("920c6a7e-b8b8-4155-9209-4c8ed24a023a"));
			PickListCreationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PickListCreationDate.AssociationType.ObjectType = this;

			PickListCreationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PickListCreationDate.RoleType.AssignedSingularName = "CreationDate";
			PickListCreationDate.RoleType.AssignedPluralName = "CreationDates";
			this.Roles.CreationDate = PickListCreationDate.RoleType;

			var PickListPickListItem = new RelationType(AppsDomain.Instance, new Guid("3bb68c85-4e2b-42b8-b5fb-18a66c58c283"), new Guid("11fddfe2-9b04-4b53-a4ff-6f571e73c32a"), new Guid("a139b102-f8a9-43f1-9b14-d3c76f7be294"));
			PickListPickListItem.AssignedMultiplicity = Multiplicity.OneToMany;
			PickListPickListItem.IsIndexed = true;

			PickListPickListItem.AssociationType.ObjectType = this;

			PickListPickListItem.RoleType.ObjectType = PickListItemClass.Instance;;
			PickListPickListItem.RoleType.AssignedSingularName = "PickListItem";
			PickListPickListItem.RoleType.AssignedPluralName = "PickListItems";
			this.Roles.PickListItem = PickListPickListItem.RoleType;

			var PickListCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("4231c38e-e54c-480d-9e0f-2fe8bd101da1"), new Guid("b4d28461-6b82-4843-90ee-a5c3c0cddfc0"), new Guid("11fa5c06-67ce-44e0-b205-e60be00e9922"));
			PickListCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PickListCurrentObjectState.IsDerived = true;
			PickListCurrentObjectState.IsIndexed = true;

			PickListCurrentObjectState.AssociationType.ObjectType = this;

			PickListCurrentObjectState.RoleType.ObjectType = PickListObjectStateClass.Instance;;
			PickListCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			PickListCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = PickListCurrentObjectState.RoleType;

			var PickListCurrentPickListStatus = new RelationType(AppsDomain.Instance, new Guid("62239709-cd1f-4582-99f7-8f18e875e241"), new Guid("61ae7eeb-259c-44bb-9de7-aff577a66669"), new Guid("fe4d009e-1ea4-43d2-b4ce-96a1d9af5cf7"));
			PickListCurrentPickListStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PickListCurrentPickListStatus.IsDerived = true;
			PickListCurrentPickListStatus.IsIndexed = true;

			PickListCurrentPickListStatus.AssociationType.ObjectType = this;

			PickListCurrentPickListStatus.RoleType.ObjectType = PickListStatusClass.Instance;;
			PickListCurrentPickListStatus.RoleType.AssignedSingularName = "CurrentPickListStatus";
			PickListCurrentPickListStatus.RoleType.AssignedPluralName = "CurrentPickListStatuses";
			this.Roles.CurrentPickListStatus = PickListCurrentPickListStatus.RoleType;

			var PickListPicker = new RelationType(AppsDomain.Instance, new Guid("6572f862-31b2-4be9-b7dc-7fff5d21f620"), new Guid("2a502d47-1319-45a4-ad52-70dd41435732"), new Guid("76ddffff-4968-4b4b-8b52-58a1a05a774d"));
			PickListPicker.AssignedMultiplicity = Multiplicity.ManyToOne;
			PickListPicker.IsIndexed = true;

			PickListPicker.AssociationType.ObjectType = this;

			PickListPicker.RoleType.ObjectType = PersonClass.Instance;;
			PickListPicker.RoleType.AssignedSingularName = "Picker";
			PickListPicker.RoleType.AssignedPluralName = "Pickers";
			this.Roles.Picker = PickListPicker.RoleType;

			var PickListPickListStatus = new RelationType(AppsDomain.Instance, new Guid("7b5e6ef5-e5c0-4e7c-8955-b6c18f136fee"), new Guid("ede5efc3-a840-44b5-8389-611c05ae4df2"), new Guid("ec323cf6-acad-4e8b-bb73-0323e9aee277"));
			PickListPickListStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PickListPickListStatus.IsDerived = true;
			PickListPickListStatus.IsIndexed = true;

			PickListPickListStatus.AssociationType.ObjectType = this;

			PickListPickListStatus.RoleType.ObjectType = PickListStatusClass.Instance;;
			PickListPickListStatus.RoleType.AssignedSingularName = "PickListStatus";
			PickListPickListStatus.RoleType.AssignedPluralName = "PickListStatuses";
			this.Roles.PickListStatus = PickListPickListStatus.RoleType;

			var PickListPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("8ffdbeab-618f-42fb-8ec8-4bb34c65f489"), new Guid("50ffbba5-5584-411c-98a8-61320be9ab15"), new Guid("e623f810-2bf7-4dda-8d83-c0d0bc17c379"));
			PickListPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PickListPreviousObjectState.IsDerived = true;
			PickListPreviousObjectState.IsIndexed = true;

			PickListPreviousObjectState.AssociationType.ObjectType = this;

			PickListPreviousObjectState.RoleType.ObjectType = PickListObjectStateClass.Instance;;
			PickListPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			PickListPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = PickListPreviousObjectState.RoleType;

			var PickListShipToParty = new RelationType(AppsDomain.Instance, new Guid("ae75482e-2c41-46d4-ab73-f3aac368fd50"), new Guid("6b8acd68-6aba-4092-8c87-cdc62d9a4c82"), new Guid("61785577-8ab7-457c-870f-69ecb7c41f8b"));
			PickListShipToParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PickListShipToParty.IsIndexed = true;

			PickListShipToParty.AssociationType.ObjectType = this;

			PickListShipToParty.RoleType.ObjectType = PartyInterface.Instance;;
			PickListShipToParty.RoleType.AssignedSingularName = "ShipToParty";
			PickListShipToParty.RoleType.AssignedPluralName = "ShipToParties";
			this.Roles.ShipToParty = PickListShipToParty.RoleType;

			var PickListStore = new RelationType(AppsDomain.Instance, new Guid("e334e938-35e7-4217-91fa-efb231f71a37"), new Guid("0706d8f1-764d-4ab9-b63a-1b0213cc9dbd"), new Guid("4c3d2de1-6735-40fc-bfe9-65a64aaf966c"));
			PickListStore.AssignedMultiplicity = Multiplicity.ManyToOne;
			PickListStore.IsIndexed = true;

			PickListStore.AssociationType.ObjectType = this;

			PickListStore.RoleType.ObjectType = StoreClass.Instance;;
			PickListStore.RoleType.AssignedSingularName = "Store";
			PickListStore.RoleType.AssignedPluralName = "Stores";
			this.Roles.Store = PickListStore.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PickListClass.Instance.ConcreteRoles.CustomerShipmentCorrection = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerShipmentCorrection]; 

			PickListClass.Instance.ConcreteRoles.CreationDate = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreationDate]; 

			PickListClass.Instance.ConcreteRoles.PickListItem = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PickListItem]; 

			PickListClass.Instance.ConcreteRoles.CurrentObjectState = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			PickListClass.Instance.ConcreteRoles.CurrentPickListStatus = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPickListStatus]; 

			PickListClass.Instance.ConcreteRoles.Picker = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Picker]; 

			PickListClass.Instance.ConcreteRoles.PickListStatus = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PickListStatus]; 

			PickListClass.Instance.ConcreteRoles.PreviousObjectState = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			PickListClass.Instance.ConcreteRoles.ShipToParty = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToParty]; 

			PickListClass.Instance.ConcreteRoles.Store = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 


		}

		internal class RolesType
		{
			internal RoleType CustomerShipmentCorrection;
			internal RoleType CreationDate;
			internal RoleType PickListItem;
			internal RoleType CurrentObjectState;
			internal RoleType CurrentPickListStatus;
			internal RoleType Picker;
			internal RoleType PickListStatus;
			internal RoleType PreviousObjectState;
			internal RoleType ShipToParty;
			internal RoleType Store;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CustomerShipmentCorrection;
			internal ConcreteRoleType CreationDate;
			internal ConcreteRoleType PickListItem;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType CurrentPickListStatus;
			internal ConcreteRoleType Picker;
			internal ConcreteRoleType PickListStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType ShipToParty;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class StoreRevenueClass : Class
	{
		public static StoreRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal StoreRevenueClass() : base(AppsDomain.Instance, new Guid("282e0f1a-fda0-4287-a043-65dcc1853d95"))
        {
			this.SingularName = "StoreRevenue";
			this.PluralName = "StoreRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a67f5d14-585d-4e39-b117-aa80a108e2c2"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ecc674ed-4aa7-4d21-b777-1abb272e1fd6"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var StoreRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("0074524a-afb6-4acd-b8d7-34dcc988a34a"), new Guid("dfaa2eeb-c42f-44e2-89ba-69ab1e484093"), new Guid("dc9a6bd0-9250-4e2a-91bf-22ae91d992c0"));
			StoreRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreRevenueInternalOrganisation.IsIndexed = true;

			StoreRevenueInternalOrganisation.AssociationType.ObjectType = this;

			StoreRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			StoreRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			StoreRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = StoreRevenueInternalOrganisation.RoleType;

			var StoreRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("0bb50dce-d7dc-49a7-8af6-f9a75232e1f4"), new Guid("1fe6427d-19fa-44d9-a116-92b3cc9ebca5"), new Guid("02c4a390-69d3-4133-a29b-82779566d79e"));
			StoreRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreRevenueMonth.AssociationType.ObjectType = this;

			StoreRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			StoreRevenueMonth.RoleType.AssignedSingularName = "Month";
			StoreRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = StoreRevenueMonth.RoleType;

			var StoreRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("4686c8fa-0637-4159-8cb6-ff738f686eb0"), new Guid("b1557f78-f07c-417b-b0b0-c4f26f08574e"), new Guid("3daa636c-e6bc-461d-9db7-7a890622e506"));
			StoreRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreRevenueCurrency.IsIndexed = true;

			StoreRevenueCurrency.AssociationType.ObjectType = this;

			StoreRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			StoreRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			StoreRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = StoreRevenueCurrency.RoleType;

			var StoreRevenueStore = new RelationType(AppsDomain.Instance, new Guid("620bebb6-89b9-4c37-b9c6-a80605dab7dd"), new Guid("bcaa6464-f7b9-4cec-91c1-8a35b7f5889c"), new Guid("5bcdf844-f377-4439-84f3-191a79346fcb"));
			StoreRevenueStore.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreRevenueStore.IsIndexed = true;

			StoreRevenueStore.AssociationType.ObjectType = this;

			StoreRevenueStore.RoleType.ObjectType = StoreClass.Instance;;
			StoreRevenueStore.RoleType.AssignedSingularName = "Store";
			StoreRevenueStore.RoleType.AssignedPluralName = "Stores";
			this.Roles.Store = StoreRevenueStore.RoleType;

			var StoreRevenueStoreName = new RelationType(AppsDomain.Instance, new Guid("870630fe-7bc0-4442-befe-10a013cb4dcd"), new Guid("dd9cc663-1f43-44be-8942-63ba5740ffaf"), new Guid("452d7d3f-5028-4526-b7cc-17cc24457dd7"));
			StoreRevenueStoreName.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreRevenueStoreName.AssociationType.ObjectType = this;

			StoreRevenueStoreName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			StoreRevenueStoreName.RoleType.AssignedSingularName = "StoreName";
			StoreRevenueStoreName.RoleType.AssignedPluralName = "StoreNames";
			StoreRevenueStoreName.RoleType.Size = 256;
			this.Roles.StoreName = StoreRevenueStoreName.RoleType;

			var StoreRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("b1305cde-30aa-4573-a227-d333eed87713"), new Guid("f51e254a-62a8-4670-9a39-2ecaa09cad53"), new Guid("2b002d48-54b3-453d-bbdd-5debeaebce55"));
			StoreRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreRevenueRevenue.AssociationType.ObjectType = this;

			StoreRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			StoreRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			StoreRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			StoreRevenueRevenue.RoleType.Scale = 2;
			StoreRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = StoreRevenueRevenue.RoleType;

			var StoreRevenueYear = new RelationType(AppsDomain.Instance, new Guid("e20a98fc-50d9-4bb4-97a4-6754886fd0a2"), new Guid("3b527ed6-a340-47ee-b294-76b50b122c16"), new Guid("bd11a8a5-be1c-4c87-8c90-8cac07e6b8df"));
			StoreRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreRevenueYear.IsIndexed = true;

			StoreRevenueYear.AssociationType.ObjectType = this;

			StoreRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			StoreRevenueYear.RoleType.AssignedSingularName = "Year";
			StoreRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = StoreRevenueYear.RoleType;


		}

		internal override void SetRelationTypes()
		{
			StoreRevenueClass.Instance.ConcreteRoles.InternalOrganisation = StoreRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			StoreRevenueClass.Instance.ConcreteRoles.Month = StoreRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			StoreRevenueClass.Instance.ConcreteRoles.Currency = StoreRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			StoreRevenueClass.Instance.ConcreteRoles.Store = StoreRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 

			StoreRevenueClass.Instance.ConcreteRoles.StoreName = StoreRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StoreName]; 

			StoreRevenueClass.Instance.ConcreteRoles.Revenue = StoreRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			StoreRevenueClass.Instance.ConcreteRoles.Year = StoreRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 


		}

		internal class RolesType
		{
			internal RoleType InternalOrganisation;
			internal RoleType Month;
			internal RoleType Currency;
			internal RoleType Store;
			internal RoleType StoreName;
			internal RoleType Revenue;
			internal RoleType Year;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType StoreName;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AgreementExhibitClass : Class
	{
		public static AgreementExhibitClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AgreementExhibitClass() : base(AppsDomain.Instance, new Guid("2830c388-b002-44d6-91b6-b2b43fa778f3"))
        {
			this.SingularName = "AgreementExhibit";
			this.PluralName = "AgreementExhibits";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("008d92b7-3163-4d13-b0c1-2727fc7dd229"))
			{
				Subtype = Instance,
				Supertype = AgreementItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Text;
			internal ConcreteRoleType Addendum;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType AgreementTerm;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProductCategoryRevenueHistoryClass : Class
	{
		public static ProductCategoryRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductCategoryRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("29d8d5c2-58f9-41b9-914f-5dce7b69e908"))
        {
			this.SingularName = "ProductCategoryRevenueHistory";
			this.PluralName = "ProductCategoryRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("bc26c18c-fc03-4e1d-8e9a-0fc8a584b132"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductCategoryRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("19307e7c-c703-4d76-af03-53add0ad0dec"), new Guid("9e03ab90-cde9-439a-94ef-7807a1735248"), new Guid("b4027d52-49b4-4991-9294-110e914743ab"));
			ProductCategoryRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductCategoryRevenueHistoryCurrency.IsIndexed = true;

			ProductCategoryRevenueHistoryCurrency.AssociationType.ObjectType = this;

			ProductCategoryRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			ProductCategoryRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			ProductCategoryRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = ProductCategoryRevenueHistoryCurrency.RoleType;

			var ProductCategoryRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("4db15d5b-129f-412e-9f76-9573a66603c0"), new Guid("f615a26c-9fb3-44d1-b481-f89fa8440945"), new Guid("57681daa-0588-43cb-a9b0-c1d982fb2408"));
			ProductCategoryRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductCategoryRevenueHistoryRevenue.AssociationType.ObjectType = this;

			ProductCategoryRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ProductCategoryRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			ProductCategoryRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			ProductCategoryRevenueHistoryRevenue.RoleType.Scale = 2;
			ProductCategoryRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = ProductCategoryRevenueHistoryRevenue.RoleType;

			var ProductCategoryRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("51f81397-a0da-49f7-9f33-96d3aa85f000"), new Guid("fdee71e1-8c89-4042-ad5d-cab81c88f54d"), new Guid("0d668529-e9e7-4a2c-8451-f4e8b80ec4cc"));
			ProductCategoryRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductCategoryRevenueHistoryInternalOrganisation.IsIndexed = true;

			ProductCategoryRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			ProductCategoryRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			ProductCategoryRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			ProductCategoryRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = ProductCategoryRevenueHistoryInternalOrganisation.RoleType;

			var ProductCategoryRevenueHistoryProductCategory = new RelationType(AppsDomain.Instance, new Guid("72354b14-fce1-4a41-868b-0e315775e506"), new Guid("03e4a65f-3084-4a8c-993b-8a136d93fcbe"), new Guid("273cd4fa-0a35-4c21-935e-9e01b010e001"));
			ProductCategoryRevenueHistoryProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductCategoryRevenueHistoryProductCategory.IsIndexed = true;

			ProductCategoryRevenueHistoryProductCategory.AssociationType.ObjectType = this;

			ProductCategoryRevenueHistoryProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			ProductCategoryRevenueHistoryProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			ProductCategoryRevenueHistoryProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = ProductCategoryRevenueHistoryProductCategory.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.Currency = ProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			ProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.Revenue = ProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			ProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = ProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			ProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.ProductCategory = ProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 


		}

		internal class RolesType
		{
			internal RoleType Currency;
			internal RoleType Revenue;
			internal RoleType InternalOrganisation;
			internal RoleType ProductCategory;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesRepRevenueHistoryClass : Class
	{
		public static SalesRepRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesRepRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("2a79b7f0-5998-4d52-b995-8412df939098"))
        {
			this.SingularName = "SalesRepRevenueHistory";
			this.PluralName = "SalesRepRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d4f05692-ba29-4456-8879-b0999327c26c"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesRepRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("0d2277e4-470d-487a-9276-3972d57c8512"), new Guid("a86b2a21-c5d1-4ee5-9039-e5b3fcfd3d2d"), new Guid("8ff9fb8e-a85b-4a47-b591-c882614c767f"));
			SalesRepRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepRevenueHistoryCurrency.IsIndexed = true;

			SalesRepRevenueHistoryCurrency.AssociationType.ObjectType = this;

			SalesRepRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			SalesRepRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			SalesRepRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = SalesRepRevenueHistoryCurrency.RoleType;

			var SalesRepRevenueHistorySalesRep = new RelationType(AppsDomain.Instance, new Guid("5dc09d22-d541-4088-a715-9fc65d24453f"), new Guid("2a2dccee-642d-4336-9447-8304da2f8c79"), new Guid("b4774899-e3cc-4990-9974-7638b9e60d9b"));
			SalesRepRevenueHistorySalesRep.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepRevenueHistorySalesRep.IsIndexed = true;

			SalesRepRevenueHistorySalesRep.AssociationType.ObjectType = this;

			SalesRepRevenueHistorySalesRep.RoleType.ObjectType = PersonClass.Instance;;
			SalesRepRevenueHistorySalesRep.RoleType.AssignedSingularName = "SalesRep";
			SalesRepRevenueHistorySalesRep.RoleType.AssignedPluralName = "SalesReps";
			this.Roles.SalesRep = SalesRepRevenueHistorySalesRep.RoleType;

			var SalesRepRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("a38139e6-a227-478b-8924-7d62b73c06d8"), new Guid("78157141-6c25-44ce-bd6d-f64f07ae2baa"), new Guid("3ec55f87-0dde-48d0-878c-834add5f2a9c"));
			SalesRepRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepRevenueHistoryInternalOrganisation.IsIndexed = true;

			SalesRepRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			SalesRepRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesRepRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			SalesRepRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = SalesRepRevenueHistoryInternalOrganisation.RoleType;

			var SalesRepRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("b3e41872-5488-4ca6-b3c1-3b1ff058b6bb"), new Guid("96ab29d6-1aca-48a3-b4d9-4a1123d50f01"), new Guid("13e42a5b-76e7-4c0a-a3bd-0fe8e42c52a0"));
			SalesRepRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepRevenueHistoryRevenue.AssociationType.ObjectType = this;

			SalesRepRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesRepRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			SalesRepRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			SalesRepRevenueHistoryRevenue.RoleType.Scale = 2;
			SalesRepRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = SalesRepRevenueHistoryRevenue.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesRepRevenueHistoryClass.Instance.ConcreteRoles.Currency = SalesRepRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			SalesRepRevenueHistoryClass.Instance.ConcreteRoles.SalesRep = SalesRepRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRep]; 

			SalesRepRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = SalesRepRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			SalesRepRevenueHistoryClass.Instance.ConcreteRoles.Revenue = SalesRepRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 


		}

		internal class RolesType
		{
			internal RoleType Currency;
			internal RoleType SalesRep;
			internal RoleType InternalOrganisation;
			internal RoleType Revenue;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType SalesRep;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EstimatedLaborCostClass : Class
	{
		public static EstimatedLaborCostClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EstimatedLaborCostClass() : base(AppsDomain.Instance, new Guid("2a84fcce-91f6-4d8b-9840-2ddd5f4b3dac"))
        {
			this.SingularName = "EstimatedLaborCost";
			this.PluralName = "EstimatedLaborCosts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3b832558-bc71-4e9e-898a-44683176d1c3"))
			{
				Subtype = Instance,
				Supertype = EstimatedProductCostInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Cost;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Organisation;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CostCenterClass : Class
	{
		public static CostCenterClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CostCenterClass() : base(AppsDomain.Instance, new Guid("2ab70094-5481-4ecc-ae15-cb2131fbc2f1"))
        {
			this.SingularName = "CostCenter";
			this.PluralName = "CostCenters";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("27a9cf8e-9c1b-46e4-93a8-6ff8355b5d03"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a2823df4-6e62-488a-b6a4-e515b43c46b0"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CostCenterDescription = new RelationType(AppsDomain.Instance, new Guid("2a2125fd-c715-4a0f-8c1a-c1207f02a494"), new Guid("9a61f338-9bf3-45cf-abc0-89eb1cecf9c0"), new Guid("f3ec0b58-3245-4b95-9f01-8a01f333750c"));
			CostCenterDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			CostCenterDescription.AssociationType.ObjectType = this;

			CostCenterDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CostCenterDescription.RoleType.AssignedSingularName = "Description";
			CostCenterDescription.RoleType.AssignedPluralName = "Descriptions";
			CostCenterDescription.RoleType.Size = 256;
			this.Roles.Description = CostCenterDescription.RoleType;

			var CostCenterInternalTransferGlAccount = new RelationType(AppsDomain.Instance, new Guid("76947134-0cae-4244-a8f3-fbb018930fd3"), new Guid("dfb847f1-46fe-4adc-94a1-c2d57d911348"), new Guid("7e795eb5-b79d-455f-919b-bdfed4d926c3"));
			CostCenterInternalTransferGlAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			CostCenterInternalTransferGlAccount.IsIndexed = true;

			CostCenterInternalTransferGlAccount.AssociationType.ObjectType = this;

			CostCenterInternalTransferGlAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			CostCenterInternalTransferGlAccount.RoleType.AssignedSingularName = "InternalTransferGlAccount";
			CostCenterInternalTransferGlAccount.RoleType.AssignedPluralName = "InternalTransferGlAccounts";
			this.Roles.InternalTransferGlAccount = CostCenterInternalTransferGlAccount.RoleType;

			var CostCenterCostCenterCategory = new RelationType(AppsDomain.Instance, new Guid("83a7ca20-8a73-4f8e-9729-731d25f70313"), new Guid("e4ccdfcc-790f-41d2-a225-0b46862aed11"), new Guid("28b04874-6757-4cf9-a290-ed35ecba9d14"));
			CostCenterCostCenterCategory.AssignedMultiplicity = Multiplicity.ManyToMany;
			CostCenterCostCenterCategory.IsIndexed = true;

			CostCenterCostCenterCategory.AssociationType.ObjectType = this;

			CostCenterCostCenterCategory.RoleType.ObjectType = CostCenterCategoryClass.Instance;;
			CostCenterCostCenterCategory.RoleType.AssignedSingularName = "CostCenterCategory";
			CostCenterCostCenterCategory.RoleType.AssignedPluralName = "CostCenterCategories";
			this.Roles.CostCenterCategory = CostCenterCostCenterCategory.RoleType;

			var CostCenterRedistributedCostsGlAccount = new RelationType(AppsDomain.Instance, new Guid("975003f1-203e-4cbe-97d2-7f6ccc95f75a"), new Guid("8487030b-f156-4a0b-bcf0-22c880ded449"), new Guid("341c226e-3da2-4976-9552-97e5b5796b1f"));
			CostCenterRedistributedCostsGlAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			CostCenterRedistributedCostsGlAccount.IsIndexed = true;

			CostCenterRedistributedCostsGlAccount.AssociationType.ObjectType = this;

			CostCenterRedistributedCostsGlAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			CostCenterRedistributedCostsGlAccount.RoleType.AssignedSingularName = "RedistributedCostsGlAccount";
			CostCenterRedistributedCostsGlAccount.RoleType.AssignedPluralName = "RedistributedCostsGlAccounts";
			this.Roles.RedistributedCostsGlAccount = CostCenterRedistributedCostsGlAccount.RoleType;

			var CostCenterName = new RelationType(AppsDomain.Instance, new Guid("a3168a59-38ea-4359-b258-c9cbd656ce35"), new Guid("1f62b015-938d-4c36-9d96-879b28c237e0"), new Guid("a401120c-42dd-4237-8afb-dcaa1e8e19f5"));
			CostCenterName.AssignedMultiplicity = Multiplicity.OneToOne;
			CostCenterName.AssociationType.ObjectType = this;

			CostCenterName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CostCenterName.RoleType.AssignedSingularName = "Name";
			CostCenterName.RoleType.AssignedPluralName = "Names";
			CostCenterName.RoleType.Size = 256;
			this.Roles.Name = CostCenterName.RoleType;

			var CostCenterActive = new RelationType(AppsDomain.Instance, new Guid("d7e01e38-d271-4c9c-847e-d26d9d4957af"), new Guid("89c07010-e93a-49c7-9a53-bb5588c38808"), new Guid("922adffb-ad26-445c-b431-b19e9ee79842"));
			CostCenterActive.AssignedMultiplicity = Multiplicity.OneToOne;
			CostCenterActive.AssociationType.ObjectType = this;

			CostCenterActive.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			CostCenterActive.RoleType.AssignedSingularName = "Active";
			CostCenterActive.RoleType.AssignedPluralName = "Actives";
			this.Roles.Active = CostCenterActive.RoleType;

			var CostCenterUseGlAccountOfBooking = new RelationType(AppsDomain.Instance, new Guid("e6332140-65e7-4475-aea1-a80424640696"), new Guid("acd62c99-b86d-426a-8d7c-baca21d30665"), new Guid("9cfa8fb1-fa68-4bb3-8440-5fe030a71c9d"));
			CostCenterUseGlAccountOfBooking.AssignedMultiplicity = Multiplicity.OneToOne;
			CostCenterUseGlAccountOfBooking.AssociationType.ObjectType = this;

			CostCenterUseGlAccountOfBooking.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			CostCenterUseGlAccountOfBooking.RoleType.AssignedSingularName = "UseGlAccountOfBooking";
			CostCenterUseGlAccountOfBooking.RoleType.AssignedPluralName = "UseGlAccountsOfBooking";
			this.Roles.UseGlAccountOfBooking = CostCenterUseGlAccountOfBooking.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CostCenterClass.Instance.ConcreteRoles.Description = CostCenterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			CostCenterClass.Instance.ConcreteRoles.InternalTransferGlAccount = CostCenterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalTransferGlAccount]; 

			CostCenterClass.Instance.ConcreteRoles.CostCenterCategory = CostCenterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CostCenterCategory]; 

			CostCenterClass.Instance.ConcreteRoles.RedistributedCostsGlAccount = CostCenterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RedistributedCostsGlAccount]; 

			CostCenterClass.Instance.ConcreteRoles.Name = CostCenterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			CostCenterClass.Instance.ConcreteRoles.Active = CostCenterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Active]; 

			CostCenterClass.Instance.ConcreteRoles.UseGlAccountOfBooking = CostCenterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UseGlAccountOfBooking]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType InternalTransferGlAccount;
			internal RoleType CostCenterCategory;
			internal RoleType RedistributedCostsGlAccount;
			internal RoleType Name;
			internal RoleType Active;
			internal RoleType UseGlAccountOfBooking;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType InternalTransferGlAccount;
			internal ConcreteRoleType CostCenterCategory;
			internal ConcreteRoleType RedistributedCostsGlAccount;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Active;
			internal ConcreteRoleType UseGlAccountOfBooking;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class SupplierRelationshipClass : Class
	{
		public static SupplierRelationshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SupplierRelationshipClass() : base(AppsDomain.Instance, new Guid("2b162153-f74d-4f97-b97c-48f04749b216"))
        {
			this.SingularName = "SupplierRelationship";
			this.PluralName = "SupplierRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5f05c923-68df-432e-b7b2-0f640c46b780"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SupplierRelationshipSupplier = new RelationType(AppsDomain.Instance, new Guid("1546c9f0-84ce-4795-bcea-634d6a78e867"), new Guid("56c5ff64-f67b-4830-a1e4-11661b0ff898"), new Guid("a0e757a2-d780-43a1-8b21-ab2fc4d75e7e"));
			SupplierRelationshipSupplier.AssignedMultiplicity = Multiplicity.ManyToOne;
			SupplierRelationshipSupplier.IsIndexed = true;

			SupplierRelationshipSupplier.AssociationType.ObjectType = this;

			SupplierRelationshipSupplier.RoleType.ObjectType = OrganisationClass.Instance;;
			SupplierRelationshipSupplier.RoleType.AssignedSingularName = "Supplier";
			SupplierRelationshipSupplier.RoleType.AssignedPluralName = "Suppliers";
			this.Roles.Supplier = SupplierRelationshipSupplier.RoleType;

			var SupplierRelationshipSubAccountNumber = new RelationType(AppsDomain.Instance, new Guid("17aa6ceb-0cbd-45fa-9f6d-848ce4a365b1"), new Guid("b5057208-9823-4a54-8394-6100d18dbe4a"), new Guid("6ddbeb86-39ea-4bd8-ae17-af4b9a1968ce"));
			SupplierRelationshipSubAccountNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			SupplierRelationshipSubAccountNumber.AssociationType.ObjectType = this;

			SupplierRelationshipSubAccountNumber.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SupplierRelationshipSubAccountNumber.RoleType.AssignedSingularName = "SubAccountNumber";
			SupplierRelationshipSubAccountNumber.RoleType.AssignedPluralName = "SubAccountNumbers";
			this.Roles.SubAccountNumber = SupplierRelationshipSubAccountNumber.RoleType;

			var SupplierRelationshipLastReminderDate = new RelationType(AppsDomain.Instance, new Guid("b12a68f6-0eaa-4a8a-a741-398a0be43f62"), new Guid("01adc720-91a4-47c6-9235-d21a3215ee6f"), new Guid("0363121b-d92e-4722-81dc-47032aae5440"));
			SupplierRelationshipLastReminderDate.AssignedMultiplicity = Multiplicity.OneToOne;
			SupplierRelationshipLastReminderDate.AssociationType.ObjectType = this;

			SupplierRelationshipLastReminderDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			SupplierRelationshipLastReminderDate.RoleType.AssignedSingularName = "LastReminderDate";
			SupplierRelationshipLastReminderDate.RoleType.AssignedPluralName = "LastReminderDates";
			this.Roles.LastReminderDate = SupplierRelationshipLastReminderDate.RoleType;

			var SupplierRelationshipDunningType = new RelationType(AppsDomain.Instance, new Guid("b1832c65-8b46-4060-bd2a-22c12ff01714"), new Guid("f320e24c-61b1-4820-a091-d8b63b21184d"), new Guid("4d7752a6-5bf6-420f-b4ed-fcf1cc5952e2"));
			SupplierRelationshipDunningType.AssignedMultiplicity = Multiplicity.ManyToOne;
			SupplierRelationshipDunningType.IsIndexed = true;

			SupplierRelationshipDunningType.AssociationType.ObjectType = this;

			SupplierRelationshipDunningType.RoleType.ObjectType = DunningTypeClass.Instance;;
			SupplierRelationshipDunningType.RoleType.AssignedSingularName = "DunningType";
			SupplierRelationshipDunningType.RoleType.AssignedPluralName = "DunningTypes";
			this.Roles.DunningType = SupplierRelationshipDunningType.RoleType;

			var SupplierRelationshipInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("e96a79e7-c161-4ed9-a5cc-8de4f67bf954"), new Guid("1a406db2-268a-4669-a629-e0e15fdbd826"), new Guid("aa91e2ad-89c0-411e-9271-56fbf20489f6"));
			SupplierRelationshipInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SupplierRelationshipInternalOrganisation.IsIndexed = true;

			SupplierRelationshipInternalOrganisation.AssociationType.ObjectType = this;

			SupplierRelationshipInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SupplierRelationshipInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			SupplierRelationshipInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = SupplierRelationshipInternalOrganisation.RoleType;

			var SupplierRelationshipBlockedForDunning = new RelationType(AppsDomain.Instance, new Guid("ee871786-8840-404d-9b41-932a9f59be13"), new Guid("5b98959d-5589-4958-a86f-4c9b465c1632"), new Guid("056ca61a-1ab4-4e53-8d5f-328ada5f3b11"));
			SupplierRelationshipBlockedForDunning.AssignedMultiplicity = Multiplicity.OneToOne;
			SupplierRelationshipBlockedForDunning.AssociationType.ObjectType = this;

			SupplierRelationshipBlockedForDunning.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			SupplierRelationshipBlockedForDunning.RoleType.AssignedSingularName = "BlockedForDunning";
			SupplierRelationshipBlockedForDunning.RoleType.AssignedPluralName = "BlockedsForDunning";
			this.Roles.BlockedForDunning = SupplierRelationshipBlockedForDunning.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SupplierRelationshipClass.Instance.ConcreteRoles.Supplier = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Supplier]; 

			SupplierRelationshipClass.Instance.ConcreteRoles.SubAccountNumber = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubAccountNumber]; 

			SupplierRelationshipClass.Instance.ConcreteRoles.LastReminderDate = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastReminderDate]; 

			SupplierRelationshipClass.Instance.ConcreteRoles.DunningType = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DunningType]; 

			SupplierRelationshipClass.Instance.ConcreteRoles.InternalOrganisation = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			SupplierRelationshipClass.Instance.ConcreteRoles.BlockedForDunning = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BlockedForDunning]; 


		}

		internal class RolesType
		{
			internal RoleType Supplier;
			internal RoleType SubAccountNumber;
			internal RoleType LastReminderDate;
			internal RoleType DunningType;
			internal RoleType InternalOrganisation;
			internal RoleType BlockedForDunning;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Supplier;
			internal ConcreteRoleType SubAccountNumber;
			internal ConcreteRoleType LastReminderDate;
			internal ConcreteRoleType DunningType;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType BlockedForDunning;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SkillRatingClass : Class
	{
		public static SkillRatingClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SkillRatingClass() : base(AppsDomain.Instance, new Guid("2b44d390-bdd5-43aa-91c4-25b1966c46fb"))
        {
			this.SingularName = "SkillRating";
			this.PluralName = "SkillRatings";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ea19e52a-ae82-413e-8091-c698ad14a825"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class EventRegistrationClass : Class
	{
		public static EventRegistrationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EventRegistrationClass() : base(AppsDomain.Instance, new Guid("2b5efcb9-54ba-4d59-833b-716d321cc7cb"))
        {
			this.SingularName = "EventRegistration";
			this.PluralName = "EventRegistrations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var EventRegistrationPerson = new RelationType(AppsDomain.Instance, new Guid("af4b8828-bea1-43e5-b109-9934311cc2df"), new Guid("bd962b63-dff5-4b09-bd30-ef11755a381e"), new Guid("dcfcbf03-1cac-4533-a3b7-a235f167645c"));
			EventRegistrationPerson.AssignedMultiplicity = Multiplicity.ManyToOne;
			EventRegistrationPerson.IsIndexed = true;

			EventRegistrationPerson.AssociationType.ObjectType = this;

			EventRegistrationPerson.RoleType.ObjectType = PersonClass.Instance;;
			EventRegistrationPerson.RoleType.AssignedSingularName = "Person";
			EventRegistrationPerson.RoleType.AssignedPluralName = "Persons";
			this.Roles.Person = EventRegistrationPerson.RoleType;

			var EventRegistrationEvent = new RelationType(AppsDomain.Instance, new Guid("ed542026-7020-43e3-ab72-c3f4dd991a4b"), new Guid("cba93e20-e78d-4c86-8b5b-2daa930fde35"), new Guid("b2c0c98f-5ed7-4329-bfcb-ab0f3e6e169c"));
			EventRegistrationEvent.AssignedMultiplicity = Multiplicity.ManyToOne;
			EventRegistrationEvent.IsIndexed = true;

			EventRegistrationEvent.AssociationType.ObjectType = this;

			EventRegistrationEvent.RoleType.ObjectType = EventClass.Instance;;
			EventRegistrationEvent.RoleType.AssignedSingularName = "Event";
			EventRegistrationEvent.RoleType.AssignedPluralName = "Events";
			this.Roles.Event = EventRegistrationEvent.RoleType;

			var EventRegistrationAllorsDateTime = new RelationType(AppsDomain.Instance, new Guid("f9805362-2bd2-46d4-b9b2-d38cd0a76f78"), new Guid("e2dcb678-d8ba-45ed-9f25-5a87aae2d18f"), new Guid("19f9c2a6-5e2c-4bfb-bc63-b13d998e92e3"));
			EventRegistrationAllorsDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			EventRegistrationAllorsDateTime.AssociationType.ObjectType = this;

			EventRegistrationAllorsDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			EventRegistrationAllorsDateTime.RoleType.AssignedSingularName = "AllorsDateTime";
			EventRegistrationAllorsDateTime.RoleType.AssignedPluralName = "AllorsDateTimes";
			this.Roles.AllorsDateTime = EventRegistrationAllorsDateTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EventRegistrationClass.Instance.ConcreteRoles.Person = EventRegistrationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Person]; 

			EventRegistrationClass.Instance.ConcreteRoles.Event = EventRegistrationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Event]; 

			EventRegistrationClass.Instance.ConcreteRoles.AllorsDateTime = EventRegistrationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AllorsDateTime]; 


		}

		internal class RolesType
		{
			internal RoleType Person;
			internal RoleType Event;
			internal RoleType AllorsDateTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Person;
			internal ConcreteRoleType Event;
			internal ConcreteRoleType AllorsDateTime;

		}
	}public partial class BuildingClass : Class
	{
		public static BuildingClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BuildingClass() : base(AppsDomain.Instance, new Guid("2ba5e05c-f1ab-4143-ae7e-4db7389ff34e"))
        {
			this.SingularName = "Building";
			this.PluralName = "Buildings";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c220f671-ba63-42ed-bb83-8587168e9ee7"))
			{
				Subtype = Instance,
				Supertype = FacilityInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType MadeUpOf;
			internal ConcreteRoleType SquareFootage;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType FacilityContactMechanism;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ServiceEntryBillingClass : Class
	{
		public static ServiceEntryBillingClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ServiceEntryBillingClass() : base(AppsDomain.Instance, new Guid("2be4075a-c7e3-4a38-a045-7910f85b3e46"))
        {
			this.SingularName = "ServiceEntryBilling";
			this.PluralName = "ServiceEntryBillings";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ServiceEntryBillingServiceEntry = new RelationType(AppsDomain.Instance, new Guid("2fb9d650-0a28-4a39-8427-8c12bc4a20a1"), new Guid("c91e3796-6b23-4aa7-992b-ac15da334eae"), new Guid("7ca6affa-7d4f-45bd-88e2-a0fa1cad4ad7"));
			ServiceEntryBillingServiceEntry.AssignedMultiplicity = Multiplicity.ManyToOne;
			ServiceEntryBillingServiceEntry.IsIndexed = true;

			ServiceEntryBillingServiceEntry.AssociationType.ObjectType = this;

			ServiceEntryBillingServiceEntry.RoleType.ObjectType = ServiceEntryInterface.Instance;;
			ServiceEntryBillingServiceEntry.RoleType.AssignedSingularName = "ServiceEntry";
			ServiceEntryBillingServiceEntry.RoleType.AssignedPluralName = "ServiceEntries";
			this.Roles.ServiceEntry = ServiceEntryBillingServiceEntry.RoleType;

			var ServiceEntryBillingInvoiceItem = new RelationType(AppsDomain.Instance, new Guid("a8c707fb-98c1-43b1-99a3-9464cb25ea5f"), new Guid("284bf54c-8305-4892-ad00-f4975e155522"), new Guid("570acec5-b62e-4abc-bb1d-000fb70bc2fe"));
			ServiceEntryBillingInvoiceItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			ServiceEntryBillingInvoiceItem.IsIndexed = true;

			ServiceEntryBillingInvoiceItem.AssociationType.ObjectType = this;

			ServiceEntryBillingInvoiceItem.RoleType.ObjectType = InvoiceItemInterface.Instance;;
			ServiceEntryBillingInvoiceItem.RoleType.AssignedSingularName = "InvoiceItem";
			ServiceEntryBillingInvoiceItem.RoleType.AssignedPluralName = "InvoiceItems";
			this.Roles.InvoiceItem = ServiceEntryBillingInvoiceItem.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ServiceEntryBillingClass.Instance.ConcreteRoles.ServiceEntry = ServiceEntryBillingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ServiceEntry]; 

			ServiceEntryBillingClass.Instance.ConcreteRoles.InvoiceItem = ServiceEntryBillingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceItem]; 


		}

		internal class RolesType
		{
			internal RoleType ServiceEntry;
			internal RoleType InvoiceItem;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ServiceEntry;
			internal ConcreteRoleType InvoiceItem;

		}
	}public partial class PurchaseShipmentClass : Class
	{
		public static PurchaseShipmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseShipmentClass() : base(AppsDomain.Instance, new Guid("2bf859c6-de64-476f-a437-5eb57a778262"))
        {
			this.SingularName = "PurchaseShipment";
			this.PluralName = "PurchaseShipments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("031e2bae-0ce0-4603-bd76-ca511322e057"))
			{
				Subtype = Instance,
				Supertype = ShipmentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseShipmentCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("400d42cd-bb10-406d-a448-9d9d53ccb5ca"), new Guid("9133d8c2-1988-42ef-a006-d02693e322e4"), new Guid("2f25f5a9-d1ef-45e3-8317-8bbcc65ff2ff"));
			PurchaseShipmentCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseShipmentCurrentObjectState.IsDerived = true;
			PurchaseShipmentCurrentObjectState.IsIndexed = true;

			PurchaseShipmentCurrentObjectState.AssociationType.ObjectType = this;

			PurchaseShipmentCurrentObjectState.RoleType.ObjectType = PurchaseShipmentObjectStateClass.Instance;;
			PurchaseShipmentCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			PurchaseShipmentCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = PurchaseShipmentCurrentObjectState.RoleType;

			var PurchaseShipmentFacility = new RelationType(AppsDomain.Instance, new Guid("40277d59-6ab8-40b0-acee-c95ba759e2c8"), new Guid("d7feb989-dd2d-4619-b079-8a059129f8ed"), new Guid("068d5263-18d7-40e4-80c1-4f9a8e88d10a"));
			PurchaseShipmentFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseShipmentFacility.IsIndexed = true;

			PurchaseShipmentFacility.AssociationType.ObjectType = this;

			PurchaseShipmentFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			PurchaseShipmentFacility.RoleType.AssignedSingularName = "Facility";
			PurchaseShipmentFacility.RoleType.AssignedPluralName = "Facilities";
			this.Roles.Facility = PurchaseShipmentFacility.RoleType;

			var PurchaseShipmentPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("63363873-1dba-4044-8793-0196fc58f6ab"), new Guid("184515ec-10fc-49f9-8822-6a53eb899700"), new Guid("a3a49f0c-243b-4656-97f5-66fd012874eb"));
			PurchaseShipmentPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseShipmentPreviousObjectState.IsDerived = true;
			PurchaseShipmentPreviousObjectState.IsIndexed = true;

			PurchaseShipmentPreviousObjectState.AssociationType.ObjectType = this;

			PurchaseShipmentPreviousObjectState.RoleType.ObjectType = PurchaseShipmentObjectStateClass.Instance;;
			PurchaseShipmentPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			PurchaseShipmentPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = PurchaseShipmentPreviousObjectState.RoleType;

			var PurchaseShipmentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("8be328c9-0688-469b-901d-c9c290b30e88"), new Guid("df4fe9a9-3043-44a6-a4da-96465e63ba07"), new Guid("3726d5dd-a927-48ac-83a5-04d5c2e46b85"));
			PurchaseShipmentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseShipmentShipmentStatus.IsDerived = true;
			PurchaseShipmentShipmentStatus.IsIndexed = true;

			PurchaseShipmentShipmentStatus.AssociationType.ObjectType = this;

			PurchaseShipmentShipmentStatus.RoleType.ObjectType = PurchaseShipmentStatusClass.Instance;;
			PurchaseShipmentShipmentStatus.RoleType.AssignedSingularName = "ShipmentStatus";
			PurchaseShipmentShipmentStatus.RoleType.AssignedPluralName = "ShipmentStatuses";
			this.Roles.ShipmentStatus = PurchaseShipmentShipmentStatus.RoleType;

			var PurchaseShipmentCurrentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("944c8d81-db22-469b-beb3-d31c045b5af0"), new Guid("e070f627-4b02-4f43-998b-5b4d8ccbfe80"), new Guid("9e7f1f5d-ed7f-43d8-bb16-45b7f9adc43e"));
			PurchaseShipmentCurrentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseShipmentCurrentShipmentStatus.IsDerived = true;
			PurchaseShipmentCurrentShipmentStatus.IsIndexed = true;

			PurchaseShipmentCurrentShipmentStatus.AssociationType.ObjectType = this;

			PurchaseShipmentCurrentShipmentStatus.RoleType.ObjectType = PurchaseShipmentStatusClass.Instance;;
			PurchaseShipmentCurrentShipmentStatus.RoleType.AssignedSingularName = "CurrentShipmentStatus";
			PurchaseShipmentCurrentShipmentStatus.RoleType.AssignedPluralName = "CurrentShipmentStatuses";
			this.Roles.CurrentShipmentStatus = PurchaseShipmentCurrentShipmentStatus.RoleType;

			var PurchaseShipmentPurchaseOrder = new RelationType(AppsDomain.Instance, new Guid("ef34543c-6194-4f27-87d7-a54285bc0a15"), new Guid("33b1069f-7be2-4f41-b502-8689256706d9"), new Guid("33dce90e-2a2a-482b-bee5-fcea55e59160"));
			PurchaseShipmentPurchaseOrder.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseShipmentPurchaseOrder.IsIndexed = true;

			PurchaseShipmentPurchaseOrder.AssociationType.ObjectType = this;

			PurchaseShipmentPurchaseOrder.RoleType.ObjectType = PurchaseOrderClass.Instance;;
			PurchaseShipmentPurchaseOrder.RoleType.AssignedSingularName = "PurchaseOrder";
			PurchaseShipmentPurchaseOrder.RoleType.AssignedPluralName = "PurchaseOrders";
			this.Roles.PurchaseOrder = PurchaseShipmentPurchaseOrder.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseShipmentClass.Instance.ConcreteRoles.CurrentObjectState = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.Facility = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.PreviousObjectState = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.ShipmentStatus = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentStatus]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.CurrentShipmentStatus = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentShipmentStatus]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.PurchaseOrder = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseOrder]; 


		}

		internal class RolesType
		{
			internal RoleType CurrentObjectState;
			internal RoleType Facility;
			internal RoleType PreviousObjectState;
			internal RoleType ShipmentStatus;
			internal RoleType CurrentShipmentStatus;
			internal RoleType PurchaseOrder;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType ShipmentStatus;
			internal ConcreteRoleType CurrentShipmentStatus;
			internal ConcreteRoleType PurchaseOrder;
			internal ConcreteRoleType ShipmentMethod;
			internal ConcreteRoleType BillToContactMechanism;
			internal ConcreteRoleType ShipmentPackage;
			internal ConcreteRoleType ShipmentNumber;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType BillToParty;
			internal ConcreteRoleType ShipToParty;
			internal ConcreteRoleType ShipmentItem;
			internal ConcreteRoleType BillFromInternalOrganisation;
			internal ConcreteRoleType ReceiverContactMechanism;
			internal ConcreteRoleType ShipToAddress;
			internal ConcreteRoleType EstimatedShipCost;
			internal ConcreteRoleType EstimatedShipDate;
			internal ConcreteRoleType LatestCancelDate;
			internal ConcreteRoleType Carrier;
			internal ConcreteRoleType InquireAboutContactMechanism;
			internal ConcreteRoleType EstimatedReadyDate;
			internal ConcreteRoleType ShipFromAddress;
			internal ConcreteRoleType BillFromContactMechanism;
			internal ConcreteRoleType HandlingInstruction;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType ShipFromParty;
			internal ConcreteRoleType ShipmentRouteSegment;
			internal ConcreteRoleType EstimatedArrivalDate;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class UnitOfMeasureConversionClass : Class
	{
		public static UnitOfMeasureConversionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal UnitOfMeasureConversionClass() : base(AppsDomain.Instance, new Guid("2e216901-eab9-42e3-9e49-7fe8e88291d3"))
        {
			this.SingularName = "UnitOfMeasureConversion";
			this.PluralName = "UnitOfMeasureConversions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ebefce63-c257-4683-817e-dc2a4d2ae1a0"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var UnitOfMeasureConversionToUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("3ae94702-ee60-4057-a649-f655ff4e2865"), new Guid("1ab7d188-af19-4742-a0e6-11043b666bd4"), new Guid("5372ec1c-9b57-4ed5-b665-cdad8a13d933"));
			UnitOfMeasureConversionToUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			UnitOfMeasureConversionToUnitOfMeasure.IsIndexed = true;

			UnitOfMeasureConversionToUnitOfMeasure.AssociationType.ObjectType = this;

			UnitOfMeasureConversionToUnitOfMeasure.RoleType.ObjectType = IUnitOfMeasureInterface.Instance;;
			UnitOfMeasureConversionToUnitOfMeasure.RoleType.AssignedSingularName = "ToUnitOfMeasure";
			UnitOfMeasureConversionToUnitOfMeasure.RoleType.AssignedPluralName = "ToUnitOfMeasures";
			this.Roles.ToUnitOfMeasure = UnitOfMeasureConversionToUnitOfMeasure.RoleType;

			var UnitOfMeasureConversionStartDate = new RelationType(AppsDomain.Instance, new Guid("5d7ed801-4a2e-4abc-a32d-d869210132af"), new Guid("a3467a5f-8c7d-453a-9a33-18d742f20d06"), new Guid("4b8a465d-9334-427f-b799-d08b7c84200a"));
			UnitOfMeasureConversionStartDate.AssignedMultiplicity = Multiplicity.OneToOne;
			UnitOfMeasureConversionStartDate.AssociationType.ObjectType = this;

			UnitOfMeasureConversionStartDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			UnitOfMeasureConversionStartDate.RoleType.AssignedSingularName = "StartDate";
			UnitOfMeasureConversionStartDate.RoleType.AssignedPluralName = "StartDates";
			this.Roles.StartDate = UnitOfMeasureConversionStartDate.RoleType;

			var UnitOfMeasureConversionConversionFactor = new RelationType(AppsDomain.Instance, new Guid("835118da-148a-4c42-ab07-75b213a8e1f7"), new Guid("f9f78e34-6fe1-4863-b831-cabe46cbc764"), new Guid("c06dd0a5-dabe-46fa-97f7-62f6f4b47983"));
			UnitOfMeasureConversionConversionFactor.AssignedMultiplicity = Multiplicity.OneToOne;
			UnitOfMeasureConversionConversionFactor.AssociationType.ObjectType = this;

			UnitOfMeasureConversionConversionFactor.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			UnitOfMeasureConversionConversionFactor.RoleType.AssignedSingularName = "ConversionFactor";
			UnitOfMeasureConversionConversionFactor.RoleType.AssignedPluralName = "ConversionFactors";
			UnitOfMeasureConversionConversionFactor.RoleType.Scale = 9;
			UnitOfMeasureConversionConversionFactor.RoleType.Precision = 19;
			this.Roles.ConversionFactor = UnitOfMeasureConversionConversionFactor.RoleType;


		}

		internal override void SetRelationTypes()
		{
			UnitOfMeasureConversionClass.Instance.ConcreteRoles.ToUnitOfMeasure = UnitOfMeasureConversionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToUnitOfMeasure]; 

			UnitOfMeasureConversionClass.Instance.ConcreteRoles.StartDate = UnitOfMeasureConversionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDate]; 

			UnitOfMeasureConversionClass.Instance.ConcreteRoles.ConversionFactor = UnitOfMeasureConversionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ConversionFactor]; 


		}

		internal class RolesType
		{
			internal RoleType ToUnitOfMeasure;
			internal RoleType StartDate;
			internal RoleType ConversionFactor;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ToUnitOfMeasure;
			internal ConcreteRoleType StartDate;
			internal ConcreteRoleType ConversionFactor;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class VatRateUsageClass : Class
	{
		public static VatRateUsageClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VatRateUsageClass() : base(AppsDomain.Instance, new Guid("2e245d61-7739-4dfe-b108-7c9f0f4aed17"))
        {
			this.SingularName = "VatRateUsage";
			this.PluralName = "VatRateUsages";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5d369ee9-81f9-4e79-844a-26c59633ff05"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ProjectClass : Class
	{
		public static ProjectClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProjectClass() : base(AppsDomain.Instance, new Guid("2e2c567e-4c1f-4729-97a1-5ae203be936c"))
        {
			this.SingularName = "Project";
			this.PluralName = "Projects";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("6dd1e720-68f6-419f-8c0c-d1835dd2f571"))
			{
				Subtype = Instance,
				Supertype = WorkEffortInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentWorkEffortStatus;
			internal ConcreteRoleType Precendency;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeliverableProduced;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType InventoryItemNeeded;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType ActualCompletion;
			internal ConcreteRoleType OrderItemFulfillment;
			internal ConcreteRoleType WorkEffortStatus;
			internal ConcreteRoleType WorkEffortType;
			internal ConcreteRoleType InventoryItemProduced;
			internal ConcreteRoleType WorkEffortPurpose;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType RequirementFulfillment;
			internal ConcreteRoleType SpecialTerms;
			internal ConcreteRoleType Concurrency;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ActualHours;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ScheduledCompletion;
			internal ConcreteRoleType EstimatedHours;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PaymentBudgetAllocationClass : Class
	{
		public static PaymentBudgetAllocationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PaymentBudgetAllocationClass() : base(AppsDomain.Instance, new Guid("2e588028-5de2-411c-ab43-b406ca735d5b"))
        {
			this.SingularName = "PaymentBudgetAllocation";
			this.PluralName = "PaymentBudgetAllocations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ab0678a9-3b61-4a5c-a954-c860a60fe2cb"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PaymentBudgetAllocationPayment = new RelationType(AppsDomain.Instance, new Guid("28f23032-b81c-4dbb-aa6c-24740ae3bb26"), new Guid("451ff770-7f33-4251-b78b-907ad95a9c38"), new Guid("1b82d64e-aeff-4150-b388-1144bef8b2ee"));
			PaymentBudgetAllocationPayment.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentBudgetAllocationPayment.IsIndexed = true;

			PaymentBudgetAllocationPayment.AssociationType.ObjectType = this;

			PaymentBudgetAllocationPayment.RoleType.ObjectType = PaymentInterface.Instance;;
			PaymentBudgetAllocationPayment.RoleType.AssignedSingularName = "Payment";
			PaymentBudgetAllocationPayment.RoleType.AssignedPluralName = "Payments";
			this.Roles.Payment = PaymentBudgetAllocationPayment.RoleType;

			var PaymentBudgetAllocationBudgetItem = new RelationType(AppsDomain.Instance, new Guid("3245613c-71d3-4a5e-a687-6f5ac306d9df"), new Guid("3cf6b4ce-56df-44c9-9348-3a419a226edc"), new Guid("e672774d-e11d-46df-9387-ef9f52315148"));
			PaymentBudgetAllocationBudgetItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentBudgetAllocationBudgetItem.IsIndexed = true;

			PaymentBudgetAllocationBudgetItem.AssociationType.ObjectType = this;

			PaymentBudgetAllocationBudgetItem.RoleType.ObjectType = BudgetItemClass.Instance;;
			PaymentBudgetAllocationBudgetItem.RoleType.AssignedSingularName = "BudgetItem";
			PaymentBudgetAllocationBudgetItem.RoleType.AssignedPluralName = "BudgetItems";
			this.Roles.BudgetItem = PaymentBudgetAllocationBudgetItem.RoleType;

			var PaymentBudgetAllocationAmount = new RelationType(AppsDomain.Instance, new Guid("a982dfa7-4c81-41d6-93ec-ea380a526ad0"), new Guid("cb680a9c-ba32-4ceb-b9fb-127041e509e5"), new Guid("69f570b8-7f72-4ef5-934a-f7e7d0b0465d"));
			PaymentBudgetAllocationAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentBudgetAllocationAmount.AssociationType.ObjectType = this;

			PaymentBudgetAllocationAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PaymentBudgetAllocationAmount.RoleType.AssignedSingularName = "Amount";
			PaymentBudgetAllocationAmount.RoleType.AssignedPluralName = "Amounts";
			PaymentBudgetAllocationAmount.RoleType.Scale = 2;
			PaymentBudgetAllocationAmount.RoleType.Precision = 19;
			this.Roles.Amount = PaymentBudgetAllocationAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PaymentBudgetAllocationClass.Instance.ConcreteRoles.Payment = PaymentBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Payment]; 

			PaymentBudgetAllocationClass.Instance.ConcreteRoles.BudgetItem = PaymentBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetItem]; 

			PaymentBudgetAllocationClass.Instance.ConcreteRoles.Amount = PaymentBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 


		}

		internal class RolesType
		{
			internal RoleType Payment;
			internal RoleType BudgetItem;
			internal RoleType Amount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Payment;
			internal ConcreteRoleType BudgetItem;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class HobbyClass : Class
	{
		public static HobbyClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal HobbyClass() : base(AppsDomain.Instance, new Guid("2f18f79f-dd13-4e89-b3fa-95d789dd383e"))
        {
			this.SingularName = "Hobby";
			this.PluralName = "Hobbies";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("32deba3b-37a5-4937-828d-258af57becb6"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ProductRevenueHistoryClass : Class
	{
		public static ProductRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("2fb4693c-d8c8-49fb-9d99-8ae1a9f43683"))
        {
			this.SingularName = "ProductRevenueHistory";
			this.PluralName = "ProductRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("177095e7-97f7-4e91-8111-ae5920c9361f"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("c5df5a04-12b0-4b86-87c9-6318bbb05078"), new Guid("53287e78-440a-4789-a706-a456e5267f0c"), new Guid("94f656f9-e6d0-4fae-b7ee-f6ef5378fd83"));
			ProductRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductRevenueHistoryInternalOrganisation.IsIndexed = true;

			ProductRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			ProductRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			ProductRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			ProductRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = ProductRevenueHistoryInternalOrganisation.RoleType;

			var ProductRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("d7d60054-4b62-428f-a223-0b0852841953"), new Guid("dd7f995b-7262-466a-b669-789dd5c3b774"), new Guid("cf211c4a-03fd-461b-b0b9-787d7b245ca2"));
			ProductRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductRevenueHistoryRevenue.AssociationType.ObjectType = this;

			ProductRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ProductRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			ProductRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			ProductRevenueHistoryRevenue.RoleType.Scale = 2;
			ProductRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = ProductRevenueHistoryRevenue.RoleType;

			var ProductRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("e967f657-6092-473f-9772-552b3372f847"), new Guid("7af0962e-9d48-4b9f-aed4-80f16c2592c8"), new Guid("678a15bf-f006-439a-8b96-dc8dc6fdd64d"));
			ProductRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductRevenueHistoryCurrency.IsIndexed = true;

			ProductRevenueHistoryCurrency.AssociationType.ObjectType = this;

			ProductRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			ProductRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			ProductRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = ProductRevenueHistoryCurrency.RoleType;

			var ProductRevenueHistoryProduct = new RelationType(AppsDomain.Instance, new Guid("ef4c7d18-192b-4880-beb3-645911d6b21a"), new Guid("b28db2ad-2f30-41b4-8a33-ba1d888c8e2e"), new Guid("af53ba3e-d2cb-4f2c-810b-a3f4c32dbc3f"));
			ProductRevenueHistoryProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductRevenueHistoryProduct.IsIndexed = true;

			ProductRevenueHistoryProduct.AssociationType.ObjectType = this;

			ProductRevenueHistoryProduct.RoleType.ObjectType = ProductInterface.Instance;;
			ProductRevenueHistoryProduct.RoleType.AssignedSingularName = "Product";
			ProductRevenueHistoryProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = ProductRevenueHistoryProduct.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = ProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			ProductRevenueHistoryClass.Instance.ConcreteRoles.Revenue = ProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			ProductRevenueHistoryClass.Instance.ConcreteRoles.Currency = ProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			ProductRevenueHistoryClass.Instance.ConcreteRoles.Product = ProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 


		}

		internal class RolesType
		{
			internal RoleType InternalOrganisation;
			internal RoleType Revenue;
			internal RoleType Currency;
			internal RoleType Product;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OrderRequirementCommitmentClass : Class
	{
		public static OrderRequirementCommitmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrderRequirementCommitmentClass() : base(AppsDomain.Instance, new Guid("2fcdaf95-c3ec-4da2-8e7e-09c55741082f"))
        {
			this.SingularName = "OrderRequirementCommitment";
			this.PluralName = "OrderRequirementCommitments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1a03b824-cbb7-439a-bbe8-7acace650db7"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrderRequirementCommitmentQuantity = new RelationType(AppsDomain.Instance, new Guid("a03b08be-82d9-4678-803a-0463c658d4c4"), new Guid("2ed48b3d-1c77-49f9-a970-836d066cc00f"), new Guid("4f5be1db-964c-4c09-86ec-5b7bd06a4008"));
			OrderRequirementCommitmentQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderRequirementCommitmentQuantity.AssociationType.ObjectType = this;

			OrderRequirementCommitmentQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			OrderRequirementCommitmentQuantity.RoleType.AssignedSingularName = "Quantity";
			OrderRequirementCommitmentQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = OrderRequirementCommitmentQuantity.RoleType;

			var OrderRequirementCommitmentOrderItem = new RelationType(AppsDomain.Instance, new Guid("a9020377-d721-4329-868d-33ab63aed074"), new Guid("5654ce5d-3453-404c-86cb-dfc1cc175345"), new Guid("85a19592-2e58-4d45-8463-2119658fa0b7"));
			OrderRequirementCommitmentOrderItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderRequirementCommitmentOrderItem.IsIndexed = true;

			OrderRequirementCommitmentOrderItem.AssociationType.ObjectType = this;

			OrderRequirementCommitmentOrderItem.RoleType.ObjectType = OrderItemInterface.Instance;;
			OrderRequirementCommitmentOrderItem.RoleType.AssignedSingularName = "OrderItem";
			OrderRequirementCommitmentOrderItem.RoleType.AssignedPluralName = "OrderItems";
			this.Roles.OrderItem = OrderRequirementCommitmentOrderItem.RoleType;

			var OrderRequirementCommitmentRequirement = new RelationType(AppsDomain.Instance, new Guid("e36224d2-cc6f-43b0-82e1-e300710f6407"), new Guid("5f56109c-0578-4db7-9c8a-de9617d374d8"), new Guid("2f69978e-bd92-48b2-a711-58b4cf728d96"));
			OrderRequirementCommitmentRequirement.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderRequirementCommitmentRequirement.IsIndexed = true;

			OrderRequirementCommitmentRequirement.AssociationType.ObjectType = this;

			OrderRequirementCommitmentRequirement.RoleType.ObjectType = RequirementInterface.Instance;;
			OrderRequirementCommitmentRequirement.RoleType.AssignedSingularName = "Requirement";
			OrderRequirementCommitmentRequirement.RoleType.AssignedPluralName = "Requirements";
			this.Roles.Requirement = OrderRequirementCommitmentRequirement.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrderRequirementCommitmentClass.Instance.ConcreteRoles.Quantity = OrderRequirementCommitmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			OrderRequirementCommitmentClass.Instance.ConcreteRoles.OrderItem = OrderRequirementCommitmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItem]; 

			OrderRequirementCommitmentClass.Instance.ConcreteRoles.Requirement = OrderRequirementCommitmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Requirement]; 


		}

		internal class RolesType
		{
			internal RoleType Quantity;
			internal RoleType OrderItem;
			internal RoleType Requirement;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType OrderItem;
			internal ConcreteRoleType Requirement;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OrganisationRollUpClass : Class
	{
		public static OrganisationRollUpClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrganisationRollUpClass() : base(AppsDomain.Instance, new Guid("316fc0d3-2dce-43aa-9b38-a60f964d5395"))
        {
			this.SingularName = "OrganisationRollUp";
			this.PluralName = "OrganisationRollUps";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a661f08f-1a37-4bda-b3f8-de0c47861cad"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrganisationRollUpParent = new RelationType(AppsDomain.Instance, new Guid("1ed8bd41-7552-44bd-bcb0-f24c47cf84ca"), new Guid("924282be-62b0-4a94-814e-04ef94bbeaac"), new Guid("09c50cf9-87b3-4280-80d3-b793b392d168"));
			OrganisationRollUpParent.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationRollUpParent.IsIndexed = true;

			OrganisationRollUpParent.AssociationType.ObjectType = this;

			OrganisationRollUpParent.RoleType.ObjectType = OrganisationClass.Instance;;
			OrganisationRollUpParent.RoleType.AssignedSingularName = "Parent";
			OrganisationRollUpParent.RoleType.AssignedPluralName = "Parents";
			this.Roles.Parent = OrganisationRollUpParent.RoleType;

			var OrganisationRollUpRollupKind = new RelationType(AppsDomain.Instance, new Guid("4301bb17-43b6-4bf3-a874-7441dd419dd0"), new Guid("5b6d83a4-a7f5-4097-bc9b-7ba91e3b96ee"), new Guid("269ea202-bffb-42ff-a497-4a2fa1afbaad"));
			OrganisationRollUpRollupKind.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationRollUpRollupKind.IsIndexed = true;

			OrganisationRollUpRollupKind.AssociationType.ObjectType = this;

			OrganisationRollUpRollupKind.RoleType.ObjectType = OrganisationUnitClass.Instance;;
			OrganisationRollUpRollupKind.RoleType.AssignedSingularName = "RollupKind";
			OrganisationRollUpRollupKind.RoleType.AssignedPluralName = "RollupKinds";
			this.Roles.RollupKind = OrganisationRollUpRollupKind.RoleType;

			var OrganisationRollUpChild = new RelationType(AppsDomain.Instance, new Guid("92ebf310-72ea-468b-a880-7268b48df41a"), new Guid("71b8ea7b-5316-42df-adc0-2aded71c9eaf"), new Guid("e005418e-9180-4146-b55a-81ff9fb06078"));
			OrganisationRollUpChild.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationRollUpChild.IsIndexed = true;

			OrganisationRollUpChild.AssociationType.ObjectType = this;

			OrganisationRollUpChild.RoleType.ObjectType = OrganisationClass.Instance;;
			OrganisationRollUpChild.RoleType.AssignedSingularName = "Child";
			OrganisationRollUpChild.RoleType.AssignedPluralName = "Children";
			this.Roles.Child = OrganisationRollUpChild.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrganisationRollUpClass.Instance.ConcreteRoles.Parent = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Parent]; 

			OrganisationRollUpClass.Instance.ConcreteRoles.RollupKind = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RollupKind]; 

			OrganisationRollUpClass.Instance.ConcreteRoles.Child = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 


		}

		internal class RolesType
		{
			internal RoleType Parent;
			internal RoleType RollupKind;
			internal RoleType Child;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Parent;
			internal ConcreteRoleType RollupKind;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RequestInterface: Interface
	{
		public static RequestInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal RequestInterface() : base(AppsDomain.Instance, new Guid("321a6047-2233-4bec-a1b1-9b965c0099e5"))
        {
			this.SingularName = "Request";
			this.PluralName = "Requests";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3ce07bc3-5a82-4993-b0e0-ef6833e8cabd"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("b0313c57-0749-473a-b5d0-ddf43e30529b"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var RequestDescription = new RelationType(AppsDomain.Instance, new Guid("1bb3a4b8-224a-47ab-b05b-c0c8a87ec09c"), new Guid("57109e48-b116-4ea5-b636-73816c0dda68"), new Guid("d63a2e09-95e1-4c90-83a1-a5366a3d5ca3"));
			RequestDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			RequestDescription.AssociationType.ObjectType = this;

			RequestDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			RequestDescription.RoleType.AssignedSingularName = "Description";
			RequestDescription.RoleType.AssignedPluralName = "Descriptions";
			RequestDescription.RoleType.Size = 256;
			this.Roles.Description = RequestDescription.RoleType;

			var RequestRequiredResponseDate = new RelationType(AppsDomain.Instance, new Guid("208f711f-5d9d-4dc3-89ad-b1583ad06582"), new Guid("d91ef645-f5ef-4f09-9d6b-c023d02978f5"), new Guid("c1467dbc-9b64-49a0-8715-90ad277b02c9"));
			RequestRequiredResponseDate.AssignedMultiplicity = Multiplicity.OneToOne;
			RequestRequiredResponseDate.AssociationType.ObjectType = this;

			RequestRequiredResponseDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			RequestRequiredResponseDate.RoleType.AssignedSingularName = "RequiredResponseDate";
			RequestRequiredResponseDate.RoleType.AssignedPluralName = "RequiredResponseDates";
			this.Roles.RequiredResponseDate = RequestRequiredResponseDate.RoleType;

			var RequestRequestItem = new RelationType(AppsDomain.Instance, new Guid("25332874-3ec6-41d8-ac6a-77dd4328e503"), new Guid("acae3045-3612-4cac-9994-ca81d350da74"), new Guid("576e5797-b3d3-41ab-a788-2b3eeba36f18"));
			RequestRequestItem.AssignedMultiplicity = Multiplicity.OneToMany;
			RequestRequestItem.IsIndexed = true;

			RequestRequestItem.AssociationType.ObjectType = this;

			RequestRequestItem.RoleType.ObjectType = RequestItemClass.Instance;;
			RequestRequestItem.RoleType.AssignedSingularName = "RequestItem";
			RequestRequestItem.RoleType.AssignedPluralName = "RequestItems";
			this.Roles.RequestItem = RequestRequestItem.RoleType;

			var RequestRequestNumber = new RelationType(AppsDomain.Instance, new Guid("8ac90ec6-9d3e-45fe-aaba-27d0c1c058a1"), new Guid("438f6e6a-292b-4579-bf87-7478c48b9159"), new Guid("c16a1509-cfd6-4f9d-87ce-4b903365b9e5"));
			RequestRequestNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			RequestRequestNumber.AssociationType.ObjectType = this;

			RequestRequestNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			RequestRequestNumber.RoleType.AssignedSingularName = "RequestNumber";
			RequestRequestNumber.RoleType.AssignedPluralName = "RequestNumbers";
			RequestRequestNumber.RoleType.Size = 256;
			this.Roles.RequestNumber = RequestRequestNumber.RoleType;

			var RequestRespondingParty = new RelationType(AppsDomain.Instance, new Guid("c3389cec-ee8e-45e2-a1eb-01c9a87b2df0"), new Guid("b5aaad5b-568c-405d-9018-3ff0fcde7dd2"), new Guid("934585ce-6dc2-46cd-a227-24a1cb85fa60"));
			RequestRespondingParty.AssignedMultiplicity = Multiplicity.ManyToMany;
			RequestRespondingParty.IsIndexed = true;

			RequestRespondingParty.AssociationType.ObjectType = this;

			RequestRespondingParty.RoleType.ObjectType = RespondingPartyClass.Instance;;
			RequestRespondingParty.RoleType.AssignedSingularName = "RespondingParty";
			RequestRespondingParty.RoleType.AssignedPluralName = "RespondingParties";
			this.Roles.RespondingParty = RequestRespondingParty.RoleType;

			var RequestOriginator = new RelationType(AppsDomain.Instance, new Guid("f1a50d9d-2e79-45ac-8f23-8f38fab985c1"), new Guid("fe8fd88b-8b7d-4998-bf59-56b4e8d44571"), new Guid("2e871e31-a702-4955-8922-ed49a41d5ef1"));
			RequestOriginator.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequestOriginator.IsIndexed = true;

			RequestOriginator.AssociationType.ObjectType = this;

			RequestOriginator.RoleType.ObjectType = PartyInterface.Instance;;
			RequestOriginator.RoleType.AssignedSingularName = "Originator";
			RequestOriginator.RoleType.AssignedPluralName = "Originators";
			this.Roles.Originator = RequestOriginator.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RequestForProposalClass.Instance.ConcreteRoles.Description = RequestForProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			RequestForQuoteClass.Instance.ConcreteRoles.Description = RequestForQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			RequestForInformationClass.Instance.ConcreteRoles.Description = RequestForInformationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			RequestForProposalClass.Instance.ConcreteRoles.RequiredResponseDate = RequestForProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredResponseDate]; 
			RequestForQuoteClass.Instance.ConcreteRoles.RequiredResponseDate = RequestForQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredResponseDate]; 
			RequestForInformationClass.Instance.ConcreteRoles.RequiredResponseDate = RequestForInformationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredResponseDate]; 

			RequestForProposalClass.Instance.ConcreteRoles.RequestItem = RequestForProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequestItem]; 
			RequestForQuoteClass.Instance.ConcreteRoles.RequestItem = RequestForQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequestItem]; 
			RequestForInformationClass.Instance.ConcreteRoles.RequestItem = RequestForInformationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequestItem]; 

			RequestForProposalClass.Instance.ConcreteRoles.RequestNumber = RequestForProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequestNumber]; 
			RequestForQuoteClass.Instance.ConcreteRoles.RequestNumber = RequestForQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequestNumber]; 
			RequestForInformationClass.Instance.ConcreteRoles.RequestNumber = RequestForInformationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequestNumber]; 

			RequestForProposalClass.Instance.ConcreteRoles.RespondingParty = RequestForProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RespondingParty]; 
			RequestForQuoteClass.Instance.ConcreteRoles.RespondingParty = RequestForQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RespondingParty]; 
			RequestForInformationClass.Instance.ConcreteRoles.RespondingParty = RequestForInformationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RespondingParty]; 

			RequestForProposalClass.Instance.ConcreteRoles.Originator = RequestForProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 
			RequestForQuoteClass.Instance.ConcreteRoles.Originator = RequestForQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 
			RequestForInformationClass.Instance.ConcreteRoles.Originator = RequestForInformationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType RequiredResponseDate;
			internal RoleType RequestItem;
			internal RoleType RequestNumber;
			internal RoleType RespondingParty;
			internal RoleType Originator;

		}
	}public partial class AccountingTransactionTypeClass : Class
	{
		public static AccountingTransactionTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AccountingTransactionTypeClass() : base(AppsDomain.Instance, new Guid("3277910f-c4ee-40b6-8028-21f879e8da04"))
        {
			this.SingularName = "AccountingTransactionType";
			this.PluralName = "AccountingTransactionTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ff2fffb1-69c8-4208-8c23-4d968e670a8f"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class RevenueValueBreakClass : Class
	{
		public static RevenueValueBreakClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RevenueValueBreakClass() : base(AppsDomain.Instance, new Guid("32f8ea23-5ef9-4d2c-86d9-b6f67529c05d"))
        {
			this.SingularName = "RevenueValueBreak";
			this.PluralName = "RevenueValueBreaks";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("34f457f1-b219-41e1-9f5e-4c419c91cb7e"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var RevenueValueBreakProductCategory = new RelationType(AppsDomain.Instance, new Guid("03baba9a-c9ef-49d0-8fc8-fbdc4bfec949"), new Guid("c2746ebd-cdd4-4e22-a9fb-d8c4fbcc86da"), new Guid("cec9b76a-7ab9-4c47-a8a8-635ccd374fb0"));
			RevenueValueBreakProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			RevenueValueBreakProductCategory.IsIndexed = true;

			RevenueValueBreakProductCategory.AssociationType.ObjectType = this;

			RevenueValueBreakProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			this.Roles.ProductCategory = RevenueValueBreakProductCategory.RoleType;

			var RevenueValueBreakThroughAmount = new RelationType(AppsDomain.Instance, new Guid("96391ee1-5ba2-48db-95c9-cec6e73758b7"), new Guid("846a94f9-72cd-48a7-be94-9e8f146e245a"), new Guid("8ea60dde-6149-4389-bb94-b94e7bcc81b2"));
			RevenueValueBreakThroughAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			RevenueValueBreakThroughAmount.AssociationType.ObjectType = this;

			RevenueValueBreakThroughAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			RevenueValueBreakThroughAmount.RoleType.AssignedSingularName = "ThroughAmount";
			RevenueValueBreakThroughAmount.RoleType.AssignedPluralName = "ThroughAmounts";
			RevenueValueBreakThroughAmount.RoleType.Scale = 2;
			RevenueValueBreakThroughAmount.RoleType.Precision = 19;
			this.Roles.ThroughAmount = RevenueValueBreakThroughAmount.RoleType;

			var RevenueValueBreakFromAmount = new RelationType(AppsDomain.Instance, new Guid("cf544df2-3ccb-42b5-b009-c355fcf88ed6"), new Guid("dbdb3b16-701c-4f45-9d38-6b3e21f66ab3"), new Guid("44217cbb-1f44-4c04-bb66-e8bf597df3f6"));
			RevenueValueBreakFromAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			RevenueValueBreakFromAmount.AssociationType.ObjectType = this;

			RevenueValueBreakFromAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			RevenueValueBreakFromAmount.RoleType.AssignedSingularName = "FromAmount";
			RevenueValueBreakFromAmount.RoleType.AssignedPluralName = "FromAmounts";
			RevenueValueBreakFromAmount.RoleType.Scale = 2;
			RevenueValueBreakFromAmount.RoleType.Precision = 19;
			this.Roles.FromAmount = RevenueValueBreakFromAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RevenueValueBreakClass.Instance.ConcreteRoles.ProductCategory = RevenueValueBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			RevenueValueBreakClass.Instance.ConcreteRoles.ThroughAmount = RevenueValueBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughAmount]; 

			RevenueValueBreakClass.Instance.ConcreteRoles.FromAmount = RevenueValueBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromAmount]; 


		}

		internal class RolesType
		{
			internal RoleType ProductCategory;
			internal RoleType ThroughAmount;
			internal RoleType FromAmount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType ThroughAmount;
			internal ConcreteRoleType FromAmount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ActivityClass : Class
	{
		public static ActivityClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ActivityClass() : base(AppsDomain.Instance, new Guid("339a58af-4939-4eee-8028-0fd18119ec34"))
        {
			this.SingularName = "Activity";
			this.PluralName = "Activities";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b19b9613-0bc5-4b88-957e-cc7e14de2166"))
			{
				Subtype = Instance,
				Supertype = WorkEffortInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentWorkEffortStatus;
			internal ConcreteRoleType Precendency;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeliverableProduced;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType InventoryItemNeeded;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType ActualCompletion;
			internal ConcreteRoleType OrderItemFulfillment;
			internal ConcreteRoleType WorkEffortStatus;
			internal ConcreteRoleType WorkEffortType;
			internal ConcreteRoleType InventoryItemProduced;
			internal ConcreteRoleType WorkEffortPurpose;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType RequirementFulfillment;
			internal ConcreteRoleType SpecialTerms;
			internal ConcreteRoleType Concurrency;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ActualHours;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ScheduledCompletion;
			internal ConcreteRoleType EstimatedHours;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class WorkEffortAssignmentClass : Class
	{
		public static WorkEffortAssignmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortAssignmentClass() : base(AppsDomain.Instance, new Guid("33e9355b-b3db-43e0-a250-8ebc576e6221"))
        {
			this.SingularName = "WorkEffortAssignment";
			this.PluralName = "WorkEffortAssignments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a3608939-4fb3-435b-81e2-96e14cf8ded3"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("d6b8db6e-f84c-43f3-a9b9-76c4fac83975"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("d9e7cf66-efa6-43cd-befc-52f8a622dcd5"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortAssignmentProfessional = new RelationType(AppsDomain.Instance, new Guid("54bbdb5d-74b9-4ac7-b638-b1ef4a210b6e"), new Guid("91713efa-721d-43b7-99dd-ec7681456781"), new Guid("dafa5322-4905-40fa-ae14-ae5ee80f0f1c"));
			WorkEffortAssignmentProfessional.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortAssignmentProfessional.IsIndexed = true;

			WorkEffortAssignmentProfessional.AssociationType.ObjectType = this;

			WorkEffortAssignmentProfessional.RoleType.ObjectType = PersonClass.Instance;;
			WorkEffortAssignmentProfessional.RoleType.AssignedSingularName = "Professional";
			WorkEffortAssignmentProfessional.RoleType.AssignedPluralName = "Professionals";
			this.Roles.Professional = WorkEffortAssignmentProfessional.RoleType;

			var WorkEffortAssignmentAssignment = new RelationType(AppsDomain.Instance, new Guid("93cb0818-2599-4652-addd-4a1032d5dde9"), new Guid("2d5c955f-4bd5-43d2-a8f4-3df03ef6b78b"), new Guid("c42be8db-6e5a-459c-afbc-39bcac3e1eb2"));
			WorkEffortAssignmentAssignment.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortAssignmentAssignment.IsIndexed = true;

			WorkEffortAssignmentAssignment.AssociationType.ObjectType = this;

			WorkEffortAssignmentAssignment.RoleType.ObjectType = WorkEffortInterface.Instance;;
			WorkEffortAssignmentAssignment.RoleType.AssignedSingularName = "Assignment";
			WorkEffortAssignmentAssignment.RoleType.AssignedPluralName = "Assignments";
			this.Roles.Assignment = WorkEffortAssignmentAssignment.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortAssignmentClass.Instance.ConcreteRoles.Professional = WorkEffortAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Professional]; 

			WorkEffortAssignmentClass.Instance.ConcreteRoles.Assignment = WorkEffortAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Assignment]; 


		}

		internal class RolesType
		{
			internal RoleType Professional;
			internal RoleType Assignment;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Professional;
			internal ConcreteRoleType Assignment;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class SoftwareFeatureClass : Class
	{
		public static SoftwareFeatureClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SoftwareFeatureClass() : base(AppsDomain.Instance, new Guid("34047b37-545d-420f-ae79-2e05123cd623"))
        {
			this.SingularName = "SoftwareFeature";
			this.PluralName = "SoftwareFeatures";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0eef3897-278f-4f1c-b022-c20b9281abe8"))
			{
				Subtype = Instance,
				Supertype = ProductFeatureInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("3bddf31b-b9a3-4280-ab0b-40f627ee245f"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType EstimatedProductCost;
			internal ConcreteRoleType BasePrice;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DependentFeature;
			internal ConcreteRoleType IncompatibleFeature;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;

		}
	}public partial class FiscalYearInvoiceNumberClass : Class
	{
		public static FiscalYearInvoiceNumberClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal FiscalYearInvoiceNumberClass() : base(AppsDomain.Instance, new Guid("341fa885-0161-406b-89e6-08b1c92cd3b3"))
        {
			this.SingularName = "FiscalYearInvoiceNumber";
			this.PluralName = "FiscalYearInvoiceNumbers";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var FiscalYearInvoiceNumberNextSalesInvoiceNumber = new RelationType(AppsDomain.Instance, new Guid("14f064a8-461c-4726-93c4-91bc34c9c443"), new Guid("02716f0b-8fef-4791-85ae-7c15a5581433"), new Guid("5377c7e0-8bc0-4621-83c8-0829c3fae3f2"));
			FiscalYearInvoiceNumberNextSalesInvoiceNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			FiscalYearInvoiceNumberNextSalesInvoiceNumber.IsDerived = true;
			FiscalYearInvoiceNumberNextSalesInvoiceNumber.AssociationType.ObjectType = this;

			FiscalYearInvoiceNumberNextSalesInvoiceNumber.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			FiscalYearInvoiceNumberNextSalesInvoiceNumber.RoleType.AssignedSingularName = "NextSalesInvoiceNumber";
			FiscalYearInvoiceNumberNextSalesInvoiceNumber.RoleType.AssignedPluralName = "NextSalesInvoiceNumbers";
			this.Roles.NextSalesInvoiceNumber = FiscalYearInvoiceNumberNextSalesInvoiceNumber.RoleType;

			var FiscalYearInvoiceNumberFiscalYear = new RelationType(AppsDomain.Instance, new Guid("c1b0dcb6-8627-4a47-86d0-2866344da3f1"), new Guid("3d1c515f-a52f-4038-9820-794f44927beb"), new Guid("ba7329de-0176-4782-92e1-1cd932823ec0"));
			FiscalYearInvoiceNumberFiscalYear.AssignedMultiplicity = Multiplicity.OneToOne;
			FiscalYearInvoiceNumberFiscalYear.AssociationType.ObjectType = this;

			FiscalYearInvoiceNumberFiscalYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			FiscalYearInvoiceNumberFiscalYear.RoleType.AssignedSingularName = "FiscalYear";
			FiscalYearInvoiceNumberFiscalYear.RoleType.AssignedPluralName = "FiscalYears";
			this.Roles.FiscalYear = FiscalYearInvoiceNumberFiscalYear.RoleType;


		}

		internal override void SetRelationTypes()
		{
			FiscalYearInvoiceNumberClass.Instance.ConcreteRoles.NextSalesInvoiceNumber = FiscalYearInvoiceNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NextSalesInvoiceNumber]; 

			FiscalYearInvoiceNumberClass.Instance.ConcreteRoles.FiscalYear = FiscalYearInvoiceNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FiscalYear]; 


		}

		internal class RolesType
		{
			internal RoleType NextSalesInvoiceNumber;
			internal RoleType FiscalYear;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType NextSalesInvoiceNumber;
			internal ConcreteRoleType FiscalYear;

		}
	}public partial class GeographicBoundaryInterface: Interface
	{
		public static GeographicBoundaryInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal GeographicBoundaryInterface() : base(AppsDomain.Instance, new Guid("3453c2e1-77a4-4fe8-b663-02bac689883a"))
        {
			this.SingularName = "GeographicBoundary";
			this.PluralName = "GeographicBoundaries";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("70787d0f-9e4c-4f9f-b102-be6269268931"))
			{
				Subtype = Instance,
				Supertype = GeoLocatableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("869ccd69-a79e-49af-a5d1-75c7cb97f50b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var GeographicBoundaryAbbreviation = new RelationType(AppsDomain.Instance, new Guid("28e43fe9-cdf1-4671-af95-ead40ecbef15"), new Guid("97f83f4c-d7ea-4928-b0a2-7e001a66b7d2"), new Guid("940ce144-a48d-4128-b110-ffcc4d578295"));
			GeographicBoundaryAbbreviation.AssignedMultiplicity = Multiplicity.OneToOne;
			GeographicBoundaryAbbreviation.AssociationType.ObjectType = this;

			GeographicBoundaryAbbreviation.RoleType.ObjectType = AllorsStringUnit.Instance;;
			GeographicBoundaryAbbreviation.RoleType.AssignedSingularName = "Abbreviation";
			GeographicBoundaryAbbreviation.RoleType.AssignedPluralName = "Abbreviations";
			GeographicBoundaryAbbreviation.RoleType.Size = 10;
			this.Roles.Abbreviation = GeographicBoundaryAbbreviation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RegionClass.Instance.ConcreteRoles.Abbreviation = RegionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			SalesTerritoryClass.Instance.ConcreteRoles.Abbreviation = SalesTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			TerritoryClass.Instance.ConcreteRoles.Abbreviation = TerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			ServiceTerritoryClass.Instance.ConcreteRoles.Abbreviation = ServiceTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			PostalCodeClass.Instance.ConcreteRoles.Abbreviation = PostalCodeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			ProvinceClass.Instance.ConcreteRoles.Abbreviation = ProvinceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			StateClass.Instance.ConcreteRoles.Abbreviation = StateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			CountyClass.Instance.ConcreteRoles.Abbreviation = CountyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			CityClass.Instance.ConcreteRoles.Abbreviation = CityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			CountryClass.Instance.ConcreteRoles.Abbreviation = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 


		}

		internal class RolesType
		{
			internal RoleType Abbreviation;

		}
	}public partial class SalesOrderStatusClass : Class
	{
		public static SalesOrderStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesOrderStatusClass() : base(AppsDomain.Instance, new Guid("347ee1c4-5275-4ea7-a349-6bab2de45aff"))
        {
			this.SingularName = "SalesOrderStatus";
			this.PluralName = "SalesOrderStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8edb1e49-b357-4fd5-a400-8d4187ddc997"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesOrderStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("4c0986f4-c033-4646-b062-da9699bd8455"), new Guid("96c8b409-1ac9-4f31-a6a2-191bee4a1a82"), new Guid("99a005bb-6961-4a19-bedc-5bdce1829cb9"));
			SalesOrderStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderStatusStartDateTime.AssociationType.ObjectType = this;

			SalesOrderStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			SalesOrderStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			SalesOrderStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = SalesOrderStatusStartDateTime.RoleType;

			var SalesOrderStatusSalesOrderObjectState = new RelationType(AppsDomain.Instance, new Guid("e61dabc2-729c-41cc-8d89-aea6e6557914"), new Guid("f3b9f2c8-18b5-4334-99e5-7f4f4eee7571"), new Guid("2e1c48fe-536b-4b2a-8e49-7320c961d42c"));
			SalesOrderStatusSalesOrderObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderStatusSalesOrderObjectState.IsIndexed = true;

			SalesOrderStatusSalesOrderObjectState.AssociationType.ObjectType = this;

			SalesOrderStatusSalesOrderObjectState.RoleType.ObjectType = SalesOrderObjectStateClass.Instance;;
			SalesOrderStatusSalesOrderObjectState.RoleType.AssignedSingularName = "SalesOrderObjectState";
			SalesOrderStatusSalesOrderObjectState.RoleType.AssignedPluralName = "SalesOrderObjectStates";
			this.Roles.SalesOrderObjectState = SalesOrderStatusSalesOrderObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesOrderStatusClass.Instance.ConcreteRoles.StartDateTime = SalesOrderStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			SalesOrderStatusClass.Instance.ConcreteRoles.SalesOrderObjectState = SalesOrderStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOrderObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType SalesOrderObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType SalesOrderObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class BillingAccountClass : Class
	{
		public static BillingAccountClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BillingAccountClass() : base(AppsDomain.Instance, new Guid("34d08c66-6d7a-4089-b862-c93feda67ef1"))
        {
			this.SingularName = "BillingAccount";
			this.PluralName = "BillingAccounts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f3202cca-3bd1-4d66-a5d8-36d81121ab2c"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var BillingAccountDescription = new RelationType(AppsDomain.Instance, new Guid("408019e5-6b8a-4a50-be0a-0b3de3cd55d9"), new Guid("af54fecc-d537-4611-8324-fbe426063dd0"), new Guid("ef0e1a32-4873-4d22-b037-16afb00e7fce"));
			BillingAccountDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			BillingAccountDescription.AssociationType.ObjectType = this;

			BillingAccountDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BillingAccountDescription.RoleType.AssignedSingularName = "Description";
			BillingAccountDescription.RoleType.AssignedPluralName = "Descriptions";
			BillingAccountDescription.RoleType.Size = 256;
			this.Roles.Description = BillingAccountDescription.RoleType;

			var BillingAccountContactMechanism = new RelationType(AppsDomain.Instance, new Guid("8a550d4b-d881-495b-9326-f2494a50fb5f"), new Guid("3562b1e4-0acc-4a94-a111-f1afb8d889d4"), new Guid("7746a7a0-3dee-4279-8114-639c5f106d4d"));
			BillingAccountContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			BillingAccountContactMechanism.IsIndexed = true;

			BillingAccountContactMechanism.AssociationType.ObjectType = this;

			BillingAccountContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			BillingAccountContactMechanism.RoleType.AssignedSingularName = "ContactMechanism";
			BillingAccountContactMechanism.RoleType.AssignedPluralName = "ContactMechanisms";
			this.Roles.ContactMechanism = BillingAccountContactMechanism.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BillingAccountClass.Instance.ConcreteRoles.Description = BillingAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			BillingAccountClass.Instance.ConcreteRoles.ContactMechanism = BillingAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContactMechanism]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType ContactMechanism;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ContactMechanism;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesChannelRevenueClass : Class
	{
		public static SalesChannelRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesChannelRevenueClass() : base(AppsDomain.Instance, new Guid("354524c8-355e-4994-b07e-91fc6bcb06cf"))
        {
			this.SingularName = "SalesChannelRevenue";
			this.PluralName = "SalesChannelRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1f184480-e3ef-446b-96bf-eda004043685"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("72f83acc-cc56-4dd7-8eda-6b4102d675ed"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesChannelRevenueYear = new RelationType(AppsDomain.Instance, new Guid("5b5d13cd-fc96-4a9d-826c-a47a21188717"), new Guid("400cc1d3-5e23-4067-a49e-ad0158801a8e"), new Guid("9db9bfe7-e5df-44b7-b651-f0c0fba31806"));
			SalesChannelRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesChannelRevenueYear.AssociationType.ObjectType = this;

			SalesChannelRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesChannelRevenueYear.RoleType.AssignedSingularName = "Year";
			SalesChannelRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = SalesChannelRevenueYear.RoleType;

			var SalesChannelRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("9c1afcc0-d16b-4d39-bc6a-7d59e5c5487f"), new Guid("d2caaef3-8d0e-4423-b36c-074652f648aa"), new Guid("55574345-6243-4647-b1cd-eec78926d5ad"));
			SalesChannelRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesChannelRevenueMonth.AssociationType.ObjectType = this;

			SalesChannelRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesChannelRevenueMonth.RoleType.AssignedSingularName = "Month";
			SalesChannelRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = SalesChannelRevenueMonth.RoleType;

			var SalesChannelRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("a2ace411-df41-4191-b867-5f73ae5a1be7"), new Guid("1786e0dc-0483-4b80-942c-0c7d7ee8e913"), new Guid("44f58270-a4c7-49ca-838f-8a70a3ebe6d1"));
			SalesChannelRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesChannelRevenueCurrency.IsIndexed = true;

			SalesChannelRevenueCurrency.AssociationType.ObjectType = this;

			SalesChannelRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			SalesChannelRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			SalesChannelRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = SalesChannelRevenueCurrency.RoleType;

			var SalesChannelRevenueSalesChannel = new RelationType(AppsDomain.Instance, new Guid("b79bed4e-c20f-448d-8748-090bfbfd803c"), new Guid("468dce88-9789-47fb-874c-bc501c9cbcea"), new Guid("f8154bd8-0d12-4e70-86d1-f16d627bdb4d"));
			SalesChannelRevenueSalesChannel.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesChannelRevenueSalesChannel.IsIndexed = true;

			SalesChannelRevenueSalesChannel.AssociationType.ObjectType = this;

			SalesChannelRevenueSalesChannel.RoleType.ObjectType = SalesChannelClass.Instance;;
			SalesChannelRevenueSalesChannel.RoleType.AssignedSingularName = "SalesChannel";
			SalesChannelRevenueSalesChannel.RoleType.AssignedPluralName = "SalesChannels";
			this.Roles.SalesChannel = SalesChannelRevenueSalesChannel.RoleType;

			var SalesChannelRevenueSalesChannelName = new RelationType(AppsDomain.Instance, new Guid("c86138a3-6cdd-4e97-96ca-08f015f13e78"), new Guid("43473687-dc7e-4a4b-8745-5e98747c3731"), new Guid("7d2869b9-d5e9-48ff-a12c-f32c7667d764"));
			SalesChannelRevenueSalesChannelName.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesChannelRevenueSalesChannelName.AssociationType.ObjectType = this;

			SalesChannelRevenueSalesChannelName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			SalesChannelRevenueSalesChannelName.RoleType.AssignedSingularName = "SalesChannelName";
			SalesChannelRevenueSalesChannelName.RoleType.AssignedPluralName = "SalesChannelNames";
			SalesChannelRevenueSalesChannelName.RoleType.Size = 256;
			this.Roles.SalesChannelName = SalesChannelRevenueSalesChannelName.RoleType;

			var SalesChannelRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("e650c7f3-3be0-4625-93fb-d0c1e72be9d0"), new Guid("ed420ba0-89a1-42b2-a353-bfb99f05fe63"), new Guid("efce65ee-43a1-4a3e-b9ec-be7b0e273f7f"));
			SalesChannelRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesChannelRevenueRevenue.AssociationType.ObjectType = this;

			SalesChannelRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesChannelRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			SalesChannelRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			SalesChannelRevenueRevenue.RoleType.Scale = 2;
			SalesChannelRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = SalesChannelRevenueRevenue.RoleType;

			var SalesChannelRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("f0fb8f34-e639-4c48-a1b7-66197520572d"), new Guid("9c2f6135-d7c7-400b-9450-b65abc402a8c"), new Guid("936d33cb-b303-4663-90cb-0bd64c864d21"));
			SalesChannelRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesChannelRevenueInternalOrganisation.IsIndexed = true;

			SalesChannelRevenueInternalOrganisation.AssociationType.ObjectType = this;

			SalesChannelRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesChannelRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			SalesChannelRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = SalesChannelRevenueInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesChannelRevenueClass.Instance.ConcreteRoles.Year = SalesChannelRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			SalesChannelRevenueClass.Instance.ConcreteRoles.Month = SalesChannelRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			SalesChannelRevenueClass.Instance.ConcreteRoles.Currency = SalesChannelRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			SalesChannelRevenueClass.Instance.ConcreteRoles.SalesChannel = SalesChannelRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 

			SalesChannelRevenueClass.Instance.ConcreteRoles.SalesChannelName = SalesChannelRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannelName]; 

			SalesChannelRevenueClass.Instance.ConcreteRoles.Revenue = SalesChannelRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			SalesChannelRevenueClass.Instance.ConcreteRoles.InternalOrganisation = SalesChannelRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType Year;
			internal RoleType Month;
			internal RoleType Currency;
			internal RoleType SalesChannel;
			internal RoleType SalesChannelName;
			internal RoleType Revenue;
			internal RoleType InternalOrganisation;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Year;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType SalesChannelName;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AutomatedAgentClass : Class
	{
		public static AutomatedAgentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AutomatedAgentClass() : base(AppsDomain.Instance, new Guid("3587d2e1-c3f6-4c55-a96c-016e0501d99c"))
        {
			this.SingularName = "AutomatedAgent";
			this.PluralName = "AutomatedAgents";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0b48e079-3553-47e8-91ac-09e6599192ef"))
			{
				Subtype = Instance,
				Supertype = UserInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("9d83c4ff-0012-4f0d-a812-9c0dccb861fa"))
			{
				Subtype = Instance,
				Supertype = PartyInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var AutomatedAgentName = new RelationType(AppsDomain.Instance, new Guid("4e158d75-d0b5-4cb7-ad41-e8ed3002d175"), new Guid("6f2a83eb-17e9-408e-b18b-9bb2b9a3e812"), new Guid("4fac2dd3-8711-4115-96b9-a38f62e2d093"));
			AutomatedAgentName.AssignedMultiplicity = Multiplicity.OneToOne;
			AutomatedAgentName.IsIndexed = true;

			AutomatedAgentName.AssociationType.ObjectType = this;

			AutomatedAgentName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AutomatedAgentName.RoleType.AssignedSingularName = "Name";
			AutomatedAgentName.RoleType.AssignedPluralName = "Names";
			AutomatedAgentName.RoleType.Size = 256;
			this.Roles.Name = AutomatedAgentName.RoleType;

			var AutomatedAgentDescription = new RelationType(AppsDomain.Instance, new Guid("58870c93-b066-47b7-95f7-5411a46dbc7e"), new Guid("31925ed6-e66c-4718-963f-c8a71d566fe8"), new Guid("eee42775-b172-4fde-9042-a0f9b2224ec3"));
			AutomatedAgentDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			AutomatedAgentDescription.AssociationType.ObjectType = this;

			AutomatedAgentDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AutomatedAgentDescription.RoleType.AssignedSingularName = "Description";
			AutomatedAgentDescription.RoleType.AssignedPluralName = "Descriptions";
			AutomatedAgentDescription.RoleType.Size = 256;
			this.Roles.Description = AutomatedAgentDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			AutomatedAgentClass.Instance.ConcreteRoles.Name = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			AutomatedAgentClass.Instance.ConcreteRoles.Description = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UserEmailConfirmed;
			internal ConcreteRoleType UserName;
			internal ConcreteRoleType UserEmail;
			internal ConcreteRoleType UserPasswordHash;
			internal ConcreteRoleType OwnerSecurityToken;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Locale;
			internal ConcreteRoleType YTDRevenue;
			internal ConcreteRoleType LastYearsRevenue;
			internal ConcreteRoleType BillingInquiriesFax;
			internal ConcreteRoleType Qualification;
			internal ConcreteRoleType HomeAddress;
			internal ConcreteRoleType SalesOffice;
			internal ConcreteRoleType OrderInquiriesFax;
			internal ConcreteRoleType CurrentSalesRep;
			internal ConcreteRoleType PartyContactMechanism;
			internal ConcreteRoleType ShippingInquiriesFax;
			internal ConcreteRoleType ShippingInquiriesPhone;
			internal ConcreteRoleType BillingAccount;
			internal ConcreteRoleType OrderInquiriesPhone;
			internal ConcreteRoleType PartySkill;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType ExcludeFromDunning;
			internal ConcreteRoleType BankAccount;
			internal ConcreteRoleType BillingAddress;
			internal ConcreteRoleType DefaultShipmentMethod;
			internal ConcreteRoleType Resume;
			internal ConcreteRoleType HeadQuarter;
			internal ConcreteRoleType PersonalEmailAddress;
			internal ConcreteRoleType CellPhoneNumber;
			internal ConcreteRoleType BillingInquiriesPhone;
			internal ConcreteRoleType PartyName;
			internal ConcreteRoleType OrderAddress;
			internal ConcreteRoleType InternetAddress;
			internal ConcreteRoleType Content;
			internal ConcreteRoleType CreditCard;
			internal ConcreteRoleType ShippingAddress;
			internal ConcreteRoleType OpenOrderAmount;
			internal ConcreteRoleType GeneralFaxNumber;
			internal ConcreteRoleType DefaultPaymentMethod;
			internal ConcreteRoleType GeneralPhoneNumber;
			internal ConcreteRoleType PreferredCurrency;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class SalesChannelRevenueHistoryClass : Class
	{
		public static SalesChannelRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesChannelRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("35d5e80f-e65f-4b0d-9e81-d1604b36a5e3"))
        {
			this.SingularName = "SalesChannelRevenueHistory";
			this.PluralName = "SalesChannelRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("aa17b4bd-d5cc-4ce9-a468-befb6f5d6031"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesChannelRevenueHistorySalesChannel = new RelationType(AppsDomain.Instance, new Guid("5093d76d-920b-454a-951b-ba123e1ee001"), new Guid("3aad24b2-c4d8-4aa1-a293-64aa9af82dbc"), new Guid("7f891912-fbaa-409a-816d-6cd85553aeab"));
			SalesChannelRevenueHistorySalesChannel.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesChannelRevenueHistorySalesChannel.IsIndexed = true;

			SalesChannelRevenueHistorySalesChannel.AssociationType.ObjectType = this;

			SalesChannelRevenueHistorySalesChannel.RoleType.ObjectType = SalesChannelClass.Instance;;
			SalesChannelRevenueHistorySalesChannel.RoleType.AssignedSingularName = "SalesChannel";
			SalesChannelRevenueHistorySalesChannel.RoleType.AssignedPluralName = "SalesChannels";
			this.Roles.SalesChannel = SalesChannelRevenueHistorySalesChannel.RoleType;

			var SalesChannelRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("6f6af8ac-a4db-46e2-8bfd-a55161b12b66"), new Guid("345ec7c5-d2c5-489c-99eb-404659c7abba"), new Guid("119c0e16-d47a-46d4-bf57-4ece6cca2bf3"));
			SalesChannelRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesChannelRevenueHistoryCurrency.IsIndexed = true;

			SalesChannelRevenueHistoryCurrency.AssociationType.ObjectType = this;

			SalesChannelRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			SalesChannelRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			SalesChannelRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = SalesChannelRevenueHistoryCurrency.RoleType;

			var SalesChannelRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("b98b4de3-e2ad-45b4-bbf7-c3b90261979c"), new Guid("f0e38eaa-8470-451a-ae6f-52b7822ff05f"), new Guid("2119608f-9fd4-48ef-af0f-279abbbc0d4e"));
			SalesChannelRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesChannelRevenueHistoryRevenue.AssociationType.ObjectType = this;

			SalesChannelRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesChannelRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			SalesChannelRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			SalesChannelRevenueHistoryRevenue.RoleType.Scale = 2;
			SalesChannelRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = SalesChannelRevenueHistoryRevenue.RoleType;

			var SalesChannelRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("d1fe6003-0415-4826-ac5b-6fdaff587410"), new Guid("b87bb3d9-07d4-4178-99eb-77be7baba818"), new Guid("b392d765-f353-4c20-9410-f73f73978eae"));
			SalesChannelRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesChannelRevenueHistoryInternalOrganisation.IsIndexed = true;

			SalesChannelRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			SalesChannelRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesChannelRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			SalesChannelRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = SalesChannelRevenueHistoryInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesChannelRevenueHistoryClass.Instance.ConcreteRoles.SalesChannel = SalesChannelRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 

			SalesChannelRevenueHistoryClass.Instance.ConcreteRoles.Currency = SalesChannelRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			SalesChannelRevenueHistoryClass.Instance.ConcreteRoles.Revenue = SalesChannelRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			SalesChannelRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = SalesChannelRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType SalesChannel;
			internal RoleType Currency;
			internal RoleType Revenue;
			internal RoleType InternalOrganisation;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProposalClass : Class
	{
		public static ProposalClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProposalClass() : base(AppsDomain.Instance, new Guid("360cf15d-c360-4d68-b693-7d1544388169"))
        {
			this.SingularName = "Proposal";
			this.PluralName = "Proposals";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("695047c0-4c19-4bb4-a805-2978aa189935"))
			{
				Subtype = Instance,
				Supertype = QuoteInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ValidFromDate;
			internal ConcreteRoleType QuoteTerm;
			internal ConcreteRoleType Issuer;
			internal ConcreteRoleType ValidThroughDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Receiver;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType IssueDate;
			internal ConcreteRoleType QuoteItem;
			internal ConcreteRoleType QuoteNumber;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class FinishedGoodClass : Class
	{
		public static FinishedGoodClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal FinishedGoodClass() : base(AppsDomain.Instance, new Guid("364071a2-bcda-4bdc-b0f9-0e56d28604d6"))
        {
			this.SingularName = "FinishedGood";
			this.PluralName = "FinishedGoods";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d9a201d9-7a0c-422a-ac09-b5b96c420d30"))
			{
				Subtype = Instance,
				Supertype = PartInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType OwnedByParty;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType PartSpecification;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType ManufacturerId;
			internal ConcreteRoleType ReorderLevel;
			internal ConcreteRoleType ReorderQuantity;
			internal ConcreteRoleType PriceComponent;
			internal ConcreteRoleType InventoryItemKind;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PerformanceSpecificationClass : Class
	{
		public static PerformanceSpecificationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PerformanceSpecificationClass() : base(AppsDomain.Instance, new Guid("37b665a5-9f73-4002-b7d2-7ed6987fe09a"))
        {
			this.SingularName = "PerformanceSpecification";
			this.PluralName = "PerformanceSpecifications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0ea499b9-ee5a-4334-80fd-9881fd541825"))
			{
				Subtype = Instance,
				Supertype = PartSpecificationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PartSpecificationStatus;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType DocumentationDate;
			internal ConcreteRoleType CurrentPartSpecificationStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProductionRunClass : Class
	{
		public static ProductionRunClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductionRunClass() : base(AppsDomain.Instance, new Guid("37de59b2-ca6c-4fa9-86a2-299fd6f14812"))
        {
			this.SingularName = "ProductionRun";
			this.PluralName = "ProductionRuns";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("71e44ea6-322c-446d-98f6-23ea63e1687e"))
			{
				Subtype = Instance,
				Supertype = WorkEffortInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductionRunQuantityProduced = new RelationType(AppsDomain.Instance, new Guid("108bb811-ece8-42b4-89e2-7a394f848f4d"), new Guid("8eeef339-d38c-45c4-8300-61bbb33cb205"), new Guid("abbbac9a-74f3-4e7d-a56e-f5ba0c967530"));
			ProductionRunQuantityProduced.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductionRunQuantityProduced.AssociationType.ObjectType = this;

			ProductionRunQuantityProduced.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			ProductionRunQuantityProduced.RoleType.AssignedSingularName = "QuantityProduced";
			ProductionRunQuantityProduced.RoleType.AssignedPluralName = "QuantitiesProduced";
			this.Roles.QuantityProduced = ProductionRunQuantityProduced.RoleType;

			var ProductionRunQuantityRejected = new RelationType(AppsDomain.Instance, new Guid("407b8671-79ea-4998-b5ed-188dd4a9f43c"), new Guid("7358c0de-4918-4998-afb8-ecd122e04e3a"), new Guid("56da6402-ddd9-4bbb-83be-3c368de22d09"));
			ProductionRunQuantityRejected.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductionRunQuantityRejected.AssociationType.ObjectType = this;

			ProductionRunQuantityRejected.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			ProductionRunQuantityRejected.RoleType.AssignedSingularName = "QuantityRejected";
			ProductionRunQuantityRejected.RoleType.AssignedPluralName = "QuantitiesRejected";
			this.Roles.QuantityRejected = ProductionRunQuantityRejected.RoleType;

			var ProductionRunQuantityToProduce = new RelationType(AppsDomain.Instance, new Guid("558dfd44-26a5-4d64-9317-a121fabaecf1"), new Guid("69036ddb-1a7b-4bce-8ee2-2610715e47c0"), new Guid("a708d61a-08d1-45db-877b-3eb4514a9069"));
			ProductionRunQuantityToProduce.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductionRunQuantityToProduce.AssociationType.ObjectType = this;

			ProductionRunQuantityToProduce.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			ProductionRunQuantityToProduce.RoleType.AssignedSingularName = "QuantityToProduce";
			ProductionRunQuantityToProduce.RoleType.AssignedPluralName = "QuantitiesToProduce";
			this.Roles.QuantityToProduce = ProductionRunQuantityToProduce.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductionRunClass.Instance.ConcreteRoles.QuantityProduced = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityProduced]; 

			ProductionRunClass.Instance.ConcreteRoles.QuantityRejected = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityRejected]; 

			ProductionRunClass.Instance.ConcreteRoles.QuantityToProduce = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityToProduce]; 


		}

		internal class RolesType
		{
			internal RoleType QuantityProduced;
			internal RoleType QuantityRejected;
			internal RoleType QuantityToProduce;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType QuantityProduced;
			internal ConcreteRoleType QuantityRejected;
			internal ConcreteRoleType QuantityToProduce;
			internal ConcreteRoleType CurrentWorkEffortStatus;
			internal ConcreteRoleType Precendency;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeliverableProduced;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType InventoryItemNeeded;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType ActualCompletion;
			internal ConcreteRoleType OrderItemFulfillment;
			internal ConcreteRoleType WorkEffortStatus;
			internal ConcreteRoleType WorkEffortType;
			internal ConcreteRoleType InventoryItemProduced;
			internal ConcreteRoleType WorkEffortPurpose;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType RequirementFulfillment;
			internal ConcreteRoleType SpecialTerms;
			internal ConcreteRoleType Concurrency;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ActualHours;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ScheduledCompletion;
			internal ConcreteRoleType EstimatedHours;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PriceComponentInterface: Interface
	{
		public static PriceComponentInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PriceComponentInterface() : base(AppsDomain.Instance, new Guid("383589fb-f410-4d22-ade6-aa5126fdef18"))
        {
			this.SingularName = "PriceComponent";
			this.PluralName = "PriceComponents";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("77daf73f-b13f-4f55-baaa-7961bd54703f"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ae531935-828e-4821-a7f3-e20614363dd7"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("dc609e2b-00c7-4add-8579-5473d04be9cc"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PriceComponentGeographicBoundary = new RelationType(AppsDomain.Instance, new Guid("18cda5a7-6720-4133-a71b-ce23e9ebc1bb"), new Guid("bfdd0a69-e69f-49e0-b756-e6b3307a2bd2"), new Guid("5934c3f4-3f64-4f5a-b455-70590ae02328"));
			PriceComponentGeographicBoundary.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentGeographicBoundary.IsIndexed = true;

			PriceComponentGeographicBoundary.AssociationType.ObjectType = this;

			PriceComponentGeographicBoundary.RoleType.ObjectType = GeographicBoundaryInterface.Instance;;
			PriceComponentGeographicBoundary.RoleType.AssignedSingularName = "GeographicBoundary";
			PriceComponentGeographicBoundary.RoleType.AssignedPluralName = "GeographicBoundaries";
			this.Roles.GeographicBoundary = PriceComponentGeographicBoundary.RoleType;

			var PriceComponentRate = new RelationType(AppsDomain.Instance, new Guid("1cddef96-0be9-487a-bdb3-df024656214a"), new Guid("deb9575e-c8a2-48e3-9930-33a5c2afad2d"), new Guid("3189b81e-100e-45cf-b308-d1f5e34a3c16"));
			PriceComponentRate.AssignedMultiplicity = Multiplicity.OneToOne;
			PriceComponentRate.AssociationType.ObjectType = this;

			PriceComponentRate.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PriceComponentRate.RoleType.AssignedSingularName = "Rate";
			PriceComponentRate.RoleType.AssignedPluralName = "Rates";
			PriceComponentRate.RoleType.Scale = 2;
			PriceComponentRate.RoleType.Precision = 19;
			this.Roles.Rate = PriceComponentRate.RoleType;

			var PriceComponentRevenueValueBreak = new RelationType(AppsDomain.Instance, new Guid("1da8c258-fb73-4cce-88f3-3c39d21a7996"), new Guid("191fa580-ad8b-4151-90e1-58c4c512ab68"), new Guid("c3519e5a-981d-453f-ab7b-edf9f29556cc"));
			PriceComponentRevenueValueBreak.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentRevenueValueBreak.IsIndexed = true;

			PriceComponentRevenueValueBreak.AssociationType.ObjectType = this;

			PriceComponentRevenueValueBreak.RoleType.ObjectType = RevenueValueBreakClass.Instance;;
			PriceComponentRevenueValueBreak.RoleType.AssignedSingularName = "RevenueValueBreak";
			PriceComponentRevenueValueBreak.RoleType.AssignedPluralName = "RevenueValueBreaks";
			this.Roles.RevenueValueBreak = PriceComponentRevenueValueBreak.RoleType;

			var PriceComponentPartyClassification = new RelationType(AppsDomain.Instance, new Guid("3230c33b-42ac-4eb4-b0c9-9791cc5604d7"), new Guid("0d248d95-468e-4a19-9e84-45065dfc0006"), new Guid("8e87149c-0c44-4e02-b784-eeef963a4333"));
			PriceComponentPartyClassification.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentPartyClassification.IsIndexed = true;

			PriceComponentPartyClassification.AssociationType.ObjectType = this;

			PriceComponentPartyClassification.RoleType.ObjectType = PartyClassificationInterface.Instance;;
			PriceComponentPartyClassification.RoleType.AssignedSingularName = "PartyClassification";
			PriceComponentPartyClassification.RoleType.AssignedPluralName = "PartyClassifications";
			this.Roles.PartyClassification = PriceComponentPartyClassification.RoleType;

			var PriceComponentOrderQuantityBreak = new RelationType(AppsDomain.Instance, new Guid("50d6ddf3-47d9-4de1-954e-a4fae881edd0"), new Guid("ebe67168-92de-45f8-96b0-b373c47e7ff3"), new Guid("24ff9932-4fb4-4eab-b490-c397602f5820"));
			PriceComponentOrderQuantityBreak.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentOrderQuantityBreak.IsIndexed = true;

			PriceComponentOrderQuantityBreak.AssociationType.ObjectType = this;

			PriceComponentOrderQuantityBreak.RoleType.ObjectType = OrderQuantityBreakClass.Instance;;
			PriceComponentOrderQuantityBreak.RoleType.AssignedSingularName = "OrderQuantityBreak";
			PriceComponentOrderQuantityBreak.RoleType.AssignedPluralName = "OrderQuantityBreaks";
			this.Roles.OrderQuantityBreak = PriceComponentOrderQuantityBreak.RoleType;

			var PriceComponentPackageQuantityBreak = new RelationType(AppsDomain.Instance, new Guid("52883992-8e1b-472a-9cc7-67d4824a2cd4"), new Guid("5a14b240-2eb3-4051-b9cb-8eefb0fd1722"), new Guid("ac8e7099-f0bd-492f-bbd9-5890060c56eb"));
			PriceComponentPackageQuantityBreak.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentPackageQuantityBreak.IsIndexed = true;

			PriceComponentPackageQuantityBreak.AssociationType.ObjectType = this;

			PriceComponentPackageQuantityBreak.RoleType.ObjectType = PackageQuantityBreakClass.Instance;;
			PriceComponentPackageQuantityBreak.RoleType.AssignedSingularName = "PackageQuantityBreak";
			PriceComponentPackageQuantityBreak.RoleType.AssignedPluralName = "PackageQuantityBreaks";
			this.Roles.PackageQuantityBreak = PriceComponentPackageQuantityBreak.RoleType;

			var PriceComponentProduct = new RelationType(AppsDomain.Instance, new Guid("55c43896-ba79-4752-8fd4-7fd8501d64b6"), new Guid("38475cd5-ee15-4507-a810-f77ef0fb5cab"), new Guid("9e905572-d1bf-435b-8238-3a00da09f243"));
			PriceComponentProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentProduct.IsIndexed = true;

			PriceComponentProduct.AssociationType.ObjectType = this;

			PriceComponentProduct.RoleType.ObjectType = ProductInterface.Instance;;
			PriceComponentProduct.RoleType.AssignedSingularName = "Product";
			PriceComponentProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = PriceComponentProduct.RoleType;

			var PriceComponentRevenueQuantityBreak = new RelationType(AppsDomain.Instance, new Guid("5b91ebce-6ebe-4d5f-a8bc-22cd7e7d688a"), new Guid("de72aa4b-17f1-4037-99e5-95f30c1f8f90"), new Guid("78d118ed-dcb7-4b8a-84ae-d1a9fdf11643"));
			PriceComponentRevenueQuantityBreak.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentRevenueQuantityBreak.IsIndexed = true;

			PriceComponentRevenueQuantityBreak.AssociationType.ObjectType = this;

			PriceComponentRevenueQuantityBreak.RoleType.ObjectType = RevenueQuantityBreakClass.Instance;;
			PriceComponentRevenueQuantityBreak.RoleType.AssignedSingularName = "RevenueQuantityBreak";
			PriceComponentRevenueQuantityBreak.RoleType.AssignedPluralName = "RevenueQuantityBreaks";
			this.Roles.RevenueQuantityBreak = PriceComponentRevenueQuantityBreak.RoleType;

			var PriceComponentSpecifiedFor = new RelationType(AppsDomain.Instance, new Guid("5cab507a-bf96-40c9-89cd-86d59ad07c33"), new Guid("bbeb2003-75ee-415e-a841-bab8af7153bc"), new Guid("6f1ba75a-c271-45d7-bebb-601889291784"));
			PriceComponentSpecifiedFor.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentSpecifiedFor.IsIndexed = true;

			PriceComponentSpecifiedFor.AssociationType.ObjectType = this;

			PriceComponentSpecifiedFor.RoleType.ObjectType = PartyInterface.Instance;;
			PriceComponentSpecifiedFor.RoleType.AssignedSingularName = "SpecifiedFor";
			PriceComponentSpecifiedFor.RoleType.AssignedPluralName = "SpecifiedFors";
			this.Roles.SpecifiedFor = PriceComponentSpecifiedFor.RoleType;

			var PriceComponentProductFeature = new RelationType(AppsDomain.Instance, new Guid("6c0744ee-b730-490d-bb0c-b6be95211371"), new Guid("1eb6f686-586e-47cd-b23a-bcbc75430e7c"), new Guid("54726272-92ba-494c-9c08-d19e3248e2f3"));
			PriceComponentProductFeature.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentProductFeature.IsIndexed = true;

			PriceComponentProductFeature.AssociationType.ObjectType = this;

			PriceComponentProductFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			PriceComponentProductFeature.RoleType.AssignedSingularName = "ProductFeature";
			PriceComponentProductFeature.RoleType.AssignedPluralName = "ProductFeatures";
			this.Roles.ProductFeature = PriceComponentProductFeature.RoleType;

			var PriceComponentAgreementPricingProgram = new RelationType(AppsDomain.Instance, new Guid("80379d5a-1831-4eed-abd3-a9574e3edd1d"), new Guid("d1a93eac-7143-43fc-897e-be6b198e69ec"), new Guid("cf38c778-74c9-4da2-8619-f3c87cee5f19"));
			PriceComponentAgreementPricingProgram.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentAgreementPricingProgram.IsIndexed = true;

			PriceComponentAgreementPricingProgram.AssociationType.ObjectType = this;

			PriceComponentAgreementPricingProgram.RoleType.ObjectType = AgreementPricingProgramClass.Instance;;
			PriceComponentAgreementPricingProgram.RoleType.AssignedSingularName = "AgreementPricingProgram";
			PriceComponentAgreementPricingProgram.RoleType.AssignedPluralName = "AgreementPricingPrograms";
			this.Roles.AgreementPricingProgram = PriceComponentAgreementPricingProgram.RoleType;

			var PriceComponentDescription = new RelationType(AppsDomain.Instance, new Guid("8c32a2ca-a0c7-4c92-9b65-91d8b5ccee94"), new Guid("70ef8bda-aefc-458f-8f6e-5c0088bbad6b"), new Guid("090325e4-2ada-4978-afcd-04db2793c02a"));
			PriceComponentDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			PriceComponentDescription.AssociationType.ObjectType = this;

			PriceComponentDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PriceComponentDescription.RoleType.AssignedSingularName = "Description";
			PriceComponentDescription.RoleType.AssignedPluralName = "Descriptions";
			PriceComponentDescription.RoleType.Size = 256;
			this.Roles.Description = PriceComponentDescription.RoleType;

			var PriceComponentCurrency = new RelationType(AppsDomain.Instance, new Guid("c2b2b046-9e62-4065-8f2d-10624f7565aa"), new Guid("6e44c9e4-cf29-4303-8217-e01b5ce9dcb7"), new Guid("6fbee15a-bcba-46b6-9ea0-ff8c9a3256c4"));
			PriceComponentCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentCurrency.IsDerived = true;
			PriceComponentCurrency.IsIndexed = true;

			PriceComponentCurrency.AssociationType.ObjectType = this;

			PriceComponentCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PriceComponentCurrency.RoleType.AssignedSingularName = "Currency";
			PriceComponentCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PriceComponentCurrency.RoleType;

			var PriceComponentOrderKind = new RelationType(AppsDomain.Instance, new Guid("cb552b8b-f251-4c57-8cc7-8cc299631022"), new Guid("087b6d0d-399d-408e-af06-84bd70a0eff6"), new Guid("e968a3a1-7394-465a-829a-f8f33ea3fc4c"));
			PriceComponentOrderKind.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentOrderKind.IsIndexed = true;

			PriceComponentOrderKind.AssociationType.ObjectType = this;

			PriceComponentOrderKind.RoleType.ObjectType = OrderKindClass.Instance;;
			PriceComponentOrderKind.RoleType.AssignedSingularName = "OrderKind";
			PriceComponentOrderKind.RoleType.AssignedPluralName = "OrderKinds";
			this.Roles.OrderKind = PriceComponentOrderKind.RoleType;

			var PriceComponentOrderValue = new RelationType(AppsDomain.Instance, new Guid("dc1cf3af-2f22-43e6-863d-346e91aa2240"), new Guid("7a5ec695-a56a-40dc-8898-667276078d3d"), new Guid("6dfffe42-670a-4076-b240-9e8ffb43f243"));
			PriceComponentOrderValue.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentOrderValue.IsIndexed = true;

			PriceComponentOrderValue.AssociationType.ObjectType = this;

			PriceComponentOrderValue.RoleType.ObjectType = OrderValueClass.Instance;;
			PriceComponentOrderValue.RoleType.AssignedSingularName = "OrderValue";
			PriceComponentOrderValue.RoleType.AssignedPluralName = "OrderValues";
			this.Roles.OrderValue = PriceComponentOrderValue.RoleType;

			var PriceComponentPrice = new RelationType(AppsDomain.Instance, new Guid("dc5ad82b-c18d-4971-9689-e81475ed6a54"), new Guid("40276e1c-d9eb-4ef8-b828-387f67f1a337"), new Guid("9698ebe8-509d-493c-9d73-77028f60f2c7"));
			PriceComponentPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			PriceComponentPrice.AssociationType.ObjectType = this;

			PriceComponentPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PriceComponentPrice.RoleType.AssignedSingularName = "Price";
			PriceComponentPrice.RoleType.AssignedPluralName = "Prices";
			PriceComponentPrice.RoleType.Scale = 2;
			PriceComponentPrice.RoleType.Precision = 19;
			this.Roles.Price = PriceComponentPrice.RoleType;

			var PriceComponentProductCategory = new RelationType(AppsDomain.Instance, new Guid("de59dbb7-996a-45be-ae2a-a7b5a0ff3d94"), new Guid("47ad080f-0e8f-4529-8470-ea4cd26d424d"), new Guid("62d6d8df-de31-4995-a3ba-af9e5c06215c"));
			PriceComponentProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentProductCategory.IsIndexed = true;

			PriceComponentProductCategory.AssociationType.ObjectType = this;

			PriceComponentProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			PriceComponentProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			PriceComponentProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = PriceComponentProductCategory.RoleType;

			var PriceComponentSalesChannel = new RelationType(AppsDomain.Instance, new Guid("f8976686-bd76-4435-8ed8-f5e2490eeb94"), new Guid("38d58e93-0b17-4170-8f41-dbfb97bb11da"), new Guid("8f9625b2-d7fd-482d-8880-386dbeb74773"));
			PriceComponentSalesChannel.AssignedMultiplicity = Multiplicity.ManyToOne;
			PriceComponentSalesChannel.IsIndexed = true;

			PriceComponentSalesChannel.AssociationType.ObjectType = this;

			PriceComponentSalesChannel.RoleType.ObjectType = SalesChannelClass.Instance;;
			PriceComponentSalesChannel.RoleType.AssignedSingularName = "SalesChannel";
			PriceComponentSalesChannel.RoleType.AssignedPluralName = "SalesChannels";
			this.Roles.SalesChannel = PriceComponentSalesChannel.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BasePriceClass.Instance.ConcreteRoles.GeographicBoundary = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 
			OneTimeChargeClass.Instance.ConcreteRoles.GeographicBoundary = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 
			UtilizationChargeClass.Instance.ConcreteRoles.GeographicBoundary = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 
			SurchargeComponentClass.Instance.ConcreteRoles.GeographicBoundary = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 
			RecurringChargeClass.Instance.ConcreteRoles.GeographicBoundary = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 
			DiscountComponentClass.Instance.ConcreteRoles.GeographicBoundary = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.GeographicBoundary = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 

			BasePriceClass.Instance.ConcreteRoles.Rate = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Rate]; 
			OneTimeChargeClass.Instance.ConcreteRoles.Rate = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Rate]; 
			UtilizationChargeClass.Instance.ConcreteRoles.Rate = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Rate]; 
			SurchargeComponentClass.Instance.ConcreteRoles.Rate = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Rate]; 
			RecurringChargeClass.Instance.ConcreteRoles.Rate = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Rate]; 
			DiscountComponentClass.Instance.ConcreteRoles.Rate = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Rate]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.Rate = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Rate]; 

			BasePriceClass.Instance.ConcreteRoles.RevenueValueBreak = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueValueBreak]; 
			OneTimeChargeClass.Instance.ConcreteRoles.RevenueValueBreak = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueValueBreak]; 
			UtilizationChargeClass.Instance.ConcreteRoles.RevenueValueBreak = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueValueBreak]; 
			SurchargeComponentClass.Instance.ConcreteRoles.RevenueValueBreak = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueValueBreak]; 
			RecurringChargeClass.Instance.ConcreteRoles.RevenueValueBreak = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueValueBreak]; 
			DiscountComponentClass.Instance.ConcreteRoles.RevenueValueBreak = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueValueBreak]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.RevenueValueBreak = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueValueBreak]; 

			BasePriceClass.Instance.ConcreteRoles.PartyClassification = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 
			OneTimeChargeClass.Instance.ConcreteRoles.PartyClassification = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 
			UtilizationChargeClass.Instance.ConcreteRoles.PartyClassification = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 
			SurchargeComponentClass.Instance.ConcreteRoles.PartyClassification = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 
			RecurringChargeClass.Instance.ConcreteRoles.PartyClassification = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 
			DiscountComponentClass.Instance.ConcreteRoles.PartyClassification = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.PartyClassification = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 

			BasePriceClass.Instance.ConcreteRoles.OrderQuantityBreak = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderQuantityBreak]; 
			OneTimeChargeClass.Instance.ConcreteRoles.OrderQuantityBreak = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderQuantityBreak]; 
			UtilizationChargeClass.Instance.ConcreteRoles.OrderQuantityBreak = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderQuantityBreak]; 
			SurchargeComponentClass.Instance.ConcreteRoles.OrderQuantityBreak = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderQuantityBreak]; 
			RecurringChargeClass.Instance.ConcreteRoles.OrderQuantityBreak = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderQuantityBreak]; 
			DiscountComponentClass.Instance.ConcreteRoles.OrderQuantityBreak = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderQuantityBreak]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.OrderQuantityBreak = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderQuantityBreak]; 

			BasePriceClass.Instance.ConcreteRoles.PackageQuantityBreak = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PackageQuantityBreak]; 
			OneTimeChargeClass.Instance.ConcreteRoles.PackageQuantityBreak = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PackageQuantityBreak]; 
			UtilizationChargeClass.Instance.ConcreteRoles.PackageQuantityBreak = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PackageQuantityBreak]; 
			SurchargeComponentClass.Instance.ConcreteRoles.PackageQuantityBreak = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PackageQuantityBreak]; 
			RecurringChargeClass.Instance.ConcreteRoles.PackageQuantityBreak = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PackageQuantityBreak]; 
			DiscountComponentClass.Instance.ConcreteRoles.PackageQuantityBreak = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PackageQuantityBreak]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.PackageQuantityBreak = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PackageQuantityBreak]; 

			BasePriceClass.Instance.ConcreteRoles.Product = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 
			OneTimeChargeClass.Instance.ConcreteRoles.Product = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 
			UtilizationChargeClass.Instance.ConcreteRoles.Product = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 
			SurchargeComponentClass.Instance.ConcreteRoles.Product = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 
			RecurringChargeClass.Instance.ConcreteRoles.Product = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 
			DiscountComponentClass.Instance.ConcreteRoles.Product = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.Product = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			BasePriceClass.Instance.ConcreteRoles.RevenueQuantityBreak = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueQuantityBreak]; 
			OneTimeChargeClass.Instance.ConcreteRoles.RevenueQuantityBreak = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueQuantityBreak]; 
			UtilizationChargeClass.Instance.ConcreteRoles.RevenueQuantityBreak = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueQuantityBreak]; 
			SurchargeComponentClass.Instance.ConcreteRoles.RevenueQuantityBreak = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueQuantityBreak]; 
			RecurringChargeClass.Instance.ConcreteRoles.RevenueQuantityBreak = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueQuantityBreak]; 
			DiscountComponentClass.Instance.ConcreteRoles.RevenueQuantityBreak = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueQuantityBreak]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.RevenueQuantityBreak = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevenueQuantityBreak]; 

			BasePriceClass.Instance.ConcreteRoles.SpecifiedFor = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecifiedFor]; 
			OneTimeChargeClass.Instance.ConcreteRoles.SpecifiedFor = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecifiedFor]; 
			UtilizationChargeClass.Instance.ConcreteRoles.SpecifiedFor = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecifiedFor]; 
			SurchargeComponentClass.Instance.ConcreteRoles.SpecifiedFor = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecifiedFor]; 
			RecurringChargeClass.Instance.ConcreteRoles.SpecifiedFor = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecifiedFor]; 
			DiscountComponentClass.Instance.ConcreteRoles.SpecifiedFor = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecifiedFor]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.SpecifiedFor = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecifiedFor]; 

			BasePriceClass.Instance.ConcreteRoles.ProductFeature = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 
			OneTimeChargeClass.Instance.ConcreteRoles.ProductFeature = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 
			UtilizationChargeClass.Instance.ConcreteRoles.ProductFeature = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 
			SurchargeComponentClass.Instance.ConcreteRoles.ProductFeature = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 
			RecurringChargeClass.Instance.ConcreteRoles.ProductFeature = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 
			DiscountComponentClass.Instance.ConcreteRoles.ProductFeature = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.ProductFeature = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 

			BasePriceClass.Instance.ConcreteRoles.AgreementPricingProgram = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementPricingProgram]; 
			OneTimeChargeClass.Instance.ConcreteRoles.AgreementPricingProgram = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementPricingProgram]; 
			UtilizationChargeClass.Instance.ConcreteRoles.AgreementPricingProgram = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementPricingProgram]; 
			SurchargeComponentClass.Instance.ConcreteRoles.AgreementPricingProgram = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementPricingProgram]; 
			RecurringChargeClass.Instance.ConcreteRoles.AgreementPricingProgram = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementPricingProgram]; 
			DiscountComponentClass.Instance.ConcreteRoles.AgreementPricingProgram = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementPricingProgram]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.AgreementPricingProgram = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementPricingProgram]; 

			BasePriceClass.Instance.ConcreteRoles.Description = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			OneTimeChargeClass.Instance.ConcreteRoles.Description = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			UtilizationChargeClass.Instance.ConcreteRoles.Description = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			SurchargeComponentClass.Instance.ConcreteRoles.Description = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			RecurringChargeClass.Instance.ConcreteRoles.Description = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			DiscountComponentClass.Instance.ConcreteRoles.Description = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.Description = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			BasePriceClass.Instance.ConcreteRoles.Currency = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 
			OneTimeChargeClass.Instance.ConcreteRoles.Currency = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 
			UtilizationChargeClass.Instance.ConcreteRoles.Currency = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 
			SurchargeComponentClass.Instance.ConcreteRoles.Currency = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 
			RecurringChargeClass.Instance.ConcreteRoles.Currency = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 
			DiscountComponentClass.Instance.ConcreteRoles.Currency = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.Currency = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			BasePriceClass.Instance.ConcreteRoles.OrderKind = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderKind]; 
			OneTimeChargeClass.Instance.ConcreteRoles.OrderKind = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderKind]; 
			UtilizationChargeClass.Instance.ConcreteRoles.OrderKind = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderKind]; 
			SurchargeComponentClass.Instance.ConcreteRoles.OrderKind = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderKind]; 
			RecurringChargeClass.Instance.ConcreteRoles.OrderKind = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderKind]; 
			DiscountComponentClass.Instance.ConcreteRoles.OrderKind = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderKind]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.OrderKind = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderKind]; 

			BasePriceClass.Instance.ConcreteRoles.OrderValue = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderValue]; 
			OneTimeChargeClass.Instance.ConcreteRoles.OrderValue = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderValue]; 
			UtilizationChargeClass.Instance.ConcreteRoles.OrderValue = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderValue]; 
			SurchargeComponentClass.Instance.ConcreteRoles.OrderValue = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderValue]; 
			RecurringChargeClass.Instance.ConcreteRoles.OrderValue = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderValue]; 
			DiscountComponentClass.Instance.ConcreteRoles.OrderValue = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderValue]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.OrderValue = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderValue]; 

			BasePriceClass.Instance.ConcreteRoles.Price = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Price]; 
			OneTimeChargeClass.Instance.ConcreteRoles.Price = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Price]; 
			UtilizationChargeClass.Instance.ConcreteRoles.Price = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Price]; 
			SurchargeComponentClass.Instance.ConcreteRoles.Price = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Price]; 
			RecurringChargeClass.Instance.ConcreteRoles.Price = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Price]; 
			DiscountComponentClass.Instance.ConcreteRoles.Price = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Price]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.Price = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Price]; 

			BasePriceClass.Instance.ConcreteRoles.ProductCategory = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 
			OneTimeChargeClass.Instance.ConcreteRoles.ProductCategory = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 
			UtilizationChargeClass.Instance.ConcreteRoles.ProductCategory = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 
			SurchargeComponentClass.Instance.ConcreteRoles.ProductCategory = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 
			RecurringChargeClass.Instance.ConcreteRoles.ProductCategory = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 
			DiscountComponentClass.Instance.ConcreteRoles.ProductCategory = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.ProductCategory = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			BasePriceClass.Instance.ConcreteRoles.SalesChannel = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 
			OneTimeChargeClass.Instance.ConcreteRoles.SalesChannel = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 
			UtilizationChargeClass.Instance.ConcreteRoles.SalesChannel = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 
			SurchargeComponentClass.Instance.ConcreteRoles.SalesChannel = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 
			RecurringChargeClass.Instance.ConcreteRoles.SalesChannel = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 
			DiscountComponentClass.Instance.ConcreteRoles.SalesChannel = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.SalesChannel = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 


		}

		internal class RolesType
		{
			internal RoleType GeographicBoundary;
			internal RoleType Rate;
			internal RoleType RevenueValueBreak;
			internal RoleType PartyClassification;
			internal RoleType OrderQuantityBreak;
			internal RoleType PackageQuantityBreak;
			internal RoleType Product;
			internal RoleType RevenueQuantityBreak;
			internal RoleType SpecifiedFor;
			internal RoleType ProductFeature;
			internal RoleType AgreementPricingProgram;
			internal RoleType Description;
			internal RoleType Currency;
			internal RoleType OrderKind;
			internal RoleType OrderValue;
			internal RoleType Price;
			internal RoleType ProductCategory;
			internal RoleType SalesChannel;

		}
	}public partial class OrdinalClass : Class
	{
		public static OrdinalClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrdinalClass() : base(AppsDomain.Instance, new Guid("385a2ae6-368c-4c3f-ad34-f8d69d8ca6cd"))
        {
			this.SingularName = "Ordinal";
			this.PluralName = "Ordinals";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("aea7b3cb-d7c2-4ea6-ade9-c15beaf0af3a"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CitizenshipClass : Class
	{
		public static CitizenshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CitizenshipClass() : base(AppsDomain.Instance, new Guid("38b0ac1b-497c-4286-976e-64b3d523ad9d"))
        {
			this.SingularName = "Citizenship";
			this.PluralName = "Citizenships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("e0c43af5-68f7-4919-85df-3ad144b0520d"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CitizenshipPassport = new RelationType(AppsDomain.Instance, new Guid("45d0dd4b-6d8c-4727-b38b-f7ed850023c1"), new Guid("3944907d-5815-46a3-b380-08a78b637995"), new Guid("d60e6859-26fd-4d01-8458-221e845b75da"));
			CitizenshipPassport.AssignedMultiplicity = Multiplicity.OneToMany;
			CitizenshipPassport.IsIndexed = true;

			CitizenshipPassport.AssociationType.ObjectType = this;

			CitizenshipPassport.RoleType.ObjectType = PassportClass.Instance;;
			CitizenshipPassport.RoleType.AssignedSingularName = "Passport";
			CitizenshipPassport.RoleType.AssignedPluralName = "Passports";
			this.Roles.Passport = CitizenshipPassport.RoleType;

			var CitizenshipCountry = new RelationType(AppsDomain.Instance, new Guid("ca2b2d3e-ba3c-4e92-a86f-92d5d47b8e01"), new Guid("f2b5857f-064b-4b4d-bf7f-877a46e015e3"), new Guid("c477d58e-d187-4c8c-af20-5f845e143898"));
			CitizenshipCountry.AssignedMultiplicity = Multiplicity.ManyToOne;
			CitizenshipCountry.IsIndexed = true;

			CitizenshipCountry.AssociationType.ObjectType = this;

			CitizenshipCountry.RoleType.ObjectType = CountryClass.Instance;;
			CitizenshipCountry.RoleType.AssignedSingularName = "Country";
			CitizenshipCountry.RoleType.AssignedPluralName = "Countries";
			this.Roles.Country = CitizenshipCountry.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CitizenshipClass.Instance.ConcreteRoles.Passport = CitizenshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Passport]; 

			CitizenshipClass.Instance.ConcreteRoles.Country = CitizenshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Country]; 


		}

		internal class RolesType
		{
			internal RoleType Passport;
			internal RoleType Country;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Passport;
			internal ConcreteRoleType Country;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartyProductRevenueClass : Class
	{
		public static PartyProductRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyProductRevenueClass() : base(AppsDomain.Instance, new Guid("3a0364f4-d872-4c47-a3ef-73d624128693"))
        {
			this.SingularName = "PartyProductRevenue";
			this.PluralName = "PartyProductRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7a91d7f5-e4ac-4df9-a81d-01358d7e605f"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ea9dfdd5-9c03-4001-b5bb-565630b41858"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyProductRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("3f8b0163-f038-4f3e-b426-e72ddeee3581"), new Guid("c4f6804f-46db-4007-8873-ef37652ce8b7"), new Guid("51febfc1-c684-47d5-b1cb-9e43405c14d8"));
			PartyProductRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductRevenueRevenue.AssociationType.ObjectType = this;

			PartyProductRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyProductRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			PartyProductRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			PartyProductRevenueRevenue.RoleType.Scale = 2;
			PartyProductRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = PartyProductRevenueRevenue.RoleType;

			var PartyProductRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("5428d606-6bd8-4090-aea0-25e042afad5c"), new Guid("052f574b-477c-488c-87c0-6c2edd882b1a"), new Guid("cc9d93ce-a2aa-409d-951e-a929dea264d7"));
			PartyProductRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductRevenueMonth.AssociationType.ObjectType = this;

			PartyProductRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartyProductRevenueMonth.RoleType.AssignedSingularName = "Month";
			PartyProductRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = PartyProductRevenueMonth.RoleType;

			var PartyProductRevenueYear = new RelationType(AppsDomain.Instance, new Guid("5b22f74d-19eb-46f4-ac0b-1288bd00538c"), new Guid("bdb224cb-a727-4598-9ed8-7f8cb575cb47"), new Guid("5be79e8e-c413-43ae-b524-e1a70641ddc3"));
			PartyProductRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductRevenueYear.IsIndexed = true;

			PartyProductRevenueYear.AssociationType.ObjectType = this;

			PartyProductRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartyProductRevenueYear.RoleType.AssignedSingularName = "Year";
			PartyProductRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = PartyProductRevenueYear.RoleType;

			var PartyProductRevenuePartyProductName = new RelationType(AppsDomain.Instance, new Guid("8cb4b613-88f7-4767-90c2-1a4fd4e8a368"), new Guid("3ba77a3f-1fac-441b-b498-5a7187c386a0"), new Guid("3b2b5aff-ab2c-4c5e-b24f-42f4463f00a7"));
			PartyProductRevenuePartyProductName.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductRevenuePartyProductName.AssociationType.ObjectType = this;

			PartyProductRevenuePartyProductName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartyProductRevenuePartyProductName.RoleType.AssignedSingularName = "PartyProductName";
			PartyProductRevenuePartyProductName.RoleType.AssignedPluralName = "PartyProductNames";
			PartyProductRevenuePartyProductName.RoleType.Size = 256;
			this.Roles.PartyProductName = PartyProductRevenuePartyProductName.RoleType;

			var PartyProductRevenueQuantity = new RelationType(AppsDomain.Instance, new Guid("8edddcd2-07f2-47dc-8b5a-c63401ea5042"), new Guid("fc01ed7e-157b-4d5a-824c-8406530f5cf7"), new Guid("559fc116-0a38-431e-acbc-1281bef6b503"));
			PartyProductRevenueQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductRevenueQuantity.AssociationType.ObjectType = this;

			PartyProductRevenueQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyProductRevenueQuantity.RoleType.AssignedSingularName = "Quantity";
			PartyProductRevenueQuantity.RoleType.AssignedPluralName = "Quantities";
			PartyProductRevenueQuantity.RoleType.Scale = 2;
			PartyProductRevenueQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = PartyProductRevenueQuantity.RoleType;

			var PartyProductRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("98ad9944-62a5-4045-b4ba-0317240f5a61"), new Guid("297ff711-7ebd-45e0-87ed-2c68e8c71fce"), new Guid("8bb7005b-3d03-4ecd-b3d0-413a814f682a"));
			PartyProductRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductRevenueCurrency.IsIndexed = true;

			PartyProductRevenueCurrency.AssociationType.ObjectType = this;

			PartyProductRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PartyProductRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			PartyProductRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PartyProductRevenueCurrency.RoleType;

			var PartyProductRevenueParty = new RelationType(AppsDomain.Instance, new Guid("b2bad0dc-c3d2-498d-a434-dfbe2c29d903"), new Guid("8bc50d0b-dacb-499c-92ed-a27f0bced17c"), new Guid("eae57a6c-8efe-4e55-b18e-10d2ca0e3296"));
			PartyProductRevenueParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductRevenueParty.IsIndexed = true;

			PartyProductRevenueParty.AssociationType.ObjectType = this;

			PartyProductRevenueParty.RoleType.ObjectType = PartyInterface.Instance;;
			PartyProductRevenueParty.RoleType.AssignedSingularName = "Party";
			PartyProductRevenueParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = PartyProductRevenueParty.RoleType;

			var PartyProductRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("bfca3b6f-a394-4f06-b04f-a29bcd4bade7"), new Guid("e048ce53-554c-4303-a13d-c27d8ea73c6d"), new Guid("f3ddc5c1-5281-4b42-bb2c-5f4ddbcea002"));
			PartyProductRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductRevenueInternalOrganisation.IsIndexed = true;

			PartyProductRevenueInternalOrganisation.AssociationType.ObjectType = this;

			PartyProductRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PartyProductRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PartyProductRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PartyProductRevenueInternalOrganisation.RoleType;

			var PartyProductRevenueProduct = new RelationType(AppsDomain.Instance, new Guid("ff1b20d3-602b-4f43-92c7-d3f412950672"), new Guid("3bdf82fa-e7c4-4ab4-b766-af73c6a4ce27"), new Guid("a1587822-ec41-4bdc-8655-491f5012ac1b"));
			PartyProductRevenueProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductRevenueProduct.IsIndexed = true;

			PartyProductRevenueProduct.AssociationType.ObjectType = this;

			PartyProductRevenueProduct.RoleType.ObjectType = ProductInterface.Instance;;
			PartyProductRevenueProduct.RoleType.AssignedSingularName = "Product";
			PartyProductRevenueProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = PartyProductRevenueProduct.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyProductRevenueClass.Instance.ConcreteRoles.Revenue = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			PartyProductRevenueClass.Instance.ConcreteRoles.Month = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			PartyProductRevenueClass.Instance.ConcreteRoles.Year = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			PartyProductRevenueClass.Instance.ConcreteRoles.PartyProductName = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyProductName]; 

			PartyProductRevenueClass.Instance.ConcreteRoles.Quantity = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			PartyProductRevenueClass.Instance.ConcreteRoles.Currency = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			PartyProductRevenueClass.Instance.ConcreteRoles.Party = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			PartyProductRevenueClass.Instance.ConcreteRoles.InternalOrganisation = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			PartyProductRevenueClass.Instance.ConcreteRoles.Product = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 


		}

		internal class RolesType
		{
			internal RoleType Revenue;
			internal RoleType Month;
			internal RoleType Year;
			internal RoleType PartyProductName;
			internal RoleType Quantity;
			internal RoleType Currency;
			internal RoleType Party;
			internal RoleType InternalOrganisation;
			internal RoleType Product;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType PartyProductName;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ShipmentMethodClass : Class
	{
		public static ShipmentMethodClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ShipmentMethodClass() : base(AppsDomain.Instance, new Guid("3a3e6acf-48f4-4a33-848c-0c77cb18693a"))
        {
			this.SingularName = "ShipmentMethod";
			this.PluralName = "ShipmentMethods";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f4b3473c-64ba-40aa-92a7-f64ce7441fce"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class OrganisationClass : Class
	{
		public static OrganisationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrganisationClass() : base(AppsDomain.Instance, new Guid("3a5dcec7-308f-48c7-afee-35d38415aa0b"))
        {
			this.SingularName = "Organisation";
			this.PluralName = "Organisations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1a582f73-918e-4b22-8f64-0528b8e3bee5"))
			{
				Subtype = Instance,
				Supertype = PartyInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrganisationLegalForm = new RelationType(AppsDomain.Instance, new Guid("1c8bf2e3-6794-47c8-990c-f124d47653fb"), new Guid("d60f70d2-a17e-47d9-bccc-7971f5ef776d"), new Guid("d0f185d6-1ae2-40bf-a95e-6fde7ae10fa9"));
			OrganisationLegalForm.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationLegalForm.IsIndexed = true;

			OrganisationLegalForm.AssociationType.ObjectType = this;

			OrganisationLegalForm.RoleType.ObjectType = LegalFormClass.Instance;;
			OrganisationLegalForm.RoleType.AssignedSingularName = "LegalForm";
			OrganisationLegalForm.RoleType.AssignedPluralName = "LegalForms";
			this.Roles.LegalForm = OrganisationLegalForm.RoleType;

			var OrganisationName = new RelationType(AppsDomain.Instance, new Guid("2cc74901-cda5-4185-bcd8-d51c745a8437"), new Guid("896a4589-4caf-4cd2-8365-c4200b12f519"), new Guid("baa30557-79ff-406d-b374-9d32519b2de7"));
			OrganisationName.AssignedMultiplicity = Multiplicity.OneToOne;
			OrganisationName.IsIndexed = true;

			OrganisationName.AssociationType.ObjectType = this;

			OrganisationName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrganisationName.RoleType.AssignedSingularName = "Name";
			OrganisationName.RoleType.AssignedPluralName = "Names";
			OrganisationName.RoleType.Size = 256;
			this.Roles.Name = OrganisationName.RoleType;

			var OrganisationCustomerContactUserGroup = new RelationType(AppsDomain.Instance, new Guid("4cc8bc02-8305-4bd3-b0c7-e9b3ecaf4bd2"), new Guid("c2be4896-2eae-40fa-9300-b548741407f2"), new Guid("a26de636-8efa-4df4-b56d-225ac25f31a8"));
			OrganisationCustomerContactUserGroup.AssignedMultiplicity = Multiplicity.OneToOne;
			OrganisationCustomerContactUserGroup.IsDerived = true;
			OrganisationCustomerContactUserGroup.IsIndexed = true;

			OrganisationCustomerContactUserGroup.AssociationType.ObjectType = this;

			OrganisationCustomerContactUserGroup.RoleType.ObjectType = UserGroupClass.Instance;;
			OrganisationCustomerContactUserGroup.RoleType.AssignedSingularName = "CustomerContactUserGroup";
			OrganisationCustomerContactUserGroup.RoleType.AssignedPluralName = "CustomerContactUserGroups";
			this.Roles.CustomerContactUserGroup = OrganisationCustomerContactUserGroup.RoleType;

			var OrganisationCurrentContact = new RelationType(AppsDomain.Instance, new Guid("59500ed1-2de5-45ff-bec7-275c1941d153"), new Guid("bd699a2c-e1dc-48dd-9d0a-c1aec3b18f44"), new Guid("9501b51f-92e1-4ab8-862b-c6b6fd469b68"));
			OrganisationCurrentContact.AssignedMultiplicity = Multiplicity.ManyToMany;
			OrganisationCurrentContact.IsDerived = true;
			OrganisationCurrentContact.IsIndexed = true;

			OrganisationCurrentContact.AssociationType.ObjectType = this;

			OrganisationCurrentContact.RoleType.ObjectType = PersonClass.Instance;;
			OrganisationCurrentContact.RoleType.AssignedSingularName = "CurrentContact";
			OrganisationCurrentContact.RoleType.AssignedPluralName = "CurrentContacts";
			this.Roles.CurrentContact = OrganisationCurrentContact.RoleType;

			var OrganisationLogoImage = new RelationType(AppsDomain.Instance, new Guid("786a74b0-015a-47db-8d3a-c790b326cc7d"), new Guid("6f7363d4-46c5-4bcb-b19c-314733af9e9e"), new Guid("1c339b5d-6f97-41bd-952a-3706d383c3d8"));
			OrganisationLogoImage.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationLogoImage.IsIndexed = true;

			OrganisationLogoImage.AssociationType.ObjectType = this;

			OrganisationLogoImage.RoleType.ObjectType = ImageClass.Instance;;
			OrganisationLogoImage.RoleType.AssignedSingularName = "LogoImage";
			OrganisationLogoImage.RoleType.AssignedPluralName = "LogoImages";
			this.Roles.LogoImage = OrganisationLogoImage.RoleType;

			var OrganisationPartnerContactUserGroup = new RelationType(AppsDomain.Instance, new Guid("78837f12-05d3-49f1-a607-43e96120bcf0"), new Guid("0df49189-f6a1-49cf-97c5-ab40e3087b6e"), new Guid("d03e4b6a-6741-4290-a590-18e32b4a6e43"));
			OrganisationPartnerContactUserGroup.AssignedMultiplicity = Multiplicity.OneToOne;
			OrganisationPartnerContactUserGroup.IsDerived = true;
			OrganisationPartnerContactUserGroup.IsIndexed = true;

			OrganisationPartnerContactUserGroup.AssociationType.ObjectType = this;

			OrganisationPartnerContactUserGroup.RoleType.ObjectType = UserGroupClass.Instance;;
			OrganisationPartnerContactUserGroup.RoleType.AssignedSingularName = "PartnerContactUserGroup";
			OrganisationPartnerContactUserGroup.RoleType.AssignedPluralName = "PartnerContactGroups";
			this.Roles.PartnerContactUserGroup = OrganisationPartnerContactUserGroup.RoleType;

			var OrganisationTaxNumber = new RelationType(AppsDomain.Instance, new Guid("813633df-c6cb-44a6-9fdf-579aa8180ebd"), new Guid("4e4c1ca5-43e1-4567-8f1e-636197ca72b7"), new Guid("e5c40212-c5c5-44a1-8f18-f5d3dbeec9ca"));
			OrganisationTaxNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			OrganisationTaxNumber.AssociationType.ObjectType = this;

			OrganisationTaxNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrganisationTaxNumber.RoleType.AssignedSingularName = "TaxNumber";
			OrganisationTaxNumber.RoleType.AssignedPluralName = "TaxNumbers";
			OrganisationTaxNumber.RoleType.Size = 256;
			this.Roles.TaxNumber = OrganisationTaxNumber.RoleType;

			var OrganisationSupplierContactUserGroup = new RelationType(AppsDomain.Instance, new Guid("af80efaf-7ef1-4625-9717-564eef0504c4"), new Guid("ff2bb57b-4aaf-4c61-b282-6ce0852e8546"), new Guid("844af39b-fae2-4d94-9e67-ff6d97152736"));
			OrganisationSupplierContactUserGroup.AssignedMultiplicity = Multiplicity.OneToOne;
			OrganisationSupplierContactUserGroup.IsDerived = true;
			OrganisationSupplierContactUserGroup.IsIndexed = true;

			OrganisationSupplierContactUserGroup.AssociationType.ObjectType = this;

			OrganisationSupplierContactUserGroup.RoleType.ObjectType = UserGroupClass.Instance;;
			OrganisationSupplierContactUserGroup.RoleType.AssignedSingularName = "SupplierContactUserGroup";
			OrganisationSupplierContactUserGroup.RoleType.AssignedPluralName = "SupplierContactUserGroups";
			this.Roles.SupplierContactUserGroup = OrganisationSupplierContactUserGroup.RoleType;

			var OrganisationOrganisationClassification = new RelationType(AppsDomain.Instance, new Guid("d0ac426e-4775-4f2f-8055-08cb84e8e9bd"), new Guid("e8677033-8927-4a52-b210-9a98558625ba"), new Guid("8e2fd09a-eda9-47e2-8908-2527e947ffd1"));
			OrganisationOrganisationClassification.AssignedMultiplicity = Multiplicity.ManyToMany;
			OrganisationOrganisationClassification.IsIndexed = true;

			OrganisationOrganisationClassification.AssociationType.ObjectType = this;

			OrganisationOrganisationClassification.RoleType.ObjectType = OrganisationClassificationInterface.Instance;;
			this.Roles.OrganisationClassification = OrganisationOrganisationClassification.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrganisationClass.Instance.ConcreteRoles.LegalForm = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LegalForm]; 

			OrganisationClass.Instance.ConcreteRoles.Name = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			OrganisationClass.Instance.ConcreteRoles.CustomerContactUserGroup = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerContactUserGroup]; 

			OrganisationClass.Instance.ConcreteRoles.CurrentContact = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentContact]; 

			OrganisationClass.Instance.ConcreteRoles.LogoImage = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LogoImage]; 

			OrganisationClass.Instance.ConcreteRoles.PartnerContactUserGroup = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartnerContactUserGroup]; 

			OrganisationClass.Instance.ConcreteRoles.TaxNumber = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TaxNumber]; 

			OrganisationClass.Instance.ConcreteRoles.SupplierContactUserGroup = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SupplierContactUserGroup]; 

			OrganisationClass.Instance.ConcreteRoles.OrganisationClassification = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrganisationClassification]; 


		}

		internal class RolesType
		{
			internal RoleType LegalForm;
			internal RoleType Name;
			internal RoleType CustomerContactUserGroup;
			internal RoleType CurrentContact;
			internal RoleType LogoImage;
			internal RoleType PartnerContactUserGroup;
			internal RoleType TaxNumber;
			internal RoleType SupplierContactUserGroup;
			internal RoleType OrganisationClassification;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LegalForm;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType CustomerContactUserGroup;
			internal ConcreteRoleType CurrentContact;
			internal ConcreteRoleType LogoImage;
			internal ConcreteRoleType PartnerContactUserGroup;
			internal ConcreteRoleType TaxNumber;
			internal ConcreteRoleType SupplierContactUserGroup;
			internal ConcreteRoleType OrganisationClassification;
			internal ConcreteRoleType YTDRevenue;
			internal ConcreteRoleType LastYearsRevenue;
			internal ConcreteRoleType BillingInquiriesFax;
			internal ConcreteRoleType Qualification;
			internal ConcreteRoleType HomeAddress;
			internal ConcreteRoleType SalesOffice;
			internal ConcreteRoleType OrderInquiriesFax;
			internal ConcreteRoleType CurrentSalesRep;
			internal ConcreteRoleType PartyContactMechanism;
			internal ConcreteRoleType ShippingInquiriesFax;
			internal ConcreteRoleType ShippingInquiriesPhone;
			internal ConcreteRoleType BillingAccount;
			internal ConcreteRoleType OrderInquiriesPhone;
			internal ConcreteRoleType PartySkill;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType ExcludeFromDunning;
			internal ConcreteRoleType BankAccount;
			internal ConcreteRoleType BillingAddress;
			internal ConcreteRoleType DefaultShipmentMethod;
			internal ConcreteRoleType Resume;
			internal ConcreteRoleType HeadQuarter;
			internal ConcreteRoleType PersonalEmailAddress;
			internal ConcreteRoleType CellPhoneNumber;
			internal ConcreteRoleType BillingInquiriesPhone;
			internal ConcreteRoleType PartyName;
			internal ConcreteRoleType OrderAddress;
			internal ConcreteRoleType InternetAddress;
			internal ConcreteRoleType Content;
			internal ConcreteRoleType CreditCard;
			internal ConcreteRoleType ShippingAddress;
			internal ConcreteRoleType OpenOrderAmount;
			internal ConcreteRoleType GeneralFaxNumber;
			internal ConcreteRoleType DefaultPaymentMethod;
			internal ConcreteRoleType GeneralPhoneNumber;
			internal ConcreteRoleType PreferredCurrency;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType Locale;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType OwnerSecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ResponsibilityClass : Class
	{
		public static ResponsibilityClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ResponsibilityClass() : base(AppsDomain.Instance, new Guid("3aa7bf17-bd02-4587-9006-177845ae69df"))
        {
			this.SingularName = "Responsibility";
			this.PluralName = "Responsibilities";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4347b57b-e1a2-46bf-9208-e3d3f1177ea2"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ResponsibilityDescription = new RelationType(AppsDomain.Instance, new Guid("a570dd47-5bb6-4a37-b73e-3a9f7b3f37ee"), new Guid("0f98ce04-447c-497c-b63b-f943eb818c84"), new Guid("9ccfe2ef-4980-43d8-9c5b-247c93c902b7"));
			ResponsibilityDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			ResponsibilityDescription.AssociationType.ObjectType = this;

			ResponsibilityDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ResponsibilityDescription.RoleType.AssignedSingularName = "Description";
			ResponsibilityDescription.RoleType.AssignedPluralName = "Descriptions";
			ResponsibilityDescription.RoleType.Size = 256;
			this.Roles.Description = ResponsibilityDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ResponsibilityClass.Instance.ConcreteRoles.Description = ResponsibilityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class VatReturnBoxTypeClass : Class
	{
		public static VatReturnBoxTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VatReturnBoxTypeClass() : base(AppsDomain.Instance, new Guid("3b233161-d2a8-4d8f-a293-09d8a2bea3e2"))
        {
			this.SingularName = "VatReturnBoxType";
			this.PluralName = "VatReturnBoxTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("99ac9c3f-6404-4cac-a2d7-25c3a0fdd146"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var VatReturnBoxTypeType = new RelationType(AppsDomain.Instance, new Guid("95935a8e-fac5-4798-ba2d-1408d231f97b"), new Guid("d40e1048-b97b-4bae-9319-f4c05ec40484"), new Guid("44678a1f-9af2-404f-8eec-b50fb62737cb"));
			VatReturnBoxTypeType.AssignedMultiplicity = Multiplicity.OneToOne;
			VatReturnBoxTypeType.AssociationType.ObjectType = this;

			VatReturnBoxTypeType.RoleType.ObjectType = AllorsStringUnit.Instance;;
			VatReturnBoxTypeType.RoleType.AssignedSingularName = "Type";
			VatReturnBoxTypeType.RoleType.AssignedPluralName = "Types";
			VatReturnBoxTypeType.RoleType.Size = 256;
			this.Roles.Type = VatReturnBoxTypeType.RoleType;


		}

		internal override void SetRelationTypes()
		{
			VatReturnBoxTypeClass.Instance.ConcreteRoles.Type = VatReturnBoxTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Type]; 


		}

		internal class RolesType
		{
			internal RoleType Type;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Type;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DebitCreditConstantClass : Class
	{
		public static DebitCreditConstantClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DebitCreditConstantClass() : base(AppsDomain.Instance, new Guid("3b330b42-b359-4de7-a084-cc96ce1e6420"))
        {
			this.SingularName = "DebitCreditConstant";
			this.PluralName = "DebitCreditConstants";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("832cc43a-eb35-471e-811a-9470cf653fb8"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("cdeaf33a-6dff-4d48-af5d-39de3877c4a7"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class WorkEffortFixedAssetAssignmentClass : Class
	{
		public static WorkEffortFixedAssetAssignmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortFixedAssetAssignmentClass() : base(AppsDomain.Instance, new Guid("3b43da7f-5252-4824-85fe-c85d6864838a"))
        {
			this.SingularName = "WorkEffortFixedAssetAssignment";
			this.PluralName = "WorkEffortFixedAssetAssignments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7ecb2da8-097f-4a7d-b6b7-ddcfa4223aca"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("8a9894fe-bfa8-41ea-bfa1-39965094a6ae"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("b3afcd5a-3106-4e61-9b1f-9e2b1fe7193b"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortFixedAssetAssignmentAssetAssignmentStatus = new RelationType(AppsDomain.Instance, new Guid("2b6eca80-294c-4a2d-a15c-a57c0c815aa1"), new Guid("1c5736df-6218-45ce-8f86-f668d9dc7fe2"), new Guid("cfb5334c-5843-45f4-90f7-f7ea813e7ec4"));
			WorkEffortFixedAssetAssignmentAssetAssignmentStatus.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortFixedAssetAssignmentAssetAssignmentStatus.IsIndexed = true;

			WorkEffortFixedAssetAssignmentAssetAssignmentStatus.AssociationType.ObjectType = this;

			WorkEffortFixedAssetAssignmentAssetAssignmentStatus.RoleType.ObjectType = AssetAssignmentStatusClass.Instance;;
			WorkEffortFixedAssetAssignmentAssetAssignmentStatus.RoleType.AssignedSingularName = "AssetAssignmentStatus";
			WorkEffortFixedAssetAssignmentAssetAssignmentStatus.RoleType.AssignedPluralName = "AssetAssignmentStatuses";
			this.Roles.AssetAssignmentStatus = WorkEffortFixedAssetAssignmentAssetAssignmentStatus.RoleType;

			var WorkEffortFixedAssetAssignmentAssignment = new RelationType(AppsDomain.Instance, new Guid("2d7dd4b3-a0bd-45aa-9d1a-a0ffa4a98061"), new Guid("6d66eb02-1eea-4b2e-8712-be6e1dde98be"), new Guid("e2327e4a-dd69-4e90-983b-dcf29b799201"));
			WorkEffortFixedAssetAssignmentAssignment.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortFixedAssetAssignmentAssignment.IsIndexed = true;

			WorkEffortFixedAssetAssignmentAssignment.AssociationType.ObjectType = this;

			WorkEffortFixedAssetAssignmentAssignment.RoleType.ObjectType = WorkEffortInterface.Instance;;
			WorkEffortFixedAssetAssignmentAssignment.RoleType.AssignedSingularName = "Assignment";
			WorkEffortFixedAssetAssignmentAssignment.RoleType.AssignedPluralName = "Assignment";
			this.Roles.Assignment = WorkEffortFixedAssetAssignmentAssignment.RoleType;

			var WorkEffortFixedAssetAssignmentAllocatedCost = new RelationType(AppsDomain.Instance, new Guid("a2816fd1-babb-480c-8e29-0f7192aaff71"), new Guid("c02a3dc0-c977-4893-b7e1-691cfe0c1b03"), new Guid("c097dea3-8f6f-456c-b4cc-7c87c5441517"));
			WorkEffortFixedAssetAssignmentAllocatedCost.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortFixedAssetAssignmentAllocatedCost.AssociationType.ObjectType = this;

			WorkEffortFixedAssetAssignmentAllocatedCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortFixedAssetAssignmentAllocatedCost.RoleType.AssignedSingularName = "AllocatedCost";
			WorkEffortFixedAssetAssignmentAllocatedCost.RoleType.AssignedPluralName = "AllocatedCosts";
			WorkEffortFixedAssetAssignmentAllocatedCost.RoleType.Scale = 2;
			WorkEffortFixedAssetAssignmentAllocatedCost.RoleType.Precision = 19;
			this.Roles.AllocatedCost = WorkEffortFixedAssetAssignmentAllocatedCost.RoleType;

			var WorkEffortFixedAssetAssignmentFixedAsset = new RelationType(AppsDomain.Instance, new Guid("e90cb555-e6d9-4d7d-8d98-6f9c28c4bc14"), new Guid("739ac865-7c8c-45e3-b240-349e4092a56b"), new Guid("4087a04c-3f31-4c82-b7b1-bd5c7818981f"));
			WorkEffortFixedAssetAssignmentFixedAsset.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortFixedAssetAssignmentFixedAsset.IsIndexed = true;

			WorkEffortFixedAssetAssignmentFixedAsset.AssociationType.ObjectType = this;

			WorkEffortFixedAssetAssignmentFixedAsset.RoleType.ObjectType = FixedAssetInterface.Instance;;
			WorkEffortFixedAssetAssignmentFixedAsset.RoleType.AssignedSingularName = "FixedAsset";
			WorkEffortFixedAssetAssignmentFixedAsset.RoleType.AssignedPluralName = "FixedAssets";
			this.Roles.FixedAsset = WorkEffortFixedAssetAssignmentFixedAsset.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoles.AssetAssignmentStatus = WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssetAssignmentStatus]; 

			WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoles.Assignment = WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Assignment]; 

			WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoles.AllocatedCost = WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AllocatedCost]; 

			WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoles.FixedAsset = WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FixedAsset]; 


		}

		internal class RolesType
		{
			internal RoleType AssetAssignmentStatus;
			internal RoleType Assignment;
			internal RoleType AllocatedCost;
			internal RoleType FixedAsset;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AssetAssignmentStatus;
			internal ConcreteRoleType Assignment;
			internal ConcreteRoleType AllocatedCost;
			internal ConcreteRoleType FixedAsset;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class VatCalculationMethodClass : Class
	{
		public static VatCalculationMethodClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VatCalculationMethodClass() : base(AppsDomain.Instance, new Guid("3b73eea7-6455-4fe5-87c0-99c852f57e6b"))
        {
			this.SingularName = "VatCalculationMethod";
			this.PluralName = "VatCalculationMethods";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("16cfed20-b456-4bdd-b692-0184175ce67a"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class GeographicBoundaryCompositeInterface: Interface
	{
		public static GeographicBoundaryCompositeInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal GeographicBoundaryCompositeInterface() : base(AppsDomain.Instance, new Guid("3b7ac95a-fdab-488d-b599-17ef9fcf33b0"))
        {
			this.SingularName = "GeographicBoundaryComposite";
			this.PluralName = "GeographicBoundariesComposites";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("65646d36-ab8f-4e94-8bf0-f2782eea1b1d"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var GeographicBoundaryCompositeAssociation = new RelationType(AppsDomain.Instance, new Guid("77d5f129-6096-45da-8b9f-39ef19276f1d"), new Guid("7484e00e-de39-4fbe-981a-aff3e693cf89"), new Guid("03ef822a-e2d3-43ba-9051-2c663593fb31"));
			GeographicBoundaryCompositeAssociation.AssignedMultiplicity = Multiplicity.ManyToMany;
			GeographicBoundaryCompositeAssociation.IsIndexed = true;

			GeographicBoundaryCompositeAssociation.AssociationType.ObjectType = this;

			GeographicBoundaryCompositeAssociation.RoleType.ObjectType = GeographicBoundaryInterface.Instance;;
			GeographicBoundaryCompositeAssociation.RoleType.AssignedSingularName = "Association";
			GeographicBoundaryCompositeAssociation.RoleType.AssignedPluralName = "Associations";
			this.Roles.Association = GeographicBoundaryCompositeAssociation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RegionClass.Instance.ConcreteRoles.Association = RegionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Association]; 
			SalesTerritoryClass.Instance.ConcreteRoles.Association = SalesTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Association]; 
			ServiceTerritoryClass.Instance.ConcreteRoles.Association = ServiceTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Association]; 


		}

		internal class RolesType
		{
			internal RoleType Association;

		}
	}public partial class InvoiceSequenceClass : Class
	{
		public static InvoiceSequenceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InvoiceSequenceClass() : base(AppsDomain.Instance, new Guid("3b8e751c-6778-44cb-93a0-d35b86b724e0"))
        {
			this.SingularName = "InvoiceSequence";
			this.PluralName = "InvoiceSequences";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a3187477-ee29-4b07-9d9a-e301a2e87619"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CustomerRelationshipClass : Class
	{
		public static CustomerRelationshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CustomerRelationshipClass() : base(AppsDomain.Instance, new Guid("3b9f21f4-2f2c-47a9-9c76-15f5ef4f5e00"))
        {
			this.SingularName = "CustomerRelationship";
			this.PluralName = "CustomerRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("295032a0-f46b-443a-82de-ecaee5c100cd"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CustomerRelationshipBlockedForDunning = new RelationType(AppsDomain.Instance, new Guid("009d073e-8c1b-4da5-8780-bd5bff43db0d"), new Guid("f7a9d8ed-4efa-4d39-a79d-ab1e3acda26c"), new Guid("bfdae8de-2880-47c5-afd1-93c9b9b24dab"));
			CustomerRelationshipBlockedForDunning.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerRelationshipBlockedForDunning.AssociationType.ObjectType = this;

			CustomerRelationshipBlockedForDunning.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			CustomerRelationshipBlockedForDunning.RoleType.AssignedSingularName = "BlockedForDunning";
			CustomerRelationshipBlockedForDunning.RoleType.AssignedPluralName = "BlockedsForDunning";
			this.Roles.BlockedForDunning = CustomerRelationshipBlockedForDunning.RoleType;

			var CustomerRelationshipInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("35f92e67-aedd-4e62-aa1b-57f6489c0083"), new Guid("995ccfb4-f1ca-4894-9fd9-fbf19e2226eb"), new Guid("96eaeb9a-8047-4068-9185-765fc0e48342"));
			CustomerRelationshipInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerRelationshipInternalOrganisation.IsIndexed = true;

			CustomerRelationshipInternalOrganisation.AssociationType.ObjectType = this;

			CustomerRelationshipInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			CustomerRelationshipInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			CustomerRelationshipInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = CustomerRelationshipInternalOrganisation.RoleType;

			var CustomerRelationshipAmountOverDue = new RelationType(AppsDomain.Instance, new Guid("42e3b2c4-376d-4e8b-bb49-2af031881ed0"), new Guid("bcdd31e8-8101-4b6b-8f13-a4397c43adfa"), new Guid("a9ddfe04-e5fd-4b22-9a9a-702dc0533731"));
			CustomerRelationshipAmountOverDue.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerRelationshipAmountOverDue.AssociationType.ObjectType = this;

			CustomerRelationshipAmountOverDue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			CustomerRelationshipAmountOverDue.RoleType.AssignedSingularName = "AmountOverDue";
			CustomerRelationshipAmountOverDue.RoleType.AssignedPluralName = "AmountsOverDue";
			CustomerRelationshipAmountOverDue.RoleType.Scale = 2;
			CustomerRelationshipAmountOverDue.RoleType.Precision = 19;
			this.Roles.AmountOverDue = CustomerRelationshipAmountOverDue.RoleType;

			var CustomerRelationshipCustomer = new RelationType(AppsDomain.Instance, new Guid("5c7c79e1-6b61-4f64-b8d1-608984f91268"), new Guid("9ce91d5f-12af-44a5-97a9-16c1b9986f67"), new Guid("74a36a15-f48a-4794-ac10-2c0860cc4ca1"));
			CustomerRelationshipCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerRelationshipCustomer.IsIndexed = true;

			CustomerRelationshipCustomer.AssociationType.ObjectType = this;

			CustomerRelationshipCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			CustomerRelationshipCustomer.RoleType.AssignedSingularName = "Customer";
			CustomerRelationshipCustomer.RoleType.AssignedPluralName = "Customers";
			this.Roles.Customer = CustomerRelationshipCustomer.RoleType;

			var CustomerRelationshipDunningType = new RelationType(AppsDomain.Instance, new Guid("76b46019-c145-403d-9f99-cd8e1001c968"), new Guid("6702ba13-81eb-4d23-b341-8fb84cf7e60f"), new Guid("079e6188-73d0-4161-8327-607554a42613"));
			CustomerRelationshipDunningType.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerRelationshipDunningType.IsIndexed = true;

			CustomerRelationshipDunningType.AssociationType.ObjectType = this;

			CustomerRelationshipDunningType.RoleType.ObjectType = DunningTypeClass.Instance;;
			CustomerRelationshipDunningType.RoleType.AssignedSingularName = "DunningType";
			CustomerRelationshipDunningType.RoleType.AssignedPluralName = "DunningTypes";
			this.Roles.DunningType = CustomerRelationshipDunningType.RoleType;

			var CustomerRelationshipAmountDue = new RelationType(AppsDomain.Instance, new Guid("894f4ff2-9c41-4201-ad36-ac10dafd65dd"), new Guid("c8a336f0-4fae-4ce6-a900-283066052ffd"), new Guid("11fa6c6e-c528-452c-adca-75f474d2f95b"));
			CustomerRelationshipAmountDue.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerRelationshipAmountDue.IsDerived = true;
			CustomerRelationshipAmountDue.AssociationType.ObjectType = this;

			CustomerRelationshipAmountDue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			CustomerRelationshipAmountDue.RoleType.AssignedSingularName = "AmountDue";
			CustomerRelationshipAmountDue.RoleType.AssignedPluralName = "AmountsDue";
			CustomerRelationshipAmountDue.RoleType.Scale = 2;
			CustomerRelationshipAmountDue.RoleType.Precision = 19;
			this.Roles.AmountDue = CustomerRelationshipAmountDue.RoleType;

			var CustomerRelationshipYTDRevenue = new RelationType(AppsDomain.Instance, new Guid("a484eb38-4beb-495c-9c54-522238e0e639"), new Guid("03c7d5c4-4c80-4511-9ab2-2745f3f17596"), new Guid("f4a2fdef-d91a-4c7e-94d5-ebe13ab94338"));
			CustomerRelationshipYTDRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerRelationshipYTDRevenue.IsDerived = true;
			CustomerRelationshipYTDRevenue.AssociationType.ObjectType = this;

			CustomerRelationshipYTDRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			CustomerRelationshipYTDRevenue.RoleType.AssignedSingularName = "YTDRevenue";
			CustomerRelationshipYTDRevenue.RoleType.AssignedPluralName = "YTDRevenues";
			CustomerRelationshipYTDRevenue.RoleType.Scale = 2;
			CustomerRelationshipYTDRevenue.RoleType.Precision = 19;
			this.Roles.YTDRevenue = CustomerRelationshipYTDRevenue.RoleType;

			var CustomerRelationshipLastReminderDate = new RelationType(AppsDomain.Instance, new Guid("af50ade8-5964-4963-819d-c87689c6434e"), new Guid("a06dda1c-d91d-4e27-b293-05cb53de65ec"), new Guid("7f6da6ca-b069-47f6-983c-6e33d65ffd0e"));
			CustomerRelationshipLastReminderDate.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerRelationshipLastReminderDate.AssociationType.ObjectType = this;

			CustomerRelationshipLastReminderDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CustomerRelationshipLastReminderDate.RoleType.AssignedSingularName = "LastReminderDate";
			CustomerRelationshipLastReminderDate.RoleType.AssignedPluralName = "LastReminderDates";
			this.Roles.LastReminderDate = CustomerRelationshipLastReminderDate.RoleType;

			var CustomerRelationshipCreditLimit = new RelationType(AppsDomain.Instance, new Guid("dd59ed76-b6da-49a3-8c3e-1edf4d1d0900"), new Guid("e2afe553-7bbd-4f81-97e8-7279defb49ca"), new Guid("b5e30743-6adc-4bf0-b547-72b17b79879c"));
			CustomerRelationshipCreditLimit.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerRelationshipCreditLimit.AssociationType.ObjectType = this;

			CustomerRelationshipCreditLimit.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			CustomerRelationshipCreditLimit.RoleType.AssignedSingularName = "CreditLimit";
			CustomerRelationshipCreditLimit.RoleType.AssignedPluralName = "CreditLimits";
			CustomerRelationshipCreditLimit.RoleType.Scale = 2;
			CustomerRelationshipCreditLimit.RoleType.Precision = 19;
			this.Roles.CreditLimit = CustomerRelationshipCreditLimit.RoleType;

			var CustomerRelationshipSubAccountNumber = new RelationType(AppsDomain.Instance, new Guid("e3a06a1c-998a-4871-8f0e-2f166eac6c7b"), new Guid("08dfdeb5-1a62-42d6-b8f3-16025960b09f"), new Guid("9400c681-2a68-4842-89fd-3c9ccb3f2a96"));
			CustomerRelationshipSubAccountNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerRelationshipSubAccountNumber.AssociationType.ObjectType = this;

			CustomerRelationshipSubAccountNumber.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			CustomerRelationshipSubAccountNumber.RoleType.AssignedSingularName = "SubAccountNumber";
			CustomerRelationshipSubAccountNumber.RoleType.AssignedPluralName = "SubAccountNumbers";
			this.Roles.SubAccountNumber = CustomerRelationshipSubAccountNumber.RoleType;

			var CustomerRelationshipLastYearsRevenue = new RelationType(AppsDomain.Instance, new Guid("e924ea41-ae61-4cf1-9bf4-4661497289c1"), new Guid("b6d5c0a6-f5b4-43df-952f-0a5f82b68b1f"), new Guid("d4bbb472-cf06-4569-9d91-00ee3a98eb41"));
			CustomerRelationshipLastYearsRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerRelationshipLastYearsRevenue.IsDerived = true;
			CustomerRelationshipLastYearsRevenue.AssociationType.ObjectType = this;

			CustomerRelationshipLastYearsRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			CustomerRelationshipLastYearsRevenue.RoleType.AssignedSingularName = "LastYearsRevenue";
			CustomerRelationshipLastYearsRevenue.RoleType.AssignedPluralName = "LastYearsRevenues";
			CustomerRelationshipLastYearsRevenue.RoleType.Scale = 2;
			CustomerRelationshipLastYearsRevenue.RoleType.Precision = 19;
			this.Roles.LastYearsRevenue = CustomerRelationshipLastYearsRevenue.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CustomerRelationshipClass.Instance.ConcreteRoles.BlockedForDunning = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BlockedForDunning]; 

			CustomerRelationshipClass.Instance.ConcreteRoles.InternalOrganisation = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			CustomerRelationshipClass.Instance.ConcreteRoles.AmountOverDue = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AmountOverDue]; 

			CustomerRelationshipClass.Instance.ConcreteRoles.Customer = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Customer]; 

			CustomerRelationshipClass.Instance.ConcreteRoles.DunningType = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DunningType]; 

			CustomerRelationshipClass.Instance.ConcreteRoles.AmountDue = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AmountDue]; 

			CustomerRelationshipClass.Instance.ConcreteRoles.YTDRevenue = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.YTDRevenue]; 

			CustomerRelationshipClass.Instance.ConcreteRoles.LastReminderDate = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastReminderDate]; 

			CustomerRelationshipClass.Instance.ConcreteRoles.CreditLimit = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreditLimit]; 

			CustomerRelationshipClass.Instance.ConcreteRoles.SubAccountNumber = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubAccountNumber]; 

			CustomerRelationshipClass.Instance.ConcreteRoles.LastYearsRevenue = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastYearsRevenue]; 


		}

		internal class RolesType
		{
			internal RoleType BlockedForDunning;
			internal RoleType InternalOrganisation;
			internal RoleType AmountOverDue;
			internal RoleType Customer;
			internal RoleType DunningType;
			internal RoleType AmountDue;
			internal RoleType YTDRevenue;
			internal RoleType LastReminderDate;
			internal RoleType CreditLimit;
			internal RoleType SubAccountNumber;
			internal RoleType LastYearsRevenue;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType BlockedForDunning;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType AmountOverDue;
			internal ConcreteRoleType Customer;
			internal ConcreteRoleType DunningType;
			internal ConcreteRoleType AmountDue;
			internal ConcreteRoleType YTDRevenue;
			internal ConcreteRoleType LastReminderDate;
			internal ConcreteRoleType CreditLimit;
			internal ConcreteRoleType SubAccountNumber;
			internal ConcreteRoleType LastYearsRevenue;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartyClassificationInterface: Interface
	{
		public static PartyClassificationInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PartyClassificationInterface() : base(AppsDomain.Instance, new Guid("3bb83aa5-e58a-4421-bdbc-3c9fa0b2324f"))
        {
			this.SingularName = "PartyClassification";
			this.PluralName = "PartyClassifications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ae6ca76c-ad6f-4568-a9c5-acc7784c6652"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PartyClassificationName = new RelationType(AppsDomain.Instance, new Guid("4f35ae7e-fe06-4a3b-abe1-adb78fcf2e6b"), new Guid("fd171d61-90ae-4169-8286-6054b82569a1"), new Guid("654f2aca-2eb7-495c-a739-82c38a629130"));
			PartyClassificationName.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyClassificationName.AssociationType.ObjectType = this;

			PartyClassificationName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartyClassificationName.RoleType.AssignedSingularName = "Name";
			PartyClassificationName.RoleType.AssignedPluralName = "Names";
			PartyClassificationName.RoleType.Size = 256;
			this.Roles.Name = PartyClassificationName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			IndustryClassificationClass.Instance.ConcreteRoles.Name = IndustryClassificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}
	}public partial class PartyInterface: Interface
	{
		public static PartyInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PartyInterface() : base(AppsDomain.Instance, new Guid("3bba6e5a-dc2d-4838-b6c4-881f6c8c3013"))
        {
			this.SingularName = "Party";
			this.PluralName = "Parties";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1923a622-1cc8-4a31-b8f3-e27b774d7d48"))
			{
				Subtype = Instance,
				Supertype = LocalisedInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("2191de50-3b5d-4e30-ae99-8c14147bb902"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("3f8cc951-1880-43ef-a334-d7ef3ad23178"))
			{
				Subtype = Instance,
				Supertype = SecurityTokenOwnerInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("9c34331c-4310-4927-84cd-e4f64210cd66"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PartyYTDRevenue = new RelationType(AppsDomain.Instance, new Guid("01771db8-e79c-4ce4-9d81-db3675e8708a"), new Guid("c6dbe58e-fa09-408b-9324-21fcec3b1900"), new Guid("aebbe259-2619-45bb-9751-68f61a230159"));
			PartyYTDRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyYTDRevenue.IsDerived = true;
			PartyYTDRevenue.AssociationType.ObjectType = this;

			PartyYTDRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyYTDRevenue.RoleType.AssignedSingularName = "YTDRevenue";
			PartyYTDRevenue.RoleType.AssignedPluralName = "YTDRevenues";
			PartyYTDRevenue.RoleType.Scale = 2;
			PartyYTDRevenue.RoleType.Precision = 19;
			this.Roles.YTDRevenue = PartyYTDRevenue.RoleType;

			var PartyLastYearsRevenue = new RelationType(AppsDomain.Instance, new Guid("04bc4912-cd23-4b2e-973c-76bbf2f2de8d"), new Guid("c369193b-d01b-4f82-83f3-27ecaa3d8d58"), new Guid("ef73d811-7d6a-4168-819f-1588b01979e8"));
			PartyLastYearsRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyLastYearsRevenue.IsDerived = true;
			PartyLastYearsRevenue.AssociationType.ObjectType = this;

			PartyLastYearsRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyLastYearsRevenue.RoleType.AssignedSingularName = "LastYearsRevenue";
			PartyLastYearsRevenue.RoleType.AssignedPluralName = "LastYearsRevenues";
			PartyLastYearsRevenue.RoleType.Scale = 2;
			PartyLastYearsRevenue.RoleType.Precision = 19;
			this.Roles.LastYearsRevenue = PartyLastYearsRevenue.RoleType;

			var PartyBillingInquiriesFax = new RelationType(AppsDomain.Instance, new Guid("130d6e94-51e2-45f9-82d7-380ae7c8aa44"), new Guid("68c1c826-9915-4f7b-8a44-dc62e215b260"), new Guid("e47aa296-12fa-45f1-8deb-0f151aaaba60"));
			PartyBillingInquiriesFax.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyBillingInquiriesFax.IsDerived = true;
			PartyBillingInquiriesFax.IsIndexed = true;

			PartyBillingInquiriesFax.AssociationType.ObjectType = this;

			PartyBillingInquiriesFax.RoleType.ObjectType = TelecommunicationsNumberClass.Instance;;
			PartyBillingInquiriesFax.RoleType.AssignedSingularName = "BillingInquiriesFax";
			PartyBillingInquiriesFax.RoleType.AssignedPluralName = "BillingInquiriesFaxes";
			this.Roles.BillingInquiriesFax = PartyBillingInquiriesFax.RoleType;

			var PartyQualification = new RelationType(AppsDomain.Instance, new Guid("19c8a5a0-9567-4fc2-bfad-94a549cfa191"), new Guid("b8622d0f-ba18-4a76-b1d9-25115378c01c"), new Guid("6656341b-4b2a-41a3-abad-9aece1294b79"));
			PartyQualification.AssignedMultiplicity = Multiplicity.ManyToMany;
			PartyQualification.IsIndexed = true;

			PartyQualification.AssociationType.ObjectType = this;

			PartyQualification.RoleType.ObjectType = QualificationClass.Instance;;
			PartyQualification.RoleType.AssignedSingularName = "Qualification";
			PartyQualification.RoleType.AssignedPluralName = "Qualifications";
			this.Roles.Qualification = PartyQualification.RoleType;

			var PartyHomeAddress = new RelationType(AppsDomain.Instance, new Guid("1ad85fce-f2f8-45aa-bf1e-8f5ade34153c"), new Guid("20dd50d2-06c8-48e8-883d-5f894c973834"), new Guid("e3834580-66fc-4b4d-b0fa-58e19f660316"));
			PartyHomeAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyHomeAddress.IsDerived = true;
			PartyHomeAddress.IsIndexed = true;

			PartyHomeAddress.AssociationType.ObjectType = this;

			PartyHomeAddress.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			PartyHomeAddress.RoleType.AssignedSingularName = "HomeAddress";
			PartyHomeAddress.RoleType.AssignedPluralName = "HomeAddresses";
			this.Roles.HomeAddress = PartyHomeAddress.RoleType;

			var PartySalesOffice = new RelationType(AppsDomain.Instance, new Guid("1d4e59a6-253f-470e-b9a7-c2c73b67cf2f"), new Guid("996ea544-3d27-410d-aa23-25457532e3b1"), new Guid("90f0a491-c7c7-4ff5-9910-77d430f6292a"));
			PartySalesOffice.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartySalesOffice.IsDerived = true;
			PartySalesOffice.IsIndexed = true;

			PartySalesOffice.AssociationType.ObjectType = this;

			PartySalesOffice.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			PartySalesOffice.RoleType.AssignedSingularName = "SalesOffice";
			PartySalesOffice.RoleType.AssignedPluralName = "SalesOffices";
			this.Roles.SalesOffice = PartySalesOffice.RoleType;

			var PartyOrderInquiriesFax = new RelationType(AppsDomain.Instance, new Guid("29da9212-a70f-4ee6-98d7-508687faa2b4"), new Guid("6798142d-fefe-40a1-86c2-7788e1961fcb"), new Guid("895e8823-ae01-41d9-b0d1-055fadf45c71"));
			PartyOrderInquiriesFax.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyOrderInquiriesFax.IsDerived = true;
			PartyOrderInquiriesFax.IsIndexed = true;

			PartyOrderInquiriesFax.AssociationType.ObjectType = this;

			PartyOrderInquiriesFax.RoleType.ObjectType = TelecommunicationsNumberClass.Instance;;
			PartyOrderInquiriesFax.RoleType.AssignedSingularName = "OrderInquiriesFax";
			PartyOrderInquiriesFax.RoleType.AssignedPluralName = "OrderInquiriesFaxes";
			this.Roles.OrderInquiriesFax = PartyOrderInquiriesFax.RoleType;

			var PartyCurrentSalesRep = new RelationType(AppsDomain.Instance, new Guid("420a7279-ba09-4660-bf5d-7242be07bfb1"), new Guid("3bb65209-69d2-40e5-890b-c8a9e06da1ac"), new Guid("8f1be044-6b43-4861-b995-fdc080656670"));
			PartyCurrentSalesRep.AssignedMultiplicity = Multiplicity.ManyToMany;
			PartyCurrentSalesRep.IsDerived = true;
			PartyCurrentSalesRep.IsIndexed = true;

			PartyCurrentSalesRep.AssociationType.ObjectType = this;

			PartyCurrentSalesRep.RoleType.ObjectType = PersonClass.Instance;;
			PartyCurrentSalesRep.RoleType.AssignedSingularName = "CurrentSalesRep";
			PartyCurrentSalesRep.RoleType.AssignedPluralName = "CurrentSalesReps";
			this.Roles.CurrentSalesRep = PartyCurrentSalesRep.RoleType;

			var PartyPartyContactMechanism = new RelationType(AppsDomain.Instance, new Guid("42ab0c4b-52b2-494e-b6a9-cacf55fb002e"), new Guid("32d52b42-f5cc-4fd0-959c-045ff0c02520"), new Guid("977a3626-85af-47a8-bfe8-ed2e8daa1d9e"));
			PartyPartyContactMechanism.AssignedMultiplicity = Multiplicity.OneToMany;
			PartyPartyContactMechanism.IsIndexed = true;

			PartyPartyContactMechanism.AssociationType.ObjectType = this;

			PartyPartyContactMechanism.RoleType.ObjectType = PartyContactMechanismClass.Instance;;
			PartyPartyContactMechanism.RoleType.AssignedSingularName = "PartyContactMechanism";
			PartyPartyContactMechanism.RoleType.AssignedPluralName = "PartyContactMechanisms";
			this.Roles.PartyContactMechanism = PartyPartyContactMechanism.RoleType;

			var PartyShippingInquiriesFax = new RelationType(AppsDomain.Instance, new Guid("436f0ef1-a3ea-439c-9ffd-211c177f5ed1"), new Guid("1b9df170-befb-46e9-ba07-5a1b4b77e150"), new Guid("a1f5ff98-c126-47f8-b5f6-72180319a847"));
			PartyShippingInquiriesFax.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyShippingInquiriesFax.IsDerived = true;
			PartyShippingInquiriesFax.IsIndexed = true;

			PartyShippingInquiriesFax.AssociationType.ObjectType = this;

			PartyShippingInquiriesFax.RoleType.ObjectType = TelecommunicationsNumberClass.Instance;;
			PartyShippingInquiriesFax.RoleType.AssignedSingularName = "ShippingInquiriesFax";
			PartyShippingInquiriesFax.RoleType.AssignedPluralName = "ShippingInquiriesFaxes";
			this.Roles.ShippingInquiriesFax = PartyShippingInquiriesFax.RoleType;

			var PartyShippingInquiriesPhone = new RelationType(AppsDomain.Instance, new Guid("4444b0d1-4ade-4fed-88bf-ce9ef275a978"), new Guid("94602440-bdea-4b49-9fe3-15b0d483c632"), new Guid("9d65c05b-562b-4b31-b717-4247b8086f5b"));
			PartyShippingInquiriesPhone.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyShippingInquiriesPhone.IsDerived = true;
			PartyShippingInquiriesPhone.IsIndexed = true;

			PartyShippingInquiriesPhone.AssociationType.ObjectType = this;

			PartyShippingInquiriesPhone.RoleType.ObjectType = TelecommunicationsNumberClass.Instance;;
			PartyShippingInquiriesPhone.RoleType.AssignedSingularName = "ShippingInquiriesPhone";
			PartyShippingInquiriesPhone.RoleType.AssignedPluralName = "ShippingInquiriesPhones";
			this.Roles.ShippingInquiriesPhone = PartyShippingInquiriesPhone.RoleType;

			var PartyBillingAccount = new RelationType(AppsDomain.Instance, new Guid("4a46f6aa-d4f9-4e5e-ac17-d77ab0e99c3f"), new Guid("ba75f426-3a2a-4341-ac95-3562c608d83b"), new Guid("9dd1757a-f31e-4fe1-9195-0a8403f0108a"));
			PartyBillingAccount.AssignedMultiplicity = Multiplicity.OneToMany;
			PartyBillingAccount.IsIndexed = true;

			PartyBillingAccount.AssociationType.ObjectType = this;

			PartyBillingAccount.RoleType.ObjectType = BillingAccountClass.Instance;;
			PartyBillingAccount.RoleType.AssignedSingularName = "BillingAccount";
			PartyBillingAccount.RoleType.AssignedPluralName = "BillingAccounts";
			this.Roles.BillingAccount = PartyBillingAccount.RoleType;

			var PartyOrderInquiriesPhone = new RelationType(AppsDomain.Instance, new Guid("4d742fa8-f10b-423e-9341-f8a526838eba"), new Guid("bd9d5e4f-8c3a-4787-8c5a-1e3f9f49db97"), new Guid("f9bcbb5a-6c10-4fa9-8601-82c6fb941f3b"));
			PartyOrderInquiriesPhone.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyOrderInquiriesPhone.IsDerived = true;
			PartyOrderInquiriesPhone.IsIndexed = true;

			PartyOrderInquiriesPhone.AssociationType.ObjectType = this;

			PartyOrderInquiriesPhone.RoleType.ObjectType = TelecommunicationsNumberClass.Instance;;
			PartyOrderInquiriesPhone.RoleType.AssignedSingularName = "OrderInquiriesPhone";
			PartyOrderInquiriesPhone.RoleType.AssignedPluralName = "OrderInquiriesPhones";
			this.Roles.OrderInquiriesPhone = PartyOrderInquiriesPhone.RoleType;

			var PartyPartySkill = new RelationType(AppsDomain.Instance, new Guid("4e725bd6-2280-48a2-be89-836b4bd7d002"), new Guid("9d7f6130-f2ba-4da0-9b74-91b6205e42be"), new Guid("eb6079ed-489b-4673-8508-7a9a6e33573f"));
			PartyPartySkill.AssignedMultiplicity = Multiplicity.ManyToMany;
			PartyPartySkill.IsIndexed = true;

			PartyPartySkill.AssociationType.ObjectType = this;

			PartyPartySkill.RoleType.ObjectType = PartySkillClass.Instance;;
			PartyPartySkill.RoleType.AssignedSingularName = "PartySkill";
			PartyPartySkill.RoleType.AssignedPluralName = "PartySkills";
			this.Roles.PartySkill = PartyPartySkill.RoleType;

			var PartyPartyClassification = new RelationType(AppsDomain.Instance, new Guid("4e787cf8-9b92-4ab2-8f88-c08bdb90a376"), new Guid("66778fc1-8d7c-4976-afe1-e07fd4567c46"), new Guid("766900b8-646c-4b59-b022-5143cf5e5ce9"));
			PartyPartyClassification.AssignedMultiplicity = Multiplicity.ManyToMany;
			PartyPartyClassification.IsIndexed = true;

			PartyPartyClassification.AssociationType.ObjectType = this;

			PartyPartyClassification.RoleType.ObjectType = PartyClassificationInterface.Instance;;
			PartyPartyClassification.RoleType.AssignedSingularName = "PartyClassification";
			PartyPartyClassification.RoleType.AssignedPluralName = "PartyClassifications";
			this.Roles.PartyClassification = PartyPartyClassification.RoleType;

			var PartyExcludeFromDunning = new RelationType(AppsDomain.Instance, new Guid("52863081-34b7-48e2-a7ff-c6bd67172350"), new Guid("7ab0f4b0-f4ae-45d4-8c9e-a576f36e4f1a"), new Guid("09d4533e-d118-4395-a7f1-358aad00f6e4"));
			PartyExcludeFromDunning.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyExcludeFromDunning.AssociationType.ObjectType = this;

			PartyExcludeFromDunning.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			PartyExcludeFromDunning.RoleType.AssignedSingularName = "ExcludeFromDunning";
			PartyExcludeFromDunning.RoleType.AssignedPluralName = "ExcludesFromDunning";
			this.Roles.ExcludeFromDunning = PartyExcludeFromDunning.RoleType;

			var PartyBankAccount = new RelationType(AppsDomain.Instance, new Guid("52dd7bf8-bb7e-47bd-85b3-f35fba964e5c"), new Guid("3eac7011-d5ed-46ce-a678-b1e3a6c02962"), new Guid("fb2c26d4-c23c-4817-94ee-5f2acebb4e41"));
			PartyBankAccount.AssignedMultiplicity = Multiplicity.OneToMany;
			PartyBankAccount.IsIndexed = true;

			PartyBankAccount.AssociationType.ObjectType = this;

			PartyBankAccount.RoleType.ObjectType = BankAccountClass.Instance;;
			PartyBankAccount.RoleType.AssignedSingularName = "BankAccount";
			PartyBankAccount.RoleType.AssignedPluralName = "BankAccounts";
			this.Roles.BankAccount = PartyBankAccount.RoleType;

			var PartyBillingAddress = new RelationType(AppsDomain.Instance, new Guid("70ada4aa-c51c-4f1d-a3d2-ea6de31cb988"), new Guid("9f1ea588-8dd9-4f48-a905-0271e694f1fe"), new Guid("f2455f15-83f5-4599-9b2e-c1b8d9b92995"));
			PartyBillingAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyBillingAddress.IsDerived = true;
			PartyBillingAddress.IsIndexed = true;

			PartyBillingAddress.AssociationType.ObjectType = this;

			PartyBillingAddress.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			PartyBillingAddress.RoleType.AssignedSingularName = "BillingAddress";
			PartyBillingAddress.RoleType.AssignedPluralName = "BillingAddresses";
			this.Roles.BillingAddress = PartyBillingAddress.RoleType;

			var PartyDefaultShipmentMethod = new RelationType(AppsDomain.Instance, new Guid("79a5c25a-91e9-4a80-8649-c8abe86e47dd"), new Guid("39d03d8f-8fbc-4131-8e97-7f5fcf73871c"), new Guid("711fc18b-b5f8-4235-8a51-22f91e4c194e"));
			PartyDefaultShipmentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyDefaultShipmentMethod.IsIndexed = true;

			PartyDefaultShipmentMethod.AssociationType.ObjectType = this;

			PartyDefaultShipmentMethod.RoleType.ObjectType = ShipmentMethodClass.Instance;;
			PartyDefaultShipmentMethod.RoleType.AssignedSingularName = "DefaultShipmentMethod";
			PartyDefaultShipmentMethod.RoleType.AssignedPluralName = "DefaultShipmentMethods";
			this.Roles.DefaultShipmentMethod = PartyDefaultShipmentMethod.RoleType;

			var PartyResume = new RelationType(AppsDomain.Instance, new Guid("7dc1e326-76ef-4bac-aae1-d6a26da9d40a"), new Guid("5b8c7f22-121d-473f-83e0-41f20740b912"), new Guid("468e863c-79f9-48a1-a28e-ad6159940b01"));
			PartyResume.AssignedMultiplicity = Multiplicity.OneToMany;
			PartyResume.IsIndexed = true;

			PartyResume.AssociationType.ObjectType = this;

			PartyResume.RoleType.ObjectType = ResumeClass.Instance;;
			PartyResume.RoleType.AssignedSingularName = "Resume";
			PartyResume.RoleType.AssignedPluralName = "Resumes";
			this.Roles.Resume = PartyResume.RoleType;

			var PartyHeadQuarter = new RelationType(AppsDomain.Instance, new Guid("89971e75-61e5-4a0c-b7fc-6f4c15866175"), new Guid("ef2f1c0e-ecc2-4949-aec9-88460c0d5b0b"), new Guid("d80cc262-207a-462e-b8ed-ee58f04cf98b"));
			PartyHeadQuarter.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyHeadQuarter.IsDerived = true;
			PartyHeadQuarter.IsIndexed = true;

			PartyHeadQuarter.AssociationType.ObjectType = this;

			PartyHeadQuarter.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			PartyHeadQuarter.RoleType.AssignedSingularName = "HeadQuarter";
			PartyHeadQuarter.RoleType.AssignedPluralName = "HeadQuarters";
			this.Roles.HeadQuarter = PartyHeadQuarter.RoleType;

			var PartyPersonalEmailAddress = new RelationType(AppsDomain.Instance, new Guid("90590830-da80-4afd-ac37-e9fafb59493a"), new Guid("79b4d3ba-70cc-4914-82ee-d06e11ac7b2c"), new Guid("71133938-89e1-45f6-8e5e-6ef699d44db1"));
			PartyPersonalEmailAddress.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyPersonalEmailAddress.IsDerived = true;
			PartyPersonalEmailAddress.IsIndexed = true;

			PartyPersonalEmailAddress.AssociationType.ObjectType = this;

			PartyPersonalEmailAddress.RoleType.ObjectType = ElectronicAddressInterface.Instance;;
			PartyPersonalEmailAddress.RoleType.AssignedSingularName = "PersonalEmailAddress";
			PartyPersonalEmailAddress.RoleType.AssignedPluralName = "PersonalEmailAddresses";
			this.Roles.PersonalEmailAddress = PartyPersonalEmailAddress.RoleType;

			var PartyCellPhoneNumber = new RelationType(AppsDomain.Instance, new Guid("92c99262-30ed-4265-975b-07140c46af6e"), new Guid("71b74bf9-8b50-4f81-9f52-0a06cc223ba9"), new Guid("bc0d1d88-3811-4fdf-b1c7-4ad2d82230cf"));
			PartyCellPhoneNumber.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyCellPhoneNumber.IsDerived = true;
			PartyCellPhoneNumber.IsIndexed = true;

			PartyCellPhoneNumber.AssociationType.ObjectType = this;

			PartyCellPhoneNumber.RoleType.ObjectType = TelecommunicationsNumberClass.Instance;;
			PartyCellPhoneNumber.RoleType.AssignedSingularName = "CellPhoneNumber";
			PartyCellPhoneNumber.RoleType.AssignedPluralName = "CellPhoneNumbers";
			this.Roles.CellPhoneNumber = PartyCellPhoneNumber.RoleType;

			var PartyBillingInquiriesPhone = new RelationType(AppsDomain.Instance, new Guid("95f6db56-0dcf-4d5e-8e81-43e0d72faa85"), new Guid("d47edd54-4d98-428d-9cb9-d57e0e7816f1"), new Guid("14ed3b75-2787-4abf-be44-408ca2945384"));
			PartyBillingInquiriesPhone.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyBillingInquiriesPhone.IsDerived = true;
			PartyBillingInquiriesPhone.IsIndexed = true;

			PartyBillingInquiriesPhone.AssociationType.ObjectType = this;

			PartyBillingInquiriesPhone.RoleType.ObjectType = TelecommunicationsNumberClass.Instance;;
			PartyBillingInquiriesPhone.RoleType.AssignedSingularName = "BillingInquiriesPhone";
			PartyBillingInquiriesPhone.RoleType.AssignedPluralName = "BillingInquiriesPhones";
			this.Roles.BillingInquiriesPhone = PartyBillingInquiriesPhone.RoleType;

			var PartyPartyName = new RelationType(AppsDomain.Instance, new Guid("9d361ab3-c93a-41e0-bbca-0cde08bcff37"), new Guid("4e3e530b-456a-405e-8b22-8691647d1258"), new Guid("4d210b02-9045-4be4-a49d-c728b9b0d2ed"));
			PartyPartyName.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyPartyName.IsDerived = true;
			PartyPartyName.AssociationType.ObjectType = this;

			PartyPartyName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartyPartyName.RoleType.AssignedSingularName = "PartyName";
			PartyPartyName.RoleType.AssignedPluralName = "PartyNames";
			PartyPartyName.RoleType.Size = 256;
			this.Roles.PartyName = PartyPartyName.RoleType;

			var PartyOrderAddress = new RelationType(AppsDomain.Instance, new Guid("a7720655-a6c1-4f54-a093-b77da985ac5f"), new Guid("4f9183c0-bac1-4738-97e3-15c2906759e8"), new Guid("d1e7a633-f097-4030-b3c3-9167c022fe05"));
			PartyOrderAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyOrderAddress.IsDerived = true;
			PartyOrderAddress.IsIndexed = true;

			PartyOrderAddress.AssociationType.ObjectType = this;

			PartyOrderAddress.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			PartyOrderAddress.RoleType.AssignedSingularName = "OrderAddress";
			PartyOrderAddress.RoleType.AssignedPluralName = "OrderAddresses";
			this.Roles.OrderAddress = PartyOrderAddress.RoleType;

			var PartyInternetAddress = new RelationType(AppsDomain.Instance, new Guid("ac5a48dc-4115-489a-aa8c-f43268b6bfe3"), new Guid("97686b93-4c5f-4544-af6a-acacca008060"), new Guid("bf8f9ba5-7a88-4ad4-b154-09b5efae9912"));
			PartyInternetAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyInternetAddress.IsDerived = true;
			PartyInternetAddress.IsIndexed = true;

			PartyInternetAddress.AssociationType.ObjectType = this;

			PartyInternetAddress.RoleType.ObjectType = ElectronicAddressInterface.Instance;;
			PartyInternetAddress.RoleType.AssignedSingularName = "InternetAddress";
			PartyInternetAddress.RoleType.AssignedPluralName = "InternetAddresses";
			this.Roles.InternetAddress = PartyInternetAddress.RoleType;

			var PartyContent = new RelationType(AppsDomain.Instance, new Guid("acf731ab-c856-4553-a2fc-9f88e3ccc258"), new Guid("c75a6014-98bd-4e2f-b526-1e2cfda9534c"), new Guid("87d94438-3756-42cd-9356-9d169ce42817"));
			PartyContent.AssignedMultiplicity = Multiplicity.OneToMany;
			PartyContent.IsIndexed = true;

			PartyContent.AssociationType.ObjectType = this;

			PartyContent.RoleType.ObjectType = MediaClass.Instance;;
			PartyContent.RoleType.AssignedSingularName = "Content";
			PartyContent.RoleType.AssignedPluralName = "Contents";
			this.Roles.Content = PartyContent.RoleType;

			var PartyCreditCard = new RelationType(AppsDomain.Instance, new Guid("aecedf16-9e42-4e49-b7ec-e92187262405"), new Guid("41d4ebe2-dcf3-4517-9ce5-2c1dcc45400d"), new Guid("af648b7c-4407-46b8-8070-76d86a48c605"));
			PartyCreditCard.AssignedMultiplicity = Multiplicity.OneToMany;
			PartyCreditCard.IsIndexed = true;

			PartyCreditCard.AssociationType.ObjectType = this;

			PartyCreditCard.RoleType.ObjectType = CreditCardClass.Instance;;
			PartyCreditCard.RoleType.AssignedSingularName = "CreditCard";
			PartyCreditCard.RoleType.AssignedPluralName = "CreditCards";
			this.Roles.CreditCard = PartyCreditCard.RoleType;

			var PartyShippingAddress = new RelationType(AppsDomain.Instance, new Guid("c20f82fa-3ba2-4e84-beef-52ba30c92695"), new Guid("0c9edf90-b6fd-476b-86e8-ca1b845ee62b"), new Guid("5da6410e-1311-4664-a0b3-ee2fca4b9ad1"));
			PartyShippingAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyShippingAddress.IsDerived = true;
			PartyShippingAddress.IsIndexed = true;

			PartyShippingAddress.AssociationType.ObjectType = this;

			PartyShippingAddress.RoleType.ObjectType = PostalAddressClass.Instance;;
			PartyShippingAddress.RoleType.AssignedSingularName = "ShippingAddress";
			PartyShippingAddress.RoleType.AssignedPluralName = "ShippingAddresses";
			this.Roles.ShippingAddress = PartyShippingAddress.RoleType;

			var PartyOpenOrderAmount = new RelationType(AppsDomain.Instance, new Guid("d05ee314-57be-4852-a3b5-62710df4d4b7"), new Guid("87821f12-6fed-4376-b239-6d2296457b88"), new Guid("a3a1df78-5469-41ae-bdc5-24c340abc378"));
			PartyOpenOrderAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyOpenOrderAmount.IsDerived = true;
			PartyOpenOrderAmount.AssociationType.ObjectType = this;

			PartyOpenOrderAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyOpenOrderAmount.RoleType.AssignedSingularName = "OpenOrderAmount";
			PartyOpenOrderAmount.RoleType.AssignedPluralName = "OpenOrderAmounts";
			PartyOpenOrderAmount.RoleType.Scale = 2;
			PartyOpenOrderAmount.RoleType.Precision = 19;
			this.Roles.OpenOrderAmount = PartyOpenOrderAmount.RoleType;

			var PartyGeneralFaxNumber = new RelationType(AppsDomain.Instance, new Guid("d562d1f0-1f8f-40c5-a346-ae32e498f332"), new Guid("8dab565f-7386-4037-843f-bfc3603b27ab"), new Guid("10c1c77e-4b1b-4fd5-b77f-95e8897a4b38"));
			PartyGeneralFaxNumber.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyGeneralFaxNumber.IsDerived = true;
			PartyGeneralFaxNumber.IsIndexed = true;

			PartyGeneralFaxNumber.AssociationType.ObjectType = this;

			PartyGeneralFaxNumber.RoleType.ObjectType = TelecommunicationsNumberClass.Instance;;
			PartyGeneralFaxNumber.RoleType.AssignedSingularName = "GeneralFaxNumber";
			PartyGeneralFaxNumber.RoleType.AssignedPluralName = "GeneralFaxNumbers";
			this.Roles.GeneralFaxNumber = PartyGeneralFaxNumber.RoleType;

			var PartyDefaultPaymentMethod = new RelationType(AppsDomain.Instance, new Guid("d97ab83b-85dc-4877-8b49-1e552489bcb0"), new Guid("4af97ea0-bb6b-4fdb-9e0d-798805ccad53"), new Guid("9c644a11-4239-49df-b603-489c547e2085"));
			PartyDefaultPaymentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyDefaultPaymentMethod.IsIndexed = true;

			PartyDefaultPaymentMethod.AssociationType.ObjectType = this;

			PartyDefaultPaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			PartyDefaultPaymentMethod.RoleType.AssignedSingularName = "DefaultPaymentMethod";
			PartyDefaultPaymentMethod.RoleType.AssignedPluralName = "DefaultPaymentMethods";
			this.Roles.DefaultPaymentMethod = PartyDefaultPaymentMethod.RoleType;

			var PartyGeneralPhoneNumber = new RelationType(AppsDomain.Instance, new Guid("e2017090-fa3f-420e-a5c5-6a2f5aaacd2f"), new Guid("84c30383-6d26-4abe-92a3-d750e41d2561"), new Guid("51170ba2-d717-41dc-9d6b-18967c37e751"));
			PartyGeneralPhoneNumber.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyGeneralPhoneNumber.IsDerived = true;
			PartyGeneralPhoneNumber.IsIndexed = true;

			PartyGeneralPhoneNumber.AssociationType.ObjectType = this;

			PartyGeneralPhoneNumber.RoleType.ObjectType = TelecommunicationsNumberClass.Instance;;
			PartyGeneralPhoneNumber.RoleType.AssignedSingularName = "GeneralPhoneNumber";
			PartyGeneralPhoneNumber.RoleType.AssignedPluralName = "GeneralPhoneNumbers";
			this.Roles.GeneralPhoneNumber = PartyGeneralPhoneNumber.RoleType;

			var PartyPreferredCurrency = new RelationType(AppsDomain.Instance, new Guid("f0de022f-b94e-4d29-8cdf-99d39ad9add6"), new Guid("81236f57-51e8-4863-b796-419685199990"), new Guid("a736d5be-33ec-4449-a23d-b4a83a0f4bc3"));
			PartyPreferredCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyPreferredCurrency.IsIndexed = true;

			PartyPreferredCurrency.AssociationType.ObjectType = this;

			PartyPreferredCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PartyPreferredCurrency.RoleType.AssignedSingularName = "PreferredCurrency";
			PartyPreferredCurrency.RoleType.AssignedPluralName = "PreferredCurrencies";
			this.Roles.PreferredCurrency = PartyPreferredCurrency.RoleType;

			var PartyVatRegime = new RelationType(AppsDomain.Instance, new Guid("fafa35a1-7762-47f7-a9c2-28d3d0623e7c"), new Guid("ef3ddd5a-7f11-4191-8098-18fa958f7f93"), new Guid("68f80581-9c1f-4f02-88dc-e6119ab6d135"));
			PartyVatRegime.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyVatRegime.IsIndexed = true;

			PartyVatRegime.AssociationType.ObjectType = this;

			PartyVatRegime.RoleType.ObjectType = VatRegimeClass.Instance;;
			PartyVatRegime.RoleType.AssignedSingularName = "VatRegime";
			PartyVatRegime.RoleType.AssignedPluralName = "VatRegimes";
			this.Roles.VatRegime = PartyVatRegime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			AutomatedAgentClass.Instance.ConcreteRoles.YTDRevenue = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.YTDRevenue]; 
			OrganisationClass.Instance.ConcreteRoles.YTDRevenue = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.YTDRevenue]; 
			InternalOrganisationClass.Instance.ConcreteRoles.YTDRevenue = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.YTDRevenue]; 
			PersonClass.Instance.ConcreteRoles.YTDRevenue = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.YTDRevenue]; 

			AutomatedAgentClass.Instance.ConcreteRoles.LastYearsRevenue = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastYearsRevenue]; 
			OrganisationClass.Instance.ConcreteRoles.LastYearsRevenue = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastYearsRevenue]; 
			InternalOrganisationClass.Instance.ConcreteRoles.LastYearsRevenue = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastYearsRevenue]; 
			PersonClass.Instance.ConcreteRoles.LastYearsRevenue = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastYearsRevenue]; 

			AutomatedAgentClass.Instance.ConcreteRoles.BillingInquiriesFax = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingInquiriesFax]; 
			OrganisationClass.Instance.ConcreteRoles.BillingInquiriesFax = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingInquiriesFax]; 
			InternalOrganisationClass.Instance.ConcreteRoles.BillingInquiriesFax = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingInquiriesFax]; 
			PersonClass.Instance.ConcreteRoles.BillingInquiriesFax = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingInquiriesFax]; 

			AutomatedAgentClass.Instance.ConcreteRoles.Qualification = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Qualification]; 
			OrganisationClass.Instance.ConcreteRoles.Qualification = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Qualification]; 
			InternalOrganisationClass.Instance.ConcreteRoles.Qualification = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Qualification]; 
			PersonClass.Instance.ConcreteRoles.Qualification = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Qualification]; 

			AutomatedAgentClass.Instance.ConcreteRoles.HomeAddress = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HomeAddress]; 
			OrganisationClass.Instance.ConcreteRoles.HomeAddress = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HomeAddress]; 
			InternalOrganisationClass.Instance.ConcreteRoles.HomeAddress = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HomeAddress]; 
			PersonClass.Instance.ConcreteRoles.HomeAddress = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HomeAddress]; 

			AutomatedAgentClass.Instance.ConcreteRoles.SalesOffice = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOffice]; 
			OrganisationClass.Instance.ConcreteRoles.SalesOffice = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOffice]; 
			InternalOrganisationClass.Instance.ConcreteRoles.SalesOffice = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOffice]; 
			PersonClass.Instance.ConcreteRoles.SalesOffice = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOffice]; 

			AutomatedAgentClass.Instance.ConcreteRoles.OrderInquiriesFax = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderInquiriesFax]; 
			OrganisationClass.Instance.ConcreteRoles.OrderInquiriesFax = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderInquiriesFax]; 
			InternalOrganisationClass.Instance.ConcreteRoles.OrderInquiriesFax = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderInquiriesFax]; 
			PersonClass.Instance.ConcreteRoles.OrderInquiriesFax = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderInquiriesFax]; 

			AutomatedAgentClass.Instance.ConcreteRoles.CurrentSalesRep = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentSalesRep]; 
			OrganisationClass.Instance.ConcreteRoles.CurrentSalesRep = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentSalesRep]; 
			InternalOrganisationClass.Instance.ConcreteRoles.CurrentSalesRep = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentSalesRep]; 
			PersonClass.Instance.ConcreteRoles.CurrentSalesRep = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentSalesRep]; 

			AutomatedAgentClass.Instance.ConcreteRoles.PartyContactMechanism = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyContactMechanism]; 
			OrganisationClass.Instance.ConcreteRoles.PartyContactMechanism = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyContactMechanism]; 
			InternalOrganisationClass.Instance.ConcreteRoles.PartyContactMechanism = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyContactMechanism]; 
			PersonClass.Instance.ConcreteRoles.PartyContactMechanism = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyContactMechanism]; 

			AutomatedAgentClass.Instance.ConcreteRoles.ShippingInquiriesFax = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingInquiriesFax]; 
			OrganisationClass.Instance.ConcreteRoles.ShippingInquiriesFax = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingInquiriesFax]; 
			InternalOrganisationClass.Instance.ConcreteRoles.ShippingInquiriesFax = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingInquiriesFax]; 
			PersonClass.Instance.ConcreteRoles.ShippingInquiriesFax = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingInquiriesFax]; 

			AutomatedAgentClass.Instance.ConcreteRoles.ShippingInquiriesPhone = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingInquiriesPhone]; 
			OrganisationClass.Instance.ConcreteRoles.ShippingInquiriesPhone = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingInquiriesPhone]; 
			InternalOrganisationClass.Instance.ConcreteRoles.ShippingInquiriesPhone = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingInquiriesPhone]; 
			PersonClass.Instance.ConcreteRoles.ShippingInquiriesPhone = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingInquiriesPhone]; 

			AutomatedAgentClass.Instance.ConcreteRoles.BillingAccount = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAccount]; 
			OrganisationClass.Instance.ConcreteRoles.BillingAccount = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAccount]; 
			InternalOrganisationClass.Instance.ConcreteRoles.BillingAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAccount]; 
			PersonClass.Instance.ConcreteRoles.BillingAccount = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAccount]; 

			AutomatedAgentClass.Instance.ConcreteRoles.OrderInquiriesPhone = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderInquiriesPhone]; 
			OrganisationClass.Instance.ConcreteRoles.OrderInquiriesPhone = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderInquiriesPhone]; 
			InternalOrganisationClass.Instance.ConcreteRoles.OrderInquiriesPhone = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderInquiriesPhone]; 
			PersonClass.Instance.ConcreteRoles.OrderInquiriesPhone = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderInquiriesPhone]; 

			AutomatedAgentClass.Instance.ConcreteRoles.PartySkill = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartySkill]; 
			OrganisationClass.Instance.ConcreteRoles.PartySkill = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartySkill]; 
			InternalOrganisationClass.Instance.ConcreteRoles.PartySkill = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartySkill]; 
			PersonClass.Instance.ConcreteRoles.PartySkill = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartySkill]; 

			AutomatedAgentClass.Instance.ConcreteRoles.PartyClassification = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 
			OrganisationClass.Instance.ConcreteRoles.PartyClassification = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 
			InternalOrganisationClass.Instance.ConcreteRoles.PartyClassification = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 
			PersonClass.Instance.ConcreteRoles.PartyClassification = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyClassification]; 

			AutomatedAgentClass.Instance.ConcreteRoles.ExcludeFromDunning = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExcludeFromDunning]; 
			OrganisationClass.Instance.ConcreteRoles.ExcludeFromDunning = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExcludeFromDunning]; 
			InternalOrganisationClass.Instance.ConcreteRoles.ExcludeFromDunning = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExcludeFromDunning]; 
			PersonClass.Instance.ConcreteRoles.ExcludeFromDunning = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExcludeFromDunning]; 

			AutomatedAgentClass.Instance.ConcreteRoles.BankAccount = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BankAccount]; 
			OrganisationClass.Instance.ConcreteRoles.BankAccount = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BankAccount]; 
			InternalOrganisationClass.Instance.ConcreteRoles.BankAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BankAccount]; 
			PersonClass.Instance.ConcreteRoles.BankAccount = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BankAccount]; 

			AutomatedAgentClass.Instance.ConcreteRoles.BillingAddress = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAddress]; 
			OrganisationClass.Instance.ConcreteRoles.BillingAddress = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAddress]; 
			InternalOrganisationClass.Instance.ConcreteRoles.BillingAddress = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAddress]; 
			PersonClass.Instance.ConcreteRoles.BillingAddress = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAddress]; 

			AutomatedAgentClass.Instance.ConcreteRoles.DefaultShipmentMethod = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultShipmentMethod]; 
			OrganisationClass.Instance.ConcreteRoles.DefaultShipmentMethod = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultShipmentMethod]; 
			InternalOrganisationClass.Instance.ConcreteRoles.DefaultShipmentMethod = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultShipmentMethod]; 
			PersonClass.Instance.ConcreteRoles.DefaultShipmentMethod = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultShipmentMethod]; 

			AutomatedAgentClass.Instance.ConcreteRoles.Resume = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Resume]; 
			OrganisationClass.Instance.ConcreteRoles.Resume = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Resume]; 
			InternalOrganisationClass.Instance.ConcreteRoles.Resume = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Resume]; 
			PersonClass.Instance.ConcreteRoles.Resume = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Resume]; 

			AutomatedAgentClass.Instance.ConcreteRoles.HeadQuarter = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HeadQuarter]; 
			OrganisationClass.Instance.ConcreteRoles.HeadQuarter = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HeadQuarter]; 
			InternalOrganisationClass.Instance.ConcreteRoles.HeadQuarter = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HeadQuarter]; 
			PersonClass.Instance.ConcreteRoles.HeadQuarter = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HeadQuarter]; 

			AutomatedAgentClass.Instance.ConcreteRoles.PersonalEmailAddress = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PersonalEmailAddress]; 
			OrganisationClass.Instance.ConcreteRoles.PersonalEmailAddress = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PersonalEmailAddress]; 
			InternalOrganisationClass.Instance.ConcreteRoles.PersonalEmailAddress = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PersonalEmailAddress]; 
			PersonClass.Instance.ConcreteRoles.PersonalEmailAddress = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PersonalEmailAddress]; 

			AutomatedAgentClass.Instance.ConcreteRoles.CellPhoneNumber = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CellPhoneNumber]; 
			OrganisationClass.Instance.ConcreteRoles.CellPhoneNumber = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CellPhoneNumber]; 
			InternalOrganisationClass.Instance.ConcreteRoles.CellPhoneNumber = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CellPhoneNumber]; 
			PersonClass.Instance.ConcreteRoles.CellPhoneNumber = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CellPhoneNumber]; 

			AutomatedAgentClass.Instance.ConcreteRoles.BillingInquiriesPhone = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingInquiriesPhone]; 
			OrganisationClass.Instance.ConcreteRoles.BillingInquiriesPhone = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingInquiriesPhone]; 
			InternalOrganisationClass.Instance.ConcreteRoles.BillingInquiriesPhone = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingInquiriesPhone]; 
			PersonClass.Instance.ConcreteRoles.BillingInquiriesPhone = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingInquiriesPhone]; 

			AutomatedAgentClass.Instance.ConcreteRoles.PartyName = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyName]; 
			OrganisationClass.Instance.ConcreteRoles.PartyName = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyName]; 
			InternalOrganisationClass.Instance.ConcreteRoles.PartyName = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyName]; 
			PersonClass.Instance.ConcreteRoles.PartyName = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyName]; 

			AutomatedAgentClass.Instance.ConcreteRoles.OrderAddress = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderAddress]; 
			OrganisationClass.Instance.ConcreteRoles.OrderAddress = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderAddress]; 
			InternalOrganisationClass.Instance.ConcreteRoles.OrderAddress = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderAddress]; 
			PersonClass.Instance.ConcreteRoles.OrderAddress = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderAddress]; 

			AutomatedAgentClass.Instance.ConcreteRoles.InternetAddress = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternetAddress]; 
			OrganisationClass.Instance.ConcreteRoles.InternetAddress = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternetAddress]; 
			InternalOrganisationClass.Instance.ConcreteRoles.InternetAddress = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternetAddress]; 
			PersonClass.Instance.ConcreteRoles.InternetAddress = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternetAddress]; 

			AutomatedAgentClass.Instance.ConcreteRoles.Content = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Content]; 
			OrganisationClass.Instance.ConcreteRoles.Content = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Content]; 
			InternalOrganisationClass.Instance.ConcreteRoles.Content = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Content]; 
			PersonClass.Instance.ConcreteRoles.Content = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Content]; 

			AutomatedAgentClass.Instance.ConcreteRoles.CreditCard = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreditCard]; 
			OrganisationClass.Instance.ConcreteRoles.CreditCard = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreditCard]; 
			InternalOrganisationClass.Instance.ConcreteRoles.CreditCard = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreditCard]; 
			PersonClass.Instance.ConcreteRoles.CreditCard = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreditCard]; 

			AutomatedAgentClass.Instance.ConcreteRoles.ShippingAddress = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingAddress]; 
			OrganisationClass.Instance.ConcreteRoles.ShippingAddress = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingAddress]; 
			InternalOrganisationClass.Instance.ConcreteRoles.ShippingAddress = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingAddress]; 
			PersonClass.Instance.ConcreteRoles.ShippingAddress = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingAddress]; 

			AutomatedAgentClass.Instance.ConcreteRoles.OpenOrderAmount = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OpenOrderAmount]; 
			OrganisationClass.Instance.ConcreteRoles.OpenOrderAmount = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OpenOrderAmount]; 
			InternalOrganisationClass.Instance.ConcreteRoles.OpenOrderAmount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OpenOrderAmount]; 
			PersonClass.Instance.ConcreteRoles.OpenOrderAmount = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OpenOrderAmount]; 

			AutomatedAgentClass.Instance.ConcreteRoles.GeneralFaxNumber = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralFaxNumber]; 
			OrganisationClass.Instance.ConcreteRoles.GeneralFaxNumber = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralFaxNumber]; 
			InternalOrganisationClass.Instance.ConcreteRoles.GeneralFaxNumber = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralFaxNumber]; 
			PersonClass.Instance.ConcreteRoles.GeneralFaxNumber = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralFaxNumber]; 

			AutomatedAgentClass.Instance.ConcreteRoles.DefaultPaymentMethod = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultPaymentMethod]; 
			OrganisationClass.Instance.ConcreteRoles.DefaultPaymentMethod = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultPaymentMethod]; 
			InternalOrganisationClass.Instance.ConcreteRoles.DefaultPaymentMethod = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultPaymentMethod]; 
			PersonClass.Instance.ConcreteRoles.DefaultPaymentMethod = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultPaymentMethod]; 

			AutomatedAgentClass.Instance.ConcreteRoles.GeneralPhoneNumber = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralPhoneNumber]; 
			OrganisationClass.Instance.ConcreteRoles.GeneralPhoneNumber = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralPhoneNumber]; 
			InternalOrganisationClass.Instance.ConcreteRoles.GeneralPhoneNumber = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralPhoneNumber]; 
			PersonClass.Instance.ConcreteRoles.GeneralPhoneNumber = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralPhoneNumber]; 

			AutomatedAgentClass.Instance.ConcreteRoles.PreferredCurrency = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreferredCurrency]; 
			OrganisationClass.Instance.ConcreteRoles.PreferredCurrency = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreferredCurrency]; 
			InternalOrganisationClass.Instance.ConcreteRoles.PreferredCurrency = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreferredCurrency]; 
			PersonClass.Instance.ConcreteRoles.PreferredCurrency = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreferredCurrency]; 

			AutomatedAgentClass.Instance.ConcreteRoles.VatRegime = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 
			OrganisationClass.Instance.ConcreteRoles.VatRegime = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 
			InternalOrganisationClass.Instance.ConcreteRoles.VatRegime = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 
			PersonClass.Instance.ConcreteRoles.VatRegime = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 


		}

		internal class RolesType
		{
			internal RoleType YTDRevenue;
			internal RoleType LastYearsRevenue;
			internal RoleType BillingInquiriesFax;
			internal RoleType Qualification;
			internal RoleType HomeAddress;
			internal RoleType SalesOffice;
			internal RoleType OrderInquiriesFax;
			internal RoleType CurrentSalesRep;
			internal RoleType PartyContactMechanism;
			internal RoleType ShippingInquiriesFax;
			internal RoleType ShippingInquiriesPhone;
			internal RoleType BillingAccount;
			internal RoleType OrderInquiriesPhone;
			internal RoleType PartySkill;
			internal RoleType PartyClassification;
			internal RoleType ExcludeFromDunning;
			internal RoleType BankAccount;
			internal RoleType BillingAddress;
			internal RoleType DefaultShipmentMethod;
			internal RoleType Resume;
			internal RoleType HeadQuarter;
			internal RoleType PersonalEmailAddress;
			internal RoleType CellPhoneNumber;
			internal RoleType BillingInquiriesPhone;
			internal RoleType PartyName;
			internal RoleType OrderAddress;
			internal RoleType InternetAddress;
			internal RoleType Content;
			internal RoleType CreditCard;
			internal RoleType ShippingAddress;
			internal RoleType OpenOrderAmount;
			internal RoleType GeneralFaxNumber;
			internal RoleType DefaultPaymentMethod;
			internal RoleType GeneralPhoneNumber;
			internal RoleType PreferredCurrency;
			internal RoleType VatRegime;

		}
	}public partial class PartyProductCategoryRevenueClass : Class
	{
		public static PartyProductCategoryRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyProductCategoryRevenueClass() : base(AppsDomain.Instance, new Guid("3f2c4c17-ec80-44ad-b452-76cf694f3d6a"))
        {
			this.SingularName = "PartyProductCategoryRevenue";
			this.PluralName = "PartyProductCategoryRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0ffbf75e-ef5f-44cd-bd6c-fa0fc95acd69"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("14c422e6-fed7-4acf-aae0-9f0db7718436"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyProductCategoryRevenueParty = new RelationType(AppsDomain.Instance, new Guid("05de234d-6f00-49b2-802d-fcc590cc1aec"), new Guid("93a67619-2960-49e8-97e1-813614df8a32"), new Guid("fba6ebaf-efbd-465d-b142-b754c34af161"));
			PartyProductCategoryRevenueParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductCategoryRevenueParty.IsIndexed = true;

			PartyProductCategoryRevenueParty.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueParty.RoleType.ObjectType = PartyInterface.Instance;;
			PartyProductCategoryRevenueParty.RoleType.AssignedSingularName = "Party";
			PartyProductCategoryRevenueParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = PartyProductCategoryRevenueParty.RoleType;

			var PartyProductCategoryRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("068c3c16-2827-4574-9fe6-323e74634db0"), new Guid("2948c509-a13f-4f3b-9cad-b39ce9bdb3c7"), new Guid("337d69c4-0565-42bc-a0cf-3c76dde9115f"));
			PartyProductCategoryRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductCategoryRevenueRevenue.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyProductCategoryRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			PartyProductCategoryRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			PartyProductCategoryRevenueRevenue.RoleType.Scale = 2;
			PartyProductCategoryRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = PartyProductCategoryRevenueRevenue.RoleType;

			var PartyProductCategoryRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("1f41a4c2-a9af-42e1-92e4-a9069bc024b1"), new Guid("42f9808e-94c3-4fda-b822-4a02e4a7648c"), new Guid("6a6ca0a9-f262-4891-98c5-f6abb1adf93f"));
			PartyProductCategoryRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductCategoryRevenueMonth.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartyProductCategoryRevenueMonth.RoleType.AssignedSingularName = "Month";
			PartyProductCategoryRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = PartyProductCategoryRevenueMonth.RoleType;

			var PartyProductCategoryRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("4584c4f9-12a5-4435-a6b8-2b2e6bb932b9"), new Guid("852fe55f-9f03-4542-90f4-ef4fceb560a3"), new Guid("013068f6-131a-4d0c-9847-d772ba9d3596"));
			PartyProductCategoryRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductCategoryRevenueCurrency.IsIndexed = true;

			PartyProductCategoryRevenueCurrency.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PartyProductCategoryRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			PartyProductCategoryRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PartyProductCategoryRevenueCurrency.RoleType;

			var PartyProductCategoryRevenueYear = new RelationType(AppsDomain.Instance, new Guid("4fff87cc-3232-4174-9a91-9d9ee0192360"), new Guid("57a27625-0f61-4026-aabf-9a7de257d133"), new Guid("38fd22de-76e6-4887-9148-f99015e4816b"));
			PartyProductCategoryRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductCategoryRevenueYear.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartyProductCategoryRevenueYear.RoleType.AssignedSingularName = "Year";
			PartyProductCategoryRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = PartyProductCategoryRevenueYear.RoleType;

			var PartyProductCategoryRevenuePartyProductCategoryName = new RelationType(AppsDomain.Instance, new Guid("5b77f9ce-15c5-4fb3-95d6-11d2cc1aca95"), new Guid("5609dc7f-0354-4ed0-a6cf-120fd41d3eb9"), new Guid("3d418a0d-f737-4bf8-856e-a94f8f7af774"));
			PartyProductCategoryRevenuePartyProductCategoryName.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductCategoryRevenuePartyProductCategoryName.AssociationType.ObjectType = this;

			PartyProductCategoryRevenuePartyProductCategoryName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartyProductCategoryRevenuePartyProductCategoryName.RoleType.AssignedSingularName = "PartyProductCategoryName";
			PartyProductCategoryRevenuePartyProductCategoryName.RoleType.AssignedPluralName = "PartyProductCategoryNames";
			PartyProductCategoryRevenuePartyProductCategoryName.RoleType.Size = 256;
			this.Roles.PartyProductCategoryName = PartyProductCategoryRevenuePartyProductCategoryName.RoleType;

			var PartyProductCategoryRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("7f6972f9-16dc-4795-9e4b-7095738e80ed"), new Guid("20ecc315-ee8c-4bd2-9320-f16d258db9bc"), new Guid("9cf8972a-71d1-465e-bf08-6713c695a29a"));
			PartyProductCategoryRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductCategoryRevenueInternalOrganisation.IsIndexed = true;

			PartyProductCategoryRevenueInternalOrganisation.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PartyProductCategoryRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PartyProductCategoryRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PartyProductCategoryRevenueInternalOrganisation.RoleType;

			var PartyProductCategoryRevenueProductCategory = new RelationType(AppsDomain.Instance, new Guid("8e0338d5-5fab-4024-9e37-05afd05aa514"), new Guid("a9c15cc8-1066-4c43-bd85-a2a306a2b5d1"), new Guid("e4393c39-4047-46ba-8335-68644a69413b"));
			PartyProductCategoryRevenueProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductCategoryRevenueProductCategory.IsIndexed = true;

			PartyProductCategoryRevenueProductCategory.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			PartyProductCategoryRevenueProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			PartyProductCategoryRevenueProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = PartyProductCategoryRevenueProductCategory.RoleType;

			var PartyProductCategoryRevenueQuantity = new RelationType(AppsDomain.Instance, new Guid("b0b50eec-0a88-41e8-895a-270517240b7b"), new Guid("0af942bf-8bd7-4297-93ff-11971dbd12ce"), new Guid("53055a2e-dbf8-40a9-a1d4-50297bfe38c1"));
			PartyProductCategoryRevenueQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductCategoryRevenueQuantity.AssociationType.ObjectType = this;

			PartyProductCategoryRevenueQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyProductCategoryRevenueQuantity.RoleType.AssignedSingularName = "Quantity";
			PartyProductCategoryRevenueQuantity.RoleType.AssignedPluralName = "Quantities";
			PartyProductCategoryRevenueQuantity.RoleType.Scale = 2;
			PartyProductCategoryRevenueQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = PartyProductCategoryRevenueQuantity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.Party = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.Revenue = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.Month = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.Currency = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.Year = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.PartyProductCategoryName = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyProductCategoryName]; 

			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.InternalOrganisation = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.ProductCategory = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.Quantity = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 


		}

		internal class RolesType
		{
			internal RoleType Party;
			internal RoleType Revenue;
			internal RoleType Month;
			internal RoleType Currency;
			internal RoleType Year;
			internal RoleType PartyProductCategoryName;
			internal RoleType InternalOrganisation;
			internal RoleType ProductCategory;
			internal RoleType Quantity;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Party;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType PartyProductCategoryName;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartyFixedAssetAssignmentClass : Class
	{
		public static PartyFixedAssetAssignmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyFixedAssetAssignmentClass() : base(AppsDomain.Instance, new Guid("40ee178e-7564-4dfa-ab6f-8bcd4e62b498"))
        {
			this.SingularName = "PartyFixedAssetAssignment";
			this.PluralName = "PartyFixedAssetAssignments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2aac3cb3-7d19-4e9c-adc4-f4a806d2d623"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("53ed5712-25fc-4cee-8d30-ddf6c04fe2ed"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("7e4e0360-1112-45ac-9751-44239db196d2"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyFixedAssetAssignmentFixedAsset = new RelationType(AppsDomain.Instance, new Guid("28afdc0d-ebc7-4f53-b5a1-0cc0eb377887"), new Guid("8d6a5121-c704-4f04-95de-7e2ab8faecea"), new Guid("e9058932-6beb-4698-89b9-c70e98b30b7f"));
			PartyFixedAssetAssignmentFixedAsset.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyFixedAssetAssignmentFixedAsset.IsIndexed = true;

			PartyFixedAssetAssignmentFixedAsset.AssociationType.ObjectType = this;

			PartyFixedAssetAssignmentFixedAsset.RoleType.ObjectType = FixedAssetInterface.Instance;;
			PartyFixedAssetAssignmentFixedAsset.RoleType.AssignedSingularName = "FixedAsset";
			PartyFixedAssetAssignmentFixedAsset.RoleType.AssignedPluralName = "FixedAssets";
			this.Roles.FixedAsset = PartyFixedAssetAssignmentFixedAsset.RoleType;

			var PartyFixedAssetAssignmentParty = new RelationType(AppsDomain.Instance, new Guid("59187015-4689-4ef8-942f-c36ff4c74e64"), new Guid("4f0c5035-bfd2-4843-8d6e-d3df15a7f5dd"), new Guid("38f3a7f5-53b5-4572-bcb0-347fa3a543f3"));
			PartyFixedAssetAssignmentParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyFixedAssetAssignmentParty.IsIndexed = true;

			PartyFixedAssetAssignmentParty.AssociationType.ObjectType = this;

			PartyFixedAssetAssignmentParty.RoleType.ObjectType = PartyInterface.Instance;;
			PartyFixedAssetAssignmentParty.RoleType.AssignedSingularName = "Party";
			PartyFixedAssetAssignmentParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = PartyFixedAssetAssignmentParty.RoleType;

			var PartyFixedAssetAssignmentAssetAssignmentStatus = new RelationType(AppsDomain.Instance, new Guid("70c38a47-79c4-4ec8-abfd-3c40ef4239ea"), new Guid("874b5fdc-a8b9-4b7c-9785-15661917b57a"), new Guid("f243ed6d-eabc-4363-ba37-cf147a166081"));
			PartyFixedAssetAssignmentAssetAssignmentStatus.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyFixedAssetAssignmentAssetAssignmentStatus.IsIndexed = true;

			PartyFixedAssetAssignmentAssetAssignmentStatus.AssociationType.ObjectType = this;

			PartyFixedAssetAssignmentAssetAssignmentStatus.RoleType.ObjectType = AssetAssignmentStatusClass.Instance;;
			PartyFixedAssetAssignmentAssetAssignmentStatus.RoleType.AssignedSingularName = "AssetAssignmentStatus";
			PartyFixedAssetAssignmentAssetAssignmentStatus.RoleType.AssignedPluralName = "AssetAssignmentStatuses";
			this.Roles.AssetAssignmentStatus = PartyFixedAssetAssignmentAssetAssignmentStatus.RoleType;

			var PartyFixedAssetAssignmentAllocatedCost = new RelationType(AppsDomain.Instance, new Guid("c70f014b-345b-48ad-8075-2a1835a19f57"), new Guid("95b448b4-4fc5-4bd5-b789-e967de001bbe"), new Guid("aa4aca33-b94c-4527-97db-558fab6805a5"));
			PartyFixedAssetAssignmentAllocatedCost.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyFixedAssetAssignmentAllocatedCost.AssociationType.ObjectType = this;

			PartyFixedAssetAssignmentAllocatedCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyFixedAssetAssignmentAllocatedCost.RoleType.AssignedSingularName = "AllocatedCost";
			PartyFixedAssetAssignmentAllocatedCost.RoleType.AssignedPluralName = "AllocatedCosts";
			PartyFixedAssetAssignmentAllocatedCost.RoleType.Scale = 2;
			PartyFixedAssetAssignmentAllocatedCost.RoleType.Precision = 19;
			this.Roles.AllocatedCost = PartyFixedAssetAssignmentAllocatedCost.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyFixedAssetAssignmentClass.Instance.ConcreteRoles.FixedAsset = PartyFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FixedAsset]; 

			PartyFixedAssetAssignmentClass.Instance.ConcreteRoles.Party = PartyFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			PartyFixedAssetAssignmentClass.Instance.ConcreteRoles.AssetAssignmentStatus = PartyFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssetAssignmentStatus]; 

			PartyFixedAssetAssignmentClass.Instance.ConcreteRoles.AllocatedCost = PartyFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AllocatedCost]; 


		}

		internal class RolesType
		{
			internal RoleType FixedAsset;
			internal RoleType Party;
			internal RoleType AssetAssignmentStatus;
			internal RoleType AllocatedCost;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType FixedAsset;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType AssetAssignmentStatus;
			internal ConcreteRoleType AllocatedCost;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;

		}
	}public partial class DunningTypeClass : Class
	{
		public static DunningTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DunningTypeClass() : base(AppsDomain.Instance, new Guid("4117ba43-c7fd-4ba5-965e-50e2ce5b5058"))
        {
			this.SingularName = "DunningType";
			this.PluralName = "DunningTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("de9bd9b0-a9c4-4833-997b-d9861f1b3b3d"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CapitalBudgetClass : Class
	{
		public static CapitalBudgetClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CapitalBudgetClass() : base(AppsDomain.Instance, new Guid("41f1aa5a-5043-42bb-aaf5-7d57a9deaccb"))
        {
			this.SingularName = "CapitalBudget";
			this.PluralName = "CapitalBudgets";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c56806b9-4717-4362-a768-fce5acc52412"))
			{
				Subtype = Instance,
				Supertype = BudgetInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType BudgetRevision;
			internal ConcreteRoleType BudgetStatus;
			internal ConcreteRoleType BudgetNumber;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType BudgetReview;
			internal ConcreteRoleType CurrentBudgetStatus;
			internal ConcreteRoleType BudgetItem;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AccountAdjustmentClass : Class
	{
		public static AccountAdjustmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AccountAdjustmentClass() : base(AppsDomain.Instance, new Guid("4211ece6-a127-4359-9fa4-6537943a37a5"))
        {
			this.SingularName = "AccountAdjustment";
			this.PluralName = "AccountAdjustments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2b17c603-8f3a-49c1-a4b1-b41b750382bb"))
			{
				Subtype = Instance,
				Supertype = FinancialAccountTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PositionStatusClass : Class
	{
		public static PositionStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PositionStatusClass() : base(AppsDomain.Instance, new Guid("4250a005-4fec-4118-a5b4-725886c59269"))
        {
			this.SingularName = "PositionStatus";
			this.PluralName = "PositionStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a34868c5-9eda-4e23-86fc-571155e1cd40"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class MarketingPackageClass : Class
	{
		public static MarketingPackageClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal MarketingPackageClass() : base(AppsDomain.Instance, new Guid("42adee8e-5994-42e3-afe1-aa3d3089d594"))
        {
			this.SingularName = "MarketingPackage";
			this.PluralName = "MarketingPackages";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3312261a-0613-4cc9-baff-0312e46acc6e"))
			{
				Subtype = Instance,
				Supertype = ProductAssociationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var MarketingPackageInstruction = new RelationType(AppsDomain.Instance, new Guid("29cb7841-1793-43c3-bcbe-3d69a8e651b5"), new Guid("49e615c2-afec-4d3a-90d9-eb19840e2bf0"), new Guid("1a8a5695-acad-4cfb-a228-1f05610d56fa"));
			MarketingPackageInstruction.AssignedMultiplicity = Multiplicity.OneToOne;
			MarketingPackageInstruction.AssociationType.ObjectType = this;

			MarketingPackageInstruction.RoleType.ObjectType = AllorsStringUnit.Instance;;
			MarketingPackageInstruction.RoleType.AssignedSingularName = "Instruction";
			MarketingPackageInstruction.RoleType.AssignedPluralName = "Instructions";
			MarketingPackageInstruction.RoleType.Size = -1;
			this.Roles.Instruction = MarketingPackageInstruction.RoleType;

			var MarketingPackageProductUsedIn = new RelationType(AppsDomain.Instance, new Guid("70c7d06c-2086-4a60-b2b9-aba2c6f07669"), new Guid("23ec81db-27f0-4965-bf25-4f0150fd4281"), new Guid("02896b5c-8c38-40d3-89e3-9b3a0d209d3f"));
			MarketingPackageProductUsedIn.AssignedMultiplicity = Multiplicity.OneToMany;
			MarketingPackageProductUsedIn.IsIndexed = true;

			MarketingPackageProductUsedIn.AssociationType.ObjectType = this;

			MarketingPackageProductUsedIn.RoleType.ObjectType = ProductInterface.Instance;;
			MarketingPackageProductUsedIn.RoleType.AssignedSingularName = "ProductUsedIn";
			MarketingPackageProductUsedIn.RoleType.AssignedPluralName = "ProductsUsedIn";
			this.Roles.ProductUsedIn = MarketingPackageProductUsedIn.RoleType;

			var MarketingPackageProduct = new RelationType(AppsDomain.Instance, new Guid("a687e8ff-624c-4794-866f-f4cc653d874c"), new Guid("7d1b384b-4730-4e61-8a80-8d18ea8e2ae4"), new Guid("ea685b4f-3063-47a9-ba82-980247e903af"));
			MarketingPackageProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			MarketingPackageProduct.IsIndexed = true;

			MarketingPackageProduct.AssociationType.ObjectType = this;

			MarketingPackageProduct.RoleType.ObjectType = ProductInterface.Instance;;
			MarketingPackageProduct.RoleType.AssignedSingularName = "Product";
			MarketingPackageProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = MarketingPackageProduct.RoleType;

			var MarketingPackageDescription = new RelationType(AppsDomain.Instance, new Guid("ccabc13b-63cc-4cdf-909d-411edc26d648"), new Guid("31ac20b1-d41d-4aa5-881b-708e38849017"), new Guid("179d1a3b-8325-49da-9009-f104802f189d"));
			MarketingPackageDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			MarketingPackageDescription.AssociationType.ObjectType = this;

			MarketingPackageDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			MarketingPackageDescription.RoleType.AssignedSingularName = "Description";
			MarketingPackageDescription.RoleType.AssignedPluralName = "Descriptions";
			MarketingPackageDescription.RoleType.Size = 256;
			this.Roles.Description = MarketingPackageDescription.RoleType;

			var MarketingPackageQuantityUsed = new RelationType(AppsDomain.Instance, new Guid("dc3c4217-5c42-4ac3-ad16-33f50653bcfc"), new Guid("82eaf783-4f29-4ede-a285-a7540d0d5f62"), new Guid("fe881a55-eafb-4f83-985f-bb39cff3d2bc"));
			MarketingPackageQuantityUsed.AssignedMultiplicity = Multiplicity.OneToOne;
			MarketingPackageQuantityUsed.AssociationType.ObjectType = this;

			MarketingPackageQuantityUsed.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			MarketingPackageQuantityUsed.RoleType.AssignedSingularName = "QuantityUsed";
			MarketingPackageQuantityUsed.RoleType.AssignedPluralName = "QuantitiesUsed";
			this.Roles.QuantityUsed = MarketingPackageQuantityUsed.RoleType;


		}

		internal override void SetRelationTypes()
		{
			MarketingPackageClass.Instance.ConcreteRoles.Instruction = MarketingPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Instruction]; 

			MarketingPackageClass.Instance.ConcreteRoles.ProductUsedIn = MarketingPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductUsedIn]; 

			MarketingPackageClass.Instance.ConcreteRoles.Product = MarketingPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			MarketingPackageClass.Instance.ConcreteRoles.Description = MarketingPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			MarketingPackageClass.Instance.ConcreteRoles.QuantityUsed = MarketingPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityUsed]; 


		}

		internal class RolesType
		{
			internal RoleType Instruction;
			internal RoleType ProductUsedIn;
			internal RoleType Product;
			internal RoleType Description;
			internal RoleType QuantityUsed;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Instruction;
			internal ConcreteRoleType ProductUsedIn;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType QuantityUsed;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class ItemIssuanceClass : Class
	{
		public static ItemIssuanceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ItemIssuanceClass() : base(AppsDomain.Instance, new Guid("441f6007-022d-4d77-bc2d-04c7a876e1bd"))
        {
			this.SingularName = "ItemIssuance";
			this.PluralName = "ItemIssuances";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b2e9b9cd-b4d8-4d87-a77d-e8be7f84f1bc"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("d386f7ae-da14-4533-a99f-9304305da23c"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ItemIssuanceIssuanceDateTime = new RelationType(AppsDomain.Instance, new Guid("60089b34-e9aa-4b09-9a5c-4523ce60152f"), new Guid("ddf8eba9-8821-490f-9d9d-adc6ebd32ddb"), new Guid("ee8e4f06-63e8-4281-a010-9f9212244cf1"));
			ItemIssuanceIssuanceDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			ItemIssuanceIssuanceDateTime.AssociationType.ObjectType = this;

			ItemIssuanceIssuanceDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ItemIssuanceIssuanceDateTime.RoleType.AssignedSingularName = "IssuanceDateTime";
			ItemIssuanceIssuanceDateTime.RoleType.AssignedPluralName = "IssuanceDateTimes";
			this.Roles.IssuanceDateTime = ItemIssuanceIssuanceDateTime.RoleType;

			var ItemIssuanceInventoryItem = new RelationType(AppsDomain.Instance, new Guid("6d0e1669-1583-4004-a0dd-6481faaa4803"), new Guid("2deb9c3e-6e3e-462c-88bf-df682a4af6e0"), new Guid("d8e7874c-a162-440a-8e99-4dd7b07216cd"));
			ItemIssuanceInventoryItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			ItemIssuanceInventoryItem.IsIndexed = true;

			ItemIssuanceInventoryItem.AssociationType.ObjectType = this;

			ItemIssuanceInventoryItem.RoleType.ObjectType = InventoryItemInterface.Instance;;
			ItemIssuanceInventoryItem.RoleType.AssignedSingularName = "InventoryItem";
			ItemIssuanceInventoryItem.RoleType.AssignedPluralName = "InventoryItems";
			this.Roles.InventoryItem = ItemIssuanceInventoryItem.RoleType;

			var ItemIssuanceQuantity = new RelationType(AppsDomain.Instance, new Guid("72872b29-69e3-4408-ad61-80201c46421b"), new Guid("f191b03b-fb03-4c5b-9455-57d241160e3b"), new Guid("69dca6e4-7d13-481c-8a77-ff4c365df923"));
			ItemIssuanceQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			ItemIssuanceQuantity.AssociationType.ObjectType = this;

			ItemIssuanceQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ItemIssuanceQuantity.RoleType.AssignedSingularName = "Quantity";
			ItemIssuanceQuantity.RoleType.AssignedPluralName = "Quantities";
			ItemIssuanceQuantity.RoleType.Scale = 2;
			ItemIssuanceQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = ItemIssuanceQuantity.RoleType;

			var ItemIssuanceShipmentItem = new RelationType(AppsDomain.Instance, new Guid("83de0bfa-98ca-4299-a529-f8ba8a02cb90"), new Guid("467ce53a-969b-4537-b51c-998ac64afbe9"), new Guid("1766b9c8-436d-427c-8c54-4f10a6accf02"));
			ItemIssuanceShipmentItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			ItemIssuanceShipmentItem.IsIndexed = true;

			ItemIssuanceShipmentItem.AssociationType.ObjectType = this;

			ItemIssuanceShipmentItem.RoleType.ObjectType = ShipmentItemClass.Instance;;
			ItemIssuanceShipmentItem.RoleType.AssignedSingularName = "ShipmentItem";
			ItemIssuanceShipmentItem.RoleType.AssignedPluralName = "ShipmentItems";
			this.Roles.ShipmentItem = ItemIssuanceShipmentItem.RoleType;

			var ItemIssuancePickListItem = new RelationType(AppsDomain.Instance, new Guid("af4fbe17-bbdc-4f05-bf2e-398ee18598a5"), new Guid("6744410c-6f9c-49db-b73c-ed723592fee6"), new Guid("938bb734-f18c-4756-9c68-54cad2377639"));
			ItemIssuancePickListItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			ItemIssuancePickListItem.IsIndexed = true;

			ItemIssuancePickListItem.AssociationType.ObjectType = this;

			ItemIssuancePickListItem.RoleType.ObjectType = PickListItemClass.Instance;;
			ItemIssuancePickListItem.RoleType.AssignedSingularName = "PickListItem";
			ItemIssuancePickListItem.RoleType.AssignedPluralName = "PickListItems";
			this.Roles.PickListItem = ItemIssuancePickListItem.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ItemIssuanceClass.Instance.ConcreteRoles.IssuanceDateTime = ItemIssuanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IssuanceDateTime]; 

			ItemIssuanceClass.Instance.ConcreteRoles.InventoryItem = ItemIssuanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItem]; 

			ItemIssuanceClass.Instance.ConcreteRoles.Quantity = ItemIssuanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			ItemIssuanceClass.Instance.ConcreteRoles.ShipmentItem = ItemIssuanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentItem]; 

			ItemIssuanceClass.Instance.ConcreteRoles.PickListItem = ItemIssuanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PickListItem]; 


		}

		internal class RolesType
		{
			internal RoleType IssuanceDateTime;
			internal RoleType InventoryItem;
			internal RoleType Quantity;
			internal RoleType ShipmentItem;
			internal RoleType PickListItem;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType IssuanceDateTime;
			internal ConcreteRoleType InventoryItem;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType ShipmentItem;
			internal ConcreteRoleType PickListItem;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ShipmentPackageClass : Class
	{
		public static ShipmentPackageClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ShipmentPackageClass() : base(AppsDomain.Instance, new Guid("444e431b-f078-46e0-9c8e-694e15e807c7"))
        {
			this.SingularName = "ShipmentPackage";
			this.PluralName = "ShipmentPackages";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1d16e18e-4856-47ef-a45d-f35557fe25cb"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("7e350f10-3653-457b-a6d9-a0be0b7ab2c4"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ShipmentPackagePackagingContent = new RelationType(AppsDomain.Instance, new Guid("293eb102-b098-4e5d-8cef-d5e0b4f1ca5d"), new Guid("24a2efe7-c10e-4cb0-807b-3c3ae7d4361f"), new Guid("82196a58-d9ba-4508-bdbf-84964f2d2590"));
			ShipmentPackagePackagingContent.AssignedMultiplicity = Multiplicity.OneToMany;
			ShipmentPackagePackagingContent.IsIndexed = true;

			ShipmentPackagePackagingContent.AssociationType.ObjectType = this;

			ShipmentPackagePackagingContent.RoleType.ObjectType = PackagingContentClass.Instance;;
			ShipmentPackagePackagingContent.RoleType.AssignedSingularName = "PackagingContent";
			ShipmentPackagePackagingContent.RoleType.AssignedPluralName = "PackagingContents";
			this.Roles.PackagingContent = ShipmentPackagePackagingContent.RoleType;

			var ShipmentPackageDocument = new RelationType(AppsDomain.Instance, new Guid("7f009302-d4f4-4b06-9e18-fb1c35bd79e7"), new Guid("30cfc1be-1131-4914-888f-30f29e770332"), new Guid("7d4a4b20-3424-43b5-a7cf-7e9422c5870d"));
			ShipmentPackageDocument.AssignedMultiplicity = Multiplicity.OneToMany;
			ShipmentPackageDocument.IsIndexed = true;

			ShipmentPackageDocument.AssociationType.ObjectType = this;

			ShipmentPackageDocument.RoleType.ObjectType = DocumentInterface.Instance;;
			ShipmentPackageDocument.RoleType.AssignedSingularName = "Document";
			ShipmentPackageDocument.RoleType.AssignedPluralName = "Documents";
			this.Roles.Document = ShipmentPackageDocument.RoleType;

			var ShipmentPackageCreationDate = new RelationType(AppsDomain.Instance, new Guid("afd7e182-d201-4eee-803c-9fb4dff0feed"), new Guid("5b2b0551-afcb-4cc3-863e-ba351492da45"), new Guid("d00256d2-fbc8-4935-bfe9-0b0843622936"));
			ShipmentPackageCreationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentPackageCreationDate.AssociationType.ObjectType = this;

			ShipmentPackageCreationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ShipmentPackageCreationDate.RoleType.AssignedSingularName = "CreationDate";
			ShipmentPackageCreationDate.RoleType.AssignedPluralName = "CreationDates";
			this.Roles.CreationDate = ShipmentPackageCreationDate.RoleType;

			var ShipmentPackageSequenceNumber = new RelationType(AppsDomain.Instance, new Guid("d767222a-b528-4a3f-ac3f-333de19f7ae1"), new Guid("d1d55767-7b92-49fa-891e-8b701bd56213"), new Guid("a6e84f4d-ebde-4ca8-9cee-57642f0dc41e"));
			ShipmentPackageSequenceNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentPackageSequenceNumber.IsDerived = true;
			ShipmentPackageSequenceNumber.AssociationType.ObjectType = this;

			ShipmentPackageSequenceNumber.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			ShipmentPackageSequenceNumber.RoleType.AssignedSingularName = "SequenceNumber";
			ShipmentPackageSequenceNumber.RoleType.AssignedPluralName = "SequenceNumbers";
			this.Roles.SequenceNumber = ShipmentPackageSequenceNumber.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ShipmentPackageClass.Instance.ConcreteRoles.PackagingContent = ShipmentPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PackagingContent]; 

			ShipmentPackageClass.Instance.ConcreteRoles.Document = ShipmentPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 

			ShipmentPackageClass.Instance.ConcreteRoles.CreationDate = ShipmentPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreationDate]; 

			ShipmentPackageClass.Instance.ConcreteRoles.SequenceNumber = ShipmentPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SequenceNumber]; 


		}

		internal class RolesType
		{
			internal RoleType PackagingContent;
			internal RoleType Document;
			internal RoleType CreationDate;
			internal RoleType SequenceNumber;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PackagingContent;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType CreationDate;
			internal ConcreteRoleType SequenceNumber;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CommunicationAttachmentInterface: Interface
	{
		public static CommunicationAttachmentInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal CommunicationAttachmentInterface() : base(AppsDomain.Instance, new Guid("452ae775-def1-4e75-b325-2e9184eb8c1f"))
        {
			this.SingularName = "CommunicationAttachment";
			this.PluralName = "CommunicationAttachments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a9835fdb-fac6-4a42-82d2-437752f4acbc"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}
	}public partial class PurchaseOrderObjectStateClass : Class
	{
		public static PurchaseOrderObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseOrderObjectStateClass() : base(AppsDomain.Instance, new Guid("45e4f0da-9a6b-4077-bcc4-d49d9ec4cc97"))
        {
			this.SingularName = "PurchaseOrderObjectState";
			this.PluralName = "PurchaseOrderObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5b5725a5-1ece-4fe7-94c8-e99406a9b7b9"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class SizeClass : Class
	{
		public static SizeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SizeClass() : base(AppsDomain.Instance, new Guid("45f5a73c-34d8-4452-8f22-7a744bd6650b"))
        {
			this.SingularName = "Size";
			this.PluralName = "Sizes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("47273951-d7ac-42c2-97da-73d6e60fc68c"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("dd0db553-f0ce-4f3b-8dea-a35250c24c59"))
			{
				Subtype = Instance,
				Supertype = ProductFeatureInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType EstimatedProductCost;
			internal ConcreteRoleType BasePrice;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DependentFeature;
			internal ConcreteRoleType IncompatibleFeature;
			internal ConcreteRoleType VatRate;

		}
	}public partial class PerformanceNoteClass : Class
	{
		public static PerformanceNoteClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PerformanceNoteClass() : base(AppsDomain.Instance, new Guid("4629c7ed-e9a4-4f31-bb46-e3f2920bd768"))
        {
			this.SingularName = "PerformanceNote";
			this.PluralName = "PerformanceNotes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("bcfffb95-6ad2-44b7-abdf-52243bf1d866"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("cdb980d6-05f8-4923-bf32-95a57179fba4"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PerformanceNoteDescription = new RelationType(AppsDomain.Instance, new Guid("1b8f0ada-bb5c-4226-8e35-5f1c40b06fc8"), new Guid("e4ae1691-22f8-4304-8e04-73ae41420b43"), new Guid("1d396f6f-279d-4b83-9d95-6ece6089f6a0"));
			PerformanceNoteDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			PerformanceNoteDescription.AssociationType.ObjectType = this;

			PerformanceNoteDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PerformanceNoteDescription.RoleType.AssignedSingularName = "Description";
			PerformanceNoteDescription.RoleType.AssignedPluralName = "Descriptions";
			PerformanceNoteDescription.RoleType.Size = 256;
			this.Roles.Description = PerformanceNoteDescription.RoleType;

			var PerformanceNoteCommunicationDate = new RelationType(AppsDomain.Instance, new Guid("2f6ed687-4200-4a27-bfb2-922d9ce2e38f"), new Guid("5f2b047e-2cb0-4d2a-9cce-77846ad35f45"), new Guid("f21bbf2d-0780-4bbf-92e6-2c6676b4893d"));
			PerformanceNoteCommunicationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PerformanceNoteCommunicationDate.AssociationType.ObjectType = this;

			PerformanceNoteCommunicationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PerformanceNoteCommunicationDate.RoleType.AssignedSingularName = "CommunicationDate";
			PerformanceNoteCommunicationDate.RoleType.AssignedPluralName = "CommunicationDates";
			this.Roles.CommunicationDate = PerformanceNoteCommunicationDate.RoleType;

			var PerformanceNoteGivenByManager = new RelationType(AppsDomain.Instance, new Guid("5bf234d2-8486-47b2-a770-eca36b44bb67"), new Guid("cc9f9a6f-54fc-4786-9d83-2769d8d921ce"), new Guid("0467f9fa-17e9-4fdc-b74a-39d074e55b16"));
			PerformanceNoteGivenByManager.AssignedMultiplicity = Multiplicity.ManyToOne;
			PerformanceNoteGivenByManager.IsIndexed = true;

			PerformanceNoteGivenByManager.AssociationType.ObjectType = this;

			PerformanceNoteGivenByManager.RoleType.ObjectType = PersonClass.Instance;;
			PerformanceNoteGivenByManager.RoleType.AssignedSingularName = "GivenByManager";
			PerformanceNoteGivenByManager.RoleType.AssignedPluralName = "GivenByManagers";
			this.Roles.GivenByManager = PerformanceNoteGivenByManager.RoleType;

			var PerformanceNoteEmployee = new RelationType(AppsDomain.Instance, new Guid("a8cd7bf6-6bea-44ad-9e89-1bd63ffca459"), new Guid("c4a4e475-613b-4e38-bb79-b5bd12f73332"), new Guid("06b721ea-20ec-4b18-bd5c-d6d3e86610bd"));
			PerformanceNoteEmployee.AssignedMultiplicity = Multiplicity.ManyToOne;
			PerformanceNoteEmployee.IsIndexed = true;

			PerformanceNoteEmployee.AssociationType.ObjectType = this;

			PerformanceNoteEmployee.RoleType.ObjectType = PersonClass.Instance;;
			PerformanceNoteEmployee.RoleType.AssignedSingularName = "Employee";
			PerformanceNoteEmployee.RoleType.AssignedPluralName = "Employees";
			this.Roles.Employee = PerformanceNoteEmployee.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PerformanceNoteClass.Instance.ConcreteRoles.Description = PerformanceNoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			PerformanceNoteClass.Instance.ConcreteRoles.CommunicationDate = PerformanceNoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationDate]; 

			PerformanceNoteClass.Instance.ConcreteRoles.GivenByManager = PerformanceNoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GivenByManager]; 

			PerformanceNoteClass.Instance.ConcreteRoles.Employee = PerformanceNoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Employee]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType CommunicationDate;
			internal RoleType GivenByManager;
			internal RoleType Employee;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType CommunicationDate;
			internal ConcreteRoleType GivenByManager;
			internal ConcreteRoleType Employee;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class DeliverableTurnoverClass : Class
	{
		public static DeliverableTurnoverClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DeliverableTurnoverClass() : base(AppsDomain.Instance, new Guid("48733d8e-506a-4add-a230-907221ca7a9a"))
        {
			this.SingularName = "DeliverableTurnover";
			this.PluralName = "DeliverableTurnovers";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("07cc4021-aeb5-408a-a743-3d144e191b7f"))
			{
				Subtype = Instance,
				Supertype = ServiceEntryInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DeliverableTurnoverAmount = new RelationType(AppsDomain.Instance, new Guid("5c9b7809-0cb0-4282-ae2b-20407126384d"), new Guid("8e050223-57c1-47b2-b5b4-bdb93840f527"), new Guid("8d3abfcb-f4de-4d6b-9427-b7906430a178"));
			DeliverableTurnoverAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			DeliverableTurnoverAmount.AssociationType.ObjectType = this;

			DeliverableTurnoverAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			DeliverableTurnoverAmount.RoleType.AssignedSingularName = "Amount";
			DeliverableTurnoverAmount.RoleType.AssignedPluralName = "Amounts";
			DeliverableTurnoverAmount.RoleType.Scale = 2;
			DeliverableTurnoverAmount.RoleType.Precision = 19;
			this.Roles.Amount = DeliverableTurnoverAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DeliverableTurnoverClass.Instance.ConcreteRoles.Amount = DeliverableTurnoverClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 


		}

		internal class RolesType
		{
			internal RoleType Amount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType ThroughDateTime;
			internal ConcreteRoleType EngagementItem;
			internal ConcreteRoleType IsBillable;
			internal ConcreteRoleType FromDateTime;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ShipmentReceiptClass : Class
	{
		public static ShipmentReceiptClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ShipmentReceiptClass() : base(AppsDomain.Instance, new Guid("48d14522-5fa8-44a8-ba4c-e2ddfc18e069"))
        {
			this.SingularName = "ShipmentReceipt";
			this.PluralName = "ShipmentReceipts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("809fc167-7b57-4799-84db-6c03dbf439d7"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ShipmentReceiptItemDescription = new RelationType(AppsDomain.Instance, new Guid("0c4eee66-ff66-49fa-9a06-4ce3848a6d3c"), new Guid("d67a1bb9-802a-47a9-97bd-28809cd5c85a"), new Guid("89d49ef1-a3b6-4404-97d9-024c66e0a1f6"));
			ShipmentReceiptItemDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentReceiptItemDescription.AssociationType.ObjectType = this;

			ShipmentReceiptItemDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ShipmentReceiptItemDescription.RoleType.AssignedSingularName = "ItemDescription";
			ShipmentReceiptItemDescription.RoleType.AssignedPluralName = "ItemDescriptions";
			ShipmentReceiptItemDescription.RoleType.Size = 256;
			this.Roles.ItemDescription = ShipmentReceiptItemDescription.RoleType;

			var ShipmentReceiptInventoryItem = new RelationType(AppsDomain.Instance, new Guid("2bbc4476-7a06-4c36-9985-68a60b72eacd"), new Guid("c8ca8009-f3e9-4154-a94a-9e60f6165f3a"), new Guid("5e776569-8dd4-4dd2-993b-5bbccc15ca58"));
			ShipmentReceiptInventoryItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentReceiptInventoryItem.IsIndexed = true;

			ShipmentReceiptInventoryItem.AssociationType.ObjectType = this;

			ShipmentReceiptInventoryItem.RoleType.ObjectType = NonSerializedInventoryItemClass.Instance;;
			ShipmentReceiptInventoryItem.RoleType.AssignedSingularName = "InventoryItem";
			ShipmentReceiptInventoryItem.RoleType.AssignedPluralName = "InventoryItems";
			this.Roles.InventoryItem = ShipmentReceiptInventoryItem.RoleType;

			var ShipmentReceiptRejectionReason = new RelationType(AppsDomain.Instance, new Guid("87f84720-1233-4779-be9d-4b0a12ba19cd"), new Guid("77a773f7-e649-4dd1-9dd9-d7a5eb09ae95"), new Guid("9cbd890b-c0b5-4a0c-a931-fc5601b5ef0d"));
			ShipmentReceiptRejectionReason.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentReceiptRejectionReason.AssociationType.ObjectType = this;

			ShipmentReceiptRejectionReason.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ShipmentReceiptRejectionReason.RoleType.AssignedSingularName = "RejectionReason";
			ShipmentReceiptRejectionReason.RoleType.AssignedPluralName = "RejectionReasons";
			ShipmentReceiptRejectionReason.RoleType.Size = 256;
			this.Roles.RejectionReason = ShipmentReceiptRejectionReason.RoleType;

			var ShipmentReceiptOrderItem = new RelationType(AppsDomain.Instance, new Guid("9a76f8ba-ae96-4040-81ce-59330392e77a"), new Guid("ca64ae22-fc6c-4747-a04b-ac77911c0c5e"), new Guid("1d77d632-e552-4745-a5d6-ebefc3f0ec06"));
			ShipmentReceiptOrderItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentReceiptOrderItem.IsIndexed = true;

			ShipmentReceiptOrderItem.AssociationType.ObjectType = this;

			ShipmentReceiptOrderItem.RoleType.ObjectType = OrderItemInterface.Instance;;
			ShipmentReceiptOrderItem.RoleType.AssignedSingularName = "OrderItem";
			ShipmentReceiptOrderItem.RoleType.AssignedPluralName = "OrderItems";
			this.Roles.OrderItem = ShipmentReceiptOrderItem.RoleType;

			var ShipmentReceiptQuantityRejected = new RelationType(AppsDomain.Instance, new Guid("9a9cce59-f45c-4da0-adb6-9583a1694921"), new Guid("8cd7d5ad-ca46-4fb2-9df0-edd213680dd6"), new Guid("1f523e25-d883-4207-8550-d8d2c95c2ac6"));
			ShipmentReceiptQuantityRejected.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentReceiptQuantityRejected.AssociationType.ObjectType = this;

			ShipmentReceiptQuantityRejected.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ShipmentReceiptQuantityRejected.RoleType.AssignedSingularName = "QuantityRejected";
			ShipmentReceiptQuantityRejected.RoleType.AssignedPluralName = "QuantitiesRejected";
			ShipmentReceiptQuantityRejected.RoleType.Scale = 2;
			ShipmentReceiptQuantityRejected.RoleType.Precision = 19;
			this.Roles.QuantityRejected = ShipmentReceiptQuantityRejected.RoleType;

			var ShipmentReceiptShipmentItem = new RelationType(AppsDomain.Instance, new Guid("ccd41d3d-2be8-47ca-8217-4e2aa1d1c03b"), new Guid("e823098b-5333-4466-b845-fe4a4f1b09f5"), new Guid("7ec7aeb3-abdf-4bdc-bee2-535d8a722a6b"));
			ShipmentReceiptShipmentItem.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentReceiptShipmentItem.IsIndexed = true;

			ShipmentReceiptShipmentItem.AssociationType.ObjectType = this;

			ShipmentReceiptShipmentItem.RoleType.ObjectType = ShipmentItemClass.Instance;;
			ShipmentReceiptShipmentItem.RoleType.AssignedSingularName = "ShipmentItem";
			ShipmentReceiptShipmentItem.RoleType.AssignedPluralName = "ShipmentItems";
			this.Roles.ShipmentItem = ShipmentReceiptShipmentItem.RoleType;

			var ShipmentReceiptReceivedDateTime = new RelationType(AppsDomain.Instance, new Guid("ecdd6b27-3bcf-4f61-8e21-f829503aeeb0"), new Guid("b326cf9d-8770-4686-a7f5-2061d1683bb4"), new Guid("82ef73a5-8d4e-44a0-a551-b0c1dee958ca"));
			ShipmentReceiptReceivedDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentReceiptReceivedDateTime.AssociationType.ObjectType = this;

			ShipmentReceiptReceivedDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ShipmentReceiptReceivedDateTime.RoleType.AssignedSingularName = "ReceivedDateTime";
			ShipmentReceiptReceivedDateTime.RoleType.AssignedPluralName = "ReceivedDateTimes";
			this.Roles.ReceivedDateTime = ShipmentReceiptReceivedDateTime.RoleType;

			var ShipmentReceiptQuantityAccepted = new RelationType(AppsDomain.Instance, new Guid("f057b89e-3688-4172-9efa-102298c7e0e4"), new Guid("5d2edcc9-1f42-44b1-8680-fd2cd02761a0"), new Guid("b6f78ebd-95a9-4649-b19f-bf965dc60150"));
			ShipmentReceiptQuantityAccepted.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentReceiptQuantityAccepted.AssociationType.ObjectType = this;

			ShipmentReceiptQuantityAccepted.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ShipmentReceiptQuantityAccepted.RoleType.AssignedSingularName = "QuantityAccepted";
			ShipmentReceiptQuantityAccepted.RoleType.AssignedPluralName = "QuantitiesAccepted";
			ShipmentReceiptQuantityAccepted.RoleType.Scale = 2;
			ShipmentReceiptQuantityAccepted.RoleType.Precision = 19;
			this.Roles.QuantityAccepted = ShipmentReceiptQuantityAccepted.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ShipmentReceiptClass.Instance.ConcreteRoles.ItemDescription = ShipmentReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ItemDescription]; 

			ShipmentReceiptClass.Instance.ConcreteRoles.InventoryItem = ShipmentReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItem]; 

			ShipmentReceiptClass.Instance.ConcreteRoles.RejectionReason = ShipmentReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RejectionReason]; 

			ShipmentReceiptClass.Instance.ConcreteRoles.OrderItem = ShipmentReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItem]; 

			ShipmentReceiptClass.Instance.ConcreteRoles.QuantityRejected = ShipmentReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityRejected]; 

			ShipmentReceiptClass.Instance.ConcreteRoles.ShipmentItem = ShipmentReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentItem]; 

			ShipmentReceiptClass.Instance.ConcreteRoles.ReceivedDateTime = ShipmentReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReceivedDateTime]; 

			ShipmentReceiptClass.Instance.ConcreteRoles.QuantityAccepted = ShipmentReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityAccepted]; 


		}

		internal class RolesType
		{
			internal RoleType ItemDescription;
			internal RoleType InventoryItem;
			internal RoleType RejectionReason;
			internal RoleType OrderItem;
			internal RoleType QuantityRejected;
			internal RoleType ShipmentItem;
			internal RoleType ReceivedDateTime;
			internal RoleType QuantityAccepted;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ItemDescription;
			internal ConcreteRoleType InventoryItem;
			internal ConcreteRoleType RejectionReason;
			internal ConcreteRoleType OrderItem;
			internal ConcreteRoleType QuantityRejected;
			internal ConcreteRoleType ShipmentItem;
			internal ConcreteRoleType ReceivedDateTime;
			internal ConcreteRoleType QuantityAccepted;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RequirementCommunicationClass : Class
	{
		public static RequirementCommunicationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RequirementCommunicationClass() : base(AppsDomain.Instance, new Guid("49cdc4a2-f7af-43c9-b160-4c7da9a0ca42"))
        {
			this.SingularName = "RequirementCommunication";
			this.PluralName = "RequirementCommunications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("e5d50313-e66d-4e75-984a-c1c47fb5f22e"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var RequirementCommunicationCommunicationEvent = new RelationType(AppsDomain.Instance, new Guid("5a4d9541-4a8a-4661-bec3-e65db5298857"), new Guid("d7103ab4-c796-4efd-83bd-256e90c40a14"), new Guid("8edb2d05-b8aa-4d09-90ef-79ce9051df66"));
			RequirementCommunicationCommunicationEvent.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementCommunicationCommunicationEvent.IsIndexed = true;

			RequirementCommunicationCommunicationEvent.AssociationType.ObjectType = this;

			RequirementCommunicationCommunicationEvent.RoleType.ObjectType = CommunicationEventInterface.Instance;;
			RequirementCommunicationCommunicationEvent.RoleType.AssignedSingularName = "CommunicationEvent";
			RequirementCommunicationCommunicationEvent.RoleType.AssignedPluralName = "CommunicationEvents";
			this.Roles.CommunicationEvent = RequirementCommunicationCommunicationEvent.RoleType;

			var RequirementCommunicationRequirement = new RelationType(AppsDomain.Instance, new Guid("b65140b1-8dc4-4836-9ad8-fe01f43dad7a"), new Guid("b2ddd7e5-fa91-4257-9400-f776787fffb7"), new Guid("09fb424a-eece-4617-bc65-9fb6861eeb3b"));
			RequirementCommunicationRequirement.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementCommunicationRequirement.IsIndexed = true;

			RequirementCommunicationRequirement.AssociationType.ObjectType = this;

			RequirementCommunicationRequirement.RoleType.ObjectType = RequirementInterface.Instance;;
			RequirementCommunicationRequirement.RoleType.AssignedSingularName = "Requirement";
			RequirementCommunicationRequirement.RoleType.AssignedPluralName = "Requirements";
			this.Roles.Requirement = RequirementCommunicationRequirement.RoleType;

			var RequirementCommunicationAssociatedProfessional = new RelationType(AppsDomain.Instance, new Guid("cdb72b3f-9920-4082-83a7-a0211a29cf77"), new Guid("f0743736-d40a-4831-a075-8bdd33cb68f6"), new Guid("208ee5d1-7f60-4c12-888f-04f25c38bc46"));
			RequirementCommunicationAssociatedProfessional.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementCommunicationAssociatedProfessional.IsIndexed = true;

			RequirementCommunicationAssociatedProfessional.AssociationType.ObjectType = this;

			RequirementCommunicationAssociatedProfessional.RoleType.ObjectType = PersonClass.Instance;;
			RequirementCommunicationAssociatedProfessional.RoleType.AssignedSingularName = "AssociatedProfessional";
			RequirementCommunicationAssociatedProfessional.RoleType.AssignedPluralName = "AssociatedProfessionals";
			this.Roles.AssociatedProfessional = RequirementCommunicationAssociatedProfessional.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RequirementCommunicationClass.Instance.ConcreteRoles.CommunicationEvent = RequirementCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEvent]; 

			RequirementCommunicationClass.Instance.ConcreteRoles.Requirement = RequirementCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Requirement]; 

			RequirementCommunicationClass.Instance.ConcreteRoles.AssociatedProfessional = RequirementCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssociatedProfessional]; 


		}

		internal class RolesType
		{
			internal RoleType CommunicationEvent;
			internal RoleType Requirement;
			internal RoleType AssociatedProfessional;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType Requirement;
			internal ConcreteRoleType AssociatedProfessional;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class FixedAssetInterface: Interface
	{
		public static FixedAssetInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal FixedAssetInterface() : base(AppsDomain.Instance, new Guid("4a3efb9c-1556-4e57-bb59-f09d297e607e"))
        {
			this.SingularName = "FixedAsset";
			this.PluralName = "FixedAssets";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7c05a810-1033-46d9-9cb9-db95e286d7e6"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var FixedAssetName = new RelationType(AppsDomain.Instance, new Guid("354107ce-4eb6-4b9a-83c8-5cfe5e3adb22"), new Guid("e0f80027-f068-4ff8-a351-b3199f92735f"), new Guid("6806756e-a152-42a9-b32b-b14269e712e2"));
			FixedAssetName.AssignedMultiplicity = Multiplicity.OneToOne;
			FixedAssetName.AssociationType.ObjectType = this;

			FixedAssetName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			FixedAssetName.RoleType.AssignedSingularName = "Name";
			FixedAssetName.RoleType.AssignedPluralName = "Names";
			FixedAssetName.RoleType.Size = 256;
			this.Roles.Name = FixedAssetName.RoleType;

			var FixedAssetLastServiceDate = new RelationType(AppsDomain.Instance, new Guid("51133e4d-5135-4991-9f2f-8df9762fac78"), new Guid("fc2144b7-4a88-412d-9792-ba6f6c93c637"), new Guid("1cc0737e-a810-48d3-b048-7e3077d3db5c"));
			FixedAssetLastServiceDate.AssignedMultiplicity = Multiplicity.OneToOne;
			FixedAssetLastServiceDate.AssociationType.ObjectType = this;

			FixedAssetLastServiceDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			FixedAssetLastServiceDate.RoleType.AssignedSingularName = "LastServiceDate";
			FixedAssetLastServiceDate.RoleType.AssignedPluralName = "LastServiceDates";
			this.Roles.LastServiceDate = FixedAssetLastServiceDate.RoleType;

			var FixedAssetAcquiredDate = new RelationType(AppsDomain.Instance, new Guid("54cf9225-9204-43ee-9984-7fd8b2cbf8bc"), new Guid("efb718b5-7d70-4696-81c8-961582ed01f2"), new Guid("99c0a722-af34-4008-b7f5-dc4315c7fa1a"));
			FixedAssetAcquiredDate.AssignedMultiplicity = Multiplicity.OneToOne;
			FixedAssetAcquiredDate.AssociationType.ObjectType = this;

			FixedAssetAcquiredDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			FixedAssetAcquiredDate.RoleType.AssignedSingularName = "AcquiredDate";
			FixedAssetAcquiredDate.RoleType.AssignedPluralName = "AcquiredDates";
			this.Roles.AcquiredDate = FixedAssetAcquiredDate.RoleType;

			var FixedAssetDescription = new RelationType(AppsDomain.Instance, new Guid("725c6b7d-68ed-4576-8b17-eac4e9f4db83"), new Guid("ce93a11b-7c87-4d9c-9d79-a9703a9fd86d"), new Guid("96524022-ff94-482a-a17c-6c3c96f79127"));
			FixedAssetDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			FixedAssetDescription.AssociationType.ObjectType = this;

			FixedAssetDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			FixedAssetDescription.RoleType.AssignedSingularName = "Description";
			FixedAssetDescription.RoleType.AssignedPluralName = "Descriptions";
			FixedAssetDescription.RoleType.Size = 256;
			this.Roles.Description = FixedAssetDescription.RoleType;

			var FixedAssetProductionCapacity = new RelationType(AppsDomain.Instance, new Guid("913cc338-f844-49ae-886a-2e32db190b78"), new Guid("276b6fca-d2bb-4e43-af51-378c599c80f6"), new Guid("f409664f-5c7e-4f3b-809c-acd43c36b3bc"));
			FixedAssetProductionCapacity.AssignedMultiplicity = Multiplicity.OneToOne;
			FixedAssetProductionCapacity.AssociationType.ObjectType = this;

			FixedAssetProductionCapacity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			FixedAssetProductionCapacity.RoleType.AssignedSingularName = "ProductionCapacity";
			FixedAssetProductionCapacity.RoleType.AssignedPluralName = "ProductionCapacities";
			FixedAssetProductionCapacity.RoleType.Scale = 2;
			FixedAssetProductionCapacity.RoleType.Precision = 19;
			this.Roles.ProductionCapacity = FixedAssetProductionCapacity.RoleType;

			var FixedAssetNextServiceDate = new RelationType(AppsDomain.Instance, new Guid("ead0e86a-dfc7-45b0-9865-b973175c4567"), new Guid("6be614a2-0511-4ca0-9b1c-c8a3d0b0a998"), new Guid("47d9d93c-8ba3-4f28-a8a5-6a4cb02853e6"));
			FixedAssetNextServiceDate.AssignedMultiplicity = Multiplicity.OneToOne;
			FixedAssetNextServiceDate.AssociationType.ObjectType = this;

			FixedAssetNextServiceDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			FixedAssetNextServiceDate.RoleType.AssignedSingularName = "NextServiceDate";
			FixedAssetNextServiceDate.RoleType.AssignedPluralName = "NextServiceDates";
			this.Roles.NextServiceDate = FixedAssetNextServiceDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			VehicleClass.Instance.ConcreteRoles.Name = VehicleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			EquipmentClass.Instance.ConcreteRoles.Name = EquipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PropertyClass.Instance.ConcreteRoles.Name = PropertyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			VehicleClass.Instance.ConcreteRoles.LastServiceDate = VehicleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastServiceDate]; 
			EquipmentClass.Instance.ConcreteRoles.LastServiceDate = EquipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastServiceDate]; 
			PropertyClass.Instance.ConcreteRoles.LastServiceDate = PropertyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastServiceDate]; 

			VehicleClass.Instance.ConcreteRoles.AcquiredDate = VehicleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AcquiredDate]; 
			EquipmentClass.Instance.ConcreteRoles.AcquiredDate = EquipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AcquiredDate]; 
			PropertyClass.Instance.ConcreteRoles.AcquiredDate = PropertyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AcquiredDate]; 

			VehicleClass.Instance.ConcreteRoles.Description = VehicleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			EquipmentClass.Instance.ConcreteRoles.Description = EquipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			PropertyClass.Instance.ConcreteRoles.Description = PropertyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			VehicleClass.Instance.ConcreteRoles.ProductionCapacity = VehicleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductionCapacity]; 
			EquipmentClass.Instance.ConcreteRoles.ProductionCapacity = EquipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductionCapacity]; 
			PropertyClass.Instance.ConcreteRoles.ProductionCapacity = PropertyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductionCapacity]; 

			VehicleClass.Instance.ConcreteRoles.NextServiceDate = VehicleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NextServiceDate]; 
			EquipmentClass.Instance.ConcreteRoles.NextServiceDate = EquipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NextServiceDate]; 
			PropertyClass.Instance.ConcreteRoles.NextServiceDate = PropertyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NextServiceDate]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType LastServiceDate;
			internal RoleType AcquiredDate;
			internal RoleType Description;
			internal RoleType ProductionCapacity;
			internal RoleType NextServiceDate;

		}
	}public partial class ServiceEntryInterface: Interface
	{
		public static ServiceEntryInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ServiceEntryInterface() : base(AppsDomain.Instance, new Guid("4a4a0548-b75f-4a79-89aa-f5c242121f11"))
        {
			this.SingularName = "ServiceEntry";
			this.PluralName = "ServiceEntries";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("56f55fdb-d1c2-4294-b0ff-37660c8ac68e"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("7d989675-b7f4-4e3e-921c-3715e6766192"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var ServiceEntryThroughDateTime = new RelationType(AppsDomain.Instance, new Guid("385eac5a-a588-4f30-b4df-a4b07be43d88"), new Guid("36477b8a-7c51-4fe6-bd6f-44e6205fb1bd"), new Guid("ed9b3483-c2a2-4572-9346-35ed621500b9"));
			ServiceEntryThroughDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			ServiceEntryThroughDateTime.AssociationType.ObjectType = this;

			ServiceEntryThroughDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ServiceEntryThroughDateTime.RoleType.AssignedSingularName = "ThroughDateTime";
			ServiceEntryThroughDateTime.RoleType.AssignedPluralName = "ThroughDateTimes";
			this.Roles.ThroughDateTime = ServiceEntryThroughDateTime.RoleType;

			var ServiceEntryEngagementItem = new RelationType(AppsDomain.Instance, new Guid("74fc8f9b-62f3-4921-bce1-ca10eed33204"), new Guid("987c6fb3-b512-4797-933d-28424500649e"), new Guid("1bbf98fb-fb84-45e7-b3f3-c6d5bb9b155c"));
			ServiceEntryEngagementItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			ServiceEntryEngagementItem.IsIndexed = true;

			ServiceEntryEngagementItem.AssociationType.ObjectType = this;

			ServiceEntryEngagementItem.RoleType.ObjectType = EngagementItemInterface.Instance;;
			ServiceEntryEngagementItem.RoleType.AssignedSingularName = "EngagementItem";
			ServiceEntryEngagementItem.RoleType.AssignedPluralName = "EngagementItems";
			this.Roles.EngagementItem = ServiceEntryEngagementItem.RoleType;

			var ServiceEntryIsBillable = new RelationType(AppsDomain.Instance, new Guid("9b04b715-376f-4c39-b78b-f92af6b4ffc1"), new Guid("2c25dc8f-c253-471e-87fb-fe6934cf2b15"), new Guid("b80138a0-0a0b-4a3a-8fbb-5bca2dc8c84c"));
			ServiceEntryIsBillable.AssignedMultiplicity = Multiplicity.OneToOne;
			ServiceEntryIsBillable.AssociationType.ObjectType = this;

			ServiceEntryIsBillable.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			ServiceEntryIsBillable.RoleType.AssignedSingularName = "IsBillable";
			ServiceEntryIsBillable.RoleType.AssignedPluralName = "AreBillable";
			this.Roles.IsBillable = ServiceEntryIsBillable.RoleType;

			var ServiceEntryFromDateTime = new RelationType(AppsDomain.Instance, new Guid("a4246c12-e77c-41e0-9f00-995fab17c13c"), new Guid("eef2f215-f262-4f7e-b87b-a8229b1d5d4b"), new Guid("f1ff8c32-0f88-49b9-83c1-b0754d65700e"));
			ServiceEntryFromDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			ServiceEntryFromDateTime.AssociationType.ObjectType = this;

			ServiceEntryFromDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ServiceEntryFromDateTime.RoleType.AssignedSingularName = "FromDateTime";
			ServiceEntryFromDateTime.RoleType.AssignedPluralName = "FromDateTimes";
			this.Roles.FromDateTime = ServiceEntryFromDateTime.RoleType;

			var ServiceEntryDescription = new RelationType(AppsDomain.Instance, new Guid("a6ae42bd-babf-44e1-bdc0-cc403e56e43e"), new Guid("47acb5ae-b805-494e-9a44-10e2ddccec80"), new Guid("04df18b1-b92d-437d-a666-852c85e64330"));
			ServiceEntryDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			ServiceEntryDescription.AssociationType.ObjectType = this;

			ServiceEntryDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ServiceEntryDescription.RoleType.AssignedSingularName = "Description";
			ServiceEntryDescription.RoleType.AssignedPluralName = "Descriptions";
			ServiceEntryDescription.RoleType.Size = 256;
			this.Roles.Description = ServiceEntryDescription.RoleType;

			var ServiceEntryWorkEffort = new RelationType(AppsDomain.Instance, new Guid("b9bb6409-c6b9-4a4b-9d46-02c62b4b3304"), new Guid("c4b7a55c-d0d9-429f-9577-d32de5b6f0cd"), new Guid("f624973f-1a6a-4cd6-930f-ecfb4d3772ec"));
			ServiceEntryWorkEffort.AssignedMultiplicity = Multiplicity.ManyToOne;
			ServiceEntryWorkEffort.IsIndexed = true;

			ServiceEntryWorkEffort.AssociationType.ObjectType = this;

			ServiceEntryWorkEffort.RoleType.ObjectType = WorkEffortInterface.Instance;;
			ServiceEntryWorkEffort.RoleType.AssignedSingularName = "WorkEffort";
			ServiceEntryWorkEffort.RoleType.AssignedPluralName = "WorkEfforts";
			this.Roles.WorkEffort = ServiceEntryWorkEffort.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DeliverableTurnoverClass.Instance.ConcreteRoles.ThroughDateTime = DeliverableTurnoverClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDateTime]; 
			TimeEntryClass.Instance.ConcreteRoles.ThroughDateTime = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDateTime]; 
			ExpenseEntryClass.Instance.ConcreteRoles.ThroughDateTime = ExpenseEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDateTime]; 
			MaterialsUsageClass.Instance.ConcreteRoles.ThroughDateTime = MaterialsUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDateTime]; 

			DeliverableTurnoverClass.Instance.ConcreteRoles.EngagementItem = DeliverableTurnoverClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementItem]; 
			TimeEntryClass.Instance.ConcreteRoles.EngagementItem = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementItem]; 
			ExpenseEntryClass.Instance.ConcreteRoles.EngagementItem = ExpenseEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementItem]; 
			MaterialsUsageClass.Instance.ConcreteRoles.EngagementItem = MaterialsUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementItem]; 

			DeliverableTurnoverClass.Instance.ConcreteRoles.IsBillable = DeliverableTurnoverClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsBillable]; 
			TimeEntryClass.Instance.ConcreteRoles.IsBillable = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsBillable]; 
			ExpenseEntryClass.Instance.ConcreteRoles.IsBillable = ExpenseEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsBillable]; 
			MaterialsUsageClass.Instance.ConcreteRoles.IsBillable = MaterialsUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsBillable]; 

			DeliverableTurnoverClass.Instance.ConcreteRoles.FromDateTime = DeliverableTurnoverClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDateTime]; 
			TimeEntryClass.Instance.ConcreteRoles.FromDateTime = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDateTime]; 
			ExpenseEntryClass.Instance.ConcreteRoles.FromDateTime = ExpenseEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDateTime]; 
			MaterialsUsageClass.Instance.ConcreteRoles.FromDateTime = MaterialsUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDateTime]; 

			DeliverableTurnoverClass.Instance.ConcreteRoles.Description = DeliverableTurnoverClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			TimeEntryClass.Instance.ConcreteRoles.Description = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ExpenseEntryClass.Instance.ConcreteRoles.Description = ExpenseEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			MaterialsUsageClass.Instance.ConcreteRoles.Description = MaterialsUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			DeliverableTurnoverClass.Instance.ConcreteRoles.WorkEffort = DeliverableTurnoverClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 
			TimeEntryClass.Instance.ConcreteRoles.WorkEffort = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 
			ExpenseEntryClass.Instance.ConcreteRoles.WorkEffort = ExpenseEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 
			MaterialsUsageClass.Instance.ConcreteRoles.WorkEffort = MaterialsUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 


		}

		internal class RolesType
		{
			internal RoleType ThroughDateTime;
			internal RoleType EngagementItem;
			internal RoleType IsBillable;
			internal RoleType FromDateTime;
			internal RoleType Description;
			internal RoleType WorkEffort;

		}
	}public partial class GeneralLedgerAccountGroupClass : Class
	{
		public static GeneralLedgerAccountGroupClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal GeneralLedgerAccountGroupClass() : base(AppsDomain.Instance, new Guid("4a600c96-b813-46fc-8674-06bd3f85eae4"))
        {
			this.SingularName = "GeneralLedgerAccountGroup";
			this.PluralName = "GeneralLedgerAccountGroups";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("194167ed-b523-495e-a1a9-215287a6d44c"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var GeneralLedgerAccountGroupParent = new RelationType(AppsDomain.Instance, new Guid("3ab2ad60-3560-4817-9862-7f60c55bbc32"), new Guid("5ab6a428-e5e3-4265-8263-0e4ead0cb5f5"), new Guid("b8f88fa3-9f8e-4e2c-be79-df02a37cfa40"));
			GeneralLedgerAccountGroupParent.AssignedMultiplicity = Multiplicity.ManyToOne;
			GeneralLedgerAccountGroupParent.IsIndexed = true;

			GeneralLedgerAccountGroupParent.AssociationType.ObjectType = this;

			GeneralLedgerAccountGroupParent.RoleType.ObjectType = GeneralLedgerAccountGroupClass.Instance;;
			GeneralLedgerAccountGroupParent.RoleType.AssignedSingularName = "Parent";
			GeneralLedgerAccountGroupParent.RoleType.AssignedPluralName = "Parents";
			this.Roles.Parent = GeneralLedgerAccountGroupParent.RoleType;

			var GeneralLedgerAccountGroupDescription = new RelationType(AppsDomain.Instance, new Guid("a48c3601-3d4c-43af-9502-d6beda764118"), new Guid("04b08f63-a2ac-43c2-889d-dbc8ebe86483"), new Guid("7bd5e5e8-8605-46b2-b174-f345feb60f31"));
			GeneralLedgerAccountGroupDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountGroupDescription.AssociationType.ObjectType = this;

			GeneralLedgerAccountGroupDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			GeneralLedgerAccountGroupDescription.RoleType.AssignedSingularName = "Description";
			GeneralLedgerAccountGroupDescription.RoleType.AssignedPluralName = "Descriptions";
			GeneralLedgerAccountGroupDescription.RoleType.Size = 256;
			this.Roles.Description = GeneralLedgerAccountGroupDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			GeneralLedgerAccountGroupClass.Instance.ConcreteRoles.Parent = GeneralLedgerAccountGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Parent]; 

			GeneralLedgerAccountGroupClass.Instance.ConcreteRoles.Description = GeneralLedgerAccountGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType Parent;
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Parent;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SerializedInventoryItemClass : Class
	{
		public static SerializedInventoryItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SerializedInventoryItemClass() : base(AppsDomain.Instance, new Guid("4a70cbb3-6e23-4118-a07d-d611de9297de"))
        {
			this.SingularName = "SerializedInventoryItem";
			this.PluralName = "SerializedInventoryItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("fada58db-f65e-4448-9ed3-ccd76f51df06"))
			{
				Subtype = Instance,
				Supertype = InventoryItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SerializedInventoryItemPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("91567156-36e6-4a41-abc0-b039b9503840"), new Guid("27610bef-70f7-436a-a606-1e2aa043e8f6"), new Guid("0b8cd4fd-40da-453c-8dbc-6e7742cdfd7e"));
			SerializedInventoryItemPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SerializedInventoryItemPreviousObjectState.IsDerived = true;
			SerializedInventoryItemPreviousObjectState.IsIndexed = true;

			SerializedInventoryItemPreviousObjectState.AssociationType.ObjectType = this;

			SerializedInventoryItemPreviousObjectState.RoleType.ObjectType = SerializedInventoryItemObjectStateClass.Instance;;
			SerializedInventoryItemPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			SerializedInventoryItemPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = SerializedInventoryItemPreviousObjectState.RoleType;

			var SerializedInventoryItemInventoryItemStatus = new RelationType(AppsDomain.Instance, new Guid("a07e8bbb-7bf3-42e1-bcc2-d922a180f5e0"), new Guid("035a8f39-9b2f-403c-ae64-c43299d59ac2"), new Guid("e53e4d41-6518-4008-a419-522145e712af"));
			SerializedInventoryItemInventoryItemStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			SerializedInventoryItemInventoryItemStatus.IsDerived = true;
			SerializedInventoryItemInventoryItemStatus.IsIndexed = true;

			SerializedInventoryItemInventoryItemStatus.AssociationType.ObjectType = this;

			SerializedInventoryItemInventoryItemStatus.RoleType.ObjectType = SerializedInventoryItemStatusClass.Instance;;
			SerializedInventoryItemInventoryItemStatus.RoleType.AssignedSingularName = "InventoryItemStatus";
			SerializedInventoryItemInventoryItemStatus.RoleType.AssignedPluralName = "InventoryItemStatuses";
			this.Roles.InventoryItemStatus = SerializedInventoryItemInventoryItemStatus.RoleType;

			var SerializedInventoryItemSerialNumber = new RelationType(AppsDomain.Instance, new Guid("de9caf09-6ae7-412e-b9bc-19ece66724da"), new Guid("ba630eb8-3087-43c6-9082-650094a0226e"), new Guid("c0ada954-d86e-46c3-9a99-09209fb812a5"));
			SerializedInventoryItemSerialNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			SerializedInventoryItemSerialNumber.AssociationType.ObjectType = this;

			SerializedInventoryItemSerialNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			SerializedInventoryItemSerialNumber.RoleType.AssignedSingularName = "SerialNumber";
			SerializedInventoryItemSerialNumber.RoleType.AssignedPluralName = "SerialNumbers";
			SerializedInventoryItemSerialNumber.RoleType.Size = 256;
			this.Roles.SerialNumber = SerializedInventoryItemSerialNumber.RoleType;

			var SerializedInventoryItemCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("e0fe2033-85a9-428d-9918-f543fbcf3ed7"), new Guid("49e8ccb2-8a3f-4846-8067-9f68d005e44f"), new Guid("9d19f214-3ed9-4e2d-a924-2d513ca01934"));
			SerializedInventoryItemCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SerializedInventoryItemCurrentObjectState.IsDerived = true;
			SerializedInventoryItemCurrentObjectState.IsIndexed = true;

			SerializedInventoryItemCurrentObjectState.AssociationType.ObjectType = this;

			SerializedInventoryItemCurrentObjectState.RoleType.ObjectType = SerializedInventoryItemObjectStateClass.Instance;;
			SerializedInventoryItemCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			SerializedInventoryItemCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = SerializedInventoryItemCurrentObjectState.RoleType;

			var SerializedInventoryItemCurrentInventoryItemStatus = new RelationType(AppsDomain.Instance, new Guid("fdc2607c-1081-4836-8aa5-1efb96e38da4"), new Guid("dc285060-57aa-4941-9335-c1b6e273f162"), new Guid("82b912e8-34f9-4a11-a33b-4fdeb7e54ffc"));
			SerializedInventoryItemCurrentInventoryItemStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			SerializedInventoryItemCurrentInventoryItemStatus.IsDerived = true;
			SerializedInventoryItemCurrentInventoryItemStatus.IsIndexed = true;

			SerializedInventoryItemCurrentInventoryItemStatus.AssociationType.ObjectType = this;

			SerializedInventoryItemCurrentInventoryItemStatus.RoleType.ObjectType = SerializedInventoryItemStatusClass.Instance;;
			SerializedInventoryItemCurrentInventoryItemStatus.RoleType.AssignedSingularName = "CurrentInventoryItemStatus";
			SerializedInventoryItemCurrentInventoryItemStatus.RoleType.AssignedPluralName = "CurrentInventoryItemStatuses";
			this.Roles.CurrentInventoryItemStatus = SerializedInventoryItemCurrentInventoryItemStatus.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SerializedInventoryItemClass.Instance.ConcreteRoles.PreviousObjectState = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.InventoryItemStatus = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemStatus]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.SerialNumber = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SerialNumber]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.CurrentObjectState = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.CurrentInventoryItemStatus = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentInventoryItemStatus]; 


		}

		internal class RolesType
		{
			internal RoleType PreviousObjectState;
			internal RoleType InventoryItemStatus;
			internal RoleType SerialNumber;
			internal RoleType CurrentObjectState;
			internal RoleType CurrentInventoryItemStatus;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType InventoryItemStatus;
			internal ConcreteRoleType SerialNumber;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType CurrentInventoryItemStatus;
			internal ConcreteRoleType InventoryItemVariance;
			internal ConcreteRoleType Part;
			internal ConcreteRoleType Container;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Lot;
			internal ConcreteRoleType Sku;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType DerivedProductCategory;
			internal ConcreteRoleType Good;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ItemVarianceAccountingTransactionClass : Class
	{
		public static ItemVarianceAccountingTransactionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ItemVarianceAccountingTransactionClass() : base(AppsDomain.Instance, new Guid("4af573b7-a87f-400c-97e4-80bda17376e0"))
        {
			this.SingularName = "ItemVarianceAccountingTransaction";
			this.PluralName = "ItemVarianceAccountingTransactions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0fc35a47-64b1-49a6-a349-8996ccf3f3d0"))
			{
				Subtype = Instance,
				Supertype = AccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RespondingPartyClass : Class
	{
		public static RespondingPartyClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RespondingPartyClass() : base(AppsDomain.Instance, new Guid("4b1e9776-8851-4a2a-a402-1b40211d1f3b"))
        {
			this.SingularName = "RespondingParty";
			this.PluralName = "RespondingParties";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("246c150b-81ec-4226-b5b9-b11692b2a409"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var RespondingPartySendingDate = new RelationType(AppsDomain.Instance, new Guid("13f84c6c-d44a-4cc2-8898-bc2cbaed04f4"), new Guid("88a8016f-ecd7-4085-82d0-a9698d078184"), new Guid("72177a66-0459-4b6e-a8ea-2b5786e09f31"));
			RespondingPartySendingDate.AssignedMultiplicity = Multiplicity.OneToOne;
			RespondingPartySendingDate.AssociationType.ObjectType = this;

			RespondingPartySendingDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			RespondingPartySendingDate.RoleType.AssignedSingularName = "SendingDate";
			RespondingPartySendingDate.RoleType.AssignedPluralName = "SendingDates";
			this.Roles.SendingDate = RespondingPartySendingDate.RoleType;

			var RespondingPartyContactMechanism = new RelationType(AppsDomain.Instance, new Guid("1d220b47-44de-4ab9-9219-b3acf78bdaf2"), new Guid("5d99c05d-6fea-456e-a6a5-9ba6b6a7ab7f"), new Guid("90f6944e-1b82-4fdf-8594-02149a063d7e"));
			RespondingPartyContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			RespondingPartyContactMechanism.IsIndexed = true;

			RespondingPartyContactMechanism.AssociationType.ObjectType = this;

			RespondingPartyContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			RespondingPartyContactMechanism.RoleType.AssignedSingularName = "ContactMechanism";
			RespondingPartyContactMechanism.RoleType.AssignedPluralName = "ContactMechanisms";
			this.Roles.ContactMechanism = RespondingPartyContactMechanism.RoleType;

			var RespondingPartyParty = new RelationType(AppsDomain.Instance, new Guid("8e4080f7-40b7-437c-aff2-0fb6b809797a"), new Guid("8f61bcf0-a51c-4c02-95a8-99376824f5ab"), new Guid("79384094-3720-418c-8b87-66084af7fa11"));
			RespondingPartyParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			RespondingPartyParty.IsIndexed = true;

			RespondingPartyParty.AssociationType.ObjectType = this;

			RespondingPartyParty.RoleType.ObjectType = PartyInterface.Instance;;
			RespondingPartyParty.RoleType.AssignedSingularName = "Party";
			RespondingPartyParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = RespondingPartyParty.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RespondingPartyClass.Instance.ConcreteRoles.SendingDate = RespondingPartyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SendingDate]; 

			RespondingPartyClass.Instance.ConcreteRoles.ContactMechanism = RespondingPartyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContactMechanism]; 

			RespondingPartyClass.Instance.ConcreteRoles.Party = RespondingPartyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 


		}

		internal class RolesType
		{
			internal RoleType SendingDate;
			internal RoleType ContactMechanism;
			internal RoleType Party;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType SendingDate;
			internal ConcreteRoleType ContactMechanism;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesInvoiceItemObjectStateClass : Class
	{
		public static SalesInvoiceItemObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesInvoiceItemObjectStateClass() : base(AppsDomain.Instance, new Guid("4babdd0c-52dd-4fb8-bbf5-120aa58eff50"))
        {
			this.SingularName = "SalesInvoiceItemObjectState";
			this.PluralName = "SalesInvoiceItemObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("253ab32a-157e-46a9-8deb-fe7451bad374"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class BudgetStatusClass : Class
	{
		public static BudgetStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BudgetStatusClass() : base(AppsDomain.Instance, new Guid("4c163351-b42e-4bd3-8cbf-db110eba05fc"))
        {
			this.SingularName = "BudgetStatus";
			this.PluralName = "BudgetStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("576ca115-cb32-4251-b17b-1e11920c2fcb"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var BudgetStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("070418ab-f9aa-4286-9395-879b06cf832a"), new Guid("ee3be6af-f2b5-411a-a07b-24eb676bd923"), new Guid("ceee8ab2-a8da-45d8-be09-61e353e8b1a3"));
			BudgetStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetStatusStartDateTime.AssociationType.ObjectType = this;

			BudgetStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			BudgetStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			BudgetStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = BudgetStatusStartDateTime.RoleType;

			var BudgetStatusBudgetObjectState = new RelationType(AppsDomain.Instance, new Guid("125c0c29-4f69-4e0b-b885-76c1e908737e"), new Guid("f5e1e19d-2c13-4163-b796-a8e0b7a80fcc"), new Guid("554bd320-adce-40ac-83b0-5710e69a0b25"));
			BudgetStatusBudgetObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			BudgetStatusBudgetObjectState.IsIndexed = true;

			BudgetStatusBudgetObjectState.AssociationType.ObjectType = this;

			BudgetStatusBudgetObjectState.RoleType.ObjectType = BudgetObjectStateClass.Instance;;
			BudgetStatusBudgetObjectState.RoleType.AssignedSingularName = "BudgetObjectState";
			BudgetStatusBudgetObjectState.RoleType.AssignedPluralName = "BudgetObjectStates";
			this.Roles.BudgetObjectState = BudgetStatusBudgetObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BudgetStatusClass.Instance.ConcreteRoles.StartDateTime = BudgetStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			BudgetStatusClass.Instance.ConcreteRoles.BudgetObjectState = BudgetStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType BudgetObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType BudgetObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class BarrelClass : Class
	{
		public static BarrelClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BarrelClass() : base(AppsDomain.Instance, new Guid("4cd7ab57-544c-4900-a854-4aa9c5284b81"))
        {
			this.SingularName = "Barrel";
			this.PluralName = "Barrels";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cac12ca4-11a2-4f3f-8d85-eec7bf6a056d"))
			{
				Subtype = Instance,
				Supertype = ContainerInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ContainerDescription;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PositionTypeClass : Class
	{
		public static PositionTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PositionTypeClass() : base(AppsDomain.Instance, new Guid("4d599ed2-c5e3-4c1d-8128-6ff61f9072c3"))
        {
			this.SingularName = "PositionType";
			this.PluralName = "PositionTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d746d19e-c509-4ae1-9225-677d99f303d7"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PositionTypeDescription = new RelationType(AppsDomain.Instance, new Guid("08ca7d83-ca74-4cc1-9d8a-6cc254c7bd5b"), new Guid("9c14fc30-8b9c-4aaa-8e85-e635c0191111"), new Guid("692c0d2f-0e62-4601-b7d4-21e496596f5d"));
			PositionTypeDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionTypeDescription.AssociationType.ObjectType = this;

			PositionTypeDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PositionTypeDescription.RoleType.AssignedSingularName = "Description";
			PositionTypeDescription.RoleType.AssignedPluralName = "Descriptions";
			PositionTypeDescription.RoleType.Size = 256;
			this.Roles.Description = PositionTypeDescription.RoleType;

			var PositionTypeResponsibility = new RelationType(AppsDomain.Instance, new Guid("44d5c360-a82d-40ca-a56c-e377327a4858"), new Guid("0588e142-76ff-43a7-ae6e-63427fc18b43"), new Guid("6c00b475-38d9-4f2a-a53b-5a82434db39a"));
			PositionTypeResponsibility.AssignedMultiplicity = Multiplicity.ManyToMany;
			PositionTypeResponsibility.IsIndexed = true;

			PositionTypeResponsibility.AssociationType.ObjectType = this;

			PositionTypeResponsibility.RoleType.ObjectType = ResponsibilityClass.Instance;;
			PositionTypeResponsibility.RoleType.AssignedSingularName = "Responsibility";
			PositionTypeResponsibility.RoleType.AssignedPluralName = "Responsibilities";
			this.Roles.Responsibility = PositionTypeResponsibility.RoleType;

			var PositionTypeBenefitPercentage = new RelationType(AppsDomain.Instance, new Guid("520649d5-7775-43d0-ab4b-762b2ec6557e"), new Guid("e63e57e3-ae72-456a-9dd4-881ac8c07525"), new Guid("a56a7a77-1233-46c4-86b1-f6ac24d7a1f8"));
			PositionTypeBenefitPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionTypeBenefitPercentage.AssociationType.ObjectType = this;

			PositionTypeBenefitPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PositionTypeBenefitPercentage.RoleType.AssignedSingularName = "BenefitPercentage";
			PositionTypeBenefitPercentage.RoleType.AssignedPluralName = "BenefitPercentages";
			PositionTypeBenefitPercentage.RoleType.Scale = 2;
			PositionTypeBenefitPercentage.RoleType.Precision = 19;
			this.Roles.BenefitPercentage = PositionTypeBenefitPercentage.RoleType;

			var PositionTypeTitle = new RelationType(AppsDomain.Instance, new Guid("8e8e40ff-d11d-4805-abde-845a1b3f1241"), new Guid("f20d568c-3bd8-4383-9cae-052e10065c8e"), new Guid("169055d1-d2ec-4a10-8792-574d8577b273"));
			PositionTypeTitle.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionTypeTitle.AssociationType.ObjectType = this;

			PositionTypeTitle.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PositionTypeTitle.RoleType.AssignedSingularName = "Title";
			PositionTypeTitle.RoleType.AssignedPluralName = "Titles";
			PositionTypeTitle.RoleType.Size = 256;
			this.Roles.Title = PositionTypeTitle.RoleType;

			var PositionTypePositionTypeRate = new RelationType(AppsDomain.Instance, new Guid("aa3886a5-a407-4598-900c-8fc3bcfc0604"), new Guid("bb552053-d6e7-470b-a8d9-81ed85950b19"), new Guid("827e2eda-b1bf-4040-9c3a-ff728a44f4c3"));
			PositionTypePositionTypeRate.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionTypePositionTypeRate.IsIndexed = true;

			PositionTypePositionTypeRate.AssociationType.ObjectType = this;

			PositionTypePositionTypeRate.RoleType.ObjectType = PositionTypeRateClass.Instance;;
			PositionTypePositionTypeRate.RoleType.AssignedSingularName = "PositionTypeRate";
			PositionTypePositionTypeRate.RoleType.AssignedPluralName = "PositionTypeRates";
			this.Roles.PositionTypeRate = PositionTypePositionTypeRate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PositionTypeClass.Instance.ConcreteRoles.Description = PositionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			PositionTypeClass.Instance.ConcreteRoles.Responsibility = PositionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Responsibility]; 

			PositionTypeClass.Instance.ConcreteRoles.BenefitPercentage = PositionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BenefitPercentage]; 

			PositionTypeClass.Instance.ConcreteRoles.Title = PositionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Title]; 

			PositionTypeClass.Instance.ConcreteRoles.PositionTypeRate = PositionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PositionTypeRate]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType Responsibility;
			internal RoleType BenefitPercentage;
			internal RoleType Title;
			internal RoleType PositionTypeRate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Responsibility;
			internal ConcreteRoleType BenefitPercentage;
			internal ConcreteRoleType Title;
			internal ConcreteRoleType PositionTypeRate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AgreementInterface: Interface
	{
		public static AgreementInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal AgreementInterface() : base(AppsDomain.Instance, new Guid("4deca253-7135-4ceb-b984-6adaf1515630"))
        {
			this.SingularName = "Agreement";
			this.PluralName = "Agreements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("15a03fe1-2c33-4631-9c76-4187b5be4764"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e0cc63cf-449c-4293-8d2b-6f5c8ed0b1fe"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e52a8bb1-27dd-4eca-9078-a1639308381c"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var AgreementAgreementDate = new RelationType(AppsDomain.Instance, new Guid("2ddce7b3-c763-45ea-8e1b-5ef8a0ea8e4a"), new Guid("d27ed7da-6a94-40ee-b790-8754282a2a1b"), new Guid("f199641e-5574-4733-b4e9-42f6ccb713a8"));
			AgreementAgreementDate.AssignedMultiplicity = Multiplicity.OneToOne;
			AgreementAgreementDate.AssociationType.ObjectType = this;

			AgreementAgreementDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			AgreementAgreementDate.RoleType.AssignedSingularName = "AgreementDate";
			AgreementAgreementDate.RoleType.AssignedPluralName = "AgreementDates";
			this.Roles.AgreementDate = AgreementAgreementDate.RoleType;

			var AgreementAddendum = new RelationType(AppsDomain.Instance, new Guid("34f0e272-7c56-4d92-a187-c40d9d907110"), new Guid("537bbe1f-ab09-4cbe-92d6-21e199dfcbf5"), new Guid("3fdf6e81-1581-40ca-a1ba-647f33ede850"));
			AgreementAddendum.AssignedMultiplicity = Multiplicity.OneToMany;
			AgreementAddendum.IsIndexed = true;

			AgreementAddendum.AssociationType.ObjectType = this;

			AgreementAddendum.RoleType.ObjectType = AddendumClass.Instance;;
			AgreementAddendum.RoleType.AssignedSingularName = "Addendum";
			AgreementAddendum.RoleType.AssignedPluralName = "Addenda";
			this.Roles.Addendum = AgreementAddendum.RoleType;

			var AgreementDescription = new RelationType(AppsDomain.Instance, new Guid("6bdc1767-2bbf-40de-9c2c-a84d1b376a6e"), new Guid("cc8c0485-68bb-46fb-b5e5-d9a970f33ad1"), new Guid("14384f18-d46b-4f01-9414-9c6568b35e80"));
			AgreementDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			AgreementDescription.AssociationType.ObjectType = this;

			AgreementDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AgreementDescription.RoleType.AssignedSingularName = "Description";
			AgreementDescription.RoleType.AssignedPluralName = "Description";
			AgreementDescription.RoleType.Size = 256;
			this.Roles.Description = AgreementDescription.RoleType;

			var AgreementAgreementTerm = new RelationType(AppsDomain.Instance, new Guid("9d0e9ea7-31d7-4c01-96f2-97c3e17b3f18"), new Guid("2d2697e9-bbd2-4146-b96f-1bc36dca274c"), new Guid("5ef5b4ca-6faa-4cf2-bfad-fa2f2902dbde"));
			AgreementAgreementTerm.AssignedMultiplicity = Multiplicity.OneToMany;
			AgreementAgreementTerm.IsIndexed = true;

			AgreementAgreementTerm.AssociationType.ObjectType = this;

			AgreementAgreementTerm.RoleType.ObjectType = AgreementTermInterface.Instance;;
			AgreementAgreementTerm.RoleType.AssignedSingularName = "AgreementTerm";
			AgreementAgreementTerm.RoleType.AssignedPluralName = "AgreementTerms";
			this.Roles.AgreementTerm = AgreementAgreementTerm.RoleType;

			var AgreementText = new RelationType(AppsDomain.Instance, new Guid("9f4db098-c486-4d88-9df9-cd7c79294575"), new Guid("89a37bf1-7c48-428e-b44c-113793c663aa"), new Guid("3469f600-8da7-4d56-b58a-e525487149fc"));
			AgreementText.AssignedMultiplicity = Multiplicity.OneToOne;
			AgreementText.AssociationType.ObjectType = this;

			AgreementText.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AgreementText.RoleType.AssignedSingularName = "Text";
			AgreementText.RoleType.AssignedPluralName = "Texts";
			AgreementText.RoleType.Size = -1;
			this.Roles.Text = AgreementText.RoleType;

			var AgreementAgreementItem = new RelationType(AppsDomain.Instance, new Guid("d5c90527-cae6-4a4f-9fd7-96f93dad59c7"), new Guid("ceb36b51-89ef-4335-a29f-c3c0f0fc3c06"), new Guid("061d6861-26d9-4008-8612-b72e78bae14f"));
			AgreementAgreementItem.AssignedMultiplicity = Multiplicity.OneToMany;
			AgreementAgreementItem.IsIndexed = true;

			AgreementAgreementItem.AssociationType.ObjectType = this;

			AgreementAgreementItem.RoleType.ObjectType = AgreementItemInterface.Instance;;
			AgreementAgreementItem.RoleType.AssignedSingularName = "AgreementItem";
			AgreementAgreementItem.RoleType.AssignedPluralName = "AgreementItems";
			this.Roles.AgreementItem = AgreementAgreementItem.RoleType;

			var AgreementAgreementNumber = new RelationType(AppsDomain.Instance, new Guid("daff1ce2-4d60-426c-a45c-a82b63751657"), new Guid("5a11ccff-0d68-4b2c-a7b3-7ba90d9818b0"), new Guid("da9244c2-9225-4448-b2ec-f3ee83d3ef15"));
			AgreementAgreementNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			AgreementAgreementNumber.AssociationType.ObjectType = this;

			AgreementAgreementNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AgreementAgreementNumber.RoleType.AssignedSingularName = "AgreementNumber";
			AgreementAgreementNumber.RoleType.AssignedPluralName = "AgreementNumbers";
			AgreementAgreementNumber.RoleType.Size = 256;
			this.Roles.AgreementNumber = AgreementAgreementNumber.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseAgreementClass.Instance.ConcreteRoles.AgreementDate = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementDate]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.AgreementDate = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementDate]; 
			SalesAgreementClass.Instance.ConcreteRoles.AgreementDate = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementDate]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.AgreementDate = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementDate]; 
			ClientAgreementClass.Instance.ConcreteRoles.AgreementDate = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementDate]; 

			PurchaseAgreementClass.Instance.ConcreteRoles.Addendum = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Addendum]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.Addendum = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Addendum]; 
			SalesAgreementClass.Instance.ConcreteRoles.Addendum = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Addendum]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.Addendum = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Addendum]; 
			ClientAgreementClass.Instance.ConcreteRoles.Addendum = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Addendum]; 

			PurchaseAgreementClass.Instance.ConcreteRoles.Description = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.Description = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			SalesAgreementClass.Instance.ConcreteRoles.Description = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.Description = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ClientAgreementClass.Instance.ConcreteRoles.Description = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			PurchaseAgreementClass.Instance.ConcreteRoles.AgreementTerm = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementTerm]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.AgreementTerm = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementTerm]; 
			SalesAgreementClass.Instance.ConcreteRoles.AgreementTerm = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementTerm]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.AgreementTerm = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementTerm]; 
			ClientAgreementClass.Instance.ConcreteRoles.AgreementTerm = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementTerm]; 

			PurchaseAgreementClass.Instance.ConcreteRoles.Text = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.Text = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			SalesAgreementClass.Instance.ConcreteRoles.Text = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.Text = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			ClientAgreementClass.Instance.ConcreteRoles.Text = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 

			PurchaseAgreementClass.Instance.ConcreteRoles.AgreementItem = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementItem]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.AgreementItem = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementItem]; 
			SalesAgreementClass.Instance.ConcreteRoles.AgreementItem = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementItem]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.AgreementItem = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementItem]; 
			ClientAgreementClass.Instance.ConcreteRoles.AgreementItem = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementItem]; 

			PurchaseAgreementClass.Instance.ConcreteRoles.AgreementNumber = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementNumber]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.AgreementNumber = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementNumber]; 
			SalesAgreementClass.Instance.ConcreteRoles.AgreementNumber = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementNumber]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.AgreementNumber = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementNumber]; 
			ClientAgreementClass.Instance.ConcreteRoles.AgreementNumber = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementNumber]; 


		}

		internal class RolesType
		{
			internal RoleType AgreementDate;
			internal RoleType Addendum;
			internal RoleType Description;
			internal RoleType AgreementTerm;
			internal RoleType Text;
			internal RoleType AgreementItem;
			internal RoleType AgreementNumber;

		}
	}public partial class ProductPurchasePriceClass : Class
	{
		public static ProductPurchasePriceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductPurchasePriceClass() : base(AppsDomain.Instance, new Guid("4e2d5dee-1dcf-4c14-8acc-d60fd47a3400"))
        {
			this.SingularName = "ProductPurchasePrice";
			this.PluralName = "ProductPurchasePrices";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("59f0621d-bf19-4026-a436-8c2e68641798"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("cd95dc84-a52b-43ae-8be6-7416f660d669"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductPurchasePricePrice = new RelationType(AppsDomain.Instance, new Guid("a59d91cc-610f-46b6-8935-e95a42edc31e"), new Guid("668c50de-36ba-4ba4-9e89-5319a466d5b0"), new Guid("728b18f7-cfaf-4bc0-84d4-5f2c8d0e8b8c"));
			ProductPurchasePricePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductPurchasePricePrice.AssociationType.ObjectType = this;

			ProductPurchasePricePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ProductPurchasePricePrice.RoleType.AssignedSingularName = "Price";
			ProductPurchasePricePrice.RoleType.AssignedPluralName = "Prices";
			ProductPurchasePricePrice.RoleType.Scale = 2;
			ProductPurchasePricePrice.RoleType.Precision = 19;
			this.Roles.Price = ProductPurchasePricePrice.RoleType;

			var ProductPurchasePriceUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("aa7af527-e616-4d01-86b4-e116c3087a37"), new Guid("54e165e0-61ac-46cb-bf92-7aa5d62493d0"), new Guid("4a60cdad-817e-4ae8-801a-13dce2d2c772"));
			ProductPurchasePriceUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductPurchasePriceUnitOfMeasure.IsIndexed = true;

			ProductPurchasePriceUnitOfMeasure.AssociationType.ObjectType = this;

			ProductPurchasePriceUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			ProductPurchasePriceUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			ProductPurchasePriceUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = ProductPurchasePriceUnitOfMeasure.RoleType;

			var ProductPurchasePriceCurrency = new RelationType(AppsDomain.Instance, new Guid("c16a7bec-e1fc-4034-8eb7-0223b776db7a"), new Guid("64d0db60-e291-4113-b471-8ac78f9f381d"), new Guid("cc93b5e0-d7f3-4ae4-910e-f7b2539049e0"));
			ProductPurchasePriceCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductPurchasePriceCurrency.IsIndexed = true;

			ProductPurchasePriceCurrency.AssociationType.ObjectType = this;

			ProductPurchasePriceCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			ProductPurchasePriceCurrency.RoleType.AssignedSingularName = "Currency";
			ProductPurchasePriceCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = ProductPurchasePriceCurrency.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductPurchasePriceClass.Instance.ConcreteRoles.Price = ProductPurchasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Price]; 

			ProductPurchasePriceClass.Instance.ConcreteRoles.UnitOfMeasure = ProductPurchasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 

			ProductPurchasePriceClass.Instance.ConcreteRoles.Currency = ProductPurchasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 


		}

		internal class RolesType
		{
			internal RoleType Price;
			internal RoleType UnitOfMeasure;
			internal RoleType Currency;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Price;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class CarrierClass : Class
	{
		public static CarrierClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CarrierClass() : base(AppsDomain.Instance, new Guid("4f46f32a-04e6-4ccc-829b-68fb3336f870"))
        {
			this.SingularName = "Carrier";
			this.PluralName = "Carriers";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3288c37c-aedc-4a52-8fad-01f5f8f81c06"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("f28722ad-40fa-47d1-8c83-fc3dfbe64686"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CarrierName = new RelationType(AppsDomain.Instance, new Guid("8defc9c0-6cc8-4e8a-b892-dad6ff908b85"), new Guid("9a0673e4-8c79-4677-a542-e17f4211d74d"), new Guid("cde2981f-9ba6-4c85-a0cc-b98bd3b7a8a2"));
			CarrierName.AssignedMultiplicity = Multiplicity.OneToOne;
			CarrierName.AssociationType.ObjectType = this;

			CarrierName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CarrierName.RoleType.AssignedSingularName = "Name";
			CarrierName.RoleType.AssignedPluralName = "Names";
			CarrierName.RoleType.Size = 256;
			this.Roles.Name = CarrierName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CarrierClass.Instance.ConcreteRoles.Name = CarrierClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ResumeClass : Class
	{
		public static ResumeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ResumeClass() : base(AppsDomain.Instance, new Guid("4f7703b0-7201-4f7a-a0b4-f177d64a2c31"))
        {
			this.SingularName = "Resume";
			this.PluralName = "Resumes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5e2c3c61-23f9-44d4-949a-2d2d86bdcd05"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ResumeResumeDate = new RelationType(AppsDomain.Instance, new Guid("5ebf789b-f66a-40c9-99d6-bfaedc581c78"), new Guid("f90810ba-d62d-4e51-b9c7-5aac4e7d4d87"), new Guid("62592457-6263-4e92-b45d-b929245fa750"));
			ResumeResumeDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ResumeResumeDate.AssociationType.ObjectType = this;

			ResumeResumeDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ResumeResumeDate.RoleType.AssignedSingularName = "ResumeDate";
			ResumeResumeDate.RoleType.AssignedPluralName = "ResumeDates";
			this.Roles.ResumeDate = ResumeResumeDate.RoleType;

			var ResumeResumeText = new RelationType(AppsDomain.Instance, new Guid("f2330d10-d7da-4085-8eff-f0b77cb91763"), new Guid("d38024ac-2e0b-40f1-a6e4-252c5ffc0bcc"), new Guid("b83ee648-06c2-40c6-a907-5d477d57d7db"));
			ResumeResumeText.AssignedMultiplicity = Multiplicity.OneToOne;
			ResumeResumeText.AssociationType.ObjectType = this;

			ResumeResumeText.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ResumeResumeText.RoleType.AssignedSingularName = "ResumeText";
			ResumeResumeText.RoleType.AssignedPluralName = "ResumeTexts";
			ResumeResumeText.RoleType.Size = -1;
			this.Roles.ResumeText = ResumeResumeText.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ResumeClass.Instance.ConcreteRoles.ResumeDate = ResumeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ResumeDate]; 

			ResumeClass.Instance.ConcreteRoles.ResumeText = ResumeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ResumeText]; 


		}

		internal class RolesType
		{
			internal RoleType ResumeDate;
			internal RoleType ResumeText;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ResumeDate;
			internal ConcreteRoleType ResumeText;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class WebAddressClass : Class
	{
		public static WebAddressClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WebAddressClass() : base(AppsDomain.Instance, new Guid("5138c0e3-1b28-4297-bf45-697624ee5c19"))
        {
			this.SingularName = "WebAddress";
			this.PluralName = "WebAddresses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2b6c4d35-d6ee-4fe0-bcb1-bb0ff6286477"))
			{
				Subtype = Instance,
				Supertype = ElectronicAddressInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ElectronicAddressString;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType FollowTo;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProjectRequirementClass : Class
	{
		public static ProjectRequirementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProjectRequirementClass() : base(AppsDomain.Instance, new Guid("51d0b6f6-221b-44d5-9a0b-9a880620b1ad"))
        {
			this.SingularName = "ProjectRequirement";
			this.PluralName = "ProjectRequirements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("07998871-7603-47f9-bb5f-d287d74177fe"))
			{
				Subtype = Instance,
				Supertype = RequirementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProjectRequirementNeededDeliverable = new RelationType(AppsDomain.Instance, new Guid("75d89129-9aa9-491c-894b-feb86b33bf52"), new Guid("e83f19ff-1441-4d6e-912f-ca56301e3621"), new Guid("80b74f53-e962-4988-a1c1-2860a08ca6b3"));
			ProjectRequirementNeededDeliverable.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProjectRequirementNeededDeliverable.IsIndexed = true;

			ProjectRequirementNeededDeliverable.AssociationType.ObjectType = this;

			ProjectRequirementNeededDeliverable.RoleType.ObjectType = DeliverableClass.Instance;;
			ProjectRequirementNeededDeliverable.RoleType.AssignedSingularName = "NeededDeliverable";
			ProjectRequirementNeededDeliverable.RoleType.AssignedPluralName = "NeededDeliverables";
			this.Roles.NeededDeliverable = ProjectRequirementNeededDeliverable.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProjectRequirementClass.Instance.ConcreteRoles.NeededDeliverable = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NeededDeliverable]; 


		}

		internal class RolesType
		{
			internal RoleType NeededDeliverable;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType NeededDeliverable;
			internal ConcreteRoleType RequiredByDate;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Authorizer;
			internal ConcreteRoleType RequirementStatus;
			internal ConcreteRoleType Reason;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType NeededFor;
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType CurrentRequirementStatus;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ServicedBy;
			internal ConcreteRoleType EstimatedBudget;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class DepositClass : Class
	{
		public static DepositClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DepositClass() : base(AppsDomain.Instance, new Guid("52458d42-94ee-4757-bcfb-bc9c45ed6dc6"))
        {
			this.SingularName = "Deposit";
			this.PluralName = "Deposits";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f4a1146a-61e6-4709-a1f4-d8de89532b76"))
			{
				Subtype = Instance,
				Supertype = FinancialAccountTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DepositReceipt = new RelationType(AppsDomain.Instance, new Guid("2a41dcff-72f9-4225-8a92-1955f10b8ae2"), new Guid("3a24349b-c31d-4ba1-bb95-616852f07c93"), new Guid("04ff9dbf-60cd-4062-b61a-c26b78cf1c48"));
			DepositReceipt.AssignedMultiplicity = Multiplicity.OneToMany;
			DepositReceipt.IsIndexed = true;

			DepositReceipt.AssociationType.ObjectType = this;

			DepositReceipt.RoleType.ObjectType = ReceiptClass.Instance;;
			DepositReceipt.RoleType.AssignedSingularName = "Receipt";
			DepositReceipt.RoleType.AssignedPluralName = "Receipts";
			this.Roles.Receipt = DepositReceipt.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DepositClass.Instance.ConcreteRoles.Receipt = DepositClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Receipt]; 


		}

		internal class RolesType
		{
			internal RoleType Receipt;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Receipt;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class LegalFormClass : Class
	{
		public static LegalFormClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal LegalFormClass() : base(AppsDomain.Instance, new Guid("528cf616-6c67-42e1-af69-b5e6cb1192ea"))
        {
			this.SingularName = "LegalForm";
			this.PluralName = "LegalForms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1c5e016c-494c-4fc3-b17d-c564dd7574ee"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var LegalFormDescription = new RelationType(AppsDomain.Instance, new Guid("2867d3b0-5def-4fc6-880a-be4bfe1d2597"), new Guid("ee4e44e3-2f9b-45fc-8b79-f2ac8e2da434"), new Guid("7aa44ba6-a0b4-403b-aabb-7622ddd2db30"));
			LegalFormDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			LegalFormDescription.AssociationType.ObjectType = this;

			LegalFormDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			LegalFormDescription.RoleType.AssignedSingularName = "Description";
			LegalFormDescription.RoleType.AssignedPluralName = "Descriptions";
			LegalFormDescription.RoleType.Size = 256;
			this.Roles.Description = LegalFormDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			LegalFormClass.Instance.ConcreteRoles.Description = LegalFormClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CostOfGoodsSoldMethodClass : Class
	{
		public static CostOfGoodsSoldMethodClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CostOfGoodsSoldMethodClass() : base(AppsDomain.Instance, new Guid("52ee223f-14e7-46e7-8e24-c6fdf19fa5d1"))
        {
			this.SingularName = "CostOfGoodsSoldMethod";
			this.PluralName = "CostOfGoodsSoldMethods";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8e7c0f06-34c9-4ed3-a752-121a6c7237e8"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class StatementOfWorkClass : Class
	{
		public static StatementOfWorkClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal StatementOfWorkClass() : base(AppsDomain.Instance, new Guid("5459f555-cf6a-49c1-8015-b43cad74da17"))
        {
			this.SingularName = "StatementOfWork";
			this.PluralName = "StatementsOfWork";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("51404769-ba58-4fc0-9521-1a081c82d7cc"))
			{
				Subtype = Instance,
				Supertype = QuoteInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ValidFromDate;
			internal ConcreteRoleType QuoteTerm;
			internal ConcreteRoleType Issuer;
			internal ConcreteRoleType ValidThroughDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Receiver;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType IssueDate;
			internal ConcreteRoleType QuoteItem;
			internal ConcreteRoleType QuoteNumber;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class FinancialAccountTransactionInterface: Interface
	{
		public static FinancialAccountTransactionInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal FinancialAccountTransactionInterface() : base(AppsDomain.Instance, new Guid("5500cb42-1aae-4816-9bc1-d63ff273f144"))
        {
			this.SingularName = "FinancialAccountTransaction";
			this.PluralName = "FinancialAccountTransactions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("08f7e832-3949-4971-b117-90ce166cda67"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var FinancialAccountTransactionDescription = new RelationType(AppsDomain.Instance, new Guid("04411b65-a0a1-4e2c-9d10-a0ecfcf6c3d2"), new Guid("340a61a7-3458-47ea-b41d-4c559fd8b1d2"), new Guid("1c6950b1-b5dc-4204-878a-f10029dcc4ab"));
			FinancialAccountTransactionDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			FinancialAccountTransactionDescription.AssociationType.ObjectType = this;

			FinancialAccountTransactionDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			FinancialAccountTransactionDescription.RoleType.AssignedSingularName = "Description";
			FinancialAccountTransactionDescription.RoleType.AssignedPluralName = "Descriptons";
			FinancialAccountTransactionDescription.RoleType.Size = 256;
			this.Roles.Description = FinancialAccountTransactionDescription.RoleType;

			var FinancialAccountTransactionEntryDate = new RelationType(AppsDomain.Instance, new Guid("07b3745c-581c-476b-a4a9-beacaa3bd700"), new Guid("7878206b-b4f9-4ddd-b69e-a041402844dd"), new Guid("2e77d783-9cda-41e6-be8b-1bf96520a385"));
			FinancialAccountTransactionEntryDate.AssignedMultiplicity = Multiplicity.OneToOne;
			FinancialAccountTransactionEntryDate.AssociationType.ObjectType = this;

			FinancialAccountTransactionEntryDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			FinancialAccountTransactionEntryDate.RoleType.AssignedSingularName = "EntryDate";
			FinancialAccountTransactionEntryDate.RoleType.AssignedPluralName = "EntryDates";
			this.Roles.EntryDate = FinancialAccountTransactionEntryDate.RoleType;

			var FinancialAccountTransactionTransactionDate = new RelationType(AppsDomain.Instance, new Guid("8f777804-597a-4604-a553-251e2e9d6502"), new Guid("f74151d5-ad2e-4418-b3a1-3772afbdaf52"), new Guid("3135d67e-7290-4eb2-aec8-e783d9325a02"));
			FinancialAccountTransactionTransactionDate.AssignedMultiplicity = Multiplicity.OneToOne;
			FinancialAccountTransactionTransactionDate.AssociationType.ObjectType = this;

			FinancialAccountTransactionTransactionDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			FinancialAccountTransactionTransactionDate.RoleType.AssignedSingularName = "TransactionDate";
			FinancialAccountTransactionTransactionDate.RoleType.AssignedPluralName = "TransactionDates";
			this.Roles.TransactionDate = FinancialAccountTransactionTransactionDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			FinancialAccountAdjustmentClass.Instance.ConcreteRoles.Description = FinancialAccountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			AccountAdjustmentClass.Instance.ConcreteRoles.Description = AccountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			DepositClass.Instance.ConcreteRoles.Description = DepositClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			WithdrawalClass.Instance.ConcreteRoles.Description = WithdrawalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			FinancialAccountAdjustmentClass.Instance.ConcreteRoles.EntryDate = FinancialAccountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			AccountAdjustmentClass.Instance.ConcreteRoles.EntryDate = AccountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			DepositClass.Instance.ConcreteRoles.EntryDate = DepositClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			WithdrawalClass.Instance.ConcreteRoles.EntryDate = WithdrawalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 

			FinancialAccountAdjustmentClass.Instance.ConcreteRoles.TransactionDate = FinancialAccountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			AccountAdjustmentClass.Instance.ConcreteRoles.TransactionDate = AccountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			DepositClass.Instance.ConcreteRoles.TransactionDate = DepositClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			WithdrawalClass.Instance.ConcreteRoles.TransactionDate = WithdrawalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType EntryDate;
			internal RoleType TransactionDate;

		}
	}public partial class WorkEffortInterface: Interface
	{
		public static WorkEffortInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal WorkEffortInterface() : base(AppsDomain.Instance, new Guid("553a5280-a768-4ba1-8b5d-304d7c4bb7f1"))
        {
			this.SingularName = "WorkEffort";
			this.PluralName = "WorkEfforts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("18c17d5c-5c88-463c-94fa-604fd19d862b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("5b92477c-aa4f-42ff-a952-f789fef97e7b"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("dd2aa747-0fcc-4599-b846-1c71f814482c"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortCurrentWorkEffortStatus = new RelationType(AppsDomain.Instance, new Guid("039032fa-478b-443f-a58f-0f128e044a4e"), new Guid("48a38f55-f593-405a-b716-cc1eab4ee18c"), new Guid("f9c76b7a-ff9c-4948-a84e-0d8ae1d22740"));
			WorkEffortCurrentWorkEffortStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortCurrentWorkEffortStatus.IsDerived = true;
			WorkEffortCurrentWorkEffortStatus.IsIndexed = true;

			WorkEffortCurrentWorkEffortStatus.AssociationType.ObjectType = this;

			WorkEffortCurrentWorkEffortStatus.RoleType.ObjectType = WorkEffortStatusClass.Instance;;
			WorkEffortCurrentWorkEffortStatus.RoleType.AssignedSingularName = "CurrentWorkEffortStatus";
			WorkEffortCurrentWorkEffortStatus.RoleType.AssignedPluralName = "CurrentWorkEffortStatuses";
			this.Roles.CurrentWorkEffortStatus = WorkEffortCurrentWorkEffortStatus.RoleType;

			var WorkEffortPrecendency = new RelationType(AppsDomain.Instance, new Guid("092a296d-6f15-4fdd-aed6-25185e6e10b1"), new Guid("95a67913-5914-4705-b76d-6eed73704fab"), new Guid("ff1fade9-aa0b-4058-b8e0-8d993eb841cb"));
			WorkEffortPrecendency.AssignedMultiplicity = Multiplicity.ManyToMany;
			WorkEffortPrecendency.IsIndexed = true;

			WorkEffortPrecendency.AssociationType.ObjectType = this;

			WorkEffortPrecendency.RoleType.ObjectType = WorkEffortInterface.Instance;;
			WorkEffortPrecendency.RoleType.AssignedSingularName = "Precendency";
			WorkEffortPrecendency.RoleType.AssignedPluralName = "Precendencies";
			this.Roles.Precendency = WorkEffortPrecendency.RoleType;

			var WorkEffortFacility = new RelationType(AppsDomain.Instance, new Guid("0db9b217-c54f-4a7b-a1c0-9592eeabd51f"), new Guid("c918d8f5-77f0-4c0d-b02a-7695a7109cf2"), new Guid("ae8f325d-31e5-473a-8caf-d378ba571025"));
			WorkEffortFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortFacility.IsIndexed = true;

			WorkEffortFacility.AssociationType.ObjectType = this;

			WorkEffortFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			WorkEffortFacility.RoleType.AssignedSingularName = "Facility";
			WorkEffortFacility.RoleType.AssignedPluralName = "Facilities";
			this.Roles.Facility = WorkEffortFacility.RoleType;

			var WorkEffortDeliverableProduced = new RelationType(AppsDomain.Instance, new Guid("1a3705c0-0e77-4d6d-a368-ef5141a6c908"), new Guid("b22db3e0-68aa-477c-b86b-96a1b2bb8d20"), new Guid("3f80745d-6a22-4322-b349-ca2a7e441692"));
			WorkEffortDeliverableProduced.AssignedMultiplicity = Multiplicity.OneToMany;
			WorkEffortDeliverableProduced.IsIndexed = true;

			WorkEffortDeliverableProduced.AssociationType.ObjectType = this;

			WorkEffortDeliverableProduced.RoleType.ObjectType = DeliverableClass.Instance;;
			WorkEffortDeliverableProduced.RoleType.AssignedSingularName = "DeliverableProduced";
			WorkEffortDeliverableProduced.RoleType.AssignedPluralName = "DeliverablesProduced";
			this.Roles.DeliverableProduced = WorkEffortDeliverableProduced.RoleType;

			var WorkEffortActualStart = new RelationType(AppsDomain.Instance, new Guid("1cac44f2-bf48-4b7b-9d29-658e6eedeb86"), new Guid("ade49717-2f6b-4574-a6af-03d552ced0b2"), new Guid("495fbe3c-8433-4593-bf32-ccfcc11b2a45"));
			WorkEffortActualStart.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortActualStart.IsIndexed = true;

			WorkEffortActualStart.AssociationType.ObjectType = this;

			WorkEffortActualStart.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			WorkEffortActualStart.RoleType.AssignedSingularName = "ActualStart";
			WorkEffortActualStart.RoleType.AssignedPluralName = "ActualStarts";
			this.Roles.ActualStart = WorkEffortActualStart.RoleType;

			var WorkEffortInventoryItemNeeded = new RelationType(AppsDomain.Instance, new Guid("2e7494ed-6df4-424e-907b-3b900aabf4c5"), new Guid("c6a502b8-5867-4ac9-8356-60155c1950ae"), new Guid("45733b43-f02c-498d-8e77-fe882526268c"));
			WorkEffortInventoryItemNeeded.AssignedMultiplicity = Multiplicity.OneToMany;
			WorkEffortInventoryItemNeeded.IsIndexed = true;

			WorkEffortInventoryItemNeeded.AssociationType.ObjectType = this;

			WorkEffortInventoryItemNeeded.RoleType.ObjectType = WorkEffortInventoryAssignmentClass.Instance;;
			WorkEffortInventoryItemNeeded.RoleType.AssignedSingularName = "InventoryItemNeeded";
			WorkEffortInventoryItemNeeded.RoleType.AssignedPluralName = "InventoryItemsNeeded";
			this.Roles.InventoryItemNeeded = WorkEffortInventoryItemNeeded.RoleType;

			var WorkEffortChild = new RelationType(AppsDomain.Instance, new Guid("2efd427f-daeb-4b84-9f86-857ed1bdb1b7"), new Guid("0e92f113-f607-46bb-85c1-eb3cddb317ef"), new Guid("40e23b5c-8943-4e27-86a1-d0a0140068e6"));
			WorkEffortChild.AssignedMultiplicity = Multiplicity.ManyToMany;
			WorkEffortChild.IsIndexed = true;

			WorkEffortChild.AssociationType.ObjectType = this;

			WorkEffortChild.RoleType.ObjectType = WorkEffortInterface.Instance;;
			WorkEffortChild.RoleType.AssignedSingularName = "Child";
			WorkEffortChild.RoleType.AssignedPluralName = "Children";
			this.Roles.Child = WorkEffortChild.RoleType;

			var WorkEffortActualCompletion = new RelationType(AppsDomain.Instance, new Guid("30645381-bb0c-4782-a9cc-388c7406456d"), new Guid("1187cb7d-4346-4089-b02c-b834a3ff8dca"), new Guid("754b32ab-f426-41a9-87c1-b701f7952d15"));
			WorkEffortActualCompletion.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortActualCompletion.IsIndexed = true;

			WorkEffortActualCompletion.AssociationType.ObjectType = this;

			WorkEffortActualCompletion.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			WorkEffortActualCompletion.RoleType.AssignedSingularName = "ActualCompletion";
			WorkEffortActualCompletion.RoleType.AssignedPluralName = "ActualCompletions";
			this.Roles.ActualCompletion = WorkEffortActualCompletion.RoleType;

			var WorkEffortOrderItemFulfillment = new RelationType(AppsDomain.Instance, new Guid("3081fa56-272c-43d6-a54c-ad70cb233034"), new Guid("171d3338-5b58-4776-87de-a0b934e15a0a"), new Guid("3c24f9fa-1ada-42f8-8fe1-90c244189254"));
			WorkEffortOrderItemFulfillment.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortOrderItemFulfillment.IsIndexed = true;

			WorkEffortOrderItemFulfillment.AssociationType.ObjectType = this;

			WorkEffortOrderItemFulfillment.RoleType.ObjectType = OrderItemInterface.Instance;;
			WorkEffortOrderItemFulfillment.RoleType.AssignedSingularName = "OrderItemFulfillment";
			WorkEffortOrderItemFulfillment.RoleType.AssignedPluralName = "OrderItemFulfillments";
			this.Roles.OrderItemFulfillment = WorkEffortOrderItemFulfillment.RoleType;

			var WorkEffortWorkEffortStatus = new RelationType(AppsDomain.Instance, new Guid("39c8b84f-6925-41f7-aecf-2d73481746cc"), new Guid("736b0da0-facc-48ed-a2a2-2d67257c733b"), new Guid("05694786-18d6-4694-9e37-90f804bab984"));
			WorkEffortWorkEffortStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			WorkEffortWorkEffortStatus.IsDerived = true;
			WorkEffortWorkEffortStatus.IsIndexed = true;

			WorkEffortWorkEffortStatus.AssociationType.ObjectType = this;

			WorkEffortWorkEffortStatus.RoleType.ObjectType = WorkEffortStatusClass.Instance;;
			WorkEffortWorkEffortStatus.RoleType.AssignedSingularName = "WorkEffortStatus";
			WorkEffortWorkEffortStatus.RoleType.AssignedPluralName = "WorkEffortStatuses";
			this.Roles.WorkEffortStatus = WorkEffortWorkEffortStatus.RoleType;

			var WorkEffortWorkEffortType = new RelationType(AppsDomain.Instance, new Guid("3bebd379-65a9-445e-898e-8913c26b94e6"), new Guid("d12425ed-2676-419e-bfae-674810fde5a8"), new Guid("f4b0fb7e-8e84-43ca-88b0-44242216ee7e"));
			WorkEffortWorkEffortType.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortWorkEffortType.IsIndexed = true;

			WorkEffortWorkEffortType.AssociationType.ObjectType = this;

			WorkEffortWorkEffortType.RoleType.ObjectType = WorkEffortTypeClass.Instance;;
			WorkEffortWorkEffortType.RoleType.AssignedSingularName = "WorkEffortType";
			WorkEffortWorkEffortType.RoleType.AssignedPluralName = "WorkEffortTypes";
			this.Roles.WorkEffortType = WorkEffortWorkEffortType.RoleType;

			var WorkEffortInventoryItemProduced = new RelationType(AppsDomain.Instance, new Guid("62b84e6e-1b2f-46cb-825f-57f586e6cb92"), new Guid("81a938c3-1b27-4c24-993a-9bf616f06582"), new Guid("dc2dc942-1210-4fdd-ad95-fe5b4dbd674d"));
			WorkEffortInventoryItemProduced.AssignedMultiplicity = Multiplicity.ManyToMany;
			WorkEffortInventoryItemProduced.IsIndexed = true;

			WorkEffortInventoryItemProduced.AssociationType.ObjectType = this;

			WorkEffortInventoryItemProduced.RoleType.ObjectType = InventoryItemInterface.Instance;;
			WorkEffortInventoryItemProduced.RoleType.AssignedSingularName = "InventoryItemProduced";
			WorkEffortInventoryItemProduced.RoleType.AssignedPluralName = "InventoryItemsProduced";
			this.Roles.InventoryItemProduced = WorkEffortInventoryItemProduced.RoleType;

			var WorkEffortWorkEffortPurpose = new RelationType(AppsDomain.Instance, new Guid("6af30dd9-7f3b-47e7-a929-7ecd28b9b53f"), new Guid("74684daa-d716-4af7-b819-0ab224077eac"), new Guid("e4485ae7-5156-4b97-aaa2-fe7fe6f80699"));
			WorkEffortWorkEffortPurpose.AssignedMultiplicity = Multiplicity.ManyToMany;
			WorkEffortWorkEffortPurpose.IsIndexed = true;

			WorkEffortWorkEffortPurpose.AssociationType.ObjectType = this;

			WorkEffortWorkEffortPurpose.RoleType.ObjectType = WorkEffortPurposeClass.Instance;;
			this.Roles.WorkEffortPurpose = WorkEffortWorkEffortPurpose.RoleType;

			var WorkEffortPriority = new RelationType(AppsDomain.Instance, new Guid("858e42df-d775-4eec-b029-343e8b094311"), new Guid("7abda175-3c95-46c7-b7a9-35aafca3df1c"), new Guid("0490c978-ec91-4418-a5cc-bb014b428dcf"));
			WorkEffortPriority.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortPriority.IsIndexed = true;

			WorkEffortPriority.AssociationType.ObjectType = this;

			WorkEffortPriority.RoleType.ObjectType = PriorityClass.Instance;;
			this.Roles.Priority = WorkEffortPriority.RoleType;

			var WorkEffortName = new RelationType(AppsDomain.Instance, new Guid("97a874e9-10ef-43fb-80d2-10e0974bb3a1"), new Guid("29df5d80-5baf-436c-b4ae-48f2f0dad2fd"), new Guid("bf8f5058-dd2c-439d-bf7c-879ab69a2ca1"));
			WorkEffortName.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortName.AssociationType.ObjectType = this;

			WorkEffortName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			WorkEffortName.RoleType.AssignedSingularName = "Name";
			WorkEffortName.RoleType.AssignedPluralName = "Names";
			WorkEffortName.RoleType.Size = 256;
			this.Roles.Name = WorkEffortName.RoleType;

			var WorkEffortRequirementFulfillment = new RelationType(AppsDomain.Instance, new Guid("a60c8797-320d-471f-9755-d3ef20a4feac"), new Guid("dd8b0f11-0443-4120-be2f-9a43125ccd62"), new Guid("7693cd03-9b2c-4f10-9826-0335371e893d"));
			WorkEffortRequirementFulfillment.AssignedMultiplicity = Multiplicity.ManyToMany;
			WorkEffortRequirementFulfillment.IsIndexed = true;

			WorkEffortRequirementFulfillment.AssociationType.ObjectType = this;

			WorkEffortRequirementFulfillment.RoleType.ObjectType = RequirementInterface.Instance;;
			WorkEffortRequirementFulfillment.RoleType.AssignedSingularName = "RequirementFulfillment";
			WorkEffortRequirementFulfillment.RoleType.AssignedPluralName = "RequirementFulfillments";
			this.Roles.RequirementFulfillment = WorkEffortRequirementFulfillment.RoleType;

			var WorkEffortSpecialTerms = new RelationType(AppsDomain.Instance, new Guid("a6fa6291-501a-4b5e-992d-ee5b9a291700"), new Guid("c5cbd6e4-8a61-4e7b-9219-55170ef79f3e"), new Guid("8e8c2f0e-562f-4cb8-9b3f-6a255df820a3"));
			WorkEffortSpecialTerms.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortSpecialTerms.AssociationType.ObjectType = this;

			WorkEffortSpecialTerms.RoleType.ObjectType = AllorsStringUnit.Instance;;
			WorkEffortSpecialTerms.RoleType.AssignedSingularName = "SpecialTerms";
			WorkEffortSpecialTerms.RoleType.AssignedPluralName = "SpecialTermsPlural";
			WorkEffortSpecialTerms.RoleType.Size = -1;
			this.Roles.SpecialTerms = WorkEffortSpecialTerms.RoleType;

			var WorkEffortConcurrency = new RelationType(AppsDomain.Instance, new Guid("add2f3d5-d83a-4734-ad69-9f86eb116f06"), new Guid("d5f050e0-d662-4ac7-90d5-16625fd4afff"), new Guid("18fac5c8-2ba6-43cb-ad3b-d82facc17590"));
			WorkEffortConcurrency.AssignedMultiplicity = Multiplicity.ManyToMany;
			WorkEffortConcurrency.IsIndexed = true;

			WorkEffortConcurrency.AssociationType.ObjectType = this;

			WorkEffortConcurrency.RoleType.ObjectType = WorkEffortInterface.Instance;;
			WorkEffortConcurrency.RoleType.AssignedSingularName = "Concurrency";
			WorkEffortConcurrency.RoleType.AssignedPluralName = "Concurrencies";
			this.Roles.Concurrency = WorkEffortConcurrency.RoleType;

			var WorkEffortScheduledStart = new RelationType(AppsDomain.Instance, new Guid("aedad096-b297-47b7-98e4-69c6dde9b128"), new Guid("13208331-e72f-4adb-9e78-c6ba7b68ce65"), new Guid("e23b0aa8-8b02-4274-826c-af140683ad22"));
			WorkEffortScheduledStart.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortScheduledStart.IsIndexed = true;

			WorkEffortScheduledStart.AssociationType.ObjectType = this;

			WorkEffortScheduledStart.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			WorkEffortScheduledStart.RoleType.AssignedSingularName = "ScheduledStart";
			WorkEffortScheduledStart.RoleType.AssignedPluralName = "ScheduledStarts";
			this.Roles.ScheduledStart = WorkEffortScheduledStart.RoleType;

			var WorkEffortActualHours = new RelationType(AppsDomain.Instance, new Guid("b6213705-ed58-4597-9939-a058b89610f8"), new Guid("4ad69693-3a44-4403-abed-43fd6f208348"), new Guid("21381f45-898c-4622-9e26-039cb49a9eaa"));
			WorkEffortActualHours.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortActualHours.AssociationType.ObjectType = this;

			WorkEffortActualHours.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortActualHours.RoleType.AssignedSingularName = "ActualHours";
			WorkEffortActualHours.RoleType.AssignedPluralName = "ActualHoursPlural";
			WorkEffortActualHours.RoleType.Scale = 2;
			WorkEffortActualHours.RoleType.Precision = 19;
			this.Roles.ActualHours = WorkEffortActualHours.RoleType;

			var WorkEffortDescription = new RelationType(AppsDomain.Instance, new Guid("bac1939b-8cf8-4b18-862c-4c2dc0a591e5"), new Guid("7172728e-29d2-498f-bea9-da8ab04a1ae5"), new Guid("60306059-f537-4fd6-9d31-7b502f39662e"));
			WorkEffortDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortDescription.AssociationType.ObjectType = this;

			WorkEffortDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			WorkEffortDescription.RoleType.AssignedSingularName = "Description";
			WorkEffortDescription.RoleType.AssignedPluralName = "Descriptions";
			WorkEffortDescription.RoleType.Size = 256;
			this.Roles.Description = WorkEffortDescription.RoleType;

			var WorkEffortPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("c71e0d84-b943-43b8-8802-2a95a0b26dc6"), new Guid("16dcc490-612c-4ce1-843e-1c6d3701e4ad"), new Guid("ec31faca-707c-4ba5-b8e8-84b9f644f7e3"));
			WorkEffortPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortPreviousObjectState.IsDerived = true;
			WorkEffortPreviousObjectState.IsIndexed = true;

			WorkEffortPreviousObjectState.AssociationType.ObjectType = this;

			WorkEffortPreviousObjectState.RoleType.ObjectType = WorkEffortObjectStateClass.Instance;;
			WorkEffortPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			WorkEffortPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = WorkEffortPreviousObjectState.RoleType;

			var WorkEffortCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("d71aaad8-20ba-4e7f-a4f8-da43e372e202"), new Guid("a1a70f42-fba3-451c-8241-a854a4dba7e2"), new Guid("e6d3f9cb-5465-44e2-92bf-0844c6dfe806"));
			WorkEffortCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortCurrentObjectState.IsIndexed = true;

			WorkEffortCurrentObjectState.AssociationType.ObjectType = this;

			WorkEffortCurrentObjectState.RoleType.ObjectType = WorkEffortObjectStateClass.Instance;;
			WorkEffortCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			WorkEffortCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = WorkEffortCurrentObjectState.RoleType;

			var WorkEffortScheduledCompletion = new RelationType(AppsDomain.Instance, new Guid("e189f9fc-fe3c-44af-985a-cdc3e749e25c"), new Guid("9747c7a3-7f5c-4660-9cb3-3635acd954a0"), new Guid("25dcbbaa-c53a-44de-b248-46b9ec5dfed2"));
			WorkEffortScheduledCompletion.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortScheduledCompletion.IsIndexed = true;

			WorkEffortScheduledCompletion.AssociationType.ObjectType = this;

			WorkEffortScheduledCompletion.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			WorkEffortScheduledCompletion.RoleType.AssignedSingularName = "ScheduledCompletion";
			WorkEffortScheduledCompletion.RoleType.AssignedPluralName = "ScheduledCompletions";
			this.Roles.ScheduledCompletion = WorkEffortScheduledCompletion.RoleType;

			var WorkEffortEstimatedHours = new RelationType(AppsDomain.Instance, new Guid("ebd0daa8-ab45-4390-89f7-3bc89faecdfb"), new Guid("db761f6b-63e2-41fc-a5d9-1d80daa12fbe"), new Guid("149d4820-8630-42a0-9458-18671fb09071"));
			WorkEffortEstimatedHours.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortEstimatedHours.AssociationType.ObjectType = this;

			WorkEffortEstimatedHours.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortEstimatedHours.RoleType.AssignedSingularName = "EstimatedHours";
			WorkEffortEstimatedHours.RoleType.AssignedPluralName = "EstimatedHoursPlural";
			WorkEffortEstimatedHours.RoleType.Scale = 2;
			WorkEffortEstimatedHours.RoleType.Precision = 19;
			this.Roles.EstimatedHours = WorkEffortEstimatedHours.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProjectClass.Instance.ConcreteRoles.CurrentWorkEffortStatus = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentWorkEffortStatus]; 
			ActivityClass.Instance.ConcreteRoles.CurrentWorkEffortStatus = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentWorkEffortStatus]; 
			ProductionRunClass.Instance.ConcreteRoles.CurrentWorkEffortStatus = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentWorkEffortStatus]; 
			MaintenanceClass.Instance.ConcreteRoles.CurrentWorkEffortStatus = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentWorkEffortStatus]; 
			PhaseClass.Instance.ConcreteRoles.CurrentWorkEffortStatus = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentWorkEffortStatus]; 
			WorkFlowClass.Instance.ConcreteRoles.CurrentWorkEffortStatus = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentWorkEffortStatus]; 
			TaskClass.Instance.ConcreteRoles.CurrentWorkEffortStatus = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentWorkEffortStatus]; 
			ResearchClass.Instance.ConcreteRoles.CurrentWorkEffortStatus = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentWorkEffortStatus]; 
			ProgramClass.Instance.ConcreteRoles.CurrentWorkEffortStatus = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentWorkEffortStatus]; 

			ProjectClass.Instance.ConcreteRoles.Precendency = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Precendency]; 
			ActivityClass.Instance.ConcreteRoles.Precendency = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Precendency]; 
			ProductionRunClass.Instance.ConcreteRoles.Precendency = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Precendency]; 
			MaintenanceClass.Instance.ConcreteRoles.Precendency = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Precendency]; 
			PhaseClass.Instance.ConcreteRoles.Precendency = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Precendency]; 
			WorkFlowClass.Instance.ConcreteRoles.Precendency = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Precendency]; 
			TaskClass.Instance.ConcreteRoles.Precendency = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Precendency]; 
			ResearchClass.Instance.ConcreteRoles.Precendency = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Precendency]; 
			ProgramClass.Instance.ConcreteRoles.Precendency = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Precendency]; 

			ProjectClass.Instance.ConcreteRoles.Facility = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			ActivityClass.Instance.ConcreteRoles.Facility = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			ProductionRunClass.Instance.ConcreteRoles.Facility = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			MaintenanceClass.Instance.ConcreteRoles.Facility = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			PhaseClass.Instance.ConcreteRoles.Facility = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			WorkFlowClass.Instance.ConcreteRoles.Facility = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			TaskClass.Instance.ConcreteRoles.Facility = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			ResearchClass.Instance.ConcreteRoles.Facility = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			ProgramClass.Instance.ConcreteRoles.Facility = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 

			ProjectClass.Instance.ConcreteRoles.DeliverableProduced = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableProduced]; 
			ActivityClass.Instance.ConcreteRoles.DeliverableProduced = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableProduced]; 
			ProductionRunClass.Instance.ConcreteRoles.DeliverableProduced = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableProduced]; 
			MaintenanceClass.Instance.ConcreteRoles.DeliverableProduced = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableProduced]; 
			PhaseClass.Instance.ConcreteRoles.DeliverableProduced = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableProduced]; 
			WorkFlowClass.Instance.ConcreteRoles.DeliverableProduced = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableProduced]; 
			TaskClass.Instance.ConcreteRoles.DeliverableProduced = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableProduced]; 
			ResearchClass.Instance.ConcreteRoles.DeliverableProduced = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableProduced]; 
			ProgramClass.Instance.ConcreteRoles.DeliverableProduced = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableProduced]; 

			ProjectClass.Instance.ConcreteRoles.ActualStart = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			ActivityClass.Instance.ConcreteRoles.ActualStart = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			ProductionRunClass.Instance.ConcreteRoles.ActualStart = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			MaintenanceClass.Instance.ConcreteRoles.ActualStart = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			PhaseClass.Instance.ConcreteRoles.ActualStart = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			WorkFlowClass.Instance.ConcreteRoles.ActualStart = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			TaskClass.Instance.ConcreteRoles.ActualStart = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			ResearchClass.Instance.ConcreteRoles.ActualStart = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			ProgramClass.Instance.ConcreteRoles.ActualStart = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 

			ProjectClass.Instance.ConcreteRoles.InventoryItemNeeded = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemNeeded]; 
			ActivityClass.Instance.ConcreteRoles.InventoryItemNeeded = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemNeeded]; 
			ProductionRunClass.Instance.ConcreteRoles.InventoryItemNeeded = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemNeeded]; 
			MaintenanceClass.Instance.ConcreteRoles.InventoryItemNeeded = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemNeeded]; 
			PhaseClass.Instance.ConcreteRoles.InventoryItemNeeded = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemNeeded]; 
			WorkFlowClass.Instance.ConcreteRoles.InventoryItemNeeded = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemNeeded]; 
			TaskClass.Instance.ConcreteRoles.InventoryItemNeeded = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemNeeded]; 
			ResearchClass.Instance.ConcreteRoles.InventoryItemNeeded = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemNeeded]; 
			ProgramClass.Instance.ConcreteRoles.InventoryItemNeeded = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemNeeded]; 

			ProjectClass.Instance.ConcreteRoles.Child = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			ActivityClass.Instance.ConcreteRoles.Child = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			ProductionRunClass.Instance.ConcreteRoles.Child = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			MaintenanceClass.Instance.ConcreteRoles.Child = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			PhaseClass.Instance.ConcreteRoles.Child = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			WorkFlowClass.Instance.ConcreteRoles.Child = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			TaskClass.Instance.ConcreteRoles.Child = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			ResearchClass.Instance.ConcreteRoles.Child = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			ProgramClass.Instance.ConcreteRoles.Child = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 

			ProjectClass.Instance.ConcreteRoles.ActualCompletion = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualCompletion]; 
			ActivityClass.Instance.ConcreteRoles.ActualCompletion = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualCompletion]; 
			ProductionRunClass.Instance.ConcreteRoles.ActualCompletion = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualCompletion]; 
			MaintenanceClass.Instance.ConcreteRoles.ActualCompletion = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualCompletion]; 
			PhaseClass.Instance.ConcreteRoles.ActualCompletion = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualCompletion]; 
			WorkFlowClass.Instance.ConcreteRoles.ActualCompletion = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualCompletion]; 
			TaskClass.Instance.ConcreteRoles.ActualCompletion = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualCompletion]; 
			ResearchClass.Instance.ConcreteRoles.ActualCompletion = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualCompletion]; 
			ProgramClass.Instance.ConcreteRoles.ActualCompletion = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualCompletion]; 

			ProjectClass.Instance.ConcreteRoles.OrderItemFulfillment = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemFulfillment]; 
			ActivityClass.Instance.ConcreteRoles.OrderItemFulfillment = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemFulfillment]; 
			ProductionRunClass.Instance.ConcreteRoles.OrderItemFulfillment = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemFulfillment]; 
			MaintenanceClass.Instance.ConcreteRoles.OrderItemFulfillment = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemFulfillment]; 
			PhaseClass.Instance.ConcreteRoles.OrderItemFulfillment = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemFulfillment]; 
			WorkFlowClass.Instance.ConcreteRoles.OrderItemFulfillment = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemFulfillment]; 
			TaskClass.Instance.ConcreteRoles.OrderItemFulfillment = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemFulfillment]; 
			ResearchClass.Instance.ConcreteRoles.OrderItemFulfillment = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemFulfillment]; 
			ProgramClass.Instance.ConcreteRoles.OrderItemFulfillment = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemFulfillment]; 

			ProjectClass.Instance.ConcreteRoles.WorkEffortStatus = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortStatus]; 
			ActivityClass.Instance.ConcreteRoles.WorkEffortStatus = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortStatus]; 
			ProductionRunClass.Instance.ConcreteRoles.WorkEffortStatus = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortStatus]; 
			MaintenanceClass.Instance.ConcreteRoles.WorkEffortStatus = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortStatus]; 
			PhaseClass.Instance.ConcreteRoles.WorkEffortStatus = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortStatus]; 
			WorkFlowClass.Instance.ConcreteRoles.WorkEffortStatus = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortStatus]; 
			TaskClass.Instance.ConcreteRoles.WorkEffortStatus = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortStatus]; 
			ResearchClass.Instance.ConcreteRoles.WorkEffortStatus = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortStatus]; 
			ProgramClass.Instance.ConcreteRoles.WorkEffortStatus = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortStatus]; 

			ProjectClass.Instance.ConcreteRoles.WorkEffortType = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortType]; 
			ActivityClass.Instance.ConcreteRoles.WorkEffortType = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortType]; 
			ProductionRunClass.Instance.ConcreteRoles.WorkEffortType = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortType]; 
			MaintenanceClass.Instance.ConcreteRoles.WorkEffortType = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortType]; 
			PhaseClass.Instance.ConcreteRoles.WorkEffortType = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortType]; 
			WorkFlowClass.Instance.ConcreteRoles.WorkEffortType = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortType]; 
			TaskClass.Instance.ConcreteRoles.WorkEffortType = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortType]; 
			ResearchClass.Instance.ConcreteRoles.WorkEffortType = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortType]; 
			ProgramClass.Instance.ConcreteRoles.WorkEffortType = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortType]; 

			ProjectClass.Instance.ConcreteRoles.InventoryItemProduced = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemProduced]; 
			ActivityClass.Instance.ConcreteRoles.InventoryItemProduced = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemProduced]; 
			ProductionRunClass.Instance.ConcreteRoles.InventoryItemProduced = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemProduced]; 
			MaintenanceClass.Instance.ConcreteRoles.InventoryItemProduced = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemProduced]; 
			PhaseClass.Instance.ConcreteRoles.InventoryItemProduced = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemProduced]; 
			WorkFlowClass.Instance.ConcreteRoles.InventoryItemProduced = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemProduced]; 
			TaskClass.Instance.ConcreteRoles.InventoryItemProduced = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemProduced]; 
			ResearchClass.Instance.ConcreteRoles.InventoryItemProduced = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemProduced]; 
			ProgramClass.Instance.ConcreteRoles.InventoryItemProduced = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemProduced]; 

			ProjectClass.Instance.ConcreteRoles.WorkEffortPurpose = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPurpose]; 
			ActivityClass.Instance.ConcreteRoles.WorkEffortPurpose = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPurpose]; 
			ProductionRunClass.Instance.ConcreteRoles.WorkEffortPurpose = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPurpose]; 
			MaintenanceClass.Instance.ConcreteRoles.WorkEffortPurpose = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPurpose]; 
			PhaseClass.Instance.ConcreteRoles.WorkEffortPurpose = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPurpose]; 
			WorkFlowClass.Instance.ConcreteRoles.WorkEffortPurpose = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPurpose]; 
			TaskClass.Instance.ConcreteRoles.WorkEffortPurpose = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPurpose]; 
			ResearchClass.Instance.ConcreteRoles.WorkEffortPurpose = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPurpose]; 
			ProgramClass.Instance.ConcreteRoles.WorkEffortPurpose = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPurpose]; 

			ProjectClass.Instance.ConcreteRoles.Priority = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			ActivityClass.Instance.ConcreteRoles.Priority = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			ProductionRunClass.Instance.ConcreteRoles.Priority = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			MaintenanceClass.Instance.ConcreteRoles.Priority = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			PhaseClass.Instance.ConcreteRoles.Priority = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			WorkFlowClass.Instance.ConcreteRoles.Priority = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			TaskClass.Instance.ConcreteRoles.Priority = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			ResearchClass.Instance.ConcreteRoles.Priority = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			ProgramClass.Instance.ConcreteRoles.Priority = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 

			ProjectClass.Instance.ConcreteRoles.Name = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ActivityClass.Instance.ConcreteRoles.Name = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ProductionRunClass.Instance.ConcreteRoles.Name = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			MaintenanceClass.Instance.ConcreteRoles.Name = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PhaseClass.Instance.ConcreteRoles.Name = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			WorkFlowClass.Instance.ConcreteRoles.Name = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			TaskClass.Instance.ConcreteRoles.Name = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ResearchClass.Instance.ConcreteRoles.Name = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ProgramClass.Instance.ConcreteRoles.Name = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			ProjectClass.Instance.ConcreteRoles.RequirementFulfillment = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementFulfillment]; 
			ActivityClass.Instance.ConcreteRoles.RequirementFulfillment = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementFulfillment]; 
			ProductionRunClass.Instance.ConcreteRoles.RequirementFulfillment = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementFulfillment]; 
			MaintenanceClass.Instance.ConcreteRoles.RequirementFulfillment = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementFulfillment]; 
			PhaseClass.Instance.ConcreteRoles.RequirementFulfillment = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementFulfillment]; 
			WorkFlowClass.Instance.ConcreteRoles.RequirementFulfillment = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementFulfillment]; 
			TaskClass.Instance.ConcreteRoles.RequirementFulfillment = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementFulfillment]; 
			ResearchClass.Instance.ConcreteRoles.RequirementFulfillment = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementFulfillment]; 
			ProgramClass.Instance.ConcreteRoles.RequirementFulfillment = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementFulfillment]; 

			ProjectClass.Instance.ConcreteRoles.SpecialTerms = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecialTerms]; 
			ActivityClass.Instance.ConcreteRoles.SpecialTerms = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecialTerms]; 
			ProductionRunClass.Instance.ConcreteRoles.SpecialTerms = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecialTerms]; 
			MaintenanceClass.Instance.ConcreteRoles.SpecialTerms = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecialTerms]; 
			PhaseClass.Instance.ConcreteRoles.SpecialTerms = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecialTerms]; 
			WorkFlowClass.Instance.ConcreteRoles.SpecialTerms = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecialTerms]; 
			TaskClass.Instance.ConcreteRoles.SpecialTerms = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecialTerms]; 
			ResearchClass.Instance.ConcreteRoles.SpecialTerms = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecialTerms]; 
			ProgramClass.Instance.ConcreteRoles.SpecialTerms = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SpecialTerms]; 

			ProjectClass.Instance.ConcreteRoles.Concurrency = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Concurrency]; 
			ActivityClass.Instance.ConcreteRoles.Concurrency = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Concurrency]; 
			ProductionRunClass.Instance.ConcreteRoles.Concurrency = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Concurrency]; 
			MaintenanceClass.Instance.ConcreteRoles.Concurrency = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Concurrency]; 
			PhaseClass.Instance.ConcreteRoles.Concurrency = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Concurrency]; 
			WorkFlowClass.Instance.ConcreteRoles.Concurrency = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Concurrency]; 
			TaskClass.Instance.ConcreteRoles.Concurrency = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Concurrency]; 
			ResearchClass.Instance.ConcreteRoles.Concurrency = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Concurrency]; 
			ProgramClass.Instance.ConcreteRoles.Concurrency = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Concurrency]; 

			ProjectClass.Instance.ConcreteRoles.ScheduledStart = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			ActivityClass.Instance.ConcreteRoles.ScheduledStart = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			ProductionRunClass.Instance.ConcreteRoles.ScheduledStart = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			MaintenanceClass.Instance.ConcreteRoles.ScheduledStart = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			PhaseClass.Instance.ConcreteRoles.ScheduledStart = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			WorkFlowClass.Instance.ConcreteRoles.ScheduledStart = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			TaskClass.Instance.ConcreteRoles.ScheduledStart = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			ResearchClass.Instance.ConcreteRoles.ScheduledStart = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			ProgramClass.Instance.ConcreteRoles.ScheduledStart = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 

			ProjectClass.Instance.ConcreteRoles.ActualHours = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualHours]; 
			ActivityClass.Instance.ConcreteRoles.ActualHours = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualHours]; 
			ProductionRunClass.Instance.ConcreteRoles.ActualHours = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualHours]; 
			MaintenanceClass.Instance.ConcreteRoles.ActualHours = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualHours]; 
			PhaseClass.Instance.ConcreteRoles.ActualHours = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualHours]; 
			WorkFlowClass.Instance.ConcreteRoles.ActualHours = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualHours]; 
			TaskClass.Instance.ConcreteRoles.ActualHours = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualHours]; 
			ResearchClass.Instance.ConcreteRoles.ActualHours = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualHours]; 
			ProgramClass.Instance.ConcreteRoles.ActualHours = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualHours]; 

			ProjectClass.Instance.ConcreteRoles.Description = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ActivityClass.Instance.ConcreteRoles.Description = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ProductionRunClass.Instance.ConcreteRoles.Description = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			MaintenanceClass.Instance.ConcreteRoles.Description = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			PhaseClass.Instance.ConcreteRoles.Description = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			WorkFlowClass.Instance.ConcreteRoles.Description = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			TaskClass.Instance.ConcreteRoles.Description = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ResearchClass.Instance.ConcreteRoles.Description = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ProgramClass.Instance.ConcreteRoles.Description = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			ProjectClass.Instance.ConcreteRoles.PreviousObjectState = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			ActivityClass.Instance.ConcreteRoles.PreviousObjectState = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			ProductionRunClass.Instance.ConcreteRoles.PreviousObjectState = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			MaintenanceClass.Instance.ConcreteRoles.PreviousObjectState = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			PhaseClass.Instance.ConcreteRoles.PreviousObjectState = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			WorkFlowClass.Instance.ConcreteRoles.PreviousObjectState = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			TaskClass.Instance.ConcreteRoles.PreviousObjectState = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			ResearchClass.Instance.ConcreteRoles.PreviousObjectState = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			ProgramClass.Instance.ConcreteRoles.PreviousObjectState = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			ProjectClass.Instance.ConcreteRoles.CurrentObjectState = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			ActivityClass.Instance.ConcreteRoles.CurrentObjectState = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			ProductionRunClass.Instance.ConcreteRoles.CurrentObjectState = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			MaintenanceClass.Instance.ConcreteRoles.CurrentObjectState = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			PhaseClass.Instance.ConcreteRoles.CurrentObjectState = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			WorkFlowClass.Instance.ConcreteRoles.CurrentObjectState = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			TaskClass.Instance.ConcreteRoles.CurrentObjectState = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			ResearchClass.Instance.ConcreteRoles.CurrentObjectState = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			ProgramClass.Instance.ConcreteRoles.CurrentObjectState = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			ProjectClass.Instance.ConcreteRoles.ScheduledCompletion = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledCompletion]; 
			ActivityClass.Instance.ConcreteRoles.ScheduledCompletion = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledCompletion]; 
			ProductionRunClass.Instance.ConcreteRoles.ScheduledCompletion = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledCompletion]; 
			MaintenanceClass.Instance.ConcreteRoles.ScheduledCompletion = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledCompletion]; 
			PhaseClass.Instance.ConcreteRoles.ScheduledCompletion = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledCompletion]; 
			WorkFlowClass.Instance.ConcreteRoles.ScheduledCompletion = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledCompletion]; 
			TaskClass.Instance.ConcreteRoles.ScheduledCompletion = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledCompletion]; 
			ResearchClass.Instance.ConcreteRoles.ScheduledCompletion = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledCompletion]; 
			ProgramClass.Instance.ConcreteRoles.ScheduledCompletion = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledCompletion]; 

			ProjectClass.Instance.ConcreteRoles.EstimatedHours = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedHours]; 
			ActivityClass.Instance.ConcreteRoles.EstimatedHours = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedHours]; 
			ProductionRunClass.Instance.ConcreteRoles.EstimatedHours = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedHours]; 
			MaintenanceClass.Instance.ConcreteRoles.EstimatedHours = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedHours]; 
			PhaseClass.Instance.ConcreteRoles.EstimatedHours = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedHours]; 
			WorkFlowClass.Instance.ConcreteRoles.EstimatedHours = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedHours]; 
			TaskClass.Instance.ConcreteRoles.EstimatedHours = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedHours]; 
			ResearchClass.Instance.ConcreteRoles.EstimatedHours = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedHours]; 
			ProgramClass.Instance.ConcreteRoles.EstimatedHours = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedHours]; 


		}

		internal class RolesType
		{
			internal RoleType CurrentWorkEffortStatus;
			internal RoleType Precendency;
			internal RoleType Facility;
			internal RoleType DeliverableProduced;
			internal RoleType ActualStart;
			internal RoleType InventoryItemNeeded;
			internal RoleType Child;
			internal RoleType ActualCompletion;
			internal RoleType OrderItemFulfillment;
			internal RoleType WorkEffortStatus;
			internal RoleType WorkEffortType;
			internal RoleType InventoryItemProduced;
			internal RoleType WorkEffortPurpose;
			internal RoleType Priority;
			internal RoleType Name;
			internal RoleType RequirementFulfillment;
			internal RoleType SpecialTerms;
			internal RoleType Concurrency;
			internal RoleType ScheduledStart;
			internal RoleType ActualHours;
			internal RoleType Description;
			internal RoleType PreviousObjectState;
			internal RoleType CurrentObjectState;
			internal RoleType ScheduledCompletion;
			internal RoleType EstimatedHours;

		}
	}public partial class SkillLevelClass : Class
	{
		public static SkillLevelClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SkillLevelClass() : base(AppsDomain.Instance, new Guid("555882ea-d25a-4da2-a8ea-330469c8cd41"))
        {
			this.SingularName = "SkillLevel";
			this.PluralName = "SkillLevels";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("29b7511b-3ae7-4153-9e84-df8ef9b5c998"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PickListStatusClass : Class
	{
		public static PickListStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PickListStatusClass() : base(AppsDomain.Instance, new Guid("563c9706-0b34-4bf0-a09f-72881f10fe6c"))
        {
			this.SingularName = "PickListStatus";
			this.PluralName = "PickListStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b6ec33e5-6ec6-48d7-82e3-1e52eb21b64e"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PickListStatusPickListObjectState = new RelationType(AppsDomain.Instance, new Guid("e1187cc2-9518-4387-986a-e989b303035f"), new Guid("b47b4537-e686-4f86-b45f-5366f05de7d3"), new Guid("67ffe9b3-3916-48e3-9c64-d1427f350737"));
			PickListStatusPickListObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PickListStatusPickListObjectState.IsIndexed = true;

			PickListStatusPickListObjectState.AssociationType.ObjectType = this;

			PickListStatusPickListObjectState.RoleType.ObjectType = PickListObjectStateClass.Instance;;
			PickListStatusPickListObjectState.RoleType.AssignedSingularName = "PickListObjectState";
			PickListStatusPickListObjectState.RoleType.AssignedPluralName = "PickListObjectStates";
			this.Roles.PickListObjectState = PickListStatusPickListObjectState.RoleType;

			var PickListStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("f87a3dcf-742c-4a3c-afbb-af1969164db9"), new Guid("153a2b44-da58-4db4-9b57-bfa9992c0353"), new Guid("52862edb-477c-4522-85c8-bcedb6affcdd"));
			PickListStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			PickListStatusStartDateTime.AssociationType.ObjectType = this;

			PickListStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PickListStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			PickListStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = PickListStatusStartDateTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PickListStatusClass.Instance.ConcreteRoles.PickListObjectState = PickListStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PickListObjectState]; 

			PickListStatusClass.Instance.ConcreteRoles.StartDateTime = PickListStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 


		}

		internal class RolesType
		{
			internal RoleType PickListObjectState;
			internal RoleType StartDateTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PickListObjectState;
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProductInterface: Interface
	{
		public static ProductInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ProductInterface() : base(AppsDomain.Instance, new Guid("56b79619-d04a-4924-96e8-e3e7be9faa09"))
        {
			this.SingularName = "Product";
			this.PluralName = "Products";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5784e220-03db-4b88-8339-50730e612e1d"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("cfc61909-2859-4b9f-9f90-a3d64123d4ae"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var ProductPrimaryProductCategory = new RelationType(AppsDomain.Instance, new Guid("039a9481-940b-4953-a1b5-6c56f35a238b"), new Guid("ee6d841a-78f4-47c7-be8a-d4bd7ed81609"), new Guid("922b63dc-1714-4cf2-aa0c-cb81831e59b1"));
			ProductPrimaryProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductPrimaryProductCategory.IsIndexed = true;

			ProductPrimaryProductCategory.AssociationType.ObjectType = this;

			ProductPrimaryProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			ProductPrimaryProductCategory.RoleType.AssignedSingularName = "PrimaryProductCategory";
			ProductPrimaryProductCategory.RoleType.AssignedPluralName = "PrimaryProductCategories";
			this.Roles.PrimaryProductCategory = ProductPrimaryProductCategory.RoleType;

			var ProductSupportDiscontinuationDate = new RelationType(AppsDomain.Instance, new Guid("05a2e95a-e5f1-45bc-a8ca-4ebfad3290b5"), new Guid("1674a9e0-00de-45fa-bde4-63a716a31557"), new Guid("594503f3-c081-46b3-9695-92b921c15a6b"));
			ProductSupportDiscontinuationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductSupportDiscontinuationDate.AssociationType.ObjectType = this;

			ProductSupportDiscontinuationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ProductSupportDiscontinuationDate.RoleType.AssignedSingularName = "SupportDiscontinuationDate";
			ProductSupportDiscontinuationDate.RoleType.AssignedPluralName = "SupportDiscontinuationDates";
			this.Roles.SupportDiscontinuationDate = ProductSupportDiscontinuationDate.RoleType;

			var ProductSalesDiscontinuationDate = new RelationType(AppsDomain.Instance, new Guid("0b283eb9-2972-47ae-80d8-1a7aa8f77673"), new Guid("aa3ccdc9-7286-4a82-912a-dd2e53c7410b"), new Guid("487e408f-d55b-4273-bbe9-b0291069ae42"));
			ProductSalesDiscontinuationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductSalesDiscontinuationDate.AssociationType.ObjectType = this;

			ProductSalesDiscontinuationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ProductSalesDiscontinuationDate.RoleType.AssignedSingularName = "SalesDiscontinuationDate";
			ProductSalesDiscontinuationDate.RoleType.AssignedPluralName = "SalesDiscontinuationDates";
			this.Roles.SalesDiscontinuationDate = ProductSalesDiscontinuationDate.RoleType;

			var ProductDescription = new RelationType(AppsDomain.Instance, new Guid("0cbb9d37-20cf-4e0c-9099-07f1fcb88590"), new Guid("6ed33681-defd-4003-85e4-79b5ddce888f"), new Guid("cf55a72e-6ca5-4315-af71-ad45ab17fdf3"));
			ProductDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductDescription.AssociationType.ObjectType = this;

			ProductDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProductDescription.RoleType.AssignedSingularName = "Description";
			ProductDescription.RoleType.AssignedPluralName = "Descriptions";
			ProductDescription.RoleType.Size = -1;
			this.Roles.Description = ProductDescription.RoleType;

			var ProductVirtualProductPriceComponent = new RelationType(AppsDomain.Instance, new Guid("28f34f5d-c98c-45f8-9534-ce9191587ac8"), new Guid("7c676669-52b3-4665-8212-e2e14dde5cf9"), new Guid("5931ff6f-0972-4e9b-9dc3-dd072ed935a3"));
			ProductVirtualProductPriceComponent.AssignedMultiplicity = Multiplicity.OneToMany;
			ProductVirtualProductPriceComponent.IsDerived = true;
			ProductVirtualProductPriceComponent.IsIndexed = true;

			ProductVirtualProductPriceComponent.AssociationType.ObjectType = this;

			ProductVirtualProductPriceComponent.RoleType.ObjectType = PriceComponentInterface.Instance;;
			ProductVirtualProductPriceComponent.RoleType.AssignedSingularName = "VirtualProductPriceComponent";
			ProductVirtualProductPriceComponent.RoleType.AssignedPluralName = "VirtualProductPriceComponents";
			this.Roles.VirtualProductPriceComponent = ProductVirtualProductPriceComponent.RoleType;

			var ProductIntrastatCode = new RelationType(AppsDomain.Instance, new Guid("345aaf52-424a-4573-b77b-64708665822f"), new Guid("be3a7b3a-bf77-407e-895a-3609bbf05e24"), new Guid("be85293b-25b0-4856-b9cf-19fe7f0e6a3d"));
			ProductIntrastatCode.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductIntrastatCode.AssociationType.ObjectType = this;

			ProductIntrastatCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProductIntrastatCode.RoleType.AssignedSingularName = "IntrastatCode";
			ProductIntrastatCode.RoleType.AssignedPluralName = "IntrastatCodes";
			ProductIntrastatCode.RoleType.Size = 256;
			this.Roles.IntrastatCode = ProductIntrastatCode.RoleType;

			var ProductProductCategoryExpanded = new RelationType(AppsDomain.Instance, new Guid("438f00fe-750a-414d-a498-a03095c086fb"), new Guid("62a5b5f3-0572-4f17-8f1b-10c9ee9048f4"), new Guid("e051a24d-f2de-439c-923a-39cf6c47a0e4"));
			ProductProductCategoryExpanded.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductProductCategoryExpanded.IsDerived = true;
			ProductProductCategoryExpanded.IsIndexed = true;

			ProductProductCategoryExpanded.AssociationType.ObjectType = this;

			ProductProductCategoryExpanded.RoleType.ObjectType = ProductCategoryClass.Instance;;
			ProductProductCategoryExpanded.RoleType.AssignedSingularName = "ProductCategoryExpanded";
			ProductProductCategoryExpanded.RoleType.AssignedPluralName = "ProductCategoriesExpanded";
			this.Roles.ProductCategoryExpanded = ProductProductCategoryExpanded.RoleType;

			var ProductProductComplement = new RelationType(AppsDomain.Instance, new Guid("4632101d-09d6-4a89-8bba-e02ac791f9ad"), new Guid("3aed43b7-3bad-44f9-a2d9-8f865de71156"), new Guid("de3785d8-0143-4339-bf49-310c13de385a"));
			ProductProductComplement.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductProductComplement.IsIndexed = true;

			ProductProductComplement.AssociationType.ObjectType = this;

			ProductProductComplement.RoleType.ObjectType = ProductInterface.Instance;;
			ProductProductComplement.RoleType.AssignedSingularName = "ProductComplement";
			ProductProductComplement.RoleType.AssignedPluralName = "ProductComplements";
			this.Roles.ProductComplement = ProductProductComplement.RoleType;

			var ProductOptionalFeature = new RelationType(AppsDomain.Instance, new Guid("5735f671-6c52-474b-83a9-3dd8765af241"), new Guid("4abbf18f-1f97-4fec-8e85-805432e65e53"), new Guid("c485cfba-d3fe-46c2-8495-ddb63c8b4f56"));
			ProductOptionalFeature.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductOptionalFeature.IsIndexed = true;

			ProductOptionalFeature.AssociationType.ObjectType = this;

			ProductOptionalFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			ProductOptionalFeature.RoleType.AssignedSingularName = "OptionalFeature";
			ProductOptionalFeature.RoleType.AssignedPluralName = "OptionalFeatures";
			this.Roles.OptionalFeature = ProductOptionalFeature.RoleType;

			var ProductManufacturedBy = new RelationType(AppsDomain.Instance, new Guid("5f727bd9-9c3e-421e-93eb-646c4fdf73d3"), new Guid("210976bb-e440-44ee-b2b5-39bcee04965b"), new Guid("3165a365-a0db-4ce6-b194-7636cc9c015a"));
			ProductManufacturedBy.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductManufacturedBy.IsIndexed = true;

			ProductManufacturedBy.AssociationType.ObjectType = this;

			ProductManufacturedBy.RoleType.ObjectType = PartyInterface.Instance;;
			ProductManufacturedBy.RoleType.AssignedSingularName = "ManufacturedBy";
			ProductManufacturedBy.RoleType.AssignedPluralName = "ManufacturedBys";
			this.Roles.ManufacturedBy = ProductManufacturedBy.RoleType;

			var ProductVariant = new RelationType(AppsDomain.Instance, new Guid("60bd113a-d6b9-4de9-bbff-2b5094ec4803"), new Guid("b5198a54-72bc-4972-aded-b8eaf0f304a0"), new Guid("1c2134b2-d7ce-469a-a6e4-7e2cc741e07c"));
			ProductVariant.AssignedMultiplicity = Multiplicity.OneToMany;
			ProductVariant.IsIndexed = true;

			ProductVariant.AssociationType.ObjectType = this;

			ProductVariant.RoleType.ObjectType = ProductInterface.Instance;;
			ProductVariant.RoleType.AssignedSingularName = "Variant";
			ProductVariant.RoleType.AssignedPluralName = "Variants";
			this.Roles.Variant = ProductVariant.RoleType;

			var ProductName = new RelationType(AppsDomain.Instance, new Guid("7423a3e3-3619-4afa-ab67-e605b2a62e02"), new Guid("153ce3b0-0969-40d7-a766-1320ecaef8ac"), new Guid("62228e49-a697-4f1f-8a85-6f1976afd7bb"));
			ProductName.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductName.AssociationType.ObjectType = this;

			ProductName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProductName.RoleType.AssignedSingularName = "Name";
			ProductName.RoleType.AssignedPluralName = "Names";
			ProductName.RoleType.Size = 256;
			this.Roles.Name = ProductName.RoleType;

			var ProductIntroductionDate = new RelationType(AppsDomain.Instance, new Guid("74fc9be0-8677-463c-b3b6-f0e7bb7478ba"), new Guid("23a3e0bb-a2f9-48d5-b57b-40376e68b0ba"), new Guid("c977306e-8738-4e30-88c1-3c545fdb4e93"));
			ProductIntroductionDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductIntroductionDate.AssociationType.ObjectType = this;

			ProductIntroductionDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ProductIntroductionDate.RoleType.AssignedSingularName = "IntroductionDate";
			ProductIntroductionDate.RoleType.AssignedPluralName = "IntroductionDates";
			this.Roles.IntroductionDate = ProductIntroductionDate.RoleType;

			var ProductDocument = new RelationType(AppsDomain.Instance, new Guid("7c41deee-b270-4810-abaa-6d00e6507b9b"), new Guid("72d6f463-2335-44bc-830f-816ee635101b"), new Guid("8926c093-d513-44dd-9324-3accc051cb06"));
			ProductDocument.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductDocument.IsIndexed = true;

			ProductDocument.AssociationType.ObjectType = this;

			ProductDocument.RoleType.ObjectType = DocumentInterface.Instance;;
			ProductDocument.RoleType.AssignedSingularName = "Document";
			ProductDocument.RoleType.AssignedPluralName = "Documents";
			this.Roles.Document = ProductDocument.RoleType;

			var ProductStandardFeature = new RelationType(AppsDomain.Instance, new Guid("8645a62d-b230-4378-b4a2-f7ab64c99e58"), new Guid("f9d855e4-d16b-4d63-9654-a1b455aaa0db"), new Guid("63a361ba-030b-4c95-91a6-ce9131dede95"));
			ProductStandardFeature.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductStandardFeature.IsIndexed = true;

			ProductStandardFeature.AssociationType.ObjectType = this;

			ProductStandardFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			ProductStandardFeature.RoleType.AssignedSingularName = "StandardFeature";
			ProductStandardFeature.RoleType.AssignedPluralName = "StandardFeatures";
			this.Roles.StandardFeature = ProductStandardFeature.RoleType;

			var ProductUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("9b66342e-48ac-4761-b375-b9b60d94b005"), new Guid("fcb1a5ad-544f-4613-a160-077d9130732f"), new Guid("76542b1d-9085-451c-9110-85bfac863016"));
			ProductUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductUnitOfMeasure.IsIndexed = true;

			ProductUnitOfMeasure.AssociationType.ObjectType = this;

			ProductUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			ProductUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			ProductUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = ProductUnitOfMeasure.RoleType;

			var ProductEstimatedProductCost = new RelationType(AppsDomain.Instance, new Guid("c018edeb-54e0-43d5-9bbd-bf68df1364de"), new Guid("2ad88d44-a7f6-41f7-bcf7-fee094f20e22"), new Guid("cd7f09d5-8c4b-46b7-98d1-108f5e910cc3"));
			ProductEstimatedProductCost.AssignedMultiplicity = Multiplicity.OneToMany;
			ProductEstimatedProductCost.IsIndexed = true;

			ProductEstimatedProductCost.AssociationType.ObjectType = this;

			ProductEstimatedProductCost.RoleType.ObjectType = EstimatedProductCostInterface.Instance;;
			ProductEstimatedProductCost.RoleType.AssignedSingularName = "EstimatedProductCost";
			ProductEstimatedProductCost.RoleType.AssignedPluralName = "EstimatedProductCosts";
			this.Roles.EstimatedProductCost = ProductEstimatedProductCost.RoleType;

			var ProductProductObsolescence = new RelationType(AppsDomain.Instance, new Guid("e6f084e9-e6fe-49b8-940e-cda85e1dc1e0"), new Guid("7eb974af-86a6-4d26-a07f-7dd01b80d3ac"), new Guid("3918335f-7cde-4fd2-b168-fb422ab5ee1a"));
			ProductProductObsolescence.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductProductObsolescence.IsIndexed = true;

			ProductProductObsolescence.AssociationType.ObjectType = this;

			ProductProductObsolescence.RoleType.ObjectType = ProductInterface.Instance;;
			ProductProductObsolescence.RoleType.AssignedSingularName = "ProductObsolescence";
			ProductProductObsolescence.RoleType.AssignedPluralName = "ProductObsolescences";
			this.Roles.ProductObsolescence = ProductProductObsolescence.RoleType;

			var ProductSelectableFeature = new RelationType(AppsDomain.Instance, new Guid("ecc755c1-9a64-42a2-88b6-0278c3598498"), new Guid("d7b3ed79-4733-4d16-9b88-8c05ff684d2a"), new Guid("825e5e8f-d0ac-490e-8511-0596e2952482"));
			ProductSelectableFeature.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductSelectableFeature.IsIndexed = true;

			ProductSelectableFeature.AssociationType.ObjectType = this;

			ProductSelectableFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			ProductSelectableFeature.RoleType.AssignedSingularName = "SelectableFeature";
			ProductSelectableFeature.RoleType.AssignedPluralName = "SelectableFeatures";
			this.Roles.SelectableFeature = ProductSelectableFeature.RoleType;

			var ProductVatRate = new RelationType(AppsDomain.Instance, new Guid("f26e4376-4e3f-4d7d-8814-54d19c977a76"), new Guid("7da35b67-dbf4-46ce-9f53-d6af8b4e208d"), new Guid("2c8e75e5-e030-4108-b528-c16aaeea40b8"));
			ProductVatRate.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductVatRate.IsIndexed = true;

			ProductVatRate.AssociationType.ObjectType = this;

			ProductVatRate.RoleType.ObjectType = VatRateClass.Instance;;
			ProductVatRate.RoleType.AssignedSingularName = "VatRate";
			ProductVatRate.RoleType.AssignedPluralName = "VatRates";
			this.Roles.VatRate = ProductVatRate.RoleType;

			var ProductBasePrice = new RelationType(AppsDomain.Instance, new Guid("f2abc02c-67a1-42b7-83f5-195841e58a6a"), new Guid("dae3b48d-0dde-4c71-bbd3-4f7743d20a9f"), new Guid("fe8dd3c4-0540-49d9-a18a-905fe0259ca1"));
			ProductBasePrice.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductBasePrice.IsDerived = true;
			ProductBasePrice.IsIndexed = true;

			ProductBasePrice.AssociationType.ObjectType = this;

			ProductBasePrice.RoleType.ObjectType = PriceComponentInterface.Instance;;
			ProductBasePrice.RoleType.AssignedSingularName = "BasePrice";
			ProductBasePrice.RoleType.AssignedPluralName = "BasePrices";
			this.Roles.BasePrice = ProductBasePrice.RoleType;

			var ProductProductCategory = new RelationType(AppsDomain.Instance, new Guid("f8cc75cb-d328-42ac-a1e7-c490435ed7a4"), new Guid("61f71101-6877-4751-aad1-d3ab194dc6ce"), new Guid("1dbceee7-811b-4bfe-8cd4-177f41cb6d17"));
			ProductProductCategory.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductProductCategory.IsIndexed = true;

			ProductProductCategory.AssociationType.ObjectType = this;

			ProductProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			ProductProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			ProductProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = ProductProductCategory.RoleType;

			var ProductSoldBy = new RelationType(AppsDomain.Instance, new Guid("ff1ebc03-de68-4b52-944f-7cc10f79539b"), new Guid("a23f63e7-1870-44a6-b62c-87834f542d55"), new Guid("e5a720c4-8d70-4583-9547-04f676f1b35f"));
			ProductSoldBy.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductSoldBy.IsIndexed = true;

			ProductSoldBy.AssociationType.ObjectType = this;

			ProductSoldBy.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			ProductSoldBy.RoleType.AssignedSingularName = "SoldBy";
			ProductSoldBy.RoleType.AssignedPluralName = "SoldBys";
			this.Roles.SoldBy = ProductSoldBy.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DeliverableBasedServiceClass.Instance.ConcreteRoles.PrimaryProductCategory = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrimaryProductCategory]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.PrimaryProductCategory = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrimaryProductCategory]; 
			GoodClass.Instance.ConcreteRoles.PrimaryProductCategory = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrimaryProductCategory]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.SupportDiscontinuationDate = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SupportDiscontinuationDate]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.SupportDiscontinuationDate = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SupportDiscontinuationDate]; 
			GoodClass.Instance.ConcreteRoles.SupportDiscontinuationDate = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SupportDiscontinuationDate]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.SalesDiscontinuationDate = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesDiscontinuationDate]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.SalesDiscontinuationDate = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesDiscontinuationDate]; 
			GoodClass.Instance.ConcreteRoles.SalesDiscontinuationDate = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesDiscontinuationDate]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.Description = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.Description = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			GoodClass.Instance.ConcreteRoles.Description = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.VirtualProductPriceComponent = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VirtualProductPriceComponent]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.VirtualProductPriceComponent = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VirtualProductPriceComponent]; 
			GoodClass.Instance.ConcreteRoles.VirtualProductPriceComponent = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VirtualProductPriceComponent]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.IntrastatCode = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IntrastatCode]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.IntrastatCode = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IntrastatCode]; 
			GoodClass.Instance.ConcreteRoles.IntrastatCode = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IntrastatCode]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.ProductCategoryExpanded = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategoryExpanded]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.ProductCategoryExpanded = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategoryExpanded]; 
			GoodClass.Instance.ConcreteRoles.ProductCategoryExpanded = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategoryExpanded]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.ProductComplement = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductComplement]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.ProductComplement = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductComplement]; 
			GoodClass.Instance.ConcreteRoles.ProductComplement = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductComplement]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.OptionalFeature = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OptionalFeature]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.OptionalFeature = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OptionalFeature]; 
			GoodClass.Instance.ConcreteRoles.OptionalFeature = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OptionalFeature]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.ManufacturedBy = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ManufacturedBy]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.ManufacturedBy = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ManufacturedBy]; 
			GoodClass.Instance.ConcreteRoles.ManufacturedBy = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ManufacturedBy]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.Variant = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Variant]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.Variant = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Variant]; 
			GoodClass.Instance.ConcreteRoles.Variant = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Variant]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.Name = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.Name = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			GoodClass.Instance.ConcreteRoles.Name = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.IntroductionDate = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IntroductionDate]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.IntroductionDate = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IntroductionDate]; 
			GoodClass.Instance.ConcreteRoles.IntroductionDate = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IntroductionDate]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.Document = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.Document = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			GoodClass.Instance.ConcreteRoles.Document = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.StandardFeature = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StandardFeature]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.StandardFeature = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StandardFeature]; 
			GoodClass.Instance.ConcreteRoles.StandardFeature = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StandardFeature]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.UnitOfMeasure = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.UnitOfMeasure = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 
			GoodClass.Instance.ConcreteRoles.UnitOfMeasure = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.EstimatedProductCost = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedProductCost]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.EstimatedProductCost = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedProductCost]; 
			GoodClass.Instance.ConcreteRoles.EstimatedProductCost = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedProductCost]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.ProductObsolescence = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductObsolescence]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.ProductObsolescence = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductObsolescence]; 
			GoodClass.Instance.ConcreteRoles.ProductObsolescence = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductObsolescence]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.SelectableFeature = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SelectableFeature]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.SelectableFeature = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SelectableFeature]; 
			GoodClass.Instance.ConcreteRoles.SelectableFeature = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SelectableFeature]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.VatRate = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.VatRate = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			GoodClass.Instance.ConcreteRoles.VatRate = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.BasePrice = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BasePrice]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.BasePrice = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BasePrice]; 
			GoodClass.Instance.ConcreteRoles.BasePrice = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BasePrice]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.ProductCategory = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.ProductCategory = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 
			GoodClass.Instance.ConcreteRoles.ProductCategory = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			DeliverableBasedServiceClass.Instance.ConcreteRoles.SoldBy = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SoldBy]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.SoldBy = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SoldBy]; 
			GoodClass.Instance.ConcreteRoles.SoldBy = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SoldBy]; 


		}

		internal class RolesType
		{
			internal RoleType PrimaryProductCategory;
			internal RoleType SupportDiscontinuationDate;
			internal RoleType SalesDiscontinuationDate;
			internal RoleType Description;
			internal RoleType VirtualProductPriceComponent;
			internal RoleType IntrastatCode;
			internal RoleType ProductCategoryExpanded;
			internal RoleType ProductComplement;
			internal RoleType OptionalFeature;
			internal RoleType ManufacturedBy;
			internal RoleType Variant;
			internal RoleType Name;
			internal RoleType IntroductionDate;
			internal RoleType Document;
			internal RoleType StandardFeature;
			internal RoleType UnitOfMeasure;
			internal RoleType EstimatedProductCost;
			internal RoleType ProductObsolescence;
			internal RoleType SelectableFeature;
			internal RoleType VatRate;
			internal RoleType BasePrice;
			internal RoleType ProductCategory;
			internal RoleType SoldBy;

		}
	}public partial class TaxDueClass : Class
	{
		public static TaxDueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TaxDueClass() : base(AppsDomain.Instance, new Guid("57b74174-1418-4307-96f7-e579638d7dd9"))
        {
			this.SingularName = "TaxDue";
			this.PluralName = "TaxDues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4ee2198c-793b-462e-97ad-8baa626ad97f"))
			{
				Subtype = Instance,
				Supertype = ExternalAccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OneTimeChargeClass : Class
	{
		public static OneTimeChargeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OneTimeChargeClass() : base(AppsDomain.Instance, new Guid("5835aca6-214b-41cf-aefe-e361dda026d7"))
        {
			this.SingularName = "OneTimeCharge";
			this.PluralName = "OneTimeCharges";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("13436044-abce-4a9f-a4da-96d680c257d6"))
			{
				Subtype = Instance,
				Supertype = PriceComponentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType Rate;
			internal ConcreteRoleType RevenueValueBreak;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType OrderQuantityBreak;
			internal ConcreteRoleType PackageQuantityBreak;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType RevenueQuantityBreak;
			internal ConcreteRoleType SpecifiedFor;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType AgreementPricingProgram;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType OrderKind;
			internal ConcreteRoleType OrderValue;
			internal ConcreteRoleType Price;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class NoteClass : Class
	{
		public static NoteClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal NoteClass() : base(AppsDomain.Instance, new Guid("587e017d-eb9a-412c-bd21-8ff91c42765b"))
        {
			this.SingularName = "Note";
			this.PluralName = "Notes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("93d190cb-6d36-4a06-bc7a-15abd3eed52e"))
			{
				Subtype = Instance,
				Supertype = ExternalAccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartBillOfMaterialSubstituteClass : Class
	{
		public static PartBillOfMaterialSubstituteClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartBillOfMaterialSubstituteClass() : base(AppsDomain.Instance, new Guid("5906f4cd-3950-43ee-a3ba-84124c4180f6"))
        {
			this.SingularName = "PartBillOfMaterialSubstitute";
			this.PluralName = "PartBillOfMaterialSubstitutes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("38fc8949-d4ab-48b3-8199-772fa3899adc"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("3cc926c8-ca6e-49d3-ae0f-4151a9f6324e"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("4ce45877-7bd7-4ace-80df-0b73922a100f"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartBillOfMaterialSubstituteSubstitutionPartBillOfMaterial = new RelationType(AppsDomain.Instance, new Guid("3d84d60f-c8b7-4e33-847a-9720d6570dd1"), new Guid("6124b5f7-ad97-44d6-8b7d-98694e385792"), new Guid("e2423696-2855-4ac1-8a90-aba5e8413acc"));
			PartBillOfMaterialSubstituteSubstitutionPartBillOfMaterial.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartBillOfMaterialSubstituteSubstitutionPartBillOfMaterial.IsIndexed = true;

			PartBillOfMaterialSubstituteSubstitutionPartBillOfMaterial.AssociationType.ObjectType = this;

			PartBillOfMaterialSubstituteSubstitutionPartBillOfMaterial.RoleType.ObjectType = PartBillOfMaterialInterface.Instance;;
			PartBillOfMaterialSubstituteSubstitutionPartBillOfMaterial.RoleType.AssignedSingularName = "SubstitutionPartBillOfMaterial";
			PartBillOfMaterialSubstituteSubstitutionPartBillOfMaterial.RoleType.AssignedPluralName = "SubstitutionPartBillOfMaterials";
			this.Roles.SubstitutionPartBillOfMaterial = PartBillOfMaterialSubstituteSubstitutionPartBillOfMaterial.RoleType;

			var PartBillOfMaterialSubstitutePreference = new RelationType(AppsDomain.Instance, new Guid("9bff7f7d-c35c-426d-95f3-6a681d283914"), new Guid("c9fd9c9c-f57d-413a-ac69-7983f5d51dd6"), new Guid("c7596ec0-5e1d-4d8e-8707-f276c01d1e5f"));
			PartBillOfMaterialSubstitutePreference.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartBillOfMaterialSubstitutePreference.IsIndexed = true;

			PartBillOfMaterialSubstitutePreference.AssociationType.ObjectType = this;

			PartBillOfMaterialSubstitutePreference.RoleType.ObjectType = OrdinalClass.Instance;;
			PartBillOfMaterialSubstitutePreference.RoleType.AssignedSingularName = "Preference";
			PartBillOfMaterialSubstitutePreference.RoleType.AssignedPluralName = "Preferences";
			this.Roles.Preference = PartBillOfMaterialSubstitutePreference.RoleType;

			var PartBillOfMaterialSubstituteQuantity = new RelationType(AppsDomain.Instance, new Guid("a5273118-61c9-43de-9754-22555332cc27"), new Guid("3de9b9ee-a96c-43b7-984a-86f6d0d20a52"), new Guid("0aff8adf-0487-4beb-b5f9-2062fa37ec9f"));
			PartBillOfMaterialSubstituteQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			PartBillOfMaterialSubstituteQuantity.AssociationType.ObjectType = this;

			PartBillOfMaterialSubstituteQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartBillOfMaterialSubstituteQuantity.RoleType.AssignedSingularName = "Quantity";
			PartBillOfMaterialSubstituteQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = PartBillOfMaterialSubstituteQuantity.RoleType;

			var PartBillOfMaterialSubstitutePartBillOfMaterial = new RelationType(AppsDomain.Instance, new Guid("ef45301b-415a-417f-a952-fd71704a05e5"), new Guid("589cd7f5-a89e-48d2-adbe-8c6307ab3585"), new Guid("aa0e3719-cbc3-4cb0-b83a-3ff5489771f3"));
			PartBillOfMaterialSubstitutePartBillOfMaterial.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartBillOfMaterialSubstitutePartBillOfMaterial.IsIndexed = true;

			PartBillOfMaterialSubstitutePartBillOfMaterial.AssociationType.ObjectType = this;

			PartBillOfMaterialSubstitutePartBillOfMaterial.RoleType.ObjectType = PartBillOfMaterialInterface.Instance;;
			PartBillOfMaterialSubstitutePartBillOfMaterial.RoleType.AssignedSingularName = "PartBillOfMaterial";
			PartBillOfMaterialSubstitutePartBillOfMaterial.RoleType.AssignedPluralName = "PartBillOfMaterials";
			this.Roles.PartBillOfMaterial = PartBillOfMaterialSubstitutePartBillOfMaterial.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartBillOfMaterialSubstituteClass.Instance.ConcreteRoles.SubstitutionPartBillOfMaterial = PartBillOfMaterialSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubstitutionPartBillOfMaterial]; 

			PartBillOfMaterialSubstituteClass.Instance.ConcreteRoles.Preference = PartBillOfMaterialSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Preference]; 

			PartBillOfMaterialSubstituteClass.Instance.ConcreteRoles.Quantity = PartBillOfMaterialSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			PartBillOfMaterialSubstituteClass.Instance.ConcreteRoles.PartBillOfMaterial = PartBillOfMaterialSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartBillOfMaterial]; 


		}

		internal class RolesType
		{
			internal RoleType SubstitutionPartBillOfMaterial;
			internal RoleType Preference;
			internal RoleType Quantity;
			internal RoleType PartBillOfMaterial;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType SubstitutionPartBillOfMaterial;
			internal ConcreteRoleType Preference;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType PartBillOfMaterial;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class ReceiptClass : Class
	{
		public static ReceiptClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ReceiptClass() : base(AppsDomain.Instance, new Guid("592260cc-365c-4769-b067-e95dd49609f5"))
        {
			this.SingularName = "Receipt";
			this.PluralName = "Receipts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d9276c77-0a77-4491-ae45-99c532d8098d"))
			{
				Subtype = Instance,
				Supertype = PaymentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType EffectiveDate;
			internal ConcreteRoleType SendingParty;
			internal ConcreteRoleType PaymentApplication;
			internal ConcreteRoleType ReferenceNumber;
			internal ConcreteRoleType ReceivingParty;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class RequirementBudgetAllocationClass : Class
	{
		public static RequirementBudgetAllocationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RequirementBudgetAllocationClass() : base(AppsDomain.Instance, new Guid("5990c1d7-02d5-4e0d-8073-657b0dbfc5e1"))
        {
			this.SingularName = "RequirementBudgetAllocation";
			this.PluralName = "RequirementBudgetAllocations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b7fe2d2e-5466-4923-9498-ab8481561ef7"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var RequirementBudgetAllocationBudgetItem = new RelationType(AppsDomain.Instance, new Guid("4d5cfc89-068f-4cf5-ae51-0b3efe426499"), new Guid("cf5c7a91-3579-458b-8337-ed0ad9474fc4"), new Guid("26f1d7ab-cda3-4b47-a422-293aa6c1f57f"));
			RequirementBudgetAllocationBudgetItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementBudgetAllocationBudgetItem.IsIndexed = true;

			RequirementBudgetAllocationBudgetItem.AssociationType.ObjectType = this;

			RequirementBudgetAllocationBudgetItem.RoleType.ObjectType = BudgetItemClass.Instance;;
			RequirementBudgetAllocationBudgetItem.RoleType.AssignedSingularName = "BudgetItem";
			RequirementBudgetAllocationBudgetItem.RoleType.AssignedPluralName = "BudgetItems";
			this.Roles.BudgetItem = RequirementBudgetAllocationBudgetItem.RoleType;

			var RequirementBudgetAllocationRequirement = new RelationType(AppsDomain.Instance, new Guid("9b0f81f1-8df5-4c42-aa10-a05caf777d57"), new Guid("9c7ea874-5d6d-4076-a4a4-7b6596f1ebd4"), new Guid("06e6d247-68b5-42d4-a474-0c1ace36f21c"));
			RequirementBudgetAllocationRequirement.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementBudgetAllocationRequirement.IsIndexed = true;

			RequirementBudgetAllocationRequirement.AssociationType.ObjectType = this;

			RequirementBudgetAllocationRequirement.RoleType.ObjectType = RequirementInterface.Instance;;
			RequirementBudgetAllocationRequirement.RoleType.AssignedSingularName = "Requirement";
			RequirementBudgetAllocationRequirement.RoleType.AssignedPluralName = "Requirements";
			this.Roles.Requirement = RequirementBudgetAllocationRequirement.RoleType;

			var RequirementBudgetAllocationAmount = new RelationType(AppsDomain.Instance, new Guid("f4f64ec3-5e56-45d8-8112-9a32c4f8d6da"), new Guid("95b80fdf-9e3f-424d-b03a-ede9268eb545"), new Guid("82960011-47b7-43c5-ace3-d3830cd93d39"));
			RequirementBudgetAllocationAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			RequirementBudgetAllocationAmount.AssociationType.ObjectType = this;

			RequirementBudgetAllocationAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			RequirementBudgetAllocationAmount.RoleType.AssignedSingularName = "Amount";
			RequirementBudgetAllocationAmount.RoleType.AssignedPluralName = "Amount";
			RequirementBudgetAllocationAmount.RoleType.Scale = 2;
			RequirementBudgetAllocationAmount.RoleType.Precision = 19;
			this.Roles.Amount = RequirementBudgetAllocationAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RequirementBudgetAllocationClass.Instance.ConcreteRoles.BudgetItem = RequirementBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetItem]; 

			RequirementBudgetAllocationClass.Instance.ConcreteRoles.Requirement = RequirementBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Requirement]; 

			RequirementBudgetAllocationClass.Instance.ConcreteRoles.Amount = RequirementBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 


		}

		internal class RolesType
		{
			internal RoleType BudgetItem;
			internal RoleType Requirement;
			internal RoleType Amount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType BudgetItem;
			internal ConcreteRoleType Requirement;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OrganisationGlAccountClass : Class
	{
		public static OrganisationGlAccountClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrganisationGlAccountClass() : base(AppsDomain.Instance, new Guid("59f3100c-da48-4b4c-a302-1a75e37216a6"))
        {
			this.SingularName = "OrganisationGlAccount";
			this.PluralName = "OrganisationGlAccounts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1fafa85c-e1f7-4327-96c2-4b93023c4213"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("fbd3fc5e-cb62-4fb4-a790-f67ddca728b7"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrganisationGlAccountProduct = new RelationType(AppsDomain.Instance, new Guid("8e20ce74-a772-45c8-a76a-a8ca0d4d7ebd"), new Guid("948a2115-8780-46c6-83cf-dd4d27a1771b"), new Guid("a3d68e22-e492-4d1e-8386-ea45ad67ee3a"));
			OrganisationGlAccountProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationGlAccountProduct.IsIndexed = true;

			OrganisationGlAccountProduct.AssociationType.ObjectType = this;

			OrganisationGlAccountProduct.RoleType.ObjectType = ProductInterface.Instance;;
			OrganisationGlAccountProduct.RoleType.AssignedSingularName = "Product";
			OrganisationGlAccountProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = OrganisationGlAccountProduct.RoleType;

			var OrganisationGlAccountParent = new RelationType(AppsDomain.Instance, new Guid("9337f791-56aa-4086-b661-2043cf02c662"), new Guid("59fb9b8f-4d0a-4f97-b4d6-b3a5708de269"), new Guid("f264e9da-aa7f-4d81-aa1b-741f020c2bef"));
			OrganisationGlAccountParent.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationGlAccountParent.IsIndexed = true;

			OrganisationGlAccountParent.AssociationType.ObjectType = this;

			OrganisationGlAccountParent.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			OrganisationGlAccountParent.RoleType.AssignedSingularName = "Parent";
			OrganisationGlAccountParent.RoleType.AssignedPluralName = "Parents";
			this.Roles.Parent = OrganisationGlAccountParent.RoleType;

			var OrganisationGlAccountParty = new RelationType(AppsDomain.Instance, new Guid("9af20c76-200c-4aed-8154-99fd88907a15"), new Guid("7d9f9cad-0685-4b7d-b12d-770f046465f3"), new Guid("817a7322-724b-4239-8261-a9c683f1ea4a"));
			OrganisationGlAccountParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationGlAccountParty.IsIndexed = true;

			OrganisationGlAccountParty.AssociationType.ObjectType = this;

			OrganisationGlAccountParty.RoleType.ObjectType = PartyInterface.Instance;;
			OrganisationGlAccountParty.RoleType.AssignedSingularName = "Party";
			OrganisationGlAccountParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = OrganisationGlAccountParty.RoleType;

			var OrganisationGlAccountHasBankStatementTransactions = new RelationType(AppsDomain.Instance, new Guid("a1608d47-9fa7-4dc4-9736-c59f28221842"), new Guid("61d6a380-171a-41c2-bda9-6cd8638ba442"), new Guid("de2ad2c4-bf0e-4092-9611-b23c3e613429"));
			OrganisationGlAccountHasBankStatementTransactions.AssignedMultiplicity = Multiplicity.OneToOne;
			OrganisationGlAccountHasBankStatementTransactions.IsDerived = true;
			OrganisationGlAccountHasBankStatementTransactions.AssociationType.ObjectType = this;

			OrganisationGlAccountHasBankStatementTransactions.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			OrganisationGlAccountHasBankStatementTransactions.RoleType.AssignedSingularName = "HasBankStatementTransactions";
			OrganisationGlAccountHasBankStatementTransactions.RoleType.AssignedPluralName = "HasBankStatementsTransactions";
			this.Roles.HasBankStatementTransactions = OrganisationGlAccountHasBankStatementTransactions.RoleType;

			var OrganisationGlAccountProductCategory = new RelationType(AppsDomain.Instance, new Guid("c0de2fbb-9e70-4094-8279-fb46734e920e"), new Guid("92c29de0-8454-4ae1-8bf9-ed4c5ec0d313"), new Guid("8b65fb70-4905-4c1b-a1b1-51470ce58599"));
			OrganisationGlAccountProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationGlAccountProductCategory.IsIndexed = true;

			OrganisationGlAccountProductCategory.AssociationType.ObjectType = this;

			OrganisationGlAccountProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			OrganisationGlAccountProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			OrganisationGlAccountProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = OrganisationGlAccountProductCategory.RoleType;

			var OrganisationGlAccountInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("d5332edf-3cc4-4f26-b0d1-da7ce1182dbc"), new Guid("1fb5ddfd-930a-4c81-8e9e-ac9d94840864"), new Guid("30c0c848-5361-4bd3-9c0a-8b9aeaccdadc"));
			OrganisationGlAccountInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationGlAccountInternalOrganisation.IsIndexed = true;

			OrganisationGlAccountInternalOrganisation.AssociationType.ObjectType = this;

			OrganisationGlAccountInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			OrganisationGlAccountInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			OrganisationGlAccountInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = OrganisationGlAccountInternalOrganisation.RoleType;

			var OrganisationGlAccountGeneralLedgerAccount = new RelationType(AppsDomain.Instance, new Guid("f1d3e642-2844-4c5a-a053-4dcfce461902"), new Guid("b0706892-9a04-4e5a-8caa-bd015f3d81f9"), new Guid("6cb69b76-2852-43eb-bff6-a10bc44503a3"));
			OrganisationGlAccountGeneralLedgerAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationGlAccountGeneralLedgerAccount.IsIndexed = true;

			OrganisationGlAccountGeneralLedgerAccount.AssociationType.ObjectType = this;

			OrganisationGlAccountGeneralLedgerAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			OrganisationGlAccountGeneralLedgerAccount.RoleType.AssignedSingularName = "GeneralLedgerAccount";
			OrganisationGlAccountGeneralLedgerAccount.RoleType.AssignedPluralName = "GeneralLedgerAccounts";
			this.Roles.GeneralLedgerAccount = OrganisationGlAccountGeneralLedgerAccount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrganisationGlAccountClass.Instance.ConcreteRoles.Product = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			OrganisationGlAccountClass.Instance.ConcreteRoles.Parent = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Parent]; 

			OrganisationGlAccountClass.Instance.ConcreteRoles.Party = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			OrganisationGlAccountClass.Instance.ConcreteRoles.HasBankStatementTransactions = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HasBankStatementTransactions]; 

			OrganisationGlAccountClass.Instance.ConcreteRoles.ProductCategory = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			OrganisationGlAccountClass.Instance.ConcreteRoles.InternalOrganisation = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			OrganisationGlAccountClass.Instance.ConcreteRoles.GeneralLedgerAccount = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccount]; 


		}

		internal class RolesType
		{
			internal RoleType Product;
			internal RoleType Parent;
			internal RoleType Party;
			internal RoleType HasBankStatementTransactions;
			internal RoleType ProductCategory;
			internal RoleType InternalOrganisation;
			internal RoleType GeneralLedgerAccount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Product;
			internal ConcreteRoleType Parent;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType HasBankStatementTransactions;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType GeneralLedgerAccount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class InternalAccountingTransactionInterface: Interface
	{
		public static InternalAccountingTransactionInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal InternalAccountingTransactionInterface() : base(AppsDomain.Instance, new Guid("5a783d98-845a-4784-9c92-5c75a4af3fb8"))
        {
			this.SingularName = "InternalAccountingTransaction";
			this.PluralName = "InternalAccountingTransactions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("12498c4f-7415-4aea-8363-9682c0fc3eba"))
			{
				Subtype = Instance,
				Supertype = AccountingTransactionInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var InternalAccountingTransactionInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("96a1901c-a17a-43d7-8d84-76e1586787f2"), new Guid("5f58fb32-15d9-47e0-9ace-9eb4c1cd2eda"), new Guid("03f1ae5e-0644-47c7-b31e-345e92085a9c"));
			InternalAccountingTransactionInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalAccountingTransactionInternalOrganisation.IsIndexed = true;

			InternalAccountingTransactionInternalOrganisation.AssociationType.ObjectType = this;

			InternalAccountingTransactionInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			InternalAccountingTransactionInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			InternalAccountingTransactionInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = InternalAccountingTransactionInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DepreciationClass.Instance.ConcreteRoles.InternalOrganisation = DepreciationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 
			AmortizationClass.Instance.ConcreteRoles.InternalOrganisation = AmortizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 
			CapitalizationClass.Instance.ConcreteRoles.InternalOrganisation = CapitalizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType InternalOrganisation;

		}
	}public partial class MaintenanceClass : Class
	{
		public static MaintenanceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal MaintenanceClass() : base(AppsDomain.Instance, new Guid("5ad24730-a81e-4160-9af9-fa25342a5e96"))
        {
			this.SingularName = "Maintenance";
			this.PluralName = "Maintenances";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("de4b8524-3e4d-4604-a82f-65ad51dc3c22"))
			{
				Subtype = Instance,
				Supertype = WorkEffortInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentWorkEffortStatus;
			internal ConcreteRoleType Precendency;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeliverableProduced;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType InventoryItemNeeded;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType ActualCompletion;
			internal ConcreteRoleType OrderItemFulfillment;
			internal ConcreteRoleType WorkEffortStatus;
			internal ConcreteRoleType WorkEffortType;
			internal ConcreteRoleType InventoryItemProduced;
			internal ConcreteRoleType WorkEffortPurpose;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType RequirementFulfillment;
			internal ConcreteRoleType SpecialTerms;
			internal ConcreteRoleType Concurrency;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ActualHours;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ScheduledCompletion;
			internal ConcreteRoleType EstimatedHours;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class NonSerializedInventoryItemClass : Class
	{
		public static NonSerializedInventoryItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal NonSerializedInventoryItemClass() : base(AppsDomain.Instance, new Guid("5b294591-e20a-4bad-940a-27ae7b2f8770"))
        {
			this.SingularName = "NonSerializedInventoryItem";
			this.PluralName = "NonSerializedInventoryItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b76110ea-b2f8-4cce-a6f1-82557d15a401"))
			{
				Subtype = Instance,
				Supertype = InventoryItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var NonSerializedInventoryItemCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("0958b237-ba88-48d3-b662-90328801b197"), new Guid("72957576-5146-4578-8526-8b7a50025526"), new Guid("ebd546cd-7341-496d-86ca-27a1b8fc253e"));
			NonSerializedInventoryItemCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			NonSerializedInventoryItemCurrentObjectState.IsDerived = true;
			NonSerializedInventoryItemCurrentObjectState.IsIndexed = true;

			NonSerializedInventoryItemCurrentObjectState.AssociationType.ObjectType = this;

			NonSerializedInventoryItemCurrentObjectState.RoleType.ObjectType = NonSerializedInventoryItemObjectStateClass.Instance;;
			NonSerializedInventoryItemCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			NonSerializedInventoryItemCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = NonSerializedInventoryItemCurrentObjectState.RoleType;

			var NonSerializedInventoryItemQuantityCommittedOut = new RelationType(AppsDomain.Instance, new Guid("2959a4d0-5945-4231-8a12-a2d1bdb9be04"), new Guid("d48f3a6f-915f-42fe-a508-8cddc3cf3fbc"), new Guid("bd3e6dd7-c339-4ac4-bdce-31526ed7fa1a"));
			NonSerializedInventoryItemQuantityCommittedOut.AssignedMultiplicity = Multiplicity.OneToOne;
			NonSerializedInventoryItemQuantityCommittedOut.IsDerived = true;
			NonSerializedInventoryItemQuantityCommittedOut.AssociationType.ObjectType = this;

			NonSerializedInventoryItemQuantityCommittedOut.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			NonSerializedInventoryItemQuantityCommittedOut.RoleType.AssignedSingularName = "QuantityCommittedOut";
			NonSerializedInventoryItemQuantityCommittedOut.RoleType.AssignedPluralName = "QuantitiesCommittedOut";
			NonSerializedInventoryItemQuantityCommittedOut.RoleType.Scale = 2;
			NonSerializedInventoryItemQuantityCommittedOut.RoleType.Precision = 19;
			this.Roles.QuantityCommittedOut = NonSerializedInventoryItemQuantityCommittedOut.RoleType;

			var NonSerializedInventoryItemNonSerializedInventoryItemStatus = new RelationType(AppsDomain.Instance, new Guid("2d07e267-a0dc-452d-8166-a376ee38700d"), new Guid("87520701-7447-46b2-8bff-c8a4e23092ae"), new Guid("29532211-2b5b-4e8a-a27e-c7a1afb68370"));
			NonSerializedInventoryItemNonSerializedInventoryItemStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			NonSerializedInventoryItemNonSerializedInventoryItemStatus.IsDerived = true;
			NonSerializedInventoryItemNonSerializedInventoryItemStatus.IsIndexed = true;

			NonSerializedInventoryItemNonSerializedInventoryItemStatus.AssociationType.ObjectType = this;

			NonSerializedInventoryItemNonSerializedInventoryItemStatus.RoleType.ObjectType = NonSerializedInventoryItemStatusClass.Instance;;
			NonSerializedInventoryItemNonSerializedInventoryItemStatus.RoleType.AssignedSingularName = "NonSerializedInventoryItemStatus";
			NonSerializedInventoryItemNonSerializedInventoryItemStatus.RoleType.AssignedPluralName = "NonSerializedInventoryItemStatuses";
			this.Roles.NonSerializedInventoryItemStatus = NonSerializedInventoryItemNonSerializedInventoryItemStatus.RoleType;

			var NonSerializedInventoryItemPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("41d804d4-588b-4bea-b013-665f1a6974b9"), new Guid("c82ea702-7035-4293-a8ef-32f0e70e4763"), new Guid("6e17e218-c04d-4c78-9a01-32d16eec6692"));
			NonSerializedInventoryItemPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			NonSerializedInventoryItemPreviousObjectState.IsDerived = true;
			NonSerializedInventoryItemPreviousObjectState.IsIndexed = true;

			NonSerializedInventoryItemPreviousObjectState.AssociationType.ObjectType = this;

			NonSerializedInventoryItemPreviousObjectState.RoleType.ObjectType = NonSerializedInventoryItemObjectStateClass.Instance;;
			NonSerializedInventoryItemPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			NonSerializedInventoryItemPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = NonSerializedInventoryItemPreviousObjectState.RoleType;

			var NonSerializedInventoryItemCurrentInventoryItemStatus = new RelationType(AppsDomain.Instance, new Guid("981acef5-652b-41c1-88f2-e06052bab7e3"), new Guid("3772d6b0-c994-4240-b8de-054b2c72b25f"), new Guid("25a16b8b-3f26-4cf3-8452-c7933d54af2a"));
			NonSerializedInventoryItemCurrentInventoryItemStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			NonSerializedInventoryItemCurrentInventoryItemStatus.IsDerived = true;
			NonSerializedInventoryItemCurrentInventoryItemStatus.IsIndexed = true;

			NonSerializedInventoryItemCurrentInventoryItemStatus.AssociationType.ObjectType = this;

			NonSerializedInventoryItemCurrentInventoryItemStatus.RoleType.ObjectType = NonSerializedInventoryItemStatusClass.Instance;;
			NonSerializedInventoryItemCurrentInventoryItemStatus.RoleType.AssignedSingularName = "CurrentInventoryItemStatus";
			NonSerializedInventoryItemCurrentInventoryItemStatus.RoleType.AssignedPluralName = "CurrentInventoryItemStatuses";
			this.Roles.CurrentInventoryItemStatus = NonSerializedInventoryItemCurrentInventoryItemStatus.RoleType;

			var NonSerializedInventoryItemQuantityOnHand = new RelationType(AppsDomain.Instance, new Guid("a6b78e16-6aef-4478-b426-9429c1a01059"), new Guid("9bcc50ce-a070-4cdd-802f-4296908b75f7"), new Guid("a44947f1-b7e2-4f0c-97d6-2fd32ecae097"));
			NonSerializedInventoryItemQuantityOnHand.AssignedMultiplicity = Multiplicity.OneToOne;
			NonSerializedInventoryItemQuantityOnHand.IsDerived = true;
			NonSerializedInventoryItemQuantityOnHand.AssociationType.ObjectType = this;

			NonSerializedInventoryItemQuantityOnHand.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			NonSerializedInventoryItemQuantityOnHand.RoleType.AssignedSingularName = "QuantityOnHand";
			NonSerializedInventoryItemQuantityOnHand.RoleType.AssignedPluralName = "QuantitiesOnHand";
			NonSerializedInventoryItemQuantityOnHand.RoleType.Scale = 2;
			NonSerializedInventoryItemQuantityOnHand.RoleType.Precision = 19;
			this.Roles.QuantityOnHand = NonSerializedInventoryItemQuantityOnHand.RoleType;

			var NonSerializedInventoryItemPreviousQuantityOnHand = new RelationType(AppsDomain.Instance, new Guid("ba5e2476-abdd-4d61-8a14-5d99a36c4544"), new Guid("f1e3216e-1af7-4354-b8ac-258bfa9222ac"), new Guid("4d41e84c-ee79-4ce2-874e-a000e30c1120"));
			NonSerializedInventoryItemPreviousQuantityOnHand.AssignedMultiplicity = Multiplicity.OneToOne;
			NonSerializedInventoryItemPreviousQuantityOnHand.IsDerived = true;
			NonSerializedInventoryItemPreviousQuantityOnHand.AssociationType.ObjectType = this;

			NonSerializedInventoryItemPreviousQuantityOnHand.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			NonSerializedInventoryItemPreviousQuantityOnHand.RoleType.AssignedSingularName = "PreviousQuantityOnHand";
			NonSerializedInventoryItemPreviousQuantityOnHand.RoleType.AssignedPluralName = "PreviousQuantitiesOnHand";
			NonSerializedInventoryItemPreviousQuantityOnHand.RoleType.Scale = 2;
			NonSerializedInventoryItemPreviousQuantityOnHand.RoleType.Precision = 19;
			this.Roles.PreviousQuantityOnHand = NonSerializedInventoryItemPreviousQuantityOnHand.RoleType;

			var NonSerializedInventoryItemAvailableToPromise = new RelationType(AppsDomain.Instance, new Guid("dfbd2b04-306c-415c-af67-895810b01044"), new Guid("c1ec09e8-2c1e-4e4a-9496-8c081dee23d9"), new Guid("9a56d091-f6a8-4db1-bd65-10d84eaaaa05"));
			NonSerializedInventoryItemAvailableToPromise.AssignedMultiplicity = Multiplicity.OneToOne;
			NonSerializedInventoryItemAvailableToPromise.AssociationType.ObjectType = this;

			NonSerializedInventoryItemAvailableToPromise.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			NonSerializedInventoryItemAvailableToPromise.RoleType.AssignedSingularName = "AvailableToPromise";
			NonSerializedInventoryItemAvailableToPromise.RoleType.AssignedPluralName = "AvailablesToPromise";
			NonSerializedInventoryItemAvailableToPromise.RoleType.Scale = 2;
			NonSerializedInventoryItemAvailableToPromise.RoleType.Precision = 19;
			this.Roles.AvailableToPromise = NonSerializedInventoryItemAvailableToPromise.RoleType;

			var NonSerializedInventoryItemQuantityExpectedIn = new RelationType(AppsDomain.Instance, new Guid("eb32d183-9c7b-47a7-ab38-e4966d745161"), new Guid("a7512a69-d27e-47dc-9da5-8713489cc2e5"), new Guid("9aaf1a36-04b9-4cc5-9a22-691b3b3c4633"));
			NonSerializedInventoryItemQuantityExpectedIn.AssignedMultiplicity = Multiplicity.OneToOne;
			NonSerializedInventoryItemQuantityExpectedIn.IsDerived = true;
			NonSerializedInventoryItemQuantityExpectedIn.AssociationType.ObjectType = this;

			NonSerializedInventoryItemQuantityExpectedIn.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			NonSerializedInventoryItemQuantityExpectedIn.RoleType.AssignedSingularName = "QuantityExpectedIn";
			NonSerializedInventoryItemQuantityExpectedIn.RoleType.AssignedPluralName = "QuantitiesExpectedIn";
			NonSerializedInventoryItemQuantityExpectedIn.RoleType.Scale = 2;
			NonSerializedInventoryItemQuantityExpectedIn.RoleType.Precision = 19;
			this.Roles.QuantityExpectedIn = NonSerializedInventoryItemQuantityExpectedIn.RoleType;


		}

		internal override void SetRelationTypes()
		{
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.CurrentObjectState = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			NonSerializedInventoryItemClass.Instance.ConcreteRoles.QuantityCommittedOut = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityCommittedOut]; 

			NonSerializedInventoryItemClass.Instance.ConcreteRoles.NonSerializedInventoryItemStatus = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NonSerializedInventoryItemStatus]; 

			NonSerializedInventoryItemClass.Instance.ConcreteRoles.PreviousObjectState = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			NonSerializedInventoryItemClass.Instance.ConcreteRoles.CurrentInventoryItemStatus = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentInventoryItemStatus]; 

			NonSerializedInventoryItemClass.Instance.ConcreteRoles.QuantityOnHand = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityOnHand]; 

			NonSerializedInventoryItemClass.Instance.ConcreteRoles.PreviousQuantityOnHand = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousQuantityOnHand]; 

			NonSerializedInventoryItemClass.Instance.ConcreteRoles.AvailableToPromise = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AvailableToPromise]; 

			NonSerializedInventoryItemClass.Instance.ConcreteRoles.QuantityExpectedIn = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityExpectedIn]; 


		}

		internal class RolesType
		{
			internal RoleType CurrentObjectState;
			internal RoleType QuantityCommittedOut;
			internal RoleType NonSerializedInventoryItemStatus;
			internal RoleType PreviousObjectState;
			internal RoleType CurrentInventoryItemStatus;
			internal RoleType QuantityOnHand;
			internal RoleType PreviousQuantityOnHand;
			internal RoleType AvailableToPromise;
			internal RoleType QuantityExpectedIn;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType QuantityCommittedOut;
			internal ConcreteRoleType NonSerializedInventoryItemStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentInventoryItemStatus;
			internal ConcreteRoleType QuantityOnHand;
			internal ConcreteRoleType PreviousQuantityOnHand;
			internal ConcreteRoleType AvailableToPromise;
			internal ConcreteRoleType QuantityExpectedIn;
			internal ConcreteRoleType InventoryItemVariance;
			internal ConcreteRoleType Part;
			internal ConcreteRoleType Container;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Lot;
			internal ConcreteRoleType Sku;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType DerivedProductCategory;
			internal ConcreteRoleType Good;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CreditLineClass : Class
	{
		public static CreditLineClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CreditLineClass() : base(AppsDomain.Instance, new Guid("5bdc88b6-c45f-4835-aa50-26405f1314e3"))
        {
			this.SingularName = "CreditLine";
			this.PluralName = "CreditLines";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("043eb818-cd26-4410-b998-8ef574d46795"))
			{
				Subtype = Instance,
				Supertype = ExternalAccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class BillOfLadingClass : Class
	{
		public static BillOfLadingClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BillOfLadingClass() : base(AppsDomain.Instance, new Guid("5c5c17d1-2132-403b-8819-e3c1aa7bd6a9"))
        {
			this.SingularName = "BillOfLading";
			this.PluralName = "BillOfLadings";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3807bf27-e173-4468-b30f-23e2a3107b67"))
			{
				Subtype = Instance,
				Supertype = DocumentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DocumentLocation;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;

		}
	}public partial class UnitOfMeasureClass : Class
	{
		public static UnitOfMeasureClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal UnitOfMeasureClass() : base(AppsDomain.Instance, new Guid("5cd7ea86-8bc6-4b72-a8f6-788e6453acdc"))
        {
			this.SingularName = "UnitOfMeasure";
			this.PluralName = "UnitsOfMeasure";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("76567aa7-00da-4fb0-b053-98c089c16710"))
			{
				Subtype = Instance,
				Supertype = IUnitOfMeasureInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("772b04b1-f86d-4c27-abd9-417c6cddddec"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("8ee3f188-edbe-4b9b-aee7-4c7924db6091"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ac194b12-d1af-4c17-a062-fd7afdcc5df9"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UnitOfMeasureConversion;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;

		}
	}public partial class ElectronicAddressInterface: Interface
	{
		public static ElectronicAddressInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ElectronicAddressInterface() : base(AppsDomain.Instance, new Guid("5cd86f69-e09b-4150-a2a6-2eed4c72b426"))
        {
			this.SingularName = "ElectronicAddress";
			this.PluralName = "ElectronicAddresses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1d68e4f8-f901-4366-90e1-3ea84d2900be"))
			{
				Subtype = Instance,
				Supertype = ContactMechanismInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var ElectronicAddressElectronicAddressString = new RelationType(AppsDomain.Instance, new Guid("90288ea6-cb3b-47ad-9bb1-aa71d7c65926"), new Guid("8b7e4656-a33b-4d75-8721-106c6f7f2c4e"), new Guid("f04e16be-007f-43dc-974c-92c1423a5426"));
			ElectronicAddressElectronicAddressString.AssignedMultiplicity = Multiplicity.OneToOne;
			ElectronicAddressElectronicAddressString.AssociationType.ObjectType = this;

			ElectronicAddressElectronicAddressString.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ElectronicAddressElectronicAddressString.RoleType.AssignedSingularName = "ElectronicAddressString";
			ElectronicAddressElectronicAddressString.RoleType.AssignedPluralName = "ElectronicAddressStrings";
			ElectronicAddressElectronicAddressString.RoleType.Size = 256;
			this.Roles.ElectronicAddressString = ElectronicAddressElectronicAddressString.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WebAddressClass.Instance.ConcreteRoles.ElectronicAddressString = WebAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ElectronicAddressString]; 
			EmailAddressClass.Instance.ConcreteRoles.ElectronicAddressString = EmailAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ElectronicAddressString]; 


		}

		internal class RolesType
		{
			internal RoleType ElectronicAddressString;

		}
	}public partial class ServiceConfigurationClass : Class
	{
		public static ServiceConfigurationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ServiceConfigurationClass() : base(AppsDomain.Instance, new Guid("5d4beea4-f480-460e-92ee-3e8d532ac7f9"))
        {
			this.SingularName = "ServiceConfiguration";
			this.PluralName = "ServiceConfigurations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cb045b0d-bd06-4f4b-8470-986bc9a46462"))
			{
				Subtype = Instance,
				Supertype = InventoryItemConfigurationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InventoryItem;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType ComponentInventoryItem;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class NeededSkillClass : Class
	{
		public static NeededSkillClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal NeededSkillClass() : base(AppsDomain.Instance, new Guid("5e31a968-5f7d-4109-9821-b94459f13382"))
        {
			this.SingularName = "NeededSkill";
			this.PluralName = "NeededSkills";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("53972844-6d92-4ba6-a88a-ee2ac1e968e0"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var NeededSkillSkillLevel = new RelationType(AppsDomain.Instance, new Guid("079ef934-26e1-4dba-a69a-73fcc22d380e"), new Guid("f2afa9e5-239d-46c8-94c7-57dd23cb645a"), new Guid("90f27ec7-03b8-491b-862c-3c18a37d4dbc"));
			NeededSkillSkillLevel.AssignedMultiplicity = Multiplicity.ManyToOne;
			NeededSkillSkillLevel.IsIndexed = true;

			NeededSkillSkillLevel.AssociationType.ObjectType = this;

			NeededSkillSkillLevel.RoleType.ObjectType = SkillLevelClass.Instance;;
			NeededSkillSkillLevel.RoleType.AssignedSingularName = "SkillLevel";
			NeededSkillSkillLevel.RoleType.AssignedPluralName = "SkillLevels";
			this.Roles.SkillLevel = NeededSkillSkillLevel.RoleType;

			var NeededSkillYearsExperience = new RelationType(AppsDomain.Instance, new Guid("21207c09-22b0-469a-84a7-6edd300c73f7"), new Guid("a2c931e4-8200-4cdd-9d26-bedbaf529c29"), new Guid("1984780a-81fa-4391-af4e-20f707550a3d"));
			NeededSkillYearsExperience.AssignedMultiplicity = Multiplicity.OneToOne;
			NeededSkillYearsExperience.AssociationType.ObjectType = this;

			NeededSkillYearsExperience.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			NeededSkillYearsExperience.RoleType.AssignedSingularName = "YearsExperience";
			NeededSkillYearsExperience.RoleType.AssignedPluralName = "YearsExperiences";
			NeededSkillYearsExperience.RoleType.Scale = 2;
			NeededSkillYearsExperience.RoleType.Precision = 19;
			this.Roles.YearsExperience = NeededSkillYearsExperience.RoleType;

			var NeededSkillSkill = new RelationType(AppsDomain.Instance, new Guid("590d749a-52d4-448a-8f95-8412c0115825"), new Guid("3e6cc798-dae0-4381-abfd-bcba0b449d03"), new Guid("09e6d6b8-8a89-46af-99fa-f332fea7ab6c"));
			NeededSkillSkill.AssignedMultiplicity = Multiplicity.ManyToOne;
			NeededSkillSkill.IsIndexed = true;

			NeededSkillSkill.AssociationType.ObjectType = this;

			NeededSkillSkill.RoleType.ObjectType = SkillClass.Instance;;
			NeededSkillSkill.RoleType.AssignedSingularName = "Skill";
			NeededSkillSkill.RoleType.AssignedPluralName = "Skills";
			this.Roles.Skill = NeededSkillSkill.RoleType;


		}

		internal override void SetRelationTypes()
		{
			NeededSkillClass.Instance.ConcreteRoles.SkillLevel = NeededSkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SkillLevel]; 

			NeededSkillClass.Instance.ConcreteRoles.YearsExperience = NeededSkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.YearsExperience]; 

			NeededSkillClass.Instance.ConcreteRoles.Skill = NeededSkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Skill]; 


		}

		internal class RolesType
		{
			internal RoleType SkillLevel;
			internal RoleType YearsExperience;
			internal RoleType Skill;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType SkillLevel;
			internal ConcreteRoleType YearsExperience;
			internal ConcreteRoleType Skill;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RoomClass : Class
	{
		public static RoomClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RoomClass() : base(AppsDomain.Instance, new Guid("5f16236a-0fa4-4866-9b3d-3951edbd4c81"))
        {
			this.SingularName = "Room";
			this.PluralName = "Rooms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("02fe5f82-8646-4c48-94de-8367ba04d75c"))
			{
				Subtype = Instance,
				Supertype = FacilityInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("909c0504-ac5f-4a10-93ae-03e638b13464"))
			{
				Subtype = Instance,
				Supertype = ContainerInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType MadeUpOf;
			internal ConcreteRoleType SquareFootage;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType FacilityContactMechanism;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ContainerDescription;

		}
	}public partial class PlantClass : Class
	{
		public static PlantClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PlantClass() : base(AppsDomain.Instance, new Guid("616a603d-d441-4408-8c43-179a1502dc64"))
        {
			this.SingularName = "Plant";
			this.PluralName = "Plants";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("572016a0-ee59-4c1a-a9e3-cbffa6fce56f"))
			{
				Subtype = Instance,
				Supertype = FacilityInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType MadeUpOf;
			internal ConcreteRoleType SquareFootage;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType FacilityContactMechanism;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class SalesInvoiceClass : Class
	{
		public static SalesInvoiceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesInvoiceClass() : base(AppsDomain.Instance, new Guid("6173fc23-115f-4356-a0ce-867872c151ac"))
        {
			this.SingularName = "SalesInvoice";
			this.PluralName = "SalesInvoices";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("566c8a2f-b4fb-40aa-9a8e-20672c9bda54"))
			{
				Subtype = Instance,
				Supertype = InvoiceInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesInvoiceCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("06d05f50-42ad-426f-9cd7-72e3eb155656"), new Guid("2286307f-4981-4518-b66b-55d27a8455ed"), new Guid("93f5dffc-d5d1-4e08-8ccf-c4be74e3ca00"));
			SalesInvoiceCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceCurrentObjectState.IsDerived = true;
			SalesInvoiceCurrentObjectState.IsIndexed = true;

			SalesInvoiceCurrentObjectState.AssociationType.ObjectType = this;

			SalesInvoiceCurrentObjectState.RoleType.ObjectType = SalesInvoiceObjectStateClass.Instance;;
			SalesInvoiceCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			SalesInvoiceCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = SalesInvoiceCurrentObjectState.RoleType;

			var SalesInvoicePreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("07077530-4e0c-49a8-9fb6-ded142c628a4"), new Guid("b262f707-f942-4372-a0e7-175fd89aa757"), new Guid("a4818ef6-6e55-4edd-9bc0-774ded9d8bd5"));
			SalesInvoicePreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoicePreviousObjectState.IsDerived = true;
			SalesInvoicePreviousObjectState.IsIndexed = true;

			SalesInvoicePreviousObjectState.AssociationType.ObjectType = this;

			SalesInvoicePreviousObjectState.RoleType.ObjectType = SalesInvoiceObjectStateClass.Instance;;
			SalesInvoicePreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			SalesInvoicePreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = SalesInvoicePreviousObjectState.RoleType;

			var SalesInvoiceTotalListPrice = new RelationType(AppsDomain.Instance, new Guid("09064adb-7094-48e9-992c-2eab319d640f"), new Guid("5ade34c0-1f3c-4ecf-933d-72360173f03d"), new Guid("17bb6982-04c0-42e8-9ae3-56bd50736cbb"));
			SalesInvoiceTotalListPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceTotalListPrice.AssociationType.ObjectType = this;

			SalesInvoiceTotalListPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceTotalListPrice.RoleType.AssignedSingularName = "TotalListPrice";
			SalesInvoiceTotalListPrice.RoleType.AssignedPluralName = "TotalListPrices";
			SalesInvoiceTotalListPrice.RoleType.Scale = 2;
			SalesInvoiceTotalListPrice.RoleType.Precision = 19;
			this.Roles.TotalListPrice = SalesInvoiceTotalListPrice.RoleType;

			var SalesInvoiceBilledFromInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("21ee2eb5-f20b-41cc-80d2-f533a53a2a2b"), new Guid("d52491dd-3da8-44dc-bf55-0b15553b3b1a"), new Guid("1fadb364-9e2a-4008-a36f-69a3233a9430"));
			SalesInvoiceBilledFromInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceBilledFromInternalOrganisation.IsIndexed = true;

			SalesInvoiceBilledFromInternalOrganisation.AssociationType.ObjectType = this;

			SalesInvoiceBilledFromInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesInvoiceBilledFromInternalOrganisation.RoleType.AssignedSingularName = "BilledFromInternalOrganisation";
			SalesInvoiceBilledFromInternalOrganisation.RoleType.AssignedPluralName = "BilledFromInternalOrganisations";
			this.Roles.BilledFromInternalOrganisation = SalesInvoiceBilledFromInternalOrganisation.RoleType;

			var SalesInvoiceBillToContactMechanism = new RelationType(AppsDomain.Instance, new Guid("27faaa2c-d4db-4cab-aa04-8ec4997d73d2"), new Guid("2e9fab52-2029-4ee3-8eba-ffd9764bcf67"), new Guid("9dd23ce4-d760-45af-94e4-c2ac94b0aea3"));
			SalesInvoiceBillToContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceBillToContactMechanism.IsIndexed = true;

			SalesInvoiceBillToContactMechanism.AssociationType.ObjectType = this;

			SalesInvoiceBillToContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			SalesInvoiceBillToContactMechanism.RoleType.AssignedSingularName = "BillToContactMechanism";
			SalesInvoiceBillToContactMechanism.RoleType.AssignedPluralName = "BillToContactMechanisms";
			this.Roles.BillToContactMechanism = SalesInvoiceBillToContactMechanism.RoleType;

			var SalesInvoicePreviousBillToCustomer = new RelationType(AppsDomain.Instance, new Guid("2d0e924b-ff24-4630-9151-ac9bfc844c0c"), new Guid("0a159385-7570-494e-976d-4ee493235cb3"), new Guid("239e91ee-5606-4131-a351-ebbd5908d9be"));
			SalesInvoicePreviousBillToCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoicePreviousBillToCustomer.IsDerived = true;
			SalesInvoicePreviousBillToCustomer.IsIndexed = true;

			SalesInvoicePreviousBillToCustomer.AssociationType.ObjectType = this;

			SalesInvoicePreviousBillToCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesInvoicePreviousBillToCustomer.RoleType.AssignedSingularName = "PreviousBillToCustomer";
			SalesInvoicePreviousBillToCustomer.RoleType.AssignedPluralName = "PreviousBillToCustomers";
			this.Roles.PreviousBillToCustomer = SalesInvoicePreviousBillToCustomer.RoleType;

			var SalesInvoiceSalesInvoiceType = new RelationType(AppsDomain.Instance, new Guid("3eb16102-21cc-4b71-a8e2-4f016da4cfb0"), new Guid("d6e7328a-c306-4649-a7cc-d6b53535845a"), new Guid("35ae04c4-8a23-4531-8736-370ce29c970f"));
			SalesInvoiceSalesInvoiceType.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceSalesInvoiceType.IsIndexed = true;

			SalesInvoiceSalesInvoiceType.AssociationType.ObjectType = this;

			SalesInvoiceSalesInvoiceType.RoleType.ObjectType = SalesInvoiceTypeClass.Instance;;
			SalesInvoiceSalesInvoiceType.RoleType.AssignedSingularName = "SalesInvoiceType";
			SalesInvoiceSalesInvoiceType.RoleType.AssignedPluralName = "SalesInvoiceTypes";
			this.Roles.SalesInvoiceType = SalesInvoiceSalesInvoiceType.RoleType;

			var SalesInvoiceInitialProfitMargin = new RelationType(AppsDomain.Instance, new Guid("401d58f3-286e-4fe4-88a0-e0bf9e245599"), new Guid("c0b50430-9566-42b0-b533-ec48b8cfd355"), new Guid("5c382076-deb8-4456-8cbd-e1f45bb4e5e3"));
			SalesInvoiceInitialProfitMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceInitialProfitMargin.IsDerived = true;
			SalesInvoiceInitialProfitMargin.AssociationType.ObjectType = this;

			SalesInvoiceInitialProfitMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceInitialProfitMargin.RoleType.AssignedSingularName = "InitialProfitMargin";
			SalesInvoiceInitialProfitMargin.RoleType.AssignedPluralName = "InitialProfitMargins";
			SalesInvoiceInitialProfitMargin.RoleType.Scale = 2;
			SalesInvoiceInitialProfitMargin.RoleType.Precision = 19;
			this.Roles.InitialProfitMargin = SalesInvoiceInitialProfitMargin.RoleType;

			var SalesInvoicePaymentMethod = new RelationType(AppsDomain.Instance, new Guid("4a7695a8-c649-4122-9336-8a1e2e5665ea"), new Guid("fc3ab94b-20e1-4156-aa69-381bb6e8a0b6"), new Guid("550b5478-6929-47b5-b124-2e529ca59cf3"));
			SalesInvoicePaymentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoicePaymentMethod.IsIndexed = true;

			SalesInvoicePaymentMethod.AssociationType.ObjectType = this;

			SalesInvoicePaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			SalesInvoicePaymentMethod.RoleType.AssignedSingularName = "PaymentMethod";
			SalesInvoicePaymentMethod.RoleType.AssignedPluralName = "PaymentMethods";
			this.Roles.PaymentMethod = SalesInvoicePaymentMethod.RoleType;

			var SalesInvoiceSalesOrder = new RelationType(AppsDomain.Instance, new Guid("5c1f4c88-f67d-4f82-a7de-28868a5f030d"), new Guid("32125426-057d-441f-b9c9-2162d58fea83"), new Guid("801d63a0-31ae-4000-802a-b827e4122c62"));
			SalesInvoiceSalesOrder.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceSalesOrder.IsDerived = true;
			SalesInvoiceSalesOrder.IsIndexed = true;

			SalesInvoiceSalesOrder.AssociationType.ObjectType = this;

			SalesInvoiceSalesOrder.RoleType.ObjectType = SalesOrderClass.Instance;;
			SalesInvoiceSalesOrder.RoleType.AssignedSingularName = "SalesOrder";
			SalesInvoiceSalesOrder.RoleType.AssignedPluralName = "SalesOrders";
			this.Roles.SalesOrder = SalesInvoiceSalesOrder.RoleType;

			var SalesInvoiceInitialMarkupPercentage = new RelationType(AppsDomain.Instance, new Guid("5c3903fa-105b-4c57-8281-1486b0411a3a"), new Guid("2d1495cc-54f2-4ff7-bbfc-6e3aafb2e319"), new Guid("dc40bbae-ac9b-468b-add4-35dfb53a469b"));
			SalesInvoiceInitialMarkupPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceInitialMarkupPercentage.IsDerived = true;
			SalesInvoiceInitialMarkupPercentage.AssociationType.ObjectType = this;

			SalesInvoiceInitialMarkupPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceInitialMarkupPercentage.RoleType.AssignedSingularName = "InitialMarkupPercentage";
			SalesInvoiceInitialMarkupPercentage.RoleType.AssignedPluralName = "InitialMarkupPercentages";
			SalesInvoiceInitialMarkupPercentage.RoleType.Scale = 2;
			SalesInvoiceInitialMarkupPercentage.RoleType.Precision = 19;
			this.Roles.InitialMarkupPercentage = SalesInvoiceInitialMarkupPercentage.RoleType;

			var SalesInvoiceMaintainedMarkupPercentage = new RelationType(AppsDomain.Instance, new Guid("67f49b02-f129-4e18-9411-b8b3d17f151b"), new Guid("faffb97a-02d7-4e1d-97c6-fc9275ee5fe6"), new Guid("5a4b5008-2fdd-43a9-a92b-d7d8b3e6678f"));
			SalesInvoiceMaintainedMarkupPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceMaintainedMarkupPercentage.IsDerived = true;
			SalesInvoiceMaintainedMarkupPercentage.AssociationType.ObjectType = this;

			SalesInvoiceMaintainedMarkupPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceMaintainedMarkupPercentage.RoleType.AssignedSingularName = "MaintainedMarkupPercentage";
			SalesInvoiceMaintainedMarkupPercentage.RoleType.AssignedPluralName = "MaintainedMarkupPercentages";
			SalesInvoiceMaintainedMarkupPercentage.RoleType.Scale = 2;
			SalesInvoiceMaintainedMarkupPercentage.RoleType.Precision = 19;
			this.Roles.MaintainedMarkupPercentage = SalesInvoiceMaintainedMarkupPercentage.RoleType;

			var SalesInvoiceSalesRep = new RelationType(AppsDomain.Instance, new Guid("6cb5e21c-6344-46a9-bab5-355cdfbead81"), new Guid("8e8100ae-dbaa-425c-9dfe-4dccb1d2335a"), new Guid("9f01863e-afc8-47d6-adf1-7c861cd97229"));
			SalesInvoiceSalesRep.AssignedMultiplicity = Multiplicity.ManyToMany;
			SalesInvoiceSalesRep.IsDerived = true;
			SalesInvoiceSalesRep.IsIndexed = true;

			SalesInvoiceSalesRep.AssociationType.ObjectType = this;

			SalesInvoiceSalesRep.RoleType.ObjectType = PersonClass.Instance;;
			SalesInvoiceSalesRep.RoleType.AssignedSingularName = "SalesRep";
			SalesInvoiceSalesRep.RoleType.AssignedPluralName = "SalesReps";
			this.Roles.SalesRep = SalesInvoiceSalesRep.RoleType;

			var SalesInvoiceShipment = new RelationType(AppsDomain.Instance, new Guid("6e2b9a8a-9d59-4041-a9ea-f3f8286f110c"), new Guid("ee7aba21-39d6-4a4c-8b18-c7c141c8abdc"), new Guid("12db3958-c666-475e-85db-124c6549664d"));
			SalesInvoiceShipment.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceShipment.IsDerived = true;
			SalesInvoiceShipment.IsIndexed = true;

			SalesInvoiceShipment.AssociationType.ObjectType = this;

			SalesInvoiceShipment.RoleType.ObjectType = ShipmentInterface.Instance;;
			SalesInvoiceShipment.RoleType.AssignedSingularName = "Shipment";
			SalesInvoiceShipment.RoleType.AssignedPluralName = "Shipments";
			this.Roles.Shipment = SalesInvoiceShipment.RoleType;

			var SalesInvoiceMaintainedProfitMargin = new RelationType(AppsDomain.Instance, new Guid("76982824-9c87-4f93-b2c1-ae312b200bdb"), new Guid("a2832845-c225-4c46-8ce5-c17b9cdcb04b"), new Guid("d097a56f-225e-46be-9474-b35872532e52"));
			SalesInvoiceMaintainedProfitMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceMaintainedProfitMargin.IsDerived = true;
			SalesInvoiceMaintainedProfitMargin.AssociationType.ObjectType = this;

			SalesInvoiceMaintainedProfitMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceMaintainedProfitMargin.RoleType.AssignedSingularName = "MaintainedProfitMargin";
			SalesInvoiceMaintainedProfitMargin.RoleType.AssignedPluralName = "MaintainedProfitMargins";
			SalesInvoiceMaintainedProfitMargin.RoleType.Scale = 2;
			SalesInvoiceMaintainedProfitMargin.RoleType.Precision = 19;
			this.Roles.MaintainedProfitMargin = SalesInvoiceMaintainedProfitMargin.RoleType;

			var SalesInvoiceInvoiceStatus = new RelationType(AppsDomain.Instance, new Guid("7eb3ee0e-43ff-4534-b6f0-c2dba20d4ed6"), new Guid("5a2b19b5-624a-4c2d-99a8-334502a1ca5e"), new Guid("f9e155ae-80e3-42a7-a9be-a3a76dc72545"));
			SalesInvoiceInvoiceStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesInvoiceInvoiceStatus.IsDerived = true;
			SalesInvoiceInvoiceStatus.IsIndexed = true;

			SalesInvoiceInvoiceStatus.AssociationType.ObjectType = this;

			SalesInvoiceInvoiceStatus.RoleType.ObjectType = SalesInvoiceStatusClass.Instance;;
			SalesInvoiceInvoiceStatus.RoleType.AssignedSingularName = "InvoiceStatus";
			SalesInvoiceInvoiceStatus.RoleType.AssignedPluralName = "InvoiceStatuses";
			this.Roles.InvoiceStatus = SalesInvoiceInvoiceStatus.RoleType;

			var SalesInvoicePreviousShipToCustomer = new RelationType(AppsDomain.Instance, new Guid("7f833ad2-3146-4660-a9d4-8a70d3ce01db"), new Guid("b466881e-156a-488f-9f26-c2850b7dd7fc"), new Guid("aa621b67-049a-44e8-9f70-07e2a0c696b8"));
			SalesInvoicePreviousShipToCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoicePreviousShipToCustomer.IsIndexed = true;

			SalesInvoicePreviousShipToCustomer.AssociationType.ObjectType = this;

			SalesInvoicePreviousShipToCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesInvoicePreviousShipToCustomer.RoleType.AssignedSingularName = "PreviousShipToCustomer";
			SalesInvoicePreviousShipToCustomer.RoleType.AssignedPluralName = "PreviousShipToCustomers";
			this.Roles.PreviousShipToCustomer = SalesInvoicePreviousShipToCustomer.RoleType;

			var SalesInvoiceBillToCustomer = new RelationType(AppsDomain.Instance, new Guid("816d66a7-7cab-4ce3-9912-c7cc9d6c294c"), new Guid("8b3c78de-7281-4f94-aeda-1dc6bd345df3"), new Guid("056822e6-4333-44ae-8479-d05c1b1b2974"));
			SalesInvoiceBillToCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceBillToCustomer.IsIndexed = true;

			SalesInvoiceBillToCustomer.AssociationType.ObjectType = this;

			SalesInvoiceBillToCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesInvoiceBillToCustomer.RoleType.AssignedSingularName = "BillToCustomer";
			SalesInvoiceBillToCustomer.RoleType.AssignedPluralName = "BillToCustomers";
			this.Roles.BillToCustomer = SalesInvoiceBillToCustomer.RoleType;

			var SalesInvoiceCurrentInvoiceStatus = new RelationType(AppsDomain.Instance, new Guid("8766886a-1efd-412a-9198-1fce2d7478ee"), new Guid("3551ceb8-ce23-4240-af01-d2174a3b0dc1"), new Guid("1bc96a84-4f08-4148-a5c4-123ab290e6a0"));
			SalesInvoiceCurrentInvoiceStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceCurrentInvoiceStatus.IsDerived = true;
			SalesInvoiceCurrentInvoiceStatus.IsIndexed = true;

			SalesInvoiceCurrentInvoiceStatus.AssociationType.ObjectType = this;

			SalesInvoiceCurrentInvoiceStatus.RoleType.ObjectType = SalesInvoiceStatusClass.Instance;;
			SalesInvoiceCurrentInvoiceStatus.RoleType.AssignedSingularName = "CurrentInvoiceStatus";
			SalesInvoiceCurrentInvoiceStatus.RoleType.AssignedPluralName = "CurrentInvoiceStatuses";
			this.Roles.CurrentInvoiceStatus = SalesInvoiceCurrentInvoiceStatus.RoleType;

			var SalesInvoiceSalesInvoiceItem = new RelationType(AppsDomain.Instance, new Guid("89557826-c9d1-4aa1-8789-79fb425cdb87"), new Guid("7d157e5a-efbb-453e-bd95-27a9b0ab305f"), new Guid("751ada5f-ff41-43ae-8609-0c1457642375"));
			SalesInvoiceSalesInvoiceItem.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesInvoiceSalesInvoiceItem.IsIndexed = true;

			SalesInvoiceSalesInvoiceItem.AssociationType.ObjectType = this;

			SalesInvoiceSalesInvoiceItem.RoleType.ObjectType = SalesInvoiceItemClass.Instance;;
			SalesInvoiceSalesInvoiceItem.RoleType.AssignedSingularName = "SalesInvoiceItem";
			SalesInvoiceSalesInvoiceItem.RoleType.AssignedPluralName = "SalesInvoiceItems";
			this.Roles.SalesInvoiceItem = SalesInvoiceSalesInvoiceItem.RoleType;

			var SalesInvoiceTotalListPriceCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("ab59d448-e9a4-48c3-9288-5a9b7c524870"), new Guid("0b3fb144-b9bf-4651-b227-2f00a5c95c38"), new Guid("124b784c-0b1d-46c6-8369-ae3886b51a47"));
			SalesInvoiceTotalListPriceCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceTotalListPriceCustomerCurrency.IsDerived = true;
			SalesInvoiceTotalListPriceCustomerCurrency.AssociationType.ObjectType = this;

			SalesInvoiceTotalListPriceCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceTotalListPriceCustomerCurrency.RoleType.AssignedSingularName = "TotalListPriceCustomerCurrency";
			SalesInvoiceTotalListPriceCustomerCurrency.RoleType.AssignedPluralName = "TotalListPricesCustomerCurrency";
			SalesInvoiceTotalListPriceCustomerCurrency.RoleType.Scale = 2;
			SalesInvoiceTotalListPriceCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalListPriceCustomerCurrency = SalesInvoiceTotalListPriceCustomerCurrency.RoleType;

			var SalesInvoiceShipToCustomer = new RelationType(AppsDomain.Instance, new Guid("af0a72c8-003c-44a6-8c6f-086f26542e3d"), new Guid("d434a95b-9053-4471-864b-3d139b78915d"), new Guid("6c44f465-7d50-4a1b-bffa-9693f9afbde2"));
			SalesInvoiceShipToCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceShipToCustomer.IsIndexed = true;

			SalesInvoiceShipToCustomer.AssociationType.ObjectType = this;

			SalesInvoiceShipToCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesInvoiceShipToCustomer.RoleType.AssignedSingularName = "ShipToCustomer";
			SalesInvoiceShipToCustomer.RoleType.AssignedPluralName = "ShipToCustomers";
			this.Roles.ShipToCustomer = SalesInvoiceShipToCustomer.RoleType;

			var SalesInvoiceBilledFromContactMechanism = new RelationType(AppsDomain.Instance, new Guid("ddd9b372-4687-4a6e-b62b-4e0521f8c4b7"), new Guid("3e5b5599-82bc-4bc3-8ef0-9b2301a1ad40"), new Guid("33265997-e42c-4955-839c-d2ce054b2d33"));
			SalesInvoiceBilledFromContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceBilledFromContactMechanism.IsIndexed = true;

			SalesInvoiceBilledFromContactMechanism.AssociationType.ObjectType = this;

			SalesInvoiceBilledFromContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			SalesInvoiceBilledFromContactMechanism.RoleType.AssignedSingularName = "BilledFromContactMechanism";
			SalesInvoiceBilledFromContactMechanism.RoleType.AssignedPluralName = "BilledFromContactMechanisms";
			this.Roles.BilledFromContactMechanism = SalesInvoiceBilledFromContactMechanism.RoleType;

			var SalesInvoiceTotalPurchasePrice = new RelationType(AppsDomain.Instance, new Guid("deb1b4ad-39a4-480a-8ef2-3f05c6505077"), new Guid("98bd67fc-c675-425a-800d-79cea6a4a193"), new Guid("1ed1e917-2729-4d14-8b28-686991e11d6c"));
			SalesInvoiceTotalPurchasePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceTotalPurchasePrice.AssociationType.ObjectType = this;

			SalesInvoiceTotalPurchasePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceTotalPurchasePrice.RoleType.AssignedSingularName = "TotalPurchasePrice";
			SalesInvoiceTotalPurchasePrice.RoleType.AssignedPluralName = "TotalPurchasePrices";
			SalesInvoiceTotalPurchasePrice.RoleType.Scale = 2;
			SalesInvoiceTotalPurchasePrice.RoleType.Precision = 19;
			this.Roles.TotalPurchasePrice = SalesInvoiceTotalPurchasePrice.RoleType;

			var SalesInvoiceSalesChannel = new RelationType(AppsDomain.Instance, new Guid("ed091c3c-1f38-498a-8ca5-ca8b8ddfc5c4"), new Guid("2531dbb0-e34e-41c2-b6e2-95e3a39cf54d"), new Guid("e279aec5-e503-46c5-9563-b13f58274f71"));
			SalesInvoiceSalesChannel.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceSalesChannel.IsIndexed = true;

			SalesInvoiceSalesChannel.AssociationType.ObjectType = this;

			SalesInvoiceSalesChannel.RoleType.ObjectType = SalesChannelClass.Instance;;
			SalesInvoiceSalesChannel.RoleType.AssignedSingularName = "SalesChannel";
			SalesInvoiceSalesChannel.RoleType.AssignedPluralName = "SalesChannels";
			this.Roles.SalesChannel = SalesInvoiceSalesChannel.RoleType;

			var SalesInvoiceCustomer = new RelationType(AppsDomain.Instance, new Guid("f2f85b74-b28f-4627-9dca-94142789c0bc"), new Guid("e1bf6299-0009-44ad-84d3-725df91d5f63"), new Guid("e64f29b4-aa97-463f-acf1-fc9bd2a2bd8f"));
			SalesInvoiceCustomer.AssignedMultiplicity = Multiplicity.ManyToMany;
			SalesInvoiceCustomer.IsDerived = true;
			SalesInvoiceCustomer.IsIndexed = true;

			SalesInvoiceCustomer.AssociationType.ObjectType = this;

			SalesInvoiceCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesInvoiceCustomer.RoleType.AssignedSingularName = "Customer";
			SalesInvoiceCustomer.RoleType.AssignedPluralName = "Customers";
			this.Roles.Customer = SalesInvoiceCustomer.RoleType;

			var SalesInvoiceShipToAddress = new RelationType(AppsDomain.Instance, new Guid("f808aafb-3c7d-4a26-af5c-44b76ee45e86"), new Guid("d487d63e-8094-4085-bb73-d2f24e586c26"), new Guid("462acdc2-69e1-42e5-ba10-6f74f04da7a5"));
			SalesInvoiceShipToAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceShipToAddress.IsIndexed = true;

			SalesInvoiceShipToAddress.AssociationType.ObjectType = this;

			SalesInvoiceShipToAddress.RoleType.ObjectType = PostalAddressClass.Instance;;
			SalesInvoiceShipToAddress.RoleType.AssignedSingularName = "ShipToAddress";
			SalesInvoiceShipToAddress.RoleType.AssignedPluralName = "ShipToAddresses";
			this.Roles.ShipToAddress = SalesInvoiceShipToAddress.RoleType;

			var SalesInvoiceStore = new RelationType(AppsDomain.Instance, new Guid("fd12507e-96b7-4b15-a43d-ab418d4795d6"), new Guid("b8044f1e-b8fa-42fc-995d-06ac47423b8e"), new Guid("8dd43185-e3a9-44d7-ab1e-2a1222a234cf"));
			SalesInvoiceStore.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceStore.IsIndexed = true;

			SalesInvoiceStore.AssociationType.ObjectType = this;

			SalesInvoiceStore.RoleType.ObjectType = StoreClass.Instance;;
			SalesInvoiceStore.RoleType.AssignedSingularName = "Store";
			SalesInvoiceStore.RoleType.AssignedPluralName = "Stores";
			this.Roles.Store = SalesInvoiceStore.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesInvoiceClass.Instance.ConcreteRoles.CurrentObjectState = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			SalesInvoiceClass.Instance.ConcreteRoles.PreviousObjectState = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalListPrice = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalListPrice]; 

			SalesInvoiceClass.Instance.ConcreteRoles.BilledFromInternalOrganisation = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BilledFromInternalOrganisation]; 

			SalesInvoiceClass.Instance.ConcreteRoles.BillToContactMechanism = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToContactMechanism]; 

			SalesInvoiceClass.Instance.ConcreteRoles.PreviousBillToCustomer = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousBillToCustomer]; 

			SalesInvoiceClass.Instance.ConcreteRoles.SalesInvoiceType = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesInvoiceType]; 

			SalesInvoiceClass.Instance.ConcreteRoles.InitialProfitMargin = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialProfitMargin]; 

			SalesInvoiceClass.Instance.ConcreteRoles.PaymentMethod = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 

			SalesInvoiceClass.Instance.ConcreteRoles.SalesOrder = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOrder]; 

			SalesInvoiceClass.Instance.ConcreteRoles.InitialMarkupPercentage = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialMarkupPercentage]; 

			SalesInvoiceClass.Instance.ConcreteRoles.MaintainedMarkupPercentage = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaintainedMarkupPercentage]; 

			SalesInvoiceClass.Instance.ConcreteRoles.SalesRep = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRep]; 

			SalesInvoiceClass.Instance.ConcreteRoles.Shipment = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Shipment]; 

			SalesInvoiceClass.Instance.ConcreteRoles.MaintainedProfitMargin = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaintainedProfitMargin]; 

			SalesInvoiceClass.Instance.ConcreteRoles.InvoiceStatus = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceStatus]; 

			SalesInvoiceClass.Instance.ConcreteRoles.PreviousShipToCustomer = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousShipToCustomer]; 

			SalesInvoiceClass.Instance.ConcreteRoles.BillToCustomer = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToCustomer]; 

			SalesInvoiceClass.Instance.ConcreteRoles.CurrentInvoiceStatus = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentInvoiceStatus]; 

			SalesInvoiceClass.Instance.ConcreteRoles.SalesInvoiceItem = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesInvoiceItem]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalListPriceCustomerCurrency = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalListPriceCustomerCurrency]; 

			SalesInvoiceClass.Instance.ConcreteRoles.ShipToCustomer = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToCustomer]; 

			SalesInvoiceClass.Instance.ConcreteRoles.BilledFromContactMechanism = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BilledFromContactMechanism]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalPurchasePrice = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalPurchasePrice]; 

			SalesInvoiceClass.Instance.ConcreteRoles.SalesChannel = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 

			SalesInvoiceClass.Instance.ConcreteRoles.Customer = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Customer]; 

			SalesInvoiceClass.Instance.ConcreteRoles.ShipToAddress = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToAddress]; 

			SalesInvoiceClass.Instance.ConcreteRoles.Store = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 


		}

		internal class RolesType
		{
			internal RoleType CurrentObjectState;
			internal RoleType PreviousObjectState;
			internal RoleType TotalListPrice;
			internal RoleType BilledFromInternalOrganisation;
			internal RoleType BillToContactMechanism;
			internal RoleType PreviousBillToCustomer;
			internal RoleType SalesInvoiceType;
			internal RoleType InitialProfitMargin;
			internal RoleType PaymentMethod;
			internal RoleType SalesOrder;
			internal RoleType InitialMarkupPercentage;
			internal RoleType MaintainedMarkupPercentage;
			internal RoleType SalesRep;
			internal RoleType Shipment;
			internal RoleType MaintainedProfitMargin;
			internal RoleType InvoiceStatus;
			internal RoleType PreviousShipToCustomer;
			internal RoleType BillToCustomer;
			internal RoleType CurrentInvoiceStatus;
			internal RoleType SalesInvoiceItem;
			internal RoleType TotalListPriceCustomerCurrency;
			internal RoleType ShipToCustomer;
			internal RoleType BilledFromContactMechanism;
			internal RoleType TotalPurchasePrice;
			internal RoleType SalesChannel;
			internal RoleType Customer;
			internal RoleType ShipToAddress;
			internal RoleType Store;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType TotalListPrice;
			internal ConcreteRoleType BilledFromInternalOrganisation;
			internal ConcreteRoleType BillToContactMechanism;
			internal ConcreteRoleType PreviousBillToCustomer;
			internal ConcreteRoleType SalesInvoiceType;
			internal ConcreteRoleType InitialProfitMargin;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType SalesOrder;
			internal ConcreteRoleType InitialMarkupPercentage;
			internal ConcreteRoleType MaintainedMarkupPercentage;
			internal ConcreteRoleType SalesRep;
			internal ConcreteRoleType Shipment;
			internal ConcreteRoleType MaintainedProfitMargin;
			internal ConcreteRoleType InvoiceStatus;
			internal ConcreteRoleType PreviousShipToCustomer;
			internal ConcreteRoleType BillToCustomer;
			internal ConcreteRoleType CurrentInvoiceStatus;
			internal ConcreteRoleType SalesInvoiceItem;
			internal ConcreteRoleType TotalListPriceCustomerCurrency;
			internal ConcreteRoleType ShipToCustomer;
			internal ConcreteRoleType BilledFromContactMechanism;
			internal ConcreteRoleType TotalPurchasePrice;
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType Customer;
			internal ConcreteRoleType ShipToAddress;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType TotalShippingAndHandlingCustomerCurrency;
			internal ConcreteRoleType CustomerCurrency;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ShippingAndHandlingCharge;
			internal ConcreteRoleType TotalFeeCustomerCurrency;
			internal ConcreteRoleType Fee;
			internal ConcreteRoleType TotalExVatCustomerCurrency;
			internal ConcreteRoleType CustomerReference;
			internal ConcreteRoleType DiscountAdjustment;
			internal ConcreteRoleType AmountPaid;
			internal ConcreteRoleType TotalDiscount;
			internal ConcreteRoleType BillingAccount;
			internal ConcreteRoleType TotalIncVat;
			internal ConcreteRoleType TotalSurcharge;
			internal ConcreteRoleType TotalBasePrice;
			internal ConcreteRoleType TotalVatCustomerCurrency;
			internal ConcreteRoleType InvoiceDate;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType TotalIncVatCustomerCurrency;
			internal ConcreteRoleType TotalShippingAndHandling;
			internal ConcreteRoleType TotalBasePriceCustomerCurrency;
			internal ConcreteRoleType SurchargeAdjustment;
			internal ConcreteRoleType TotalExVat;
			internal ConcreteRoleType InvoiceTerm;
			internal ConcreteRoleType TotalSurchargeCustomerCurrency;
			internal ConcreteRoleType InvoiceNumber;
			internal ConcreteRoleType Message;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType TotalDiscountCustomerCurrency;
			internal ConcreteRoleType TotalVat;
			internal ConcreteRoleType TotalFee;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Locale;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class InventoryItemInterface: Interface
	{
		public static InventoryItemInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal InventoryItemInterface() : base(AppsDomain.Instance, new Guid("61af6d19-e8e4-4b5b-97e8-3610fbc82605"))
        {
			this.SingularName = "InventoryItem";
			this.PluralName = "InventoryItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("23f9d7b5-8855-4001-a3fc-8a595e3fe2d3"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("f3013d03-0783-4065-ab02-f4757a987589"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("fe91f009-d9c5-4cc2-9ff7-3963388c946d"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var InventoryItemInventoryItemVariance = new RelationType(AppsDomain.Instance, new Guid("0f4e5107-cf1e-4fc2-9be5-c3235ce9a7af"), new Guid("4552144a-0d6e-4a4a-94c7-cafcdd280350"), new Guid("dbb34993-e385-4702-8a50-4cc26193b862"));
			InventoryItemInventoryItemVariance.AssignedMultiplicity = Multiplicity.OneToMany;
			InventoryItemInventoryItemVariance.IsIndexed = true;

			InventoryItemInventoryItemVariance.AssociationType.ObjectType = this;

			InventoryItemInventoryItemVariance.RoleType.ObjectType = InventoryItemVarianceClass.Instance;;
			InventoryItemInventoryItemVariance.RoleType.AssignedSingularName = "InventoryItemVariance";
			InventoryItemInventoryItemVariance.RoleType.AssignedPluralName = "InventoryItemVariances";
			this.Roles.InventoryItemVariance = InventoryItemInventoryItemVariance.RoleType;

			var InventoryItemPart = new RelationType(AppsDomain.Instance, new Guid("374e9e57-e878-40ac-9021-d830dbf1efdc"), new Guid("fb58bcd8-d263-4563-b7d1-d62b6036e8bb"), new Guid("99a9dadc-ac9e-4662-91d0-41804e70101f"));
			InventoryItemPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			InventoryItemPart.IsIndexed = true;

			InventoryItemPart.AssociationType.ObjectType = this;

			InventoryItemPart.RoleType.ObjectType = PartInterface.Instance;;
			InventoryItemPart.RoleType.AssignedSingularName = "Part";
			InventoryItemPart.RoleType.AssignedPluralName = "Parts";
			this.Roles.Part = InventoryItemPart.RoleType;

			var InventoryItemContainer = new RelationType(AppsDomain.Instance, new Guid("39ee9493-b628-4cc6-a31c-239f306e8497"), new Guid("04da42d7-6e24-409e-b384-2283dc95ac35"), new Guid("b08500e2-feee-4115-90ec-c65d719d1d29"));
			InventoryItemContainer.AssignedMultiplicity = Multiplicity.ManyToOne;
			InventoryItemContainer.IsIndexed = true;

			InventoryItemContainer.AssociationType.ObjectType = this;

			InventoryItemContainer.RoleType.ObjectType = ContainerInterface.Instance;;
			InventoryItemContainer.RoleType.AssignedSingularName = "Container";
			InventoryItemContainer.RoleType.AssignedPluralName = "Containers";
			this.Roles.Container = InventoryItemContainer.RoleType;

			var InventoryItemName = new RelationType(AppsDomain.Instance, new Guid("57bd3950-8477-44c3-9c16-dd894d774c51"), new Guid("758170e9-123d-47aa-96f2-ecff7f90c3e0"), new Guid("2618fdd7-d513-4c0d-be0a-12c73225777d"));
			InventoryItemName.AssignedMultiplicity = Multiplicity.OneToOne;
			InventoryItemName.IsDerived = true;
			InventoryItemName.AssociationType.ObjectType = this;

			InventoryItemName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InventoryItemName.RoleType.AssignedSingularName = "Name";
			InventoryItemName.RoleType.AssignedPluralName = "Names";
			InventoryItemName.RoleType.Size = 256;
			this.Roles.Name = InventoryItemName.RoleType;

			var InventoryItemLot = new RelationType(AppsDomain.Instance, new Guid("5f8fa5ee-a638-4222-9865-518e220e7299"), new Guid("b6412daa-ac8d-4a73-8b87-cbc91981488c"), new Guid("eb553284-25ab-4cc0-ba20-5b5ef5c74313"));
			InventoryItemLot.AssignedMultiplicity = Multiplicity.ManyToOne;
			InventoryItemLot.IsIndexed = true;

			InventoryItemLot.AssociationType.ObjectType = this;

			InventoryItemLot.RoleType.ObjectType = LotClass.Instance;;
			InventoryItemLot.RoleType.AssignedSingularName = "Lot";
			InventoryItemLot.RoleType.AssignedPluralName = "Lots";
			this.Roles.Lot = InventoryItemLot.RoleType;

			var InventoryItemSku = new RelationType(AppsDomain.Instance, new Guid("64887d2f-3017-4804-afb4-5e46eec23491"), new Guid("cdb384fc-b2af-49df-a478-c3152c7386ea"), new Guid("4a17bd4c-57a2-4602-b263-6bc9bd0e66aa"));
			InventoryItemSku.AssignedMultiplicity = Multiplicity.OneToOne;
			InventoryItemSku.IsDerived = true;
			InventoryItemSku.AssociationType.ObjectType = this;

			InventoryItemSku.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InventoryItemSku.RoleType.AssignedSingularName = "Sku";
			InventoryItemSku.RoleType.AssignedPluralName = "Skus";
			InventoryItemSku.RoleType.Size = 256;
			this.Roles.Sku = InventoryItemSku.RoleType;

			var InventoryItemUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("6efb2763-ce7e-4b43-afc1-e4e37af814f0"), new Guid("68c84889-9cb5-43d4-8406-88c3dcfea7aa"), new Guid("e4d19331-72c6-4b4a-bb20-e3beffe3a46e"));
			InventoryItemUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			InventoryItemUnitOfMeasure.IsDerived = true;
			InventoryItemUnitOfMeasure.IsIndexed = true;

			InventoryItemUnitOfMeasure.AssociationType.ObjectType = this;

			InventoryItemUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			InventoryItemUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			InventoryItemUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = InventoryItemUnitOfMeasure.RoleType;

			var InventoryItemDerivedProductCategory = new RelationType(AppsDomain.Instance, new Guid("ab7b1a91-4756-4806-a5d3-ed8b392c6fe7"), new Guid("32ee6a64-bc23-4cb8-a839-2a83d4a68c46"), new Guid("8455bf8a-247f-41d9-b6fc-c30cda0f10f4"));
			InventoryItemDerivedProductCategory.AssignedMultiplicity = Multiplicity.ManyToMany;
			InventoryItemDerivedProductCategory.IsDerived = true;
			InventoryItemDerivedProductCategory.IsIndexed = true;

			InventoryItemDerivedProductCategory.AssociationType.ObjectType = this;

			InventoryItemDerivedProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			InventoryItemDerivedProductCategory.RoleType.AssignedSingularName = "DerivedProductCategory";
			InventoryItemDerivedProductCategory.RoleType.AssignedPluralName = "DerivedProductCategories";
			this.Roles.DerivedProductCategory = InventoryItemDerivedProductCategory.RoleType;

			var InventoryItemGood = new RelationType(AppsDomain.Instance, new Guid("b4d944f5-7376-4096-a34a-4571f537c5fc"), new Guid("78fe1b1f-b4e9-4b75-b16f-6647ef8080ee"), new Guid("6cda2856-203d-409a-b9dd-3ae0c91d7443"));
			InventoryItemGood.AssignedMultiplicity = Multiplicity.ManyToOne;
			InventoryItemGood.IsIndexed = true;

			InventoryItemGood.AssociationType.ObjectType = this;

			InventoryItemGood.RoleType.ObjectType = GoodClass.Instance;;
			InventoryItemGood.RoleType.AssignedSingularName = "Good";
			InventoryItemGood.RoleType.AssignedPluralName = "Goods";
			this.Roles.Good = InventoryItemGood.RoleType;

			var InventoryItemFacility = new RelationType(AppsDomain.Instance, new Guid("f99da732-7c31-4c67-a610-2147a2f29e44"), new Guid("300cc6b2-7f50-4399-a3f6-e492d3858524"), new Guid("e1f8b0ea-6b2f-44f1-bfe0-504b8e06f96d"));
			InventoryItemFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			InventoryItemFacility.IsIndexed = true;

			InventoryItemFacility.AssociationType.ObjectType = this;

			InventoryItemFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			InventoryItemFacility.RoleType.AssignedSingularName = "Facility";
			InventoryItemFacility.RoleType.AssignedPluralName = "Facilities";
			this.Roles.Facility = InventoryItemFacility.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SerializedInventoryItemClass.Instance.ConcreteRoles.InventoryItemVariance = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemVariance]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.InventoryItemVariance = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemVariance]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.Part = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.Part = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.Container = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Container]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.Container = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Container]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.Name = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.Name = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.Lot = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Lot]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.Lot = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Lot]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.Sku = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Sku]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.Sku = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Sku]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.UnitOfMeasure = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.UnitOfMeasure = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.DerivedProductCategory = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedProductCategory]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.DerivedProductCategory = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedProductCategory]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.Good = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Good]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.Good = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Good]; 

			SerializedInventoryItemClass.Instance.ConcreteRoles.Facility = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.Facility = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 


		}

		internal class RolesType
		{
			internal RoleType InventoryItemVariance;
			internal RoleType Part;
			internal RoleType Container;
			internal RoleType Name;
			internal RoleType Lot;
			internal RoleType Sku;
			internal RoleType UnitOfMeasure;
			internal RoleType DerivedProductCategory;
			internal RoleType Good;
			internal RoleType Facility;

		}
	}public partial class StandardServiceOrderItemClass : Class
	{
		public static StandardServiceOrderItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal StandardServiceOrderItemClass() : base(AppsDomain.Instance, new Guid("622a0738-338e-454e-a8ca-4a8fa3e9d9a4"))
        {
			this.SingularName = "StandardServiceOrderItem";
			this.PluralName = "StandardServiceOrderItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("18081cbb-db11-4254-9140-c7fd1242a038"))
			{
				Subtype = Instance,
				Supertype = EngagementItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType QuoteItem;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ExpectedStartDate;
			internal ConcreteRoleType ExpectedEndDate;
			internal ConcreteRoleType EngagementWorkFulfillment;
			internal ConcreteRoleType EngagementRate;
			internal ConcreteRoleType CurrentEngagementRate;
			internal ConcreteRoleType OrderedWith;
			internal ConcreteRoleType CurrentAssignedProfessional;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PurchaseInvoiceStatusClass : Class
	{
		public static PurchaseInvoiceStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseInvoiceStatusClass() : base(AppsDomain.Instance, new Guid("622c8a98-ec26-4f05-9a09-a9032a41e586"))
        {
			this.SingularName = "PurchaseInvoiceStatus";
			this.PluralName = "PurchaseInvoiceStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("13dc408c-abef-4a78-b3ea-6f149a2c6ec8"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseInvoiceStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("049dd047-7fa7-46e3-900b-84b87f960412"), new Guid("51ddc06d-aa92-49e1-b410-a7f69a474bdf"), new Guid("bf01b58a-465e-4dec-a451-de4601d28850"));
			PurchaseInvoiceStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseInvoiceStatusStartDateTime.AssociationType.ObjectType = this;

			PurchaseInvoiceStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PurchaseInvoiceStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			PurchaseInvoiceStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = PurchaseInvoiceStatusStartDateTime.RoleType;

			var PurchaseInvoiceStatusPurchaseInvoiceObjectState = new RelationType(AppsDomain.Instance, new Guid("1f5b8db1-58bd-4006-8878-f1609055149c"), new Guid("f63d8052-8f2f-47b5-a5f8-585b0b2587ae"), new Guid("444ada74-4d76-4c78-a7c8-dc2c448dd7eb"));
			PurchaseInvoiceStatusPurchaseInvoiceObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoiceStatusPurchaseInvoiceObjectState.IsIndexed = true;

			PurchaseInvoiceStatusPurchaseInvoiceObjectState.AssociationType.ObjectType = this;

			PurchaseInvoiceStatusPurchaseInvoiceObjectState.RoleType.ObjectType = PurchaseInvoiceObjectStateClass.Instance;;
			PurchaseInvoiceStatusPurchaseInvoiceObjectState.RoleType.AssignedSingularName = "PurchaseInvoiceObjectState";
			PurchaseInvoiceStatusPurchaseInvoiceObjectState.RoleType.AssignedPluralName = "PurchaseInvoiceObjectStates";
			this.Roles.PurchaseInvoiceObjectState = PurchaseInvoiceStatusPurchaseInvoiceObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseInvoiceStatusClass.Instance.ConcreteRoles.StartDateTime = PurchaseInvoiceStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			PurchaseInvoiceStatusClass.Instance.ConcreteRoles.PurchaseInvoiceObjectState = PurchaseInvoiceStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseInvoiceObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType PurchaseInvoiceObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType PurchaseInvoiceObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RegionClass : Class
	{
		public static RegionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RegionClass() : base(AppsDomain.Instance, new Guid("62693ee8-1fd3-4b2b-85ce-8d88df3bba0c"))
        {
			this.SingularName = "Region";
			this.PluralName = "Regions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1bdcc110-08b4-45f6-8e66-7dc3d584bd92"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryCompositeInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("d60a6ef6-4bf3-4c31-a2cb-d7dbd0e32ad0"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var RegionName = new RelationType(AppsDomain.Instance, new Guid("2b0f6297-9056-4c51-a898-e5bf09e67941"), new Guid("9e062953-c2a0-44da-b6bf-5669b11fe4ab"), new Guid("e3e9d99b-7780-4528-91dd-d75298bf2437"));
			RegionName.AssignedMultiplicity = Multiplicity.OneToOne;
			RegionName.AssociationType.ObjectType = this;

			RegionName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			RegionName.RoleType.AssignedSingularName = "Name";
			RegionName.RoleType.AssignedPluralName = "Names";
			RegionName.RoleType.Size = 256;
			this.Roles.Name = RegionName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RegionClass.Instance.ConcreteRoles.Name = RegionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Association;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class SalesTerritoryClass : Class
	{
		public static SalesTerritoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesTerritoryClass() : base(AppsDomain.Instance, new Guid("62ea5285-b9d8-4a41-9c14-79c712fd3bf4"))
        {
			this.SingularName = "SalesTerritory";
			this.PluralName = "SalesTerritories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("73cb9162-d218-453f-8650-74fcae6f99ce"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("fea89231-5a0c-4c36-940c-3171d35ec081"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryCompositeInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesTerritoryName = new RelationType(AppsDomain.Instance, new Guid("d904af24-887c-40b0-a5d0-7dce40ec4db3"), new Guid("0e172e31-8896-42c9-b1f2-2ff8bc1065c1"), new Guid("bcf4d240-258b-43f3-ac94-4314685019ea"));
			SalesTerritoryName.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesTerritoryName.AssociationType.ObjectType = this;

			SalesTerritoryName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			SalesTerritoryName.RoleType.AssignedSingularName = "Name";
			SalesTerritoryName.RoleType.AssignedPluralName = "Names";
			SalesTerritoryName.RoleType.Size = 256;
			this.Roles.Name = SalesTerritoryName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesTerritoryClass.Instance.ConcreteRoles.Name = SalesTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Association;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class TimeEntryClass : Class
	{
		public static TimeEntryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TimeEntryClass() : base(AppsDomain.Instance, new Guid("6360b45d-3556-41c6-b183-f42a15b9424f"))
        {
			this.SingularName = "TimeEntry";
			this.PluralName = "TimeEntries";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("635d81ad-08a8-40a0-b3e6-f037c45e1d02"))
			{
				Subtype = Instance,
				Supertype = ServiceEntryInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var TimeEntryCost = new RelationType(AppsDomain.Instance, new Guid("1b07c419-42af-480b-87ba-1c001995dc51"), new Guid("2c605991-8d65-4b8f-9daf-e085af5b12c0"), new Guid("90872970-372a-4f8d-9c53-c753aca9f99f"));
			TimeEntryCost.AssignedMultiplicity = Multiplicity.OneToOne;
			TimeEntryCost.AssociationType.ObjectType = this;

			TimeEntryCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			TimeEntryCost.RoleType.AssignedSingularName = "Cost";
			TimeEntryCost.RoleType.AssignedPluralName = "Costs";
			TimeEntryCost.RoleType.Scale = 2;
			TimeEntryCost.RoleType.Precision = 19;
			this.Roles.Cost = TimeEntryCost.RoleType;

			var TimeEntryGrossMargin = new RelationType(AppsDomain.Instance, new Guid("1bb9affa-1390-4f54-92b5-64997e55525e"), new Guid("0f0341bb-d719-4989-a39b-02b1c1ce98b9"), new Guid("ff8087ac-403d-46e4-b799-316bbdb6616e"));
			TimeEntryGrossMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			TimeEntryGrossMargin.IsDerived = true;
			TimeEntryGrossMargin.AssociationType.ObjectType = this;

			TimeEntryGrossMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			TimeEntryGrossMargin.RoleType.AssignedSingularName = "GrossMargin";
			TimeEntryGrossMargin.RoleType.AssignedPluralName = "GrossMargins";
			TimeEntryGrossMargin.RoleType.Scale = 2;
			TimeEntryGrossMargin.RoleType.Precision = 19;
			this.Roles.GrossMargin = TimeEntryGrossMargin.RoleType;

			var TimeEntryQuoteTerm = new RelationType(AppsDomain.Instance, new Guid("258a33cc-06ea-45a0-9b15-1b6d58385910"), new Guid("4909a04f-fd14-46ce-9c4c-bc7a2cc21914"), new Guid("cff49ef3-5b51-4501-a5c8-59b4d5714f4e"));
			TimeEntryQuoteTerm.AssignedMultiplicity = Multiplicity.ManyToOne;
			TimeEntryQuoteTerm.IsIndexed = true;

			TimeEntryQuoteTerm.AssociationType.ObjectType = this;

			TimeEntryQuoteTerm.RoleType.ObjectType = QuoteTermClass.Instance;;
			TimeEntryQuoteTerm.RoleType.AssignedSingularName = "QuoteTerm";
			TimeEntryQuoteTerm.RoleType.AssignedPluralName = "QuoteTerms";
			this.Roles.QuoteTerm = TimeEntryQuoteTerm.RoleType;

			var TimeEntryBillingRate = new RelationType(AppsDomain.Instance, new Guid("2c33de6e-b4fd-47e4-b254-2991f33f01f1"), new Guid("c8b7e4be-fbc5-414c-8e30-3947925c24b8"), new Guid("1cca252a-d6a1-4945-991a-dd85090bb41d"));
			TimeEntryBillingRate.AssignedMultiplicity = Multiplicity.OneToOne;
			TimeEntryBillingRate.AssociationType.ObjectType = this;

			TimeEntryBillingRate.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			TimeEntryBillingRate.RoleType.AssignedSingularName = "BillingRate";
			TimeEntryBillingRate.RoleType.AssignedPluralName = "BillingRates";
			TimeEntryBillingRate.RoleType.Scale = 2;
			TimeEntryBillingRate.RoleType.Precision = 19;
			this.Roles.BillingRate = TimeEntryBillingRate.RoleType;

			var TimeEntryUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("409ff1fb-1531-4829-9d6b-7b3e7113594a"), new Guid("54a57392-59ed-4583-99f1-1f2a97ca65c5"), new Guid("724e2645-553a-4810-a62d-4c7595877042"));
			TimeEntryUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			TimeEntryUnitOfMeasure.IsIndexed = true;

			TimeEntryUnitOfMeasure.AssociationType.ObjectType = this;

			TimeEntryUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			TimeEntryUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			TimeEntryUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = TimeEntryUnitOfMeasure.RoleType;

			var TimeEntryAmountOfTime = new RelationType(AppsDomain.Instance, new Guid("c163457c-6a36-45ab-8c62-e555128afbfc"), new Guid("01112e75-888e-4dac-93e0-185afe6988af"), new Guid("56c9d8a5-45d0-4bb4-8809-43740938b824"));
			TimeEntryAmountOfTime.AssignedMultiplicity = Multiplicity.OneToOne;
			TimeEntryAmountOfTime.AssociationType.ObjectType = this;

			TimeEntryAmountOfTime.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			TimeEntryAmountOfTime.RoleType.AssignedSingularName = "AmountOfTime";
			TimeEntryAmountOfTime.RoleType.AssignedPluralName = "AmountsOfTime";
			TimeEntryAmountOfTime.RoleType.Scale = 2;
			TimeEntryAmountOfTime.RoleType.Precision = 19;
			this.Roles.AmountOfTime = TimeEntryAmountOfTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TimeEntryClass.Instance.ConcreteRoles.Cost = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Cost]; 

			TimeEntryClass.Instance.ConcreteRoles.GrossMargin = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GrossMargin]; 

			TimeEntryClass.Instance.ConcreteRoles.QuoteTerm = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteTerm]; 

			TimeEntryClass.Instance.ConcreteRoles.BillingRate = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingRate]; 

			TimeEntryClass.Instance.ConcreteRoles.UnitOfMeasure = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 

			TimeEntryClass.Instance.ConcreteRoles.AmountOfTime = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AmountOfTime]; 


		}

		internal class RolesType
		{
			internal RoleType Cost;
			internal RoleType GrossMargin;
			internal RoleType QuoteTerm;
			internal RoleType BillingRate;
			internal RoleType UnitOfMeasure;
			internal RoleType AmountOfTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Cost;
			internal ConcreteRoleType GrossMargin;
			internal ConcreteRoleType QuoteTerm;
			internal ConcreteRoleType BillingRate;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType AmountOfTime;
			internal ConcreteRoleType ThroughDateTime;
			internal ConcreteRoleType EngagementItem;
			internal ConcreteRoleType IsBillable;
			internal ConcreteRoleType FromDateTime;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DepreciationMethodClass : Class
	{
		public static DepreciationMethodClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DepreciationMethodClass() : base(AppsDomain.Instance, new Guid("63ca0535-95e5-4b2d-847d-d619a5365605"))
        {
			this.SingularName = "DepreciationMethod";
			this.PluralName = "DepreciationMethods";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("37a56acc-5d5d-4e41-b084-3725aa86092d"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DepreciationMethodFormula = new RelationType(AppsDomain.Instance, new Guid("a87fd42b-7be3-4cd4-9393-64b1cf03c050"), new Guid("9957bc91-53a9-431c-8eea-2e0dc04adde7"), new Guid("67ecfd2b-4fc4-4474-81f8-cb8b720b30c4"));
			DepreciationMethodFormula.AssignedMultiplicity = Multiplicity.OneToOne;
			DepreciationMethodFormula.AssociationType.ObjectType = this;

			DepreciationMethodFormula.RoleType.ObjectType = AllorsStringUnit.Instance;;
			DepreciationMethodFormula.RoleType.AssignedSingularName = "Formula";
			DepreciationMethodFormula.RoleType.AssignedPluralName = "Formulas";
			DepreciationMethodFormula.RoleType.Size = 256;
			this.Roles.Formula = DepreciationMethodFormula.RoleType;

			var DepreciationMethodDescription = new RelationType(AppsDomain.Instance, new Guid("b0a81d90-f6bc-4169-b76c-497a3a1f04bf"), new Guid("6af9db7e-6d96-4b91-9a7f-0f1005e49f65"), new Guid("2d1ef7fc-bd11-4380-a917-a29fa14fa89d"));
			DepreciationMethodDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			DepreciationMethodDescription.AssociationType.ObjectType = this;

			DepreciationMethodDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			DepreciationMethodDescription.RoleType.AssignedSingularName = "Description";
			DepreciationMethodDescription.RoleType.AssignedPluralName = "Descriptions";
			DepreciationMethodDescription.RoleType.Size = 256;
			this.Roles.Description = DepreciationMethodDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DepreciationMethodClass.Instance.ConcreteRoles.Formula = DepreciationMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Formula]; 

			DepreciationMethodClass.Instance.ConcreteRoles.Description = DepreciationMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType Formula;
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Formula;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AssetAssignmentStatusClass : Class
	{
		public static AssetAssignmentStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AssetAssignmentStatusClass() : base(AppsDomain.Instance, new Guid("644660d4-d5d0-4bd9-8cba-17696af0b9ed"))
        {
			this.SingularName = "AssetAssignmentStatus";
			this.PluralName = "AssetAssignmentStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("785d7bfe-9920-45be-8556-319b3ee901c4"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class StoreRevenueHistoryClass : Class
	{
		public static StoreRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal StoreRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("648d1b19-d3f8-4ace-86bc-b113827f5e8e"))
        {
			this.SingularName = "StoreRevenueHistory";
			this.PluralName = "StoreRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1589840b-6f49-4f19-af9e-d714f7dc5f85"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var StoreRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("4c44c10c-7577-424a-9361-43d9b264e297"), new Guid("dbe1fab7-525b-4824-bb9d-959b9e2c8afd"), new Guid("09e6e626-d5e4-4ed1-acce-271cd26ccdcf"));
			StoreRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreRevenueHistoryInternalOrganisation.IsIndexed = true;

			StoreRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			StoreRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			StoreRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			StoreRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = StoreRevenueHistoryInternalOrganisation.RoleType;

			var StoreRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("5165e08b-97cc-457b-ba65-6592c31360e5"), new Guid("67272022-b5fb-4d33-aada-2df814418b64"), new Guid("f15e82a9-563c-4fda-bbb3-ba9c3d542d2c"));
			StoreRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreRevenueHistoryCurrency.IsIndexed = true;

			StoreRevenueHistoryCurrency.AssociationType.ObjectType = this;

			StoreRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			StoreRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			StoreRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = StoreRevenueHistoryCurrency.RoleType;

			var StoreRevenueHistoryStore = new RelationType(AppsDomain.Instance, new Guid("80a3da61-9df3-4100-b81b-323f293194a7"), new Guid("189a3f1e-1878-4e85-921d-9ae9d7ce520e"), new Guid("0f864ab4-599f-451f-9088-d7380981a46f"));
			StoreRevenueHistoryStore.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreRevenueHistoryStore.IsIndexed = true;

			StoreRevenueHistoryStore.AssociationType.ObjectType = this;

			StoreRevenueHistoryStore.RoleType.ObjectType = StoreClass.Instance;;
			StoreRevenueHistoryStore.RoleType.AssignedSingularName = "Store";
			StoreRevenueHistoryStore.RoleType.AssignedPluralName = "Stores";
			this.Roles.Store = StoreRevenueHistoryStore.RoleType;

			var StoreRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("a23658cb-80aa-4880-ae11-b0584856f1f8"), new Guid("db5e7707-20cf-49ef-9aaa-473e192e86eb"), new Guid("0a79fe7c-68ac-4484-9054-026fb4dc556c"));
			StoreRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreRevenueHistoryRevenue.AssociationType.ObjectType = this;

			StoreRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			StoreRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			StoreRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			StoreRevenueHistoryRevenue.RoleType.Scale = 2;
			StoreRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = StoreRevenueHistoryRevenue.RoleType;


		}

		internal override void SetRelationTypes()
		{
			StoreRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = StoreRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			StoreRevenueHistoryClass.Instance.ConcreteRoles.Currency = StoreRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			StoreRevenueHistoryClass.Instance.ConcreteRoles.Store = StoreRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 

			StoreRevenueHistoryClass.Instance.ConcreteRoles.Revenue = StoreRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 


		}

		internal class RolesType
		{
			internal RoleType InternalOrganisation;
			internal RoleType Currency;
			internal RoleType Store;
			internal RoleType Revenue;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PersonTrainingClass : Class
	{
		public static PersonTrainingClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PersonTrainingClass() : base(AppsDomain.Instance, new Guid("6674e32d-c139-4c99-97c5-92354d3ccc4c"))
        {
			this.SingularName = "PersonTraining";
			this.PluralName = "PersonTrainings";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4ed08a94-bdfe-48fe-9031-d73b4de5d0d3"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("5814445e-f022-4321-8dcd-5ed4c88579ff"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PersonTrainingTraining = new RelationType(AppsDomain.Instance, new Guid("023864ad-41e1-41cb-8ded-ad2bfa98afe3"), new Guid("04f1d7c4-1012-4b0e-b38e-02d6abc328be"), new Guid("91bba22d-82b7-4425-ba55-2862f803088d"));
			PersonTrainingTraining.AssignedMultiplicity = Multiplicity.ManyToOne;
			PersonTrainingTraining.IsIndexed = true;

			PersonTrainingTraining.AssociationType.ObjectType = this;

			PersonTrainingTraining.RoleType.ObjectType = TrainingClass.Instance;;
			PersonTrainingTraining.RoleType.AssignedSingularName = "Training";
			PersonTrainingTraining.RoleType.AssignedPluralName = "Trainings";
			this.Roles.Training = PersonTrainingTraining.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PersonTrainingClass.Instance.ConcreteRoles.Training = PersonTrainingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Training]; 


		}

		internal class RolesType
		{
			internal RoleType Training;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Training;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DeductionTypeClass : Class
	{
		public static DeductionTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DeductionTypeClass() : base(AppsDomain.Instance, new Guid("66b30b62-5e6c-4747-a72e-bc4ac2cb1125"))
        {
			this.SingularName = "DeductionType";
			this.PluralName = "DeductionTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("724dc827-ada8-4971-aa14-94667a03c3d0"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class DeliverableOrderItemClass : Class
	{
		public static DeliverableOrderItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DeliverableOrderItemClass() : base(AppsDomain.Instance, new Guid("66bd584c-37c4-4969-874b-7a459195fd25"))
        {
			this.SingularName = "DeliverableOrderItem";
			this.PluralName = "DeliverableOrderItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("bad734d1-49cb-4680-ad9f-59895582c957"))
			{
				Subtype = Instance,
				Supertype = EngagementItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DeliverableOrderItemAgreedUponPrice = new RelationType(AppsDomain.Instance, new Guid("f9e13dab-0081-4d25-8021-f5ed5bef5f0e"), new Guid("86376834-b792-425e-a21d-30065dca6dd4"), new Guid("fb6ba6e4-2f9f-4230-b536-df8e305797f9"));
			DeliverableOrderItemAgreedUponPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			DeliverableOrderItemAgreedUponPrice.AssociationType.ObjectType = this;

			DeliverableOrderItemAgreedUponPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			DeliverableOrderItemAgreedUponPrice.RoleType.AssignedSingularName = "AgreedUponPrice";
			DeliverableOrderItemAgreedUponPrice.RoleType.AssignedPluralName = "AgreedUponPrices";
			DeliverableOrderItemAgreedUponPrice.RoleType.Scale = 2;
			DeliverableOrderItemAgreedUponPrice.RoleType.Precision = 19;
			this.Roles.AgreedUponPrice = DeliverableOrderItemAgreedUponPrice.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DeliverableOrderItemClass.Instance.ConcreteRoles.AgreedUponPrice = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreedUponPrice]; 


		}

		internal class RolesType
		{
			internal RoleType AgreedUponPrice;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AgreedUponPrice;
			internal ConcreteRoleType QuoteItem;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ExpectedStartDate;
			internal ConcreteRoleType ExpectedEndDate;
			internal ConcreteRoleType EngagementWorkFulfillment;
			internal ConcreteRoleType EngagementRate;
			internal ConcreteRoleType CurrentEngagementRate;
			internal ConcreteRoleType OrderedWith;
			internal ConcreteRoleType CurrentAssignedProfessional;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PackagingSlipClass : Class
	{
		public static PackagingSlipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PackagingSlipClass() : base(AppsDomain.Instance, new Guid("66e7dcf3-90bc-4ac6-988f-54015f5bef11"))
        {
			this.SingularName = "PackagingSlip";
			this.PluralName = "PackagingSlips";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2ab93dc4-2bcf-47d9-93d7-aa8cea0f13c3"))
			{
				Subtype = Instance,
				Supertype = DocumentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DocumentLocation;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;

		}
	}public partial class CustomerReturnObjectStateClass : Class
	{
		public static CustomerReturnObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CustomerReturnObjectStateClass() : base(AppsDomain.Instance, new Guid("671951f1-78fd-4b05-ac15-eafb2a35a6f8"))
        {
			this.SingularName = "CustomerReturnObjectState";
			this.PluralName = "CustomerReturnObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("83520701-3237-4ac2-acf3-1e1296d2ddc0"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class OrganisationGlAccountBalanceClass : Class
	{
		public static OrganisationGlAccountBalanceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrganisationGlAccountBalanceClass() : base(AppsDomain.Instance, new Guid("67a8352d-7fe0-4398-93c3-50ec8d3e8038"))
        {
			this.SingularName = "OrganisationGlAccountBalance";
			this.PluralName = "OrganisationGlAccountBalances";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5353a180-6eb3-4ff4-8471-f104c944f451"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrganisationGlAccountBalanceOrganisationGlAccount = new RelationType(AppsDomain.Instance, new Guid("347426a0-8678-4eaa-9733-4bf719bad0c2"), new Guid("754539d8-c07f-420b-a8c1-6201b6015147"), new Guid("c8fb5d7a-b351-49d0-83ad-c0a8b797af36"));
			OrganisationGlAccountBalanceOrganisationGlAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationGlAccountBalanceOrganisationGlAccount.IsIndexed = true;

			OrganisationGlAccountBalanceOrganisationGlAccount.AssociationType.ObjectType = this;

			OrganisationGlAccountBalanceOrganisationGlAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			OrganisationGlAccountBalanceOrganisationGlAccount.RoleType.AssignedSingularName = "OrganisationGlAccount";
			OrganisationGlAccountBalanceOrganisationGlAccount.RoleType.AssignedPluralName = "OrganisationGlAccounts";
			this.Roles.OrganisationGlAccount = OrganisationGlAccountBalanceOrganisationGlAccount.RoleType;

			var OrganisationGlAccountBalanceAmount = new RelationType(AppsDomain.Instance, new Guid("94c5bafb-29ef-4268-846e-5fda5c62af5c"), new Guid("a3f8a8a3-f837-4ae9-a718-8ab30149086e"), new Guid("c5f7c8d8-a654-4f20-a0b3-a2013e964158"));
			OrganisationGlAccountBalanceAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			OrganisationGlAccountBalanceAmount.AssociationType.ObjectType = this;

			OrganisationGlAccountBalanceAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrganisationGlAccountBalanceAmount.RoleType.AssignedSingularName = "Amount";
			OrganisationGlAccountBalanceAmount.RoleType.AssignedPluralName = "Amounts";
			OrganisationGlAccountBalanceAmount.RoleType.Scale = 2;
			OrganisationGlAccountBalanceAmount.RoleType.Precision = 19;
			this.Roles.Amount = OrganisationGlAccountBalanceAmount.RoleType;

			var OrganisationGlAccountBalanceAccountingPeriod = new RelationType(AppsDomain.Instance, new Guid("f7325700-87e9-4753-8b0b-de459a6926e7"), new Guid("58379bfa-a272-4877-98ce-5e46063bc1c2"), new Guid("f7278113-6da8-49af-b205-615cf8df50fd"));
			OrganisationGlAccountBalanceAccountingPeriod.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationGlAccountBalanceAccountingPeriod.IsIndexed = true;

			OrganisationGlAccountBalanceAccountingPeriod.AssociationType.ObjectType = this;

			OrganisationGlAccountBalanceAccountingPeriod.RoleType.ObjectType = AccountingPeriodClass.Instance;;
			OrganisationGlAccountBalanceAccountingPeriod.RoleType.AssignedSingularName = "AccountingPeriod";
			OrganisationGlAccountBalanceAccountingPeriod.RoleType.AssignedPluralName = "AccountingPeriods";
			this.Roles.AccountingPeriod = OrganisationGlAccountBalanceAccountingPeriod.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrganisationGlAccountBalanceClass.Instance.ConcreteRoles.OrganisationGlAccount = OrganisationGlAccountBalanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrganisationGlAccount]; 

			OrganisationGlAccountBalanceClass.Instance.ConcreteRoles.Amount = OrganisationGlAccountBalanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 

			OrganisationGlAccountBalanceClass.Instance.ConcreteRoles.AccountingPeriod = OrganisationGlAccountBalanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingPeriod]; 


		}

		internal class RolesType
		{
			internal RoleType OrganisationGlAccount;
			internal RoleType Amount;
			internal RoleType AccountingPeriod;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType OrganisationGlAccount;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType AccountingPeriod;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class InternalOrganisationRevenueHistoryClass : Class
	{
		public static InternalOrganisationRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InternalOrganisationRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("684ce40f-6950-4163-b110-e83e65c31f0a"))
        {
			this.SingularName = "InternalOrganisationRevenueHistory";
			this.PluralName = "InternalOrganisationRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d8e5c42c-272c-4905-a3a0-3b8c2a200d28"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var InternalOrganisationRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("22b47e4a-5657-4bf6-acff-d923ef5ef8e2"), new Guid("4f48cd93-af57-4e7a-b54b-3aef374444e7"), new Guid("2aea8ef1-d353-43e4-8f1a-09b2052603e2"));
			InternalOrganisationRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationRevenueHistoryInternalOrganisation.IsIndexed = true;

			InternalOrganisationRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			InternalOrganisationRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			InternalOrganisationRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			InternalOrganisationRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = InternalOrganisationRevenueHistoryInternalOrganisation.RoleType;

			var InternalOrganisationRevenueHistoryAllorsDecimal = new RelationType(AppsDomain.Instance, new Guid("4fe311fd-b793-43ce-b3de-c6606ea53b34"), new Guid("08a439a9-cb0d-4910-818f-11b9819bff86"), new Guid("383ed00b-7c75-40cb-b0d7-2bcc6b9f5e62"));
			InternalOrganisationRevenueHistoryAllorsDecimal.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationRevenueHistoryAllorsDecimal.AssociationType.ObjectType = this;

			InternalOrganisationRevenueHistoryAllorsDecimal.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InternalOrganisationRevenueHistoryAllorsDecimal.RoleType.AssignedSingularName = "AllorsDecimal";
			InternalOrganisationRevenueHistoryAllorsDecimal.RoleType.AssignedPluralName = "AllorsDecimals";
			InternalOrganisationRevenueHistoryAllorsDecimal.RoleType.Scale = 2;
			InternalOrganisationRevenueHistoryAllorsDecimal.RoleType.Precision = 19;
			this.Roles.AllorsDecimal = InternalOrganisationRevenueHistoryAllorsDecimal.RoleType;

			var InternalOrganisationRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("a8ab7445-38b2-4e1b-bee2-15d1a91fc239"), new Guid("cc5041b1-da31-472d-ab66-105561bcb2de"), new Guid("1d88f2e2-6a81-42f8-8e60-242918c82e21"));
			InternalOrganisationRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationRevenueHistoryCurrency.IsIndexed = true;

			InternalOrganisationRevenueHistoryCurrency.AssociationType.ObjectType = this;

			InternalOrganisationRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			InternalOrganisationRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			InternalOrganisationRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = InternalOrganisationRevenueHistoryCurrency.RoleType;

			var InternalOrganisationRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("b32232d6-6a5b-438b-bfb5-a7495335f9c9"), new Guid("14c55588-7e1f-4ce2-a080-f14592052442"), new Guid("57afc02e-c13e-41fa-a1cd-0dfe2358649b"));
			InternalOrganisationRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationRevenueHistoryRevenue.AssociationType.ObjectType = this;

			InternalOrganisationRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InternalOrganisationRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			InternalOrganisationRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			InternalOrganisationRevenueHistoryRevenue.RoleType.Scale = 2;
			InternalOrganisationRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = InternalOrganisationRevenueHistoryRevenue.RoleType;


		}

		internal override void SetRelationTypes()
		{
			InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoles.AllorsDecimal = InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AllorsDecimal]; 

			InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoles.Currency = InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoles.Revenue = InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 


		}

		internal class RolesType
		{
			internal RoleType InternalOrganisation;
			internal RoleType AllorsDecimal;
			internal RoleType Currency;
			internal RoleType Revenue;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType AllorsDecimal;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ManufacturingBomClass : Class
	{
		public static ManufacturingBomClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ManufacturingBomClass() : base(AppsDomain.Instance, new Guid("68a0c645-4671-4dda-87a5-53395934a9fc"))
        {
			this.SingularName = "ManufacturingBom";
			this.PluralName = "ManufacturingBoms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c1e78388-bb08-4e3a-b77b-3af51833773b"))
			{
				Subtype = Instance,
				Supertype = PartBillOfMaterialInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Part;
			internal ConcreteRoleType Instruction;
			internal ConcreteRoleType QuantityUsed;
			internal ConcreteRoleType ComponentPart;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class DeliverableClass : Class
	{
		public static DeliverableClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DeliverableClass() : base(AppsDomain.Instance, new Guid("68a6803d-0e65-4141-ac51-25f4c2e49914"))
        {
			this.SingularName = "Deliverable";
			this.PluralName = "Deliverables";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ef45a2b5-88a6-4f89-9c86-6788a2d3b71f"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DeliverableName = new RelationType(AppsDomain.Instance, new Guid("d7322009-e68f-4635-bc0e-1c0b5a46de62"), new Guid("953cd640-51dd-4543-a751-242c7e39b596"), new Guid("38bd223e-54ee-455d-8da5-3106029e1fbe"));
			DeliverableName.AssignedMultiplicity = Multiplicity.OneToOne;
			DeliverableName.AssociationType.ObjectType = this;

			DeliverableName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			DeliverableName.RoleType.AssignedSingularName = "Name";
			DeliverableName.RoleType.AssignedPluralName = "Names";
			DeliverableName.RoleType.Size = 256;
			this.Roles.Name = DeliverableName.RoleType;

			var DeliverableDeliverableType = new RelationType(AppsDomain.Instance, new Guid("dfd5fb95-50ee-48a5-942b-75752f78a615"), new Guid("fea5e2c3-b8fa-488d-aba6-641176652430"), new Guid("50499eba-a2b0-4ad2-8dc6-72eb2d1997a7"));
			DeliverableDeliverableType.AssignedMultiplicity = Multiplicity.ManyToOne;
			DeliverableDeliverableType.IsIndexed = true;

			DeliverableDeliverableType.AssociationType.ObjectType = this;

			DeliverableDeliverableType.RoleType.ObjectType = DeliverableTypeClass.Instance;;
			DeliverableDeliverableType.RoleType.AssignedSingularName = "DeliverableType";
			DeliverableDeliverableType.RoleType.AssignedPluralName = "DeliverableTypes";
			this.Roles.DeliverableType = DeliverableDeliverableType.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DeliverableClass.Instance.ConcreteRoles.Name = DeliverableClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			DeliverableClass.Instance.ConcreteRoles.DeliverableType = DeliverableClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableType]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType DeliverableType;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType DeliverableType;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EmploymentApplicationClass : Class
	{
		public static EmploymentApplicationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EmploymentApplicationClass() : base(AppsDomain.Instance, new Guid("6940c300-47e6-44f2-b93b-d70bed9de602"))
        {
			this.SingularName = "EmploymentApplication";
			this.PluralName = "EmploymentApplications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("71f4f6dc-1497-4a86-905a-6d22b293d5fe"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var EmploymentApplicationApplicationDate = new RelationType(AppsDomain.Instance, new Guid("528de310-3268-4b17-ab42-49dea27d5aee"), new Guid("ca9bf054-52cf-40f1-995f-0e504b5bee9b"), new Guid("9b07c065-678f-4d21-878f-4ac2029dddc5"));
			EmploymentApplicationApplicationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			EmploymentApplicationApplicationDate.AssociationType.ObjectType = this;

			EmploymentApplicationApplicationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			EmploymentApplicationApplicationDate.RoleType.AssignedSingularName = "ApplicationDate";
			EmploymentApplicationApplicationDate.RoleType.AssignedPluralName = "ApplicationDates";
			this.Roles.ApplicationDate = EmploymentApplicationApplicationDate.RoleType;

			var EmploymentApplicationPosition = new RelationType(AppsDomain.Instance, new Guid("75cc1a7c-6bf7-4798-9ddc-fd1b283aed19"), new Guid("edffb19c-1b3d-45fc-bc52-d44bd51fc6e2"), new Guid("502bf1bc-596d-44e7-b9f3-148433028740"));
			EmploymentApplicationPosition.AssignedMultiplicity = Multiplicity.ManyToOne;
			EmploymentApplicationPosition.IsIndexed = true;

			EmploymentApplicationPosition.AssociationType.ObjectType = this;

			EmploymentApplicationPosition.RoleType.ObjectType = PositionClass.Instance;;
			EmploymentApplicationPosition.RoleType.AssignedSingularName = "Position";
			EmploymentApplicationPosition.RoleType.AssignedPluralName = "Positions";
			this.Roles.Position = EmploymentApplicationPosition.RoleType;

			var EmploymentApplicationEmploymentApplicationStatus = new RelationType(AppsDomain.Instance, new Guid("7d3147e2-9709-42bc-a6cd-5b922bfc143d"), new Guid("e8ec31ed-ebd4-4a2c-8948-7170adf61572"), new Guid("af280063-af23-4afb-9dd6-8f44141c275e"));
			EmploymentApplicationEmploymentApplicationStatus.AssignedMultiplicity = Multiplicity.ManyToOne;
			EmploymentApplicationEmploymentApplicationStatus.IsIndexed = true;

			EmploymentApplicationEmploymentApplicationStatus.AssociationType.ObjectType = this;

			EmploymentApplicationEmploymentApplicationStatus.RoleType.ObjectType = EmploymentApplicationStatusClass.Instance;;
			EmploymentApplicationEmploymentApplicationStatus.RoleType.AssignedSingularName = "EmploymentApplicationStatus";
			EmploymentApplicationEmploymentApplicationStatus.RoleType.AssignedPluralName = "EmploymentApplicationStatuses";
			this.Roles.EmploymentApplicationStatus = EmploymentApplicationEmploymentApplicationStatus.RoleType;

			var EmploymentApplicationPerson = new RelationType(AppsDomain.Instance, new Guid("a4c14261-14a2-404c-814f-6475368d685a"), new Guid("f9cf5e5a-d262-4898-91f3-a69b3612f0a8"), new Guid("6d7984e5-d1c7-4a53-99a1-49e125db39b9"));
			EmploymentApplicationPerson.AssignedMultiplicity = Multiplicity.ManyToOne;
			EmploymentApplicationPerson.IsIndexed = true;

			EmploymentApplicationPerson.AssociationType.ObjectType = this;

			EmploymentApplicationPerson.RoleType.ObjectType = PersonClass.Instance;;
			EmploymentApplicationPerson.RoleType.AssignedSingularName = "Person";
			EmploymentApplicationPerson.RoleType.AssignedPluralName = "Persons";
			this.Roles.Person = EmploymentApplicationPerson.RoleType;

			var EmploymentApplicationEmploymentApplicationSource = new RelationType(AppsDomain.Instance, new Guid("b0799b22-bff3-49d7-8f9a-3ea41c540778"), new Guid("90dc458e-243e-42d6-950d-3994f7617981"), new Guid("4222311d-cb11-4cec-a547-eb45cfe94732"));
			EmploymentApplicationEmploymentApplicationSource.AssignedMultiplicity = Multiplicity.ManyToOne;
			EmploymentApplicationEmploymentApplicationSource.IsIndexed = true;

			EmploymentApplicationEmploymentApplicationSource.AssociationType.ObjectType = this;

			EmploymentApplicationEmploymentApplicationSource.RoleType.ObjectType = EmploymentApplicationSourceClass.Instance;;
			EmploymentApplicationEmploymentApplicationSource.RoleType.AssignedSingularName = "EmploymentApplicationSource";
			EmploymentApplicationEmploymentApplicationSource.RoleType.AssignedPluralName = "EmploymentApplicationSources";
			this.Roles.EmploymentApplicationSource = EmploymentApplicationEmploymentApplicationSource.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EmploymentApplicationClass.Instance.ConcreteRoles.ApplicationDate = EmploymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ApplicationDate]; 

			EmploymentApplicationClass.Instance.ConcreteRoles.Position = EmploymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Position]; 

			EmploymentApplicationClass.Instance.ConcreteRoles.EmploymentApplicationStatus = EmploymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EmploymentApplicationStatus]; 

			EmploymentApplicationClass.Instance.ConcreteRoles.Person = EmploymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Person]; 

			EmploymentApplicationClass.Instance.ConcreteRoles.EmploymentApplicationSource = EmploymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EmploymentApplicationSource]; 


		}

		internal class RolesType
		{
			internal RoleType ApplicationDate;
			internal RoleType Position;
			internal RoleType EmploymentApplicationStatus;
			internal RoleType Person;
			internal RoleType EmploymentApplicationSource;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ApplicationDate;
			internal ConcreteRoleType Position;
			internal ConcreteRoleType EmploymentApplicationStatus;
			internal ConcreteRoleType Person;
			internal ConcreteRoleType EmploymentApplicationSource;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class VatRegimeClass : Class
	{
		public static VatRegimeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VatRegimeClass() : base(AppsDomain.Instance, new Guid("69db99bc-97f7-4e2e-903c-74afb55992af"))
        {
			this.SingularName = "VatRegime";
			this.PluralName = "VatRegimes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b4e10fae-1ce2-4c5e-a958-6df1b5c3f689"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var VatRegimeVatRate = new RelationType(AppsDomain.Instance, new Guid("2071cc28-c8bf-43dc-a5e5-ec5735756dfa"), new Guid("fca4a435-bd82-496b-ab1d-c2b6cb10494f"), new Guid("baf416cf-3222-4c93-8fb7-f4257b2b9ef9"));
			VatRegimeVatRate.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRegimeVatRate.IsIndexed = true;

			VatRegimeVatRate.AssociationType.ObjectType = this;

			VatRegimeVatRate.RoleType.ObjectType = VatRateClass.Instance;;
			VatRegimeVatRate.RoleType.AssignedSingularName = "VatRate";
			VatRegimeVatRate.RoleType.AssignedPluralName = "VatRates";
			this.Roles.VatRate = VatRegimeVatRate.RoleType;

			var VatRegimeGeneralLedgerAccount = new RelationType(AppsDomain.Instance, new Guid("a037f9f0-1aff-4ad0-8ee9-36ae4609d398"), new Guid("25db54a8-873d-4736-8408-f1d9e65c49e4"), new Guid("238996a2-ec4f-47f4-8336-8fee91383649"));
			VatRegimeGeneralLedgerAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRegimeGeneralLedgerAccount.IsIndexed = true;

			VatRegimeGeneralLedgerAccount.AssociationType.ObjectType = this;

			VatRegimeGeneralLedgerAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			VatRegimeGeneralLedgerAccount.RoleType.AssignedSingularName = "GeneralLedgerAccount";
			VatRegimeGeneralLedgerAccount.RoleType.AssignedPluralName = "GeneralLedgerAccounts";
			this.Roles.GeneralLedgerAccount = VatRegimeGeneralLedgerAccount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			VatRegimeClass.Instance.ConcreteRoles.VatRate = VatRegimeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 

			VatRegimeClass.Instance.ConcreteRoles.GeneralLedgerAccount = VatRegimeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccount]; 


		}

		internal class RolesType
		{
			internal RoleType VatRate;
			internal RoleType GeneralLedgerAccount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType GeneralLedgerAccount;
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PositionFulfillmentClass : Class
	{
		public static PositionFulfillmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PositionFulfillmentClass() : base(AppsDomain.Instance, new Guid("6a03924c-914b-4660-b7e8-5174caa0dff9"))
        {
			this.SingularName = "PositionFulfillment";
			this.PluralName = "PositionFulfillments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("e746059d-ebfb-4589-9d33-36e0e549540e"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ed7a54ee-6160-41ef-a3c3-abc8e37643d2"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("faad4a74-e9e7-45d0-aeb5-b129d59d5cd5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PositionFulfillmentPosition = new RelationType(AppsDomain.Instance, new Guid("30631f6e-3e70-4394-9540-0572230cd461"), new Guid("ebcfbd12-ea78-4dd1-b102-05110c7d4a95"), new Guid("3fc029a2-3465-4518-830a-348bd2235a71"));
			PositionFulfillmentPosition.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionFulfillmentPosition.IsIndexed = true;

			PositionFulfillmentPosition.AssociationType.ObjectType = this;

			PositionFulfillmentPosition.RoleType.ObjectType = PositionClass.Instance;;
			PositionFulfillmentPosition.RoleType.AssignedSingularName = "Position";
			PositionFulfillmentPosition.RoleType.AssignedPluralName = "Positions";
			this.Roles.Position = PositionFulfillmentPosition.RoleType;

			var PositionFulfillmentPerson = new RelationType(AppsDomain.Instance, new Guid("4de369bb-6fa3-4fd4-9056-0e70a72c9b9f"), new Guid("23fa9951-ceb1-44b2-af36-f3e4955018d1"), new Guid("76c3f430-bf53-4e6f-89af-ea91afbd6795"));
			PositionFulfillmentPerson.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionFulfillmentPerson.IsIndexed = true;

			PositionFulfillmentPerson.AssociationType.ObjectType = this;

			PositionFulfillmentPerson.RoleType.ObjectType = PersonClass.Instance;;
			PositionFulfillmentPerson.RoleType.AssignedSingularName = "Person";
			PositionFulfillmentPerson.RoleType.AssignedPluralName = "Persons";
			this.Roles.Person = PositionFulfillmentPerson.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PositionFulfillmentClass.Instance.ConcreteRoles.Position = PositionFulfillmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Position]; 

			PositionFulfillmentClass.Instance.ConcreteRoles.Person = PositionFulfillmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Person]; 


		}

		internal class RolesType
		{
			internal RoleType Position;
			internal RoleType Person;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Position;
			internal ConcreteRoleType Person;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EmploymentClass : Class
	{
		public static EmploymentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EmploymentClass() : base(AppsDomain.Instance, new Guid("6a7e45b2-36b2-4d2e-a29c-0cc13851766f"))
        {
			this.SingularName = "Employment";
			this.PluralName = "Employments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a4377eca-6738-41a6-9519-295c0a7e15fe"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("cbea6a5c-8c7f-4ac0-8f6a-ee227ca52bf5"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var EmploymentEmployer = new RelationType(AppsDomain.Instance, new Guid("776e5cb7-6926-4455-89ed-c1f916018a25"), new Guid("9d997658-68ca-41a3-9551-9cc793811a4e"), new Guid("28191884-d18f-400b-96df-7da1a328d88e"));
			EmploymentEmployer.AssignedMultiplicity = Multiplicity.ManyToOne;
			EmploymentEmployer.IsIndexed = true;

			EmploymentEmployer.AssociationType.ObjectType = this;

			EmploymentEmployer.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			EmploymentEmployer.RoleType.AssignedSingularName = "Employer";
			EmploymentEmployer.RoleType.AssignedPluralName = "Employers";
			this.Roles.Employer = EmploymentEmployer.RoleType;

			var EmploymentEmployee = new RelationType(AppsDomain.Instance, new Guid("a243feb0-e5f0-41b4-9b13-a09bb8413fb3"), new Guid("03bac42d-dcbc-40f3-a130-7b4f3b37f523"), new Guid("1fb50b4b-2a1b-4139-a376-48f1c72c4645"));
			EmploymentEmployee.AssignedMultiplicity = Multiplicity.ManyToOne;
			EmploymentEmployee.IsIndexed = true;

			EmploymentEmployee.AssociationType.ObjectType = this;

			EmploymentEmployee.RoleType.ObjectType = PersonClass.Instance;;
			EmploymentEmployee.RoleType.AssignedSingularName = "Employee";
			EmploymentEmployee.RoleType.AssignedPluralName = "Employees";
			this.Roles.Employee = EmploymentEmployee.RoleType;

			var EmploymentPayrollPreference = new RelationType(AppsDomain.Instance, new Guid("ba6d2658-9c07-4254-a664-21df0e2fcb6a"), new Guid("f512d8bd-5ea3-461c-9310-6ab93696763d"), new Guid("3c2fae70-49b5-407f-823c-db9b9052fb1e"));
			EmploymentPayrollPreference.AssignedMultiplicity = Multiplicity.OneToMany;
			EmploymentPayrollPreference.IsIndexed = true;

			EmploymentPayrollPreference.AssociationType.ObjectType = this;

			EmploymentPayrollPreference.RoleType.ObjectType = PayrollPreferenceClass.Instance;;
			EmploymentPayrollPreference.RoleType.AssignedSingularName = "PayrollPreference";
			EmploymentPayrollPreference.RoleType.AssignedPluralName = "PayrollPreferences";
			this.Roles.PayrollPreference = EmploymentPayrollPreference.RoleType;

			var EmploymentEmploymentTerminationReason = new RelationType(AppsDomain.Instance, new Guid("c8fd6c79-f909-414e-b9e3-5e911e2e2080"), new Guid("da451dab-03db-4bc5-8641-93ec74570f4f"), new Guid("0bef74ad-3eb2-494e-846e-6ca3bbfb057b"));
			EmploymentEmploymentTerminationReason.AssignedMultiplicity = Multiplicity.ManyToOne;
			EmploymentEmploymentTerminationReason.IsIndexed = true;

			EmploymentEmploymentTerminationReason.AssociationType.ObjectType = this;

			EmploymentEmploymentTerminationReason.RoleType.ObjectType = EmploymentTerminationReasonClass.Instance;;
			EmploymentEmploymentTerminationReason.RoleType.AssignedSingularName = "EmploymentTerminationReason";
			EmploymentEmploymentTerminationReason.RoleType.AssignedPluralName = "EmploymentTerminationReasons";
			this.Roles.EmploymentTerminationReason = EmploymentEmploymentTerminationReason.RoleType;

			var EmploymentEmploymentTermination = new RelationType(AppsDomain.Instance, new Guid("e79807d4-dcf8-47e2-b510-e8535f1ec436"), new Guid("6b4896d8-8bf6-4908-acb9-dc2438263fb7"), new Guid("96ff4ce3-5e0b-408e-9641-edf2e06dc508"));
			EmploymentEmploymentTermination.AssignedMultiplicity = Multiplicity.ManyToOne;
			EmploymentEmploymentTermination.IsIndexed = true;

			EmploymentEmploymentTermination.AssociationType.ObjectType = this;

			EmploymentEmploymentTermination.RoleType.ObjectType = EmploymentTerminationClass.Instance;;
			EmploymentEmploymentTermination.RoleType.AssignedSingularName = "EmploymentTermination";
			EmploymentEmploymentTermination.RoleType.AssignedPluralName = "EmploymentTerminations";
			this.Roles.EmploymentTermination = EmploymentEmploymentTermination.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EmploymentClass.Instance.ConcreteRoles.Employer = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Employer]; 

			EmploymentClass.Instance.ConcreteRoles.Employee = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Employee]; 

			EmploymentClass.Instance.ConcreteRoles.PayrollPreference = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PayrollPreference]; 

			EmploymentClass.Instance.ConcreteRoles.EmploymentTerminationReason = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EmploymentTerminationReason]; 

			EmploymentClass.Instance.ConcreteRoles.EmploymentTermination = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EmploymentTermination]; 


		}

		internal class RolesType
		{
			internal RoleType Employer;
			internal RoleType Employee;
			internal RoleType PayrollPreference;
			internal RoleType EmploymentTerminationReason;
			internal RoleType EmploymentTermination;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Employer;
			internal ConcreteRoleType Employee;
			internal ConcreteRoleType PayrollPreference;
			internal ConcreteRoleType EmploymentTerminationReason;
			internal ConcreteRoleType EmploymentTermination;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AccountingPeriodClass : Class
	{
		public static AccountingPeriodClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AccountingPeriodClass() : base(AppsDomain.Instance, new Guid("6b56e13b-d075-40f1-8e33-a9a4c6cadb96"))
        {
			this.SingularName = "AccountingPeriod";
			this.PluralName = "AccountingPeriods";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("423ad94c-1a54-40ed-8fa3-62b233521839"))
			{
				Subtype = Instance,
				Supertype = BudgetInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("470cda36-5554-4068-a6c9-b7816e57ebba"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var AccountingPeriodParent = new RelationType(AppsDomain.Instance, new Guid("0fd97106-1e39-4629-a7bd-ad263bc2d296"), new Guid("816f8a0b-3c3a-4dd2-a50e-5c3cd197c592"), new Guid("2d803ef5-2e9a-46fa-8690-5d5ef00f6785"));
			AccountingPeriodParent.AssignedMultiplicity = Multiplicity.ManyToOne;
			AccountingPeriodParent.IsIndexed = true;

			AccountingPeriodParent.AssociationType.ObjectType = this;

			AccountingPeriodParent.RoleType.ObjectType = AccountingPeriodClass.Instance;;
			AccountingPeriodParent.RoleType.AssignedSingularName = "Parent";
			AccountingPeriodParent.RoleType.AssignedPluralName = "Parents";
			this.Roles.Parent = AccountingPeriodParent.RoleType;

			var AccountingPeriodActive = new RelationType(AppsDomain.Instance, new Guid("93b16073-8196-40c2-8777-5719fe1e6360"), new Guid("50a13e06-7df7-4d56-b498-5eea8415bb48"), new Guid("e6b86e57-d8d2-41aa-b238-2fe027d74813"));
			AccountingPeriodActive.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingPeriodActive.AssociationType.ObjectType = this;

			AccountingPeriodActive.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			AccountingPeriodActive.RoleType.AssignedSingularName = "Active";
			AccountingPeriodActive.RoleType.AssignedPluralName = "Actives";
			this.Roles.Active = AccountingPeriodActive.RoleType;

			var AccountingPeriodPeriodNumber = new RelationType(AppsDomain.Instance, new Guid("babffef0-47ad-44ad-9a55-ffefb0fec783"), new Guid("b490215a-8185-40c8-bb31-087906d10911"), new Guid("9fdaab7a-5e4a-4ec1-85bb-0610c0d0493b"));
			AccountingPeriodPeriodNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingPeriodPeriodNumber.AssociationType.ObjectType = this;

			AccountingPeriodPeriodNumber.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			AccountingPeriodPeriodNumber.RoleType.AssignedSingularName = "PeriodNumber";
			AccountingPeriodPeriodNumber.RoleType.AssignedPluralName = "PeriodNumbers";
			this.Roles.PeriodNumber = AccountingPeriodPeriodNumber.RoleType;

			var AccountingPeriodTimeFrequency = new RelationType(AppsDomain.Instance, new Guid("d776c4f4-9408-4083-8eb4-a4f940f6066f"), new Guid("8789a4bf-fd21-48d1-ae0b-26ebd100c0ea"), new Guid("98fec7aa-6357-4b8e-baf6-0a8ef3d221dc"));
			AccountingPeriodTimeFrequency.AssignedMultiplicity = Multiplicity.ManyToOne;
			AccountingPeriodTimeFrequency.IsIndexed = true;

			AccountingPeriodTimeFrequency.AssociationType.ObjectType = this;

			AccountingPeriodTimeFrequency.RoleType.ObjectType = TimeFrequencyClass.Instance;;
			AccountingPeriodTimeFrequency.RoleType.AssignedSingularName = "TimeFrequency";
			AccountingPeriodTimeFrequency.RoleType.AssignedPluralName = "TimeFrequencies";
			this.Roles.TimeFrequency = AccountingPeriodTimeFrequency.RoleType;


		}

		internal override void SetRelationTypes()
		{
			AccountingPeriodClass.Instance.ConcreteRoles.Parent = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Parent]; 

			AccountingPeriodClass.Instance.ConcreteRoles.Active = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Active]; 

			AccountingPeriodClass.Instance.ConcreteRoles.PeriodNumber = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PeriodNumber]; 

			AccountingPeriodClass.Instance.ConcreteRoles.TimeFrequency = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TimeFrequency]; 


		}

		internal class RolesType
		{
			internal RoleType Parent;
			internal RoleType Active;
			internal RoleType PeriodNumber;
			internal RoleType TimeFrequency;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Parent;
			internal ConcreteRoleType Active;
			internal ConcreteRoleType PeriodNumber;
			internal ConcreteRoleType TimeFrequency;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType BudgetRevision;
			internal ConcreteRoleType BudgetStatus;
			internal ConcreteRoleType BudgetNumber;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType BudgetReview;
			internal ConcreteRoleType CurrentBudgetStatus;
			internal ConcreteRoleType BudgetItem;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EngagementRateClass : Class
	{
		public static EngagementRateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EngagementRateClass() : base(AppsDomain.Instance, new Guid("6b666a30-7a55-4986-8411-b6179768e70b"))
        {
			this.SingularName = "EngagementRate";
			this.PluralName = "EngagementRates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("03c5c596-5ad0-4299-a35b-bf9e852f7275"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("139a1a41-615b-4739-94f4-34806bb292fc"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var EngagementRateBillingRate = new RelationType(AppsDomain.Instance, new Guid("0c2c005b-f652-47b2-a42b-7cd511382dd3"), new Guid("653e795b-52b5-4f76-b1a7-dd34dcc7fc0e"), new Guid("9770c0a9-f8bb-4fd2-ae33-8513e9dcd24b"));
			EngagementRateBillingRate.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementRateBillingRate.AssociationType.ObjectType = this;

			EngagementRateBillingRate.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			EngagementRateBillingRate.RoleType.AssignedSingularName = "BillingRate";
			EngagementRateBillingRate.RoleType.AssignedPluralName = "BillingRate";
			EngagementRateBillingRate.RoleType.Scale = 2;
			EngagementRateBillingRate.RoleType.Precision = 19;
			this.Roles.BillingRate = EngagementRateBillingRate.RoleType;

			var EngagementRateRatingType = new RelationType(AppsDomain.Instance, new Guid("1df6f7fe-6cb9-4c1b-b664-e7ee1e2cec6f"), new Guid("62d1d3a9-cda9-4036-8cf9-eb0d58bbc29e"), new Guid("5d912d73-b973-40f6-931d-9689674c7e55"));
			EngagementRateRatingType.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementRateRatingType.IsIndexed = true;

			EngagementRateRatingType.AssociationType.ObjectType = this;

			EngagementRateRatingType.RoleType.ObjectType = RatingTypeClass.Instance;;
			EngagementRateRatingType.RoleType.AssignedSingularName = "RatingType";
			EngagementRateRatingType.RoleType.AssignedPluralName = "RatingTypes";
			this.Roles.RatingType = EngagementRateRatingType.RoleType;

			var EngagementRateCost = new RelationType(AppsDomain.Instance, new Guid("a920a2c5-021e-4fc9-b38b-21be0003e40f"), new Guid("6004b01b-26e0-44de-8e2f-6e90532d5070"), new Guid("ffc748e3-9e10-4ad6-bd60-9b747ee5ad93"));
			EngagementRateCost.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementRateCost.AssociationType.ObjectType = this;

			EngagementRateCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			EngagementRateCost.RoleType.AssignedSingularName = "Cost";
			EngagementRateCost.RoleType.AssignedPluralName = "Costs";
			EngagementRateCost.RoleType.Scale = 2;
			EngagementRateCost.RoleType.Precision = 19;
			this.Roles.Cost = EngagementRateCost.RoleType;

			var EngagementRateGoverningPriceComponent = new RelationType(AppsDomain.Instance, new Guid("c54c15ad-0b9b-490c-bdbb-90a49c728b94"), new Guid("35b7e6dd-5cd0-4aa3-b12c-db10c44b0606"), new Guid("c3e184bf-e863-45d5-b991-b7274757a28e"));
			EngagementRateGoverningPriceComponent.AssignedMultiplicity = Multiplicity.OneToMany;
			EngagementRateGoverningPriceComponent.IsIndexed = true;

			EngagementRateGoverningPriceComponent.AssociationType.ObjectType = this;

			EngagementRateGoverningPriceComponent.RoleType.ObjectType = PriceComponentInterface.Instance;;
			EngagementRateGoverningPriceComponent.RoleType.AssignedSingularName = "GoverningPriceComponent";
			EngagementRateGoverningPriceComponent.RoleType.AssignedPluralName = "GoverningPriceComponents";
			this.Roles.GoverningPriceComponent = EngagementRateGoverningPriceComponent.RoleType;

			var EngagementRateChangeReason = new RelationType(AppsDomain.Instance, new Guid("d030a71e-10ba-48cc-9964-456518b705de"), new Guid("a25d3578-feb9-4eb6-853f-673b2300dc7e"), new Guid("4d655601-37c1-4c31-83a7-406cce05ed4c"));
			EngagementRateChangeReason.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementRateChangeReason.AssociationType.ObjectType = this;

			EngagementRateChangeReason.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EngagementRateChangeReason.RoleType.AssignedSingularName = "ChangeReason";
			EngagementRateChangeReason.RoleType.AssignedPluralName = "ChangeReasons";
			EngagementRateChangeReason.RoleType.Size = 256;
			this.Roles.ChangeReason = EngagementRateChangeReason.RoleType;

			var EngagementRateUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("e7dafa85-712a-4ea4-abe9-82ddd9afc80c"), new Guid("e4462db8-7b15-473f-9aca-3fd01d9dba2e"), new Guid("17f43a3b-5772-4413-9df4-5c3250c94bf8"));
			EngagementRateUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementRateUnitOfMeasure.IsIndexed = true;

			EngagementRateUnitOfMeasure.AssociationType.ObjectType = this;

			EngagementRateUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			EngagementRateUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			EngagementRateUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = EngagementRateUnitOfMeasure.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EngagementRateClass.Instance.ConcreteRoles.BillingRate = EngagementRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingRate]; 

			EngagementRateClass.Instance.ConcreteRoles.RatingType = EngagementRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RatingType]; 

			EngagementRateClass.Instance.ConcreteRoles.Cost = EngagementRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Cost]; 

			EngagementRateClass.Instance.ConcreteRoles.GoverningPriceComponent = EngagementRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GoverningPriceComponent]; 

			EngagementRateClass.Instance.ConcreteRoles.ChangeReason = EngagementRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ChangeReason]; 

			EngagementRateClass.Instance.ConcreteRoles.UnitOfMeasure = EngagementRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 


		}

		internal class RolesType
		{
			internal RoleType BillingRate;
			internal RoleType RatingType;
			internal RoleType Cost;
			internal RoleType GoverningPriceComponent;
			internal RoleType ChangeReason;
			internal RoleType UnitOfMeasure;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType BillingRate;
			internal ConcreteRoleType RatingType;
			internal ConcreteRoleType Cost;
			internal ConcreteRoleType GoverningPriceComponent;
			internal ConcreteRoleType ChangeReason;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ExternalAccountingTransactionInterface: Interface
	{
		public static ExternalAccountingTransactionInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ExternalAccountingTransactionInterface() : base(AppsDomain.Instance, new Guid("6bfa631c-80f4-495f-bb9a-0d3351390d64"))
        {
			this.SingularName = "ExternalAccountingTransaction";
			this.PluralName = "ExternalAccountingTransactions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("bee62d3b-c0c6-493b-a292-13723ac230f1"))
			{
				Subtype = Instance,
				Supertype = AccountingTransactionInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var ExternalAccountingTransactionFromParty = new RelationType(AppsDomain.Instance, new Guid("327fc2cb-9589-4e9d-b9e6-7429cbe14746"), new Guid("5fdf05a4-933c-42d9-897c-b68c6671f785"), new Guid("df92000b-768e-41db-addc-1e2ca5c8baee"));
			ExternalAccountingTransactionFromParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			ExternalAccountingTransactionFromParty.IsIndexed = true;

			ExternalAccountingTransactionFromParty.AssociationType.ObjectType = this;

			ExternalAccountingTransactionFromParty.RoleType.ObjectType = PartyInterface.Instance;;
			ExternalAccountingTransactionFromParty.RoleType.AssignedSingularName = "FromParty";
			ExternalAccountingTransactionFromParty.RoleType.AssignedPluralName = "FromParties";
			this.Roles.FromParty = ExternalAccountingTransactionFromParty.RoleType;

			var ExternalAccountingTransactionToParty = new RelationType(AppsDomain.Instance, new Guid("681312d3-63cd-45a2-883c-4a907d379f52"), new Guid("bfe64bcc-8832-4d02-92cb-7f4b0681fc81"), new Guid("2359aaec-7150-4a84-82af-7dc4ef677c9b"));
			ExternalAccountingTransactionToParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			ExternalAccountingTransactionToParty.IsIndexed = true;

			ExternalAccountingTransactionToParty.AssociationType.ObjectType = this;

			ExternalAccountingTransactionToParty.RoleType.ObjectType = PartyInterface.Instance;;
			ExternalAccountingTransactionToParty.RoleType.AssignedSingularName = "ToParty";
			ExternalAccountingTransactionToParty.RoleType.AssignedPluralName = "ToParties";
			this.Roles.ToParty = ExternalAccountingTransactionToParty.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesAccountingTransactionClass.Instance.ConcreteRoles.FromParty = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.FromParty = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			TaxDueClass.Instance.ConcreteRoles.FromParty = TaxDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			NoteClass.Instance.ConcreteRoles.FromParty = NoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			CreditLineClass.Instance.ConcreteRoles.FromParty = CreditLineClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.FromParty = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			ObligationClass.Instance.ConcreteRoles.FromParty = ObligationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 

			SalesAccountingTransactionClass.Instance.ConcreteRoles.ToParty = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.ToParty = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			TaxDueClass.Instance.ConcreteRoles.ToParty = TaxDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			NoteClass.Instance.ConcreteRoles.ToParty = NoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			CreditLineClass.Instance.ConcreteRoles.ToParty = CreditLineClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.ToParty = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			ObligationClass.Instance.ConcreteRoles.ToParty = ObligationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 


		}

		internal class RolesType
		{
			internal RoleType FromParty;
			internal RoleType ToParty;

		}
	}public partial class TelecommunicationsNumberClass : Class
	{
		public static TelecommunicationsNumberClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TelecommunicationsNumberClass() : base(AppsDomain.Instance, new Guid("6c255f71-ce18-4d51-b0d9-e402ec0e570e"))
        {
			this.SingularName = "TelecommunicationsNumber";
			this.PluralName = "TelecommunicationsNumbers";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("64e085cc-73e5-4244-a572-7ae0a1c6ce48"))
			{
				Subtype = Instance,
				Supertype = ContactMechanismInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var TelecommunicationsNumberAreaCode = new RelationType(AppsDomain.Instance, new Guid("2eabf6bb-48f9-431a-b05b-b892c88db821"), new Guid("2260b0c0-3a19-43cb-a2f1-22098d428a35"), new Guid("5d7ad31b-a29d-4b3f-8411-744a172bf6a9"));
			TelecommunicationsNumberAreaCode.AssignedMultiplicity = Multiplicity.OneToOne;
			TelecommunicationsNumberAreaCode.AssociationType.ObjectType = this;

			TelecommunicationsNumberAreaCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			TelecommunicationsNumberAreaCode.RoleType.AssignedSingularName = "AreaCode";
			TelecommunicationsNumberAreaCode.RoleType.AssignedPluralName = "AreaCodes";
			TelecommunicationsNumberAreaCode.RoleType.Size = 256;
			this.Roles.AreaCode = TelecommunicationsNumberAreaCode.RoleType;

			var TelecommunicationsNumberCountryCode = new RelationType(AppsDomain.Instance, new Guid("31ccabaf-1d31-4b35-93a4-8c18c813c3cd"), new Guid("3d5d091c-0b5a-421e-bbe8-1c64b35d19b0"), new Guid("f8c81a88-4d53-461a-960d-32325ebc177a"));
			TelecommunicationsNumberCountryCode.AssignedMultiplicity = Multiplicity.OneToOne;
			TelecommunicationsNumberCountryCode.AssociationType.ObjectType = this;

			TelecommunicationsNumberCountryCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			TelecommunicationsNumberCountryCode.RoleType.AssignedSingularName = "CountryCode";
			TelecommunicationsNumberCountryCode.RoleType.AssignedPluralName = "CountryCodes";
			TelecommunicationsNumberCountryCode.RoleType.Size = 256;
			this.Roles.CountryCode = TelecommunicationsNumberCountryCode.RoleType;

			var TelecommunicationsNumberContactNumber = new RelationType(AppsDomain.Instance, new Guid("9b587eba-53ee-417c-8324-5c19ec90b745"), new Guid("7ea12a2f-a018-422b-8a03-a683e2bad699"), new Guid("fd07dae1-2e46-48a7-956d-7b881e6c271a"));
			TelecommunicationsNumberContactNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			TelecommunicationsNumberContactNumber.AssociationType.ObjectType = this;

			TelecommunicationsNumberContactNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			TelecommunicationsNumberContactNumber.RoleType.AssignedSingularName = "ContactNumber";
			TelecommunicationsNumberContactNumber.RoleType.AssignedPluralName = "ContactNumbers";
			TelecommunicationsNumberContactNumber.RoleType.Size = 40;
			this.Roles.ContactNumber = TelecommunicationsNumberContactNumber.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TelecommunicationsNumberClass.Instance.ConcreteRoles.AreaCode = TelecommunicationsNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AreaCode]; 

			TelecommunicationsNumberClass.Instance.ConcreteRoles.CountryCode = TelecommunicationsNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CountryCode]; 

			TelecommunicationsNumberClass.Instance.ConcreteRoles.ContactNumber = TelecommunicationsNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContactNumber]; 


		}

		internal class RolesType
		{
			internal RoleType AreaCode;
			internal RoleType CountryCode;
			internal RoleType ContactNumber;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AreaCode;
			internal ConcreteRoleType CountryCode;
			internal ConcreteRoleType ContactNumber;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType FollowTo;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesRepRelationshipClass : Class
	{
		public static SalesRepRelationshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesRepRelationshipClass() : base(AppsDomain.Instance, new Guid("6c28f40a-1826-4110-83c8-7eaefc797f1a"))
        {
			this.SingularName = "SalesRepRelationship";
			this.PluralName = "SalesRepRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("05cf304f-ee72-46c1-8c62-165768b04143"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("4767ad27-a3b5-47b7-8b16-ba2d58fbd4b2"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("7282f0e7-5cc7-4e16-bed0-1a3e013bbece"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ad14fe05-a2c2-4926-815e-baa620bfeed5"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesRepRelationshipSalesRepresentative = new RelationType(AppsDomain.Instance, new Guid("24e8c07a-2fca-496a-8c21-165f29a6733d"), new Guid("5cd1d447-85b5-4d28-8296-05e356046f62"), new Guid("7d8a933f-1d36-4247-bf13-580aa24bd645"));
			SalesRepRelationshipSalesRepresentative.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepRelationshipSalesRepresentative.IsIndexed = true;

			SalesRepRelationshipSalesRepresentative.AssociationType.ObjectType = this;

			SalesRepRelationshipSalesRepresentative.RoleType.ObjectType = PersonClass.Instance;;
			SalesRepRelationshipSalesRepresentative.RoleType.AssignedSingularName = "SalesRepresentative";
			SalesRepRelationshipSalesRepresentative.RoleType.AssignedPluralName = "SalesRepresentatives";
			this.Roles.SalesRepresentative = SalesRepRelationshipSalesRepresentative.RoleType;

			var SalesRepRelationshipLastYearsCommission = new RelationType(AppsDomain.Instance, new Guid("4ffa4073-8359-48c0-8562-9c30e6426ad2"), new Guid("ba0a1788-bd88-4d93-91c9-a51af7831ba2"), new Guid("6a59c35a-9ffb-4311-b0fa-43ea42b61fd1"));
			SalesRepRelationshipLastYearsCommission.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepRelationshipLastYearsCommission.IsDerived = true;
			SalesRepRelationshipLastYearsCommission.AssociationType.ObjectType = this;

			SalesRepRelationshipLastYearsCommission.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesRepRelationshipLastYearsCommission.RoleType.AssignedSingularName = "LastYearsCommission";
			SalesRepRelationshipLastYearsCommission.RoleType.AssignedPluralName = "LastYearsCommissions";
			SalesRepRelationshipLastYearsCommission.RoleType.Scale = 2;
			SalesRepRelationshipLastYearsCommission.RoleType.Precision = 19;
			this.Roles.LastYearsCommission = SalesRepRelationshipLastYearsCommission.RoleType;

			var SalesRepRelationshipProductCategory = new RelationType(AppsDomain.Instance, new Guid("61a10565-62ac-4529-a3b1-709f3b5da306"), new Guid("8a3b5d2e-3be7-4c54-9571-d2466f5323ff"), new Guid("6f9f29f3-0f9e-458a-aea6-27dd7e76adfe"));
			SalesRepRelationshipProductCategory.AssignedMultiplicity = Multiplicity.ManyToMany;
			SalesRepRelationshipProductCategory.IsIndexed = true;

			SalesRepRelationshipProductCategory.AssociationType.ObjectType = this;

			SalesRepRelationshipProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			SalesRepRelationshipProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			SalesRepRelationshipProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = SalesRepRelationshipProductCategory.RoleType;

			var SalesRepRelationshipInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("7dc11a0c-72af-4296-94a4-068edae0021a"), new Guid("8f82d5f9-8f9e-4f57-bb39-4bab9f9813a3"), new Guid("fac65a32-5fcb-4304-9f7d-3ae36da914ff"));
			SalesRepRelationshipInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepRelationshipInternalOrganisation.IsIndexed = true;

			SalesRepRelationshipInternalOrganisation.AssociationType.ObjectType = this;

			SalesRepRelationshipInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesRepRelationshipInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			SalesRepRelationshipInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = SalesRepRelationshipInternalOrganisation.RoleType;

			var SalesRepRelationshipYTDCommission = new RelationType(AppsDomain.Instance, new Guid("98dab364-0db6-438f-ac12-9b0238e81afd"), new Guid("eb32c549-bb3e-4789-abdb-9073905077bb"), new Guid("f213a48e-d351-41c4-91df-48edd0043017"));
			SalesRepRelationshipYTDCommission.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepRelationshipYTDCommission.IsDerived = true;
			SalesRepRelationshipYTDCommission.AssociationType.ObjectType = this;

			SalesRepRelationshipYTDCommission.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesRepRelationshipYTDCommission.RoleType.AssignedSingularName = "YTDCommission";
			SalesRepRelationshipYTDCommission.RoleType.AssignedPluralName = "YTDCommissions";
			SalesRepRelationshipYTDCommission.RoleType.Scale = 2;
			SalesRepRelationshipYTDCommission.RoleType.Precision = 19;
			this.Roles.YTDCommission = SalesRepRelationshipYTDCommission.RoleType;

			var SalesRepRelationshipCustomer = new RelationType(AppsDomain.Instance, new Guid("b770e679-2da6-45e7-b8e0-2ee39ab67f1e"), new Guid("95817787-34eb-42f5-82a0-d28bfa93cd88"), new Guid("b86c35e3-b512-4d5e-9f08-29fe8d5a7b43"));
			SalesRepRelationshipCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepRelationshipCustomer.IsIndexed = true;

			SalesRepRelationshipCustomer.AssociationType.ObjectType = this;

			SalesRepRelationshipCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesRepRelationshipCustomer.RoleType.AssignedSingularName = "Customer";
			SalesRepRelationshipCustomer.RoleType.AssignedPluralName = "Customers";
			this.Roles.Customer = SalesRepRelationshipCustomer.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesRepRelationshipClass.Instance.ConcreteRoles.SalesRepresentative = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRepresentative]; 

			SalesRepRelationshipClass.Instance.ConcreteRoles.LastYearsCommission = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastYearsCommission]; 

			SalesRepRelationshipClass.Instance.ConcreteRoles.ProductCategory = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			SalesRepRelationshipClass.Instance.ConcreteRoles.InternalOrganisation = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			SalesRepRelationshipClass.Instance.ConcreteRoles.YTDCommission = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.YTDCommission]; 

			SalesRepRelationshipClass.Instance.ConcreteRoles.Customer = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Customer]; 


		}

		internal class RolesType
		{
			internal RoleType SalesRepresentative;
			internal RoleType LastYearsCommission;
			internal RoleType ProductCategory;
			internal RoleType InternalOrganisation;
			internal RoleType YTDCommission;
			internal RoleType Customer;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType SalesRepresentative;
			internal ConcreteRoleType LastYearsCommission;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType YTDCommission;
			internal ConcreteRoleType Customer;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;

		}
	}public partial class PurchaseInvoiceObjectStateClass : Class
	{
		public static PurchaseInvoiceObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseInvoiceObjectStateClass() : base(AppsDomain.Instance, new Guid("6c485526-bf9e-42e0-b47e-84552a72589a"))
        {
			this.SingularName = "PurchaseInvoiceObjectState";
			this.PluralName = "PurchaseInvoiceObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("84e6747c-df33-40ed-aefd-9cbfa2c6627e"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ProductCategoryRevenueClass : Class
	{
		public static ProductCategoryRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductCategoryRevenueClass() : base(AppsDomain.Instance, new Guid("6c8503ec-3796-4861-af47-b1aa4e911292"))
        {
			this.SingularName = "ProductCategoryRevenue";
			this.PluralName = "ProductCategoryRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4096dd36-1728-43d2-82a0-479310cd05a3"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ae90b408-9340-474f-bdcd-d8cffda524d1"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductCategoryRevenueProductCategoryName = new RelationType(AppsDomain.Instance, new Guid("3e748cda-d69d-43f9-be75-c942bd432bc7"), new Guid("164d084d-339d-4d3c-8b64-5a985b7b12f1"), new Guid("89301283-a980-4a46-b113-c3b45f6ef3a3"));
			ProductCategoryRevenueProductCategoryName.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductCategoryRevenueProductCategoryName.AssociationType.ObjectType = this;

			ProductCategoryRevenueProductCategoryName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProductCategoryRevenueProductCategoryName.RoleType.AssignedSingularName = "ProductCategoryName";
			ProductCategoryRevenueProductCategoryName.RoleType.AssignedPluralName = "ProductCategoryNames";
			ProductCategoryRevenueProductCategoryName.RoleType.Size = 256;
			this.Roles.ProductCategoryName = ProductCategoryRevenueProductCategoryName.RoleType;

			var ProductCategoryRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("458c4900-00d6-4ad8-a8bc-45a61364ca3d"), new Guid("5d066c0f-4cab-47ce-aaf5-8b3557ba11f2"), new Guid("032207f1-426c-4022-92ac-4042f18cce0c"));
			ProductCategoryRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductCategoryRevenueMonth.AssociationType.ObjectType = this;

			ProductCategoryRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			ProductCategoryRevenueMonth.RoleType.AssignedSingularName = "Month";
			ProductCategoryRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = ProductCategoryRevenueMonth.RoleType;

			var ProductCategoryRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("558ed9e0-81a0-4e6c-abd3-4e27e665deee"), new Guid("e1e94fa4-ac8f-44c2-9982-a05ad1eb3f8e"), new Guid("125f6b43-2204-43cb-819b-4b2b940630cc"));
			ProductCategoryRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductCategoryRevenueInternalOrganisation.IsIndexed = true;

			ProductCategoryRevenueInternalOrganisation.AssociationType.ObjectType = this;

			ProductCategoryRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			ProductCategoryRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			ProductCategoryRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = ProductCategoryRevenueInternalOrganisation.RoleType;

			var ProductCategoryRevenueProductCategory = new RelationType(AppsDomain.Instance, new Guid("6127124a-c07d-49b7-8ecd-fb42d50c4c69"), new Guid("6e095e71-bcdf-4b94-8880-b6a888eec2bf"), new Guid("51cfff06-36f5-4b1f-9c01-2ea2bfb015f1"));
			ProductCategoryRevenueProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductCategoryRevenueProductCategory.IsIndexed = true;

			ProductCategoryRevenueProductCategory.AssociationType.ObjectType = this;

			ProductCategoryRevenueProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			ProductCategoryRevenueProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			ProductCategoryRevenueProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = ProductCategoryRevenueProductCategory.RoleType;

			var ProductCategoryRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("a0fef77b-3d7d-4338-b095-1a69a8cbfda4"), new Guid("0a2754a2-5492-4bd7-acf9-65a424e2d870"), new Guid("fad7d065-5545-4d85-b2f9-259708822626"));
			ProductCategoryRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductCategoryRevenueRevenue.AssociationType.ObjectType = this;

			ProductCategoryRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ProductCategoryRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			ProductCategoryRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			ProductCategoryRevenueRevenue.RoleType.Scale = 2;
			ProductCategoryRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = ProductCategoryRevenueRevenue.RoleType;

			var ProductCategoryRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("e97efb8e-a61e-4710-a576-75e540f2ec1f"), new Guid("b5a6f45b-ee80-4661-ba07-aafaf8676794"), new Guid("a763b52d-022b-472d-89ca-982e573053c9"));
			ProductCategoryRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductCategoryRevenueCurrency.IsIndexed = true;

			ProductCategoryRevenueCurrency.AssociationType.ObjectType = this;

			ProductCategoryRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			ProductCategoryRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			ProductCategoryRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = ProductCategoryRevenueCurrency.RoleType;

			var ProductCategoryRevenueYear = new RelationType(AppsDomain.Instance, new Guid("f2f39bba-8f9e-4dac-ba98-542eb19aebab"), new Guid("590fa663-383d-42d7-8a4c-37ba7e9c6030"), new Guid("76e05eb3-fa65-4efd-8f9a-330b811e5dfe"));
			ProductCategoryRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductCategoryRevenueYear.AssociationType.ObjectType = this;

			ProductCategoryRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			ProductCategoryRevenueYear.RoleType.AssignedSingularName = "Year";
			ProductCategoryRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = ProductCategoryRevenueYear.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductCategoryRevenueClass.Instance.ConcreteRoles.ProductCategoryName = ProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategoryName]; 

			ProductCategoryRevenueClass.Instance.ConcreteRoles.Month = ProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			ProductCategoryRevenueClass.Instance.ConcreteRoles.InternalOrganisation = ProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			ProductCategoryRevenueClass.Instance.ConcreteRoles.ProductCategory = ProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			ProductCategoryRevenueClass.Instance.ConcreteRoles.Revenue = ProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			ProductCategoryRevenueClass.Instance.ConcreteRoles.Currency = ProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			ProductCategoryRevenueClass.Instance.ConcreteRoles.Year = ProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 


		}

		internal class RolesType
		{
			internal RoleType ProductCategoryName;
			internal RoleType Month;
			internal RoleType InternalOrganisation;
			internal RoleType ProductCategory;
			internal RoleType Revenue;
			internal RoleType Currency;
			internal RoleType Year;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ProductCategoryName;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ChartOfAccountsClass : Class
	{
		public static ChartOfAccountsClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ChartOfAccountsClass() : base(AppsDomain.Instance, new Guid("6cf4845d-65a0-4957-95e9-f2b5327d6515"))
        {
			this.SingularName = "ChartOfAccounts";
			this.PluralName = "ChartsOfAccounts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("6365b3fc-42e7-4023-8593-d86c1a4948d2"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("68d03f1c-3b83-4687-a80b-d6367c5ec374"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ChartOfAccountsName = new RelationType(AppsDomain.Instance, new Guid("65f44f44-a613-4cbf-a924-1098c9876f20"), new Guid("d4bd5e5f-e973-489c-879d-31b0023de770"), new Guid("0f6c3b14-f165-41df-aa8d-f49f53c53e05"));
			ChartOfAccountsName.AssignedMultiplicity = Multiplicity.OneToOne;
			ChartOfAccountsName.AssociationType.ObjectType = this;

			ChartOfAccountsName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ChartOfAccountsName.RoleType.AssignedSingularName = "Name";
			ChartOfAccountsName.RoleType.AssignedPluralName = "Names";
			ChartOfAccountsName.RoleType.Size = 256;
			this.Roles.Name = ChartOfAccountsName.RoleType;

			var ChartOfAccountsGeneralLedgerAccount = new RelationType(AppsDomain.Instance, new Guid("71d503fb-ebb9-45b3-af62-1b233677adce"), new Guid("ca0820dd-e0b2-4714-8e2f-f3613dcdbd15"), new Guid("d855adc2-f70e-48d3-a185-957bf27d3d58"));
			ChartOfAccountsGeneralLedgerAccount.AssignedMultiplicity = Multiplicity.OneToMany;
			ChartOfAccountsGeneralLedgerAccount.IsIndexed = true;

			ChartOfAccountsGeneralLedgerAccount.AssociationType.ObjectType = this;

			ChartOfAccountsGeneralLedgerAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			ChartOfAccountsGeneralLedgerAccount.RoleType.AssignedSingularName = "GeneralLedgerAccount";
			ChartOfAccountsGeneralLedgerAccount.RoleType.AssignedPluralName = "GeneralLedgerAccounts";
			this.Roles.GeneralLedgerAccount = ChartOfAccountsGeneralLedgerAccount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ChartOfAccountsClass.Instance.ConcreteRoles.Name = ChartOfAccountsClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			ChartOfAccountsClass.Instance.ConcreteRoles.GeneralLedgerAccount = ChartOfAccountsClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccount]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType GeneralLedgerAccount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType GeneralLedgerAccount;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartyRevenueClass : Class
	{
		public static PartyRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyRevenueClass() : base(AppsDomain.Instance, new Guid("6cf7d076-5c39-48b5-a27e-5e7752afee2d"))
        {
			this.SingularName = "PartyRevenue";
			this.PluralName = "PartyRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("08a36b45-c64b-4f67-a059-79da252522b8"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ef6149a6-c30a-488e-8faa-e8d1902f86c3"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("166cc4a8-4f7f-411e-9a43-9c3f44357691"), new Guid("2cfc0f11-a730-4992-9917-1f6830a534fc"), new Guid("7c8121e5-b9b9-4f4f-9b15-d47fdea0e661"));
			PartyRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyRevenueCurrency.IsIndexed = true;

			PartyRevenueCurrency.AssociationType.ObjectType = this;

			PartyRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PartyRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			PartyRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PartyRevenueCurrency.RoleType;

			var PartyRevenuePartyName = new RelationType(AppsDomain.Instance, new Guid("1b98381e-534b-4f65-9fc2-1638698da6fe"), new Guid("59387dc8-1742-4593-82f6-c74b361d4b35"), new Guid("19e3cb2e-0170-437f-9c4e-ef7765d674d2"));
			PartyRevenuePartyName.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyRevenuePartyName.AssociationType.ObjectType = this;

			PartyRevenuePartyName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartyRevenuePartyName.RoleType.AssignedSingularName = "PartyName";
			PartyRevenuePartyName.RoleType.AssignedPluralName = "PartyNames";
			PartyRevenuePartyName.RoleType.Size = 256;
			this.Roles.PartyName = PartyRevenuePartyName.RoleType;

			var PartyRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("3b750587-6361-4359-8fb3-d4119a91340d"), new Guid("93a555e3-6f22-470b-92d6-e84134564621"), new Guid("2e60687a-c01b-4055-8310-44e2aeea2118"));
			PartyRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyRevenueMonth.AssociationType.ObjectType = this;

			PartyRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartyRevenueMonth.RoleType.AssignedSingularName = "Month";
			PartyRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = PartyRevenueMonth.RoleType;

			var PartyRevenueParty = new RelationType(AppsDomain.Instance, new Guid("ca4a5658-e964-4ae5-b5b6-c4e0747d9001"), new Guid("69e54844-d8e1-4f7b-be89-cde6e4c34431"), new Guid("7e9a8b8f-f98d-402f-baba-a7d22b3a1525"));
			PartyRevenueParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyRevenueParty.IsIndexed = true;

			PartyRevenueParty.AssociationType.ObjectType = this;

			PartyRevenueParty.RoleType.ObjectType = PartyInterface.Instance;;
			PartyRevenueParty.RoleType.AssignedSingularName = "Party";
			PartyRevenueParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = PartyRevenueParty.RoleType;

			var PartyRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("d3a7f72d-e112-4da4-971f-69016bedf814"), new Guid("aa0ac3ab-3db4-4f5f-bd6a-8d50190bad8f"), new Guid("fcd1e476-6420-4e78-8da6-18c8a6e5f103"));
			PartyRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyRevenueInternalOrganisation.IsIndexed = true;

			PartyRevenueInternalOrganisation.AssociationType.ObjectType = this;

			PartyRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PartyRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PartyRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PartyRevenueInternalOrganisation.RoleType;

			var PartyRevenueYear = new RelationType(AppsDomain.Instance, new Guid("da71126e-5599-4c2e-9046-cf238501c61e"), new Guid("9da4cbdf-3010-40fc-bd80-e9d89c412cd9"), new Guid("8aaf333f-3122-419d-b7cc-5a0703cb1615"));
			PartyRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyRevenueYear.IsIndexed = true;

			PartyRevenueYear.AssociationType.ObjectType = this;

			PartyRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartyRevenueYear.RoleType.AssignedSingularName = "Year";
			PartyRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = PartyRevenueYear.RoleType;

			var PartyRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("f12eef62-4f05-4de5-878f-75a2353ae3b5"), new Guid("4f4fb02a-a5dc-4e73-a121-47195ec0c793"), new Guid("d2060993-9551-4b5c-96e8-96852d52fe03"));
			PartyRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyRevenueRevenue.AssociationType.ObjectType = this;

			PartyRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			PartyRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			PartyRevenueRevenue.RoleType.Scale = 2;
			PartyRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = PartyRevenueRevenue.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyRevenueClass.Instance.ConcreteRoles.Currency = PartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			PartyRevenueClass.Instance.ConcreteRoles.PartyName = PartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyName]; 

			PartyRevenueClass.Instance.ConcreteRoles.Month = PartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			PartyRevenueClass.Instance.ConcreteRoles.Party = PartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			PartyRevenueClass.Instance.ConcreteRoles.InternalOrganisation = PartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			PartyRevenueClass.Instance.ConcreteRoles.Year = PartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			PartyRevenueClass.Instance.ConcreteRoles.Revenue = PartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 


		}

		internal class RolesType
		{
			internal RoleType Currency;
			internal RoleType PartyName;
			internal RoleType Month;
			internal RoleType Party;
			internal RoleType InternalOrganisation;
			internal RoleType Year;
			internal RoleType Revenue;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType PartyName;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class MarketingMaterialClass : Class
	{
		public static MarketingMaterialClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal MarketingMaterialClass() : base(AppsDomain.Instance, new Guid("6d4739a9-c3c4-4570-a337-49f667c6243b"))
        {
			this.SingularName = "MarketingMaterial";
			this.PluralName = "MarketingMaterials";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f0579a98-3e36-4dcf-9f06-a1c0ccf46cb0"))
			{
				Subtype = Instance,
				Supertype = DocumentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DocumentLocation;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;

		}
	}public partial class PurchaseInvoiceItemStatusClass : Class
	{
		public static PurchaseInvoiceItemStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseInvoiceItemStatusClass() : base(AppsDomain.Instance, new Guid("6dd3dbf4-d14d-45a3-ad52-65b31a4bb24e"))
        {
			this.SingularName = "PurchaseInvoiceItemStatus";
			this.PluralName = "PurchaseInvoiceItemStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("988d185d-95f1-4bb3-8c9e-eff2e2828eb8"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseInvoiceItemStatusPurchaseInvoiceItemObjectState = new RelationType(AppsDomain.Instance, new Guid("36ee6713-cf38-4ce1-9173-9d7f8aa75ea4"), new Guid("7a4e3240-4f48-4c76-ab15-177066f5cbdb"), new Guid("81879f79-834a-4f00-aad5-ddeae84ddf99"));
			PurchaseInvoiceItemStatusPurchaseInvoiceItemObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoiceItemStatusPurchaseInvoiceItemObjectState.IsIndexed = true;

			PurchaseInvoiceItemStatusPurchaseInvoiceItemObjectState.AssociationType.ObjectType = this;

			PurchaseInvoiceItemStatusPurchaseInvoiceItemObjectState.RoleType.ObjectType = PurchaseInvoiceItemObjectStateClass.Instance;;
			PurchaseInvoiceItemStatusPurchaseInvoiceItemObjectState.RoleType.AssignedSingularName = "PurchaseInvoiceItemObjectState";
			PurchaseInvoiceItemStatusPurchaseInvoiceItemObjectState.RoleType.AssignedPluralName = "PurchaseInvoiceItemObjectStates";
			this.Roles.PurchaseInvoiceItemObjectState = PurchaseInvoiceItemStatusPurchaseInvoiceItemObjectState.RoleType;

			var PurchaseInvoiceItemStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("45a00bdb-cbe4-4170-88e2-20bb55dff33f"), new Guid("5db6dcfb-c4a9-49ea-84f3-f136a184a4fe"), new Guid("e6b78152-6511-4620-81a3-f31709434fc1"));
			PurchaseInvoiceItemStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseInvoiceItemStatusStartDateTime.AssociationType.ObjectType = this;

			PurchaseInvoiceItemStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PurchaseInvoiceItemStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			PurchaseInvoiceItemStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = PurchaseInvoiceItemStatusStartDateTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseInvoiceItemStatusClass.Instance.ConcreteRoles.PurchaseInvoiceItemObjectState = PurchaseInvoiceItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseInvoiceItemObjectState]; 

			PurchaseInvoiceItemStatusClass.Instance.ConcreteRoles.StartDateTime = PurchaseInvoiceItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 


		}

		internal class RolesType
		{
			internal RoleType PurchaseInvoiceItemObjectState;
			internal RoleType StartDateTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PurchaseInvoiceItemObjectState;
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class InvoiceVatRateItemClass : Class
	{
		public static InvoiceVatRateItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InvoiceVatRateItemClass() : base(AppsDomain.Instance, new Guid("6e380347-21e3-4a00-819f-ed11e6882d03"))
        {
			this.SingularName = "InvoiceVatRateItem";
			this.PluralName = "InvoiceVatRateItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5d4a5fb9-3493-4c75-bfef-c9125d079c01"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var InvoiceVatRateItemBaseAmount = new RelationType(AppsDomain.Instance, new Guid("55659771-7862-4fb1-b30c-92a867a6c051"), new Guid("de919633-8651-479c-b3dc-5f510a6d2c4a"), new Guid("d000219c-6ff5-42d2-a65f-da0a7897a00a"));
			InvoiceVatRateItemBaseAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceVatRateItemBaseAmount.AssociationType.ObjectType = this;

			InvoiceVatRateItemBaseAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceVatRateItemBaseAmount.RoleType.AssignedSingularName = "BaseAmount";
			InvoiceVatRateItemBaseAmount.RoleType.AssignedPluralName = "BaseAmounts";
			InvoiceVatRateItemBaseAmount.RoleType.Scale = 2;
			InvoiceVatRateItemBaseAmount.RoleType.Precision = 19;
			this.Roles.BaseAmount = InvoiceVatRateItemBaseAmount.RoleType;

			var InvoiceVatRateItemVatRate = new RelationType(AppsDomain.Instance, new Guid("d3300a5d-8e35-4106-9df9-d1bb25bb0352"), new Guid("14cc26ba-1c75-42dd-8a72-1f20f8692cb7"), new Guid("f83c9130-b540-4b25-b7cf-699333395a9d"));
			InvoiceVatRateItemVatRate.AssignedMultiplicity = Multiplicity.ManyToMany;
			InvoiceVatRateItemVatRate.IsIndexed = true;

			InvoiceVatRateItemVatRate.AssociationType.ObjectType = this;

			InvoiceVatRateItemVatRate.RoleType.ObjectType = VatRateClass.Instance;;
			InvoiceVatRateItemVatRate.RoleType.AssignedSingularName = "VatRate";
			InvoiceVatRateItemVatRate.RoleType.AssignedPluralName = "VatRates";
			this.Roles.VatRate = InvoiceVatRateItemVatRate.RoleType;

			var InvoiceVatRateItemVatAmount = new RelationType(AppsDomain.Instance, new Guid("d7f6ed3a-cd81-418c-81c9-2bba827fe956"), new Guid("644237c5-167a-49f8-887f-5d10a725fd80"), new Guid("d5cd524d-b5ba-4d32-b9ab-03aa08e202b9"));
			InvoiceVatRateItemVatAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceVatRateItemVatAmount.AssociationType.ObjectType = this;

			InvoiceVatRateItemVatAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceVatRateItemVatAmount.RoleType.AssignedSingularName = "VatAmount";
			InvoiceVatRateItemVatAmount.RoleType.AssignedPluralName = "VatAmounts";
			InvoiceVatRateItemVatAmount.RoleType.Scale = 2;
			InvoiceVatRateItemVatAmount.RoleType.Precision = 19;
			this.Roles.VatAmount = InvoiceVatRateItemVatAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			InvoiceVatRateItemClass.Instance.ConcreteRoles.BaseAmount = InvoiceVatRateItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BaseAmount]; 

			InvoiceVatRateItemClass.Instance.ConcreteRoles.VatRate = InvoiceVatRateItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 

			InvoiceVatRateItemClass.Instance.ConcreteRoles.VatAmount = InvoiceVatRateItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatAmount]; 


		}

		internal class RolesType
		{
			internal RoleType BaseAmount;
			internal RoleType VatRate;
			internal RoleType VatAmount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType BaseAmount;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType VatAmount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CaseObjectStateClass : Class
	{
		public static CaseObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CaseObjectStateClass() : base(AppsDomain.Instance, new Guid("6ea1f500-13a2-4f5a-8026-a1d5a57170ac"))
        {
			this.SingularName = "CaseObjectState";
			this.PluralName = "CaseObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("44765382-5b19-448a-9593-5d879041d014"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class SalaryStepClass : Class
	{
		public static SalaryStepClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalaryStepClass() : base(AppsDomain.Instance, new Guid("6ebf4c66-dd19-494f-8081-67d7a10a16fc"))
        {
			this.SingularName = "SalaryStep";
			this.PluralName = "SalarySteps";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1ae3eada-fdec-4e15-aee5-360aa5d05e45"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalaryStepModifiedDate = new RelationType(AppsDomain.Instance, new Guid("162b31b7-78fd-4ec5-95f7-3913be0662e2"), new Guid("c00111ef-5eb8-4155-a621-fd09d0aa1a6c"), new Guid("2872381c-833b-4dce-83f4-a56bbbd416b3"));
			SalaryStepModifiedDate.AssignedMultiplicity = Multiplicity.OneToOne;
			SalaryStepModifiedDate.AssociationType.ObjectType = this;

			SalaryStepModifiedDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			SalaryStepModifiedDate.RoleType.AssignedSingularName = "ModifiedDate";
			SalaryStepModifiedDate.RoleType.AssignedPluralName = "ModifiedDates";
			this.Roles.ModifiedDate = SalaryStepModifiedDate.RoleType;

			var SalaryStepAmount = new RelationType(AppsDomain.Instance, new Guid("7cb593b7-48ac-4049-b78c-1e84bdd2fa3a"), new Guid("39c58f18-a640-4c5e-9878-2f82ea90bd0a"), new Guid("553fe45b-2c69-432d-9686-c2f049610eaa"));
			SalaryStepAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			SalaryStepAmount.AssociationType.ObjectType = this;

			SalaryStepAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalaryStepAmount.RoleType.AssignedSingularName = "Amount";
			SalaryStepAmount.RoleType.AssignedPluralName = "Amounts";
			SalaryStepAmount.RoleType.Scale = 2;
			SalaryStepAmount.RoleType.Precision = 19;
			this.Roles.Amount = SalaryStepAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalaryStepClass.Instance.ConcreteRoles.ModifiedDate = SalaryStepClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ModifiedDate]; 

			SalaryStepClass.Instance.ConcreteRoles.Amount = SalaryStepClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 


		}

		internal class RolesType
		{
			internal RoleType ModifiedDate;
			internal RoleType Amount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ModifiedDate;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DropShipmentStatusClass : Class
	{
		public static DropShipmentStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DropShipmentStatusClass() : base(AppsDomain.Instance, new Guid("6fadcefe-2972-480d-9d38-d4207e199d48"))
        {
			this.SingularName = "DropShipmentStatus";
			this.PluralName = "DropShipmentStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b0d806e8-eb0d-4337-bceb-ab715b18d9ca"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DropShipmentStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("2c667e0e-f489-470d-9f48-09a443588286"), new Guid("4f08a754-40ac-4806-bf34-fcc4b0d473af"), new Guid("bd4fb4a3-c2ba-4ed6-8f09-4d7e8e8e3a9a"));
			DropShipmentStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			DropShipmentStatusStartDateTime.AssociationType.ObjectType = this;

			DropShipmentStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			DropShipmentStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			DropShipmentStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = DropShipmentStatusStartDateTime.RoleType;

			var DropShipmentStatusDropShipmentObjectState = new RelationType(AppsDomain.Instance, new Guid("3fe0bb83-1d87-4a7c-bda8-796cdaea9ac3"), new Guid("5098fab9-4d58-43e1-93b5-b95e090952e1"), new Guid("09b78c50-2eef-4f01-9277-8a14a657f6b9"));
			DropShipmentStatusDropShipmentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			DropShipmentStatusDropShipmentObjectState.IsIndexed = true;

			DropShipmentStatusDropShipmentObjectState.AssociationType.ObjectType = this;

			DropShipmentStatusDropShipmentObjectState.RoleType.ObjectType = DropShipmentObjectStateClass.Instance;;
			DropShipmentStatusDropShipmentObjectState.RoleType.AssignedSingularName = "DropShipmentObjectState";
			DropShipmentStatusDropShipmentObjectState.RoleType.AssignedPluralName = "DropShipmentObjectStates";
			this.Roles.DropShipmentObjectState = DropShipmentStatusDropShipmentObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DropShipmentStatusClass.Instance.ConcreteRoles.StartDateTime = DropShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			DropShipmentStatusClass.Instance.ConcreteRoles.DropShipmentObjectState = DropShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DropShipmentObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType DropShipmentObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType DropShipmentObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PaymentApplicationClass : Class
	{
		public static PaymentApplicationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PaymentApplicationClass() : base(AppsDomain.Instance, new Guid("6fef08f0-d4cb-42f4-a10f-fb31787f65c3"))
        {
			this.SingularName = "PaymentApplication";
			this.PluralName = "PaymentApplications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3b7e7e9c-0c88-42de-8451-4a25ffbbcb5c"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PaymentApplicationAmountApplied = new RelationType(AppsDomain.Instance, new Guid("1147413e-9b57-45b3-a15c-44923e83001a"), new Guid("fba37a60-bd3c-4218-a0b8-64d3f60a7057"), new Guid("23382708-15b9-4d96-8c87-599c80fd2f74"));
			PaymentApplicationAmountApplied.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentApplicationAmountApplied.AssociationType.ObjectType = this;

			PaymentApplicationAmountApplied.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PaymentApplicationAmountApplied.RoleType.AssignedSingularName = "AmountApplied";
			PaymentApplicationAmountApplied.RoleType.AssignedPluralName = "AmountsApplied";
			PaymentApplicationAmountApplied.RoleType.Scale = 2;
			PaymentApplicationAmountApplied.RoleType.Precision = 19;
			this.Roles.AmountApplied = PaymentApplicationAmountApplied.RoleType;

			var PaymentApplicationInvoiceItem = new RelationType(AppsDomain.Instance, new Guid("b5f00552-5976-4368-9f38-dc4734b1c4af"), new Guid("c51f9be5-aee5-43db-b986-78e076ded8bf"), new Guid("df69429e-b21d-4b28-83b3-17f365ac444d"));
			PaymentApplicationInvoiceItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentApplicationInvoiceItem.IsIndexed = true;

			PaymentApplicationInvoiceItem.AssociationType.ObjectType = this;

			PaymentApplicationInvoiceItem.RoleType.ObjectType = InvoiceItemInterface.Instance;;
			PaymentApplicationInvoiceItem.RoleType.AssignedSingularName = "InvoiceItem";
			PaymentApplicationInvoiceItem.RoleType.AssignedPluralName = "InvoiceItems";
			this.Roles.InvoiceItem = PaymentApplicationInvoiceItem.RoleType;

			var PaymentApplicationInvoice = new RelationType(AppsDomain.Instance, new Guid("d2a02ce6-569d-41ae-b54d-4a2347b84835"), new Guid("6a5043e4-be26-42fb-80c5-f60ac6af0284"), new Guid("8dc0f6e8-a4fd-44d0-93f5-963c3265033b"));
			PaymentApplicationInvoice.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentApplicationInvoice.IsIndexed = true;

			PaymentApplicationInvoice.AssociationType.ObjectType = this;

			PaymentApplicationInvoice.RoleType.ObjectType = InvoiceInterface.Instance;;
			PaymentApplicationInvoice.RoleType.AssignedSingularName = "Invoice";
			PaymentApplicationInvoice.RoleType.AssignedPluralName = "Invoices";
			this.Roles.Invoice = PaymentApplicationInvoice.RoleType;

			var PaymentApplicationBillingAccount = new RelationType(AppsDomain.Instance, new Guid("deb07a2f-6344-4888-bd1a-97413e82700a"), new Guid("1c722ac2-b579-4707-8e27-0b0a23510293"), new Guid("345cb457-a401-4590-b21c-de3a213a5626"));
			PaymentApplicationBillingAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentApplicationBillingAccount.IsIndexed = true;

			PaymentApplicationBillingAccount.AssociationType.ObjectType = this;

			PaymentApplicationBillingAccount.RoleType.ObjectType = BillingAccountClass.Instance;;
			PaymentApplicationBillingAccount.RoleType.AssignedSingularName = "BillingAccount";
			PaymentApplicationBillingAccount.RoleType.AssignedPluralName = "BillingAccounts";
			this.Roles.BillingAccount = PaymentApplicationBillingAccount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PaymentApplicationClass.Instance.ConcreteRoles.AmountApplied = PaymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AmountApplied]; 

			PaymentApplicationClass.Instance.ConcreteRoles.InvoiceItem = PaymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceItem]; 

			PaymentApplicationClass.Instance.ConcreteRoles.Invoice = PaymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Invoice]; 

			PaymentApplicationClass.Instance.ConcreteRoles.BillingAccount = PaymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAccount]; 


		}

		internal class RolesType
		{
			internal RoleType AmountApplied;
			internal RoleType InvoiceItem;
			internal RoleType Invoice;
			internal RoleType BillingAccount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AmountApplied;
			internal ConcreteRoleType InvoiceItem;
			internal ConcreteRoleType Invoice;
			internal ConcreteRoleType BillingAccount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class NonSerializedInventoryItemStatusClass : Class
	{
		public static NonSerializedInventoryItemStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal NonSerializedInventoryItemStatusClass() : base(AppsDomain.Instance, new Guid("700360b9-56be-4e51-9610-f1e5951dd765"))
        {
			this.SingularName = "NonSerializedInventoryItemStatus";
			this.PluralName = "NonSerializedInventoryItemStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ea12ac44-c492-4b3a-8367-3ffa40d506c5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var NonSerializedInventoryItemStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("590f1d9b-a805-4b0e-a2bd-8e274608fe3c"), new Guid("bcc05955-7c14-45f9-b2ea-ab36feca7287"), new Guid("30a81620-9871-414c-9b09-c2fad0358bb4"));
			NonSerializedInventoryItemStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			NonSerializedInventoryItemStatusStartDateTime.AssociationType.ObjectType = this;

			NonSerializedInventoryItemStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			NonSerializedInventoryItemStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			NonSerializedInventoryItemStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = NonSerializedInventoryItemStatusStartDateTime.RoleType;

			var NonSerializedInventoryItemStatusNonSerializedInventoryItemObjectState = new RelationType(AppsDomain.Instance, new Guid("959aa0a9-a197-4eb4-bc9e-e40da8892dd0"), new Guid("d3b7eb35-52d2-48fc-a416-a2185ae347ee"), new Guid("78059f92-3345-4e5a-8d04-d30d15eee05a"));
			NonSerializedInventoryItemStatusNonSerializedInventoryItemObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			NonSerializedInventoryItemStatusNonSerializedInventoryItemObjectState.IsIndexed = true;

			NonSerializedInventoryItemStatusNonSerializedInventoryItemObjectState.AssociationType.ObjectType = this;

			NonSerializedInventoryItemStatusNonSerializedInventoryItemObjectState.RoleType.ObjectType = NonSerializedInventoryItemObjectStateClass.Instance;;
			NonSerializedInventoryItemStatusNonSerializedInventoryItemObjectState.RoleType.AssignedSingularName = "NonSerializedInventoryItemObjectState";
			NonSerializedInventoryItemStatusNonSerializedInventoryItemObjectState.RoleType.AssignedPluralName = "NonSerializedInventoryItemObjectStates";
			this.Roles.NonSerializedInventoryItemObjectState = NonSerializedInventoryItemStatusNonSerializedInventoryItemObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			NonSerializedInventoryItemStatusClass.Instance.ConcreteRoles.StartDateTime = NonSerializedInventoryItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			NonSerializedInventoryItemStatusClass.Instance.ConcreteRoles.NonSerializedInventoryItemObjectState = NonSerializedInventoryItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NonSerializedInventoryItemObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType NonSerializedInventoryItemObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType NonSerializedInventoryItemObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SurchargeAdjustmentClass : Class
	{
		public static SurchargeAdjustmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SurchargeAdjustmentClass() : base(AppsDomain.Instance, new Guid("70468d86-b8a0-4aff-881e-fca2386f64da"))
        {
			this.SingularName = "SurchargeAdjustment";
			this.PluralName = "SurchargeAdjustments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f7e77ecc-e23e-4c1a-a8ec-9b4e3ef28bf0"))
			{
				Subtype = Instance,
				Supertype = OrderAdjustmentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType Percentage;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DepreciationClass : Class
	{
		public static DepreciationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DepreciationClass() : base(AppsDomain.Instance, new Guid("7107db4e-8406-4fe3-8136-271077c287f8"))
        {
			this.SingularName = "Depreciation";
			this.PluralName = "Depreciations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0e60bbcb-3d9d-4c78-84c6-d4ec8c3c79b9"))
			{
				Subtype = Instance,
				Supertype = InternalAccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DepreciationFixedAsset = new RelationType(AppsDomain.Instance, new Guid("83ae8e4e-c4cd-4f27-b5fd-b468e4603295"), new Guid("031bc098-9f75-4ced-bcca-0f35519887b2"), new Guid("9e2be493-0100-474c-a49b-00b69c8d8ce1"));
			DepreciationFixedAsset.AssignedMultiplicity = Multiplicity.ManyToOne;
			DepreciationFixedAsset.IsIndexed = true;

			DepreciationFixedAsset.AssociationType.ObjectType = this;

			DepreciationFixedAsset.RoleType.ObjectType = FixedAssetInterface.Instance;;
			DepreciationFixedAsset.RoleType.AssignedSingularName = "FixedAsset";
			DepreciationFixedAsset.RoleType.AssignedPluralName = "FixedAssets";
			this.Roles.FixedAsset = DepreciationFixedAsset.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DepreciationClass.Instance.ConcreteRoles.FixedAsset = DepreciationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FixedAsset]; 


		}

		internal class RolesType
		{
			internal RoleType FixedAsset;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType FixedAsset;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class TerritoryClass : Class
	{
		public static TerritoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TerritoryClass() : base(AppsDomain.Instance, new Guid("7118e029-a8b3-415b-b9e9-d48ba4ea2823"))
        {
			this.SingularName = "Territory";
			this.PluralName = "Territories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0047f17b-2c89-4b65-924a-15afb22d622d"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("3531c003-2489-4f8f-b4ec-a18b87bcd2d9"))
			{
				Subtype = Instance,
				Supertype = CityBoundInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("3bbb85de-5102-45b5-bec1-82379bd216db"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a6b58e29-5814-479a-9e73-fc24ce16104c"))
			{
				Subtype = Instance,
				Supertype = CountryBoundInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var TerritoryName = new RelationType(AppsDomain.Instance, new Guid("9e3780d3-887f-458c-937c-379b22205e2f"), new Guid("241f1107-e802-4c2f-b0e5-80f42b3f916b"), new Guid("3b19bc32-8d8e-404c-80c5-9671408a630e"));
			TerritoryName.AssignedMultiplicity = Multiplicity.OneToOne;
			TerritoryName.AssociationType.ObjectType = this;

			TerritoryName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			TerritoryName.RoleType.AssignedSingularName = "Name";
			TerritoryName.RoleType.AssignedPluralName = "Names";
			TerritoryName.RoleType.Size = 256;
			this.Roles.Name = TerritoryName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TerritoryClass.Instance.ConcreteRoles.Name = TerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType City;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Country;

		}
	}public partial class SalesOrderClass : Class
	{
		public static SalesOrderClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesOrderClass() : base(AppsDomain.Instance, new Guid("716647bf-7589-4146-a45c-a6a3b1cee507"))
        {
			this.SingularName = "SalesOrder";
			this.PluralName = "SalesOrders";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("9e4e4bf4-8671-4ac9-ab4f-fce34423f273"))
			{
				Subtype = Instance,
				Supertype = OrderInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesOrderTakenByContactMechanism = new RelationType(AppsDomain.Instance, new Guid("108a1136-feaa-45b8-a899-d455718090d1"), new Guid("a2df509a-6923-4121-9159-8d55b91fd407"), new Guid("7cf7c405-f20c-4416-84f5-a4ff05412162"));
			SalesOrderTakenByContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderTakenByContactMechanism.IsIndexed = true;

			SalesOrderTakenByContactMechanism.AssociationType.ObjectType = this;

			SalesOrderTakenByContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			SalesOrderTakenByContactMechanism.RoleType.AssignedSingularName = "TakenByContactMechanism";
			SalesOrderTakenByContactMechanism.RoleType.AssignedPluralName = "TakenByContactMechanism";
			this.Roles.TakenByContactMechanism = SalesOrderTakenByContactMechanism.RoleType;

			var SalesOrderShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("19b2f705-c5c7-4440-9b44-96783802ead0"), new Guid("9ce4d748-c7a2-445e-adf1-35ab41edbfe8"), new Guid("4a78e297-5ede-41a9-a487-43509450be2f"));
			SalesOrderShipmentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesOrderShipmentStatus.IsDerived = true;
			SalesOrderShipmentStatus.IsIndexed = true;

			SalesOrderShipmentStatus.AssociationType.ObjectType = this;

			SalesOrderShipmentStatus.RoleType.ObjectType = SalesOrderStatusClass.Instance;;
			SalesOrderShipmentStatus.RoleType.AssignedSingularName = "ShipmentStatus";
			SalesOrderShipmentStatus.RoleType.AssignedPluralName = "ShipmentStatuses";
			this.Roles.ShipmentStatus = SalesOrderShipmentStatus.RoleType;

			var SalesOrderCurrentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("19dc0809-46cb-4c37-923c-6bc29a357ba8"), new Guid("bb864baf-b34d-48ab-87e4-e26d82cd4149"), new Guid("2bc32ce8-1202-4091-934a-c89ef338a5fe"));
			SalesOrderCurrentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderCurrentShipmentStatus.IsDerived = true;
			SalesOrderCurrentShipmentStatus.IsIndexed = true;

			SalesOrderCurrentShipmentStatus.AssociationType.ObjectType = this;

			SalesOrderCurrentShipmentStatus.RoleType.ObjectType = SalesOrderStatusClass.Instance;;
			SalesOrderCurrentShipmentStatus.RoleType.AssignedSingularName = "CurrentShipmentStatus";
			SalesOrderCurrentShipmentStatus.RoleType.AssignedPluralName = "CurrentShipmentStatuses";
			this.Roles.CurrentShipmentStatus = SalesOrderCurrentShipmentStatus.RoleType;

			var SalesOrderCurrentPaymentStatus = new RelationType(AppsDomain.Instance, new Guid("209f99fb-2e14-45fe-9533-a56573a8c115"), new Guid("f00c8458-3fc7-4279-b3b0-58902ff3bf1d"), new Guid("49399720-aa62-4f69-a20a-1d1e0b8d3978"));
			SalesOrderCurrentPaymentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderCurrentPaymentStatus.IsDerived = true;
			SalesOrderCurrentPaymentStatus.IsIndexed = true;

			SalesOrderCurrentPaymentStatus.AssociationType.ObjectType = this;

			SalesOrderCurrentPaymentStatus.RoleType.ObjectType = SalesOrderStatusClass.Instance;;
			SalesOrderCurrentPaymentStatus.RoleType.AssignedSingularName = "CurrentPaymentStatus";
			SalesOrderCurrentPaymentStatus.RoleType.AssignedPluralName = "CurrentPaymentStatuses";
			this.Roles.CurrentPaymentStatus = SalesOrderCurrentPaymentStatus.RoleType;

			var SalesOrderShipToCustomer = new RelationType(AppsDomain.Instance, new Guid("28359bf8-506e-41db-a86b-a1eee3d50198"), new Guid("9a1a8d51-904d-480e-869f-66f5edae0ccd"), new Guid("de181822-ac8e-4a85-af28-b217aa9fcfcd"));
			SalesOrderShipToCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderShipToCustomer.IsIndexed = true;

			SalesOrderShipToCustomer.AssociationType.ObjectType = this;

			SalesOrderShipToCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesOrderShipToCustomer.RoleType.AssignedSingularName = "ShipToCustomer";
			SalesOrderShipToCustomer.RoleType.AssignedPluralName = "ShipToCustomers";
			this.Roles.ShipToCustomer = SalesOrderShipToCustomer.RoleType;

			var SalesOrderBillToCustomer = new RelationType(AppsDomain.Instance, new Guid("2bd27b4c-37fd-4f82-bd43-4301ac704749"), new Guid("39389068-26bb-4e3b-b816-ef5730761301"), new Guid("97e7045d-cf35-46ee-acfc-34f6b2572096"));
			SalesOrderBillToCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderBillToCustomer.IsIndexed = true;

			SalesOrderBillToCustomer.AssociationType.ObjectType = this;

			SalesOrderBillToCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesOrderBillToCustomer.RoleType.AssignedSingularName = "BillToCustomer";
			SalesOrderBillToCustomer.RoleType.AssignedPluralName = "BillToCustomers";
			this.Roles.BillToCustomer = SalesOrderBillToCustomer.RoleType;

			var SalesOrderTotalPurchasePrice = new RelationType(AppsDomain.Instance, new Guid("2d097a42-0cfd-43d7-a683-2ae94b9ddaf1"), new Guid("2921dfd5-e57c-4686-b95d-54da85af6604"), new Guid("683dcf30-f20f-44fa-947b-e8b1901b5165"));
			SalesOrderTotalPurchasePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderTotalPurchasePrice.IsDerived = true;
			SalesOrderTotalPurchasePrice.AssociationType.ObjectType = this;

			SalesOrderTotalPurchasePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderTotalPurchasePrice.RoleType.AssignedSingularName = "TotalPurchasePrice";
			SalesOrderTotalPurchasePrice.RoleType.AssignedPluralName = "TotalPurchasePrices";
			SalesOrderTotalPurchasePrice.RoleType.Scale = 2;
			SalesOrderTotalPurchasePrice.RoleType.Precision = 19;
			this.Roles.TotalPurchasePrice = SalesOrderTotalPurchasePrice.RoleType;

			var SalesOrderShipmentMethod = new RelationType(AppsDomain.Instance, new Guid("2ee793c8-512e-4358-b28a-f364280db93f"), new Guid("fce2bfd3-8f68-4c9f-a1a3-dce309767458"), new Guid("d123ca45-1afb-4403-9b88-2a5a135d0e60"));
			SalesOrderShipmentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderShipmentMethod.IsIndexed = true;

			SalesOrderShipmentMethod.AssociationType.ObjectType = this;

			SalesOrderShipmentMethod.RoleType.ObjectType = ShipmentMethodClass.Instance;;
			SalesOrderShipmentMethod.RoleType.AssignedSingularName = "ShipmentMethod";
			SalesOrderShipmentMethod.RoleType.AssignedPluralName = "ShipmentMethods";
			this.Roles.ShipmentMethod = SalesOrderShipmentMethod.RoleType;

			var SalesOrderTotalListPriceCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("30abf0e0-08a3-441a-a91e-09ab14199689"), new Guid("009552df-953c-4170-bbbf-495c8746d6c0"), new Guid("403e22eb-805b-4fff-9b1f-0243d215d9fd"));
			SalesOrderTotalListPriceCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderTotalListPriceCustomerCurrency.IsDerived = true;
			SalesOrderTotalListPriceCustomerCurrency.AssociationType.ObjectType = this;

			SalesOrderTotalListPriceCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderTotalListPriceCustomerCurrency.RoleType.AssignedSingularName = "TotalListPriceCustomerCurrency";
			SalesOrderTotalListPriceCustomerCurrency.RoleType.AssignedPluralName = "TotalListPricesCustomerCurrency";
			SalesOrderTotalListPriceCustomerCurrency.RoleType.Scale = 2;
			SalesOrderTotalListPriceCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalListPriceCustomerCurrency = SalesOrderTotalListPriceCustomerCurrency.RoleType;

			var SalesOrderMaintainedProfitMargin = new RelationType(AppsDomain.Instance, new Guid("30ddd003-9055-4c1b-8bbb-af75a54da66d"), new Guid("aed47f4f-411d-49ee-9327-5543761d16b5"), new Guid("2b2ee710-ba86-4c7b-ba0e-443e229bec23"));
			SalesOrderMaintainedProfitMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderMaintainedProfitMargin.IsDerived = true;
			SalesOrderMaintainedProfitMargin.AssociationType.ObjectType = this;

			SalesOrderMaintainedProfitMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderMaintainedProfitMargin.RoleType.AssignedSingularName = "MaintainedProfitMargin";
			SalesOrderMaintainedProfitMargin.RoleType.AssignedPluralName = "MaintainedProfitMargins";
			SalesOrderMaintainedProfitMargin.RoleType.Scale = 2;
			SalesOrderMaintainedProfitMargin.RoleType.Precision = 19;
			this.Roles.MaintainedProfitMargin = SalesOrderMaintainedProfitMargin.RoleType;

			var SalesOrderShipToAddress = new RelationType(AppsDomain.Instance, new Guid("3a2be2f2-2608-46e0-b1f1-1da7e372b8f8"), new Guid("11b71189-8551-467d-9c50-07afe152bdc0"), new Guid("86ca98fe-6bc1-44ce-984e-23ed2f51e9b1"));
			SalesOrderShipToAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderShipToAddress.IsIndexed = true;

			SalesOrderShipToAddress.AssociationType.ObjectType = this;

			SalesOrderShipToAddress.RoleType.ObjectType = PostalAddressClass.Instance;;
			SalesOrderShipToAddress.RoleType.AssignedSingularName = "ShipToAddress";
			SalesOrderShipToAddress.RoleType.AssignedPluralName = "ShipToAddresses";
			this.Roles.ShipToAddress = SalesOrderShipToAddress.RoleType;

			var SalesOrderPreviousShipToCustomer = new RelationType(AppsDomain.Instance, new Guid("3d01b9c9-5f37-40a8-9305-8ee9e98cc192"), new Guid("e93969bc-b73c-4fec-aec2-aa557c57e844"), new Guid("0100d1ae-c1a6-4b4d-b904-59a2f337e158"));
			SalesOrderPreviousShipToCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderPreviousShipToCustomer.IsDerived = true;
			SalesOrderPreviousShipToCustomer.IsIndexed = true;

			SalesOrderPreviousShipToCustomer.AssociationType.ObjectType = this;

			SalesOrderPreviousShipToCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesOrderPreviousShipToCustomer.RoleType.AssignedSingularName = "PreviousShipToCustomer";
			SalesOrderPreviousShipToCustomer.RoleType.AssignedPluralName = "PreviousShipToCustomers";
			this.Roles.PreviousShipToCustomer = SalesOrderPreviousShipToCustomer.RoleType;

			var SalesOrderBillToContactMechanism = new RelationType(AppsDomain.Instance, new Guid("469084d5-acc5-4fc9-910b-ead4d8d4d021"), new Guid("0cc79ccb-af0e-4025-a4f1-3ec5d4f16b96"), new Guid("9640b6a4-f926-48d7-96a2-6c8a0e54cd6b"));
			SalesOrderBillToContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderBillToContactMechanism.IsIndexed = true;

			SalesOrderBillToContactMechanism.AssociationType.ObjectType = this;

			SalesOrderBillToContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			SalesOrderBillToContactMechanism.RoleType.AssignedSingularName = "BillToContactMechanism";
			SalesOrderBillToContactMechanism.RoleType.AssignedPluralName = "BillToContactMechanisms";
			this.Roles.BillToContactMechanism = SalesOrderBillToContactMechanism.RoleType;

			var SalesOrderSalesRep = new RelationType(AppsDomain.Instance, new Guid("4958ae32-6bc0-451d-bacc-8b7244a9dc56"), new Guid("bf8525ec-1fdf-4bae-9fd9-85bb4aa54400"), new Guid("6281e7d9-d7b8-4611-83f4-e1bdb44cc5f9"));
			SalesOrderSalesRep.AssignedMultiplicity = Multiplicity.ManyToMany;
			SalesOrderSalesRep.IsDerived = true;
			SalesOrderSalesRep.IsIndexed = true;

			SalesOrderSalesRep.AssociationType.ObjectType = this;

			SalesOrderSalesRep.RoleType.ObjectType = PersonClass.Instance;;
			SalesOrderSalesRep.RoleType.AssignedSingularName = "SalesRep";
			SalesOrderSalesRep.RoleType.AssignedPluralName = "SalesReps";
			this.Roles.SalesRep = SalesOrderSalesRep.RoleType;

			var SalesOrderInitialProfitMargin = new RelationType(AppsDomain.Instance, new Guid("4f3cf098-b9d8-4c10-8317-ea2c05ebc4b0"), new Guid("6d3492d0-dda6-41a0-a7e4-32bbccb237f5"), new Guid("4ab44f50-c591-47ec-b6ce-130b5e8791f8"));
			SalesOrderInitialProfitMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderInitialProfitMargin.IsDerived = true;
			SalesOrderInitialProfitMargin.AssociationType.ObjectType = this;

			SalesOrderInitialProfitMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderInitialProfitMargin.RoleType.AssignedSingularName = "InitialProfitMargin";
			SalesOrderInitialProfitMargin.RoleType.AssignedPluralName = "InitialProfitMargins";
			SalesOrderInitialProfitMargin.RoleType.Scale = 2;
			SalesOrderInitialProfitMargin.RoleType.Precision = 19;
			this.Roles.InitialProfitMargin = SalesOrderInitialProfitMargin.RoleType;

			var SalesOrderPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("6a34d3be-5b38-476e-8894-24db55d44ca6"), new Guid("d814f8bc-2650-4873-b32a-b17a42c3378a"), new Guid("3321bcfc-4de1-44be-9574-3a4b2130ff57"));
			SalesOrderPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderPreviousObjectState.IsDerived = true;
			SalesOrderPreviousObjectState.IsIndexed = true;

			SalesOrderPreviousObjectState.AssociationType.ObjectType = this;

			SalesOrderPreviousObjectState.RoleType.ObjectType = SalesOrderObjectStateClass.Instance;;
			SalesOrderPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			SalesOrderPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = SalesOrderPreviousObjectState.RoleType;

			var SalesOrderTotalListPrice = new RelationType(AppsDomain.Instance, new Guid("7c5206f5-391d-485d-a030-513450f4dd2f"), new Guid("1086a778-17dd-4984-b73b-a5629a9b8e7c"), new Guid("1020ff0a-e353-418a-9111-c61a5216032d"));
			SalesOrderTotalListPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderTotalListPrice.IsDerived = true;
			SalesOrderTotalListPrice.AssociationType.ObjectType = this;

			SalesOrderTotalListPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderTotalListPrice.RoleType.AssignedSingularName = "TotalListPrice";
			SalesOrderTotalListPrice.RoleType.AssignedPluralName = "TotalListPrices";
			SalesOrderTotalListPrice.RoleType.Scale = 2;
			SalesOrderTotalListPrice.RoleType.Precision = 19;
			this.Roles.TotalListPrice = SalesOrderTotalListPrice.RoleType;

			var SalesOrderPartiallyShip = new RelationType(AppsDomain.Instance, new Guid("8f27c21b-ac66-4851-90d8-e955ef31bbec"), new Guid("bfa36bda-784b-4540-a7da-813d37e24c56"), new Guid("fc27baa3-1bdb-44a7-9848-431fbc8ef91e"));
			SalesOrderPartiallyShip.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderPartiallyShip.AssociationType.ObjectType = this;

			SalesOrderPartiallyShip.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			SalesOrderPartiallyShip.RoleType.AssignedSingularName = "PartiallyShip";
			SalesOrderPartiallyShip.RoleType.AssignedPluralName = "PartiallyShips";
			this.Roles.PartiallyShip = SalesOrderPartiallyShip.RoleType;

			var SalesOrderPaymentStatus = new RelationType(AppsDomain.Instance, new Guid("a012c48a-823a-4a4f-a251-33cfd3056ae2"), new Guid("0b2de73e-2fa1-4fa3-8df4-3c840c58babd"), new Guid("a5fab0ee-f955-4b36-a914-10479ee16b82"));
			SalesOrderPaymentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesOrderPaymentStatus.IsDerived = true;
			SalesOrderPaymentStatus.IsIndexed = true;

			SalesOrderPaymentStatus.AssociationType.ObjectType = this;

			SalesOrderPaymentStatus.RoleType.ObjectType = SalesOrderStatusClass.Instance;;
			SalesOrderPaymentStatus.RoleType.AssignedSingularName = "PaymentStatus";
			SalesOrderPaymentStatus.RoleType.AssignedPluralName = "PaymentStatuses";
			this.Roles.PaymentStatus = SalesOrderPaymentStatus.RoleType;

			var SalesOrderCustomer = new RelationType(AppsDomain.Instance, new Guid("a1d8e768-0a81-409d-ac13-7c7b8f5081f0"), new Guid("e2de9a21-d93a-4668-9991-1cda6dcab18e"), new Guid("464890a7-d099-4d3d-9ffb-66d79858a579"));
			SalesOrderCustomer.AssignedMultiplicity = Multiplicity.ManyToMany;
			SalesOrderCustomer.IsDerived = true;
			SalesOrderCustomer.IsIndexed = true;

			SalesOrderCustomer.AssociationType.ObjectType = this;

			SalesOrderCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesOrderCustomer.RoleType.AssignedSingularName = "Customer";
			SalesOrderCustomer.RoleType.AssignedPluralName = "Customers";
			this.Roles.Customer = SalesOrderCustomer.RoleType;

			var SalesOrderStore = new RelationType(AppsDomain.Instance, new Guid("a54ff0dc-5adb-4314-8081-66522431b11d"), new Guid("9af36608-dc4a-4197-a7a6-77a2cc3bdfd4"), new Guid("d40d841d-a4f0-4e14-b726-3a66f3628ead"));
			SalesOrderStore.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderStore.IsIndexed = true;

			SalesOrderStore.AssociationType.ObjectType = this;

			SalesOrderStore.RoleType.ObjectType = StoreClass.Instance;;
			SalesOrderStore.RoleType.AssignedSingularName = "Store";
			SalesOrderStore.RoleType.AssignedPluralName = "Stores";
			this.Roles.Store = SalesOrderStore.RoleType;

			var SalesOrderMaintainedMarkupPercentage = new RelationType(AppsDomain.Instance, new Guid("a5746883-0ad8-4efb-931c-799b8f33ce63"), new Guid("a6333d69-b7e9-4694-8c97-63742a532c28"), new Guid("90d4d0ec-7a65-417b-9b63-05e0fa73070a"));
			SalesOrderMaintainedMarkupPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderMaintainedMarkupPercentage.IsDerived = true;
			SalesOrderMaintainedMarkupPercentage.AssociationType.ObjectType = this;

			SalesOrderMaintainedMarkupPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderMaintainedMarkupPercentage.RoleType.AssignedSingularName = "MaintainedMarkupPercentage";
			SalesOrderMaintainedMarkupPercentage.RoleType.AssignedPluralName = "MaintainedMarkupPercentages";
			SalesOrderMaintainedMarkupPercentage.RoleType.Scale = 2;
			SalesOrderMaintainedMarkupPercentage.RoleType.Precision = 19;
			this.Roles.MaintainedMarkupPercentage = SalesOrderMaintainedMarkupPercentage.RoleType;

			var SalesOrderBillFromContactMechanism = new RelationType(AppsDomain.Instance, new Guid("aa416d3e-0f75-4fa5-97e0-ef0bc4327ea9"), new Guid("6bd25de8-38a0-4005-baae-fe1339c24bbd"), new Guid("d99b70e4-1ad2-46a3-b362-26880a843ff8"));
			SalesOrderBillFromContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderBillFromContactMechanism.IsIndexed = true;

			SalesOrderBillFromContactMechanism.AssociationType.ObjectType = this;

			SalesOrderBillFromContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			SalesOrderBillFromContactMechanism.RoleType.AssignedSingularName = "BillFromContactMechanism";
			SalesOrderBillFromContactMechanism.RoleType.AssignedPluralName = "BillFromContactMechanisms";
			this.Roles.BillFromContactMechanism = SalesOrderBillFromContactMechanism.RoleType;

			var SalesOrderPaymentMethod = new RelationType(AppsDomain.Instance, new Guid("b9f315a5-22dc-4cba-a19f-fe71fe56ca49"), new Guid("9b59abe7-e3ae-4899-a233-71e9df67555a"), new Guid("44f187d7-afed-47c8-b318-454a3982c8af"));
			SalesOrderPaymentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderPaymentMethod.IsIndexed = true;

			SalesOrderPaymentMethod.AssociationType.ObjectType = this;

			SalesOrderPaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			SalesOrderPaymentMethod.RoleType.AssignedSingularName = "PaymentMethod";
			SalesOrderPaymentMethod.RoleType.AssignedPluralName = "PaymentMethods";
			this.Roles.PaymentMethod = SalesOrderPaymentMethod.RoleType;

			var SalesOrderPlacingContactMechanism = new RelationType(AppsDomain.Instance, new Guid("ba592fc9-78bb-4102-b9b5-fa692210dc38"), new Guid("207a2983-64c8-41c1-a97f-eb1e8bb78919"), new Guid("0a0596d8-8717-466a-9321-02fc8f3410d3"));
			SalesOrderPlacingContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderPlacingContactMechanism.IsIndexed = true;

			SalesOrderPlacingContactMechanism.AssociationType.ObjectType = this;

			SalesOrderPlacingContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			SalesOrderPlacingContactMechanism.RoleType.AssignedSingularName = "PlacingContactMechanism";
			SalesOrderPlacingContactMechanism.RoleType.AssignedPluralName = "PlacingContactMechanisms";
			this.Roles.PlacingContactMechanism = SalesOrderPlacingContactMechanism.RoleType;

			var SalesOrderCurrentOrderStatus = new RelationType(AppsDomain.Instance, new Guid("c4d3ceff-ccca-47e7-9749-cfae1c1154bf"), new Guid("7c6cff28-d2b9-434c-acae-1151d1d9dcea"), new Guid("579807ac-8c19-4323-905a-068bb0bc7f9f"));
			SalesOrderCurrentOrderStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderCurrentOrderStatus.IsDerived = true;
			SalesOrderCurrentOrderStatus.IsIndexed = true;

			SalesOrderCurrentOrderStatus.AssociationType.ObjectType = this;

			SalesOrderCurrentOrderStatus.RoleType.ObjectType = SalesOrderStatusClass.Instance;;
			SalesOrderCurrentOrderStatus.RoleType.AssignedSingularName = "CurrentOrderStatus";
			SalesOrderCurrentOrderStatus.RoleType.AssignedPluralName = "CurrentOrderStatuses";
			this.Roles.CurrentOrderStatus = SalesOrderCurrentOrderStatus.RoleType;

			var SalesOrderPreviousBillToCustomer = new RelationType(AppsDomain.Instance, new Guid("c90e107b-6b47-4337-9937-391eacd1b1c5"), new Guid("f496f8ec-b2f8-4264-96bc-6d6567b46d11"), new Guid("87824813-0d60-4e7e-af9c-5ad441913820"));
			SalesOrderPreviousBillToCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderPreviousBillToCustomer.IsDerived = true;
			SalesOrderPreviousBillToCustomer.IsIndexed = true;

			SalesOrderPreviousBillToCustomer.AssociationType.ObjectType = this;

			SalesOrderPreviousBillToCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesOrderPreviousBillToCustomer.RoleType.AssignedSingularName = "PreviousBillToCustomer";
			SalesOrderPreviousBillToCustomer.RoleType.AssignedPluralName = "PreviousBillToCustomers";
			this.Roles.PreviousBillToCustomer = SalesOrderPreviousBillToCustomer.RoleType;

			var SalesOrderSalesChannel = new RelationType(AppsDomain.Instance, new Guid("ce771472-d789-4077-80bb-25622624e1df"), new Guid("6d50f1f0-8e69-4fca-960e-31c48bddadea"), new Guid("f7da8b79-e2cd-492d-a721-88d3c8fc530c"));
			SalesOrderSalesChannel.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderSalesChannel.IsIndexed = true;

			SalesOrderSalesChannel.AssociationType.ObjectType = this;

			SalesOrderSalesChannel.RoleType.ObjectType = SalesChannelClass.Instance;;
			SalesOrderSalesChannel.RoleType.AssignedSingularName = "SalesChannel";
			SalesOrderSalesChannel.RoleType.AssignedPluralName = "SalesChannels";
			this.Roles.SalesChannel = SalesOrderSalesChannel.RoleType;

			var SalesOrderPlacingCustomer = new RelationType(AppsDomain.Instance, new Guid("d6714c09-dce1-4182-aa2f-bbc887edc89a"), new Guid("9d679860-d975-4a0a-aef4-08975f45d855"), new Guid("23fc03a8-a44c-431f-bdfa-75905691764b"));
			SalesOrderPlacingCustomer.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderPlacingCustomer.IsIndexed = true;

			SalesOrderPlacingCustomer.AssociationType.ObjectType = this;

			SalesOrderPlacingCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			SalesOrderPlacingCustomer.RoleType.AssignedSingularName = "PlacingCustomer";
			SalesOrderPlacingCustomer.RoleType.AssignedPluralName = "PlacingCustomers";
			this.Roles.PlacingCustomer = SalesOrderPlacingCustomer.RoleType;

			var SalesOrderOrderStatus = new RelationType(AppsDomain.Instance, new Guid("d85bdcb7-cfce-4bfd-9fd3-dfe039138be1"), new Guid("38f0331a-3a80-4f11-b19a-cfedfe89d520"), new Guid("51aab220-38bd-42f9-b33b-ce384f0e4471"));
			SalesOrderOrderStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesOrderOrderStatus.IsDerived = true;
			SalesOrderOrderStatus.IsIndexed = true;

			SalesOrderOrderStatus.AssociationType.ObjectType = this;

			SalesOrderOrderStatus.RoleType.ObjectType = SalesOrderStatusClass.Instance;;
			SalesOrderOrderStatus.RoleType.AssignedSingularName = "OrderStatus";
			SalesOrderOrderStatus.RoleType.AssignedPluralName = "OrderStatuses";
			this.Roles.OrderStatus = SalesOrderOrderStatus.RoleType;

			var SalesOrderProformaInvoice = new RelationType(AppsDomain.Instance, new Guid("da5a63d2-33bb-4da3-a1bf-064280cac0fa"), new Guid("05da158d-3f90-4c1f-9bdf-22263b285ed1"), new Guid("d2390ce6-ea3d-43da-9a48-966e9274bcc2"));
			SalesOrderProformaInvoice.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderProformaInvoice.IsDerived = true;
			SalesOrderProformaInvoice.IsIndexed = true;

			SalesOrderProformaInvoice.AssociationType.ObjectType = this;

			SalesOrderProformaInvoice.RoleType.ObjectType = SalesInvoiceClass.Instance;;
			SalesOrderProformaInvoice.RoleType.AssignedSingularName = "ProformaInvoice";
			SalesOrderProformaInvoice.RoleType.AssignedPluralName = "ProformaInvoices";
			this.Roles.ProformaInvoice = SalesOrderProformaInvoice.RoleType;

			var SalesOrderSalesOrderItem = new RelationType(AppsDomain.Instance, new Guid("eb5a3564-996d-4bbe-b592-6205adad93b8"), new Guid("37612ba0-d689-49ca-9005-3b3bf21cd272"), new Guid("bd5d13f3-c1e7-4eea-9c33-09f4b47289f3"));
			SalesOrderSalesOrderItem.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesOrderSalesOrderItem.IsIndexed = true;

			SalesOrderSalesOrderItem.AssociationType.ObjectType = this;

			SalesOrderSalesOrderItem.RoleType.ObjectType = SalesOrderItemClass.Instance;;
			SalesOrderSalesOrderItem.RoleType.AssignedSingularName = "SalesOrderItem";
			SalesOrderSalesOrderItem.RoleType.AssignedPluralName = "SalesOrderItems";
			this.Roles.SalesOrderItem = SalesOrderSalesOrderItem.RoleType;

			var SalesOrderCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("f20ac339-0761-410b-bbb6-6fb393bcba8a"), new Guid("cf9fcfa0-a862-4cb2-88b4-c4dcd6d0034d"), new Guid("6ec955c9-6d25-45b3-a4d1-5e4270d28750"));
			SalesOrderCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderCurrentObjectState.IsDerived = true;
			SalesOrderCurrentObjectState.IsIndexed = true;

			SalesOrderCurrentObjectState.AssociationType.ObjectType = this;

			SalesOrderCurrentObjectState.RoleType.ObjectType = SalesOrderObjectStateClass.Instance;;
			SalesOrderCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			SalesOrderCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = SalesOrderCurrentObjectState.RoleType;

			var SalesOrderInitialMarkupPercentage = new RelationType(AppsDomain.Instance, new Guid("f7b7b4d2-fd9e-4d29-99be-f69b2967cc3b"), new Guid("ae9335e4-4d72-40fc-b028-dcfd7ea67cfa"), new Guid("d70334f4-c9f6-4804-a887-2969d75c8644"));
			SalesOrderInitialMarkupPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderInitialMarkupPercentage.IsDerived = true;
			SalesOrderInitialMarkupPercentage.AssociationType.ObjectType = this;

			SalesOrderInitialMarkupPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderInitialMarkupPercentage.RoleType.AssignedSingularName = "InitialMarkupPercentage";
			SalesOrderInitialMarkupPercentage.RoleType.AssignedPluralName = "InitialMarkupPercentages";
			SalesOrderInitialMarkupPercentage.RoleType.Scale = 2;
			SalesOrderInitialMarkupPercentage.RoleType.Precision = 19;
			this.Roles.InitialMarkupPercentage = SalesOrderInitialMarkupPercentage.RoleType;

			var SalesOrderTakenByInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("ff972b6c-ab12-4596-a1bc-18f93127ac31"), new Guid("556771a7-0f67-4061-8c88-c8401bf0b1c1"), new Guid("6d7ee57e-35b3-4a19-ad1f-4a1850c41568"));
			SalesOrderTakenByInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderTakenByInternalOrganisation.IsIndexed = true;

			SalesOrderTakenByInternalOrganisation.AssociationType.ObjectType = this;

			SalesOrderTakenByInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesOrderTakenByInternalOrganisation.RoleType.AssignedSingularName = "TakenByInternalOrganisation";
			SalesOrderTakenByInternalOrganisation.RoleType.AssignedPluralName = "TakenByInternalOrganisations";
			this.Roles.TakenByInternalOrganisation = SalesOrderTakenByInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesOrderClass.Instance.ConcreteRoles.TakenByContactMechanism = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TakenByContactMechanism]; 

			SalesOrderClass.Instance.ConcreteRoles.ShipmentStatus = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentStatus]; 

			SalesOrderClass.Instance.ConcreteRoles.CurrentShipmentStatus = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentShipmentStatus]; 

			SalesOrderClass.Instance.ConcreteRoles.CurrentPaymentStatus = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPaymentStatus]; 

			SalesOrderClass.Instance.ConcreteRoles.ShipToCustomer = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToCustomer]; 

			SalesOrderClass.Instance.ConcreteRoles.BillToCustomer = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToCustomer]; 

			SalesOrderClass.Instance.ConcreteRoles.TotalPurchasePrice = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalPurchasePrice]; 

			SalesOrderClass.Instance.ConcreteRoles.ShipmentMethod = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentMethod]; 

			SalesOrderClass.Instance.ConcreteRoles.TotalListPriceCustomerCurrency = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalListPriceCustomerCurrency]; 

			SalesOrderClass.Instance.ConcreteRoles.MaintainedProfitMargin = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaintainedProfitMargin]; 

			SalesOrderClass.Instance.ConcreteRoles.ShipToAddress = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToAddress]; 

			SalesOrderClass.Instance.ConcreteRoles.PreviousShipToCustomer = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousShipToCustomer]; 

			SalesOrderClass.Instance.ConcreteRoles.BillToContactMechanism = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToContactMechanism]; 

			SalesOrderClass.Instance.ConcreteRoles.SalesRep = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRep]; 

			SalesOrderClass.Instance.ConcreteRoles.InitialProfitMargin = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialProfitMargin]; 

			SalesOrderClass.Instance.ConcreteRoles.PreviousObjectState = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			SalesOrderClass.Instance.ConcreteRoles.TotalListPrice = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalListPrice]; 

			SalesOrderClass.Instance.ConcreteRoles.PartiallyShip = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartiallyShip]; 

			SalesOrderClass.Instance.ConcreteRoles.PaymentStatus = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentStatus]; 

			SalesOrderClass.Instance.ConcreteRoles.Customer = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Customer]; 

			SalesOrderClass.Instance.ConcreteRoles.Store = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 

			SalesOrderClass.Instance.ConcreteRoles.MaintainedMarkupPercentage = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaintainedMarkupPercentage]; 

			SalesOrderClass.Instance.ConcreteRoles.BillFromContactMechanism = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromContactMechanism]; 

			SalesOrderClass.Instance.ConcreteRoles.PaymentMethod = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 

			SalesOrderClass.Instance.ConcreteRoles.PlacingContactMechanism = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PlacingContactMechanism]; 

			SalesOrderClass.Instance.ConcreteRoles.CurrentOrderStatus = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentOrderStatus]; 

			SalesOrderClass.Instance.ConcreteRoles.PreviousBillToCustomer = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousBillToCustomer]; 

			SalesOrderClass.Instance.ConcreteRoles.SalesChannel = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesChannel]; 

			SalesOrderClass.Instance.ConcreteRoles.PlacingCustomer = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PlacingCustomer]; 

			SalesOrderClass.Instance.ConcreteRoles.OrderStatus = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderStatus]; 

			SalesOrderClass.Instance.ConcreteRoles.ProformaInvoice = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProformaInvoice]; 

			SalesOrderClass.Instance.ConcreteRoles.SalesOrderItem = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOrderItem]; 

			SalesOrderClass.Instance.ConcreteRoles.CurrentObjectState = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			SalesOrderClass.Instance.ConcreteRoles.InitialMarkupPercentage = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialMarkupPercentage]; 

			SalesOrderClass.Instance.ConcreteRoles.TakenByInternalOrganisation = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TakenByInternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType TakenByContactMechanism;
			internal RoleType ShipmentStatus;
			internal RoleType CurrentShipmentStatus;
			internal RoleType CurrentPaymentStatus;
			internal RoleType ShipToCustomer;
			internal RoleType BillToCustomer;
			internal RoleType TotalPurchasePrice;
			internal RoleType ShipmentMethod;
			internal RoleType TotalListPriceCustomerCurrency;
			internal RoleType MaintainedProfitMargin;
			internal RoleType ShipToAddress;
			internal RoleType PreviousShipToCustomer;
			internal RoleType BillToContactMechanism;
			internal RoleType SalesRep;
			internal RoleType InitialProfitMargin;
			internal RoleType PreviousObjectState;
			internal RoleType TotalListPrice;
			internal RoleType PartiallyShip;
			internal RoleType PaymentStatus;
			internal RoleType Customer;
			internal RoleType Store;
			internal RoleType MaintainedMarkupPercentage;
			internal RoleType BillFromContactMechanism;
			internal RoleType PaymentMethod;
			internal RoleType PlacingContactMechanism;
			internal RoleType CurrentOrderStatus;
			internal RoleType PreviousBillToCustomer;
			internal RoleType SalesChannel;
			internal RoleType PlacingCustomer;
			internal RoleType OrderStatus;
			internal RoleType ProformaInvoice;
			internal RoleType SalesOrderItem;
			internal RoleType CurrentObjectState;
			internal RoleType InitialMarkupPercentage;
			internal RoleType TakenByInternalOrganisation;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType TakenByContactMechanism;
			internal ConcreteRoleType ShipmentStatus;
			internal ConcreteRoleType CurrentShipmentStatus;
			internal ConcreteRoleType CurrentPaymentStatus;
			internal ConcreteRoleType ShipToCustomer;
			internal ConcreteRoleType BillToCustomer;
			internal ConcreteRoleType TotalPurchasePrice;
			internal ConcreteRoleType ShipmentMethod;
			internal ConcreteRoleType TotalListPriceCustomerCurrency;
			internal ConcreteRoleType MaintainedProfitMargin;
			internal ConcreteRoleType ShipToAddress;
			internal ConcreteRoleType PreviousShipToCustomer;
			internal ConcreteRoleType BillToContactMechanism;
			internal ConcreteRoleType SalesRep;
			internal ConcreteRoleType InitialProfitMargin;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType TotalListPrice;
			internal ConcreteRoleType PartiallyShip;
			internal ConcreteRoleType PaymentStatus;
			internal ConcreteRoleType Customer;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType MaintainedMarkupPercentage;
			internal ConcreteRoleType BillFromContactMechanism;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType PlacingContactMechanism;
			internal ConcreteRoleType CurrentOrderStatus;
			internal ConcreteRoleType PreviousBillToCustomer;
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType PlacingCustomer;
			internal ConcreteRoleType OrderStatus;
			internal ConcreteRoleType ProformaInvoice;
			internal ConcreteRoleType SalesOrderItem;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType InitialMarkupPercentage;
			internal ConcreteRoleType TakenByInternalOrganisation;
			internal ConcreteRoleType CustomerCurrency;
			internal ConcreteRoleType TotalBasePriceCustomerCurrency;
			internal ConcreteRoleType TotalIncVatCustomerCurrency;
			internal ConcreteRoleType TotalDiscountCustomerCurrency;
			internal ConcreteRoleType CustomerReference;
			internal ConcreteRoleType Fee;
			internal ConcreteRoleType TotalExVat;
			internal ConcreteRoleType OrderTerm;
			internal ConcreteRoleType TotalVat;
			internal ConcreteRoleType TotalSurcharge;
			internal ConcreteRoleType ValidOrderItem;
			internal ConcreteRoleType OrderNumber;
			internal ConcreteRoleType TotalVatCustomerCurrency;
			internal ConcreteRoleType TotalDiscount;
			internal ConcreteRoleType Message;
			internal ConcreteRoleType TotalShippingAndHandlingCustomerCurrency;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DiscountAdjustment;
			internal ConcreteRoleType OrderKind;
			internal ConcreteRoleType TotalIncVat;
			internal ConcreteRoleType TotalSurchargeCustomerCurrency;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType TotalFeeCustomerCurrency;
			internal ConcreteRoleType TotalShippingAndHandling;
			internal ConcreteRoleType ShippingAndHandlingCharge;
			internal ConcreteRoleType OrderDate;
			internal ConcreteRoleType TotalExVatCustomerCurrency;
			internal ConcreteRoleType DeliveryDate;
			internal ConcreteRoleType TotalBasePrice;
			internal ConcreteRoleType TotalFee;
			internal ConcreteRoleType SurchargeAdjustment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType Locale;

		}
	}public partial class WarehouseClass : Class
	{
		public static WarehouseClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WarehouseClass() : base(AppsDomain.Instance, new Guid("71e50a16-fc60-4177-aed0-e89c7f10f465"))
        {
			this.SingularName = "Warehouse";
			this.PluralName = "Warehouses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("23110a09-0bff-4b96-a3fd-d38817a73364"))
			{
				Subtype = Instance,
				Supertype = FacilityInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType MadeUpOf;
			internal ConcreteRoleType SquareFootage;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType FacilityContactMechanism;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class AgreementPricingProgramClass : Class
	{
		public static AgreementPricingProgramClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AgreementPricingProgramClass() : base(AppsDomain.Instance, new Guid("72237d95-e9c0-42c1-afe3-ec34f2e6cbfb"))
        {
			this.SingularName = "AgreementPricingProgram";
			this.PluralName = "AgreementPricingPrograms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ae18b076-c0c8-4f03-8666-30981e2b5919"))
			{
				Subtype = Instance,
				Supertype = AgreementItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Text;
			internal ConcreteRoleType Addendum;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType AgreementTerm;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AgreementTermInterface: Interface
	{
		public static AgreementTermInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal AgreementTermInterface() : base(AppsDomain.Instance, new Guid("734be1c9-e6af-49b7-8fe8-331cd7036e2e"))
        {
			this.SingularName = "AgreementTerm";
			this.PluralName = "AgreementTerms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a05aa047-e2f2-47dd-844f-4ac7ece38bf6"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var AgreementTermTermValue = new RelationType(AppsDomain.Instance, new Guid("85cd1bbd-f2ad-454f-8f04-cdea48ce6196"), new Guid("c28f6487-83a7-49b3-911d-21f691ae7d02"), new Guid("7eb5e9b4-834f-4774-ac40-11bd455a6ea8"));
			AgreementTermTermValue.AssignedMultiplicity = Multiplicity.OneToOne;
			AgreementTermTermValue.AssociationType.ObjectType = this;

			AgreementTermTermValue.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AgreementTermTermValue.RoleType.AssignedSingularName = "TermValue";
			AgreementTermTermValue.RoleType.AssignedPluralName = "TermValues";
			AgreementTermTermValue.RoleType.Size = -1;
			this.Roles.TermValue = AgreementTermTermValue.RoleType;

			var AgreementTermTermType = new RelationType(AppsDomain.Instance, new Guid("b38a35f7-3bf5-4c9c-b2ea-6b220de43e20"), new Guid("a2786ad1-c4b0-4394-8841-ad14de467bc4"), new Guid("7e1163db-78d1-4c63-b10a-d1315ccb223c"));
			AgreementTermTermType.AssignedMultiplicity = Multiplicity.ManyToOne;
			AgreementTermTermType.IsIndexed = true;

			AgreementTermTermType.AssociationType.ObjectType = this;

			AgreementTermTermType.RoleType.ObjectType = TermTypeClass.Instance;;
			AgreementTermTermType.RoleType.AssignedSingularName = "TermType";
			AgreementTermTermType.RoleType.AssignedPluralName = "TermTypes";
			this.Roles.TermType = AgreementTermTermType.RoleType;

			var AgreementTermDescription = new RelationType(AppsDomain.Instance, new Guid("d9a68cc0-8fea-4610-9853-f1fca33cbc9a"), new Guid("35b4a0af-89c6-44e0-981f-439b632a6d51"), new Guid("9b734740-dc58-428e-8031-de5341e5aae7"));
			AgreementTermDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			AgreementTermDescription.AssociationType.ObjectType = this;

			AgreementTermDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AgreementTermDescription.RoleType.AssignedSingularName = "Description";
			AgreementTermDescription.RoleType.AssignedPluralName = "Descriptions";
			AgreementTermDescription.RoleType.Size = 256;
			this.Roles.Description = AgreementTermDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			LegalTermClass.Instance.ConcreteRoles.TermValue = LegalTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermValue]; 
			IncentiveClass.Instance.ConcreteRoles.TermValue = IncentiveClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermValue]; 
			FinancialTermClass.Instance.ConcreteRoles.TermValue = FinancialTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermValue]; 
			InvoiceTermClass.Instance.ConcreteRoles.TermValue = InvoiceTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermValue]; 
			ThresholdClass.Instance.ConcreteRoles.TermValue = ThresholdClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermValue]; 

			LegalTermClass.Instance.ConcreteRoles.TermType = LegalTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermType]; 
			IncentiveClass.Instance.ConcreteRoles.TermType = IncentiveClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermType]; 
			FinancialTermClass.Instance.ConcreteRoles.TermType = FinancialTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermType]; 
			InvoiceTermClass.Instance.ConcreteRoles.TermType = InvoiceTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermType]; 
			ThresholdClass.Instance.ConcreteRoles.TermType = ThresholdClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermType]; 

			LegalTermClass.Instance.ConcreteRoles.Description = LegalTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			IncentiveClass.Instance.ConcreteRoles.Description = IncentiveClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			FinancialTermClass.Instance.ConcreteRoles.Description = FinancialTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			InvoiceTermClass.Instance.ConcreteRoles.Description = InvoiceTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ThresholdClass.Instance.ConcreteRoles.Description = ThresholdClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType TermValue;
			internal RoleType TermType;
			internal RoleType Description;

		}
	}public partial class SalesRepRevenueClass : Class
	{
		public static SalesRepRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesRepRevenueClass() : base(AppsDomain.Instance, new Guid("749e2a92-b397-4d36-b965-6073d45a4135"))
        {
			this.SingularName = "SalesRepRevenue";
			this.PluralName = "SalesRepRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("67dcf947-3f5b-4377-90f1-2035e4439def"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("aaf046c4-d170-4b94-91fc-a0ede06b9913"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesRepRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("0bf9f020-7704-4e4e-92f6-06e747dc9463"), new Guid("7ca286bb-a26d-4b7a-bfbe-8305d885d035"), new Guid("7cfa4dad-e2a4-4c95-b25f-476a8a2b7521"));
			SalesRepRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepRevenueRevenue.AssociationType.ObjectType = this;

			SalesRepRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesRepRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			SalesRepRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			SalesRepRevenueRevenue.RoleType.Scale = 2;
			SalesRepRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = SalesRepRevenueRevenue.RoleType;

			var SalesRepRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("70b2fc04-ce4e-4af7-b287-02883fe660e9"), new Guid("48f05073-776f-4465-9763-ca71c785c058"), new Guid("d5009f5b-b990-465d-b868-0bf977b33a4c"));
			SalesRepRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepRevenueCurrency.IsIndexed = true;

			SalesRepRevenueCurrency.AssociationType.ObjectType = this;

			SalesRepRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			SalesRepRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			SalesRepRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = SalesRepRevenueCurrency.RoleType;

			var SalesRepRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("730e4a76-6af4-441e-8d82-1f3e5807d5a5"), new Guid("6ad611d9-a2a1-46cc-9ac2-28832723f063"), new Guid("5a92ec5a-4128-46ba-9a75-112592f2662d"));
			SalesRepRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepRevenueInternalOrganisation.IsIndexed = true;

			SalesRepRevenueInternalOrganisation.AssociationType.ObjectType = this;

			SalesRepRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesRepRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			SalesRepRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = SalesRepRevenueInternalOrganisation.RoleType;

			var SalesRepRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("89ff9736-f2d1-4609-ac99-b60f5b37f406"), new Guid("86e77422-4347-4e97-99ba-1c3b7cf57220"), new Guid("5c19cc4e-4599-48b7-ab74-a1be3509317d"));
			SalesRepRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepRevenueMonth.AssociationType.ObjectType = this;

			SalesRepRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesRepRevenueMonth.RoleType.AssignedSingularName = "Month";
			SalesRepRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = SalesRepRevenueMonth.RoleType;

			var SalesRepRevenueSalesRepName = new RelationType(AppsDomain.Instance, new Guid("b1aa9e43-5ccc-4e1d-821e-39af02321a79"), new Guid("092108de-fb58-4fb2-b844-443fd476a383"), new Guid("d1667908-4149-45dd-949e-ab00fbf3c7c4"));
			SalesRepRevenueSalesRepName.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepRevenueSalesRepName.AssociationType.ObjectType = this;

			SalesRepRevenueSalesRepName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			SalesRepRevenueSalesRepName.RoleType.AssignedSingularName = "SalesRepName";
			SalesRepRevenueSalesRepName.RoleType.AssignedPluralName = "SalesRepNames";
			SalesRepRevenueSalesRepName.RoleType.Size = 256;
			this.Roles.SalesRepName = SalesRepRevenueSalesRepName.RoleType;

			var SalesRepRevenueYear = new RelationType(AppsDomain.Instance, new Guid("b72d2ab7-ad47-41dd-8dab-4b6364efc342"), new Guid("6160b809-a3a4-434a-b05a-cfdb1a3a1dd4"), new Guid("6e712c98-649e-49cc-9484-0a0d407f02a7"));
			SalesRepRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepRevenueYear.AssociationType.ObjectType = this;

			SalesRepRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesRepRevenueYear.RoleType.AssignedSingularName = "Year";
			SalesRepRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = SalesRepRevenueYear.RoleType;

			var SalesRepRevenueSalesRep = new RelationType(AppsDomain.Instance, new Guid("be530b0c-6ab9-43a2-a974-f06015ae3480"), new Guid("cd786202-3d96-4f6b-94af-27ffb92608e3"), new Guid("0bebaa7b-9332-44a6-abff-454175d2f2a5"));
			SalesRepRevenueSalesRep.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepRevenueSalesRep.IsIndexed = true;

			SalesRepRevenueSalesRep.AssociationType.ObjectType = this;

			SalesRepRevenueSalesRep.RoleType.ObjectType = PersonClass.Instance;;
			SalesRepRevenueSalesRep.RoleType.AssignedSingularName = "SalesRep";
			SalesRepRevenueSalesRep.RoleType.AssignedPluralName = "SalesReps";
			this.Roles.SalesRep = SalesRepRevenueSalesRep.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesRepRevenueClass.Instance.ConcreteRoles.Revenue = SalesRepRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			SalesRepRevenueClass.Instance.ConcreteRoles.Currency = SalesRepRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			SalesRepRevenueClass.Instance.ConcreteRoles.InternalOrganisation = SalesRepRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			SalesRepRevenueClass.Instance.ConcreteRoles.Month = SalesRepRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			SalesRepRevenueClass.Instance.ConcreteRoles.SalesRepName = SalesRepRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRepName]; 

			SalesRepRevenueClass.Instance.ConcreteRoles.Year = SalesRepRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			SalesRepRevenueClass.Instance.ConcreteRoles.SalesRep = SalesRepRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRep]; 


		}

		internal class RolesType
		{
			internal RoleType Revenue;
			internal RoleType Currency;
			internal RoleType InternalOrganisation;
			internal RoleType Month;
			internal RoleType SalesRepName;
			internal RoleType Year;
			internal RoleType SalesRep;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType SalesRepName;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType SalesRep;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EmploymentApplicationSourceClass : Class
	{
		public static EmploymentApplicationSourceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EmploymentApplicationSourceClass() : base(AppsDomain.Instance, new Guid("74cd22cf-1796-4c65-85df-9c3e09883843"))
        {
			this.SingularName = "EmploymentApplicationSource";
			this.PluralName = "EmploymentApplicationSources";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("27259086-0943-4308-8d63-e6a971d27e97"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class EngagementClass : Class
	{
		public static EngagementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EngagementClass() : base(AppsDomain.Instance, new Guid("752a68b0-836e-4cd5-92d5-ebf2bfeda491"))
        {
			this.SingularName = "Engagement";
			this.PluralName = "Engagements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0549ad5b-3986-403e-9841-bd78f9283bfe"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var EngagementAgreement = new RelationType(AppsDomain.Instance, new Guid("135792e4-42ad-4bf5-914b-ffc154330cd1"), new Guid("d0975157-1342-4a01-9fec-2a38f68a6080"), new Guid("3cd0c697-6767-429a-8f34-e648b4fda46c"));
			EngagementAgreement.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementAgreement.IsIndexed = true;

			EngagementAgreement.AssociationType.ObjectType = this;

			EngagementAgreement.RoleType.ObjectType = AgreementInterface.Instance;;
			EngagementAgreement.RoleType.AssignedSingularName = "Agreement";
			EngagementAgreement.RoleType.AssignedPluralName = "Agreements";
			this.Roles.Agreement = EngagementAgreement.RoleType;

			var EngagementPlacingContactMechanism = new RelationType(AppsDomain.Instance, new Guid("1fb112f4-9628-40a8-9531-2d9ad24103ff"), new Guid("ad13c054-b721-4941-ad25-cc43936fed36"), new Guid("9c189e14-b734-41b5-9012-8651986039d7"));
			EngagementPlacingContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementPlacingContactMechanism.IsIndexed = true;

			EngagementPlacingContactMechanism.AssociationType.ObjectType = this;

			EngagementPlacingContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			EngagementPlacingContactMechanism.RoleType.AssignedSingularName = "PlacingContactMechanism";
			EngagementPlacingContactMechanism.RoleType.AssignedPluralName = "PlacingContactMechanisms";
			this.Roles.PlacingContactMechanism = EngagementPlacingContactMechanism.RoleType;

			var EngagementMaximumAmount = new RelationType(AppsDomain.Instance, new Guid("2e703224-c40a-45ee-8703-cafe11eda70a"), new Guid("f50ccbe1-9277-44a3-bb9b-5837124ddb6c"), new Guid("468b2214-51d3-47e0-9207-9711f71f45ca"));
			EngagementMaximumAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementMaximumAmount.AssociationType.ObjectType = this;

			EngagementMaximumAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			EngagementMaximumAmount.RoleType.AssignedSingularName = "MaximumAmount";
			EngagementMaximumAmount.RoleType.AssignedPluralName = "MaximumAmounts";
			EngagementMaximumAmount.RoleType.Scale = 2;
			EngagementMaximumAmount.RoleType.Precision = 19;
			this.Roles.MaximumAmount = EngagementMaximumAmount.RoleType;

			var EngagementBillToContactMechanism = new RelationType(AppsDomain.Instance, new Guid("4afffb12-3a70-4903-af99-ed814fd6a444"), new Guid("1bf53c71-0b09-4053-8bab-73d783fdfd62"), new Guid("dc2b8ab4-6eff-488c-955b-6329c1e1bfc3"));
			EngagementBillToContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementBillToContactMechanism.IsIndexed = true;

			EngagementBillToContactMechanism.AssociationType.ObjectType = this;

			EngagementBillToContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			EngagementBillToContactMechanism.RoleType.AssignedSingularName = "BillToContactMechanism";
			EngagementBillToContactMechanism.RoleType.AssignedPluralName = "BillToContactMechanisms";
			this.Roles.BillToContactMechanism = EngagementBillToContactMechanism.RoleType;

			var EngagementDescription = new RelationType(AppsDomain.Instance, new Guid("55102c87-3cea-4c53-bafb-eb94bdda2b44"), new Guid("7453a2d2-368d-42dc-9304-c4706215361f"), new Guid("97a86549-607b-48f0-bd92-4b3079a9f659"));
			EngagementDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementDescription.AssociationType.ObjectType = this;

			EngagementDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EngagementDescription.RoleType.AssignedSingularName = "Description";
			EngagementDescription.RoleType.AssignedPluralName = "Descriptions";
			EngagementDescription.RoleType.Size = 256;
			this.Roles.Description = EngagementDescription.RoleType;

			var EngagementBillToParty = new RelationType(AppsDomain.Instance, new Guid("5b758dbc-11f6-4ac4-8f2b-639937814cae"), new Guid("9257851c-ab25-41c2-bbe5-6fb6ff8942af"), new Guid("16370a01-5eaf-4c19-ad27-f0ede8f1ffef"));
			EngagementBillToParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementBillToParty.IsIndexed = true;

			EngagementBillToParty.AssociationType.ObjectType = this;

			EngagementBillToParty.RoleType.ObjectType = PartyInterface.Instance;;
			EngagementBillToParty.RoleType.AssignedSingularName = "BillToParty";
			EngagementBillToParty.RoleType.AssignedPluralName = "BillToParties";
			this.Roles.BillToParty = EngagementBillToParty.RoleType;

			var EngagementPlacingParty = new RelationType(AppsDomain.Instance, new Guid("5f524932-4787-4bb4-8785-9a4f67dbb6ed"), new Guid("8dee87d0-f7ae-4f0c-b890-63e8642c4c90"), new Guid("553bf637-0527-40cb-a298-4b41530f0950"));
			EngagementPlacingParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementPlacingParty.IsIndexed = true;

			EngagementPlacingParty.AssociationType.ObjectType = this;

			EngagementPlacingParty.RoleType.ObjectType = PartyInterface.Instance;;
			EngagementPlacingParty.RoleType.AssignedSingularName = "PlacingParty";
			EngagementPlacingParty.RoleType.AssignedPluralName = "PlacingParties";
			this.Roles.PlacingParty = EngagementPlacingParty.RoleType;

			var EngagementTakenViaInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("63b73232-d81c-448f-92b0-eac314fcf41d"), new Guid("fce9a377-1b5a-4b23-bf1f-3f82a984cc4f"), new Guid("882c84e0-c101-42cf-bb98-4939d68a5011"));
			EngagementTakenViaInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementTakenViaInternalOrganisation.IsIndexed = true;

			EngagementTakenViaInternalOrganisation.AssociationType.ObjectType = this;

			EngagementTakenViaInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			EngagementTakenViaInternalOrganisation.RoleType.AssignedSingularName = "TakenViaInternalOrganisation";
			EngagementTakenViaInternalOrganisation.RoleType.AssignedPluralName = "TakenViaInternalOrganisations";
			this.Roles.TakenViaInternalOrganisation = EngagementTakenViaInternalOrganisation.RoleType;

			var EngagementStartDate = new RelationType(AppsDomain.Instance, new Guid("6ca9444e-3e1c-4631-ad4e-1025fc85c1a4"), new Guid("9e82a268-e421-42f4-8b6f-460b3b1ce8aa"), new Guid("108359bc-bb0a-426e-a6eb-7ab6de874721"));
			EngagementStartDate.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementStartDate.AssociationType.ObjectType = this;

			EngagementStartDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			EngagementStartDate.RoleType.AssignedSingularName = "StartDate";
			EngagementStartDate.RoleType.AssignedPluralName = "StartDates";
			this.Roles.StartDate = EngagementStartDate.RoleType;

			var EngagementTakenViaContactMechanism = new RelationType(AppsDomain.Instance, new Guid("83acc3c0-e87a-48fd-9c10-5070cd7c2a3d"), new Guid("4c014a78-e093-46e7-9c92-6404b3351f63"), new Guid("e443cf26-a947-4bee-b0a9-3588434edb09"));
			EngagementTakenViaContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementTakenViaContactMechanism.IsIndexed = true;

			EngagementTakenViaContactMechanism.AssociationType.ObjectType = this;

			EngagementTakenViaContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			EngagementTakenViaContactMechanism.RoleType.AssignedSingularName = "TakenViaContactMechanism";
			EngagementTakenViaContactMechanism.RoleType.AssignedPluralName = "TakenViaContactMechanism";
			this.Roles.TakenViaContactMechanism = EngagementTakenViaContactMechanism.RoleType;

			var EngagementEstimatedAmount = new RelationType(AppsDomain.Instance, new Guid("9bc7fbff-11dd-434e-91ff-7cef4e225bb3"), new Guid("950e4e27-42a4-4feb-bc7c-88a1045f6cc6"), new Guid("f7234a3a-cb7c-4d92-903a-710ef833773b"));
			EngagementEstimatedAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementEstimatedAmount.AssociationType.ObjectType = this;

			EngagementEstimatedAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			EngagementEstimatedAmount.RoleType.AssignedSingularName = "EstimatedAmount";
			EngagementEstimatedAmount.RoleType.AssignedPluralName = "EstimatedAmounts";
			EngagementEstimatedAmount.RoleType.Scale = 2;
			EngagementEstimatedAmount.RoleType.Precision = 19;
			this.Roles.EstimatedAmount = EngagementEstimatedAmount.RoleType;

			var EngagementEndDate = new RelationType(AppsDomain.Instance, new Guid("d9df5d5e-e0cc-4c9e-9e0a-dc5423561774"), new Guid("4fec3a1a-28d4-4984-a82a-aee949ba79d5"), new Guid("abcb554b-44f8-424c-b991-1e56f15c5412"));
			EngagementEndDate.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementEndDate.AssociationType.ObjectType = this;

			EngagementEndDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			EngagementEndDate.RoleType.AssignedSingularName = "EndDate";
			EngagementEndDate.RoleType.AssignedPluralName = "EndDates";
			this.Roles.EndDate = EngagementEndDate.RoleType;

			var EngagementContractDate = new RelationType(AppsDomain.Instance, new Guid("e1081976-b7e4-4e8e-85de-bd6ff096b39b"), new Guid("947ccaf8-9264-4703-86a8-58818128ff84"), new Guid("5670bb8d-64a0-4492-9bb7-383b27144b31"));
			EngagementContractDate.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementContractDate.AssociationType.ObjectType = this;

			EngagementContractDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			EngagementContractDate.RoleType.AssignedSingularName = "ContractDate";
			EngagementContractDate.RoleType.AssignedPluralName = "ContractDates";
			this.Roles.ContractDate = EngagementContractDate.RoleType;

			var EngagementEngagementItem = new RelationType(AppsDomain.Instance, new Guid("ec51db38-d0de-430d-82cc-1105f336977b"), new Guid("f1a3abd2-636b-441a-90fc-9ac4cd9d0936"), new Guid("237743f7-01c5-4762-b034-c43854f22157"));
			EngagementEngagementItem.AssignedMultiplicity = Multiplicity.OneToMany;
			EngagementEngagementItem.IsIndexed = true;

			EngagementEngagementItem.AssociationType.ObjectType = this;

			EngagementEngagementItem.RoleType.ObjectType = EngagementItemInterface.Instance;;
			EngagementEngagementItem.RoleType.AssignedSingularName = "EngagementItem";
			EngagementEngagementItem.RoleType.AssignedPluralName = "EngagementItems";
			this.Roles.EngagementItem = EngagementEngagementItem.RoleType;

			var EngagementClientPurchaseOrderNumber = new RelationType(AppsDomain.Instance, new Guid("f444a4cf-9722-420b-8ba1-0591492929e5"), new Guid("2aaf6afe-5fee-460f-ab37-75aa27be40f1"), new Guid("ffb337c1-e7d0-4b86-b694-43b927efad34"));
			EngagementClientPurchaseOrderNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementClientPurchaseOrderNumber.AssociationType.ObjectType = this;

			EngagementClientPurchaseOrderNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EngagementClientPurchaseOrderNumber.RoleType.AssignedSingularName = "ClientPurchaseOrderNumber";
			EngagementClientPurchaseOrderNumber.RoleType.AssignedPluralName = "ClientPurchaseOrderNumbers";
			EngagementClientPurchaseOrderNumber.RoleType.Size = 256;
			this.Roles.ClientPurchaseOrderNumber = EngagementClientPurchaseOrderNumber.RoleType;

			var EngagementTakenViaOrganisationContactRelationship = new RelationType(AppsDomain.Instance, new Guid("f7e10109-a4f2-4a54-b810-b00edf8a9330"), new Guid("5b22ae85-d5ae-41f7-a461-201ae48db339"), new Guid("bdcce46f-e800-43fa-8cbc-2d4c5f65a7b2"));
			EngagementTakenViaOrganisationContactRelationship.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementTakenViaOrganisationContactRelationship.IsIndexed = true;

			EngagementTakenViaOrganisationContactRelationship.AssociationType.ObjectType = this;

			EngagementTakenViaOrganisationContactRelationship.RoleType.ObjectType = OrganisationContactRelationshipClass.Instance;;
			EngagementTakenViaOrganisationContactRelationship.RoleType.AssignedSingularName = "TakenViaOrganisationContactRelationship";
			EngagementTakenViaOrganisationContactRelationship.RoleType.AssignedPluralName = "TakenViaOrganisationContactRelationships";
			this.Roles.TakenViaOrganisationContactRelationship = EngagementTakenViaOrganisationContactRelationship.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EngagementClass.Instance.ConcreteRoles.Agreement = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Agreement]; 

			EngagementClass.Instance.ConcreteRoles.PlacingContactMechanism = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PlacingContactMechanism]; 

			EngagementClass.Instance.ConcreteRoles.MaximumAmount = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaximumAmount]; 

			EngagementClass.Instance.ConcreteRoles.BillToContactMechanism = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToContactMechanism]; 

			EngagementClass.Instance.ConcreteRoles.Description = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			EngagementClass.Instance.ConcreteRoles.BillToParty = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToParty]; 

			EngagementClass.Instance.ConcreteRoles.PlacingParty = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PlacingParty]; 

			EngagementClass.Instance.ConcreteRoles.TakenViaInternalOrganisation = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TakenViaInternalOrganisation]; 

			EngagementClass.Instance.ConcreteRoles.StartDate = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDate]; 

			EngagementClass.Instance.ConcreteRoles.TakenViaContactMechanism = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TakenViaContactMechanism]; 

			EngagementClass.Instance.ConcreteRoles.EstimatedAmount = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedAmount]; 

			EngagementClass.Instance.ConcreteRoles.EndDate = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EndDate]; 

			EngagementClass.Instance.ConcreteRoles.ContractDate = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContractDate]; 

			EngagementClass.Instance.ConcreteRoles.EngagementItem = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementItem]; 

			EngagementClass.Instance.ConcreteRoles.ClientPurchaseOrderNumber = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ClientPurchaseOrderNumber]; 

			EngagementClass.Instance.ConcreteRoles.TakenViaOrganisationContactRelationship = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TakenViaOrganisationContactRelationship]; 


		}

		internal class RolesType
		{
			internal RoleType Agreement;
			internal RoleType PlacingContactMechanism;
			internal RoleType MaximumAmount;
			internal RoleType BillToContactMechanism;
			internal RoleType Description;
			internal RoleType BillToParty;
			internal RoleType PlacingParty;
			internal RoleType TakenViaInternalOrganisation;
			internal RoleType StartDate;
			internal RoleType TakenViaContactMechanism;
			internal RoleType EstimatedAmount;
			internal RoleType EndDate;
			internal RoleType ContractDate;
			internal RoleType EngagementItem;
			internal RoleType ClientPurchaseOrderNumber;
			internal RoleType TakenViaOrganisationContactRelationship;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Agreement;
			internal ConcreteRoleType PlacingContactMechanism;
			internal ConcreteRoleType MaximumAmount;
			internal ConcreteRoleType BillToContactMechanism;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType BillToParty;
			internal ConcreteRoleType PlacingParty;
			internal ConcreteRoleType TakenViaInternalOrganisation;
			internal ConcreteRoleType StartDate;
			internal ConcreteRoleType TakenViaContactMechanism;
			internal ConcreteRoleType EstimatedAmount;
			internal ConcreteRoleType EndDate;
			internal ConcreteRoleType ContractDate;
			internal ConcreteRoleType EngagementItem;
			internal ConcreteRoleType ClientPurchaseOrderNumber;
			internal ConcreteRoleType TakenViaOrganisationContactRelationship;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartInterface: Interface
	{
		public static PartInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PartInterface() : base(AppsDomain.Instance, new Guid("75916246-b1b5-48ef-9578-d65980fd2623"))
        {
			this.SingularName = "Part";
			this.PluralName = "Parts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("617faf1d-b04e-4d7e-bca5-9f5a1ae96709"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("cfac893e-e3e2-42e0-93a4-a02ed18b0421"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PartOwnedByParty = new RelationType(AppsDomain.Instance, new Guid("424cdae9-af7b-4b6f-9e9e-54ac6104873d"), new Guid("54857740-7d0b-4c7d-b71a-9b93719643c5"), new Guid("501dcfd1-143a-46a6-9c04-9ce141702a27"));
			PartOwnedByParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartOwnedByParty.IsIndexed = true;

			PartOwnedByParty.AssociationType.ObjectType = this;

			PartOwnedByParty.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PartOwnedByParty.RoleType.AssignedSingularName = "OwnedByParty";
			PartOwnedByParty.RoleType.AssignedPluralName = "OwnedByParty";
			this.Roles.OwnedByParty = PartOwnedByParty.RoleType;

			var PartName = new RelationType(AppsDomain.Instance, new Guid("5239147e-0829-4250-bdbc-8115e9c19206"), new Guid("6f267a60-802b-454f-9ac7-762a92746255"), new Guid("a9efc713-6574-4b82-b20e-0fc22747566a"));
			PartName.AssignedMultiplicity = Multiplicity.OneToOne;
			PartName.AssociationType.ObjectType = this;

			PartName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartName.RoleType.AssignedSingularName = "Name";
			PartName.RoleType.AssignedPluralName = "Names";
			PartName.RoleType.Size = 256;
			this.Roles.Name = PartName.RoleType;

			var PartPartSpecification = new RelationType(AppsDomain.Instance, new Guid("527c0d02-7723-4715-b975-ec9474d0d22d"), new Guid("b8cce82f-8555-4d15-8012-3b122ad47b3d"), new Guid("72e60215-a8fb-40a1-ac9b-0204421adde0"));
			PartPartSpecification.AssignedMultiplicity = Multiplicity.OneToMany;
			PartPartSpecification.IsIndexed = true;

			PartPartSpecification.AssociationType.ObjectType = this;

			PartPartSpecification.RoleType.ObjectType = PartSpecificationInterface.Instance;;
			PartPartSpecification.RoleType.AssignedSingularName = "PartSpecification";
			PartPartSpecification.RoleType.AssignedPluralName = "PartSpecifications";
			this.Roles.PartSpecification = PartPartSpecification.RoleType;

			var PartUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("610f6c8c-0d1d-4c8e-9d3d-a98e17d181b5"), new Guid("00a2efd5-0a43-4b86-8ce3-2196c2ad7c3d"), new Guid("f843b974-81bf-48a1-9397-8708da48e39c"));
			PartUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartUnitOfMeasure.IsIndexed = true;

			PartUnitOfMeasure.AssociationType.ObjectType = this;

			PartUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			PartUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			PartUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = PartUnitOfMeasure.RoleType;

			var PartDocument = new RelationType(AppsDomain.Instance, new Guid("773e731d-47f7-4742-b8c6-81dec0a09f29"), new Guid("183113ef-8420-444d-8a80-61580a9f95dc"), new Guid("05f1428a-26cd-4f08-9f1d-dec02edf6fe1"));
			PartDocument.AssignedMultiplicity = Multiplicity.ManyToMany;
			PartDocument.IsIndexed = true;

			PartDocument.AssociationType.ObjectType = this;

			PartDocument.RoleType.ObjectType = DocumentInterface.Instance;;
			PartDocument.RoleType.AssignedSingularName = "Document";
			PartDocument.RoleType.AssignedPluralName = "Documents";
			this.Roles.Document = PartDocument.RoleType;

			var PartManufacturerId = new RelationType(AppsDomain.Instance, new Guid("89a29d59-b56f-4846-a9d2-cf7d094826dc"), new Guid("8527c099-3ea0-486c-b288-ebf7e642952e"), new Guid("84e90f5a-ce0f-4f88-b964-829154e682dd"));
			PartManufacturerId.AssignedMultiplicity = Multiplicity.OneToOne;
			PartManufacturerId.AssociationType.ObjectType = this;

			PartManufacturerId.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartManufacturerId.RoleType.AssignedSingularName = "ManufacturerId";
			PartManufacturerId.RoleType.AssignedPluralName = "ManufacturerIds";
			PartManufacturerId.RoleType.Size = 256;
			this.Roles.ManufacturerId = PartManufacturerId.RoleType;

			var PartReorderLevel = new RelationType(AppsDomain.Instance, new Guid("8dc701e0-1f66-44ee-acc6-9726aa7d5853"), new Guid("2b9103c7-7ff8-4733-aa02-53800bb6e9bc"), new Guid("6d60fb2f-1893-48ac-9e7d-9aa2a9a89431"));
			PartReorderLevel.AssignedMultiplicity = Multiplicity.OneToOne;
			PartReorderLevel.AssociationType.ObjectType = this;

			PartReorderLevel.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartReorderLevel.RoleType.AssignedSingularName = "ReorderLevel";
			PartReorderLevel.RoleType.AssignedPluralName = "ReorderLevels";
			this.Roles.ReorderLevel = PartReorderLevel.RoleType;

			var PartReorderQuantity = new RelationType(AppsDomain.Instance, new Guid("a093c852-cba8-43ff-9572-fd8c6cd53638"), new Guid("8c3d3a61-4d3a-477c-9701-a292435112e3"), new Guid("f2ffce75-82d5-460f-83cc-621d63211d18"));
			PartReorderQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			PartReorderQuantity.AssociationType.ObjectType = this;

			PartReorderQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartReorderQuantity.RoleType.AssignedSingularName = "ReorderQuantity";
			PartReorderQuantity.RoleType.AssignedPluralName = "ReorderQuantities";
			this.Roles.ReorderQuantity = PartReorderQuantity.RoleType;

			var PartPriceComponent = new RelationType(AppsDomain.Instance, new Guid("a202a540-dc0d-4032-9963-d0aa1511c990"), new Guid("0dd915a3-d517-46c5-8664-e59c56623564"), new Guid("ab316ee2-bf84-4501-a798-94832c55e73f"));
			PartPriceComponent.AssignedMultiplicity = Multiplicity.OneToMany;
			PartPriceComponent.IsIndexed = true;

			PartPriceComponent.AssociationType.ObjectType = this;

			PartPriceComponent.RoleType.ObjectType = PriceComponentInterface.Instance;;
			PartPriceComponent.RoleType.AssignedSingularName = "PriceComponent";
			PartPriceComponent.RoleType.AssignedPluralName = "PriceComponents";
			this.Roles.PriceComponent = PartPriceComponent.RoleType;

			var PartInventoryItemKind = new RelationType(AppsDomain.Instance, new Guid("f2c3407e-ab62-4f3e-94e5-7e9e65b89d6e"), new Guid("9bf78bcd-319c-4767-8053-4307577559ff"), new Guid("319781e8-c83c-41ea-a8e7-b7224e8240e0"));
			PartInventoryItemKind.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartInventoryItemKind.IsIndexed = true;

			PartInventoryItemKind.AssociationType.ObjectType = this;

			PartInventoryItemKind.RoleType.ObjectType = InventoryItemKindClass.Instance;;
			PartInventoryItemKind.RoleType.AssignedSingularName = "InventoryItemKind";
			PartInventoryItemKind.RoleType.AssignedPluralName = "InventoryItemKinds";
			this.Roles.InventoryItemKind = PartInventoryItemKind.RoleType;


		}

		internal override void SetRelationTypes()
		{
			FinishedGoodClass.Instance.ConcreteRoles.OwnedByParty = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OwnedByParty]; 
			RawMaterialClass.Instance.ConcreteRoles.OwnedByParty = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OwnedByParty]; 
			SubAssemblyClass.Instance.ConcreteRoles.OwnedByParty = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OwnedByParty]; 

			FinishedGoodClass.Instance.ConcreteRoles.Name = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			RawMaterialClass.Instance.ConcreteRoles.Name = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SubAssemblyClass.Instance.ConcreteRoles.Name = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			FinishedGoodClass.Instance.ConcreteRoles.PartSpecification = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartSpecification]; 
			RawMaterialClass.Instance.ConcreteRoles.PartSpecification = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartSpecification]; 
			SubAssemblyClass.Instance.ConcreteRoles.PartSpecification = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartSpecification]; 

			FinishedGoodClass.Instance.ConcreteRoles.UnitOfMeasure = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 
			RawMaterialClass.Instance.ConcreteRoles.UnitOfMeasure = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 
			SubAssemblyClass.Instance.ConcreteRoles.UnitOfMeasure = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 

			FinishedGoodClass.Instance.ConcreteRoles.Document = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			RawMaterialClass.Instance.ConcreteRoles.Document = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			SubAssemblyClass.Instance.ConcreteRoles.Document = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 

			FinishedGoodClass.Instance.ConcreteRoles.ManufacturerId = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ManufacturerId]; 
			RawMaterialClass.Instance.ConcreteRoles.ManufacturerId = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ManufacturerId]; 
			SubAssemblyClass.Instance.ConcreteRoles.ManufacturerId = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ManufacturerId]; 

			FinishedGoodClass.Instance.ConcreteRoles.ReorderLevel = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReorderLevel]; 
			RawMaterialClass.Instance.ConcreteRoles.ReorderLevel = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReorderLevel]; 
			SubAssemblyClass.Instance.ConcreteRoles.ReorderLevel = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReorderLevel]; 

			FinishedGoodClass.Instance.ConcreteRoles.ReorderQuantity = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReorderQuantity]; 
			RawMaterialClass.Instance.ConcreteRoles.ReorderQuantity = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReorderQuantity]; 
			SubAssemblyClass.Instance.ConcreteRoles.ReorderQuantity = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReorderQuantity]; 

			FinishedGoodClass.Instance.ConcreteRoles.PriceComponent = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PriceComponent]; 
			RawMaterialClass.Instance.ConcreteRoles.PriceComponent = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PriceComponent]; 
			SubAssemblyClass.Instance.ConcreteRoles.PriceComponent = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PriceComponent]; 

			FinishedGoodClass.Instance.ConcreteRoles.InventoryItemKind = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemKind]; 
			RawMaterialClass.Instance.ConcreteRoles.InventoryItemKind = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemKind]; 
			SubAssemblyClass.Instance.ConcreteRoles.InventoryItemKind = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemKind]; 


		}

		internal class RolesType
		{
			internal RoleType OwnedByParty;
			internal RoleType Name;
			internal RoleType PartSpecification;
			internal RoleType UnitOfMeasure;
			internal RoleType Document;
			internal RoleType ManufacturerId;
			internal RoleType ReorderLevel;
			internal RoleType ReorderQuantity;
			internal RoleType PriceComponent;
			internal RoleType InventoryItemKind;

		}
	}public partial class InventoryItemKindClass : Class
	{
		public static InventoryItemKindClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InventoryItemKindClass() : base(AppsDomain.Instance, new Guid("759f97a9-3105-49b4-81a0-c94c3700397c"))
        {
			this.SingularName = "InventoryItemKind";
			this.PluralName = "InventoryItemKinds";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("34be448f-3c38-4e96-8ae0-2603a81fd50e"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PersonClassificationInterface: Interface
	{
		public static PersonClassificationInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PersonClassificationInterface() : base(AppsDomain.Instance, new Guid("77f63100-054a-459b-8864-e69b646ff307"))
        {
			this.SingularName = "PersonClassification";
			this.PluralName = "PersonClassifications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7baecab7-5251-49a9-a76c-f690ac50d6da"))
			{
				Subtype = Instance,
				Supertype = PartyClassificationInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}
	}public partial class CustomEngagementItemClass : Class
	{
		public static CustomEngagementItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CustomEngagementItemClass() : base(AppsDomain.Instance, new Guid("78022da7-d11c-4ab7-96f5-099d6608c4bb"))
        {
			this.SingularName = "CustomEngagementItem";
			this.PluralName = "CustomEngagementItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("caea57cd-123d-41e8-a539-83c4b5ca13f1"))
			{
				Subtype = Instance,
				Supertype = EngagementItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CustomEngagementItemDescriptionOfWork = new RelationType(AppsDomain.Instance, new Guid("71a3ed63-922f-44ae-8e89-6425759b3eb3"), new Guid("00621849-ee7b-4a7e-b5c3-7ca2e2d40b3a"), new Guid("2b2d9ceb-cce9-4edd-bbaa-2829b3e5e32f"));
			CustomEngagementItemDescriptionOfWork.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomEngagementItemDescriptionOfWork.AssociationType.ObjectType = this;

			CustomEngagementItemDescriptionOfWork.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CustomEngagementItemDescriptionOfWork.RoleType.AssignedSingularName = "DescriptionOfWork";
			CustomEngagementItemDescriptionOfWork.RoleType.AssignedPluralName = "DescriptionsOfWork";
			CustomEngagementItemDescriptionOfWork.RoleType.Size = 256;
			this.Roles.DescriptionOfWork = CustomEngagementItemDescriptionOfWork.RoleType;

			var CustomEngagementItemAgreedUponPrice = new RelationType(AppsDomain.Instance, new Guid("f0b91526-924e-4f11-b27c-187010e1dff7"), new Guid("21f41aa4-9417-4822-afba-6e424dd936f2"), new Guid("9f787d7c-663d-4856-a3cb-8d65b4802744"));
			CustomEngagementItemAgreedUponPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomEngagementItemAgreedUponPrice.AssociationType.ObjectType = this;

			CustomEngagementItemAgreedUponPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			CustomEngagementItemAgreedUponPrice.RoleType.AssignedSingularName = "AgreedUponPrice";
			CustomEngagementItemAgreedUponPrice.RoleType.AssignedPluralName = "AgreedUponPrices";
			CustomEngagementItemAgreedUponPrice.RoleType.Scale = 2;
			CustomEngagementItemAgreedUponPrice.RoleType.Precision = 19;
			this.Roles.AgreedUponPrice = CustomEngagementItemAgreedUponPrice.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CustomEngagementItemClass.Instance.ConcreteRoles.DescriptionOfWork = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DescriptionOfWork]; 

			CustomEngagementItemClass.Instance.ConcreteRoles.AgreedUponPrice = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreedUponPrice]; 


		}

		internal class RolesType
		{
			internal RoleType DescriptionOfWork;
			internal RoleType AgreedUponPrice;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DescriptionOfWork;
			internal ConcreteRoleType AgreedUponPrice;
			internal ConcreteRoleType QuoteItem;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ExpectedStartDate;
			internal ConcreteRoleType ExpectedEndDate;
			internal ConcreteRoleType EngagementWorkFulfillment;
			internal ConcreteRoleType EngagementRate;
			internal ConcreteRoleType CurrentEngagementRate;
			internal ConcreteRoleType OrderedWith;
			internal ConcreteRoleType CurrentAssignedProfessional;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AccountingTransactionInterface: Interface
	{
		public static AccountingTransactionInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal AccountingTransactionInterface() : base(AppsDomain.Instance, new Guid("785a36a9-4710-4f3f-bd26-dbaff5353535"))
        {
			this.SingularName = "AccountingTransaction";
			this.PluralName = "AccountingTransactions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("221c3a50-89cb-4191-858e-ba0ffea3bfcf"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var AccountingTransactionAccountingTransactionDetail = new RelationType(AppsDomain.Instance, new Guid("4e4cb94c-424c-4824-ad44-5bb1c7312a52"), new Guid("2ed212a9-6c8b-443f-a842-391aa0b6a265"), new Guid("fc36b63a-7fae-414d-adb0-50a86d9fb238"));
			AccountingTransactionAccountingTransactionDetail.AssignedMultiplicity = Multiplicity.OneToMany;
			AccountingTransactionAccountingTransactionDetail.IsIndexed = true;

			AccountingTransactionAccountingTransactionDetail.AssociationType.ObjectType = this;

			AccountingTransactionAccountingTransactionDetail.RoleType.ObjectType = AccountingTransactionDetailClass.Instance;;
			AccountingTransactionAccountingTransactionDetail.RoleType.AssignedSingularName = "AccountingTransactionDetail";
			AccountingTransactionAccountingTransactionDetail.RoleType.AssignedPluralName = "AccountingTransactionDetails";
			this.Roles.AccountingTransactionDetail = AccountingTransactionAccountingTransactionDetail.RoleType;

			var AccountingTransactionDescription = new RelationType(AppsDomain.Instance, new Guid("657f2688-4af0-4580-add2-c8a30b32e016"), new Guid("e7a6ced6-1397-484a-b4c0-5bb7ebbaf9e0"), new Guid("b4b2d735-b895-4112-8d6c-690b0d6f2cc1"));
			AccountingTransactionDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingTransactionDescription.AssociationType.ObjectType = this;

			AccountingTransactionDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AccountingTransactionDescription.RoleType.AssignedSingularName = "Description";
			AccountingTransactionDescription.RoleType.AssignedPluralName = "Descriptions";
			AccountingTransactionDescription.RoleType.Size = 256;
			this.Roles.Description = AccountingTransactionDescription.RoleType;

			var AccountingTransactionTransactionDate = new RelationType(AppsDomain.Instance, new Guid("77910a3f-3547-4d6b-92e0-f1fc136e22da"), new Guid("97cc6287-9dc0-404a-ad92-bfd2c3927d30"), new Guid("83cfb29d-4311-4b16-9331-1c00d54b70c7"));
			AccountingTransactionTransactionDate.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingTransactionTransactionDate.AssociationType.ObjectType = this;

			AccountingTransactionTransactionDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			AccountingTransactionTransactionDate.RoleType.AssignedSingularName = "TransactionDate";
			AccountingTransactionTransactionDate.RoleType.AssignedPluralName = "TransactionDates";
			this.Roles.TransactionDate = AccountingTransactionTransactionDate.RoleType;

			var AccountingTransactionDerivedTotalAmount = new RelationType(AppsDomain.Instance, new Guid("a29cb739-8d2f-4e7d-a652-af8d2e190658"), new Guid("5f295cc2-a884-427b-8fb3-056af4f58b7b"), new Guid("d6cc2527-7a3f-4bac-bf4b-991f484c51a7"));
			AccountingTransactionDerivedTotalAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingTransactionDerivedTotalAmount.IsDerived = true;
			AccountingTransactionDerivedTotalAmount.AssociationType.ObjectType = this;

			AccountingTransactionDerivedTotalAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			AccountingTransactionDerivedTotalAmount.RoleType.AssignedSingularName = "DerivedTotalAmount";
			AccountingTransactionDerivedTotalAmount.RoleType.AssignedPluralName = "DerivedTotalAmounts";
			AccountingTransactionDerivedTotalAmount.RoleType.Scale = 2;
			AccountingTransactionDerivedTotalAmount.RoleType.Precision = 19;
			this.Roles.DerivedTotalAmount = AccountingTransactionDerivedTotalAmount.RoleType;

			var AccountingTransactionAccountingTransactionNumber = new RelationType(AppsDomain.Instance, new Guid("a7fb7e5a-287a-41a1-b6b9-bd56601732f3"), new Guid("6f71e42e-1fa8-4905-93ef-ff5a417aff46"), new Guid("d5d3a903-748a-4b0e-8da6-c23b304eb62c"));
			AccountingTransactionAccountingTransactionNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingTransactionAccountingTransactionNumber.IsIndexed = true;

			AccountingTransactionAccountingTransactionNumber.AssociationType.ObjectType = this;

			AccountingTransactionAccountingTransactionNumber.RoleType.ObjectType = AccountingTransactionNumberClass.Instance;;
			AccountingTransactionAccountingTransactionNumber.RoleType.AssignedSingularName = "AccountingTransactionNumber";
			AccountingTransactionAccountingTransactionNumber.RoleType.AssignedPluralName = "AccountingTransactionNumbers";
			this.Roles.AccountingTransactionNumber = AccountingTransactionAccountingTransactionNumber.RoleType;

			var AccountingTransactionEntryDate = new RelationType(AppsDomain.Instance, new Guid("be061dda-bb8f-4bc1-b386-dc0c05dc6eaf"), new Guid("8943c9e2-3c6f-49c4-aa87-397af24e8073"), new Guid("75b6517f-6e4a-4218-8ca1-de230c69a02e"));
			AccountingTransactionEntryDate.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingTransactionEntryDate.AssociationType.ObjectType = this;

			AccountingTransactionEntryDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			AccountingTransactionEntryDate.RoleType.AssignedSingularName = "EntryDate";
			AccountingTransactionEntryDate.RoleType.AssignedPluralName = "EntryDates";
			this.Roles.EntryDate = AccountingTransactionEntryDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesAccountingTransactionClass.Instance.ConcreteRoles.AccountingTransactionDetail = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.AccountingTransactionDetail = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 
			ItemVarianceAccountingTransactionClass.Instance.ConcreteRoles.AccountingTransactionDetail = ItemVarianceAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 
			TaxDueClass.Instance.ConcreteRoles.AccountingTransactionDetail = TaxDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 
			NoteClass.Instance.ConcreteRoles.AccountingTransactionDetail = NoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 
			CreditLineClass.Instance.ConcreteRoles.AccountingTransactionDetail = CreditLineClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 
			DepreciationClass.Instance.ConcreteRoles.AccountingTransactionDetail = DepreciationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 
			AmortizationClass.Instance.ConcreteRoles.AccountingTransactionDetail = AmortizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 
			CapitalizationClass.Instance.ConcreteRoles.AccountingTransactionDetail = CapitalizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.AccountingTransactionDetail = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 
			ObligationClass.Instance.ConcreteRoles.AccountingTransactionDetail = ObligationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionDetail]; 

			SalesAccountingTransactionClass.Instance.ConcreteRoles.Description = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.Description = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ItemVarianceAccountingTransactionClass.Instance.ConcreteRoles.Description = ItemVarianceAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			TaxDueClass.Instance.ConcreteRoles.Description = TaxDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			NoteClass.Instance.ConcreteRoles.Description = NoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			CreditLineClass.Instance.ConcreteRoles.Description = CreditLineClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			DepreciationClass.Instance.ConcreteRoles.Description = DepreciationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			AmortizationClass.Instance.ConcreteRoles.Description = AmortizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			CapitalizationClass.Instance.ConcreteRoles.Description = CapitalizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.Description = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ObligationClass.Instance.ConcreteRoles.Description = ObligationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			SalesAccountingTransactionClass.Instance.ConcreteRoles.TransactionDate = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.TransactionDate = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			ItemVarianceAccountingTransactionClass.Instance.ConcreteRoles.TransactionDate = ItemVarianceAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			TaxDueClass.Instance.ConcreteRoles.TransactionDate = TaxDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			NoteClass.Instance.ConcreteRoles.TransactionDate = NoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			CreditLineClass.Instance.ConcreteRoles.TransactionDate = CreditLineClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			DepreciationClass.Instance.ConcreteRoles.TransactionDate = DepreciationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			AmortizationClass.Instance.ConcreteRoles.TransactionDate = AmortizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			CapitalizationClass.Instance.ConcreteRoles.TransactionDate = CapitalizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.TransactionDate = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 
			ObligationClass.Instance.ConcreteRoles.TransactionDate = ObligationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 

			SalesAccountingTransactionClass.Instance.ConcreteRoles.DerivedTotalAmount = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.DerivedTotalAmount = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 
			ItemVarianceAccountingTransactionClass.Instance.ConcreteRoles.DerivedTotalAmount = ItemVarianceAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 
			TaxDueClass.Instance.ConcreteRoles.DerivedTotalAmount = TaxDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 
			NoteClass.Instance.ConcreteRoles.DerivedTotalAmount = NoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 
			CreditLineClass.Instance.ConcreteRoles.DerivedTotalAmount = CreditLineClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 
			DepreciationClass.Instance.ConcreteRoles.DerivedTotalAmount = DepreciationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 
			AmortizationClass.Instance.ConcreteRoles.DerivedTotalAmount = AmortizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 
			CapitalizationClass.Instance.ConcreteRoles.DerivedTotalAmount = CapitalizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.DerivedTotalAmount = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 
			ObligationClass.Instance.ConcreteRoles.DerivedTotalAmount = ObligationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedTotalAmount]; 

			SalesAccountingTransactionClass.Instance.ConcreteRoles.AccountingTransactionNumber = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.AccountingTransactionNumber = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 
			ItemVarianceAccountingTransactionClass.Instance.ConcreteRoles.AccountingTransactionNumber = ItemVarianceAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 
			TaxDueClass.Instance.ConcreteRoles.AccountingTransactionNumber = TaxDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 
			NoteClass.Instance.ConcreteRoles.AccountingTransactionNumber = NoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 
			CreditLineClass.Instance.ConcreteRoles.AccountingTransactionNumber = CreditLineClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 
			DepreciationClass.Instance.ConcreteRoles.AccountingTransactionNumber = DepreciationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 
			AmortizationClass.Instance.ConcreteRoles.AccountingTransactionNumber = AmortizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 
			CapitalizationClass.Instance.ConcreteRoles.AccountingTransactionNumber = CapitalizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.AccountingTransactionNumber = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 
			ObligationClass.Instance.ConcreteRoles.AccountingTransactionNumber = ObligationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 

			SalesAccountingTransactionClass.Instance.ConcreteRoles.EntryDate = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.EntryDate = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			ItemVarianceAccountingTransactionClass.Instance.ConcreteRoles.EntryDate = ItemVarianceAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			TaxDueClass.Instance.ConcreteRoles.EntryDate = TaxDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			NoteClass.Instance.ConcreteRoles.EntryDate = NoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			CreditLineClass.Instance.ConcreteRoles.EntryDate = CreditLineClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			DepreciationClass.Instance.ConcreteRoles.EntryDate = DepreciationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			AmortizationClass.Instance.ConcreteRoles.EntryDate = AmortizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			CapitalizationClass.Instance.ConcreteRoles.EntryDate = CapitalizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.EntryDate = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			ObligationClass.Instance.ConcreteRoles.EntryDate = ObligationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 


		}

		internal class RolesType
		{
			internal RoleType AccountingTransactionDetail;
			internal RoleType Description;
			internal RoleType TransactionDate;
			internal RoleType DerivedTotalAmount;
			internal RoleType AccountingTransactionNumber;
			internal RoleType EntryDate;

		}
	}public partial class SalesRepPartyRevenueClass : Class
	{
		public static SalesRepPartyRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesRepPartyRevenueClass() : base(AppsDomain.Instance, new Guid("7b0e5009-eef2-4043-8794-b94663397053"))
        {
			this.SingularName = "SalesRepPartyRevenue";
			this.PluralName = "SalesRepPartyRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2e608fe9-c064-4956-af3d-17426c94d621"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("afd49559-f10c-4ff5-a4ac-5590c72a56f9"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesRepPartyRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("1671b689-b431-48e3-aa9c-04b67d35645d"), new Guid("0bd0f873-b179-4d95-b1c9-f9b32db5a58e"), new Guid("673851a4-435d-441e-8bc5-9ebae678a9a2"));
			SalesRepPartyRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepPartyRevenueRevenue.AssociationType.ObjectType = this;

			SalesRepPartyRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesRepPartyRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			SalesRepPartyRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			SalesRepPartyRevenueRevenue.RoleType.Scale = 2;
			SalesRepPartyRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = SalesRepPartyRevenueRevenue.RoleType;

			var SalesRepPartyRevenueYear = new RelationType(AppsDomain.Instance, new Guid("2f2c05ed-09b0-4058-9dec-69d2e7b0bdce"), new Guid("3de0784e-21d8-40cc-ad93-699c67b1d996"), new Guid("96a797ef-2830-448d-b08f-1fb54b3a76f2"));
			SalesRepPartyRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepPartyRevenueYear.AssociationType.ObjectType = this;

			SalesRepPartyRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesRepPartyRevenueYear.RoleType.AssignedSingularName = "Year";
			SalesRepPartyRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = SalesRepPartyRevenueYear.RoleType;

			var SalesRepPartyRevenueSalesRep = new RelationType(AppsDomain.Instance, new Guid("44124d06-9bbd-4c55-85f6-7036b49ffbcd"), new Guid("b7e31e2e-2e76-4049-870b-ff5848dc4ebc"), new Guid("37984d70-d086-461f-8879-710ecef10778"));
			SalesRepPartyRevenueSalesRep.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepPartyRevenueSalesRep.IsIndexed = true;

			SalesRepPartyRevenueSalesRep.AssociationType.ObjectType = this;

			SalesRepPartyRevenueSalesRep.RoleType.ObjectType = PersonClass.Instance;;
			SalesRepPartyRevenueSalesRep.RoleType.AssignedSingularName = "SalesRep";
			SalesRepPartyRevenueSalesRep.RoleType.AssignedPluralName = "SalesReps";
			this.Roles.SalesRep = SalesRepPartyRevenueSalesRep.RoleType;

			var SalesRepPartyRevenueSalesRepName = new RelationType(AppsDomain.Instance, new Guid("85d4036b-dfaf-42e7-935a-cff6858b4b57"), new Guid("a9d39829-f661-4f34-90f4-c6e6f8a81cda"), new Guid("a40e4494-9fcf-42bf-b5f9-5977dc3d3dd7"));
			SalesRepPartyRevenueSalesRepName.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepPartyRevenueSalesRepName.AssociationType.ObjectType = this;

			SalesRepPartyRevenueSalesRepName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			SalesRepPartyRevenueSalesRepName.RoleType.AssignedSingularName = "SalesRepName";
			SalesRepPartyRevenueSalesRepName.RoleType.AssignedPluralName = "SalesRepNames";
			SalesRepPartyRevenueSalesRepName.RoleType.Size = 256;
			this.Roles.SalesRepName = SalesRepPartyRevenueSalesRepName.RoleType;

			var SalesRepPartyRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("9ebbb60b-b198-404b-b16b-1f6848f07c65"), new Guid("ce0e6e38-d0a5-4363-9184-8a14ee71c4e9"), new Guid("827927b3-8d15-473a-8cad-b61b97e3322a"));
			SalesRepPartyRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepPartyRevenueInternalOrganisation.IsIndexed = true;

			SalesRepPartyRevenueInternalOrganisation.AssociationType.ObjectType = this;

			SalesRepPartyRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesRepPartyRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			SalesRepPartyRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = SalesRepPartyRevenueInternalOrganisation.RoleType;

			var SalesRepPartyRevenueParty = new RelationType(AppsDomain.Instance, new Guid("a9a0868b-e96d-4da4-9fd8-4cc19fdf4bc1"), new Guid("ab409a8b-dca5-446a-ad27-d255b946555c"), new Guid("3af187a4-a5ce-45e5-9e47-00e66d2e6791"));
			SalesRepPartyRevenueParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepPartyRevenueParty.IsIndexed = true;

			SalesRepPartyRevenueParty.AssociationType.ObjectType = this;

			SalesRepPartyRevenueParty.RoleType.ObjectType = PartyInterface.Instance;;
			SalesRepPartyRevenueParty.RoleType.AssignedSingularName = "Party";
			SalesRepPartyRevenueParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = SalesRepPartyRevenueParty.RoleType;

			var SalesRepPartyRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("cab7ab56-2068-4090-bdae-b4e42a68ec36"), new Guid("e5f5eefd-0276-450b-815e-4bde07fee1d6"), new Guid("99d895a8-12c9-468c-9081-f600f64a9117"));
			SalesRepPartyRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepPartyRevenueCurrency.IsIndexed = true;

			SalesRepPartyRevenueCurrency.AssociationType.ObjectType = this;

			SalesRepPartyRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			SalesRepPartyRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			SalesRepPartyRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = SalesRepPartyRevenueCurrency.RoleType;

			var SalesRepPartyRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("d2c46b6c-5aef-4172-be33-1fe4ea7fdce0"), new Guid("f9917c36-de1e-4a42-ae37-6883372873c9"), new Guid("f298e963-b2b1-4cc2-b7aa-2d07fb4e1662"));
			SalesRepPartyRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepPartyRevenueMonth.AssociationType.ObjectType = this;

			SalesRepPartyRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesRepPartyRevenueMonth.RoleType.AssignedSingularName = "Month";
			SalesRepPartyRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = SalesRepPartyRevenueMonth.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesRepPartyRevenueClass.Instance.ConcreteRoles.Revenue = SalesRepPartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			SalesRepPartyRevenueClass.Instance.ConcreteRoles.Year = SalesRepPartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			SalesRepPartyRevenueClass.Instance.ConcreteRoles.SalesRep = SalesRepPartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRep]; 

			SalesRepPartyRevenueClass.Instance.ConcreteRoles.SalesRepName = SalesRepPartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRepName]; 

			SalesRepPartyRevenueClass.Instance.ConcreteRoles.InternalOrganisation = SalesRepPartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			SalesRepPartyRevenueClass.Instance.ConcreteRoles.Party = SalesRepPartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			SalesRepPartyRevenueClass.Instance.ConcreteRoles.Currency = SalesRepPartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			SalesRepPartyRevenueClass.Instance.ConcreteRoles.Month = SalesRepPartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 


		}

		internal class RolesType
		{
			internal RoleType Revenue;
			internal RoleType Year;
			internal RoleType SalesRep;
			internal RoleType SalesRepName;
			internal RoleType InternalOrganisation;
			internal RoleType Party;
			internal RoleType Currency;
			internal RoleType Month;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType SalesRep;
			internal ConcreteRoleType SalesRepName;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class JournalTypeClass : Class
	{
		public static JournalTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal JournalTypeClass() : base(AppsDomain.Instance, new Guid("7b23440c-d26b-42f5-a94b-e26872e63e7d"))
        {
			this.SingularName = "JournalType";
			this.PluralName = "JournalTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("fc8f1271-b38e-4e9c-8abf-d94ae7313fe2"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PurchaseOrderItemStatusClass : Class
	{
		public static PurchaseOrderItemStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseOrderItemStatusClass() : base(AppsDomain.Instance, new Guid("7ba40817-7e42-484e-8272-29a433842054"))
        {
			this.SingularName = "PurchaseOrderItemStatus";
			this.PluralName = "PurchaseOrderItemStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("85b18023-e8ee-4d27-8863-8f73d7c7f6c1"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseOrderItemStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("8d0f607b-221b-4f42-8ef8-242e3c35d9ba"), new Guid("2dbd22c3-b84d-4d65-a176-eecd61da3a89"), new Guid("26ed3c20-bad4-4651-9a6e-d6a27616503e"));
			PurchaseOrderItemStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseOrderItemStatusStartDateTime.AssociationType.ObjectType = this;

			PurchaseOrderItemStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PurchaseOrderItemStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			PurchaseOrderItemStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = PurchaseOrderItemStatusStartDateTime.RoleType;

			var PurchaseOrderItemStatusPurchaseOrderItemObjectState = new RelationType(AppsDomain.Instance, new Guid("d2fad7ff-945e-4bed-b7a7-39238357eaf3"), new Guid("db25aff8-16fe-4277-afc2-843d81ace875"), new Guid("2f2af9c6-9ed4-475b-a9fd-c16c12454109"));
			PurchaseOrderItemStatusPurchaseOrderItemObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderItemStatusPurchaseOrderItemObjectState.IsIndexed = true;

			PurchaseOrderItemStatusPurchaseOrderItemObjectState.AssociationType.ObjectType = this;

			PurchaseOrderItemStatusPurchaseOrderItemObjectState.RoleType.ObjectType = PurchaseOrderItemObjectStateClass.Instance;;
			PurchaseOrderItemStatusPurchaseOrderItemObjectState.RoleType.AssignedSingularName = "PurchaseOrderItemObjectState";
			PurchaseOrderItemStatusPurchaseOrderItemObjectState.RoleType.AssignedPluralName = "PurchaseOrderItemObjectStates";
			this.Roles.PurchaseOrderItemObjectState = PurchaseOrderItemStatusPurchaseOrderItemObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseOrderItemStatusClass.Instance.ConcreteRoles.StartDateTime = PurchaseOrderItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			PurchaseOrderItemStatusClass.Instance.ConcreteRoles.PurchaseOrderItemObjectState = PurchaseOrderItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseOrderItemObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType PurchaseOrderItemObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType PurchaseOrderItemObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AddendumClass : Class
	{
		public static AddendumClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AddendumClass() : base(AppsDomain.Instance, new Guid("7baa7594-6890-4e1e-8c06-fc49b3ea262d"))
        {
			this.SingularName = "Addendum";
			this.PluralName = "Addenda";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ef36ea64-ca49-4ee9-b664-d131ba5e9693"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var AddendumText = new RelationType(AppsDomain.Instance, new Guid("2aaa6623-6f1a-4b40-91f0-4014108549d6"), new Guid("071735c4-bfbe-4f30-87a4-fbb4accc540c"), new Guid("d9dea2e1-6582-4ce4-863f-4819d2cffe96"));
			AddendumText.AssignedMultiplicity = Multiplicity.OneToOne;
			AddendumText.AssociationType.ObjectType = this;

			AddendumText.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AddendumText.RoleType.AssignedSingularName = "Text";
			AddendumText.RoleType.AssignedPluralName = "Texts";
			AddendumText.RoleType.Size = -1;
			this.Roles.Text = AddendumText.RoleType;

			var AddendumEffictiveDate = new RelationType(AppsDomain.Instance, new Guid("30b99ed6-cb44-4401-b5bd-76c0099153d4"), new Guid("002ba83d-d60f-4365-90e0-4df952697ae7"), new Guid("cfa04c20-ecc5-4942-b898-2966bf5052aa"));
			AddendumEffictiveDate.AssignedMultiplicity = Multiplicity.OneToOne;
			AddendumEffictiveDate.AssociationType.ObjectType = this;

			AddendumEffictiveDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			AddendumEffictiveDate.RoleType.AssignedSingularName = "EffictiveDate";
			AddendumEffictiveDate.RoleType.AssignedPluralName = "EffictiveDates";
			this.Roles.EffictiveDate = AddendumEffictiveDate.RoleType;

			var AddendumDescription = new RelationType(AppsDomain.Instance, new Guid("45a9d28e-f131-44a8-aea5-1a9776be709e"), new Guid("4b41aff4-1882-4771-a85b-358cabdb6e3c"), new Guid("8b37c47b-3dec-46e6-b669-6497cfdaf14b"));
			AddendumDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			AddendumDescription.AssociationType.ObjectType = this;

			AddendumDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AddendumDescription.RoleType.AssignedSingularName = "Description";
			AddendumDescription.RoleType.AssignedPluralName = "Descriptions";
			AddendumDescription.RoleType.Size = 256;
			this.Roles.Description = AddendumDescription.RoleType;

			var AddendumCreationDate = new RelationType(AppsDomain.Instance, new Guid("f14af73d-8d7d-4c5b-bc6a-957830fd0a80"), new Guid("5430d382-14ff-4af1-8e1b-3b11142612e4"), new Guid("51fc58ba-e9fb-4919-94e8-c8594f6e4ea5"));
			AddendumCreationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			AddendumCreationDate.IsDerived = true;
			AddendumCreationDate.AssociationType.ObjectType = this;

			AddendumCreationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			AddendumCreationDate.RoleType.AssignedSingularName = "CreationDate";
			AddendumCreationDate.RoleType.AssignedPluralName = "CreationDates";
			this.Roles.CreationDate = AddendumCreationDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			AddendumClass.Instance.ConcreteRoles.Text = AddendumClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 

			AddendumClass.Instance.ConcreteRoles.EffictiveDate = AddendumClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EffictiveDate]; 

			AddendumClass.Instance.ConcreteRoles.Description = AddendumClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			AddendumClass.Instance.ConcreteRoles.CreationDate = AddendumClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreationDate]; 


		}

		internal class RolesType
		{
			internal RoleType Text;
			internal RoleType EffictiveDate;
			internal RoleType Description;
			internal RoleType CreationDate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Text;
			internal ConcreteRoleType EffictiveDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType CreationDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class FloorClass : Class
	{
		public static FloorClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal FloorClass() : base(AppsDomain.Instance, new Guid("7c0d1b2d-88bf-41dd-b19d-b6b0ed1cb179"))
        {
			this.SingularName = "Floor";
			this.PluralName = "Floors";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0827a3a1-311d-4e59-a6a4-952637b31aca"))
			{
				Subtype = Instance,
				Supertype = FacilityInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType MadeUpOf;
			internal ConcreteRoleType SquareFootage;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType FacilityContactMechanism;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class WorkEffortTypeClass : Class
	{
		public static WorkEffortTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortTypeClass() : base(AppsDomain.Instance, new Guid("7d2d9452-f250-47c3-81e0-4e1c0655cc86"))
        {
			this.SingularName = "WorkEffortType";
			this.PluralName = "WorkEffortTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("fd19ae88-605f-4959-8b1e-069f3df5fdaf"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortTypeWorkEffortFixedAssetStandard = new RelationType(AppsDomain.Instance, new Guid("5ce1a600-62a9-4d2c-bfb5-bfe374b2099f"), new Guid("4d892148-3583-46a2-b68d-895274b9ea7a"), new Guid("fa8657ae-5132-4f37-aba0-4f95c4b1df1e"));
			WorkEffortTypeWorkEffortFixedAssetStandard.AssignedMultiplicity = Multiplicity.OneToMany;
			WorkEffortTypeWorkEffortFixedAssetStandard.IsIndexed = true;

			WorkEffortTypeWorkEffortFixedAssetStandard.AssociationType.ObjectType = this;

			WorkEffortTypeWorkEffortFixedAssetStandard.RoleType.ObjectType = WorkEffortFixedAssetStandardClass.Instance;;
			WorkEffortTypeWorkEffortFixedAssetStandard.RoleType.AssignedSingularName = "WorkEffortFixedAssetStandard";
			WorkEffortTypeWorkEffortFixedAssetStandard.RoleType.AssignedPluralName = "WorkEffortFixedAssetStandards";
			this.Roles.WorkEffortFixedAssetStandard = WorkEffortTypeWorkEffortFixedAssetStandard.RoleType;

			var WorkEffortTypeWorkEffortGoodStandard = new RelationType(AppsDomain.Instance, new Guid("776839ee-f6cb-4334-a017-4ffdfddd152a"), new Guid("db3c9fba-5ca8-4296-b1a2-d306ad42dbcc"), new Guid("764e51c4-8a6f-403d-849a-1bf3a1a64911"));
			WorkEffortTypeWorkEffortGoodStandard.AssignedMultiplicity = Multiplicity.OneToMany;
			WorkEffortTypeWorkEffortGoodStandard.IsIndexed = true;

			WorkEffortTypeWorkEffortGoodStandard.AssociationType.ObjectType = this;

			WorkEffortTypeWorkEffortGoodStandard.RoleType.ObjectType = WorkEffortGoodStandardClass.Instance;;
			WorkEffortTypeWorkEffortGoodStandard.RoleType.AssignedSingularName = "WorkEffortGoodStandard";
			WorkEffortTypeWorkEffortGoodStandard.RoleType.AssignedPluralName = "WorkEffortGoodStandards";
			this.Roles.WorkEffortGoodStandard = WorkEffortTypeWorkEffortGoodStandard.RoleType;

			var WorkEffortTypeChild = new RelationType(AppsDomain.Instance, new Guid("89eef4e3-eda7-4336-91cb-ce7a7e96521f"), new Guid("4b61f74f-db7c-4733-b6f5-d485e432a16e"), new Guid("8b9f019b-e79e-4282-9ee1-9bc652fd6817"));
			WorkEffortTypeChild.AssignedMultiplicity = Multiplicity.ManyToMany;
			WorkEffortTypeChild.IsIndexed = true;

			WorkEffortTypeChild.AssociationType.ObjectType = this;

			WorkEffortTypeChild.RoleType.ObjectType = WorkEffortTypeClass.Instance;;
			WorkEffortTypeChild.RoleType.AssignedSingularName = "Child";
			WorkEffortTypeChild.RoleType.AssignedPluralName = "Children";
			this.Roles.Child = WorkEffortTypeChild.RoleType;

			var WorkEffortTypeFixedAssetToRepair = new RelationType(AppsDomain.Instance, new Guid("8d9f51b5-2c8d-4a25-a45e-c79542a09434"), new Guid("687e9909-0efa-4a04-b705-96d93547458a"), new Guid("da4648c1-b495-4555-8fa3-c4ba8141e67d"));
			WorkEffortTypeFixedAssetToRepair.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortTypeFixedAssetToRepair.IsIndexed = true;

			WorkEffortTypeFixedAssetToRepair.AssociationType.ObjectType = this;

			WorkEffortTypeFixedAssetToRepair.RoleType.ObjectType = FixedAssetInterface.Instance;;
			WorkEffortTypeFixedAssetToRepair.RoleType.AssignedSingularName = "FixedAssetToRepair";
			WorkEffortTypeFixedAssetToRepair.RoleType.AssignedPluralName = "FixedAssetsToRepair";
			this.Roles.FixedAssetToRepair = WorkEffortTypeFixedAssetToRepair.RoleType;

			var WorkEffortTypeDescription = new RelationType(AppsDomain.Instance, new Guid("93cfed3d-ae24-4a07-becf-34cdc3cdef3e"), new Guid("958d3cdc-0dbe-4ce6-81c7-492825727ada"), new Guid("d0fadb8a-4891-4caf-a010-6197676cfd54"));
			WorkEffortTypeDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortTypeDescription.AssociationType.ObjectType = this;

			WorkEffortTypeDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			WorkEffortTypeDescription.RoleType.AssignedSingularName = "Description";
			WorkEffortTypeDescription.RoleType.AssignedPluralName = "Descriptions";
			WorkEffortTypeDescription.RoleType.Size = 256;
			this.Roles.Description = WorkEffortTypeDescription.RoleType;

			var WorkEffortTypeDependency = new RelationType(AppsDomain.Instance, new Guid("b6d68eff-8a3a-473f-bb4e-9bc46808bde0"), new Guid("1996225b-a372-44ad-b00a-b257a355d756"), new Guid("2c704b66-922a-4c5c-81fb-973545230501"));
			WorkEffortTypeDependency.AssignedMultiplicity = Multiplicity.ManyToMany;
			WorkEffortTypeDependency.IsIndexed = true;

			WorkEffortTypeDependency.AssociationType.ObjectType = this;

			WorkEffortTypeDependency.RoleType.ObjectType = WorkEffortTypeClass.Instance;;
			WorkEffortTypeDependency.RoleType.AssignedSingularName = "Dependency";
			WorkEffortTypeDependency.RoleType.AssignedPluralName = "Dependencies";
			this.Roles.Dependency = WorkEffortTypeDependency.RoleType;

			var WorkEffortTypeWorkEffortTypeKind = new RelationType(AppsDomain.Instance, new Guid("ccf22455-c42a-4f9c-8975-813431bcdd8b"), new Guid("f70821d5-2a7f-4fdd-ae45-b8c7966710fc"), new Guid("abe54968-9a36-43c5-a57c-b8d1cde032ea"));
			WorkEffortTypeWorkEffortTypeKind.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortTypeWorkEffortTypeKind.IsIndexed = true;

			WorkEffortTypeWorkEffortTypeKind.AssociationType.ObjectType = this;

			WorkEffortTypeWorkEffortTypeKind.RoleType.ObjectType = WorkEffortTypeKindClass.Instance;;
			WorkEffortTypeWorkEffortTypeKind.RoleType.AssignedSingularName = "WorkEffortTypeKind";
			WorkEffortTypeWorkEffortTypeKind.RoleType.AssignedPluralName = "WorkEffortTypeKinds";
			this.Roles.WorkEffortTypeKind = WorkEffortTypeWorkEffortTypeKind.RoleType;

			var WorkEffortTypeWorkEffortPartStandard = new RelationType(AppsDomain.Instance, new Guid("d51d620e-250e-4492-8926-c8535fad19ec"), new Guid("e26db451-eb86-44b1-b3cb-eb29d4311157"), new Guid("2a4de99b-9544-4c67-b936-431622654f09"));
			WorkEffortTypeWorkEffortPartStandard.AssignedMultiplicity = Multiplicity.OneToMany;
			WorkEffortTypeWorkEffortPartStandard.IsIndexed = true;

			WorkEffortTypeWorkEffortPartStandard.AssociationType.ObjectType = this;

			WorkEffortTypeWorkEffortPartStandard.RoleType.ObjectType = WorkEffortPartStandardClass.Instance;;
			WorkEffortTypeWorkEffortPartStandard.RoleType.AssignedSingularName = "WorkEffortPartStandard";
			WorkEffortTypeWorkEffortPartStandard.RoleType.AssignedPluralName = "WorkEffortPartStandards";
			this.Roles.WorkEffortPartStandard = WorkEffortTypeWorkEffortPartStandard.RoleType;

			var WorkEffortTypeWorkEffortSkillStandard = new RelationType(AppsDomain.Instance, new Guid("df104ec4-6247-4199-bce1-635978fa8ad4"), new Guid("0826559c-11ef-4075-ad8e-28c7ed693f1c"), new Guid("073f09b7-1502-4bac-b344-76f4cb6f3907"));
			WorkEffortTypeWorkEffortSkillStandard.AssignedMultiplicity = Multiplicity.OneToMany;
			WorkEffortTypeWorkEffortSkillStandard.IsIndexed = true;

			WorkEffortTypeWorkEffortSkillStandard.AssociationType.ObjectType = this;

			WorkEffortTypeWorkEffortSkillStandard.RoleType.ObjectType = WorkEffortSkillStandardClass.Instance;;
			WorkEffortTypeWorkEffortSkillStandard.RoleType.AssignedSingularName = "WorkEffortSkillStandard";
			WorkEffortTypeWorkEffortSkillStandard.RoleType.AssignedPluralName = "WorkEffortSkillStandards";
			this.Roles.WorkEffortSkillStandard = WorkEffortTypeWorkEffortSkillStandard.RoleType;

			var WorkEffortTypeStandardWorkHours = new RelationType(AppsDomain.Instance, new Guid("df1fa89e-25e2-4b72-a928-67fa2c95ad70"), new Guid("361d313b-8313-43bd-8a98-9b2516ca25f7"), new Guid("3d4d3fd1-28dd-4349-bb57-b869687f5f82"));
			WorkEffortTypeStandardWorkHours.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortTypeStandardWorkHours.AssociationType.ObjectType = this;

			WorkEffortTypeStandardWorkHours.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortTypeStandardWorkHours.RoleType.AssignedSingularName = "StandardWorkHours";
			WorkEffortTypeStandardWorkHours.RoleType.AssignedPluralName = "StandardWorkHoursPlural";
			WorkEffortTypeStandardWorkHours.RoleType.Scale = 2;
			WorkEffortTypeStandardWorkHours.RoleType.Precision = 19;
			this.Roles.StandardWorkHours = WorkEffortTypeStandardWorkHours.RoleType;

			var WorkEffortTypeProductToProduce = new RelationType(AppsDomain.Instance, new Guid("ee521062-a2bf-4a7f-80e4-8da6f63439fe"), new Guid("fc63a85e-7bc4-49ec-89f5-66fef934f11a"), new Guid("5d9c847c-f2a5-4353-8558-880f60e75925"));
			WorkEffortTypeProductToProduce.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortTypeProductToProduce.IsIndexed = true;

			WorkEffortTypeProductToProduce.AssociationType.ObjectType = this;

			WorkEffortTypeProductToProduce.RoleType.ObjectType = ProductInterface.Instance;;
			WorkEffortTypeProductToProduce.RoleType.AssignedSingularName = "ProductToProduce";
			WorkEffortTypeProductToProduce.RoleType.AssignedPluralName = "ProductsToProduce";
			this.Roles.ProductToProduce = WorkEffortTypeProductToProduce.RoleType;

			var WorkEffortTypeDeliverableToProduce = new RelationType(AppsDomain.Instance, new Guid("f8766ab1-b0ed-42fa-806c-c40a2e68d72a"), new Guid("7e7a9632-76a8-48c3-ada3-fcc3aa06a511"), new Guid("9a3b5dd0-a399-43ef-9607-32136bb5f3cd"));
			WorkEffortTypeDeliverableToProduce.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortTypeDeliverableToProduce.IsIndexed = true;

			WorkEffortTypeDeliverableToProduce.AssociationType.ObjectType = this;

			WorkEffortTypeDeliverableToProduce.RoleType.ObjectType = DeliverableClass.Instance;;
			WorkEffortTypeDeliverableToProduce.RoleType.AssignedSingularName = "DeliverableToProduce";
			WorkEffortTypeDeliverableToProduce.RoleType.AssignedPluralName = "DeliverablesToProduce";
			this.Roles.DeliverableToProduce = WorkEffortTypeDeliverableToProduce.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortTypeClass.Instance.ConcreteRoles.WorkEffortFixedAssetStandard = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortFixedAssetStandard]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.WorkEffortGoodStandard = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortGoodStandard]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.Child = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.FixedAssetToRepair = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FixedAssetToRepair]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.Description = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.Dependency = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Dependency]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.WorkEffortTypeKind = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortTypeKind]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.WorkEffortPartStandard = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPartStandard]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.WorkEffortSkillStandard = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortSkillStandard]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.StandardWorkHours = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StandardWorkHours]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.ProductToProduce = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductToProduce]; 

			WorkEffortTypeClass.Instance.ConcreteRoles.DeliverableToProduce = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliverableToProduce]; 


		}

		internal class RolesType
		{
			internal RoleType WorkEffortFixedAssetStandard;
			internal RoleType WorkEffortGoodStandard;
			internal RoleType Child;
			internal RoleType FixedAssetToRepair;
			internal RoleType Description;
			internal RoleType Dependency;
			internal RoleType WorkEffortTypeKind;
			internal RoleType WorkEffortPartStandard;
			internal RoleType WorkEffortSkillStandard;
			internal RoleType StandardWorkHours;
			internal RoleType ProductToProduce;
			internal RoleType DeliverableToProduce;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType WorkEffortFixedAssetStandard;
			internal ConcreteRoleType WorkEffortGoodStandard;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType FixedAssetToRepair;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Dependency;
			internal ConcreteRoleType WorkEffortTypeKind;
			internal ConcreteRoleType WorkEffortPartStandard;
			internal ConcreteRoleType WorkEffortSkillStandard;
			internal ConcreteRoleType StandardWorkHours;
			internal ConcreteRoleType ProductToProduce;
			internal ConcreteRoleType DeliverableToProduce;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesInvoiceStatusClass : Class
	{
		public static SalesInvoiceStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesInvoiceStatusClass() : base(AppsDomain.Instance, new Guid("7d3a207b-dbdd-48c4-9a92-8b12e4e77874"))
        {
			this.SingularName = "SalesInvoiceStatus";
			this.PluralName = "SalesInvoiceStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("163a2c51-d63e-426c-80d0-040c69c66f72"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesInvoiceStatusSalesInvoiceObjectState = new RelationType(AppsDomain.Instance, new Guid("22daba0b-1f86-4a00-ba83-c541e65822c6"), new Guid("d28b067f-bd90-45c5-9213-b231ff3bb03f"), new Guid("eb1505fb-6caa-40a3-a09c-1b18fe7dc3ee"));
			SalesInvoiceStatusSalesInvoiceObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceStatusSalesInvoiceObjectState.IsIndexed = true;

			SalesInvoiceStatusSalesInvoiceObjectState.AssociationType.ObjectType = this;

			SalesInvoiceStatusSalesInvoiceObjectState.RoleType.ObjectType = SalesInvoiceObjectStateClass.Instance;;
			SalesInvoiceStatusSalesInvoiceObjectState.RoleType.AssignedSingularName = "SalesInvoiceObjectState";
			SalesInvoiceStatusSalesInvoiceObjectState.RoleType.AssignedPluralName = "SalesInvoiceObjectStates";
			this.Roles.SalesInvoiceObjectState = SalesInvoiceStatusSalesInvoiceObjectState.RoleType;

			var SalesInvoiceStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("74c60d54-b75f-4baa-b1d6-5a33e8ab3944"), new Guid("ea6bf951-414e-48e6-a579-a2ce8627f635"), new Guid("22405cc3-c402-4236-9517-bdb381d3285f"));
			SalesInvoiceStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceStatusStartDateTime.AssociationType.ObjectType = this;

			SalesInvoiceStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			SalesInvoiceStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			SalesInvoiceStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = SalesInvoiceStatusStartDateTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesInvoiceStatusClass.Instance.ConcreteRoles.SalesInvoiceObjectState = SalesInvoiceStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesInvoiceObjectState]; 

			SalesInvoiceStatusClass.Instance.ConcreteRoles.StartDateTime = SalesInvoiceStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 


		}

		internal class RolesType
		{
			internal RoleType SalesInvoiceObjectState;
			internal RoleType StartDateTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType SalesInvoiceObjectState;
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesAgreementClass : Class
	{
		public static SalesAgreementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesAgreementClass() : base(AppsDomain.Instance, new Guid("7d620a47-475b-40de-a4a7-8be7994df18e"))
        {
			this.SingularName = "SalesAgreement";
			this.PluralName = "SalesAgreements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("997c9af3-8cad-481f-9dc3-3ffcb80e8d54"))
			{
				Subtype = Instance,
				Supertype = AgreementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AgreementDate;
			internal ConcreteRoleType Addendum;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType AgreementTerm;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType AgreementItem;
			internal ConcreteRoleType AgreementNumber;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class PurchaseInvoiceClass : Class
	{
		public static PurchaseInvoiceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseInvoiceClass() : base(AppsDomain.Instance, new Guid("7d7e4b6d-eebd-460c-b771-a93cd8d64bce"))
        {
			this.SingularName = "PurchaseInvoice";
			this.PluralName = "PurchaseInvoices";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("388d6f37-8e5e-49bc-86b3-440a9f9157f1"))
			{
				Subtype = Instance,
				Supertype = InvoiceInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseInvoicePreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("3e06d6c9-50b1-4cf6-95f9-0278b62c0c30"), new Guid("8e2f7243-738f-4e1c-9531-7160c627365a"), new Guid("f596e5ab-59e1-4b0a-9c56-0d22a23c4b0f"));
			PurchaseInvoicePreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoicePreviousObjectState.IsDerived = true;
			PurchaseInvoicePreviousObjectState.IsIndexed = true;

			PurchaseInvoicePreviousObjectState.AssociationType.ObjectType = this;

			PurchaseInvoicePreviousObjectState.RoleType.ObjectType = PurchaseInvoiceObjectStateClass.Instance;;
			PurchaseInvoicePreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			PurchaseInvoicePreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = PurchaseInvoicePreviousObjectState.RoleType;

			var PurchaseInvoicePurchaseInvoiceItem = new RelationType(AppsDomain.Instance, new Guid("4cf09eb7-820f-4677-bfc0-92a48d0a938b"), new Guid("5a71ca58-db28-4edc-9065-32396380bd80"), new Guid("fa280c8d-ac7b-4d99-80dd-fba155d4aef9"));
			PurchaseInvoicePurchaseInvoiceItem.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseInvoicePurchaseInvoiceItem.IsIndexed = true;

			PurchaseInvoicePurchaseInvoiceItem.AssociationType.ObjectType = this;

			PurchaseInvoicePurchaseInvoiceItem.RoleType.ObjectType = PurchaseInvoiceItemClass.Instance;;
			PurchaseInvoicePurchaseInvoiceItem.RoleType.AssignedSingularName = "PurchaseInvoiceItem";
			PurchaseInvoicePurchaseInvoiceItem.RoleType.AssignedPluralName = "PurchaseInvoiceItems";
			this.Roles.PurchaseInvoiceItem = PurchaseInvoicePurchaseInvoiceItem.RoleType;

			var PurchaseInvoiceBilledToInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("86859b7b-e627-43fe-ba75-711d4c104807"), new Guid("ba1aeb33-0351-4fbf-b80c-881cdf4ded5c"), new Guid("7caa47ab-1f54-4fad-87b8-639b37269635"));
			PurchaseInvoiceBilledToInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoiceBilledToInternalOrganisation.IsIndexed = true;

			PurchaseInvoiceBilledToInternalOrganisation.AssociationType.ObjectType = this;

			PurchaseInvoiceBilledToInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PurchaseInvoiceBilledToInternalOrganisation.RoleType.AssignedSingularName = "BilledToInternalOrganisation";
			PurchaseInvoiceBilledToInternalOrganisation.RoleType.AssignedPluralName = "BilledToInternalOrganisations";
			this.Roles.BilledToInternalOrganisation = PurchaseInvoiceBilledToInternalOrganisation.RoleType;

			var PurchaseInvoiceCurrentInvoiceStatus = new RelationType(AppsDomain.Instance, new Guid("8f9e98b7-c87c-47c7-a267-3044c7414534"), new Guid("1b4b2f6b-7294-428f-b0ea-beb43050557a"), new Guid("bea637e9-c320-4bdb-ac4b-d571e3fa0c8d"));
			PurchaseInvoiceCurrentInvoiceStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseInvoiceCurrentInvoiceStatus.IsDerived = true;
			PurchaseInvoiceCurrentInvoiceStatus.IsIndexed = true;

			PurchaseInvoiceCurrentInvoiceStatus.AssociationType.ObjectType = this;

			PurchaseInvoiceCurrentInvoiceStatus.RoleType.ObjectType = PurchaseInvoiceStatusClass.Instance;;
			PurchaseInvoiceCurrentInvoiceStatus.RoleType.AssignedSingularName = "CurrentInvoiceStatus";
			PurchaseInvoiceCurrentInvoiceStatus.RoleType.AssignedPluralName = "CurrentInvoiceStatuses";
			this.Roles.CurrentInvoiceStatus = PurchaseInvoiceCurrentInvoiceStatus.RoleType;

			var PurchaseInvoiceCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("bc059d0f-e9bd-41e8-82ff-9615a01ec24a"), new Guid("770c0376-8552-4d0c-b45f-b759018c3c85"), new Guid("5658422f-4097-49db-b97c-79bab6f337b4"));
			PurchaseInvoiceCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoiceCurrentObjectState.IsDerived = true;
			PurchaseInvoiceCurrentObjectState.IsIndexed = true;

			PurchaseInvoiceCurrentObjectState.AssociationType.ObjectType = this;

			PurchaseInvoiceCurrentObjectState.RoleType.ObjectType = PurchaseInvoiceObjectStateClass.Instance;;
			PurchaseInvoiceCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			PurchaseInvoiceCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = PurchaseInvoiceCurrentObjectState.RoleType;

			var PurchaseInvoiceBilledFromParty = new RelationType(AppsDomain.Instance, new Guid("d4bbc5ed-08a4-4d89-ad53-7705ae71d029"), new Guid("8ce81b66-22e5-4195-a270-5e9f761ff51e"), new Guid("58245287-7a75-45c4-a000-d3944ec9319a"));
			PurchaseInvoiceBilledFromParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoiceBilledFromParty.IsIndexed = true;

			PurchaseInvoiceBilledFromParty.AssociationType.ObjectType = this;

			PurchaseInvoiceBilledFromParty.RoleType.ObjectType = PartyInterface.Instance;;
			PurchaseInvoiceBilledFromParty.RoleType.AssignedSingularName = "BilledFromParty";
			PurchaseInvoiceBilledFromParty.RoleType.AssignedPluralName = "BilledFromParties";
			this.Roles.BilledFromParty = PurchaseInvoiceBilledFromParty.RoleType;

			var PurchaseInvoicePurchaseInvoiceType = new RelationType(AppsDomain.Instance, new Guid("e444b5e7-0128-49fc-86cb-a6fe39c280ae"), new Guid("d6240de5-9b99-4525-b7d0-ef28a3381821"), new Guid("6c911870-2737-4997-87a6-65ca55c17c55"));
			PurchaseInvoicePurchaseInvoiceType.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseInvoicePurchaseInvoiceType.IsIndexed = true;

			PurchaseInvoicePurchaseInvoiceType.AssociationType.ObjectType = this;

			PurchaseInvoicePurchaseInvoiceType.RoleType.ObjectType = PurchaseInvoiceTypeClass.Instance;;
			PurchaseInvoicePurchaseInvoiceType.RoleType.AssignedSingularName = "PurchaseInvoiceType";
			PurchaseInvoicePurchaseInvoiceType.RoleType.AssignedPluralName = "PurchaseInvoiceTypes";
			this.Roles.PurchaseInvoiceType = PurchaseInvoicePurchaseInvoiceType.RoleType;

			var PurchaseInvoiceInvoiceStatus = new RelationType(AppsDomain.Instance, new Guid("ed3987d4-3dd1-4483-bcbb-8f1f0b18ff84"), new Guid("1c1d90ff-5910-4f39-b6ad-aa12a6e6c60e"), new Guid("d23c55ff-857b-40bc-b041-15f0ceb910a5"));
			PurchaseInvoiceInvoiceStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseInvoiceInvoiceStatus.IsDerived = true;
			PurchaseInvoiceInvoiceStatus.IsIndexed = true;

			PurchaseInvoiceInvoiceStatus.AssociationType.ObjectType = this;

			PurchaseInvoiceInvoiceStatus.RoleType.ObjectType = PurchaseInvoiceStatusClass.Instance;;
			PurchaseInvoiceInvoiceStatus.RoleType.AssignedSingularName = "InvoiceStatus";
			PurchaseInvoiceInvoiceStatus.RoleType.AssignedPluralName = "InvoiceStatuses";
			this.Roles.InvoiceStatus = PurchaseInvoiceInvoiceStatus.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseInvoiceClass.Instance.ConcreteRoles.PreviousObjectState = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			PurchaseInvoiceClass.Instance.ConcreteRoles.PurchaseInvoiceItem = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseInvoiceItem]; 

			PurchaseInvoiceClass.Instance.ConcreteRoles.BilledToInternalOrganisation = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BilledToInternalOrganisation]; 

			PurchaseInvoiceClass.Instance.ConcreteRoles.CurrentInvoiceStatus = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentInvoiceStatus]; 

			PurchaseInvoiceClass.Instance.ConcreteRoles.CurrentObjectState = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			PurchaseInvoiceClass.Instance.ConcreteRoles.BilledFromParty = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BilledFromParty]; 

			PurchaseInvoiceClass.Instance.ConcreteRoles.PurchaseInvoiceType = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseInvoiceType]; 

			PurchaseInvoiceClass.Instance.ConcreteRoles.InvoiceStatus = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceStatus]; 


		}

		internal class RolesType
		{
			internal RoleType PreviousObjectState;
			internal RoleType PurchaseInvoiceItem;
			internal RoleType BilledToInternalOrganisation;
			internal RoleType CurrentInvoiceStatus;
			internal RoleType CurrentObjectState;
			internal RoleType BilledFromParty;
			internal RoleType PurchaseInvoiceType;
			internal RoleType InvoiceStatus;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType PurchaseInvoiceItem;
			internal ConcreteRoleType BilledToInternalOrganisation;
			internal ConcreteRoleType CurrentInvoiceStatus;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType BilledFromParty;
			internal ConcreteRoleType PurchaseInvoiceType;
			internal ConcreteRoleType InvoiceStatus;
			internal ConcreteRoleType TotalShippingAndHandlingCustomerCurrency;
			internal ConcreteRoleType CustomerCurrency;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ShippingAndHandlingCharge;
			internal ConcreteRoleType TotalFeeCustomerCurrency;
			internal ConcreteRoleType Fee;
			internal ConcreteRoleType TotalExVatCustomerCurrency;
			internal ConcreteRoleType CustomerReference;
			internal ConcreteRoleType DiscountAdjustment;
			internal ConcreteRoleType AmountPaid;
			internal ConcreteRoleType TotalDiscount;
			internal ConcreteRoleType BillingAccount;
			internal ConcreteRoleType TotalIncVat;
			internal ConcreteRoleType TotalSurcharge;
			internal ConcreteRoleType TotalBasePrice;
			internal ConcreteRoleType TotalVatCustomerCurrency;
			internal ConcreteRoleType InvoiceDate;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType TotalIncVatCustomerCurrency;
			internal ConcreteRoleType TotalShippingAndHandling;
			internal ConcreteRoleType TotalBasePriceCustomerCurrency;
			internal ConcreteRoleType SurchargeAdjustment;
			internal ConcreteRoleType TotalExVat;
			internal ConcreteRoleType InvoiceTerm;
			internal ConcreteRoleType TotalSurchargeCustomerCurrency;
			internal ConcreteRoleType InvoiceNumber;
			internal ConcreteRoleType Message;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType TotalDiscountCustomerCurrency;
			internal ConcreteRoleType TotalVat;
			internal ConcreteRoleType TotalFee;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Locale;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CustomerReturnClass : Class
	{
		public static CustomerReturnClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CustomerReturnClass() : base(AppsDomain.Instance, new Guid("7dd7114a-9e74-45d5-b904-415514af5628"))
        {
			this.SingularName = "CustomerReturn";
			this.PluralName = "CustomerReturns";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f6da645b-e9cb-4b14-bcf5-a97549c3cdd4"))
			{
				Subtype = Instance,
				Supertype = ShipmentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CustomerReturnCurrentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("29a65898-2f91-4163-a5ed-ccb8cd5b17cb"), new Guid("145f4e1b-b26d-4e44-8cc9-3afb537c58b2"), new Guid("71416b87-4614-4d87-886c-4fe2eb936f40"));
			CustomerReturnCurrentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerReturnCurrentShipmentStatus.IsDerived = true;
			CustomerReturnCurrentShipmentStatus.IsIndexed = true;

			CustomerReturnCurrentShipmentStatus.AssociationType.ObjectType = this;

			CustomerReturnCurrentShipmentStatus.RoleType.ObjectType = CustomerReturnStatusClass.Instance;;
			CustomerReturnCurrentShipmentStatus.RoleType.AssignedSingularName = "CurrentShipmentStatus";
			CustomerReturnCurrentShipmentStatus.RoleType.AssignedPluralName = "CurrentShipmentStatuses";
			this.Roles.CurrentShipmentStatus = CustomerReturnCurrentShipmentStatus.RoleType;

			var CustomerReturnPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("b28765aa-3529-449a-9ef1-539323b7f3b2"), new Guid("475243a3-8d87-4521-bbb6-b5388292268c"), new Guid("0084281a-3bcc-4de2-b581-037c3724259a"));
			CustomerReturnPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerReturnPreviousObjectState.IsDerived = true;
			CustomerReturnPreviousObjectState.IsIndexed = true;

			CustomerReturnPreviousObjectState.AssociationType.ObjectType = this;

			CustomerReturnPreviousObjectState.RoleType.ObjectType = CustomerReturnObjectStateClass.Instance;;
			CustomerReturnPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			CustomerReturnPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = CustomerReturnPreviousObjectState.RoleType;

			var CustomerReturnShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("e7586be1-f751-4ac6-940b-a65b50834619"), new Guid("ca71aca7-fa06-44d1-830a-3eaf5e2355a2"), new Guid("3fb0c486-6e24-4f53-b7cf-f98596402d55"));
			CustomerReturnShipmentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			CustomerReturnShipmentStatus.IsDerived = true;
			CustomerReturnShipmentStatus.IsIndexed = true;

			CustomerReturnShipmentStatus.AssociationType.ObjectType = this;

			CustomerReturnShipmentStatus.RoleType.ObjectType = CustomerReturnStatusClass.Instance;;
			CustomerReturnShipmentStatus.RoleType.AssignedSingularName = "ShipmentStatus";
			CustomerReturnShipmentStatus.RoleType.AssignedPluralName = "ShipmentStatuses";
			this.Roles.ShipmentStatus = CustomerReturnShipmentStatus.RoleType;

			var CustomerReturnCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("fe3fd846-2d69-4d62-941b-dabc40a15e1f"), new Guid("82695003-f47f-4324-9a7c-d89949981354"), new Guid("b2d65c28-fbff-430b-a7ca-39201ce655ad"));
			CustomerReturnCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerReturnCurrentObjectState.IsDerived = true;
			CustomerReturnCurrentObjectState.IsIndexed = true;

			CustomerReturnCurrentObjectState.AssociationType.ObjectType = this;

			CustomerReturnCurrentObjectState.RoleType.ObjectType = CustomerReturnObjectStateClass.Instance;;
			CustomerReturnCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			CustomerReturnCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = CustomerReturnCurrentObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CustomerReturnClass.Instance.ConcreteRoles.CurrentShipmentStatus = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentShipmentStatus]; 

			CustomerReturnClass.Instance.ConcreteRoles.PreviousObjectState = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			CustomerReturnClass.Instance.ConcreteRoles.ShipmentStatus = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentStatus]; 

			CustomerReturnClass.Instance.ConcreteRoles.CurrentObjectState = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType CurrentShipmentStatus;
			internal RoleType PreviousObjectState;
			internal RoleType ShipmentStatus;
			internal RoleType CurrentObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentShipmentStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType ShipmentStatus;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ShipmentMethod;
			internal ConcreteRoleType BillToContactMechanism;
			internal ConcreteRoleType ShipmentPackage;
			internal ConcreteRoleType ShipmentNumber;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType BillToParty;
			internal ConcreteRoleType ShipToParty;
			internal ConcreteRoleType ShipmentItem;
			internal ConcreteRoleType BillFromInternalOrganisation;
			internal ConcreteRoleType ReceiverContactMechanism;
			internal ConcreteRoleType ShipToAddress;
			internal ConcreteRoleType EstimatedShipCost;
			internal ConcreteRoleType EstimatedShipDate;
			internal ConcreteRoleType LatestCancelDate;
			internal ConcreteRoleType Carrier;
			internal ConcreteRoleType InquireAboutContactMechanism;
			internal ConcreteRoleType EstimatedReadyDate;
			internal ConcreteRoleType ShipFromAddress;
			internal ConcreteRoleType BillFromContactMechanism;
			internal ConcreteRoleType HandlingInstruction;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType ShipFromParty;
			internal ConcreteRoleType ShipmentRouteSegment;
			internal ConcreteRoleType EstimatedArrivalDate;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class OrderInterface: Interface
	{
		public static OrderInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal OrderInterface() : base(AppsDomain.Instance, new Guid("7dde949a-6f54-4ece-92b3-d269f50ef9d9"))
        {
			this.SingularName = "Order";
			this.PluralName = "Orders";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("462f8f2a-55d3-470b-8cfc-9ede18f39d51"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a654012f-fe99-49ef-a696-447bc18d8c84"))
			{
				Subtype = Instance,
				Supertype = PrintableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("c0ed4427-f470-4537-8062-baacf8b08b44"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("d651ba5c-67f0-4259-9683-e83ca9e9d5a1"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e98ce655-ccad-497e-9834-1597fff7b677"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ed349368-ed42-4834-ba0f-e3a8030d7017"))
			{
				Subtype = Instance,
				Supertype = LocalisedInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var OrderCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("03e5ee2e-91b1-4891-aa14-0afb2459d733"), new Guid("66a7b612-b226-4608-8aaf-1866ee0b5e79"), new Guid("10f74736-c20f-4618-9c80-931c2f428aa8"));
			OrderCustomerCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderCustomerCurrency.IsDerived = true;
			OrderCustomerCurrency.IsIndexed = true;

			OrderCustomerCurrency.AssociationType.ObjectType = this;

			OrderCustomerCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			OrderCustomerCurrency.RoleType.AssignedSingularName = "CustomerCurrency";
			OrderCustomerCurrency.RoleType.AssignedPluralName = "CustomerCurrencies";
			this.Roles.CustomerCurrency = OrderCustomerCurrency.RoleType;

			var OrderTotalBasePriceCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("1e94a270-3780-43fc-9b62-611f259b04fd"), new Guid("edabe0af-99a5-4a67-b6e1-66c341ad945d"), new Guid("8138ed27-5520-458a-bc18-8d684daa4649"));
			OrderTotalBasePriceCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalBasePriceCustomerCurrency.IsDerived = true;
			OrderTotalBasePriceCustomerCurrency.AssociationType.ObjectType = this;

			OrderTotalBasePriceCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalBasePriceCustomerCurrency.RoleType.AssignedSingularName = "TotalBasePriceCustomerCurrency";
			OrderTotalBasePriceCustomerCurrency.RoleType.AssignedPluralName = "TotalBasePricesCustomerCurrency";
			OrderTotalBasePriceCustomerCurrency.RoleType.Scale = 2;
			OrderTotalBasePriceCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalBasePriceCustomerCurrency = OrderTotalBasePriceCustomerCurrency.RoleType;

			var OrderTotalIncVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("24520951-4088-4c60-adaa-dd7bf00257de"), new Guid("6c4e690b-0f91-4fa6-bfa1-755048304dbb"), new Guid("ca53ee57-213a-4449-8fc8-f04f2737a8a6"));
			OrderTotalIncVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalIncVatCustomerCurrency.IsDerived = true;
			OrderTotalIncVatCustomerCurrency.AssociationType.ObjectType = this;

			OrderTotalIncVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalIncVatCustomerCurrency.RoleType.AssignedSingularName = "TotalIncVatCustomerCurrency";
			OrderTotalIncVatCustomerCurrency.RoleType.AssignedPluralName = "TotalIncVatsCustomerCurrency";
			OrderTotalIncVatCustomerCurrency.RoleType.Scale = 2;
			OrderTotalIncVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalIncVatCustomerCurrency = OrderTotalIncVatCustomerCurrency.RoleType;

			var OrderTotalDiscountCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("35451f53-5a0e-443d-a9f7-36620a832b02"), new Guid("b93f7956-ffe3-4793-a5d5-ee60bf197e6e"), new Guid("6b2890e7-f8e2-479d-8155-51adeade6799"));
			OrderTotalDiscountCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalDiscountCustomerCurrency.IsDerived = true;
			OrderTotalDiscountCustomerCurrency.AssociationType.ObjectType = this;

			OrderTotalDiscountCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalDiscountCustomerCurrency.RoleType.AssignedSingularName = "TotalDiscountCustomerCurrency";
			OrderTotalDiscountCustomerCurrency.RoleType.AssignedPluralName = "TotalDiscountsCustomerCurrency";
			OrderTotalDiscountCustomerCurrency.RoleType.Scale = 2;
			OrderTotalDiscountCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalDiscountCustomerCurrency = OrderTotalDiscountCustomerCurrency.RoleType;

			var OrderCustomerReference = new RelationType(AppsDomain.Instance, new Guid("45b3b293-b746-4d6d-9da7-e2378694f734"), new Guid("5e1ba42d-9325-45b5-9c41-cc9b12d0929a"), new Guid("019d8b7a-79db-4100-a690-ae7587e30d8e"));
			OrderCustomerReference.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderCustomerReference.AssociationType.ObjectType = this;

			OrderCustomerReference.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrderCustomerReference.RoleType.AssignedSingularName = "CustomerReference";
			OrderCustomerReference.RoleType.AssignedPluralName = "CustomerReferences";
			OrderCustomerReference.RoleType.Size = 256;
			this.Roles.CustomerReference = OrderCustomerReference.RoleType;

			var OrderFee = new RelationType(AppsDomain.Instance, new Guid("615a233a-659a-44cc-b056-fe02643cbeed"), new Guid("847041e8-d780-4640-803d-927b23f7932f"), new Guid("18ff7372-059c-4717-9d9f-a3a20ea5a7ba"));
			OrderFee.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderFee.IsIndexed = true;

			OrderFee.AssociationType.ObjectType = this;

			OrderFee.RoleType.ObjectType = FeeClass.Instance;;
			OrderFee.RoleType.AssignedSingularName = "Fee";
			OrderFee.RoleType.AssignedPluralName = "Fees";
			this.Roles.Fee = OrderFee.RoleType;

			var OrderTotalExVat = new RelationType(AppsDomain.Instance, new Guid("6509263c-a11e-4554-b13d-4fa075fa8ed9"), new Guid("21bd72d4-b309-452c-a73c-49c7b926aca7"), new Guid("2ba85811-2046-407d-a3a9-a53e05afe3ed"));
			OrderTotalExVat.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalExVat.IsDerived = true;
			OrderTotalExVat.AssociationType.ObjectType = this;

			OrderTotalExVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalExVat.RoleType.AssignedSingularName = "TotalExVat";
			OrderTotalExVat.RoleType.AssignedPluralName = "TotalExVats";
			OrderTotalExVat.RoleType.Scale = 2;
			OrderTotalExVat.RoleType.Precision = 19;
			this.Roles.TotalExVat = OrderTotalExVat.RoleType;

			var OrderOrderTerm = new RelationType(AppsDomain.Instance, new Guid("73521788-7e0e-4ea2-9961-1a58f68cde5c"), new Guid("8e7ad6ef-7a40-472f-b7b9-f53a77e51548"), new Guid("af64e731-adfb-414a-9520-51d4ea2c8f81"));
			OrderOrderTerm.AssignedMultiplicity = Multiplicity.OneToMany;
			OrderOrderTerm.IsIndexed = true;

			OrderOrderTerm.AssociationType.ObjectType = this;

			OrderOrderTerm.RoleType.ObjectType = OrderTermClass.Instance;;
			OrderOrderTerm.RoleType.AssignedSingularName = "OrderTerm";
			OrderOrderTerm.RoleType.AssignedPluralName = "OrderTerms";
			this.Roles.OrderTerm = OrderOrderTerm.RoleType;

			var OrderTotalVat = new RelationType(AppsDomain.Instance, new Guid("7374e62f-0f0b-49de-8c70-9ef224a706b1"), new Guid("cc79b674-ec5d-48d7-b296-c172f372b2b4"), new Guid("29126171-cae2-4b50-89c2-7df91ab71444"));
			OrderTotalVat.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalVat.IsDerived = true;
			OrderTotalVat.AssociationType.ObjectType = this;

			OrderTotalVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalVat.RoleType.AssignedSingularName = "TotalVat";
			OrderTotalVat.RoleType.AssignedPluralName = "TotalVats";
			OrderTotalVat.RoleType.Scale = 2;
			OrderTotalVat.RoleType.Precision = 19;
			this.Roles.TotalVat = OrderTotalVat.RoleType;

			var OrderTotalSurcharge = new RelationType(AppsDomain.Instance, new Guid("751cb60a-b8ba-473a-ab95-0909bd2bc61c"), new Guid("1fb281bd-40cd-45f4-bf37-b7b15ec646d7"), new Guid("24a7b556-4674-42ed-97d9-0e0c466f5fd0"));
			OrderTotalSurcharge.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalSurcharge.IsDerived = true;
			OrderTotalSurcharge.AssociationType.ObjectType = this;

			OrderTotalSurcharge.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalSurcharge.RoleType.AssignedSingularName = "TotalSurcharge";
			OrderTotalSurcharge.RoleType.AssignedPluralName = "TotalSurcharges";
			OrderTotalSurcharge.RoleType.Scale = 2;
			OrderTotalSurcharge.RoleType.Precision = 19;
			this.Roles.TotalSurcharge = OrderTotalSurcharge.RoleType;

			var OrderValidOrderItem = new RelationType(AppsDomain.Instance, new Guid("7c04f907-4254-4b59-861a-7b545c12b3d3"), new Guid("6e8ff513-f6e2-411f-b679-1eda15e0f577"), new Guid("795117b2-8b5a-4562-9acc-d77d2f93256a"));
			OrderValidOrderItem.AssignedMultiplicity = Multiplicity.OneToMany;
			OrderValidOrderItem.IsDerived = true;
			OrderValidOrderItem.IsIndexed = true;

			OrderValidOrderItem.AssociationType.ObjectType = this;

			OrderValidOrderItem.RoleType.ObjectType = OrderItemInterface.Instance;;
			OrderValidOrderItem.RoleType.AssignedSingularName = "ValidOrderItem";
			OrderValidOrderItem.RoleType.AssignedPluralName = "ValidOrderItems";
			this.Roles.ValidOrderItem = OrderValidOrderItem.RoleType;

			var OrderOrderNumber = new RelationType(AppsDomain.Instance, new Guid("7db0e5f7-8a23-4be8-beba-8ddfd1972856"), new Guid("084ad016-6eaf-4cc9-aedd-80a4ba161067"), new Guid("4acb8c07-e132-4b35-8e0c-416cdf4da35b"));
			OrderOrderNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderOrderNumber.IsDerived = true;
			OrderOrderNumber.AssociationType.ObjectType = this;

			OrderOrderNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrderOrderNumber.RoleType.AssignedSingularName = "OrderNumber";
			OrderOrderNumber.RoleType.AssignedPluralName = "OrderNumbers";
			OrderOrderNumber.RoleType.Size = 256;
			this.Roles.OrderNumber = OrderOrderNumber.RoleType;

			var OrderTotalVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("7f25a14f-c32f-4a86-ae2d-9f087f8b8214"), new Guid("5a227b86-4ea3-4ce9-89df-a672337ecd1d"), new Guid("4ba525e4-7e31-4b9e-9fc4-8a26e9e352a1"));
			OrderTotalVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalVatCustomerCurrency.IsDerived = true;
			OrderTotalVatCustomerCurrency.AssociationType.ObjectType = this;

			OrderTotalVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalVatCustomerCurrency.RoleType.AssignedSingularName = "TotalVatCustomerCurrency";
			OrderTotalVatCustomerCurrency.RoleType.AssignedPluralName = "TotalVatsCustomerCurrency";
			OrderTotalVatCustomerCurrency.RoleType.Scale = 2;
			OrderTotalVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalVatCustomerCurrency = OrderTotalVatCustomerCurrency.RoleType;

			var OrderTotalDiscount = new RelationType(AppsDomain.Instance, new Guid("8592f390-a9fb-4275-93c2-b7e73afa2307"), new Guid("703bf4a7-8949-46ea-b7d3-092ab62c9bdd"), new Guid("1420978d-4e64-434e-926e-e26bbce2dd1f"));
			OrderTotalDiscount.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalDiscount.IsDerived = true;
			OrderTotalDiscount.AssociationType.ObjectType = this;

			OrderTotalDiscount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalDiscount.RoleType.AssignedSingularName = "TotalDiscount";
			OrderTotalDiscount.RoleType.AssignedPluralName = "TotalDiscounts";
			OrderTotalDiscount.RoleType.Scale = 2;
			OrderTotalDiscount.RoleType.Precision = 19;
			this.Roles.TotalDiscount = OrderTotalDiscount.RoleType;

			var OrderMessage = new RelationType(AppsDomain.Instance, new Guid("8c972fae-b3ba-4e88-b769-d59c14325b00"), new Guid("a42b384a-3ec0-4c79-af3b-cccc510c019f"), new Guid("d16485cb-983f-4526-b695-01d0d09f3742"));
			OrderMessage.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderMessage.AssociationType.ObjectType = this;

			OrderMessage.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrderMessage.RoleType.AssignedSingularName = "Message";
			OrderMessage.RoleType.AssignedPluralName = "Messages";
			OrderMessage.RoleType.Size = -1;
			this.Roles.Message = OrderMessage.RoleType;

			var OrderTotalShippingAndHandlingCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("9fd3ea50-280e-4d0d-a9db-450991248a53"), new Guid("5c3af601-e6f8-4adc-af83-88058d86975a"), new Guid("7badb3f0-51a2-4e9b-bdc7-3d3bfbf7865f"));
			OrderTotalShippingAndHandlingCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalShippingAndHandlingCustomerCurrency.IsDerived = true;
			OrderTotalShippingAndHandlingCustomerCurrency.AssociationType.ObjectType = this;

			OrderTotalShippingAndHandlingCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalShippingAndHandlingCustomerCurrency.RoleType.AssignedSingularName = "TotalShippingAndHandlingCustomerCurrency";
			OrderTotalShippingAndHandlingCustomerCurrency.RoleType.AssignedPluralName = "TotalShippingAndHandlingsCustomerCurrency";
			OrderTotalShippingAndHandlingCustomerCurrency.RoleType.Scale = 2;
			OrderTotalShippingAndHandlingCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalShippingAndHandlingCustomerCurrency = OrderTotalShippingAndHandlingCustomerCurrency.RoleType;

			var OrderEntryDate = new RelationType(AppsDomain.Instance, new Guid("a5875c41-9f08-49d0-9961-19a656c7e0cc"), new Guid("c6604ee5-e9f2-4b5a-9f08-fbfa1d126402"), new Guid("6a783dbf-0f8d-4249-8e1e-6c0c2a61a97e"));
			OrderEntryDate.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderEntryDate.IsDerived = true;
			OrderEntryDate.AssociationType.ObjectType = this;

			OrderEntryDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			OrderEntryDate.RoleType.AssignedSingularName = "EntryDate";
			OrderEntryDate.RoleType.AssignedPluralName = "EntryDates";
			this.Roles.EntryDate = OrderEntryDate.RoleType;

			var OrderDiscountAdjustment = new RelationType(AppsDomain.Instance, new Guid("addf2b1e-a7c1-4ba8-94f0-13c99d2b8f63"), new Guid("c9ccf0b5-b3a2-4a46-a035-4567215ce48a"), new Guid("2ad9cab5-25ea-49d2-9f70-145de25b2170"));
			OrderDiscountAdjustment.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderDiscountAdjustment.IsIndexed = true;

			OrderDiscountAdjustment.AssociationType.ObjectType = this;

			OrderDiscountAdjustment.RoleType.ObjectType = DiscountAdjustmentClass.Instance;;
			OrderDiscountAdjustment.RoleType.AssignedSingularName = "DiscountAdjustment";
			OrderDiscountAdjustment.RoleType.AssignedPluralName = "DiscountAdjustments";
			this.Roles.DiscountAdjustment = OrderDiscountAdjustment.RoleType;

			var OrderOrderKind = new RelationType(AppsDomain.Instance, new Guid("b205a525-fc61-436d-a66a-1a18bcfb5aff"), new Guid("142ba77b-066d-4514-a663-1859be50e29e"), new Guid("fc9546af-4e2d-485f-806f-cbfce23a7314"));
			OrderOrderKind.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderOrderKind.IsIndexed = true;

			OrderOrderKind.AssociationType.ObjectType = this;

			OrderOrderKind.RoleType.ObjectType = OrderKindClass.Instance;;
			OrderOrderKind.RoleType.AssignedSingularName = "OrderKind";
			OrderOrderKind.RoleType.AssignedPluralName = "OrderKinds";
			this.Roles.OrderKind = OrderOrderKind.RoleType;

			var OrderTotalIncVat = new RelationType(AppsDomain.Instance, new Guid("ba6e8dd3-ad74-4ead-96df-d9ba2e067bfc"), new Guid("a75c25e4-c88d-4d2b-981a-c5b561264e87"), new Guid("77ce4873-d2fa-4f0b-ba8d-0403886d613c"));
			OrderTotalIncVat.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalIncVat.IsDerived = true;
			OrderTotalIncVat.AssociationType.ObjectType = this;

			OrderTotalIncVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalIncVat.RoleType.AssignedSingularName = "TotalIncVat";
			OrderTotalIncVat.RoleType.AssignedPluralName = "TotalIncVats";
			OrderTotalIncVat.RoleType.Scale = 2;
			OrderTotalIncVat.RoleType.Precision = 19;
			this.Roles.TotalIncVat = OrderTotalIncVat.RoleType;

			var OrderTotalSurchargeCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("c2c10a98-2518-4243-8d58-4bee6316abc5"), new Guid("31d26b09-fde7-49b0-b800-718614f216d9"), new Guid("61b0d93a-a36d-470f-b25d-089a7b209457"));
			OrderTotalSurchargeCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalSurchargeCustomerCurrency.IsDerived = true;
			OrderTotalSurchargeCustomerCurrency.AssociationType.ObjectType = this;

			OrderTotalSurchargeCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalSurchargeCustomerCurrency.RoleType.AssignedSingularName = "TotalSurchargeCustomerCurrency";
			OrderTotalSurchargeCustomerCurrency.RoleType.AssignedPluralName = "TotalSurchargesCustomerCurrency";
			OrderTotalSurchargeCustomerCurrency.RoleType.Scale = 2;
			OrderTotalSurchargeCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalSurchargeCustomerCurrency = OrderTotalSurchargeCustomerCurrency.RoleType;

			var OrderVatRegime = new RelationType(AppsDomain.Instance, new Guid("c6f86f31-d254-4001-94fa-273d041df31a"), new Guid("0716922b-d051-459c-83c9-4390fa7723d0"), new Guid("58d1bcc3-332a-4830-b346-702efedaa010"));
			OrderVatRegime.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderVatRegime.IsIndexed = true;

			OrderVatRegime.AssociationType.ObjectType = this;

			OrderVatRegime.RoleType.ObjectType = VatRegimeClass.Instance;;
			OrderVatRegime.RoleType.AssignedSingularName = "VatRegime";
			OrderVatRegime.RoleType.AssignedPluralName = "VatRegimes";
			this.Roles.VatRegime = OrderVatRegime.RoleType;

			var OrderTotalFeeCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("c80447e8-4fc8-4491-8857-3129a007a267"), new Guid("a8210460-e40e-4fab-8adb-bb8d57af0ad6"), new Guid("21b64676-ffa0-4e8c-9850-89096f7f5eff"));
			OrderTotalFeeCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalFeeCustomerCurrency.IsDerived = true;
			OrderTotalFeeCustomerCurrency.AssociationType.ObjectType = this;

			OrderTotalFeeCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalFeeCustomerCurrency.RoleType.AssignedSingularName = "TotalFeeCustomerCurrency";
			OrderTotalFeeCustomerCurrency.RoleType.AssignedPluralName = "TotalFeesCustomerCurrency";
			OrderTotalFeeCustomerCurrency.RoleType.Scale = 2;
			OrderTotalFeeCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalFeeCustomerCurrency = OrderTotalFeeCustomerCurrency.RoleType;

			var OrderTotalShippingAndHandling = new RelationType(AppsDomain.Instance, new Guid("d0730f9e-3217-45b3-a5f8-6ae3a5174050"), new Guid("e575035f-9953-499b-b657-2cde6dd53349"), new Guid("49aaea6a-b3b6-484f-8c49-f61e51a6b71a"));
			OrderTotalShippingAndHandling.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalShippingAndHandling.IsDerived = true;
			OrderTotalShippingAndHandling.AssociationType.ObjectType = this;

			OrderTotalShippingAndHandling.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalShippingAndHandling.RoleType.AssignedSingularName = "TotalShippingAndHandling";
			OrderTotalShippingAndHandling.RoleType.AssignedPluralName = "TotalShippingAndHandlings";
			OrderTotalShippingAndHandling.RoleType.Scale = 2;
			OrderTotalShippingAndHandling.RoleType.Precision = 19;
			this.Roles.TotalShippingAndHandling = OrderTotalShippingAndHandling.RoleType;

			var OrderShippingAndHandlingCharge = new RelationType(AppsDomain.Instance, new Guid("d5d2ec87-064b-4743-9a5e-55b68a84caf6"), new Guid("fec8b5fd-bf0f-4579-9af0-5a590b2b5b94"), new Guid("1fba3917-63b1-472e-96bf-08fc5068a7b6"));
			OrderShippingAndHandlingCharge.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderShippingAndHandlingCharge.IsIndexed = true;

			OrderShippingAndHandlingCharge.AssociationType.ObjectType = this;

			OrderShippingAndHandlingCharge.RoleType.ObjectType = ShippingAndHandlingChargeClass.Instance;;
			OrderShippingAndHandlingCharge.RoleType.AssignedSingularName = "ShippingAndHandlingCharge";
			OrderShippingAndHandlingCharge.RoleType.AssignedPluralName = "ShippingAndHandlingCharges";
			this.Roles.ShippingAndHandlingCharge = OrderShippingAndHandlingCharge.RoleType;

			var OrderOrderDate = new RelationType(AppsDomain.Instance, new Guid("e039e94d-db89-4a17-a692-e82fdb53bfea"), new Guid("f1eed6f2-fb70-4fd8-8e7a-0962759b00a7"), new Guid("e5e2710b-f662-4a50-8203-d0d7c0789e3e"));
			OrderOrderDate.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderOrderDate.AssociationType.ObjectType = this;

			OrderOrderDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			OrderOrderDate.RoleType.AssignedSingularName = "OrderDate";
			OrderOrderDate.RoleType.AssignedPluralName = "OrderDates";
			this.Roles.OrderDate = OrderOrderDate.RoleType;

			var OrderTotalExVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("e39720f8-2e56-4231-9ce0-fb8b8e0efd7e"), new Guid("b58cd94b-59c1-46ca-8c8e-93b3a45ff5dc"), new Guid("62ca6d9d-6d19-4197-847b-7909faf28295"));
			OrderTotalExVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalExVatCustomerCurrency.IsDerived = true;
			OrderTotalExVatCustomerCurrency.AssociationType.ObjectType = this;

			OrderTotalExVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalExVatCustomerCurrency.RoleType.AssignedSingularName = "TotalExVatCustomerCurrency";
			OrderTotalExVatCustomerCurrency.RoleType.AssignedPluralName = "TotalExVatsCustomerCurrency";
			OrderTotalExVatCustomerCurrency.RoleType.Scale = 2;
			OrderTotalExVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalExVatCustomerCurrency = OrderTotalExVatCustomerCurrency.RoleType;

			var OrderDeliveryDate = new RelationType(AppsDomain.Instance, new Guid("f38b3c7d-ac20-49be-a115-d7e83557f49a"), new Guid("f4ff4e74-0bff-4a2a-b4bd-3a08310c6ce2"), new Guid("6d52e55f-2adb-4ec6-8b13-e8611dfcd38a"));
			OrderDeliveryDate.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderDeliveryDate.AssociationType.ObjectType = this;

			OrderDeliveryDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			OrderDeliveryDate.RoleType.AssignedSingularName = "DeliveryDate";
			OrderDeliveryDate.RoleType.AssignedPluralName = "DeliveryDate";
			this.Roles.DeliveryDate = OrderDeliveryDate.RoleType;

			var OrderTotalBasePrice = new RelationType(AppsDomain.Instance, new Guid("f636599a-9c61-4952-abcf-963e6f6bdcd8"), new Guid("94feb243-bb62-4bf4-9947-76d54df2f13c"), new Guid("5955d3b6-b5cd-4878-a71f-070ce9a343cf"));
			OrderTotalBasePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalBasePrice.IsDerived = true;
			OrderTotalBasePrice.AssociationType.ObjectType = this;

			OrderTotalBasePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalBasePrice.RoleType.AssignedSingularName = "TotalBasePrice";
			OrderTotalBasePrice.RoleType.AssignedPluralName = "TotalBasePrices";
			OrderTotalBasePrice.RoleType.Scale = 2;
			OrderTotalBasePrice.RoleType.Precision = 19;
			this.Roles.TotalBasePrice = OrderTotalBasePrice.RoleType;

			var OrderTotalFee = new RelationType(AppsDomain.Instance, new Guid("faa16c88-2ca0-4eea-847e-793ab84d7dea"), new Guid("457ee3dc-c239-4053-a769-f7b50a10879c"), new Guid("e2b42530-507e-4463-8c41-d8ff3886c5cf"));
			OrderTotalFee.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTotalFee.IsDerived = true;
			OrderTotalFee.AssociationType.ObjectType = this;

			OrderTotalFee.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderTotalFee.RoleType.AssignedSingularName = "TotalFee";
			OrderTotalFee.RoleType.AssignedPluralName = "TotalFees";
			OrderTotalFee.RoleType.Scale = 2;
			OrderTotalFee.RoleType.Precision = 19;
			this.Roles.TotalFee = OrderTotalFee.RoleType;

			var OrderSurchargeAdjustment = new RelationType(AppsDomain.Instance, new Guid("fc6cb229-6c94-4c80-a4a6-697d1d752997"), new Guid("2481df7c-624c-44ce-a201-7d7c4d339780"), new Guid("f2540864-d417-482b-a7bf-0f01c1f185eb"));
			OrderSurchargeAdjustment.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderSurchargeAdjustment.IsIndexed = true;

			OrderSurchargeAdjustment.AssociationType.ObjectType = this;

			OrderSurchargeAdjustment.RoleType.ObjectType = SurchargeAdjustmentClass.Instance;;
			OrderSurchargeAdjustment.RoleType.AssignedSingularName = "SurchargeAdjustment";
			OrderSurchargeAdjustment.RoleType.AssignedPluralName = "SurchargeAdjustments";
			this.Roles.SurchargeAdjustment = OrderSurchargeAdjustment.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseOrderClass.Instance.ConcreteRoles.CustomerCurrency = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerCurrency]; 
			SalesOrderClass.Instance.ConcreteRoles.CustomerCurrency = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerCurrency]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalBasePriceCustomerCurrency = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePriceCustomerCurrency]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalBasePriceCustomerCurrency = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePriceCustomerCurrency]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalIncVatCustomerCurrency = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVatCustomerCurrency]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalIncVatCustomerCurrency = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVatCustomerCurrency]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalDiscountCustomerCurrency = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountCustomerCurrency]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalDiscountCustomerCurrency = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountCustomerCurrency]; 

			PurchaseOrderClass.Instance.ConcreteRoles.CustomerReference = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerReference]; 
			SalesOrderClass.Instance.ConcreteRoles.CustomerReference = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerReference]; 

			PurchaseOrderClass.Instance.ConcreteRoles.Fee = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Fee]; 
			SalesOrderClass.Instance.ConcreteRoles.Fee = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Fee]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalExVat = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVat]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalExVat = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVat]; 

			PurchaseOrderClass.Instance.ConcreteRoles.OrderTerm = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderTerm]; 
			SalesOrderClass.Instance.ConcreteRoles.OrderTerm = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderTerm]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalVat = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVat]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalVat = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVat]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalSurcharge = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurcharge]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalSurcharge = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurcharge]; 

			PurchaseOrderClass.Instance.ConcreteRoles.ValidOrderItem = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ValidOrderItem]; 
			SalesOrderClass.Instance.ConcreteRoles.ValidOrderItem = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ValidOrderItem]; 

			PurchaseOrderClass.Instance.ConcreteRoles.OrderNumber = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderNumber]; 
			SalesOrderClass.Instance.ConcreteRoles.OrderNumber = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderNumber]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalVatCustomerCurrency = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVatCustomerCurrency]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalVatCustomerCurrency = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVatCustomerCurrency]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalDiscount = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscount]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalDiscount = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscount]; 

			PurchaseOrderClass.Instance.ConcreteRoles.Message = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Message]; 
			SalesOrderClass.Instance.ConcreteRoles.Message = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Message]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalShippingAndHandlingCustomerCurrency = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalShippingAndHandlingCustomerCurrency]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalShippingAndHandlingCustomerCurrency = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalShippingAndHandlingCustomerCurrency]; 

			PurchaseOrderClass.Instance.ConcreteRoles.EntryDate = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			SalesOrderClass.Instance.ConcreteRoles.EntryDate = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 

			PurchaseOrderClass.Instance.ConcreteRoles.DiscountAdjustment = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DiscountAdjustment]; 
			SalesOrderClass.Instance.ConcreteRoles.DiscountAdjustment = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DiscountAdjustment]; 

			PurchaseOrderClass.Instance.ConcreteRoles.OrderKind = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderKind]; 
			SalesOrderClass.Instance.ConcreteRoles.OrderKind = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderKind]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalIncVat = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVat]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalIncVat = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVat]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalSurchargeCustomerCurrency = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeCustomerCurrency]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalSurchargeCustomerCurrency = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeCustomerCurrency]; 

			PurchaseOrderClass.Instance.ConcreteRoles.VatRegime = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 
			SalesOrderClass.Instance.ConcreteRoles.VatRegime = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalFeeCustomerCurrency = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalFeeCustomerCurrency]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalFeeCustomerCurrency = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalFeeCustomerCurrency]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalShippingAndHandling = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalShippingAndHandling]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalShippingAndHandling = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalShippingAndHandling]; 

			PurchaseOrderClass.Instance.ConcreteRoles.ShippingAndHandlingCharge = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingAndHandlingCharge]; 
			SalesOrderClass.Instance.ConcreteRoles.ShippingAndHandlingCharge = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingAndHandlingCharge]; 

			PurchaseOrderClass.Instance.ConcreteRoles.OrderDate = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderDate]; 
			SalesOrderClass.Instance.ConcreteRoles.OrderDate = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderDate]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalExVatCustomerCurrency = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVatCustomerCurrency]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalExVatCustomerCurrency = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVatCustomerCurrency]; 

			PurchaseOrderClass.Instance.ConcreteRoles.DeliveryDate = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliveryDate]; 
			SalesOrderClass.Instance.ConcreteRoles.DeliveryDate = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliveryDate]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalBasePrice = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePrice]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalBasePrice = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePrice]; 

			PurchaseOrderClass.Instance.ConcreteRoles.TotalFee = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalFee]; 
			SalesOrderClass.Instance.ConcreteRoles.TotalFee = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalFee]; 

			PurchaseOrderClass.Instance.ConcreteRoles.SurchargeAdjustment = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SurchargeAdjustment]; 
			SalesOrderClass.Instance.ConcreteRoles.SurchargeAdjustment = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SurchargeAdjustment]; 


		}

		internal class RolesType
		{
			internal RoleType CustomerCurrency;
			internal RoleType TotalBasePriceCustomerCurrency;
			internal RoleType TotalIncVatCustomerCurrency;
			internal RoleType TotalDiscountCustomerCurrency;
			internal RoleType CustomerReference;
			internal RoleType Fee;
			internal RoleType TotalExVat;
			internal RoleType OrderTerm;
			internal RoleType TotalVat;
			internal RoleType TotalSurcharge;
			internal RoleType ValidOrderItem;
			internal RoleType OrderNumber;
			internal RoleType TotalVatCustomerCurrency;
			internal RoleType TotalDiscount;
			internal RoleType Message;
			internal RoleType TotalShippingAndHandlingCustomerCurrency;
			internal RoleType EntryDate;
			internal RoleType DiscountAdjustment;
			internal RoleType OrderKind;
			internal RoleType TotalIncVat;
			internal RoleType TotalSurchargeCustomerCurrency;
			internal RoleType VatRegime;
			internal RoleType TotalFeeCustomerCurrency;
			internal RoleType TotalShippingAndHandling;
			internal RoleType ShippingAndHandlingCharge;
			internal RoleType OrderDate;
			internal RoleType TotalExVatCustomerCurrency;
			internal RoleType DeliveryDate;
			internal RoleType TotalBasePrice;
			internal RoleType TotalFee;
			internal RoleType SurchargeAdjustment;

		}
	}public partial class PartyPackageRevenueHistoryClass : Class
	{
		public static PartyPackageRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyPackageRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("7e9b7f2f-887a-491d-8dab-6a42c908d5a5"))
        {
			this.SingularName = "PartyPackageRevenueHistory";
			this.PluralName = "PartyPackageRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("019ee7a1-a84b-434c-81ad-82ba0424dbeb"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyPackageRevenueHistoryPackage = new RelationType(AppsDomain.Instance, new Guid("06fdef2c-73f1-4365-9c74-4a994c3d8f97"), new Guid("901f16e6-2007-4da0-abb5-b8d36adceb16"), new Guid("2eca8cef-2790-42a7-8d28-8fb4024c9230"));
			PartyPackageRevenueHistoryPackage.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyPackageRevenueHistoryPackage.IsIndexed = true;

			PartyPackageRevenueHistoryPackage.AssociationType.ObjectType = this;

			PartyPackageRevenueHistoryPackage.RoleType.ObjectType = PackageClass.Instance;;
			PartyPackageRevenueHistoryPackage.RoleType.AssignedSingularName = "Package";
			PartyPackageRevenueHistoryPackage.RoleType.AssignedPluralName = "Packages";
			this.Roles.Package = PartyPackageRevenueHistoryPackage.RoleType;

			var PartyPackageRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("c503c916-7e4b-4a2f-98ca-e46141d6b63a"), new Guid("b9a80dee-d5bb-4a3f-9540-3b9b27cb47c6"), new Guid("e03d5835-0741-4710-a8d7-b1f317ed09a8"));
			PartyPackageRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyPackageRevenueHistoryInternalOrganisation.IsIndexed = true;

			PartyPackageRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			PartyPackageRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PartyPackageRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PartyPackageRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PartyPackageRevenueHistoryInternalOrganisation.RoleType;

			var PartyPackageRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("c8ed0a7f-62c9-44e4-a7c5-57a06f9aaedd"), new Guid("e9398597-8748-41dd-89b9-7f0cf7366d7a"), new Guid("188c541c-7d81-4dbf-8f89-17ce44744f8b"));
			PartyPackageRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyPackageRevenueHistoryCurrency.IsIndexed = true;

			PartyPackageRevenueHistoryCurrency.AssociationType.ObjectType = this;

			PartyPackageRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PartyPackageRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			PartyPackageRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PartyPackageRevenueHistoryCurrency.RoleType;

			var PartyPackageRevenueHistoryParty = new RelationType(AppsDomain.Instance, new Guid("e3aeeaa7-3407-45cd-98da-6f36de3587b2"), new Guid("0c896c5b-06a6-44ec-8b0a-b038cc560988"), new Guid("bc19a2d0-2efd-4e01-97bd-ea97fa020c3b"));
			PartyPackageRevenueHistoryParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyPackageRevenueHistoryParty.IsIndexed = true;

			PartyPackageRevenueHistoryParty.AssociationType.ObjectType = this;

			PartyPackageRevenueHistoryParty.RoleType.ObjectType = PartyInterface.Instance;;
			PartyPackageRevenueHistoryParty.RoleType.AssignedSingularName = "Party";
			PartyPackageRevenueHistoryParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = PartyPackageRevenueHistoryParty.RoleType;

			var PartyPackageRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("f1f0c7f4-fba8-4388-b5ca-a59a251152f9"), new Guid("7a7bbe2b-26af-4f05-8e5f-1de7cffa858b"), new Guid("e8797e06-4e7b-453b-9f1d-4f43c779c437"));
			PartyPackageRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyPackageRevenueHistoryRevenue.AssociationType.ObjectType = this;

			PartyPackageRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyPackageRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			PartyPackageRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			PartyPackageRevenueHistoryRevenue.RoleType.Scale = 2;
			PartyPackageRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = PartyPackageRevenueHistoryRevenue.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyPackageRevenueHistoryClass.Instance.ConcreteRoles.Package = PartyPackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Package]; 

			PartyPackageRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = PartyPackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			PartyPackageRevenueHistoryClass.Instance.ConcreteRoles.Currency = PartyPackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			PartyPackageRevenueHistoryClass.Instance.ConcreteRoles.Party = PartyPackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			PartyPackageRevenueHistoryClass.Instance.ConcreteRoles.Revenue = PartyPackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 


		}

		internal class RolesType
		{
			internal RoleType Package;
			internal RoleType InternalOrganisation;
			internal RoleType Currency;
			internal RoleType Party;
			internal RoleType Revenue;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Package;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OrderKindClass : Class
	{
		public static OrderKindClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrderKindClass() : base(AppsDomain.Instance, new Guid("7f13c77f-1ef1-446d-928d-1c96f9fc8b05"))
        {
			this.SingularName = "OrderKind";
			this.PluralName = "OrderKinds";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b974d268-a86f-46f4-bc14-c4996d9e5756"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e5b64f4c-aec6-4ba4-89d2-aa49e54fe347"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrderKindDescription = new RelationType(AppsDomain.Instance, new Guid("cb4c5cfa-5c2c-4cdf-898b-9afcd28229c4"), new Guid("6b9b043f-c629-439d-be92-e825177d8c29"), new Guid("8f85bba3-1eaa-4352-bfd4-68f29ce4f71c"));
			OrderKindDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderKindDescription.AssociationType.ObjectType = this;

			OrderKindDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrderKindDescription.RoleType.AssignedSingularName = "Description";
			OrderKindDescription.RoleType.AssignedPluralName = "Descriptions";
			OrderKindDescription.RoleType.Size = 256;
			this.Roles.Description = OrderKindDescription.RoleType;

			var OrderKindScheduleManually = new RelationType(AppsDomain.Instance, new Guid("e35c295c-a4a8-4441-af9a-bd2d3e96bab3"), new Guid("c2158f51-489a-4618-b289-dff18a05afb5"), new Guid("c07c051a-e204-46dd-bac2-1ce957c8c6d9"));
			OrderKindScheduleManually.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderKindScheduleManually.AssociationType.ObjectType = this;

			OrderKindScheduleManually.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			OrderKindScheduleManually.RoleType.AssignedSingularName = "ScheduleManually";
			OrderKindScheduleManually.RoleType.AssignedPluralName = "ScheduleManuallies";
			this.Roles.ScheduleManually = OrderKindScheduleManually.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrderKindClass.Instance.ConcreteRoles.Description = OrderKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			OrderKindClass.Instance.ConcreteRoles.ScheduleManually = OrderKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduleManually]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType ScheduleManually;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ScheduleManually;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AmortizationClass : Class
	{
		public static AmortizationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AmortizationClass() : base(AppsDomain.Instance, new Guid("7fd1760c-ee1f-4d04-8a93-dfebc82757c1"))
        {
			this.SingularName = "Amortization";
			this.PluralName = "Amortizations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5778f299-1689-40e6-a211-7df71b95d1e5"))
			{
				Subtype = Instance,
				Supertype = InternalAccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PickListItemClass : Class
	{
		public static PickListItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PickListItemClass() : base(AppsDomain.Instance, new Guid("7fec090e-3d4a-4ec7-895f-4b30d01f59bb"))
        {
			this.SingularName = "PickListItem";
			this.PluralName = "PickListItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7c05dd7b-261a-407d-88fd-ae9349aa0bee"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("85f08bf4-b520-4332-8f49-d3cc5b0790c4"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PickListItemRequestedQuantity = new RelationType(AppsDomain.Instance, new Guid("6e89daf6-f07f-4a7d-8032-cc3c08d443c2"), new Guid("73671086-9f60-489a-a77b-69ab508862cc"), new Guid("50ef0257-edfd-44c4-ab76-230432d1be7d"));
			PickListItemRequestedQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			PickListItemRequestedQuantity.AssociationType.ObjectType = this;

			PickListItemRequestedQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PickListItemRequestedQuantity.RoleType.AssignedSingularName = "RequestedQuantity";
			PickListItemRequestedQuantity.RoleType.AssignedPluralName = "RequestedQuantities";
			PickListItemRequestedQuantity.RoleType.Scale = 2;
			PickListItemRequestedQuantity.RoleType.Precision = 19;
			this.Roles.RequestedQuantity = PickListItemRequestedQuantity.RoleType;

			var PickListItemInventoryItem = new RelationType(AppsDomain.Instance, new Guid("8a8ad2c2-e301-40be-8c7e-3c8291c3bbe9"), new Guid("1b28c7b7-f770-4e49-acbf-ade8e67ba939"), new Guid("eb4da206-6f39-4615-84e7-afb12f1cf486"));
			PickListItemInventoryItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			PickListItemInventoryItem.IsIndexed = true;

			PickListItemInventoryItem.AssociationType.ObjectType = this;

			PickListItemInventoryItem.RoleType.ObjectType = InventoryItemInterface.Instance;;
			PickListItemInventoryItem.RoleType.AssignedSingularName = "InventoryItem";
			PickListItemInventoryItem.RoleType.AssignedPluralName = "InventoryItems";
			this.Roles.InventoryItem = PickListItemInventoryItem.RoleType;

			var PickListItemActualQuantity = new RelationType(AppsDomain.Instance, new Guid("f32d100b-a6e8-4cb2-98b4-c06264789c76"), new Guid("3b75e3a8-7580-4f07-bf75-ae7541a00609"), new Guid("a1017517-e337-4c43-891e-c716ad615b07"));
			PickListItemActualQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			PickListItemActualQuantity.AssociationType.ObjectType = this;

			PickListItemActualQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PickListItemActualQuantity.RoleType.AssignedSingularName = "ActualQuantity";
			PickListItemActualQuantity.RoleType.AssignedPluralName = "ActualQuantities";
			PickListItemActualQuantity.RoleType.Scale = 2;
			PickListItemActualQuantity.RoleType.Precision = 19;
			this.Roles.ActualQuantity = PickListItemActualQuantity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PickListItemClass.Instance.ConcreteRoles.RequestedQuantity = PickListItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequestedQuantity]; 

			PickListItemClass.Instance.ConcreteRoles.InventoryItem = PickListItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItem]; 

			PickListItemClass.Instance.ConcreteRoles.ActualQuantity = PickListItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualQuantity]; 


		}

		internal class RolesType
		{
			internal RoleType RequestedQuantity;
			internal RoleType InventoryItem;
			internal RoleType ActualQuantity;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType RequestedQuantity;
			internal ConcreteRoleType InventoryItem;
			internal ConcreteRoleType ActualQuantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesOrderItemClass : Class
	{
		public static SalesOrderItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesOrderItemClass() : base(AppsDomain.Instance, new Guid("80de925c-04cc-412c-83a5-60405b0e63e6"))
        {
			this.SingularName = "SalesOrderItem";
			this.PluralName = "SalesOrderItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2e2eae5f-e584-41a9-8ca4-08d689987ff0"))
			{
				Subtype = Instance,
				Supertype = OrderItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesOrderItemInitialProfitMargin = new RelationType(AppsDomain.Instance, new Guid("0229942b-e102-4e97-af8d-97ee8383203e"), new Guid("e1e640d4-4096-42df-9c12-6bf54e5314db"), new Guid("16e9993a-6604-41e9-9ed0-053480d45d46"));
			SalesOrderItemInitialProfitMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemInitialProfitMargin.IsDerived = true;
			SalesOrderItemInitialProfitMargin.AssociationType.ObjectType = this;

			SalesOrderItemInitialProfitMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemInitialProfitMargin.RoleType.AssignedSingularName = "InitialProfitMargin";
			SalesOrderItemInitialProfitMargin.RoleType.AssignedPluralName = "InitialProfitMargins";
			SalesOrderItemInitialProfitMargin.RoleType.Scale = 2;
			SalesOrderItemInitialProfitMargin.RoleType.Precision = 19;
			this.Roles.InitialProfitMargin = SalesOrderItemInitialProfitMargin.RoleType;

			var SalesOrderItemCurrentPaymentStatus = new RelationType(AppsDomain.Instance, new Guid("14d596e8-adec-46bc-b260-af37d24a1035"), new Guid("4f846efe-5546-4709-8f31-2470a3e3650e"), new Guid("ad606374-6b77-4ddc-b907-e190faf7da0e"));
			SalesOrderItemCurrentPaymentStatus.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemCurrentPaymentStatus.IsIndexed = true;

			SalesOrderItemCurrentPaymentStatus.AssociationType.ObjectType = this;

			SalesOrderItemCurrentPaymentStatus.RoleType.ObjectType = SalesOrderItemStatusClass.Instance;;
			SalesOrderItemCurrentPaymentStatus.RoleType.AssignedSingularName = "CurrentPaymentStatus";
			SalesOrderItemCurrentPaymentStatus.RoleType.AssignedPluralName = "CurrentPaymentStatuses";
			this.Roles.CurrentPaymentStatus = SalesOrderItemCurrentPaymentStatus.RoleType;

			var SalesOrderItemQuantityShortFalled = new RelationType(AppsDomain.Instance, new Guid("1e1ed439-ae25-4446-83e6-295d8627a7b5"), new Guid("67bc37d9-0d6f-4227-81c9-8f03a1e0da47"), new Guid("d8ab230a-92d2-44cb-8e45-502285dd9a5e"));
			SalesOrderItemQuantityShortFalled.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemQuantityShortFalled.IsDerived = true;
			SalesOrderItemQuantityShortFalled.AssociationType.ObjectType = this;

			SalesOrderItemQuantityShortFalled.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemQuantityShortFalled.RoleType.AssignedSingularName = "QuantityShortFalled";
			SalesOrderItemQuantityShortFalled.RoleType.AssignedPluralName = "QuantitiesShortFalled";
			SalesOrderItemQuantityShortFalled.RoleType.Scale = 2;
			SalesOrderItemQuantityShortFalled.RoleType.Precision = 19;
			this.Roles.QuantityShortFalled = SalesOrderItemQuantityShortFalled.RoleType;

			var SalesOrderItemOrderedWithFeature = new RelationType(AppsDomain.Instance, new Guid("1ea02a2c-280a-4a48-9ffb-1517789c56f1"), new Guid("851f33e4-6c43-468d-ab0d-0f5f83bdb179"), new Guid("213d2b36-dbfd-4e2d-a854-82ba271f0d94"));
			SalesOrderItemOrderedWithFeature.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesOrderItemOrderedWithFeature.IsIndexed = true;

			SalesOrderItemOrderedWithFeature.AssociationType.ObjectType = this;

			SalesOrderItemOrderedWithFeature.RoleType.ObjectType = OrderItemInterface.Instance;;
			SalesOrderItemOrderedWithFeature.RoleType.AssignedSingularName = "OrderedWithFeature";
			SalesOrderItemOrderedWithFeature.RoleType.AssignedPluralName = "OrderedWithFeatures";
			this.Roles.OrderedWithFeature = SalesOrderItemOrderedWithFeature.RoleType;

			var SalesOrderItemMaintainedProfitMargin = new RelationType(AppsDomain.Instance, new Guid("1edd9008-537a-43ba-b4a1-56d3c3211c36"), new Guid("db9987b4-b71c-4ece-b4c1-53bb27a02dff"), new Guid("ae3bd8e0-1f58-45e1-a6dc-191d7668e358"));
			SalesOrderItemMaintainedProfitMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemMaintainedProfitMargin.IsDerived = true;
			SalesOrderItemMaintainedProfitMargin.AssociationType.ObjectType = this;

			SalesOrderItemMaintainedProfitMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemMaintainedProfitMargin.RoleType.AssignedSingularName = "MaintainedProfitMargin";
			SalesOrderItemMaintainedProfitMargin.RoleType.AssignedPluralName = "MaintainedProfitMargins";
			SalesOrderItemMaintainedProfitMargin.RoleType.Scale = 2;
			SalesOrderItemMaintainedProfitMargin.RoleType.Precision = 19;
			this.Roles.MaintainedProfitMargin = SalesOrderItemMaintainedProfitMargin.RoleType;

			var SalesOrderItemRequiredProfitMargin = new RelationType(AppsDomain.Instance, new Guid("2bd8163c-b2cd-49bc-922a-b8c859c24031"), new Guid("3f66929d-a2f1-4e9b-a701-4364e3a25e1d"), new Guid("1fbf819e-b7fe-4ce3-86af-efea369db2fa"));
			SalesOrderItemRequiredProfitMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemRequiredProfitMargin.AssociationType.ObjectType = this;

			SalesOrderItemRequiredProfitMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemRequiredProfitMargin.RoleType.AssignedSingularName = "RequiredProfitMargin";
			SalesOrderItemRequiredProfitMargin.RoleType.AssignedPluralName = "RequiredProfitMargins";
			SalesOrderItemRequiredProfitMargin.RoleType.Scale = 2;
			SalesOrderItemRequiredProfitMargin.RoleType.Precision = 19;
			this.Roles.RequiredProfitMargin = SalesOrderItemRequiredProfitMargin.RoleType;

			var SalesOrderItemOrderItemStatus = new RelationType(AppsDomain.Instance, new Guid("3072d12f-e8de-43ba-a63c-f557744a1d5d"), new Guid("9b642b30-ec44-4877-a191-974704f6d8df"), new Guid("1eb0ad30-68f6-4d63-9e07-96f7e90005ee"));
			SalesOrderItemOrderItemStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesOrderItemOrderItemStatus.IsDerived = true;
			SalesOrderItemOrderItemStatus.IsIndexed = true;

			SalesOrderItemOrderItemStatus.AssociationType.ObjectType = this;

			SalesOrderItemOrderItemStatus.RoleType.ObjectType = SalesOrderItemStatusClass.Instance;;
			SalesOrderItemOrderItemStatus.RoleType.AssignedSingularName = "OrderItemStatus";
			SalesOrderItemOrderItemStatus.RoleType.AssignedPluralName = "OrderItemStatuses";
			this.Roles.OrderItemStatus = SalesOrderItemOrderItemStatus.RoleType;

			var SalesOrderItemCurrentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("3dbd9a9b-8cda-4cf3-890d-2e6af4e47018"), new Guid("fba228cb-4b3f-4f50-8b6a-f16572ba3977"), new Guid("9d69d9af-7c23-4a1d-a4f2-09ef58881ce8"));
			SalesOrderItemCurrentShipmentStatus.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemCurrentShipmentStatus.IsIndexed = true;

			SalesOrderItemCurrentShipmentStatus.AssociationType.ObjectType = this;

			SalesOrderItemCurrentShipmentStatus.RoleType.ObjectType = SalesOrderItemStatusClass.Instance;;
			SalesOrderItemCurrentShipmentStatus.RoleType.AssignedSingularName = "CurrentShipmentStatus";
			SalesOrderItemCurrentShipmentStatus.RoleType.AssignedPluralName = "CurrentShipmentStatuses";
			this.Roles.CurrentShipmentStatus = SalesOrderItemCurrentShipmentStatus.RoleType;

			var SalesOrderItemPreviousReservedFromInventoryItem = new RelationType(AppsDomain.Instance, new Guid("3e798309-d5d5-4860-87ec-ba3766e96c9e"), new Guid("4626b586-07e1-468c-877a-d1a8f1b196c5"), new Guid("b2aef5ac-45f7-41aa-8e1b-f2d79d3d9fad"));
			SalesOrderItemPreviousReservedFromInventoryItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemPreviousReservedFromInventoryItem.IsDerived = true;
			SalesOrderItemPreviousReservedFromInventoryItem.IsIndexed = true;

			SalesOrderItemPreviousReservedFromInventoryItem.AssociationType.ObjectType = this;

			SalesOrderItemPreviousReservedFromInventoryItem.RoleType.ObjectType = NonSerializedInventoryItemClass.Instance;;
			SalesOrderItemPreviousReservedFromInventoryItem.RoleType.AssignedSingularName = "PreviousReservedFromInventoryItem";
			SalesOrderItemPreviousReservedFromInventoryItem.RoleType.AssignedPluralName = "PreviousReservedFromInventoryItems";
			this.Roles.PreviousReservedFromInventoryItem = SalesOrderItemPreviousReservedFromInventoryItem.RoleType;

			var SalesOrderItemQuantityShipNow = new RelationType(AppsDomain.Instance, new Guid("40111efb-f609-4726-85c1-a9dd7160df72"), new Guid("1f0c1c76-4e49-4c31-9b35-cfa5d842039b"), new Guid("4e3983f7-09db-4e06-bf47-a2a4dbcdfa40"));
			SalesOrderItemQuantityShipNow.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemQuantityShipNow.AssociationType.ObjectType = this;

			SalesOrderItemQuantityShipNow.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemQuantityShipNow.RoleType.AssignedSingularName = "QuantityShipNow";
			SalesOrderItemQuantityShipNow.RoleType.AssignedPluralName = "QuantitiesShipNow";
			SalesOrderItemQuantityShipNow.RoleType.Scale = 2;
			SalesOrderItemQuantityShipNow.RoleType.Precision = 19;
			this.Roles.QuantityShipNow = SalesOrderItemQuantityShipNow.RoleType;

			var SalesOrderItemRequiredMarkupPercentage = new RelationType(AppsDomain.Instance, new Guid("48e40504-bb22-4b11-949d-569b3a556416"), new Guid("979f6fa2-29f4-43c0-86d7-761509719112"), new Guid("6b6dab9b-1583-4f3d-8d97-1a8a53af9e75"));
			SalesOrderItemRequiredMarkupPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemRequiredMarkupPercentage.AssociationType.ObjectType = this;

			SalesOrderItemRequiredMarkupPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemRequiredMarkupPercentage.RoleType.AssignedSingularName = "RequiredMarkupPercentage";
			SalesOrderItemRequiredMarkupPercentage.RoleType.AssignedPluralName = "RequiredMarkupPercentages";
			SalesOrderItemRequiredMarkupPercentage.RoleType.Scale = 2;
			SalesOrderItemRequiredMarkupPercentage.RoleType.Precision = 19;
			this.Roles.RequiredMarkupPercentage = SalesOrderItemRequiredMarkupPercentage.RoleType;

			var SalesOrderItemQuantityShipped = new RelationType(AppsDomain.Instance, new Guid("545eb094-63d8-4d25-a069-7c3e91f26eb7"), new Guid("686d5956-c2dc-46d5-b812-52020d392f0f"), new Guid("3a8adaf6-82e6-45a6-bd5f-61860125d77b"));
			SalesOrderItemQuantityShipped.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemQuantityShipped.IsDerived = true;
			SalesOrderItemQuantityShipped.AssociationType.ObjectType = this;

			SalesOrderItemQuantityShipped.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemQuantityShipped.RoleType.AssignedSingularName = "QuantityShipped";
			SalesOrderItemQuantityShipped.RoleType.AssignedPluralName = "QuantitiesShipped";
			SalesOrderItemQuantityShipped.RoleType.Scale = 2;
			SalesOrderItemQuantityShipped.RoleType.Precision = 19;
			this.Roles.QuantityShipped = SalesOrderItemQuantityShipped.RoleType;

			var SalesOrderItemCurrentOrderItemStatus = new RelationType(AppsDomain.Instance, new Guid("5bf138bd-27c1-4291-91da-b543170bf160"), new Guid("c4fab99d-b408-437a-aea3-05cf32afa5d4"), new Guid("76f3c438-e027-492d-bae4-932d81f455df"));
			SalesOrderItemCurrentOrderItemStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemCurrentOrderItemStatus.IsDerived = true;
			SalesOrderItemCurrentOrderItemStatus.IsIndexed = true;

			SalesOrderItemCurrentOrderItemStatus.AssociationType.ObjectType = this;

			SalesOrderItemCurrentOrderItemStatus.RoleType.ObjectType = SalesOrderItemStatusClass.Instance;;
			SalesOrderItemCurrentOrderItemStatus.RoleType.AssignedSingularName = "CurrentOrderItemStatus";
			SalesOrderItemCurrentOrderItemStatus.RoleType.AssignedPluralName = "CurrentOrderItemStatuses";
			this.Roles.CurrentOrderItemStatus = SalesOrderItemCurrentOrderItemStatus.RoleType;

			var SalesOrderItemShipToAddress = new RelationType(AppsDomain.Instance, new Guid("5cc50f26-361b-46d7-a8e6-a9f53f7d2722"), new Guid("0d8906e9-3bfd-4d9b-8b24-8526fdfb2e33"), new Guid("000b641f-00be-4b9c-84aa-a8c968024ece"));
			SalesOrderItemShipToAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemShipToAddress.IsDerived = true;
			SalesOrderItemShipToAddress.IsIndexed = true;

			SalesOrderItemShipToAddress.AssociationType.ObjectType = this;

			SalesOrderItemShipToAddress.RoleType.ObjectType = PostalAddressClass.Instance;;
			SalesOrderItemShipToAddress.RoleType.AssignedSingularName = "ShipToAddress";
			SalesOrderItemShipToAddress.RoleType.AssignedPluralName = "ShipToAddresses";
			this.Roles.ShipToAddress = SalesOrderItemShipToAddress.RoleType;

			var SalesOrderItemQuantityPicked = new RelationType(AppsDomain.Instance, new Guid("64edd3e6-0b78-4b34-8a11-aa9c0a1b1f35"), new Guid("667a1304-05ae-410a-94a1-5e87a40dc53b"), new Guid("d15456ab-66c1-4ecc-bfc5-910b7d9c4869"));
			SalesOrderItemQuantityPicked.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemQuantityPicked.IsDerived = true;
			SalesOrderItemQuantityPicked.AssociationType.ObjectType = this;

			SalesOrderItemQuantityPicked.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemQuantityPicked.RoleType.AssignedSingularName = "QuantityPicked";
			SalesOrderItemQuantityPicked.RoleType.AssignedPluralName = "QuantitiesPicked";
			SalesOrderItemQuantityPicked.RoleType.Scale = 2;
			SalesOrderItemQuantityPicked.RoleType.Precision = 19;
			this.Roles.QuantityPicked = SalesOrderItemQuantityPicked.RoleType;

			var SalesOrderItemPreviousProduct = new RelationType(AppsDomain.Instance, new Guid("6826e05e-eb9a-4dc4-a653-0230dec934a9"), new Guid("aa2b8b0a-672c-423b-9ca8-2fd40f8d1306"), new Guid("793f4946-ed12-49ca-9764-8df534941cca"));
			SalesOrderItemPreviousProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemPreviousProduct.IsDerived = true;
			SalesOrderItemPreviousProduct.IsIndexed = true;

			SalesOrderItemPreviousProduct.AssociationType.ObjectType = this;

			SalesOrderItemPreviousProduct.RoleType.ObjectType = ProductInterface.Instance;;
			SalesOrderItemPreviousProduct.RoleType.AssignedSingularName = "PreviousProduct";
			SalesOrderItemPreviousProduct.RoleType.AssignedPluralName = "PreviousProducts";
			this.Roles.PreviousProduct = SalesOrderItemPreviousProduct.RoleType;

			var SalesOrderItemCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("710e0b05-01d1-4592-b652-f0fada3dfa45"), new Guid("9ab86597-c31b-46d7-b546-89ebfd1411cd"), new Guid("9533bbb6-359f-49a3-959b-98fcdd5cc2a7"));
			SalesOrderItemCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemCurrentObjectState.IsDerived = true;
			SalesOrderItemCurrentObjectState.IsIndexed = true;

			SalesOrderItemCurrentObjectState.AssociationType.ObjectType = this;

			SalesOrderItemCurrentObjectState.RoleType.ObjectType = SalesOrderItemObjectStateClass.Instance;;
			SalesOrderItemCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			SalesOrderItemCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = SalesOrderItemCurrentObjectState.RoleType;

			var SalesOrderItemUnitPurchasePrice = new RelationType(AppsDomain.Instance, new Guid("75a13fdc-90b2-4550-9b2f-fc0a9387d569"), new Guid("94922e2d-1570-4667-af8f-5d4415fd6d78"), new Guid("39d62b69-520c-456d-b3f1-6ca640ffc4cb"));
			SalesOrderItemUnitPurchasePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemUnitPurchasePrice.IsDerived = true;
			SalesOrderItemUnitPurchasePrice.AssociationType.ObjectType = this;

			SalesOrderItemUnitPurchasePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemUnitPurchasePrice.RoleType.AssignedSingularName = "UnitPurchasePrice";
			SalesOrderItemUnitPurchasePrice.RoleType.AssignedPluralName = "UnitPurchasePrices";
			SalesOrderItemUnitPurchasePrice.RoleType.Scale = 2;
			SalesOrderItemUnitPurchasePrice.RoleType.Precision = 19;
			this.Roles.UnitPurchasePrice = SalesOrderItemUnitPurchasePrice.RoleType;

			var SalesOrderItemShipToParty = new RelationType(AppsDomain.Instance, new Guid("7a8255f5-4283-4803-9f96-60a9adc2743b"), new Guid("2c9b2182-7b93-46c9-86ac-d13add6d52b5"), new Guid("7596f471-e54c-4491-8af6-02f0e8d7d015"));
			SalesOrderItemShipToParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemShipToParty.IsDerived = true;
			SalesOrderItemShipToParty.IsIndexed = true;

			SalesOrderItemShipToParty.AssociationType.ObjectType = this;

			SalesOrderItemShipToParty.RoleType.ObjectType = PartyInterface.Instance;;
			SalesOrderItemShipToParty.RoleType.AssignedSingularName = "ShipToParty";
			SalesOrderItemShipToParty.RoleType.AssignedPluralName = "ShipToParties";
			this.Roles.ShipToParty = SalesOrderItemShipToParty.RoleType;

			var SalesOrderItemAssignedShipToAddress = new RelationType(AppsDomain.Instance, new Guid("7ae1b939-b387-4e6e-9da2-bc0364e04f7b"), new Guid("808f88ba-3866-4785-812c-c062c5f268a4"), new Guid("64639736-a7d0-47cb-8afb-fa751a19670d"));
			SalesOrderItemAssignedShipToAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemAssignedShipToAddress.IsIndexed = true;

			SalesOrderItemAssignedShipToAddress.AssociationType.ObjectType = this;

			SalesOrderItemAssignedShipToAddress.RoleType.ObjectType = PostalAddressClass.Instance;;
			SalesOrderItemAssignedShipToAddress.RoleType.AssignedSingularName = "AssignedShipToAddress";
			SalesOrderItemAssignedShipToAddress.RoleType.AssignedPluralName = "AssignedShipToAddresses";
			this.Roles.AssignedShipToAddress = SalesOrderItemAssignedShipToAddress.RoleType;

			var SalesOrderItemQuantityReturned = new RelationType(AppsDomain.Instance, new Guid("8145fbd3-a30f-44a0-9520-6b72ac20a82d"), new Guid("59383e9d-690e-46aa-9cc0-1dd39db14f60"), new Guid("31087f2f-10e8-4558-9e0a-a5dbceb3204a"));
			SalesOrderItemQuantityReturned.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemQuantityReturned.AssociationType.ObjectType = this;

			SalesOrderItemQuantityReturned.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemQuantityReturned.RoleType.AssignedSingularName = "QuantityReturned";
			SalesOrderItemQuantityReturned.RoleType.AssignedPluralName = "QuantitiesReturned";
			SalesOrderItemQuantityReturned.RoleType.Scale = 2;
			SalesOrderItemQuantityReturned.RoleType.Precision = 19;
			this.Roles.QuantityReturned = SalesOrderItemQuantityReturned.RoleType;

			var SalesOrderItemQuantityReserved = new RelationType(AppsDomain.Instance, new Guid("85d11891-5ffe-488f-9f23-5b2c7bc1c480"), new Guid("283cdb9a-e7e3-4486-92da-5e94653505a8"), new Guid("fd06dd18-c1d4-40c7-b62e-273a8522f580"));
			SalesOrderItemQuantityReserved.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemQuantityReserved.IsDerived = true;
			SalesOrderItemQuantityReserved.AssociationType.ObjectType = this;

			SalesOrderItemQuantityReserved.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemQuantityReserved.RoleType.AssignedSingularName = "QuantityReserved";
			SalesOrderItemQuantityReserved.RoleType.AssignedPluralName = "QuantitiesReserved";
			SalesOrderItemQuantityReserved.RoleType.Scale = 2;
			SalesOrderItemQuantityReserved.RoleType.Precision = 19;
			this.Roles.QuantityReserved = SalesOrderItemQuantityReserved.RoleType;

			var SalesOrderItemSalesRep = new RelationType(AppsDomain.Instance, new Guid("911abda0-2eb0-477e-80be-e9e7d358205e"), new Guid("23af5657-ed05-43c2-aeed-d268204528d2"), new Guid("42a88fb9-84bc-4e35-83ff-6cb5c0cf3c96"));
			SalesOrderItemSalesRep.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemSalesRep.IsDerived = true;
			SalesOrderItemSalesRep.IsIndexed = true;

			SalesOrderItemSalesRep.AssociationType.ObjectType = this;

			SalesOrderItemSalesRep.RoleType.ObjectType = PersonClass.Instance;;
			SalesOrderItemSalesRep.RoleType.AssignedSingularName = "SalesRep";
			SalesOrderItemSalesRep.RoleType.AssignedPluralName = "SalesReps";
			this.Roles.SalesRep = SalesOrderItemSalesRep.RoleType;

			var SalesOrderItemShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("ae30b852-d1d9-4966-a65a-6f16120652f6"), new Guid("c3a3e068-8683-44b7-a255-47e49a63c453"), new Guid("7a4a9d1b-2cff-4f9c-8b7c-94f08fb68c46"));
			SalesOrderItemShipmentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesOrderItemShipmentStatus.IsDerived = true;
			SalesOrderItemShipmentStatus.IsIndexed = true;

			SalesOrderItemShipmentStatus.AssociationType.ObjectType = this;

			SalesOrderItemShipmentStatus.RoleType.ObjectType = SalesOrderItemStatusClass.Instance;;
			SalesOrderItemShipmentStatus.RoleType.AssignedSingularName = "ShipmentStatus";
			SalesOrderItemShipmentStatus.RoleType.AssignedPluralName = "ShipmentStatuses";
			this.Roles.ShipmentStatus = SalesOrderItemShipmentStatus.RoleType;

			var SalesOrderItemAssignedShipToParty = new RelationType(AppsDomain.Instance, new Guid("b2d2645e-0d3f-473e-b277-6f890b9b911e"), new Guid("68281397-74f8-4356-b9fc-014f792ab914"), new Guid("1292e876-1c61-42cb-8f01-8b3eb6cf0fa0"));
			SalesOrderItemAssignedShipToParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemAssignedShipToParty.IsIndexed = true;

			SalesOrderItemAssignedShipToParty.AssociationType.ObjectType = this;

			SalesOrderItemAssignedShipToParty.RoleType.ObjectType = PartyInterface.Instance;;
			SalesOrderItemAssignedShipToParty.RoleType.AssignedSingularName = "AssignedShipToParty";
			SalesOrderItemAssignedShipToParty.RoleType.AssignedPluralName = "AssignedShipToParties";
			this.Roles.AssignedShipToParty = SalesOrderItemAssignedShipToParty.RoleType;

			var SalesOrderItemQuantityPendingShipment = new RelationType(AppsDomain.Instance, new Guid("b2f7dabb-8b87-41bc-8903-166d77bba1c5"), new Guid("ad7dfb12-d00d-4a93-a011-7cb09c1e9aa9"), new Guid("ba9a9c6c-4df0-4488-b5fa-6181e45c6f18"));
			SalesOrderItemQuantityPendingShipment.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemQuantityPendingShipment.IsDerived = true;
			SalesOrderItemQuantityPendingShipment.AssociationType.ObjectType = this;

			SalesOrderItemQuantityPendingShipment.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemQuantityPendingShipment.RoleType.AssignedSingularName = "QuantityPendingShipment";
			SalesOrderItemQuantityPendingShipment.RoleType.AssignedPluralName = "QuantitiesPendingShipment";
			SalesOrderItemQuantityPendingShipment.RoleType.Scale = 2;
			SalesOrderItemQuantityPendingShipment.RoleType.Precision = 19;
			this.Roles.QuantityPendingShipment = SalesOrderItemQuantityPendingShipment.RoleType;

			var SalesOrderItemMaintainedMarkupPercentage = new RelationType(AppsDomain.Instance, new Guid("b8d116ca-dbab-4119-84ca-c0e196d9c018"), new Guid("3f2cc31e-84e9-4e49-bfbe-0a436e2236be"), new Guid("7cee282f-ff61-42fc-9a2e-54164e8b6390"));
			SalesOrderItemMaintainedMarkupPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemMaintainedMarkupPercentage.IsDerived = true;
			SalesOrderItemMaintainedMarkupPercentage.AssociationType.ObjectType = this;

			SalesOrderItemMaintainedMarkupPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemMaintainedMarkupPercentage.RoleType.AssignedSingularName = "MaintainedMarkupPercentage";
			SalesOrderItemMaintainedMarkupPercentage.RoleType.AssignedPluralName = "MaintainedMarkupPercentages";
			SalesOrderItemMaintainedMarkupPercentage.RoleType.Scale = 2;
			SalesOrderItemMaintainedMarkupPercentage.RoleType.Precision = 19;
			this.Roles.MaintainedMarkupPercentage = SalesOrderItemMaintainedMarkupPercentage.RoleType;

			var SalesOrderItemPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("c43d151f-3b6e-498e-b588-0a7cd6d746dd"), new Guid("916832a5-16d8-4705-9571-9631f6c1c0c0"), new Guid("094aafd5-7e41-41f4-b49f-7b8589414452"));
			SalesOrderItemPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemPreviousObjectState.IsDerived = true;
			SalesOrderItemPreviousObjectState.IsIndexed = true;

			SalesOrderItemPreviousObjectState.AssociationType.ObjectType = this;

			SalesOrderItemPreviousObjectState.RoleType.ObjectType = SalesOrderItemObjectStateClass.Instance;;
			SalesOrderItemPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			SalesOrderItemPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = SalesOrderItemPreviousObjectState.RoleType;

			var SalesOrderItemInitialMarkupPercentage = new RelationType(AppsDomain.Instance, new Guid("d5639e07-37b8-46db-9e35-fa98301d31dd"), new Guid("43ee44b6-2e51-4ade-8bb7-9b10a780ba2e"), new Guid("38e21291-b24a-4331-b781-f7950df3f501"));
			SalesOrderItemInitialMarkupPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemInitialMarkupPercentage.IsDerived = true;
			SalesOrderItemInitialMarkupPercentage.AssociationType.ObjectType = this;

			SalesOrderItemInitialMarkupPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemInitialMarkupPercentage.RoleType.AssignedSingularName = "InitialMarkupPercentage";
			SalesOrderItemInitialMarkupPercentage.RoleType.AssignedPluralName = "InitialMarkupPercentages";
			SalesOrderItemInitialMarkupPercentage.RoleType.Scale = 2;
			SalesOrderItemInitialMarkupPercentage.RoleType.Precision = 19;
			this.Roles.InitialMarkupPercentage = SalesOrderItemInitialMarkupPercentage.RoleType;

			var SalesOrderItemReservedFromInventoryItem = new RelationType(AppsDomain.Instance, new Guid("d7c25b48-d82f-4250-b09d-1e935eab665b"), new Guid("67e9a9d9-74ff-4b04-9aa1-dd08c5348a3e"), new Guid("4bfc1720-a2f6-4204-974b-42ca42c0d2e1"));
			SalesOrderItemReservedFromInventoryItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemReservedFromInventoryItem.IsIndexed = true;

			SalesOrderItemReservedFromInventoryItem.AssociationType.ObjectType = this;

			SalesOrderItemReservedFromInventoryItem.RoleType.ObjectType = NonSerializedInventoryItemClass.Instance;;
			SalesOrderItemReservedFromInventoryItem.RoleType.AssignedSingularName = "ReservedFromInventoryItem";
			SalesOrderItemReservedFromInventoryItem.RoleType.AssignedPluralName = "ReservedFromInventoryItems";
			this.Roles.ReservedFromInventoryItem = SalesOrderItemReservedFromInventoryItem.RoleType;

			var SalesOrderItemProduct = new RelationType(AppsDomain.Instance, new Guid("e8980105-2c4d-41de-bd67-802a8c0720f1"), new Guid("8b747457-bf7a-4274-b245-d04607b2a5ba"), new Guid("90d69cb4-d485-418f-9608-44063f116ff4"));
			SalesOrderItemProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemProduct.IsIndexed = true;

			SalesOrderItemProduct.AssociationType.ObjectType = this;

			SalesOrderItemProduct.RoleType.ObjectType = ProductInterface.Instance;;
			SalesOrderItemProduct.RoleType.AssignedSingularName = "Product";
			SalesOrderItemProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = SalesOrderItemProduct.RoleType;

			var SalesOrderItemProductFeature = new RelationType(AppsDomain.Instance, new Guid("ed586b2f-c687-4d97-9416-52f7156b7b11"), new Guid("cb5c31c4-2daa-405b-8dc9-5ea6c87f66b3"), new Guid("c5b07ead-1a71-407e-91f8-4ec39853888a"));
			SalesOrderItemProductFeature.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemProductFeature.IsIndexed = true;

			SalesOrderItemProductFeature.AssociationType.ObjectType = this;

			SalesOrderItemProductFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			SalesOrderItemProductFeature.RoleType.AssignedSingularName = "ProductFeature";
			SalesOrderItemProductFeature.RoleType.AssignedPluralName = "ProductFeatures";
			this.Roles.ProductFeature = SalesOrderItemProductFeature.RoleType;

			var SalesOrderItemQuantityRequestsShipping = new RelationType(AppsDomain.Instance, new Guid("f148e660-1e09-4e76-97fb-de62a7ee7482"), new Guid("0105885d-f722-44bd-9f57-6231c38191b5"), new Guid("9132a260-1b35-4b5a-b14c-8dceb6383581"));
			SalesOrderItemQuantityRequestsShipping.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemQuantityRequestsShipping.IsDerived = true;
			SalesOrderItemQuantityRequestsShipping.AssociationType.ObjectType = this;

			SalesOrderItemQuantityRequestsShipping.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesOrderItemQuantityRequestsShipping.RoleType.AssignedSingularName = "QuantityRequestsShipping";
			SalesOrderItemQuantityRequestsShipping.RoleType.AssignedPluralName = "QuantitiesRequestsShipping";
			SalesOrderItemQuantityRequestsShipping.RoleType.Scale = 2;
			SalesOrderItemQuantityRequestsShipping.RoleType.Precision = 19;
			this.Roles.QuantityRequestsShipping = SalesOrderItemQuantityRequestsShipping.RoleType;

			var SalesOrderItemPaymentStatus = new RelationType(AppsDomain.Instance, new Guid("f2ccd5d6-95e3-4d72-938b-9f430f36ae59"), new Guid("77472c36-b500-4788-b1b3-22741adec0c0"), new Guid("748df737-edab-476d-a2f2-0f362828c0e7"));
			SalesOrderItemPaymentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesOrderItemPaymentStatus.IsDerived = true;
			SalesOrderItemPaymentStatus.IsIndexed = true;

			SalesOrderItemPaymentStatus.AssociationType.ObjectType = this;

			SalesOrderItemPaymentStatus.RoleType.ObjectType = SalesOrderItemStatusClass.Instance;;
			SalesOrderItemPaymentStatus.RoleType.AssignedSingularName = "PaymentStatus";
			SalesOrderItemPaymentStatus.RoleType.AssignedPluralName = "PaymentStatuses";
			this.Roles.PaymentStatus = SalesOrderItemPaymentStatus.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesOrderItemClass.Instance.ConcreteRoles.InitialProfitMargin = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialProfitMargin]; 

			SalesOrderItemClass.Instance.ConcreteRoles.CurrentPaymentStatus = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPaymentStatus]; 

			SalesOrderItemClass.Instance.ConcreteRoles.QuantityShortFalled = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityShortFalled]; 

			SalesOrderItemClass.Instance.ConcreteRoles.OrderedWithFeature = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderedWithFeature]; 

			SalesOrderItemClass.Instance.ConcreteRoles.MaintainedProfitMargin = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaintainedProfitMargin]; 

			SalesOrderItemClass.Instance.ConcreteRoles.RequiredProfitMargin = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredProfitMargin]; 

			SalesOrderItemClass.Instance.ConcreteRoles.OrderItemStatus = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemStatus]; 

			SalesOrderItemClass.Instance.ConcreteRoles.CurrentShipmentStatus = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentShipmentStatus]; 

			SalesOrderItemClass.Instance.ConcreteRoles.PreviousReservedFromInventoryItem = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousReservedFromInventoryItem]; 

			SalesOrderItemClass.Instance.ConcreteRoles.QuantityShipNow = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityShipNow]; 

			SalesOrderItemClass.Instance.ConcreteRoles.RequiredMarkupPercentage = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredMarkupPercentage]; 

			SalesOrderItemClass.Instance.ConcreteRoles.QuantityShipped = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityShipped]; 

			SalesOrderItemClass.Instance.ConcreteRoles.CurrentOrderItemStatus = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentOrderItemStatus]; 

			SalesOrderItemClass.Instance.ConcreteRoles.ShipToAddress = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToAddress]; 

			SalesOrderItemClass.Instance.ConcreteRoles.QuantityPicked = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityPicked]; 

			SalesOrderItemClass.Instance.ConcreteRoles.PreviousProduct = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousProduct]; 

			SalesOrderItemClass.Instance.ConcreteRoles.CurrentObjectState = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			SalesOrderItemClass.Instance.ConcreteRoles.UnitPurchasePrice = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitPurchasePrice]; 

			SalesOrderItemClass.Instance.ConcreteRoles.ShipToParty = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToParty]; 

			SalesOrderItemClass.Instance.ConcreteRoles.AssignedShipToAddress = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssignedShipToAddress]; 

			SalesOrderItemClass.Instance.ConcreteRoles.QuantityReturned = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityReturned]; 

			SalesOrderItemClass.Instance.ConcreteRoles.QuantityReserved = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityReserved]; 

			SalesOrderItemClass.Instance.ConcreteRoles.SalesRep = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRep]; 

			SalesOrderItemClass.Instance.ConcreteRoles.ShipmentStatus = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentStatus]; 

			SalesOrderItemClass.Instance.ConcreteRoles.AssignedShipToParty = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssignedShipToParty]; 

			SalesOrderItemClass.Instance.ConcreteRoles.QuantityPendingShipment = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityPendingShipment]; 

			SalesOrderItemClass.Instance.ConcreteRoles.MaintainedMarkupPercentage = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaintainedMarkupPercentage]; 

			SalesOrderItemClass.Instance.ConcreteRoles.PreviousObjectState = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			SalesOrderItemClass.Instance.ConcreteRoles.InitialMarkupPercentage = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialMarkupPercentage]; 

			SalesOrderItemClass.Instance.ConcreteRoles.ReservedFromInventoryItem = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReservedFromInventoryItem]; 

			SalesOrderItemClass.Instance.ConcreteRoles.Product = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			SalesOrderItemClass.Instance.ConcreteRoles.ProductFeature = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 

			SalesOrderItemClass.Instance.ConcreteRoles.QuantityRequestsShipping = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityRequestsShipping]; 

			SalesOrderItemClass.Instance.ConcreteRoles.PaymentStatus = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentStatus]; 


		}

		internal class RolesType
		{
			internal RoleType InitialProfitMargin;
			internal RoleType CurrentPaymentStatus;
			internal RoleType QuantityShortFalled;
			internal RoleType OrderedWithFeature;
			internal RoleType MaintainedProfitMargin;
			internal RoleType RequiredProfitMargin;
			internal RoleType OrderItemStatus;
			internal RoleType CurrentShipmentStatus;
			internal RoleType PreviousReservedFromInventoryItem;
			internal RoleType QuantityShipNow;
			internal RoleType RequiredMarkupPercentage;
			internal RoleType QuantityShipped;
			internal RoleType CurrentOrderItemStatus;
			internal RoleType ShipToAddress;
			internal RoleType QuantityPicked;
			internal RoleType PreviousProduct;
			internal RoleType CurrentObjectState;
			internal RoleType UnitPurchasePrice;
			internal RoleType ShipToParty;
			internal RoleType AssignedShipToAddress;
			internal RoleType QuantityReturned;
			internal RoleType QuantityReserved;
			internal RoleType SalesRep;
			internal RoleType ShipmentStatus;
			internal RoleType AssignedShipToParty;
			internal RoleType QuantityPendingShipment;
			internal RoleType MaintainedMarkupPercentage;
			internal RoleType PreviousObjectState;
			internal RoleType InitialMarkupPercentage;
			internal RoleType ReservedFromInventoryItem;
			internal RoleType Product;
			internal RoleType ProductFeature;
			internal RoleType QuantityRequestsShipping;
			internal RoleType PaymentStatus;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InitialProfitMargin;
			internal ConcreteRoleType CurrentPaymentStatus;
			internal ConcreteRoleType QuantityShortFalled;
			internal ConcreteRoleType OrderedWithFeature;
			internal ConcreteRoleType MaintainedProfitMargin;
			internal ConcreteRoleType RequiredProfitMargin;
			internal ConcreteRoleType OrderItemStatus;
			internal ConcreteRoleType CurrentShipmentStatus;
			internal ConcreteRoleType PreviousReservedFromInventoryItem;
			internal ConcreteRoleType QuantityShipNow;
			internal ConcreteRoleType RequiredMarkupPercentage;
			internal ConcreteRoleType QuantityShipped;
			internal ConcreteRoleType CurrentOrderItemStatus;
			internal ConcreteRoleType ShipToAddress;
			internal ConcreteRoleType QuantityPicked;
			internal ConcreteRoleType PreviousProduct;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType UnitPurchasePrice;
			internal ConcreteRoleType ShipToParty;
			internal ConcreteRoleType AssignedShipToAddress;
			internal ConcreteRoleType QuantityReturned;
			internal ConcreteRoleType QuantityReserved;
			internal ConcreteRoleType SalesRep;
			internal ConcreteRoleType ShipmentStatus;
			internal ConcreteRoleType AssignedShipToParty;
			internal ConcreteRoleType QuantityPendingShipment;
			internal ConcreteRoleType MaintainedMarkupPercentage;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType InitialMarkupPercentage;
			internal ConcreteRoleType ReservedFromInventoryItem;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType QuantityRequestsShipping;
			internal ConcreteRoleType PaymentStatus;
			internal ConcreteRoleType TotalDiscountAsPercentage;
			internal ConcreteRoleType DiscountAdjustment;
			internal ConcreteRoleType UnitVat;
			internal ConcreteRoleType TotalVatCustomerCurrency;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType BudgetItem;
			internal ConcreteRoleType TotalVat;
			internal ConcreteRoleType UnitSurcharge;
			internal ConcreteRoleType UnitDiscount;
			internal ConcreteRoleType PreviousQuantity;
			internal ConcreteRoleType QuantityOrdered;
			internal ConcreteRoleType TotalExVatCustomerCurrency;
			internal ConcreteRoleType DerivedVatRate;
			internal ConcreteRoleType ActualUnitPrice;
			internal ConcreteRoleType TotalIncVatCustomerCurrency;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UnitBasePrice;
			internal ConcreteRoleType CorrespondingPurchaseOrder;
			internal ConcreteRoleType CalculatedUnitPrice;
			internal ConcreteRoleType TotalOrderAdjustmentCustomerCurrency;
			internal ConcreteRoleType TotalOrderAdjustment;
			internal ConcreteRoleType TotalSurchargeCustomerCurrency;
			internal ConcreteRoleType QuoteItem;
			internal ConcreteRoleType AssignedDeliveryDate;
			internal ConcreteRoleType DeliveryDate;
			internal ConcreteRoleType TotalIncVat;
			internal ConcreteRoleType TotalSurchargeAsPercentage;
			internal ConcreteRoleType TotalDiscountCustomerCurrency;
			internal ConcreteRoleType TotalDiscount;
			internal ConcreteRoleType TotalSurcharge;
			internal ConcreteRoleType OrderTerm;
			internal ConcreteRoleType AssignedVatRegime;
			internal ConcreteRoleType ShippingInstruction;
			internal ConcreteRoleType TotalBasePrice;
			internal ConcreteRoleType Association;
			internal ConcreteRoleType TotalExVat;
			internal ConcreteRoleType TotalBasePriceCustomerCurrency;
			internal ConcreteRoleType CurrentPriceComponent;
			internal ConcreteRoleType SurchargeAdjustment;
			internal ConcreteRoleType Message;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class SalesInvoiceTypeClass : Class
	{
		public static SalesInvoiceTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesInvoiceTypeClass() : base(AppsDomain.Instance, new Guid("81c9eefa-9b8b-40c0-9f1e-e6ecc2fef119"))
        {
			this.SingularName = "SalesInvoiceType";
			this.PluralName = "SalesInvoiceTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("82fa72cf-a13d-4b53-9886-2880eb531f7d"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class WorkEffortGoodStandardClass : Class
	{
		public static WorkEffortGoodStandardClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortGoodStandardClass() : base(AppsDomain.Instance, new Guid("81ddff76-9b82-4309-9c9f-f7f9dbd2db21"))
        {
			this.SingularName = "WorkEffortGoodStandard";
			this.PluralName = "WorkEffortGoodStandards";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4b60b48e-47a5-4617-bcea-cfab453a96ec"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortGoodStandardGood = new RelationType(AppsDomain.Instance, new Guid("086907b1-97c2-47c1-ade4-f7749f615ae1"), new Guid("f3cf9c9b-2d69-4ef7-8240-44d1ca53bc6f"), new Guid("cd4b1f0a-425f-43d3-bc00-d64a0c4e84df"));
			WorkEffortGoodStandardGood.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortGoodStandardGood.IsIndexed = true;

			WorkEffortGoodStandardGood.AssociationType.ObjectType = this;

			WorkEffortGoodStandardGood.RoleType.ObjectType = GoodClass.Instance;;
			WorkEffortGoodStandardGood.RoleType.AssignedSingularName = "Good";
			WorkEffortGoodStandardGood.RoleType.AssignedPluralName = "Goods";
			this.Roles.Good = WorkEffortGoodStandardGood.RoleType;

			var WorkEffortGoodStandardEstimatedCost = new RelationType(AppsDomain.Instance, new Guid("28b3b976-3354-4095-b928-7c1474e8c492"), new Guid("3b07f539-a06c-4cdc-8790-98c05e097aa6"), new Guid("211ae475-665a-4677-a9eb-376ed9c4d886"));
			WorkEffortGoodStandardEstimatedCost.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortGoodStandardEstimatedCost.AssociationType.ObjectType = this;

			WorkEffortGoodStandardEstimatedCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortGoodStandardEstimatedCost.RoleType.AssignedSingularName = "EstimatedCost";
			WorkEffortGoodStandardEstimatedCost.RoleType.AssignedPluralName = "EstimatedCosts";
			WorkEffortGoodStandardEstimatedCost.RoleType.Scale = 2;
			WorkEffortGoodStandardEstimatedCost.RoleType.Precision = 19;
			this.Roles.EstimatedCost = WorkEffortGoodStandardEstimatedCost.RoleType;

			var WorkEffortGoodStandardEstimatedQuantity = new RelationType(AppsDomain.Instance, new Guid("c94d5e97-ec2b-4d32-ae8d-145595f0ad91"), new Guid("3ddc2478-34ba-45fa-aa21-a11c856fbfe0"), new Guid("33be021f-3194-4e54-b69e-844814ca0bbd"));
			WorkEffortGoodStandardEstimatedQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortGoodStandardEstimatedQuantity.AssociationType.ObjectType = this;

			WorkEffortGoodStandardEstimatedQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			WorkEffortGoodStandardEstimatedQuantity.RoleType.AssignedSingularName = "EstimatedQuantity";
			WorkEffortGoodStandardEstimatedQuantity.RoleType.AssignedPluralName = "EstimatedQuantities";
			this.Roles.EstimatedQuantity = WorkEffortGoodStandardEstimatedQuantity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortGoodStandardClass.Instance.ConcreteRoles.Good = WorkEffortGoodStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Good]; 

			WorkEffortGoodStandardClass.Instance.ConcreteRoles.EstimatedCost = WorkEffortGoodStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedCost]; 

			WorkEffortGoodStandardClass.Instance.ConcreteRoles.EstimatedQuantity = WorkEffortGoodStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedQuantity]; 


		}

		internal class RolesType
		{
			internal RoleType Good;
			internal RoleType EstimatedCost;
			internal RoleType EstimatedQuantity;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Good;
			internal ConcreteRoleType EstimatedCost;
			internal ConcreteRoleType EstimatedQuantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PassportClass : Class
	{
		public static PassportClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PassportClass() : base(AppsDomain.Instance, new Guid("827bc38b-6570-41d7-8ae1-f1bbdf4409f9"))
        {
			this.SingularName = "Passport";
			this.PluralName = "Passports";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("33f3efd1-8cc5-4ada-a0ae-7c0e1aef7303"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PassportIssueDate = new RelationType(AppsDomain.Instance, new Guid("85036007-8e01-4d90-9cfe-7b9c25e43537"), new Guid("b1235d10-b895-40dc-bc99-680d08b4cef2"), new Guid("9a1e96ae-0a56-4812-ac52-1c142afd61c2"));
			PassportIssueDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PassportIssueDate.AssociationType.ObjectType = this;

			PassportIssueDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PassportIssueDate.RoleType.AssignedSingularName = "IssueDate";
			PassportIssueDate.RoleType.AssignedPluralName = "IssueDates";
			this.Roles.IssueDate = PassportIssueDate.RoleType;

			var PassportExpiriationDate = new RelationType(AppsDomain.Instance, new Guid("dd30acd3-2e7b-49e6-9fcd-04cfdafb62d0"), new Guid("cb5a7d75-b938-4451-9896-b661b1828fab"), new Guid("bc010471-bb69-4735-8a86-25d1a8528d34"));
			PassportExpiriationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PassportExpiriationDate.AssociationType.ObjectType = this;

			PassportExpiriationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PassportExpiriationDate.RoleType.AssignedSingularName = "ExpiriationDate";
			PassportExpiriationDate.RoleType.AssignedPluralName = "ExpiriationDates";
			this.Roles.ExpiriationDate = PassportExpiriationDate.RoleType;

			var PassportNumber = new RelationType(AppsDomain.Instance, new Guid("eb3cdf1a-d577-46ff-9d0e-d709c6e7d9d9"), new Guid("8d5d9376-24e0-486f-84fb-f242bfaee585"), new Guid("b5ea6bb3-6498-46c6-b579-3839f5effbe1"));
			PassportNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			PassportNumber.AssociationType.ObjectType = this;

			PassportNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PassportNumber.RoleType.AssignedSingularName = "Number";
			PassportNumber.RoleType.AssignedPluralName = "Numbers";
			PassportNumber.RoleType.Size = 256;
			this.Roles.Number = PassportNumber.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PassportClass.Instance.ConcreteRoles.IssueDate = PassportClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IssueDate]; 

			PassportClass.Instance.ConcreteRoles.ExpiriationDate = PassportClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpiriationDate]; 

			PassportClass.Instance.ConcreteRoles.Number = PassportClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Number]; 


		}

		internal class RolesType
		{
			internal RoleType IssueDate;
			internal RoleType ExpiriationDate;
			internal RoleType Number;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType IssueDate;
			internal ConcreteRoleType ExpiriationDate;
			internal ConcreteRoleType Number;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AmountDueClass : Class
	{
		public static AmountDueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AmountDueClass() : base(AppsDomain.Instance, new Guid("848053ee-18d8-4962-81c3-bd6c7837565a"))
        {
			this.SingularName = "AmountDue";
			this.PluralName = "AmountsDue";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4fd6ef6d-c102-458f-a9c1-b1ebe1cfcb76"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var AmountDueAmount = new RelationType(AppsDomain.Instance, new Guid("0274d4d3-3f07-408c-89e3-f5367acd5fab"), new Guid("9c7d4eeb-36fc-47f9-8a88-ea3e9cc0ce77"), new Guid("d961ac61-9dc2-4ce0-87aa-24a69cc8fbc4"));
			AmountDueAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueAmount.AssociationType.ObjectType = this;

			AmountDueAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			AmountDueAmount.RoleType.AssignedSingularName = "Amount";
			AmountDueAmount.RoleType.AssignedPluralName = "Amounts";
			AmountDueAmount.RoleType.Scale = 2;
			AmountDueAmount.RoleType.Precision = 19;
			this.Roles.Amount = AmountDueAmount.RoleType;

			var AmountDuePaymentMethod = new RelationType(AppsDomain.Instance, new Guid("3856c988-32d3-455d-89d8-aa1eaa80dcce"), new Guid("896a030b-a038-4b05-8af5-982f7050c0ea"), new Guid("636344f0-e795-448a-8f37-53d1ebd87e9b"));
			AmountDuePaymentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			AmountDuePaymentMethod.IsIndexed = true;

			AmountDuePaymentMethod.AssociationType.ObjectType = this;

			AmountDuePaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			AmountDuePaymentMethod.RoleType.AssignedSingularName = "PaymentMethod";
			AmountDuePaymentMethod.RoleType.AssignedPluralName = "PaymentMethods";
			this.Roles.PaymentMethod = AmountDuePaymentMethod.RoleType;

			var AmountDueTransactionDate = new RelationType(AppsDomain.Instance, new Guid("39d2f4f2-0c16-40f5-990b-38bad15fae99"), new Guid("cada8a73-b732-4789-aa7b-a4caeaea20e2"), new Guid("341bd110-6126-476c-9d35-1069c207dc1b"));
			AmountDueTransactionDate.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueTransactionDate.AssociationType.ObjectType = this;

			AmountDueTransactionDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			AmountDueTransactionDate.RoleType.AssignedSingularName = "TransactionDate";
			AmountDueTransactionDate.RoleType.AssignedPluralName = "TransactionDates";
			this.Roles.TransactionDate = AmountDueTransactionDate.RoleType;

			var AmountDueBlockedForDunning = new RelationType(AppsDomain.Instance, new Guid("3ca978b2-8c0a-4fec-8b98-88e9ea3b2966"), new Guid("90befe3a-0821-4ec9-bac1-f580ebdaab9e"), new Guid("6b0f0eed-a757-4668-97bb-9d82ed4ff983"));
			AmountDueBlockedForDunning.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueBlockedForDunning.AssociationType.ObjectType = this;

			AmountDueBlockedForDunning.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			AmountDueBlockedForDunning.RoleType.AssignedSingularName = "BlockedForDunning";
			AmountDueBlockedForDunning.RoleType.AssignedPluralName = "BlockedForDunnings";
			this.Roles.BlockedForDunning = AmountDueBlockedForDunning.RoleType;

			var AmountDueAmountVat = new RelationType(AppsDomain.Instance, new Guid("43193cac-15ad-4a1a-8945-f4ecb7d93291"), new Guid("96a1c683-052a-446e-8d82-c1943caaf53f"), new Guid("fc8ed608-7c2a-4eaf-9240-0d233184b5b3"));
			AmountDueAmountVat.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueAmountVat.AssociationType.ObjectType = this;

			AmountDueAmountVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			AmountDueAmountVat.RoleType.AssignedSingularName = "AmountVat";
			AmountDueAmountVat.RoleType.AssignedPluralName = "AmountsVat";
			AmountDueAmountVat.RoleType.Scale = 2;
			AmountDueAmountVat.RoleType.Precision = 19;
			this.Roles.AmountVat = AmountDueAmountVat.RoleType;

			var AmountDueBankAccount = new RelationType(AppsDomain.Instance, new Guid("5cb888fd-bcff-4eef-8ad6-efab3434364d"), new Guid("3c54dbfa-3dbd-419c-b341-4a127bd1387b"), new Guid("e9635cd0-13f0-43fc-ad12-5f65b40c6923"));
			AmountDueBankAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			AmountDueBankAccount.IsIndexed = true;

			AmountDueBankAccount.AssociationType.ObjectType = this;

			AmountDueBankAccount.RoleType.ObjectType = BankAccountClass.Instance;;
			AmountDueBankAccount.RoleType.AssignedSingularName = "BankAccount";
			AmountDueBankAccount.RoleType.AssignedPluralName = "BankAccounts";
			this.Roles.BankAccount = AmountDueBankAccount.RoleType;

			var AmountDueReconciliationDate = new RelationType(AppsDomain.Instance, new Guid("90b4eaea-21cd-4a04-a64b-3c3dce0718d9"), new Guid("87f05475-29aa-4cb7-a5d9-865a47995cd6"), new Guid("71271fdc-4a24-4650-a57a-9cbc2973cc04"));
			AmountDueReconciliationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueReconciliationDate.AssociationType.ObjectType = this;

			AmountDueReconciliationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			AmountDueReconciliationDate.RoleType.AssignedSingularName = "ReconciliationDate";
			AmountDueReconciliationDate.RoleType.AssignedPluralName = "ReconciliationDates";
			this.Roles.ReconciliationDate = AmountDueReconciliationDate.RoleType;

			var AmountDueInvoiceNumber = new RelationType(AppsDomain.Instance, new Guid("953877d2-055c-4274-afa5-91fd425b5449"), new Guid("9e20dc87-aa15-4854-b0d4-1ecefb22621e"), new Guid("e5a11de2-fa90-4fe0-87f3-5f4ea0629f8d"));
			AmountDueInvoiceNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueInvoiceNumber.AssociationType.ObjectType = this;

			AmountDueInvoiceNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AmountDueInvoiceNumber.RoleType.AssignedSingularName = "InvoiceNumber";
			AmountDueInvoiceNumber.RoleType.AssignedPluralName = "InvoiceNumbers";
			AmountDueInvoiceNumber.RoleType.Size = 256;
			this.Roles.InvoiceNumber = AmountDueInvoiceNumber.RoleType;

			var AmountDueDunningStep = new RelationType(AppsDomain.Instance, new Guid("98ec45be-fea4-4df7-91fb-6643edf74784"), new Guid("102ff721-0f77-4e05-9252-974b0e2a1505"), new Guid("e422bd7e-2998-4022-88cf-8de0a84621c4"));
			AmountDueDunningStep.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueDunningStep.AssociationType.ObjectType = this;

			AmountDueDunningStep.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			AmountDueDunningStep.RoleType.AssignedSingularName = "DunningStep";
			AmountDueDunningStep.RoleType.AssignedPluralName = "DunningSteps";
			this.Roles.DunningStep = AmountDueDunningStep.RoleType;

			var AmountDueSubAccountNumber = new RelationType(AppsDomain.Instance, new Guid("a40ae239-df13-47e1-8fa2-cfcb4946b966"), new Guid("3fca92c6-8996-4f5b-867a-7ad209f8e44e"), new Guid("8d211ac4-115f-47e4-be98-784ca9f7409a"));
			AmountDueSubAccountNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueSubAccountNumber.AssociationType.ObjectType = this;

			AmountDueSubAccountNumber.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			AmountDueSubAccountNumber.RoleType.AssignedSingularName = "SubAccountNumber";
			AmountDueSubAccountNumber.RoleType.AssignedPluralName = "SubAccountNumbers";
			this.Roles.SubAccountNumber = AmountDueSubAccountNumber.RoleType;

			var AmountDueTransactionNumber = new RelationType(AppsDomain.Instance, new Guid("a6693763-e246-4ae8-bd37-74313d32883b"), new Guid("e74e0621-56ec-4bf9-920d-919b8cebd2f9"), new Guid("9761e619-7ce8-466c-b154-743590b1bc46"));
			AmountDueTransactionNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueTransactionNumber.AssociationType.ObjectType = this;

			AmountDueTransactionNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AmountDueTransactionNumber.RoleType.AssignedSingularName = "TransactionNumber";
			AmountDueTransactionNumber.RoleType.AssignedPluralName = "TransactionNumbers";
			AmountDueTransactionNumber.RoleType.Size = 256;
			this.Roles.TransactionNumber = AmountDueTransactionNumber.RoleType;

			var AmountDueSide = new RelationType(AppsDomain.Instance, new Guid("acedb9ed-b0de-464f-86ec-621022938ad7"), new Guid("7a8823ee-ce46-4f99-8b15-217476244273"), new Guid("64f6065c-b8b1-4b91-9128-b1a17c109cc5"));
			AmountDueSide.AssignedMultiplicity = Multiplicity.ManyToOne;
			AmountDueSide.IsIndexed = true;

			AmountDueSide.AssociationType.ObjectType = this;

			AmountDueSide.RoleType.ObjectType = DebitCreditConstantClass.Instance;;
			AmountDueSide.RoleType.AssignedSingularName = "Side";
			AmountDueSide.RoleType.AssignedPluralName = "Sides";
			this.Roles.Side = AmountDueSide.RoleType;

			var AmountDueCurrency = new RelationType(AppsDomain.Instance, new Guid("b0570264-3211-4444-a69f-1cdb2eb6e783"), new Guid("8586c543-e997-48e1-8302-a5ef7e1ad6ab"), new Guid("c7da91ea-2071-45b8-a4c7-957d7bd9579b"));
			AmountDueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			AmountDueCurrency.IsIndexed = true;

			AmountDueCurrency.AssociationType.ObjectType = this;

			AmountDueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			AmountDueCurrency.RoleType.AssignedSingularName = "Currency";
			AmountDueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = AmountDueCurrency.RoleType;

			var AmountDueBlockedForPayment = new RelationType(AppsDomain.Instance, new Guid("d227669f-8052-4962-8ccf-a775355691f1"), new Guid("a0b14293-269d-46d3-b297-a149a5090b1d"), new Guid("a6620318-c985-4e60-bdea-204993e65217"));
			AmountDueBlockedForPayment.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueBlockedForPayment.AssociationType.ObjectType = this;

			AmountDueBlockedForPayment.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			AmountDueBlockedForPayment.RoleType.AssignedSingularName = "BlockedForPayment";
			AmountDueBlockedForPayment.RoleType.AssignedPluralName = "BlockedForPayments";
			this.Roles.BlockedForPayment = AmountDueBlockedForPayment.RoleType;

			var AmountDueDateLastReminder = new RelationType(AppsDomain.Instance, new Guid("def3c00e-f065-48e5-97a2-22497f1800b3"), new Guid("278bb3d9-da67-44ca-a78b-8c047da3b2d4"), new Guid("3b867d6f-f7e7-4223-99cf-052ac43e139b"));
			AmountDueDateLastReminder.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueDateLastReminder.AssociationType.ObjectType = this;

			AmountDueDateLastReminder.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			AmountDueDateLastReminder.RoleType.AssignedSingularName = "DateLastReminder";
			AmountDueDateLastReminder.RoleType.AssignedPluralName = "DatesLastReminder";
			this.Roles.DateLastReminder = AmountDueDateLastReminder.RoleType;

			var AmountDueYourReference = new RelationType(AppsDomain.Instance, new Guid("e9b2fc3f-c6ed-4e67-a634-9ee78f824ad8"), new Guid("7d7e867b-e22e-4ca9-8751-e8af845fc206"), new Guid("8fd5d417-fc56-4b5c-9a9c-a156dff25006"));
			AmountDueYourReference.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueYourReference.AssociationType.ObjectType = this;

			AmountDueYourReference.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AmountDueYourReference.RoleType.AssignedSingularName = "YourReference";
			AmountDueYourReference.RoleType.AssignedPluralName = "YourReferences";
			AmountDueYourReference.RoleType.Size = 256;
			this.Roles.YourReference = AmountDueYourReference.RoleType;

			var AmountDueOurReference = new RelationType(AppsDomain.Instance, new Guid("edad9c25-ef5e-4326-aba6-535deb6a8a7e"), new Guid("deeaff94-26ec-4dbf-815b-c3105024459e"), new Guid("8fb086f5-2dba-46fb-b86e-2b81e17fa996"));
			AmountDueOurReference.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueOurReference.AssociationType.ObjectType = this;

			AmountDueOurReference.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AmountDueOurReference.RoleType.AssignedSingularName = "OurReference";
			AmountDueOurReference.RoleType.AssignedPluralName = "OurReferences";
			AmountDueOurReference.RoleType.Size = 256;
			this.Roles.OurReference = AmountDueOurReference.RoleType;

			var AmountDueReconciliationNumber = new RelationType(AppsDomain.Instance, new Guid("f027183b-d8a1-4909-bedc-5d16a62d6bc2"), new Guid("bc7040ea-f230-42e5-ab35-458a0d3fc52e"), new Guid("3760cfff-b831-4767-9346-9d37ce76172b"));
			AmountDueReconciliationNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueReconciliationNumber.AssociationType.ObjectType = this;

			AmountDueReconciliationNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AmountDueReconciliationNumber.RoleType.AssignedSingularName = "ReconciliationNumber";
			AmountDueReconciliationNumber.RoleType.AssignedPluralName = "ReconciliationNumbers";
			AmountDueReconciliationNumber.RoleType.Size = 256;
			this.Roles.ReconciliationNumber = AmountDueReconciliationNumber.RoleType;

			var AmountDueDueDate = new RelationType(AppsDomain.Instance, new Guid("f18c665b-4f88-4e97-950c-08a38d9f0d93"), new Guid("8707951a-3285-44a9-b3d8-7c51cc9977ec"), new Guid("9caf74b7-48c5-4d1b-81fb-15bc22518156"));
			AmountDueDueDate.AssignedMultiplicity = Multiplicity.OneToOne;
			AmountDueDueDate.AssociationType.ObjectType = this;

			AmountDueDueDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			AmountDueDueDate.RoleType.AssignedSingularName = "DueDate";
			AmountDueDueDate.RoleType.AssignedPluralName = "DueDates";
			this.Roles.DueDate = AmountDueDueDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			AmountDueClass.Instance.ConcreteRoles.Amount = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 

			AmountDueClass.Instance.ConcreteRoles.PaymentMethod = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 

			AmountDueClass.Instance.ConcreteRoles.TransactionDate = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionDate]; 

			AmountDueClass.Instance.ConcreteRoles.BlockedForDunning = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BlockedForDunning]; 

			AmountDueClass.Instance.ConcreteRoles.AmountVat = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AmountVat]; 

			AmountDueClass.Instance.ConcreteRoles.BankAccount = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BankAccount]; 

			AmountDueClass.Instance.ConcreteRoles.ReconciliationDate = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReconciliationDate]; 

			AmountDueClass.Instance.ConcreteRoles.InvoiceNumber = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceNumber]; 

			AmountDueClass.Instance.ConcreteRoles.DunningStep = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DunningStep]; 

			AmountDueClass.Instance.ConcreteRoles.SubAccountNumber = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubAccountNumber]; 

			AmountDueClass.Instance.ConcreteRoles.TransactionNumber = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionNumber]; 

			AmountDueClass.Instance.ConcreteRoles.Side = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Side]; 

			AmountDueClass.Instance.ConcreteRoles.Currency = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			AmountDueClass.Instance.ConcreteRoles.BlockedForPayment = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BlockedForPayment]; 

			AmountDueClass.Instance.ConcreteRoles.DateLastReminder = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DateLastReminder]; 

			AmountDueClass.Instance.ConcreteRoles.YourReference = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.YourReference]; 

			AmountDueClass.Instance.ConcreteRoles.OurReference = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OurReference]; 

			AmountDueClass.Instance.ConcreteRoles.ReconciliationNumber = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReconciliationNumber]; 

			AmountDueClass.Instance.ConcreteRoles.DueDate = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DueDate]; 


		}

		internal class RolesType
		{
			internal RoleType Amount;
			internal RoleType PaymentMethod;
			internal RoleType TransactionDate;
			internal RoleType BlockedForDunning;
			internal RoleType AmountVat;
			internal RoleType BankAccount;
			internal RoleType ReconciliationDate;
			internal RoleType InvoiceNumber;
			internal RoleType DunningStep;
			internal RoleType SubAccountNumber;
			internal RoleType TransactionNumber;
			internal RoleType Side;
			internal RoleType Currency;
			internal RoleType BlockedForPayment;
			internal RoleType DateLastReminder;
			internal RoleType YourReference;
			internal RoleType OurReference;
			internal RoleType ReconciliationNumber;
			internal RoleType DueDate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType BlockedForDunning;
			internal ConcreteRoleType AmountVat;
			internal ConcreteRoleType BankAccount;
			internal ConcreteRoleType ReconciliationDate;
			internal ConcreteRoleType InvoiceNumber;
			internal ConcreteRoleType DunningStep;
			internal ConcreteRoleType SubAccountNumber;
			internal ConcreteRoleType TransactionNumber;
			internal ConcreteRoleType Side;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType BlockedForPayment;
			internal ConcreteRoleType DateLastReminder;
			internal ConcreteRoleType YourReference;
			internal ConcreteRoleType OurReference;
			internal ConcreteRoleType ReconciliationNumber;
			internal ConcreteRoleType DueDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class WorkEffortTypeKindClass : Class
	{
		public static WorkEffortTypeKindClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortTypeKindClass() : base(AppsDomain.Instance, new Guid("8551adf6-5a97-41fe-aff8-6bec08b09d08"))
        {
			this.SingularName = "WorkEffortTypeKind";
			this.PluralName = "WorkEffortTypeKinds";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("382118e6-119f-487f-8683-171b5e06f4a6"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class OrderTermClass : Class
	{
		public static OrderTermClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrderTermClass() : base(AppsDomain.Instance, new Guid("86cf6a28-baeb-479d-ac9e-fabc7fe1994d"))
        {
			this.SingularName = "OrderTerm";
			this.PluralName = "OrderTerms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("85848388-ae53-4603-8d55-606d78d71de9"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrderTermTermValue = new RelationType(AppsDomain.Instance, new Guid("04cd1dd4-6f4f-4cd5-8ca0-5d3ccae06400"), new Guid("13b304b8-a945-4302-bd45-6a51f03aa8c9"), new Guid("059b0064-a361-48d5-8340-f1ae43db454b"));
			OrderTermTermValue.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderTermTermValue.AssociationType.ObjectType = this;

			OrderTermTermValue.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrderTermTermValue.RoleType.AssignedSingularName = "TermValue";
			OrderTermTermValue.RoleType.AssignedPluralName = "TermValues";
			OrderTermTermValue.RoleType.Size = 256;
			this.Roles.TermValue = OrderTermTermValue.RoleType;

			var OrderTermTermType = new RelationType(AppsDomain.Instance, new Guid("0540ccac-4970-4026-9529-be62db0350a0"), new Guid("d5bc8696-24d9-408f-ba50-c20a2c43dec1"), new Guid("76541960-6f11-4cd3-bc78-3018480cf742"));
			OrderTermTermType.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderTermTermType.IsIndexed = true;

			OrderTermTermType.AssociationType.ObjectType = this;

			OrderTermTermType.RoleType.ObjectType = TermTypeClass.Instance;;
			OrderTermTermType.RoleType.AssignedSingularName = "TermType";
			OrderTermTermType.RoleType.AssignedPluralName = "TermTypes";
			this.Roles.TermType = OrderTermTermType.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrderTermClass.Instance.ConcreteRoles.TermValue = OrderTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermValue]; 

			OrderTermClass.Instance.ConcreteRoles.TermType = OrderTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermType]; 


		}

		internal class RolesType
		{
			internal RoleType TermValue;
			internal RoleType TermType;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType TermValue;
			internal ConcreteRoleType TermType;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CreditCardCompanyClass : Class
	{
		public static CreditCardCompanyClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CreditCardCompanyClass() : base(AppsDomain.Instance, new Guid("86d934de-a5cf-46d3-aad3-2626c43ebc85"))
        {
			this.SingularName = "CreditCardCompany";
			this.PluralName = "CreditCardCompanies";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b29538ad-de2d-4afa-b4a4-bedc1dbb676c"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CreditCardCompanyName = new RelationType(AppsDomain.Instance, new Guid("05860987-77be-4d8d-823d-99dd0e2cc822"), new Guid("002eff4d-2bcc-40bb-b311-7ae86207bdc7"), new Guid("c9fe6f93-933e-4859-aaa2-ef3f5e2c8b44"));
			CreditCardCompanyName.AssignedMultiplicity = Multiplicity.OneToOne;
			CreditCardCompanyName.AssociationType.ObjectType = this;

			CreditCardCompanyName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CreditCardCompanyName.RoleType.AssignedSingularName = "Name";
			CreditCardCompanyName.RoleType.AssignedPluralName = "Name";
			CreditCardCompanyName.RoleType.Size = 256;
			this.Roles.Name = CreditCardCompanyName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CreditCardCompanyClass.Instance.ConcreteRoles.Name = CreditCardCompanyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RequestForQuoteClass : Class
	{
		public static RequestForQuoteClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RequestForQuoteClass() : base(AppsDomain.Instance, new Guid("874dfe70-2e50-4861-b26d-dc55bc8fa0d0"))
        {
			this.SingularName = "RequestForQuote";
			this.PluralName = "RequestsForQuote";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("043bf681-9a91-41be-8a86-bcd4166b29d7"))
			{
				Subtype = Instance,
				Supertype = RequestInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType RequiredResponseDate;
			internal ConcreteRoleType RequestItem;
			internal ConcreteRoleType RequestNumber;
			internal ConcreteRoleType RespondingParty;
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class PurchaseShipmentStatusClass : Class
	{
		public static PurchaseShipmentStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseShipmentStatusClass() : base(AppsDomain.Instance, new Guid("87939632-40ff-4a3a-a874-74790e810890"))
        {
			this.SingularName = "PurchaseShipmentStatus";
			this.PluralName = "PurchaseShipmentStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("df11f9cc-86c9-44cc-8f47-67d034e84f5b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseShipmentStatusPurchaseShipmentObjectState = new RelationType(AppsDomain.Instance, new Guid("01d6a244-e174-4a91-8f27-5af54401bed1"), new Guid("09311427-0d20-4c65-85eb-371d1bcfb23f"), new Guid("125cbf28-2721-4e1b-8cb5-ce3f5a6a464e"));
			PurchaseShipmentStatusPurchaseShipmentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseShipmentStatusPurchaseShipmentObjectState.IsIndexed = true;

			PurchaseShipmentStatusPurchaseShipmentObjectState.AssociationType.ObjectType = this;

			PurchaseShipmentStatusPurchaseShipmentObjectState.RoleType.ObjectType = PurchaseShipmentObjectStateClass.Instance;;
			PurchaseShipmentStatusPurchaseShipmentObjectState.RoleType.AssignedSingularName = "PurchaseShipmentObjectState";
			PurchaseShipmentStatusPurchaseShipmentObjectState.RoleType.AssignedPluralName = "PurchaseShipmentObjectStates";
			this.Roles.PurchaseShipmentObjectState = PurchaseShipmentStatusPurchaseShipmentObjectState.RoleType;

			var PurchaseShipmentStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("a243d65e-81ac-49e7-af1b-1b97faa7360e"), new Guid("9d74270a-7197-43ee-92c9-8f06bd1b48db"), new Guid("fac16474-a909-4566-b55e-5849927aa431"));
			PurchaseShipmentStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseShipmentStatusStartDateTime.AssociationType.ObjectType = this;

			PurchaseShipmentStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PurchaseShipmentStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			PurchaseShipmentStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = PurchaseShipmentStatusStartDateTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseShipmentStatusClass.Instance.ConcreteRoles.PurchaseShipmentObjectState = PurchaseShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseShipmentObjectState]; 

			PurchaseShipmentStatusClass.Instance.ConcreteRoles.StartDateTime = PurchaseShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 


		}

		internal class RolesType
		{
			internal RoleType PurchaseShipmentObjectState;
			internal RoleType StartDateTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PurchaseShipmentObjectState;
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CashClass : Class
	{
		public static CashClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CashClass() : base(AppsDomain.Instance, new Guid("87fbf592-45a1-4ef2-85ca-f47d4c51abca"))
        {
			this.SingularName = "Cash";
			this.PluralName = "Cashes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ce34402d-e1c3-4538-8250-0d7724695be5"))
			{
				Subtype = Instance,
				Supertype = PaymentMethodInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CashPersonResponsible = new RelationType(AppsDomain.Instance, new Guid("39c8beda-d284-442b-886a-6d6b2fb51cc8"), new Guid("f90e529a-8303-4a66-9622-144cfaed3bf3"), new Guid("90ee494e-2194-4972-bdde-7a3a30aff736"));
			CashPersonResponsible.AssignedMultiplicity = Multiplicity.ManyToOne;
			CashPersonResponsible.IsIndexed = true;

			CashPersonResponsible.AssociationType.ObjectType = this;

			CashPersonResponsible.RoleType.ObjectType = PersonClass.Instance;;
			CashPersonResponsible.RoleType.AssignedSingularName = "PersonResponsible";
			CashPersonResponsible.RoleType.AssignedPluralName = "PersonResponsible";
			this.Roles.PersonResponsible = CashPersonResponsible.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CashClass.Instance.ConcreteRoles.PersonResponsible = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PersonResponsible]; 


		}

		internal class RolesType
		{
			internal RoleType PersonResponsible;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PersonResponsible;
			internal ConcreteRoleType BalanceLimit;
			internal ConcreteRoleType CurrentBalance;
			internal ConcreteRoleType Journal;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType GlPaymentInTransit;
			internal ConcreteRoleType Remarks;
			internal ConcreteRoleType GeneralLedgerAccount;
			internal ConcreteRoleType Creditor;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PerformanceReviewClass : Class
	{
		public static PerformanceReviewClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PerformanceReviewClass() : base(AppsDomain.Instance, new Guid("89c49578-bb5d-4589-b908-bf09c6495011"))
        {
			this.SingularName = "PerformanceReview";
			this.PluralName = "PerformanceReviews";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3181228d-f6de-464f-bd5b-e02b19d00b2b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("cd9944d9-d99e-4f9d-acb4-3bac1be5ca1e"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ec209c41-6b06-4ccc-b512-22971dfe6058"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PerformanceReviewManager = new RelationType(AppsDomain.Instance, new Guid("22ec2f64-1099-49aa-908b-abb2703ccf33"), new Guid("2b66e451-52c1-4e83-97e0-a59784862660"), new Guid("d5a94f8a-e657-406a-a9ff-64fec9e5b67c"));
			PerformanceReviewManager.AssignedMultiplicity = Multiplicity.ManyToOne;
			PerformanceReviewManager.IsIndexed = true;

			PerformanceReviewManager.AssociationType.ObjectType = this;

			PerformanceReviewManager.RoleType.ObjectType = PersonClass.Instance;;
			PerformanceReviewManager.RoleType.AssignedSingularName = "Manager";
			PerformanceReviewManager.RoleType.AssignedPluralName = "Managers";
			this.Roles.Manager = PerformanceReviewManager.RoleType;

			var PerformanceReviewPayHistory = new RelationType(AppsDomain.Instance, new Guid("3704d6ac-52c1-4af0-ad6e-151defc2fa05"), new Guid("840545c0-3f1e-44e0-96cd-48a0dc34e937"), new Guid("dbd0ecc2-ba54-45d5-a4c8-7c3476e64ce1"));
			PerformanceReviewPayHistory.AssignedMultiplicity = Multiplicity.ManyToOne;
			PerformanceReviewPayHistory.IsIndexed = true;

			PerformanceReviewPayHistory.AssociationType.ObjectType = this;

			PerformanceReviewPayHistory.RoleType.ObjectType = PayHistoryClass.Instance;;
			PerformanceReviewPayHistory.RoleType.AssignedSingularName = "PayHistory";
			PerformanceReviewPayHistory.RoleType.AssignedPluralName = "PayHistories";
			this.Roles.PayHistory = PerformanceReviewPayHistory.RoleType;

			var PerformanceReviewBonusPayCheck = new RelationType(AppsDomain.Instance, new Guid("a16503ae-6371-4e97-9d34-f21a0f52002f"), new Guid("7002201c-53f7-457f-8c8c-4990fc4ed175"), new Guid("220d3993-fbca-4082-887c-ab7e9261d4da"));
			PerformanceReviewBonusPayCheck.AssignedMultiplicity = Multiplicity.ManyToOne;
			PerformanceReviewBonusPayCheck.IsIndexed = true;

			PerformanceReviewBonusPayCheck.AssociationType.ObjectType = this;

			PerformanceReviewBonusPayCheck.RoleType.ObjectType = PayCheckClass.Instance;;
			PerformanceReviewBonusPayCheck.RoleType.AssignedSingularName = "BonusPayCheck";
			PerformanceReviewBonusPayCheck.RoleType.AssignedPluralName = "BonusPayChecks";
			this.Roles.BonusPayCheck = PerformanceReviewBonusPayCheck.RoleType;

			var PerformanceReviewPerformanceReviewItem = new RelationType(AppsDomain.Instance, new Guid("a5057413-950e-4825-8036-7f398c4b5d39"), new Guid("86796848-4a49-43c1-879e-1e77063af4e0"), new Guid("7bbb3e7e-c3a0-4b63-84e7-4bb923425ec1"));
			PerformanceReviewPerformanceReviewItem.AssignedMultiplicity = Multiplicity.OneToMany;
			PerformanceReviewPerformanceReviewItem.IsIndexed = true;

			PerformanceReviewPerformanceReviewItem.AssociationType.ObjectType = this;

			PerformanceReviewPerformanceReviewItem.RoleType.ObjectType = PerformanceReviewItemClass.Instance;;
			PerformanceReviewPerformanceReviewItem.RoleType.AssignedSingularName = "PerformanceReviewItem";
			PerformanceReviewPerformanceReviewItem.RoleType.AssignedPluralName = "PerformanceReviewItems";
			this.Roles.PerformanceReviewItem = PerformanceReviewPerformanceReviewItem.RoleType;

			var PerformanceReviewEmployee = new RelationType(AppsDomain.Instance, new Guid("ddeb9c39-9bfc-437d-8f5a-434028d8ad6f"), new Guid("1e857746-32cb-44af-9e05-3fb7568def9a"), new Guid("77390fa9-3f73-41f8-8adc-558c7839400e"));
			PerformanceReviewEmployee.AssignedMultiplicity = Multiplicity.ManyToOne;
			PerformanceReviewEmployee.IsIndexed = true;

			PerformanceReviewEmployee.AssociationType.ObjectType = this;

			PerformanceReviewEmployee.RoleType.ObjectType = PersonClass.Instance;;
			PerformanceReviewEmployee.RoleType.AssignedSingularName = "Employee";
			PerformanceReviewEmployee.RoleType.AssignedPluralName = "Employees";
			this.Roles.Employee = PerformanceReviewEmployee.RoleType;

			var PerformanceReviewResultingPosition = new RelationType(AppsDomain.Instance, new Guid("f3210e4a-a8ee-442c-85a5-34290deffe2a"), new Guid("b91a9331-cc16-401f-9ee7-d697389431f7"), new Guid("9aeadbaf-24ad-4ced-96a0-1f4ee2ea0859"));
			PerformanceReviewResultingPosition.AssignedMultiplicity = Multiplicity.ManyToOne;
			PerformanceReviewResultingPosition.IsIndexed = true;

			PerformanceReviewResultingPosition.AssociationType.ObjectType = this;

			PerformanceReviewResultingPosition.RoleType.ObjectType = PositionClass.Instance;;
			PerformanceReviewResultingPosition.RoleType.AssignedSingularName = "ResultingPosition";
			PerformanceReviewResultingPosition.RoleType.AssignedPluralName = "ResultingPositions";
			this.Roles.ResultingPosition = PerformanceReviewResultingPosition.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PerformanceReviewClass.Instance.ConcreteRoles.Manager = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Manager]; 

			PerformanceReviewClass.Instance.ConcreteRoles.PayHistory = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PayHistory]; 

			PerformanceReviewClass.Instance.ConcreteRoles.BonusPayCheck = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BonusPayCheck]; 

			PerformanceReviewClass.Instance.ConcreteRoles.PerformanceReviewItem = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PerformanceReviewItem]; 

			PerformanceReviewClass.Instance.ConcreteRoles.Employee = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Employee]; 

			PerformanceReviewClass.Instance.ConcreteRoles.ResultingPosition = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ResultingPosition]; 


		}

		internal class RolesType
		{
			internal RoleType Manager;
			internal RoleType PayHistory;
			internal RoleType BonusPayCheck;
			internal RoleType PerformanceReviewItem;
			internal RoleType Employee;
			internal RoleType ResultingPosition;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Manager;
			internal ConcreteRoleType PayHistory;
			internal ConcreteRoleType BonusPayCheck;
			internal ConcreteRoleType PerformanceReviewItem;
			internal ConcreteRoleType Employee;
			internal ConcreteRoleType ResultingPosition;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class DropShipmentObjectStateClass : Class
	{
		public static DropShipmentObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DropShipmentObjectStateClass() : base(AppsDomain.Instance, new Guid("89d2037a-4bc2-4929-b333-5358ac4a14e5"))
        {
			this.SingularName = "DropShipmentObjectState";
			this.PluralName = "DropShipmentObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cd55b595-bab3-4b84-9d17-4413a27ae4ff"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class InvestmentAccountClass : Class
	{
		public static InvestmentAccountClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InvestmentAccountClass() : base(AppsDomain.Instance, new Guid("8a06c50b-5951-465e-86b8-43e733f20b90"))
        {
			this.SingularName = "InvestmentAccount";
			this.PluralName = "InvestmentAccounts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("11f76af6-b421-4434-a53e-9a2a94f3eeec"))
			{
				Subtype = Instance,
				Supertype = FinancialAccountInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var InvestmentAccountName = new RelationType(AppsDomain.Instance, new Guid("9eefdec1-48db-4f91-9eac-928b6a42d4e4"), new Guid("2759ed05-afa4-49ea-91d1-20b8d2ff527c"), new Guid("1d337bb7-2b33-4c8a-aeb3-d37c3ea72690"));
			InvestmentAccountName.AssignedMultiplicity = Multiplicity.OneToOne;
			InvestmentAccountName.AssociationType.ObjectType = this;

			InvestmentAccountName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InvestmentAccountName.RoleType.AssignedSingularName = "Name";
			InvestmentAccountName.RoleType.AssignedPluralName = "Names";
			InvestmentAccountName.RoleType.Size = 256;
			this.Roles.Name = InvestmentAccountName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			InvestmentAccountClass.Instance.ConcreteRoles.Name = InvestmentAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType FinancialAccountTransaction;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AgreementItemInterface: Interface
	{
		public static AgreementItemInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal AgreementItemInterface() : base(AppsDomain.Instance, new Guid("8ba98e1b-1d4d-46b1-bf27-bb2bf53501fd"))
        {
			this.SingularName = "AgreementItem";
			this.PluralName = "AgreementItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cc03fa17-9da5-4346-a98f-f9c540a848d9"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var AgreementItemText = new RelationType(AppsDomain.Instance, new Guid("3ad6eaac-8cc3-4738-9a5b-617386e296c8"), new Guid("caf115e0-d7b8-43af-a183-f4df4c573e2c"), new Guid("34bb4854-7f4f-4b27-8dd7-a2b9cbcf2331"));
			AgreementItemText.AssignedMultiplicity = Multiplicity.OneToOne;
			AgreementItemText.AssociationType.ObjectType = this;

			AgreementItemText.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AgreementItemText.RoleType.AssignedSingularName = "Text";
			AgreementItemText.RoleType.AssignedPluralName = "Texts";
			AgreementItemText.RoleType.Size = -1;
			this.Roles.Text = AgreementItemText.RoleType;

			var AgreementItemAddendum = new RelationType(AppsDomain.Instance, new Guid("49d6363c-6006-4850-8a96-d87b9336ae59"), new Guid("aab2420d-b105-4328-a71c-c2cdce2712a3"), new Guid("16e3ac4d-1641-417f-bb72-1167ae809ef9"));
			AgreementItemAddendum.AssignedMultiplicity = Multiplicity.OneToMany;
			AgreementItemAddendum.IsIndexed = true;

			AgreementItemAddendum.AssociationType.ObjectType = this;

			AgreementItemAddendum.RoleType.ObjectType = AddendumClass.Instance;;
			AgreementItemAddendum.RoleType.AssignedSingularName = "Addendum";
			AgreementItemAddendum.RoleType.AssignedPluralName = "Addenda";
			this.Roles.Addendum = AgreementItemAddendum.RoleType;

			var AgreementItemChild = new RelationType(AppsDomain.Instance, new Guid("4bd76d2c-383e-460f-a597-4283addcbef8"), new Guid("a8ea8f52-bbe2-4723-85c6-8277904c3d93"), new Guid("894d0335-40d3-4476-a87f-c3f11021862e"));
			AgreementItemChild.AssignedMultiplicity = Multiplicity.OneToMany;
			AgreementItemChild.IsIndexed = true;

			AgreementItemChild.AssociationType.ObjectType = this;

			AgreementItemChild.RoleType.ObjectType = AgreementItemInterface.Instance;;
			AgreementItemChild.RoleType.AssignedSingularName = "Child";
			AgreementItemChild.RoleType.AssignedPluralName = "Children";
			this.Roles.Child = AgreementItemChild.RoleType;

			var AgreementItemDescription = new RelationType(AppsDomain.Instance, new Guid("9431dbfa-c620-445a-914f-8f12d4734b8b"), new Guid("b31b913d-82cc-418d-8167-df26ce483473"), new Guid("c883859c-f67b-482e-b6f1-0a81fae1d927"));
			AgreementItemDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			AgreementItemDescription.AssociationType.ObjectType = this;

			AgreementItemDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			AgreementItemDescription.RoleType.AssignedSingularName = "Description";
			AgreementItemDescription.RoleType.AssignedPluralName = "Descriptions";
			AgreementItemDescription.RoleType.Size = 256;
			this.Roles.Description = AgreementItemDescription.RoleType;

			var AgreementItemAgreementTerm = new RelationType(AppsDomain.Instance, new Guid("cfa9c54b-4e9f-4bd2-897d-baf8fb32fa9c"), new Guid("08518361-7f3d-4a44-9377-f407d6946668"), new Guid("d4becca2-e702-42f8-beb7-f652e086ce83"));
			AgreementItemAgreementTerm.AssignedMultiplicity = Multiplicity.OneToMany;
			AgreementItemAgreementTerm.IsIndexed = true;

			AgreementItemAgreementTerm.AssociationType.ObjectType = this;

			AgreementItemAgreementTerm.RoleType.ObjectType = AgreementTermInterface.Instance;;
			AgreementItemAgreementTerm.RoleType.AssignedSingularName = "AgreementTerm";
			AgreementItemAgreementTerm.RoleType.AssignedPluralName = "AgreementTerms";
			this.Roles.AgreementTerm = AgreementItemAgreementTerm.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SubAgreementClass.Instance.ConcreteRoles.Text = SubAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			AgreementExhibitClass.Instance.ConcreteRoles.Text = AgreementExhibitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			AgreementPricingProgramClass.Instance.ConcreteRoles.Text = AgreementPricingProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 
			AgreementSectionClass.Instance.ConcreteRoles.Text = AgreementSectionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 

			SubAgreementClass.Instance.ConcreteRoles.Addendum = SubAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Addendum]; 
			AgreementExhibitClass.Instance.ConcreteRoles.Addendum = AgreementExhibitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Addendum]; 
			AgreementPricingProgramClass.Instance.ConcreteRoles.Addendum = AgreementPricingProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Addendum]; 
			AgreementSectionClass.Instance.ConcreteRoles.Addendum = AgreementSectionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Addendum]; 

			SubAgreementClass.Instance.ConcreteRoles.Child = SubAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			AgreementExhibitClass.Instance.ConcreteRoles.Child = AgreementExhibitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			AgreementPricingProgramClass.Instance.ConcreteRoles.Child = AgreementPricingProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			AgreementSectionClass.Instance.ConcreteRoles.Child = AgreementSectionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 

			SubAgreementClass.Instance.ConcreteRoles.Description = SubAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			AgreementExhibitClass.Instance.ConcreteRoles.Description = AgreementExhibitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			AgreementPricingProgramClass.Instance.ConcreteRoles.Description = AgreementPricingProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			AgreementSectionClass.Instance.ConcreteRoles.Description = AgreementSectionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			SubAgreementClass.Instance.ConcreteRoles.AgreementTerm = SubAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementTerm]; 
			AgreementExhibitClass.Instance.ConcreteRoles.AgreementTerm = AgreementExhibitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementTerm]; 
			AgreementPricingProgramClass.Instance.ConcreteRoles.AgreementTerm = AgreementPricingProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementTerm]; 
			AgreementSectionClass.Instance.ConcreteRoles.AgreementTerm = AgreementSectionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AgreementTerm]; 


		}

		internal class RolesType
		{
			internal RoleType Text;
			internal RoleType Addendum;
			internal RoleType Child;
			internal RoleType Description;
			internal RoleType AgreementTerm;

		}
	}public partial class ColourClass : Class
	{
		public static ColourClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ColourClass() : base(AppsDomain.Instance, new Guid("8bae9154-ec37-4139-b52c-6c3df860fb20"))
        {
			this.SingularName = "Colour";
			this.PluralName = "Colours";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("bb9f3995-8b38-4dd9-a9ed-454c7488b05e"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e3e4f2dd-856a-43bb-8831-deae68b71a05"))
			{
				Subtype = Instance,
				Supertype = ProductFeatureInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType EstimatedProductCost;
			internal ConcreteRoleType BasePrice;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DependentFeature;
			internal ConcreteRoleType IncompatibleFeature;
			internal ConcreteRoleType VatRate;

		}
	}public partial class PackageRevenueClass : Class
	{
		public static PackageRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PackageRevenueClass() : base(AppsDomain.Instance, new Guid("8bc2d0a0-a371-4292-9fd6-ecb1db838107"))
        {
			this.SingularName = "PackageRevenue";
			this.PluralName = "PackageRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2f39cc20-8192-45b9-afa4-eb0ce7467a7d"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("62f73400-4eb7-4722-b78b-764167188acd"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PackageRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("1b941728-0511-45e3-8460-f49c6868ebaa"), new Guid("1d3aa935-9e18-4cb0-a7ad-e24447743bf3"), new Guid("8d3b1810-f982-4ebd-b3ea-ea7647410c5f"));
			PackageRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PackageRevenueRevenue.AssociationType.ObjectType = this;

			PackageRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PackageRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			PackageRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			PackageRevenueRevenue.RoleType.Scale = 2;
			PackageRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = PackageRevenueRevenue.RoleType;

			var PackageRevenueYear = new RelationType(AppsDomain.Instance, new Guid("2763fe2b-9d15-49a7-92c4-89994699cf05"), new Guid("fabbf131-374d-4f5d-801d-a449378b3ba8"), new Guid("a8a3d6c2-7f15-42c7-a523-b3737b843e34"));
			PackageRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			PackageRevenueYear.AssociationType.ObjectType = this;

			PackageRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PackageRevenueYear.RoleType.AssignedSingularName = "Year";
			PackageRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = PackageRevenueYear.RoleType;

			var PackageRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("7674a37a-173d-4958-b73e-258773ef4277"), new Guid("39ed2c02-672e-42ba-ab9e-0b9b7b73be39"), new Guid("f89627f5-2e66-4aed-9de1-3447dc281b15"));
			PackageRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			PackageRevenueMonth.AssociationType.ObjectType = this;

			PackageRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PackageRevenueMonth.RoleType.AssignedSingularName = "Month";
			PackageRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = PackageRevenueMonth.RoleType;

			var PackageRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("b9acfd44-5228-4fcf-88c6-625110cb394e"), new Guid("0f7f8a0b-20b5-4fb8-abb4-cc727cab1337"), new Guid("e6aa2dbf-0d8a-41d2-94ef-2268c847e1b7"));
			PackageRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PackageRevenueCurrency.IsIndexed = true;

			PackageRevenueCurrency.AssociationType.ObjectType = this;

			PackageRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PackageRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			PackageRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PackageRevenueCurrency.RoleType;

			var PackageRevenuePackageName = new RelationType(AppsDomain.Instance, new Guid("c61a3dce-880f-403c-ad1a-bffabe59a57e"), new Guid("c9336998-8145-4a7d-95de-9d278487d205"), new Guid("24266040-04dd-4388-a9cf-130ecac89094"));
			PackageRevenuePackageName.AssignedMultiplicity = Multiplicity.OneToOne;
			PackageRevenuePackageName.AssociationType.ObjectType = this;

			PackageRevenuePackageName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PackageRevenuePackageName.RoleType.AssignedSingularName = "PackageName";
			PackageRevenuePackageName.RoleType.AssignedPluralName = "PackageNames";
			PackageRevenuePackageName.RoleType.Size = 256;
			this.Roles.PackageName = PackageRevenuePackageName.RoleType;

			var PackageRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("e6df8560-e85f-4e7a-a527-f7fb8f94cbb6"), new Guid("07b77c6b-09d0-4e4f-8cb4-69cbebc14e54"), new Guid("17b95dec-dc59-4abc-817e-26eb0e9d5ac0"));
			PackageRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PackageRevenueInternalOrganisation.IsIndexed = true;

			PackageRevenueInternalOrganisation.AssociationType.ObjectType = this;

			PackageRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PackageRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PackageRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PackageRevenueInternalOrganisation.RoleType;

			var PackageRevenuePackage = new RelationType(AppsDomain.Instance, new Guid("e952d6d6-d388-4e80-ba6b-8a612973aca6"), new Guid("a1b71548-06f0-40cd-a619-8b9c080dfe99"), new Guid("c61b90e7-ea4d-4c7f-bfdb-ef87ba911c9d"));
			PackageRevenuePackage.AssignedMultiplicity = Multiplicity.ManyToOne;
			PackageRevenuePackage.IsIndexed = true;

			PackageRevenuePackage.AssociationType.ObjectType = this;

			PackageRevenuePackage.RoleType.ObjectType = PackageClass.Instance;;
			PackageRevenuePackage.RoleType.AssignedSingularName = "Package";
			PackageRevenuePackage.RoleType.AssignedPluralName = "Packages";
			this.Roles.Package = PackageRevenuePackage.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PackageRevenueClass.Instance.ConcreteRoles.Revenue = PackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			PackageRevenueClass.Instance.ConcreteRoles.Year = PackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			PackageRevenueClass.Instance.ConcreteRoles.Month = PackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			PackageRevenueClass.Instance.ConcreteRoles.Currency = PackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			PackageRevenueClass.Instance.ConcreteRoles.PackageName = PackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PackageName]; 

			PackageRevenueClass.Instance.ConcreteRoles.InternalOrganisation = PackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			PackageRevenueClass.Instance.ConcreteRoles.Package = PackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Package]; 


		}

		internal class RolesType
		{
			internal RoleType Revenue;
			internal RoleType Year;
			internal RoleType Month;
			internal RoleType Currency;
			internal RoleType PackageName;
			internal RoleType InternalOrganisation;
			internal RoleType Package;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType PackageName;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Package;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesOrderObjectStateClass : Class
	{
		public static SalesOrderObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesOrderObjectStateClass() : base(AppsDomain.Instance, new Guid("8c993e3f-59a0-42f0-a0ef-d49f9beb0af6"))
        {
			this.SingularName = "SalesOrderObjectState";
			this.PluralName = "SalesOrderObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ca8146f3-995f-4163-9227-d1ffdb04c2c6"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class BenefitClass : Class
	{
		public static BenefitClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BenefitClass() : base(AppsDomain.Instance, new Guid("8cea6932-d589-4b5b-99b8-ffba33936f8f"))
        {
			this.SingularName = "Benefit";
			this.PluralName = "Benefits";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("e4449b83-2a10-436c-a194-24ef36df296b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var BenefitEmployerPaidPercentage = new RelationType(AppsDomain.Instance, new Guid("0c3efe28-a934-467d-a361-293175330b62"), new Guid("d9d8872d-3b77-48e6-9902-74560a60c3ef"), new Guid("98a07703-261f-4a9a-8c1b-02af1a4a4e0b"));
			BenefitEmployerPaidPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			BenefitEmployerPaidPercentage.AssociationType.ObjectType = this;

			BenefitEmployerPaidPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			BenefitEmployerPaidPercentage.RoleType.AssignedSingularName = "EmployerPaidPercentage";
			BenefitEmployerPaidPercentage.RoleType.AssignedPluralName = "EmployerPaidPercentages";
			BenefitEmployerPaidPercentage.RoleType.Scale = 2;
			BenefitEmployerPaidPercentage.RoleType.Precision = 19;
			this.Roles.EmployerPaidPercentage = BenefitEmployerPaidPercentage.RoleType;

			var BenefitDescription = new RelationType(AppsDomain.Instance, new Guid("6239a2cc-97ce-49cb-b5aa-23e1e9ff7e71"), new Guid("759c76cd-01ba-4be6-a1d1-3f9f305e69b5"), new Guid("97ebeb12-9ae4-4364-8f85-c4cfd565180b"));
			BenefitDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			BenefitDescription.AssociationType.ObjectType = this;

			BenefitDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BenefitDescription.RoleType.AssignedSingularName = "Description";
			BenefitDescription.RoleType.AssignedPluralName = "Descriptions";
			BenefitDescription.RoleType.Size = 256;
			this.Roles.Description = BenefitDescription.RoleType;

			var BenefitName = new RelationType(AppsDomain.Instance, new Guid("6e1e0ef1-0e2a-406f-afa4-a6c97657801f"), new Guid("de7199dd-6a61-41d3-b3dc-847a1a1eb596"), new Guid("f9a3fee7-4b05-4bef-af33-064cac668021"));
			BenefitName.AssignedMultiplicity = Multiplicity.OneToOne;
			BenefitName.AssociationType.ObjectType = this;

			BenefitName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BenefitName.RoleType.AssignedSingularName = "Name";
			BenefitName.RoleType.AssignedPluralName = "Names";
			BenefitName.RoleType.Size = 256;
			this.Roles.Name = BenefitName.RoleType;

			var BenefitAvailableTime = new RelationType(AppsDomain.Instance, new Guid("89460288-d09e-43f9-960a-86b6c1e2e0be"), new Guid("97cf596f-bed3-4309-9b88-50be9b82f7a1"), new Guid("4554ecdf-95a8-4d3a-9415-fe397d14831e"));
			BenefitAvailableTime.AssignedMultiplicity = Multiplicity.OneToOne;
			BenefitAvailableTime.AssociationType.ObjectType = this;

			BenefitAvailableTime.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			BenefitAvailableTime.RoleType.AssignedSingularName = "AvailableTime";
			BenefitAvailableTime.RoleType.AssignedPluralName = "AvailableTimes";
			BenefitAvailableTime.RoleType.Scale = 2;
			BenefitAvailableTime.RoleType.Precision = 19;
			this.Roles.AvailableTime = BenefitAvailableTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BenefitClass.Instance.ConcreteRoles.EmployerPaidPercentage = BenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EmployerPaidPercentage]; 

			BenefitClass.Instance.ConcreteRoles.Description = BenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			BenefitClass.Instance.ConcreteRoles.Name = BenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			BenefitClass.Instance.ConcreteRoles.AvailableTime = BenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AvailableTime]; 


		}

		internal class RolesType
		{
			internal RoleType EmployerPaidPercentage;
			internal RoleType Description;
			internal RoleType Name;
			internal RoleType AvailableTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType EmployerPaidPercentage;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType AvailableTime;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EngineeringDocumentClass : Class
	{
		public static EngineeringDocumentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EngineeringDocumentClass() : base(AppsDomain.Instance, new Guid("8da5bb9b-593b-4c10-91c2-1e9cc2c226d1"))
        {
			this.SingularName = "EngineeringDocument";
			this.PluralName = "EngineeringDocuments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("54560811-1421-4c56-a265-e5e4253224d0"))
			{
				Subtype = Instance,
				Supertype = DocumentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DocumentLocation;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;

		}
	}public partial class VatReturnBoxClass : Class
	{
		public static VatReturnBoxClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VatReturnBoxClass() : base(AppsDomain.Instance, new Guid("8dc67774-c15a-47dd-9b8a-ce4e7139e8a3"))
        {
			this.SingularName = "VatReturnBox";
			this.PluralName = "VatReturnBoxes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("87f02852-cdb5-4c0a-9d06-fdc2b5c75148"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var VatReturnBoxHeaderNumber = new RelationType(AppsDomain.Instance, new Guid("3bcc4fc9-5646-4ceb-b48b-bb1d7fbcba64"), new Guid("69f949c3-f5c1-4cb4-a907-ce3673496628"), new Guid("ec126f8a-4d48-4c1e-bdb6-ad66ab529580"));
			VatReturnBoxHeaderNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			VatReturnBoxHeaderNumber.AssociationType.ObjectType = this;

			VatReturnBoxHeaderNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			VatReturnBoxHeaderNumber.RoleType.AssignedSingularName = "HeaderNumber";
			VatReturnBoxHeaderNumber.RoleType.AssignedPluralName = "HeaderNumbers";
			VatReturnBoxHeaderNumber.RoleType.Size = 256;
			this.Roles.HeaderNumber = VatReturnBoxHeaderNumber.RoleType;

			var VatReturnBoxDescription = new RelationType(AppsDomain.Instance, new Guid("78e114b4-ec1d-49ce-ab32-40a3184dea31"), new Guid("98920876-b4f8-4d41-90f1-115164441836"), new Guid("9a8717dd-0713-458b-8d84-9758f4ddfb03"));
			VatReturnBoxDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			VatReturnBoxDescription.AssociationType.ObjectType = this;

			VatReturnBoxDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			VatReturnBoxDescription.RoleType.AssignedSingularName = "Description";
			VatReturnBoxDescription.RoleType.AssignedPluralName = "Descriptions";
			VatReturnBoxDescription.RoleType.Size = 256;
			this.Roles.Description = VatReturnBoxDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			VatReturnBoxClass.Instance.ConcreteRoles.HeaderNumber = VatReturnBoxClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HeaderNumber]; 

			VatReturnBoxClass.Instance.ConcreteRoles.Description = VatReturnBoxClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType HeaderNumber;
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType HeaderNumber;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CommunicationEventPurposeClass : Class
	{
		public static CommunicationEventPurposeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CommunicationEventPurposeClass() : base(AppsDomain.Instance, new Guid("8e3fd781-f0b5-4e02-b1f6-6364d0559273"))
        {
			this.SingularName = "CommunicationEventPurpose";
			this.PluralName = "CommunicationEventPurposes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f7de6f7d-1771-4eec-ac7b-49096d57512a"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ShipmentRouteSegmentClass : Class
	{
		public static ShipmentRouteSegmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ShipmentRouteSegmentClass() : base(AppsDomain.Instance, new Guid("8e6eaa35-85da-4c80-848c-3f1ed6cd2f8a"))
        {
			this.SingularName = "ShipmentRouteSegment";
			this.PluralName = "ShipmentRouteSegments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b5ef9b22-d6ac-444d-ba56-d6a59aceae3d"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ShipmentRouteSegmentEndKilometers = new RelationType(AppsDomain.Instance, new Guid("02ef1727-e135-4af3-9d76-02bad7b122f3"), new Guid("c4fd1dd3-ddef-4f2c-bc22-388d3f979798"), new Guid("1c1e24d0-5635-4d17-bd8b-5e0513b7f024"));
			ShipmentRouteSegmentEndKilometers.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentRouteSegmentEndKilometers.AssociationType.ObjectType = this;

			ShipmentRouteSegmentEndKilometers.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ShipmentRouteSegmentEndKilometers.RoleType.AssignedSingularName = "EndKilometers";
			ShipmentRouteSegmentEndKilometers.RoleType.AssignedPluralName = "EndKilometers";
			ShipmentRouteSegmentEndKilometers.RoleType.Scale = 2;
			ShipmentRouteSegmentEndKilometers.RoleType.Precision = 19;
			this.Roles.EndKilometers = ShipmentRouteSegmentEndKilometers.RoleType;

			var ShipmentRouteSegmentFromFacility = new RelationType(AppsDomain.Instance, new Guid("2a697cc1-cdeb-4e40-a929-2a8df593877e"), new Guid("f2e40a37-c722-4608-9ed5-0b6f49819efc"), new Guid("54e17ef2-abae-4c76-9d93-87a6545cfa87"));
			ShipmentRouteSegmentFromFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentRouteSegmentFromFacility.IsIndexed = true;

			ShipmentRouteSegmentFromFacility.AssociationType.ObjectType = this;

			ShipmentRouteSegmentFromFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			ShipmentRouteSegmentFromFacility.RoleType.AssignedSingularName = "FromFacility";
			ShipmentRouteSegmentFromFacility.RoleType.AssignedPluralName = "FromFacilities";
			this.Roles.FromFacility = ShipmentRouteSegmentFromFacility.RoleType;

			var ShipmentRouteSegmentStartKilometers = new RelationType(AppsDomain.Instance, new Guid("3f46506d-ea90-4103-b986-965194037cef"), new Guid("b0468fca-5eb7-4251-b935-2f18891e9a8f"), new Guid("e8aea1c9-ca9b-4b77-b2c2-8f3e4f2d900b"));
			ShipmentRouteSegmentStartKilometers.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentRouteSegmentStartKilometers.AssociationType.ObjectType = this;

			ShipmentRouteSegmentStartKilometers.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ShipmentRouteSegmentStartKilometers.RoleType.AssignedSingularName = "StartKilometers";
			ShipmentRouteSegmentStartKilometers.RoleType.AssignedPluralName = "StartKilometers";
			ShipmentRouteSegmentStartKilometers.RoleType.Scale = 2;
			ShipmentRouteSegmentStartKilometers.RoleType.Precision = 19;
			this.Roles.StartKilometers = ShipmentRouteSegmentStartKilometers.RoleType;

			var ShipmentRouteSegmentShipmentMethod = new RelationType(AppsDomain.Instance, new Guid("4a30a93c-d50b-44cf-b0a2-c29c970e6290"), new Guid("9754042f-3f58-42dd-b160-9c4339a6169d"), new Guid("6be3b17d-03f1-4731-b17e-5956260d1d9a"));
			ShipmentRouteSegmentShipmentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentRouteSegmentShipmentMethod.IsIndexed = true;

			ShipmentRouteSegmentShipmentMethod.AssociationType.ObjectType = this;

			ShipmentRouteSegmentShipmentMethod.RoleType.ObjectType = ShipmentMethodClass.Instance;;
			ShipmentRouteSegmentShipmentMethod.RoleType.AssignedSingularName = "ShipmentMethod";
			ShipmentRouteSegmentShipmentMethod.RoleType.AssignedPluralName = "ShipmentMethods";
			this.Roles.ShipmentMethod = ShipmentRouteSegmentShipmentMethod.RoleType;

			var ShipmentRouteSegmentEstimatedStartDateTime = new RelationType(AppsDomain.Instance, new Guid("57f25750-a517-47a8-a6a0-feb160cd5f3e"), new Guid("0eb0c608-4d72-4aa2-b9c1-46d508a3ff32"), new Guid("44572277-5c54-4d92-8916-1ad2afd13da2"));
			ShipmentRouteSegmentEstimatedStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentRouteSegmentEstimatedStartDateTime.AssociationType.ObjectType = this;

			ShipmentRouteSegmentEstimatedStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ShipmentRouteSegmentEstimatedStartDateTime.RoleType.AssignedSingularName = "EstimatedStartDateTime";
			ShipmentRouteSegmentEstimatedStartDateTime.RoleType.AssignedPluralName = "EstimatedStartDateTimes";
			this.Roles.EstimatedStartDateTime = ShipmentRouteSegmentEstimatedStartDateTime.RoleType;

			var ShipmentRouteSegmentToFacility = new RelationType(AppsDomain.Instance, new Guid("591427f6-b61c-4c19-9f82-e97570d9bead"), new Guid("352996f3-ffa9-4453-a602-938c7543a7c1"), new Guid("bd604c1a-3540-472a-90f5-69ed94a82f03"));
			ShipmentRouteSegmentToFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentRouteSegmentToFacility.IsIndexed = true;

			ShipmentRouteSegmentToFacility.AssociationType.ObjectType = this;

			ShipmentRouteSegmentToFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			ShipmentRouteSegmentToFacility.RoleType.AssignedSingularName = "ToFacility";
			ShipmentRouteSegmentToFacility.RoleType.AssignedPluralName = "ToFacilities";
			this.Roles.ToFacility = ShipmentRouteSegmentToFacility.RoleType;

			var ShipmentRouteSegmentEstimatedArrivalDateTime = new RelationType(AppsDomain.Instance, new Guid("6b3d4c25-823c-4197-8c05-80aeb887eb8b"), new Guid("f77e2ce0-97fb-4ccd-a6a3-dac8c09d5295"), new Guid("85fe4467-bfde-41ac-9a40-e482a2f800a0"));
			ShipmentRouteSegmentEstimatedArrivalDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentRouteSegmentEstimatedArrivalDateTime.AssociationType.ObjectType = this;

			ShipmentRouteSegmentEstimatedArrivalDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ShipmentRouteSegmentEstimatedArrivalDateTime.RoleType.AssignedSingularName = "EstimatedArrivalDateTime";
			ShipmentRouteSegmentEstimatedArrivalDateTime.RoleType.AssignedPluralName = "EstimatedArrivalDateTimes";
			this.Roles.EstimatedArrivalDateTime = ShipmentRouteSegmentEstimatedArrivalDateTime.RoleType;

			var ShipmentRouteSegmentVehicle = new RelationType(AppsDomain.Instance, new Guid("6bf54f85-7781-4fd3-a87f-6e7103042ecb"), new Guid("09234af6-ece2-403f-81ce-8c5a8e814135"), new Guid("e9d8d7f8-5408-4bb8-85d2-6ce02a400796"));
			ShipmentRouteSegmentVehicle.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentRouteSegmentVehicle.IsIndexed = true;

			ShipmentRouteSegmentVehicle.AssociationType.ObjectType = this;

			ShipmentRouteSegmentVehicle.RoleType.ObjectType = VehicleClass.Instance;;
			ShipmentRouteSegmentVehicle.RoleType.AssignedSingularName = "Vehicle";
			ShipmentRouteSegmentVehicle.RoleType.AssignedPluralName = "Vehicles";
			this.Roles.Vehicle = ShipmentRouteSegmentVehicle.RoleType;

			var ShipmentRouteSegmentActualArrivalDateTime = new RelationType(AppsDomain.Instance, new Guid("928b9d1e-903b-4d56-aa72-b7aeaf3ba340"), new Guid("ace8a50d-e396-4e47-b13c-f02fa018f652"), new Guid("2b85c556-8726-41d4-a236-197816b2824b"));
			ShipmentRouteSegmentActualArrivalDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentRouteSegmentActualArrivalDateTime.AssociationType.ObjectType = this;

			ShipmentRouteSegmentActualArrivalDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ShipmentRouteSegmentActualArrivalDateTime.RoleType.AssignedSingularName = "ActualArrivalDateTime";
			ShipmentRouteSegmentActualArrivalDateTime.RoleType.AssignedPluralName = "ActualArrivalDateTimes";
			this.Roles.ActualArrivalDateTime = ShipmentRouteSegmentActualArrivalDateTime.RoleType;

			var ShipmentRouteSegmentActualStartDateTime = new RelationType(AppsDomain.Instance, new Guid("b080fe6b-382e-475d-be81-8632ddedb183"), new Guid("39dade5b-be0e-43ed-8368-00f24cfd3ce6"), new Guid("e749db0f-c95e-4c81-87d0-f5932a31816c"));
			ShipmentRouteSegmentActualStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentRouteSegmentActualStartDateTime.AssociationType.ObjectType = this;

			ShipmentRouteSegmentActualStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ShipmentRouteSegmentActualStartDateTime.RoleType.AssignedSingularName = "ActualStartDateTime";
			ShipmentRouteSegmentActualStartDateTime.RoleType.AssignedPluralName = "ActualStartDateTimes";
			this.Roles.ActualStartDateTime = ShipmentRouteSegmentActualStartDateTime.RoleType;

			var ShipmentRouteSegmentCarrier = new RelationType(AppsDomain.Instance, new Guid("c04769b1-f8dc-40c7-87d2-1e55a4702e71"), new Guid("7d5a3fa4-50bb-45b6-b355-2bad4485b9d1"), new Guid("c8ad9159-10eb-4c38-8e5b-1339fa082406"));
			ShipmentRouteSegmentCarrier.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentRouteSegmentCarrier.IsIndexed = true;

			ShipmentRouteSegmentCarrier.AssociationType.ObjectType = this;

			ShipmentRouteSegmentCarrier.RoleType.ObjectType = OrganisationClass.Instance;;
			ShipmentRouteSegmentCarrier.RoleType.AssignedSingularName = "Carrier";
			ShipmentRouteSegmentCarrier.RoleType.AssignedPluralName = "Carriers";
			this.Roles.Carrier = ShipmentRouteSegmentCarrier.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ShipmentRouteSegmentClass.Instance.ConcreteRoles.EndKilometers = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EndKilometers]; 

			ShipmentRouteSegmentClass.Instance.ConcreteRoles.FromFacility = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromFacility]; 

			ShipmentRouteSegmentClass.Instance.ConcreteRoles.StartKilometers = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartKilometers]; 

			ShipmentRouteSegmentClass.Instance.ConcreteRoles.ShipmentMethod = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentMethod]; 

			ShipmentRouteSegmentClass.Instance.ConcreteRoles.EstimatedStartDateTime = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedStartDateTime]; 

			ShipmentRouteSegmentClass.Instance.ConcreteRoles.ToFacility = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToFacility]; 

			ShipmentRouteSegmentClass.Instance.ConcreteRoles.EstimatedArrivalDateTime = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedArrivalDateTime]; 

			ShipmentRouteSegmentClass.Instance.ConcreteRoles.Vehicle = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Vehicle]; 

			ShipmentRouteSegmentClass.Instance.ConcreteRoles.ActualArrivalDateTime = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualArrivalDateTime]; 

			ShipmentRouteSegmentClass.Instance.ConcreteRoles.ActualStartDateTime = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStartDateTime]; 

			ShipmentRouteSegmentClass.Instance.ConcreteRoles.Carrier = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Carrier]; 


		}

		internal class RolesType
		{
			internal RoleType EndKilometers;
			internal RoleType FromFacility;
			internal RoleType StartKilometers;
			internal RoleType ShipmentMethod;
			internal RoleType EstimatedStartDateTime;
			internal RoleType ToFacility;
			internal RoleType EstimatedArrivalDateTime;
			internal RoleType Vehicle;
			internal RoleType ActualArrivalDateTime;
			internal RoleType ActualStartDateTime;
			internal RoleType Carrier;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType EndKilometers;
			internal ConcreteRoleType FromFacility;
			internal ConcreteRoleType StartKilometers;
			internal ConcreteRoleType ShipmentMethod;
			internal ConcreteRoleType EstimatedStartDateTime;
			internal ConcreteRoleType ToFacility;
			internal ConcreteRoleType EstimatedArrivalDateTime;
			internal ConcreteRoleType Vehicle;
			internal ConcreteRoleType ActualArrivalDateTime;
			internal ConcreteRoleType ActualStartDateTime;
			internal ConcreteRoleType Carrier;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class WorkEffortPurposeClass : Class
	{
		public static WorkEffortPurposeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortPurposeClass() : base(AppsDomain.Instance, new Guid("8f838542-cc98-4e95-8e60-fb3e774ba92e"))
        {
			this.SingularName = "WorkEffortPurpose";
			this.PluralName = "WorkEffortPurposes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("144021ed-5fb6-4373-ab59-988834c90ad2"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class VarianceReasonClass : Class
	{
		public static VarianceReasonClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VarianceReasonClass() : base(AppsDomain.Instance, new Guid("8ff46109-8ae7-4da5-a1f9-f19d4cf4e27e"))
        {
			this.SingularName = "VarianceReason";
			this.PluralName = "VarianceReasons";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d47dfece-bfcf-4ae7-a3d1-6d480609c069"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PhaseClass : Class
	{
		public static PhaseClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PhaseClass() : base(AppsDomain.Instance, new Guid("90a8fa64-c9c7-4a7a-a543-d500668619eb"))
        {
			this.SingularName = "Phase";
			this.PluralName = "Phases";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("86aa222a-c8b3-4b2f-aff5-8dceaafcf2b7"))
			{
				Subtype = Instance,
				Supertype = WorkEffortInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentWorkEffortStatus;
			internal ConcreteRoleType Precendency;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeliverableProduced;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType InventoryItemNeeded;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType ActualCompletion;
			internal ConcreteRoleType OrderItemFulfillment;
			internal ConcreteRoleType WorkEffortStatus;
			internal ConcreteRoleType WorkEffortType;
			internal ConcreteRoleType InventoryItemProduced;
			internal ConcreteRoleType WorkEffortPurpose;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType RequirementFulfillment;
			internal ConcreteRoleType SpecialTerms;
			internal ConcreteRoleType Concurrency;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ActualHours;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ScheduledCompletion;
			internal ConcreteRoleType EstimatedHours;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class WorkEffortStatusClass : Class
	{
		public static WorkEffortStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortStatusClass() : base(AppsDomain.Instance, new Guid("90df16ba-ab97-4ec1-9db3-ab20314122bc"))
        {
			this.SingularName = "WorkEffortStatus";
			this.PluralName = "WorkEffortStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f1ab3d17-61cc-45eb-9590-d3847fc2c897"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("5dd27f4b-032d-4b45-86ad-ba288c26fa7c"), new Guid("2743e797-731b-404f-866a-5b9249309f60"), new Guid("99022ef3-d4f2-4635-b27a-c02b554ad8ae"));
			WorkEffortStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortStatusStartDateTime.AssociationType.ObjectType = this;

			WorkEffortStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			WorkEffortStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			WorkEffortStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = WorkEffortStatusStartDateTime.RoleType;

			var WorkEffortStatusWorkEffortObjectState = new RelationType(AppsDomain.Instance, new Guid("f9e60388-f0da-45d9-94c2-5fe2d5ff581a"), new Guid("9bb24455-11ed-4dba-820c-fa6b03aae9a6"), new Guid("6d2efe75-9b3f-449b-95f7-cbc552a2ca3c"));
			WorkEffortStatusWorkEffortObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortStatusWorkEffortObjectState.IsIndexed = true;

			WorkEffortStatusWorkEffortObjectState.AssociationType.ObjectType = this;

			WorkEffortStatusWorkEffortObjectState.RoleType.ObjectType = WorkEffortObjectStateClass.Instance;;
			WorkEffortStatusWorkEffortObjectState.RoleType.AssignedSingularName = "WorkEffortObjectState";
			WorkEffortStatusWorkEffortObjectState.RoleType.AssignedPluralName = "WorkEffortObjectStates";
			this.Roles.WorkEffortObjectState = WorkEffortStatusWorkEffortObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortStatusClass.Instance.ConcreteRoles.StartDateTime = WorkEffortStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			WorkEffortStatusClass.Instance.ConcreteRoles.WorkEffortObjectState = WorkEffortStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType WorkEffortObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType WorkEffortObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalutationClass : Class
	{
		public static SalutationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalutationClass() : base(AppsDomain.Instance, new Guid("91d1ad08-2eae-4d9e-8a2e-223eeae138af"))
        {
			this.SingularName = "Salutation";
			this.PluralName = "Salutations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4c39acfc-72f0-4f94-b638-dce2fcce6704"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("5bdf5e10-db96-454c-aafa-6084c6caef67"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("6c124270-429f-41d6-b7f1-047c71c78c23"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PurchaseOrderStatusClass : Class
	{
		public static PurchaseOrderStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseOrderStatusClass() : base(AppsDomain.Instance, new Guid("92b62390-9bf9-432b-b81e-242a5467e10e"))
        {
			this.SingularName = "PurchaseOrderStatus";
			this.PluralName = "PurchaseOrderStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("52353481-6ced-4a85-9016-e8673449cea9"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseOrderStatusPurchaseOrderObjectState = new RelationType(AppsDomain.Instance, new Guid("1f6f2902-0b17-4537-970d-a72454b91410"), new Guid("b3e0bc80-0b37-4946-a6c1-e84cb522e949"), new Guid("95d7759c-aa52-4b38-8337-0c59287441aa"));
			PurchaseOrderStatusPurchaseOrderObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderStatusPurchaseOrderObjectState.IsIndexed = true;

			PurchaseOrderStatusPurchaseOrderObjectState.AssociationType.ObjectType = this;

			PurchaseOrderStatusPurchaseOrderObjectState.RoleType.ObjectType = PurchaseOrderObjectStateClass.Instance;;
			PurchaseOrderStatusPurchaseOrderObjectState.RoleType.AssignedSingularName = "PurchaseOrderObjectState";
			PurchaseOrderStatusPurchaseOrderObjectState.RoleType.AssignedPluralName = "PurchaseOrderObjectStates";
			this.Roles.PurchaseOrderObjectState = PurchaseOrderStatusPurchaseOrderObjectState.RoleType;

			var PurchaseOrderStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("fe949e5f-b717-4cda-8f40-5b0db57d43dd"), new Guid("890b82dc-5a8b-463b-bcc4-cccee90b8dfb"), new Guid("e505854a-67de-4cdf-8404-a0495178ed74"));
			PurchaseOrderStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseOrderStatusStartDateTime.AssociationType.ObjectType = this;

			PurchaseOrderStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PurchaseOrderStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			PurchaseOrderStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = PurchaseOrderStatusStartDateTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseOrderStatusClass.Instance.ConcreteRoles.PurchaseOrderObjectState = PurchaseOrderStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseOrderObjectState]; 

			PurchaseOrderStatusClass.Instance.ConcreteRoles.StartDateTime = PurchaseOrderStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 


		}

		internal class RolesType
		{
			internal RoleType PurchaseOrderObjectState;
			internal RoleType StartDateTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PurchaseOrderObjectState;
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PayrollPreferenceClass : Class
	{
		public static PayrollPreferenceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PayrollPreferenceClass() : base(AppsDomain.Instance, new Guid("92f48c0c-31d9-4ed5-8f92-753de6af471a"))
        {
			this.SingularName = "PayrollPreference";
			this.PluralName = "PayrollPreferences";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4f7ee49a-b975-423f-8ec3-72d85857fdb4"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PayrollPreferencePercentage = new RelationType(AppsDomain.Instance, new Guid("2cb969f7-6415-4d5b-be55-7e691c2254e1"), new Guid("c2040e80-7608-4b9d-8e1e-c244b7155a81"), new Guid("6f5e623e-b365-402c-aea0-09a386bb0377"));
			PayrollPreferencePercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			PayrollPreferencePercentage.AssociationType.ObjectType = this;

			PayrollPreferencePercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PayrollPreferencePercentage.RoleType.AssignedSingularName = "Percentage";
			PayrollPreferencePercentage.RoleType.AssignedPluralName = "Percentages";
			PayrollPreferencePercentage.RoleType.Scale = 2;
			PayrollPreferencePercentage.RoleType.Precision = 19;
			this.Roles.Percentage = PayrollPreferencePercentage.RoleType;

			var PayrollPreferenceAccountNumber = new RelationType(AppsDomain.Instance, new Guid("802de3ea-0cb9-4815-bc56-497e75f487ae"), new Guid("75568752-3a42-412f-bf76-be6705bd441c"), new Guid("fc4e22ba-ad4d-4f6e-b65f-d0aef6ff47ee"));
			PayrollPreferenceAccountNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			PayrollPreferenceAccountNumber.AssociationType.ObjectType = this;

			PayrollPreferenceAccountNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PayrollPreferenceAccountNumber.RoleType.AssignedSingularName = "AccountNumber";
			PayrollPreferenceAccountNumber.RoleType.AssignedPluralName = "AccountNumbers";
			PayrollPreferenceAccountNumber.RoleType.Size = 256;
			this.Roles.AccountNumber = PayrollPreferenceAccountNumber.RoleType;

			var PayrollPreferencePaymentMethod = new RelationType(AppsDomain.Instance, new Guid("a37e2763-6d8c-46c3-a69f-148458d2981b"), new Guid("4255cc8c-c97c-48a2-9111-f8658f478042"), new Guid("7f79e26c-e5ef-45d4-88e9-8dcce8ffc2ba"));
			PayrollPreferencePaymentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			PayrollPreferencePaymentMethod.IsIndexed = true;

			PayrollPreferencePaymentMethod.AssociationType.ObjectType = this;

			PayrollPreferencePaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			PayrollPreferencePaymentMethod.RoleType.AssignedSingularName = "PaymentMethod";
			PayrollPreferencePaymentMethod.RoleType.AssignedPluralName = "PaymentMethods";
			this.Roles.PaymentMethod = PayrollPreferencePaymentMethod.RoleType;

			var PayrollPreferenceTimeFrequency = new RelationType(AppsDomain.Instance, new Guid("b576883f-0cfd-4973-aa49-479b6e712c75"), new Guid("f93aac27-8f9d-4b9e-a55d-5fad0efc6e86"), new Guid("162fccce-f98a-4b2b-b840-72368a87b043"));
			PayrollPreferenceTimeFrequency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PayrollPreferenceTimeFrequency.IsIndexed = true;

			PayrollPreferenceTimeFrequency.AssociationType.ObjectType = this;

			PayrollPreferenceTimeFrequency.RoleType.ObjectType = TimeFrequencyClass.Instance;;
			PayrollPreferenceTimeFrequency.RoleType.AssignedSingularName = "TimeFrequency";
			PayrollPreferenceTimeFrequency.RoleType.AssignedPluralName = "TimeFrequencies";
			this.Roles.TimeFrequency = PayrollPreferenceTimeFrequency.RoleType;

			var PayrollPreferenceDeductionType = new RelationType(AppsDomain.Instance, new Guid("c71eb13a-8053-4d56-a3e3-dcd38a1e4f29"), new Guid("8955caa1-cfdb-4463-a6d2-80ce0f775470"), new Guid("4851823e-72f4-4531-b505-bae6d70688e8"));
			PayrollPreferenceDeductionType.AssignedMultiplicity = Multiplicity.ManyToOne;
			PayrollPreferenceDeductionType.IsIndexed = true;

			PayrollPreferenceDeductionType.AssociationType.ObjectType = this;

			PayrollPreferenceDeductionType.RoleType.ObjectType = DeductionTypeClass.Instance;;
			PayrollPreferenceDeductionType.RoleType.AssignedSingularName = "DeductionType";
			PayrollPreferenceDeductionType.RoleType.AssignedPluralName = "DeductionTypes";
			this.Roles.DeductionType = PayrollPreferenceDeductionType.RoleType;

			var PayrollPreferenceAmount = new RelationType(AppsDomain.Instance, new Guid("ded05ab7-351b-4b05-9e0a-010e6b4fbd0f"), new Guid("feb46721-492d-4508-9d28-5b6496f517cd"), new Guid("ddfd9dac-42d5-42d0-909a-ebf6c8869c73"));
			PayrollPreferenceAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			PayrollPreferenceAmount.AssociationType.ObjectType = this;

			PayrollPreferenceAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PayrollPreferenceAmount.RoleType.AssignedSingularName = "Amount";
			PayrollPreferenceAmount.RoleType.AssignedPluralName = "Amounts";
			PayrollPreferenceAmount.RoleType.Scale = 2;
			PayrollPreferenceAmount.RoleType.Precision = 19;
			this.Roles.Amount = PayrollPreferenceAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PayrollPreferenceClass.Instance.ConcreteRoles.Percentage = PayrollPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Percentage]; 

			PayrollPreferenceClass.Instance.ConcreteRoles.AccountNumber = PayrollPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountNumber]; 

			PayrollPreferenceClass.Instance.ConcreteRoles.PaymentMethod = PayrollPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 

			PayrollPreferenceClass.Instance.ConcreteRoles.TimeFrequency = PayrollPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TimeFrequency]; 

			PayrollPreferenceClass.Instance.ConcreteRoles.DeductionType = PayrollPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeductionType]; 

			PayrollPreferenceClass.Instance.ConcreteRoles.Amount = PayrollPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 


		}

		internal class RolesType
		{
			internal RoleType Percentage;
			internal RoleType AccountNumber;
			internal RoleType PaymentMethod;
			internal RoleType TimeFrequency;
			internal RoleType DeductionType;
			internal RoleType Amount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Percentage;
			internal ConcreteRoleType AccountNumber;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType TimeFrequency;
			internal ConcreteRoleType DeductionType;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CustomerShipmentClass : Class
	{
		public static CustomerShipmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CustomerShipmentClass() : base(AppsDomain.Instance, new Guid("9301efcb-2f08-4825-aa60-752c031e4697"))
        {
			this.SingularName = "CustomerShipment";
			this.PluralName = "CustomerShipments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("690c96ff-b571-49e0-be79-e1faea4bc288"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("b2c29382-1d90-4029-837d-505e2307022f"))
			{
				Subtype = Instance,
				Supertype = ShipmentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CustomerShipmentCurrentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("15e8f37c-3963-490c-8f22-7fb1e40209df"), new Guid("30b4e232-dd11-4ee6-b1dd-ef1e05b54d92"), new Guid("a282ae7a-2280-4ea8-a8c8-cf170f0714ac"));
			CustomerShipmentCurrentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerShipmentCurrentShipmentStatus.IsDerived = true;
			CustomerShipmentCurrentShipmentStatus.IsIndexed = true;

			CustomerShipmentCurrentShipmentStatus.AssociationType.ObjectType = this;

			CustomerShipmentCurrentShipmentStatus.RoleType.ObjectType = CustomerShipmentStatusClass.Instance;;
			CustomerShipmentCurrentShipmentStatus.RoleType.AssignedSingularName = "CurrentShipmentStatus";
			CustomerShipmentCurrentShipmentStatus.RoleType.AssignedPluralName = "CurrentShipmentStatus";
			this.Roles.CurrentShipmentStatus = CustomerShipmentCurrentShipmentStatus.RoleType;

			var CustomerShipmentPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("30b48576-1a91-4b75-8503-c83313db6d98"), new Guid("a8733a1e-232d-4773-a18f-351b35979dd4"), new Guid("8e4f6c02-d388-4a69-acb9-c6b9eed9fcaa"));
			CustomerShipmentPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerShipmentPreviousObjectState.IsDerived = true;
			CustomerShipmentPreviousObjectState.IsIndexed = true;

			CustomerShipmentPreviousObjectState.AssociationType.ObjectType = this;

			CustomerShipmentPreviousObjectState.RoleType.ObjectType = CustomerShipmentObjectStateClass.Instance;;
			CustomerShipmentPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			CustomerShipmentPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = CustomerShipmentPreviousObjectState.RoleType;

			var CustomerShipmentReleasedManually = new RelationType(AppsDomain.Instance, new Guid("4f7c79be-9f0d-4646-9488-dc86761866cd"), new Guid("06ff523b-b43d-424e-b54a-c184c5d3ac5f"), new Guid("526cb9db-f5d7-42bc-a37d-c1ae680d1f92"));
			CustomerShipmentReleasedManually.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerShipmentReleasedManually.AssociationType.ObjectType = this;

			CustomerShipmentReleasedManually.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			CustomerShipmentReleasedManually.RoleType.AssignedSingularName = "ReleasedManually";
			CustomerShipmentReleasedManually.RoleType.AssignedPluralName = "ReleasedsManually";
			this.Roles.ReleasedManually = CustomerShipmentReleasedManually.RoleType;

			var CustomerShipmentCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("7b1b6b60-9678-4a52-aee8-33bad04eeb40"), new Guid("8cf76b47-a09f-4112-8bec-733a30abc323"), new Guid("6c812e1e-204b-4e85-8cfb-5dae89fb2bf2"));
			CustomerShipmentCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerShipmentCurrentObjectState.IsDerived = true;
			CustomerShipmentCurrentObjectState.IsIndexed = true;

			CustomerShipmentCurrentObjectState.AssociationType.ObjectType = this;

			CustomerShipmentCurrentObjectState.RoleType.ObjectType = CustomerShipmentObjectStateClass.Instance;;
			CustomerShipmentCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			CustomerShipmentCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = CustomerShipmentCurrentObjectState.RoleType;

			var CustomerShipmentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("7b6a8a4f-574f-494f-b43b-7c5b7428d685"), new Guid("83787439-402b-4d57-8e70-aa157aa8d1fa"), new Guid("0022a581-9823-4b8d-a3f5-ce068ab60fe8"));
			CustomerShipmentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			CustomerShipmentShipmentStatus.IsDerived = true;
			CustomerShipmentShipmentStatus.IsIndexed = true;

			CustomerShipmentShipmentStatus.AssociationType.ObjectType = this;

			CustomerShipmentShipmentStatus.RoleType.ObjectType = CustomerShipmentStatusClass.Instance;;
			CustomerShipmentShipmentStatus.RoleType.AssignedSingularName = "ShipmentStatus";
			CustomerShipmentShipmentStatus.RoleType.AssignedPluralName = "ShipmentStatuses";
			this.Roles.ShipmentStatus = CustomerShipmentShipmentStatus.RoleType;

			var CustomerShipmentPaymentMethod = new RelationType(AppsDomain.Instance, new Guid("897bcb4f-fa89-4d9b-8666-49bb061a69ae"), new Guid("d2945852-755a-45ef-b6dc-914767d3d2e5"), new Guid("a3ab7835-d97e-4221-831d-0ba1ffe3c9d0"));
			CustomerShipmentPaymentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerShipmentPaymentMethod.IsIndexed = true;

			CustomerShipmentPaymentMethod.AssociationType.ObjectType = this;

			CustomerShipmentPaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			CustomerShipmentPaymentMethod.RoleType.AssignedSingularName = "PaymentMethod";
			CustomerShipmentPaymentMethod.RoleType.AssignedPluralName = "PaymentMethods";
			this.Roles.PaymentMethod = CustomerShipmentPaymentMethod.RoleType;

			var CustomerShipmentWithoutCharges = new RelationType(AppsDomain.Instance, new Guid("a754a290-571f-4c25-bd1c-d96a9765eec6"), new Guid("6d117db4-ef4d-483a-a68d-75c69e325bba"), new Guid("66a18574-7b90-4e36-9d5d-a4f31bc6eba1"));
			CustomerShipmentWithoutCharges.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerShipmentWithoutCharges.AssociationType.ObjectType = this;

			CustomerShipmentWithoutCharges.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			CustomerShipmentWithoutCharges.RoleType.AssignedSingularName = "WithoutCharges";
			CustomerShipmentWithoutCharges.RoleType.AssignedPluralName = "WithoutChargess";
			this.Roles.WithoutCharges = CustomerShipmentWithoutCharges.RoleType;

			var CustomerShipmentHeldManually = new RelationType(AppsDomain.Instance, new Guid("b94fa6e5-cfdf-4545-8eb3-43d03aceffc5"), new Guid("2d9a286e-95d5-4adb-ab29-7a9d95f83146"), new Guid("33382f4f-5ebc-4589-b906-a8a2a3be28d2"));
			CustomerShipmentHeldManually.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerShipmentHeldManually.AssociationType.ObjectType = this;

			CustomerShipmentHeldManually.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			CustomerShipmentHeldManually.RoleType.AssignedSingularName = "HeldManually";
			CustomerShipmentHeldManually.RoleType.AssignedPluralName = "HeldsManually";
			this.Roles.HeldManually = CustomerShipmentHeldManually.RoleType;

			var CustomerShipmentShipmentValue = new RelationType(AppsDomain.Instance, new Guid("f0fe5bc1-74d1-4fee-8039-b6952edecc92"), new Guid("c11d0979-373c-4c27-94d2-4d7350afc1c4"), new Guid("2348278f-bf03-4133-b34c-2da5955a0a41"));
			CustomerShipmentShipmentValue.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerShipmentShipmentValue.IsDerived = true;
			CustomerShipmentShipmentValue.AssociationType.ObjectType = this;

			CustomerShipmentShipmentValue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			CustomerShipmentShipmentValue.RoleType.AssignedSingularName = "ShipmentValue";
			CustomerShipmentShipmentValue.RoleType.AssignedPluralName = "ShipmentValues";
			CustomerShipmentShipmentValue.RoleType.Scale = 2;
			CustomerShipmentShipmentValue.RoleType.Precision = 19;
			this.Roles.ShipmentValue = CustomerShipmentShipmentValue.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CustomerShipmentClass.Instance.ConcreteRoles.CurrentShipmentStatus = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentShipmentStatus]; 

			CustomerShipmentClass.Instance.ConcreteRoles.PreviousObjectState = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			CustomerShipmentClass.Instance.ConcreteRoles.ReleasedManually = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReleasedManually]; 

			CustomerShipmentClass.Instance.ConcreteRoles.CurrentObjectState = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			CustomerShipmentClass.Instance.ConcreteRoles.ShipmentStatus = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentStatus]; 

			CustomerShipmentClass.Instance.ConcreteRoles.PaymentMethod = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 

			CustomerShipmentClass.Instance.ConcreteRoles.WithoutCharges = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WithoutCharges]; 

			CustomerShipmentClass.Instance.ConcreteRoles.HeldManually = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HeldManually]; 

			CustomerShipmentClass.Instance.ConcreteRoles.ShipmentValue = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentValue]; 


		}

		internal class RolesType
		{
			internal RoleType CurrentShipmentStatus;
			internal RoleType PreviousObjectState;
			internal RoleType ReleasedManually;
			internal RoleType CurrentObjectState;
			internal RoleType ShipmentStatus;
			internal RoleType PaymentMethod;
			internal RoleType WithoutCharges;
			internal RoleType HeldManually;
			internal RoleType ShipmentValue;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentShipmentStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType ReleasedManually;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ShipmentStatus;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType WithoutCharges;
			internal ConcreteRoleType HeldManually;
			internal ConcreteRoleType ShipmentValue;
			internal ConcreteRoleType ShipmentMethod;
			internal ConcreteRoleType BillToContactMechanism;
			internal ConcreteRoleType ShipmentPackage;
			internal ConcreteRoleType ShipmentNumber;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType BillToParty;
			internal ConcreteRoleType ShipToParty;
			internal ConcreteRoleType ShipmentItem;
			internal ConcreteRoleType BillFromInternalOrganisation;
			internal ConcreteRoleType ReceiverContactMechanism;
			internal ConcreteRoleType ShipToAddress;
			internal ConcreteRoleType EstimatedShipCost;
			internal ConcreteRoleType EstimatedShipDate;
			internal ConcreteRoleType LatestCancelDate;
			internal ConcreteRoleType Carrier;
			internal ConcreteRoleType InquireAboutContactMechanism;
			internal ConcreteRoleType EstimatedReadyDate;
			internal ConcreteRoleType ShipFromAddress;
			internal ConcreteRoleType BillFromContactMechanism;
			internal ConcreteRoleType HandlingInstruction;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType ShipFromParty;
			internal ConcreteRoleType ShipmentRouteSegment;
			internal ConcreteRoleType EstimatedArrivalDate;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class InternalOrganisationRevenueClass : Class
	{
		public static InternalOrganisationRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InternalOrganisationRevenueClass() : base(AppsDomain.Instance, new Guid("930565df-e12c-43c3-9679-a2b42d5a8782"))
        {
			this.SingularName = "InternalOrganisationRevenue";
			this.PluralName = "InternalOrganisationRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7584b26b-c8c6-43fa-86f3-bcbcccdb9788"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("9d1f6b24-9402-4afe-b915-7fb5ae178eb3"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var InternalOrganisationRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("0f1c3ee2-de89-4828-982c-8168c9d8cf7c"), new Guid("ffbaa100-a74b-46c1-bc93-d84f48918d88"), new Guid("2f8002ef-0f3b-46af-a930-cd426a2ee1a8"));
			InternalOrganisationRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationRevenueMonth.AssociationType.ObjectType = this;

			InternalOrganisationRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			InternalOrganisationRevenueMonth.RoleType.AssignedSingularName = "Month";
			InternalOrganisationRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = InternalOrganisationRevenueMonth.RoleType;

			var InternalOrganisationRevenueYear = new RelationType(AppsDomain.Instance, new Guid("284b35b3-583b-4843-8f65-0abafc493eb7"), new Guid("d5e828bc-e39d-44d7-9e82-ab9471fd5d75"), new Guid("d6d12ab5-4272-4095-b9ad-7222ec3071c1"));
			InternalOrganisationRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationRevenueYear.IsIndexed = true;

			InternalOrganisationRevenueYear.AssociationType.ObjectType = this;

			InternalOrganisationRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			InternalOrganisationRevenueYear.RoleType.AssignedSingularName = "Year";
			InternalOrganisationRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = InternalOrganisationRevenueYear.RoleType;

			var InternalOrganisationRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("5a982cc9-01c5-41f1-83ba-97747299205b"), new Guid("c0f705d6-4ad1-4e19-ae3c-3b12b4f2a6ec"), new Guid("7a66c118-e965-430d-abbb-7a9c19a401e1"));
			InternalOrganisationRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationRevenueRevenue.AssociationType.ObjectType = this;

			InternalOrganisationRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InternalOrganisationRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			InternalOrganisationRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			InternalOrganisationRevenueRevenue.RoleType.Scale = 2;
			InternalOrganisationRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = InternalOrganisationRevenueRevenue.RoleType;

			var InternalOrganisationRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("8e250efc-f571-4567-a747-cefe30118ddc"), new Guid("48e4e136-0006-4c83-8616-246fb432346e"), new Guid("7e1086df-5289-48a5-8ee3-d8f14b39d4c7"));
			InternalOrganisationRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationRevenueCurrency.IsIndexed = true;

			InternalOrganisationRevenueCurrency.AssociationType.ObjectType = this;

			InternalOrganisationRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			InternalOrganisationRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			InternalOrganisationRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = InternalOrganisationRevenueCurrency.RoleType;

			var InternalOrganisationRevenuePartyName = new RelationType(AppsDomain.Instance, new Guid("e618c592-229d-4135-b26b-d57a3d1802ac"), new Guid("10f7837f-9025-4284-8821-04fe9291c726"), new Guid("c0de4d35-c58e-4477-866a-d018a7ea7c7c"));
			InternalOrganisationRevenuePartyName.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationRevenuePartyName.AssociationType.ObjectType = this;

			InternalOrganisationRevenuePartyName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationRevenuePartyName.RoleType.AssignedSingularName = "PartyName";
			InternalOrganisationRevenuePartyName.RoleType.AssignedPluralName = "PartyNames";
			InternalOrganisationRevenuePartyName.RoleType.Size = 256;
			this.Roles.PartyName = InternalOrganisationRevenuePartyName.RoleType;

			var InternalOrganisationRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("f1e4b78b-5166-46fc-8a9f-b009da84a3df"), new Guid("6e0495e8-cfac-49cb-89d4-7aae57b01aaa"), new Guid("105af49d-ba84-457a-8a73-d6fcab787d38"));
			InternalOrganisationRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationRevenueInternalOrganisation.IsIndexed = true;

			InternalOrganisationRevenueInternalOrganisation.AssociationType.ObjectType = this;

			InternalOrganisationRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			InternalOrganisationRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			InternalOrganisationRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = InternalOrganisationRevenueInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			InternalOrganisationRevenueClass.Instance.ConcreteRoles.Month = InternalOrganisationRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			InternalOrganisationRevenueClass.Instance.ConcreteRoles.Year = InternalOrganisationRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			InternalOrganisationRevenueClass.Instance.ConcreteRoles.Revenue = InternalOrganisationRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			InternalOrganisationRevenueClass.Instance.ConcreteRoles.Currency = InternalOrganisationRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			InternalOrganisationRevenueClass.Instance.ConcreteRoles.PartyName = InternalOrganisationRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyName]; 

			InternalOrganisationRevenueClass.Instance.ConcreteRoles.InternalOrganisation = InternalOrganisationRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType Month;
			internal RoleType Year;
			internal RoleType Revenue;
			internal RoleType Currency;
			internal RoleType PartyName;
			internal RoleType InternalOrganisation;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Month;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType PartyName;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PackageClass : Class
	{
		public static PackageClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PackageClass() : base(AppsDomain.Instance, new Guid("9371d5fc-748a-4ce4-95eb-6b21aa0ca841"))
        {
			this.SingularName = "Package";
			this.PluralName = "Packages";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("431bf9a6-ba7d-4fff-8f4a-628dbfef42ae"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("50447208-3749-49fd-9c2a-e312118b3183"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PackageName = new RelationType(AppsDomain.Instance, new Guid("88b49c23-0c4c-4a2d-94aa-c6c8a12ac267"), new Guid("d1a984e7-2f57-43a0-8cca-e8682407498b"), new Guid("cffa7e90-1c5b-459c-adbe-8fa008b36151"));
			PackageName.AssignedMultiplicity = Multiplicity.OneToOne;
			PackageName.AssociationType.ObjectType = this;

			PackageName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PackageName.RoleType.AssignedSingularName = "Name";
			PackageName.RoleType.AssignedPluralName = "Name";
			PackageName.RoleType.Size = 256;
			this.Roles.Name = PackageName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PackageClass.Instance.ConcreteRoles.Name = PackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class GeoLocatableInterface: Interface
	{
		public static GeoLocatableInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal GeoLocatableInterface() : base(AppsDomain.Instance, new Guid("93960be2-f676-4e7f-9efb-f99c92303059"))
        {
			this.SingularName = "GeoLocatable";
			this.PluralName = "GeoLocatables";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("9c390a52-f9cc-43e4-aad2-432b7c8756a5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a1898933-cfa2-47cc-96a4-5f57a80272e3"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var GeoLocatableLatitude = new RelationType(AppsDomain.Instance, new Guid("b0aba482-63eb-4482-a232-3863f089f4d9"), new Guid("340069b9-a00b-420d-8f8d-52e627729db3"), new Guid("bab847eb-ff35-49dd-ae44-ccf4e1ee6743"));
			GeoLocatableLatitude.AssignedMultiplicity = Multiplicity.OneToOne;
			GeoLocatableLatitude.IsDerived = true;
			GeoLocatableLatitude.AssociationType.ObjectType = this;

			GeoLocatableLatitude.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			GeoLocatableLatitude.RoleType.AssignedSingularName = "Latitude";
			GeoLocatableLatitude.RoleType.AssignedPluralName = "Latitudes";
			GeoLocatableLatitude.RoleType.Scale = 6;
			GeoLocatableLatitude.RoleType.Precision = 8;
			this.Roles.Latitude = GeoLocatableLatitude.RoleType;

			var GeoLocatableLongitude = new RelationType(AppsDomain.Instance, new Guid("c51b6be6-5678-4664-b2c9-874cc46deb2e"), new Guid("0d7f48c7-84e5-4ea6-8242-22e4cb35e8cd"), new Guid("66d37e99-b7aa-42c7-8b03-0d4bee43a1e7"));
			GeoLocatableLongitude.AssignedMultiplicity = Multiplicity.OneToOne;
			GeoLocatableLongitude.IsDerived = true;
			GeoLocatableLongitude.AssociationType.ObjectType = this;

			GeoLocatableLongitude.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			GeoLocatableLongitude.RoleType.AssignedSingularName = "Longitude";
			GeoLocatableLongitude.RoleType.AssignedPluralName = "Longitudes";
			GeoLocatableLongitude.RoleType.Scale = 6;
			GeoLocatableLongitude.RoleType.Precision = 9;
			this.Roles.Longitude = GeoLocatableLongitude.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BuildingClass.Instance.ConcreteRoles.Latitude = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			RoomClass.Instance.ConcreteRoles.Latitude = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			PlantClass.Instance.ConcreteRoles.Latitude = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			RegionClass.Instance.ConcreteRoles.Latitude = RegionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			SalesTerritoryClass.Instance.ConcreteRoles.Latitude = SalesTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			TerritoryClass.Instance.ConcreteRoles.Latitude = TerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			WarehouseClass.Instance.ConcreteRoles.Latitude = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			FloorClass.Instance.ConcreteRoles.Latitude = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			ServiceTerritoryClass.Instance.ConcreteRoles.Latitude = ServiceTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			PostalCodeClass.Instance.ConcreteRoles.Latitude = PostalCodeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			ProvinceClass.Instance.ConcreteRoles.Latitude = ProvinceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			StateClass.Instance.ConcreteRoles.Latitude = StateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			PostalAddressClass.Instance.ConcreteRoles.Latitude = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			CountyClass.Instance.ConcreteRoles.Latitude = CountyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			OfficeClass.Instance.ConcreteRoles.Latitude = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			CityClass.Instance.ConcreteRoles.Latitude = CityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 
			CountryClass.Instance.ConcreteRoles.Latitude = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Latitude]; 

			BuildingClass.Instance.ConcreteRoles.Longitude = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			RoomClass.Instance.ConcreteRoles.Longitude = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			PlantClass.Instance.ConcreteRoles.Longitude = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			RegionClass.Instance.ConcreteRoles.Longitude = RegionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			SalesTerritoryClass.Instance.ConcreteRoles.Longitude = SalesTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			TerritoryClass.Instance.ConcreteRoles.Longitude = TerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			WarehouseClass.Instance.ConcreteRoles.Longitude = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			FloorClass.Instance.ConcreteRoles.Longitude = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			ServiceTerritoryClass.Instance.ConcreteRoles.Longitude = ServiceTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			PostalCodeClass.Instance.ConcreteRoles.Longitude = PostalCodeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			ProvinceClass.Instance.ConcreteRoles.Longitude = ProvinceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			StateClass.Instance.ConcreteRoles.Longitude = StateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			PostalAddressClass.Instance.ConcreteRoles.Longitude = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			CountyClass.Instance.ConcreteRoles.Longitude = CountyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			OfficeClass.Instance.ConcreteRoles.Longitude = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			CityClass.Instance.ConcreteRoles.Longitude = CityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 
			CountryClass.Instance.ConcreteRoles.Longitude = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Longitude]; 


		}

		internal class RolesType
		{
			internal RoleType Latitude;
			internal RoleType Longitude;

		}
	}public partial class HazardousMaterialsDocumentClass : Class
	{
		public static HazardousMaterialsDocumentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal HazardousMaterialsDocumentClass() : base(AppsDomain.Instance, new Guid("93e3b3df-b227-479a-9b05-ec10190e7d51"))
        {
			this.SingularName = "HazardousMaterialsDocument";
			this.PluralName = "HazardousMaterialsDocuments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("738fa3de-875c-4a91-95de-91fddb177ef9"))
			{
				Subtype = Instance,
				Supertype = DocumentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DocumentLocation;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;

		}
	}public partial class EmailCommunicationClass : Class
	{
		public static EmailCommunicationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EmailCommunicationClass() : base(AppsDomain.Instance, new Guid("9426c214-c85d-491b-a5a6-9f573c3341a0"))
        {
			this.SingularName = "EmailCommunication";
			this.PluralName = "EmailCommunications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c48e5de8-1308-4a63-8292-7d0224a5fbc9"))
			{
				Subtype = Instance,
				Supertype = CommunicationEventInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var EmailCommunicationOriginator = new RelationType(AppsDomain.Instance, new Guid("25b8aa5e-e7c5-4689-b1ed-d9a0ba47b8eb"), new Guid("11649936-a5fa-488e-8d17-e80619c4d634"), new Guid("6219fd3b-4f38-4f8f-8a5a-783f908ef55a"));
			EmailCommunicationOriginator.AssignedMultiplicity = Multiplicity.ManyToOne;
			EmailCommunicationOriginator.IsIndexed = true;

			EmailCommunicationOriginator.AssociationType.ObjectType = this;

			EmailCommunicationOriginator.RoleType.ObjectType = EmailAddressClass.Instance;;
			EmailCommunicationOriginator.RoleType.AssignedSingularName = "Originator";
			EmailCommunicationOriginator.RoleType.AssignedPluralName = "Originators";
			this.Roles.Originator = EmailCommunicationOriginator.RoleType;

			var EmailCommunicationAddressee = new RelationType(AppsDomain.Instance, new Guid("4026fcf7-3fc2-494b-9c4a-3e19eed74134"), new Guid("f2febf7f-7917-4499-8546-cae1e53d6791"), new Guid("50439b5a-2251-469c-8512-f9dc65b0d9f6"));
			EmailCommunicationAddressee.AssignedMultiplicity = Multiplicity.ManyToMany;
			EmailCommunicationAddressee.IsIndexed = true;

			EmailCommunicationAddressee.AssociationType.ObjectType = this;

			EmailCommunicationAddressee.RoleType.ObjectType = EmailAddressClass.Instance;;
			EmailCommunicationAddressee.RoleType.AssignedSingularName = "Addressee";
			EmailCommunicationAddressee.RoleType.AssignedPluralName = "Addressees";
			this.Roles.Addressee = EmailCommunicationAddressee.RoleType;

			var EmailCommunicationCarbonCopy = new RelationType(AppsDomain.Instance, new Guid("4f696f91-e185-4d3d-bf40-40e6c2b02eb4"), new Guid("a19fe8f6-a3b9-4d59-b2e6-cfc19cc01a58"), new Guid("661f4ae9-684b-4b56-9ec6-7bf9fbfea4ab"));
			EmailCommunicationCarbonCopy.AssignedMultiplicity = Multiplicity.ManyToMany;
			EmailCommunicationCarbonCopy.IsIndexed = true;

			EmailCommunicationCarbonCopy.AssociationType.ObjectType = this;

			EmailCommunicationCarbonCopy.RoleType.ObjectType = EmailAddressClass.Instance;;
			EmailCommunicationCarbonCopy.RoleType.AssignedSingularName = "CarbonCopy";
			EmailCommunicationCarbonCopy.RoleType.AssignedPluralName = "CarbonCopies";
			this.Roles.CarbonCopy = EmailCommunicationCarbonCopy.RoleType;

			var EmailCommunicationBlindCopy = new RelationType(AppsDomain.Instance, new Guid("dd7506bb-4daa-4da7-8f20-3f607c944959"), new Guid("42fb79f1-c891-41bf-be4b-a2717bd94e69"), new Guid("6d75e51a-7994-43bb-9e99-cd0a88d9d8f2"));
			EmailCommunicationBlindCopy.AssignedMultiplicity = Multiplicity.ManyToMany;
			EmailCommunicationBlindCopy.IsIndexed = true;

			EmailCommunicationBlindCopy.AssociationType.ObjectType = this;

			EmailCommunicationBlindCopy.RoleType.ObjectType = EmailAddressClass.Instance;;
			EmailCommunicationBlindCopy.RoleType.AssignedSingularName = "BlindCopy";
			EmailCommunicationBlindCopy.RoleType.AssignedPluralName = "BlindCopies";
			this.Roles.BlindCopy = EmailCommunicationBlindCopy.RoleType;

			var EmailCommunicationEmailTemplate = new RelationType(AppsDomain.Instance, new Guid("e12818ad-4ffd-4d91-8142-4ac9bfcbc146"), new Guid("a44a8d84-2510-45fd-add1-646f84be072d"), new Guid("ae354426-6273-4b09-aabf-3f6d25f86e56"));
			EmailCommunicationEmailTemplate.AssignedMultiplicity = Multiplicity.ManyToOne;
			EmailCommunicationEmailTemplate.IsIndexed = true;

			EmailCommunicationEmailTemplate.AssociationType.ObjectType = this;

			EmailCommunicationEmailTemplate.RoleType.ObjectType = EmailTemplateClass.Instance;;
			EmailCommunicationEmailTemplate.RoleType.AssignedSingularName = "EmailTemplate";
			EmailCommunicationEmailTemplate.RoleType.AssignedPluralName = "EmailTemplates";
			this.Roles.EmailTemplate = EmailCommunicationEmailTemplate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EmailCommunicationClass.Instance.ConcreteRoles.Originator = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 

			EmailCommunicationClass.Instance.ConcreteRoles.Addressee = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Addressee]; 

			EmailCommunicationClass.Instance.ConcreteRoles.CarbonCopy = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CarbonCopy]; 

			EmailCommunicationClass.Instance.ConcreteRoles.BlindCopy = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BlindCopy]; 

			EmailCommunicationClass.Instance.ConcreteRoles.EmailTemplate = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EmailTemplate]; 


		}

		internal class RolesType
		{
			internal RoleType Originator;
			internal RoleType Addressee;
			internal RoleType CarbonCopy;
			internal RoleType BlindCopy;
			internal RoleType EmailTemplate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType Addressee;
			internal ConcreteRoleType CarbonCopy;
			internal ConcreteRoleType BlindCopy;
			internal ConcreteRoleType EmailTemplate;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType ToContactMechanism;
			internal ConcreteRoleType CommunicationEventStatus;
			internal ConcreteRoleType InvolvedParty;
			internal ConcreteRoleType InitialScheduledStart;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType EventPurpose;
			internal ConcreteRoleType ScheduledEnd;
			internal ConcreteRoleType ActualEnd;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType InitialScheduledEnd;
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType Subject;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType Case;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType FromContactMechanism;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType CurrentCommunicationEventStatus;
			internal ConcreteRoleType Note;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CreditCardClass : Class
	{
		public static CreditCardClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CreditCardClass() : base(AppsDomain.Instance, new Guid("9492bd39-0f07-4978-a987-0393ca34b504"))
        {
			this.SingularName = "CreditCard";
			this.PluralName = "CreditCards";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("27190086-6e43-4272-89e5-e7cdc1f67032"))
			{
				Subtype = Instance,
				Supertype = FinancialAccountInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("40261335-f728-4c09-996f-c8aa143e4341"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CreditCardNameOnCard = new RelationType(AppsDomain.Instance, new Guid("07d663c5-4716-4e76-a280-ec635216791f"), new Guid("e8db5958-e57e-4860-adc9-831c4e513c41"), new Guid("73942abf-a46a-4be4-868b-7c5d195504aa"));
			CreditCardNameOnCard.AssignedMultiplicity = Multiplicity.OneToOne;
			CreditCardNameOnCard.AssociationType.ObjectType = this;

			CreditCardNameOnCard.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CreditCardNameOnCard.RoleType.AssignedSingularName = "NameOnCard";
			CreditCardNameOnCard.RoleType.AssignedPluralName = "NamesOnCard";
			CreditCardNameOnCard.RoleType.Size = 256;
			this.Roles.NameOnCard = CreditCardNameOnCard.RoleType;

			var CreditCardCreditCardCompany = new RelationType(AppsDomain.Instance, new Guid("0916d4d2-5f82-46da-967e-7b48012e4019"), new Guid("21cc3945-4cc1-43c7-a0a3-0fc9af562c5a"), new Guid("bfba8caa-0f75-4e18-8d97-9427e3b5df97"));
			CreditCardCreditCardCompany.AssignedMultiplicity = Multiplicity.ManyToOne;
			CreditCardCreditCardCompany.IsIndexed = true;

			CreditCardCreditCardCompany.AssociationType.ObjectType = this;

			CreditCardCreditCardCompany.RoleType.ObjectType = CreditCardCompanyClass.Instance;;
			CreditCardCreditCardCompany.RoleType.AssignedSingularName = "CreditCardCompany";
			CreditCardCreditCardCompany.RoleType.AssignedPluralName = "CreditCardCompanies";
			this.Roles.CreditCardCompany = CreditCardCreditCardCompany.RoleType;

			var CreditCardExpirationYear = new RelationType(AppsDomain.Instance, new Guid("4dfa0fda-0001-4635-b8d1-4fd4ce723ed2"), new Guid("d7ac25b9-d7ec-4f88-82c2-680422891bd7"), new Guid("0ad6e1c1-845d-446a-8557-342c95eee357"));
			CreditCardExpirationYear.AssignedMultiplicity = Multiplicity.OneToOne;
			CreditCardExpirationYear.AssociationType.ObjectType = this;

			CreditCardExpirationYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			CreditCardExpirationYear.RoleType.AssignedSingularName = "ExpirationYear";
			CreditCardExpirationYear.RoleType.AssignedPluralName = "ExpirationYears";
			this.Roles.ExpirationYear = CreditCardExpirationYear.RoleType;

			var CreditCardExpirationMonth = new RelationType(AppsDomain.Instance, new Guid("7fa0d04e-b2df-49f8-8aa2-2d546ca843d6"), new Guid("adee3f7d-ded7-469b-9f43-6ed23f3893de"), new Guid("d8e31f7d-a381-438d-9d16-0fff5ab60139"));
			CreditCardExpirationMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			CreditCardExpirationMonth.AssociationType.ObjectType = this;

			CreditCardExpirationMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			CreditCardExpirationMonth.RoleType.AssignedSingularName = "ExpirationMonth";
			CreditCardExpirationMonth.RoleType.AssignedPluralName = "ExpirationMonths";
			this.Roles.ExpirationMonth = CreditCardExpirationMonth.RoleType;

			var CreditCardCardNumber = new RelationType(AppsDomain.Instance, new Guid("b5484c11-52d4-45f7-b25a-bf4c05e2c9a0"), new Guid("15df289b-6c03-4fc4-8d8b-31edc394de8d"), new Guid("683f29d5-cc38-4165-8fd9-f97483130bac"));
			CreditCardCardNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			CreditCardCardNumber.AssociationType.ObjectType = this;

			CreditCardCardNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CreditCardCardNumber.RoleType.AssignedSingularName = "CardNumber";
			CreditCardCardNumber.RoleType.AssignedPluralName = "CardNumbers";
			CreditCardCardNumber.RoleType.Size = 256;
			this.Roles.CardNumber = CreditCardCardNumber.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CreditCardClass.Instance.ConcreteRoles.NameOnCard = CreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NameOnCard]; 

			CreditCardClass.Instance.ConcreteRoles.CreditCardCompany = CreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreditCardCompany]; 

			CreditCardClass.Instance.ConcreteRoles.ExpirationYear = CreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpirationYear]; 

			CreditCardClass.Instance.ConcreteRoles.ExpirationMonth = CreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpirationMonth]; 

			CreditCardClass.Instance.ConcreteRoles.CardNumber = CreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CardNumber]; 


		}

		internal class RolesType
		{
			internal RoleType NameOnCard;
			internal RoleType CreditCardCompany;
			internal RoleType ExpirationYear;
			internal RoleType ExpirationMonth;
			internal RoleType CardNumber;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType NameOnCard;
			internal ConcreteRoleType CreditCardCompany;
			internal ConcreteRoleType ExpirationYear;
			internal ConcreteRoleType ExpirationMonth;
			internal ConcreteRoleType CardNumber;
			internal ConcreteRoleType FinancialAccountTransaction;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OrganisationContactRelationshipClass : Class
	{
		public static OrganisationContactRelationshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrganisationContactRelationshipClass() : base(AppsDomain.Instance, new Guid("956ecb86-097d-43d4-83b5-a7f45ea75448"))
        {
			this.SingularName = "OrganisationContactRelationship";
			this.PluralName = "OrganisationContactRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a449750e-c67c-41dd-a672-45acde375fa0"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrganisationContactRelationshipContact = new RelationType(AppsDomain.Instance, new Guid("0ca367d2-0ce2-440d-a4e7-cbf089c1efed"), new Guid("738d9d62-4823-4045-9e2f-082b91127f3f"), new Guid("fa8ca2da-c75f-4ba9-9c22-6953008c3ba2"));
			OrganisationContactRelationshipContact.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationContactRelationshipContact.IsIndexed = true;

			OrganisationContactRelationshipContact.AssociationType.ObjectType = this;

			OrganisationContactRelationshipContact.RoleType.ObjectType = PersonClass.Instance;;
			OrganisationContactRelationshipContact.RoleType.AssignedSingularName = "Contact";
			OrganisationContactRelationshipContact.RoleType.AssignedPluralName = "Contacts";
			this.Roles.Contact = OrganisationContactRelationshipContact.RoleType;

			var OrganisationContactRelationshipOrganisation = new RelationType(AppsDomain.Instance, new Guid("96f4c9af-eeff-477f-8a93-1168cc383b4c"), new Guid("a34e218b-26c0-4c88-a202-0353e693833a"), new Guid("3af5a227-4470-4a4e-a66c-245ac0d12be5"));
			OrganisationContactRelationshipOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrganisationContactRelationshipOrganisation.IsIndexed = true;

			OrganisationContactRelationshipOrganisation.AssociationType.ObjectType = this;

			OrganisationContactRelationshipOrganisation.RoleType.ObjectType = OrganisationClass.Instance;;
			OrganisationContactRelationshipOrganisation.RoleType.AssignedSingularName = "Organisation";
			OrganisationContactRelationshipOrganisation.RoleType.AssignedPluralName = "Organisations";
			this.Roles.Organisation = OrganisationContactRelationshipOrganisation.RoleType;

			var OrganisationContactRelationshipContactKind = new RelationType(AppsDomain.Instance, new Guid("af7e007e-c325-453a-923e-55299eda2a8c"), new Guid("337e305a-da68-42da-b508-d9f010138a09"), new Guid("2399e636-f267-4299-b2c7-747497487d63"));
			OrganisationContactRelationshipContactKind.AssignedMultiplicity = Multiplicity.ManyToMany;
			OrganisationContactRelationshipContactKind.IsIndexed = true;

			OrganisationContactRelationshipContactKind.AssociationType.ObjectType = this;

			OrganisationContactRelationshipContactKind.RoleType.ObjectType = OrganisationContactKindClass.Instance;;
			OrganisationContactRelationshipContactKind.RoleType.AssignedSingularName = "ContactKind";
			OrganisationContactRelationshipContactKind.RoleType.AssignedPluralName = "ContactKinds";
			this.Roles.ContactKind = OrganisationContactRelationshipContactKind.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.Contact = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Contact]; 

			OrganisationContactRelationshipClass.Instance.ConcreteRoles.Organisation = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Organisation]; 

			OrganisationContactRelationshipClass.Instance.ConcreteRoles.ContactKind = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContactKind]; 


		}

		internal class RolesType
		{
			internal RoleType Contact;
			internal RoleType Organisation;
			internal RoleType ContactKind;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Contact;
			internal ConcreteRoleType Organisation;
			internal ConcreteRoleType ContactKind;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OrganisationContactKindClass : Class
	{
		public static OrganisationContactKindClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrganisationContactKindClass() : base(AppsDomain.Instance, new Guid("9570d60a-8baa-439c-99f4-472d10952165"))
        {
			this.SingularName = "OrganisationContactKind";
			this.PluralName = "OrganisationContactKinds";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("28c69e71-eb7a-4881-8ccd-e2577e0bb4b5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a1e88d35-3197-4405-a511-4750d86e005e"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrganisationContactKindDescription = new RelationType(AppsDomain.Instance, new Guid("5d3446a3-ab54-4c49-89bb-928b082bb4b7"), new Guid("a1b7eec7-d13f-47da-b028-4db580da07a4"), new Guid("291d3e15-301a-4865-9097-5407dadd65ff"));
			OrganisationContactKindDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			OrganisationContactKindDescription.AssociationType.ObjectType = this;

			OrganisationContactKindDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrganisationContactKindDescription.RoleType.AssignedSingularName = "Description";
			OrganisationContactKindDescription.RoleType.AssignedPluralName = "Descriptions";
			OrganisationContactKindDescription.RoleType.Size = 256;
			this.Roles.Description = OrganisationContactKindDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrganisationContactKindClass.Instance.ConcreteRoles.Description = OrganisationContactKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CustomerReturnStatusClass : Class
	{
		public static CustomerReturnStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CustomerReturnStatusClass() : base(AppsDomain.Instance, new Guid("959dd6ba-dfd5-4c7f-84f0-819fbef5c76a"))
        {
			this.SingularName = "CustomerReturnStatus";
			this.PluralName = "CustomerReturnStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4ff79ad9-63e4-4b01-89b7-509c5e719ed2"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CustomerReturnStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("7f02b626-26e6-43c7-af6f-44db32a9748a"), new Guid("88941e26-55e1-400a-925c-8b40977e8141"), new Guid("6a362a6a-930f-4202-b9a7-07f6062c9dde"));
			CustomerReturnStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerReturnStatusStartDateTime.AssociationType.ObjectType = this;

			CustomerReturnStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CustomerReturnStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			CustomerReturnStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = CustomerReturnStatusStartDateTime.RoleType;

			var CustomerReturnStatusShipmentReceipt = new RelationType(AppsDomain.Instance, new Guid("871dc477-7231-4180-b479-e66c0d2dbe58"), new Guid("b65cdd1a-423c-41b7-8978-a7cc4420166d"), new Guid("3153feb0-9213-496e-b1ac-2ed5d6b431a8"));
			CustomerReturnStatusShipmentReceipt.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerReturnStatusShipmentReceipt.IsIndexed = true;

			CustomerReturnStatusShipmentReceipt.AssociationType.ObjectType = this;

			CustomerReturnStatusShipmentReceipt.RoleType.ObjectType = ShipmentReceiptClass.Instance;;
			CustomerReturnStatusShipmentReceipt.RoleType.AssignedSingularName = "ShipmentReceipt";
			CustomerReturnStatusShipmentReceipt.RoleType.AssignedPluralName = "ShipmentReceipts";
			this.Roles.ShipmentReceipt = CustomerReturnStatusShipmentReceipt.RoleType;

			var CustomerReturnStatusCustomerReturnObjectState = new RelationType(AppsDomain.Instance, new Guid("eb96d9f9-cbbb-4c2e-84b6-6e4b17cc162f"), new Guid("2cf7c3d8-3915-4c41-b619-b317d3de7842"), new Guid("f995313e-0317-4587-9f6e-456be2134f44"));
			CustomerReturnStatusCustomerReturnObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerReturnStatusCustomerReturnObjectState.IsIndexed = true;

			CustomerReturnStatusCustomerReturnObjectState.AssociationType.ObjectType = this;

			CustomerReturnStatusCustomerReturnObjectState.RoleType.ObjectType = CustomerReturnObjectStateClass.Instance;;
			CustomerReturnStatusCustomerReturnObjectState.RoleType.AssignedSingularName = "CustomerReturnObjectState";
			CustomerReturnStatusCustomerReturnObjectState.RoleType.AssignedPluralName = "CustomerReturnObjectStates";
			this.Roles.CustomerReturnObjectState = CustomerReturnStatusCustomerReturnObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CustomerReturnStatusClass.Instance.ConcreteRoles.StartDateTime = CustomerReturnStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			CustomerReturnStatusClass.Instance.ConcreteRoles.ShipmentReceipt = CustomerReturnStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentReceipt]; 

			CustomerReturnStatusClass.Instance.ConcreteRoles.CustomerReturnObjectState = CustomerReturnStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerReturnObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType ShipmentReceipt;
			internal RoleType CustomerReturnObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType ShipmentReceipt;
			internal ConcreteRoleType CustomerReturnObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PerformanceReviewItemClass : Class
	{
		public static PerformanceReviewItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PerformanceReviewItemClass() : base(AppsDomain.Instance, new Guid("962e5149-546b-4b18-ab09-e4de59b709ff"))
        {
			this.SingularName = "PerformanceReviewItem";
			this.PluralName = "PerformanceReviewItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("649fd932-74c0-4d8a-b7c9-bd1db1f4208a"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("65353de8-59e6-4dd7-a31f-a71092a7863b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PerformanceReviewItemRatingType = new RelationType(AppsDomain.Instance, new Guid("6d7bb4b2-885d-4f7b-9d31-d517c3d03ac2"), new Guid("4c8cd6fe-acea-43ae-90e9-41ae1b84f269"), new Guid("1a5977eb-1914-4b02-a0d3-feaad843465d"));
			PerformanceReviewItemRatingType.AssignedMultiplicity = Multiplicity.ManyToOne;
			PerformanceReviewItemRatingType.IsIndexed = true;

			PerformanceReviewItemRatingType.AssociationType.ObjectType = this;

			PerformanceReviewItemRatingType.RoleType.ObjectType = RatingTypeClass.Instance;;
			PerformanceReviewItemRatingType.RoleType.AssignedSingularName = "RatingType";
			PerformanceReviewItemRatingType.RoleType.AssignedPluralName = "RatingTypes";
			this.Roles.RatingType = PerformanceReviewItemRatingType.RoleType;

			var PerformanceReviewItemPerformanceReviewItemType = new RelationType(AppsDomain.Instance, new Guid("d62d7236-458f-4e30-8df4-27eb877d0931"), new Guid("7056f19c-c67e-4b54-a08c-c49155326a5e"), new Guid("cac7ce59-1969-43b8-99a9-a90af638558d"));
			PerformanceReviewItemPerformanceReviewItemType.AssignedMultiplicity = Multiplicity.ManyToOne;
			PerformanceReviewItemPerformanceReviewItemType.IsIndexed = true;

			PerformanceReviewItemPerformanceReviewItemType.AssociationType.ObjectType = this;

			PerformanceReviewItemPerformanceReviewItemType.RoleType.ObjectType = PerformanceReviewItemTypeClass.Instance;;
			PerformanceReviewItemPerformanceReviewItemType.RoleType.AssignedSingularName = "PerformanceReviewItemType";
			PerformanceReviewItemPerformanceReviewItemType.RoleType.AssignedPluralName = "PerformanceReviewItemTypes";
			this.Roles.PerformanceReviewItemType = PerformanceReviewItemPerformanceReviewItemType.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PerformanceReviewItemClass.Instance.ConcreteRoles.RatingType = PerformanceReviewItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RatingType]; 

			PerformanceReviewItemClass.Instance.ConcreteRoles.PerformanceReviewItemType = PerformanceReviewItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PerformanceReviewItemType]; 


		}

		internal class RolesType
		{
			internal RoleType RatingType;
			internal RoleType PerformanceReviewItemType;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType RatingType;
			internal ConcreteRoleType PerformanceReviewItemType;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class UtilizationChargeClass : Class
	{
		public static UtilizationChargeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal UtilizationChargeClass() : base(AppsDomain.Instance, new Guid("96a64894-e444-4df4-9289-1b121842ac73"))
        {
			this.SingularName = "UtilizationCharge";
			this.PluralName = "UtilizationCharges";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5cbdfe72-5c53-4679-b807-e0a8cce71de9"))
			{
				Subtype = Instance,
				Supertype = PriceComponentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var UtilizationChargeQuantity = new RelationType(AppsDomain.Instance, new Guid("3a371680-fc37-44dc-b3be-cdd76b6dd1e4"), new Guid("15d9f938-5a5c-472c-92a6-6769a37f652c"), new Guid("a1e57ec7-561d-4c8e-8652-aea06598fb1b"));
			UtilizationChargeQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			UtilizationChargeQuantity.AssociationType.ObjectType = this;

			UtilizationChargeQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			UtilizationChargeQuantity.RoleType.AssignedSingularName = "Quantity";
			UtilizationChargeQuantity.RoleType.AssignedPluralName = "Quantities";
			UtilizationChargeQuantity.RoleType.Scale = 2;
			UtilizationChargeQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = UtilizationChargeQuantity.RoleType;

			var UtilizationChargeUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("4f933f12-1337-453c-9cfd-6babaf9189d5"), new Guid("b49286b4-db2a-4025-8fb2-9390514b69dc"), new Guid("037bba17-d291-40ea-920b-f09995ef04fb"));
			UtilizationChargeUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			UtilizationChargeUnitOfMeasure.IsIndexed = true;

			UtilizationChargeUnitOfMeasure.AssociationType.ObjectType = this;

			UtilizationChargeUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			UtilizationChargeUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			UtilizationChargeUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = UtilizationChargeUnitOfMeasure.RoleType;


		}

		internal override void SetRelationTypes()
		{
			UtilizationChargeClass.Instance.ConcreteRoles.Quantity = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			UtilizationChargeClass.Instance.ConcreteRoles.UnitOfMeasure = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 


		}

		internal class RolesType
		{
			internal RoleType Quantity;
			internal RoleType UnitOfMeasure;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType Rate;
			internal ConcreteRoleType RevenueValueBreak;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType OrderQuantityBreak;
			internal ConcreteRoleType PackageQuantityBreak;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType RevenueQuantityBreak;
			internal ConcreteRoleType SpecifiedFor;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType AgreementPricingProgram;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType OrderKind;
			internal ConcreteRoleType OrderValue;
			internal ConcreteRoleType Price;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class PartyPackageRevenueClass : Class
	{
		public static PartyPackageRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyPackageRevenueClass() : base(AppsDomain.Instance, new Guid("96fe3000-606e-4f88-ba04-87544ef176ca"))
        {
			this.SingularName = "PartyPackageRevenue";
			this.PluralName = "PartyPackageRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("13c3a074-8ba2-4e6e-bde9-250cccf078dd"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ffbb7705-74f3-4456-8e82-2d4e0b3a6d40"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyPackageRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("3fc82b94-ce74-42d7-91d8-e97a79117f4f"), new Guid("917ecd65-8097-4e6b-93ce-662b18ccf424"), new Guid("33bf1c47-0d26-43e4-841d-bb5d85da1bdf"));
			PartyPackageRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyPackageRevenueMonth.AssociationType.ObjectType = this;

			PartyPackageRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartyPackageRevenueMonth.RoleType.AssignedSingularName = "Month";
			PartyPackageRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = PartyPackageRevenueMonth.RoleType;

			var PartyPackageRevenuePackage = new RelationType(AppsDomain.Instance, new Guid("646382fa-3794-46be-81a0-28a1609e65b0"), new Guid("0bb2b710-90c3-42c9-8eb4-5bffb06cb705"), new Guid("0ec8beac-06c9-4f7f-a39b-fb9d7bfcae0f"));
			PartyPackageRevenuePackage.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyPackageRevenuePackage.IsIndexed = true;

			PartyPackageRevenuePackage.AssociationType.ObjectType = this;

			PartyPackageRevenuePackage.RoleType.ObjectType = PackageClass.Instance;;
			PartyPackageRevenuePackage.RoleType.AssignedSingularName = "Package";
			PartyPackageRevenuePackage.RoleType.AssignedPluralName = "Packages";
			this.Roles.Package = PartyPackageRevenuePackage.RoleType;

			var PartyPackageRevenueParty = new RelationType(AppsDomain.Instance, new Guid("8896e95d-80e3-42dc-8ba7-ad3fdef665f9"), new Guid("5d061264-d9c8-471c-b5be-3251502e24e1"), new Guid("d1757181-9a09-4075-99ac-5c2a13ad85d3"));
			PartyPackageRevenueParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyPackageRevenueParty.IsIndexed = true;

			PartyPackageRevenueParty.AssociationType.ObjectType = this;

			PartyPackageRevenueParty.RoleType.ObjectType = PartyInterface.Instance;;
			PartyPackageRevenueParty.RoleType.AssignedSingularName = "Party";
			PartyPackageRevenueParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = PartyPackageRevenueParty.RoleType;

			var PartyPackageRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("af3eeba0-867c-4484-b593-1815b38c8bf4"), new Guid("450fc3e5-f6ca-4f96-ab52-afb71421b6b5"), new Guid("80615a8d-b2ff-4671-b9bb-0667413cd74c"));
			PartyPackageRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyPackageRevenueRevenue.AssociationType.ObjectType = this;

			PartyPackageRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyPackageRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			PartyPackageRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			PartyPackageRevenueRevenue.RoleType.Scale = 2;
			PartyPackageRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = PartyPackageRevenueRevenue.RoleType;

			var PartyPackageRevenueYear = new RelationType(AppsDomain.Instance, new Guid("b9648327-4521-4daf-b68f-52cd78095998"), new Guid("e65e0fb0-26a8-4640-ae6a-c8402889dc8e"), new Guid("b3788737-41da-4480-8223-bc398e021561"));
			PartyPackageRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyPackageRevenueYear.AssociationType.ObjectType = this;

			PartyPackageRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartyPackageRevenueYear.RoleType.AssignedSingularName = "Year";
			PartyPackageRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = PartyPackageRevenueYear.RoleType;

			var PartyPackageRevenuePartyPackageName = new RelationType(AppsDomain.Instance, new Guid("e8384ea1-cb9d-43a0-8409-68dc86ca8def"), new Guid("f50f2ba1-9d0b-4eee-87d2-626fd89422c7"), new Guid("bf38c186-30a1-40e5-90eb-a326865a2d19"));
			PartyPackageRevenuePartyPackageName.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyPackageRevenuePartyPackageName.AssociationType.ObjectType = this;

			PartyPackageRevenuePartyPackageName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartyPackageRevenuePartyPackageName.RoleType.AssignedSingularName = "PartyPackageName";
			PartyPackageRevenuePartyPackageName.RoleType.AssignedPluralName = "PartyPackageNames";
			PartyPackageRevenuePartyPackageName.RoleType.Size = 256;
			this.Roles.PartyPackageName = PartyPackageRevenuePartyPackageName.RoleType;

			var PartyPackageRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("e93042c4-1e6c-47c5-9004-f6ddcbfdbb33"), new Guid("39c71cdb-847a-474f-92b4-827e2eb95c22"), new Guid("d498a399-c183-433c-8260-396c4e2b997d"));
			PartyPackageRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyPackageRevenueCurrency.IsIndexed = true;

			PartyPackageRevenueCurrency.AssociationType.ObjectType = this;

			PartyPackageRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PartyPackageRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			PartyPackageRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PartyPackageRevenueCurrency.RoleType;

			var PartyPackageRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("ed2b5e8c-2c74-4ae2-b467-d41baf9f41db"), new Guid("1b51addf-6a5d-4611-b23c-1a16fa413259"), new Guid("2734ebff-1038-4945-98c5-d1da0a11265b"));
			PartyPackageRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyPackageRevenueInternalOrganisation.IsIndexed = true;

			PartyPackageRevenueInternalOrganisation.AssociationType.ObjectType = this;

			PartyPackageRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PartyPackageRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PartyPackageRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PartyPackageRevenueInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyPackageRevenueClass.Instance.ConcreteRoles.Month = PartyPackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			PartyPackageRevenueClass.Instance.ConcreteRoles.Package = PartyPackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Package]; 

			PartyPackageRevenueClass.Instance.ConcreteRoles.Party = PartyPackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			PartyPackageRevenueClass.Instance.ConcreteRoles.Revenue = PartyPackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			PartyPackageRevenueClass.Instance.ConcreteRoles.Year = PartyPackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			PartyPackageRevenueClass.Instance.ConcreteRoles.PartyPackageName = PartyPackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartyPackageName]; 

			PartyPackageRevenueClass.Instance.ConcreteRoles.Currency = PartyPackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			PartyPackageRevenueClass.Instance.ConcreteRoles.InternalOrganisation = PartyPackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType Month;
			internal RoleType Package;
			internal RoleType Party;
			internal RoleType Revenue;
			internal RoleType Year;
			internal RoleType PartyPackageName;
			internal RoleType Currency;
			internal RoleType InternalOrganisation;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Month;
			internal ConcreteRoleType Package;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType PartyPackageName;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartyRelationshipStatusClass : Class
	{
		public static PartyRelationshipStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyRelationshipStatusClass() : base(AppsDomain.Instance, new Guid("97e31ffb-b478-4599-a145-54880d4ffbe1"))
        {
			this.SingularName = "PartyRelationshipStatus";
			this.PluralName = "PartyRelationshipStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b31dc56f-9e56-49d1-8f55-e1d4e1f4cdc6"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ServiceTerritoryClass : Class
	{
		public static ServiceTerritoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ServiceTerritoryClass() : base(AppsDomain.Instance, new Guid("987f8328-2bfa-47cd-9521-8b7bda78f90a"))
        {
			this.SingularName = "ServiceTerritory";
			this.PluralName = "ServiceTerritories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("bf1c440a-3a04-46d4-80d1-cc8d2fcf2392"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ed6edfeb-881c-478d-8f03-242ea78d1213"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryCompositeInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ServiceTerritoryName = new RelationType(AppsDomain.Instance, new Guid("a268313d-db1e-44e1-9fb1-7135d1157083"), new Guid("348c497e-7907-4409-b7b1-d77ebfd46258"), new Guid("a23c1a3d-2a76-46b3-a26c-d5c5a66ebe0a"));
			ServiceTerritoryName.AssignedMultiplicity = Multiplicity.OneToOne;
			ServiceTerritoryName.AssociationType.ObjectType = this;

			ServiceTerritoryName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ServiceTerritoryName.RoleType.AssignedSingularName = "Name";
			ServiceTerritoryName.RoleType.AssignedPluralName = "Names";
			ServiceTerritoryName.RoleType.Size = 256;
			this.Roles.Name = ServiceTerritoryName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ServiceTerritoryClass.Instance.ConcreteRoles.Name = ServiceTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Association;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class DeliverableBasedServiceClass : Class
	{
		public static DeliverableBasedServiceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DeliverableBasedServiceClass() : base(AppsDomain.Instance, new Guid("98fc5441-2037-4134-b143-a9797af9d7f1"))
        {
			this.SingularName = "DeliverableBasedService";
			this.PluralName = "DeliverableBasedServices";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("bb7a49f0-5781-4f8d-a94c-06a6e641f46a"))
			{
				Subtype = Instance,
				Supertype = ServiceInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PrimaryProductCategory;
			internal ConcreteRoleType SupportDiscontinuationDate;
			internal ConcreteRoleType SalesDiscontinuationDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType VirtualProductPriceComponent;
			internal ConcreteRoleType IntrastatCode;
			internal ConcreteRoleType ProductCategoryExpanded;
			internal ConcreteRoleType ProductComplement;
			internal ConcreteRoleType OptionalFeature;
			internal ConcreteRoleType ManufacturedBy;
			internal ConcreteRoleType Variant;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IntroductionDate;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType StandardFeature;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType EstimatedProductCost;
			internal ConcreteRoleType ProductObsolescence;
			internal ConcreteRoleType SelectableFeature;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType BasePrice;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType SoldBy;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProductModelClass : Class
	{
		public static ProductModelClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductModelClass() : base(AppsDomain.Instance, new Guid("99ea8125-7d86-4cb6-b453-27752c434fc7"))
        {
			this.SingularName = "ProductModel";
			this.PluralName = "ProductModels";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f9a69648-a45d-446b-8af0-df8ad0caf8f2"))
			{
				Subtype = Instance,
				Supertype = DocumentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DocumentLocation;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;

		}
	}public partial class ShelfClass : Class
	{
		public static ShelfClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ShelfClass() : base(AppsDomain.Instance, new Guid("9a1d67c5-159c-41e0-9b5c-5ffdfe257b8d"))
        {
			this.SingularName = "Shelf";
			this.PluralName = "Shelfs";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("088872d7-e230-4372-ac3e-c5ebbd99af70"))
			{
				Subtype = Instance,
				Supertype = ContainerInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ContainerDescription;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RawMaterialClass : Class
	{
		public static RawMaterialClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RawMaterialClass() : base(AppsDomain.Instance, new Guid("9a484067-2003-42f1-b4c4-877e519bb8be"))
        {
			this.SingularName = "RawMaterial";
			this.PluralName = "RawMaterials";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5ea66f88-bd74-4e76-a6f7-52e26d3f5060"))
			{
				Subtype = Instance,
				Supertype = PartInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType OwnedByParty;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType PartSpecification;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType ManufacturerId;
			internal ConcreteRoleType ReorderLevel;
			internal ConcreteRoleType ReorderQuantity;
			internal ConcreteRoleType PriceComponent;
			internal ConcreteRoleType InventoryItemKind;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class EstimatedOtherCostClass : Class
	{
		public static EstimatedOtherCostClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EstimatedOtherCostClass() : base(AppsDomain.Instance, new Guid("9b637b39-f61a-4985-bb1b-876ed769f448"))
        {
			this.SingularName = "EstimatedOtherCost";
			this.PluralName = "EstimatedOtherCosts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("11d3c48a-9a4a-4057-b0cc-a3846c40028c"))
			{
				Subtype = Instance,
				Supertype = EstimatedProductCostInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Cost;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Organisation;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class BudgetRevisionClass : Class
	{
		public static BudgetRevisionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BudgetRevisionClass() : base(AppsDomain.Instance, new Guid("9b6bf786-1c6c-4c4e-b940-7314d9c4ba71"))
        {
			this.SingularName = "BudgetRevision";
			this.PluralName = "BudgetRevisions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("841d7ec2-3e82-4537-9e0f-d59883b5dffc"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var BudgetRevisionRevisionDate = new RelationType(AppsDomain.Instance, new Guid("5124634a-dc8b-477a-8ae2-d4ad577a13bb"), new Guid("fa00944b-f6a3-4c61-9739-6a8a109d32d5"), new Guid("a1230395-837b-4021-8075-642fdf1d7d2c"));
			BudgetRevisionRevisionDate.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetRevisionRevisionDate.AssociationType.ObjectType = this;

			BudgetRevisionRevisionDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			BudgetRevisionRevisionDate.RoleType.AssignedSingularName = "RevisionDate";
			BudgetRevisionRevisionDate.RoleType.AssignedPluralName = "RevisionDates";
			this.Roles.RevisionDate = BudgetRevisionRevisionDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BudgetRevisionClass.Instance.ConcreteRoles.RevisionDate = BudgetRevisionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevisionDate]; 


		}

		internal class RolesType
		{
			internal RoleType RevisionDate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType RevisionDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class WorkEffortFixedAssetStandardClass : Class
	{
		public static WorkEffortFixedAssetStandardClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortFixedAssetStandardClass() : base(AppsDomain.Instance, new Guid("9b9f2a59-ae10-49df-b0b5-98b48ec99157"))
        {
			this.SingularName = "WorkEffortFixedAssetStandard";
			this.PluralName = "WorkEffortFixedAssetStandards";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("aa9eaf74-292a-4749-9dae-d0b10b1c6970"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortFixedAssetStandardEstimatedCost = new RelationType(AppsDomain.Instance, new Guid("5aca8d2b-0073-4890-b02a-f4c9a5fc8a2b"), new Guid("b20e8fbd-4493-4a13-ade6-a42ecc8e6793"), new Guid("1ef2d6ea-7662-4a8b-83e3-712f8b7bda9a"));
			WorkEffortFixedAssetStandardEstimatedCost.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortFixedAssetStandardEstimatedCost.AssociationType.ObjectType = this;

			WorkEffortFixedAssetStandardEstimatedCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortFixedAssetStandardEstimatedCost.RoleType.AssignedSingularName = "EstimatedCost";
			WorkEffortFixedAssetStandardEstimatedCost.RoleType.AssignedPluralName = "EstimatedCosts";
			WorkEffortFixedAssetStandardEstimatedCost.RoleType.Scale = 2;
			WorkEffortFixedAssetStandardEstimatedCost.RoleType.Precision = 19;
			this.Roles.EstimatedCost = WorkEffortFixedAssetStandardEstimatedCost.RoleType;

			var WorkEffortFixedAssetStandardEstimatedDuration = new RelationType(AppsDomain.Instance, new Guid("73900f38-242a-4aac-ba8e-d8ffa57a125f"), new Guid("87bc4caf-7953-4805-816a-e6e6af4cfc19"), new Guid("10eed02a-ae4b-483e-b912-170ec39bb92b"));
			WorkEffortFixedAssetStandardEstimatedDuration.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortFixedAssetStandardEstimatedDuration.AssociationType.ObjectType = this;

			WorkEffortFixedAssetStandardEstimatedDuration.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortFixedAssetStandardEstimatedDuration.RoleType.AssignedSingularName = "EstimatedDuration";
			WorkEffortFixedAssetStandardEstimatedDuration.RoleType.AssignedPluralName = "EstimatedDurations";
			WorkEffortFixedAssetStandardEstimatedDuration.RoleType.Scale = 2;
			WorkEffortFixedAssetStandardEstimatedDuration.RoleType.Precision = 19;
			this.Roles.EstimatedDuration = WorkEffortFixedAssetStandardEstimatedDuration.RoleType;

			var WorkEffortFixedAssetStandardFixedAsset = new RelationType(AppsDomain.Instance, new Guid("98ca7e1a-8f15-4533-9de7-819b6c868788"), new Guid("da3497fc-7c30-4760-bfec-2bbc8d5ebf5b"), new Guid("792772c6-0c04-417c-a22a-479f4c5cf35f"));
			WorkEffortFixedAssetStandardFixedAsset.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortFixedAssetStandardFixedAsset.IsIndexed = true;

			WorkEffortFixedAssetStandardFixedAsset.AssociationType.ObjectType = this;

			WorkEffortFixedAssetStandardFixedAsset.RoleType.ObjectType = FixedAssetInterface.Instance;;
			WorkEffortFixedAssetStandardFixedAsset.RoleType.AssignedSingularName = "FixedAsset";
			WorkEffortFixedAssetStandardFixedAsset.RoleType.AssignedPluralName = "FixedAssets";
			this.Roles.FixedAsset = WorkEffortFixedAssetStandardFixedAsset.RoleType;

			var WorkEffortFixedAssetStandardEstimatedQuantity = new RelationType(AppsDomain.Instance, new Guid("b9d782af-1f4c-4639-bd11-fda3651982df"), new Guid("c17dbf4f-504f-4b9e-ba5c-25545e1386d0"), new Guid("7a4ecdb9-2b88-4f41-9fe4-fe1016b12ad8"));
			WorkEffortFixedAssetStandardEstimatedQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortFixedAssetStandardEstimatedQuantity.AssociationType.ObjectType = this;

			WorkEffortFixedAssetStandardEstimatedQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			WorkEffortFixedAssetStandardEstimatedQuantity.RoleType.AssignedSingularName = "EstimatedQuantity";
			WorkEffortFixedAssetStandardEstimatedQuantity.RoleType.AssignedPluralName = "EstimatedQuantities";
			this.Roles.EstimatedQuantity = WorkEffortFixedAssetStandardEstimatedQuantity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortFixedAssetStandardClass.Instance.ConcreteRoles.EstimatedCost = WorkEffortFixedAssetStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedCost]; 

			WorkEffortFixedAssetStandardClass.Instance.ConcreteRoles.EstimatedDuration = WorkEffortFixedAssetStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedDuration]; 

			WorkEffortFixedAssetStandardClass.Instance.ConcreteRoles.FixedAsset = WorkEffortFixedAssetStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FixedAsset]; 

			WorkEffortFixedAssetStandardClass.Instance.ConcreteRoles.EstimatedQuantity = WorkEffortFixedAssetStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedQuantity]; 


		}

		internal class RolesType
		{
			internal RoleType EstimatedCost;
			internal RoleType EstimatedDuration;
			internal RoleType FixedAsset;
			internal RoleType EstimatedQuantity;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType EstimatedCost;
			internal ConcreteRoleType EstimatedDuration;
			internal ConcreteRoleType FixedAsset;
			internal ConcreteRoleType EstimatedQuantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ShipmentInterface: Interface
	{
		public static ShipmentInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ShipmentInterface() : base(AppsDomain.Instance, new Guid("9c6f4ad8-5a4e-4b6e-96b7-876f7aabcffb"))
        {
			this.SingularName = "Shipment";
			this.PluralName = "Shipments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0accd0a0-e992-4d27-8062-69ab1b86c0e4"))
			{
				Subtype = Instance,
				Supertype = PrintableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("16fe212f-3a42-4652-a030-8eeefd865fea"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("39fd146b-fc2b-4b8c-b10c-ecefa0734f1b"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("57ce90bb-b166-4c44-8efe-9d2e8df2151c"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var ShipmentShipmentMethod = new RelationType(AppsDomain.Instance, new Guid("05221b28-9c80-4d3b-933f-12a8a17bc261"), new Guid("c59ef057-da9a-433f-90d3-5ff657aa1e48"), new Guid("6fe551cd-0808-466b-9ec9-833098ebad79"));
			ShipmentShipmentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentShipmentMethod.IsIndexed = true;

			ShipmentShipmentMethod.AssociationType.ObjectType = this;

			ShipmentShipmentMethod.RoleType.ObjectType = ShipmentMethodClass.Instance;;
			ShipmentShipmentMethod.RoleType.AssignedSingularName = "ShipmentMethod";
			ShipmentShipmentMethod.RoleType.AssignedPluralName = "ShipmentMethods";
			this.Roles.ShipmentMethod = ShipmentShipmentMethod.RoleType;

			var ShipmentBillToContactMechanism = new RelationType(AppsDomain.Instance, new Guid("05b0841b-d546-4fd6-9305-492b0ce20f8a"), new Guid("26be1e2b-ee3c-4c37-9ccc-07a916e6af29"), new Guid("313a2875-bafc-430a-b7c4-1aa45e825233"));
			ShipmentBillToContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentBillToContactMechanism.IsIndexed = true;

			ShipmentBillToContactMechanism.AssociationType.ObjectType = this;

			ShipmentBillToContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			ShipmentBillToContactMechanism.RoleType.AssignedSingularName = "BillToContactMechanism";
			ShipmentBillToContactMechanism.RoleType.AssignedPluralName = "BillToContactMechanisms";
			this.Roles.BillToContactMechanism = ShipmentBillToContactMechanism.RoleType;

			var ShipmentShipmentPackage = new RelationType(AppsDomain.Instance, new Guid("165b529f-df1c-45b6-bbed-d19ffcb375f2"), new Guid("c71e40be-1f55-483d-9bfa-0d2dfb26c7d9"), new Guid("18a5331e-120e-45e6-8ef4-35a1f48237e0"));
			ShipmentShipmentPackage.AssignedMultiplicity = Multiplicity.OneToMany;
			ShipmentShipmentPackage.IsIndexed = true;

			ShipmentShipmentPackage.AssociationType.ObjectType = this;

			ShipmentShipmentPackage.RoleType.ObjectType = ShipmentPackageClass.Instance;;
			ShipmentShipmentPackage.RoleType.AssignedSingularName = "ShipmentPackage";
			ShipmentShipmentPackage.RoleType.AssignedPluralName = "ShipmentPackages";
			this.Roles.ShipmentPackage = ShipmentShipmentPackage.RoleType;

			var ShipmentShipmentNumber = new RelationType(AppsDomain.Instance, new Guid("17234c66-6b61-4ac9-a23b-4388e19f4888"), new Guid("bc2164ec-5d7e-4dff-8db6-4d1eeab970e6"), new Guid("f939af72-bcb4-44bc-b47d-758c27304a7d"));
			ShipmentShipmentNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentShipmentNumber.AssociationType.ObjectType = this;

			ShipmentShipmentNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ShipmentShipmentNumber.RoleType.AssignedSingularName = "ShipmentNumber";
			ShipmentShipmentNumber.RoleType.AssignedPluralName = "ShipmentNumbers";
			ShipmentShipmentNumber.RoleType.Size = 256;
			this.Roles.ShipmentNumber = ShipmentShipmentNumber.RoleType;

			var ShipmentDocument = new RelationType(AppsDomain.Instance, new Guid("18808545-f941-4c5a-8809-0f1fb0cca2d8"), new Guid("44940303-b210-42bd-8791-906004294261"), new Guid("a65dbc06-f659-4e34-bf2d-af4b4717972e"));
			ShipmentDocument.AssignedMultiplicity = Multiplicity.OneToMany;
			ShipmentDocument.IsIndexed = true;

			ShipmentDocument.AssociationType.ObjectType = this;

			ShipmentDocument.RoleType.ObjectType = DocumentInterface.Instance;;
			ShipmentDocument.RoleType.AssignedSingularName = "Document";
			ShipmentDocument.RoleType.AssignedPluralName = "Documents";
			this.Roles.Document = ShipmentDocument.RoleType;

			var ShipmentBillToParty = new RelationType(AppsDomain.Instance, new Guid("50f36218-ae61-4d67-af4d-d05cc8b2266d"), new Guid("a8ff4824-3ccd-49a8-82e6-e7723ccb8348"), new Guid("b7ead377-a5d4-4eab-98d9-e9527177090a"));
			ShipmentBillToParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentBillToParty.IsIndexed = true;

			ShipmentBillToParty.AssociationType.ObjectType = this;

			ShipmentBillToParty.RoleType.ObjectType = PartyInterface.Instance;;
			ShipmentBillToParty.RoleType.AssignedSingularName = "BillToParty";
			ShipmentBillToParty.RoleType.AssignedPluralName = "BillToParties";
			this.Roles.BillToParty = ShipmentBillToParty.RoleType;

			var ShipmentShipToParty = new RelationType(AppsDomain.Instance, new Guid("5891b368-89cd-4a0e-aaef-439f442909c8"), new Guid("5fef9e9f-bd3d-454a-8aa1-10b262a34a4b"), new Guid("dd5e8d80-0395-413d-addb-ca66f36c50e8"));
			ShipmentShipToParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentShipToParty.IsIndexed = true;

			ShipmentShipToParty.AssociationType.ObjectType = this;

			ShipmentShipToParty.RoleType.ObjectType = PartyInterface.Instance;;
			ShipmentShipToParty.RoleType.AssignedSingularName = "ShipToParty";
			ShipmentShipToParty.RoleType.AssignedPluralName = "ShipToParties";
			this.Roles.ShipToParty = ShipmentShipToParty.RoleType;

			var ShipmentShipmentItem = new RelationType(AppsDomain.Instance, new Guid("6a568bea-6718-414a-b822-d8304502be7b"), new Guid("499bb422-b2f0-48cf-bf09-0544e768b5de"), new Guid("b8724e90-9888-4f81-b70d-1eceb93af3d3"));
			ShipmentShipmentItem.AssignedMultiplicity = Multiplicity.OneToMany;
			ShipmentShipmentItem.IsIndexed = true;

			ShipmentShipmentItem.AssociationType.ObjectType = this;

			ShipmentShipmentItem.RoleType.ObjectType = ShipmentItemClass.Instance;;
			ShipmentShipmentItem.RoleType.AssignedSingularName = "ShipmentItem";
			ShipmentShipmentItem.RoleType.AssignedPluralName = "ShipmentItems";
			this.Roles.ShipmentItem = ShipmentShipmentItem.RoleType;

			var ShipmentBillFromInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("6b90885f-9421-442a-b517-b85c6fe3c60d"), new Guid("b4df53d0-3970-45bf-bcfb-251dc18ebb46"), new Guid("215a7b54-93d9-455c-9979-759b116677cd"));
			ShipmentBillFromInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentBillFromInternalOrganisation.IsIndexed = true;

			ShipmentBillFromInternalOrganisation.AssociationType.ObjectType = this;

			ShipmentBillFromInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			ShipmentBillFromInternalOrganisation.RoleType.AssignedSingularName = "BillFromInternalOrganisation";
			ShipmentBillFromInternalOrganisation.RoleType.AssignedPluralName = "BillFromInternalOrganisations";
			this.Roles.BillFromInternalOrganisation = ShipmentBillFromInternalOrganisation.RoleType;

			var ShipmentReceiverContactMechanism = new RelationType(AppsDomain.Instance, new Guid("78e7e7a5-2d8c-4184-b917-10095dc033b1"), new Guid("f924c450-6c83-4853-9449-b34efb52cc78"), new Guid("b9c80d27-7278-4883-b1f3-d01712463109"));
			ShipmentReceiverContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentReceiverContactMechanism.IsIndexed = true;

			ShipmentReceiverContactMechanism.AssociationType.ObjectType = this;

			ShipmentReceiverContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			ShipmentReceiverContactMechanism.RoleType.AssignedSingularName = "ReceiverContactMechanism";
			ShipmentReceiverContactMechanism.RoleType.AssignedPluralName = "ReceiverContactMechanisms";
			this.Roles.ReceiverContactMechanism = ShipmentReceiverContactMechanism.RoleType;

			var ShipmentShipToAddress = new RelationType(AppsDomain.Instance, new Guid("7e1325e0-a072-46da-adb5-b997dde9980a"), new Guid("f73c3f6d-cc9c-4bda-a4c6-ef4f406a491d"), new Guid("14f6385d-4e20-4ffe-89e7-f7a261eda78e"));
			ShipmentShipToAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentShipToAddress.IsIndexed = true;

			ShipmentShipToAddress.AssociationType.ObjectType = this;

			ShipmentShipToAddress.RoleType.ObjectType = PostalAddressClass.Instance;;
			ShipmentShipToAddress.RoleType.AssignedSingularName = "ShipToAddress";
			ShipmentShipToAddress.RoleType.AssignedPluralName = "ShipToAddresses";
			this.Roles.ShipToAddress = ShipmentShipToAddress.RoleType;

			var ShipmentEstimatedShipCost = new RelationType(AppsDomain.Instance, new Guid("894ecdf3-1322-4513-bf94-63882c5c29bf"), new Guid("da1adb58-e2be-4018-97b0-fb2ef107a661"), new Guid("7e28940e-6039-4698-b1f5-b31769aa7bbb"));
			ShipmentEstimatedShipCost.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentEstimatedShipCost.AssociationType.ObjectType = this;

			ShipmentEstimatedShipCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ShipmentEstimatedShipCost.RoleType.AssignedSingularName = "EstimatedShipCost";
			ShipmentEstimatedShipCost.RoleType.AssignedPluralName = "EstimatedShipCosts";
			ShipmentEstimatedShipCost.RoleType.Scale = 2;
			ShipmentEstimatedShipCost.RoleType.Precision = 19;
			this.Roles.EstimatedShipCost = ShipmentEstimatedShipCost.RoleType;

			var ShipmentEstimatedShipDate = new RelationType(AppsDomain.Instance, new Guid("97788e21-ec31-4fb2-9ef7-0b7b5a7367a1"), new Guid("227f8e47-58af-44be-bcaf-0da60e2c13d4"), new Guid("338e2be0-6eb5-42ad-b51c-83dd9b7f0194"));
			ShipmentEstimatedShipDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentEstimatedShipDate.AssociationType.ObjectType = this;

			ShipmentEstimatedShipDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ShipmentEstimatedShipDate.RoleType.AssignedSingularName = "EstimatedShipDate";
			ShipmentEstimatedShipDate.RoleType.AssignedPluralName = "EstimatedShipDates";
			this.Roles.EstimatedShipDate = ShipmentEstimatedShipDate.RoleType;

			var ShipmentLatestCancelDate = new RelationType(AppsDomain.Instance, new Guid("a74391e5-bd03-4247-93b8-e7081d939823"), new Guid("41060c75-fb34-4391-96f3-d0d267344ba3"), new Guid("eb3f084c-9d59-4fff-9fc3-186d7b9a19b3"));
			ShipmentLatestCancelDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentLatestCancelDate.AssociationType.ObjectType = this;

			ShipmentLatestCancelDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ShipmentLatestCancelDate.RoleType.AssignedSingularName = "LatestCancelDate";
			ShipmentLatestCancelDate.RoleType.AssignedPluralName = "LatestCancelDates";
			this.Roles.LatestCancelDate = ShipmentLatestCancelDate.RoleType;

			var ShipmentCarrier = new RelationType(AppsDomain.Instance, new Guid("b37c7c90-0287-4f12-b000-025e2505499c"), new Guid("13e8d5af-43ff-431b-85d8-5e7706dc2f75"), new Guid("81367cbd-4713-46bd-8f4d-0df30c3daf96"));
			ShipmentCarrier.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentCarrier.IsIndexed = true;

			ShipmentCarrier.AssociationType.ObjectType = this;

			ShipmentCarrier.RoleType.ObjectType = CarrierClass.Instance;;
			ShipmentCarrier.RoleType.AssignedSingularName = "Carrier";
			ShipmentCarrier.RoleType.AssignedPluralName = "Carriers";
			this.Roles.Carrier = ShipmentCarrier.RoleType;

			var ShipmentInquireAboutContactMechanism = new RelationType(AppsDomain.Instance, new Guid("b5dabbcc-508a-4998-a21a-6b86d7193688"), new Guid("43d9bbc8-319c-4971-a651-11f246fafa97"), new Guid("ebf2b41f-a922-4689-83d4-51569a3d85d3"));
			ShipmentInquireAboutContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentInquireAboutContactMechanism.IsIndexed = true;

			ShipmentInquireAboutContactMechanism.AssociationType.ObjectType = this;

			ShipmentInquireAboutContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			ShipmentInquireAboutContactMechanism.RoleType.AssignedSingularName = "InquireAboutContactMechanism";
			ShipmentInquireAboutContactMechanism.RoleType.AssignedPluralName = "InquireAboutContactMechanisms";
			this.Roles.InquireAboutContactMechanism = ShipmentInquireAboutContactMechanism.RoleType;

			var ShipmentEstimatedReadyDate = new RelationType(AppsDomain.Instance, new Guid("b69c6812-bdc4-4a06-a782-fa8ff4a71aca"), new Guid("988cafce-2323-4c0d-b1cd-026045764ba4"), new Guid("cd02effa-d176-4f6e-8407-ec12d23b9f2a"));
			ShipmentEstimatedReadyDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentEstimatedReadyDate.AssociationType.ObjectType = this;

			ShipmentEstimatedReadyDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ShipmentEstimatedReadyDate.RoleType.AssignedSingularName = "EstimatedReadyDate";
			ShipmentEstimatedReadyDate.RoleType.AssignedPluralName = "EstimatedReadyDates";
			this.Roles.EstimatedReadyDate = ShipmentEstimatedReadyDate.RoleType;

			var ShipmentShipFromAddress = new RelationType(AppsDomain.Instance, new Guid("c8b0eff8-4dff-449c-9d44-a7235cd24928"), new Guid("556c0ae6-045e-4f35-8f63-ffb41f57dc44"), new Guid("5c34f5ee-5f25-42dd-97a8-7aa3aeb9973e"));
			ShipmentShipFromAddress.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentShipFromAddress.IsIndexed = true;

			ShipmentShipFromAddress.AssociationType.ObjectType = this;

			ShipmentShipFromAddress.RoleType.ObjectType = PostalAddressClass.Instance;;
			ShipmentShipFromAddress.RoleType.AssignedSingularName = "ShipFromAddress";
			ShipmentShipFromAddress.RoleType.AssignedPluralName = "ShipFromAddresses";
			this.Roles.ShipFromAddress = ShipmentShipFromAddress.RoleType;

			var ShipmentBillFromContactMechanism = new RelationType(AppsDomain.Instance, new Guid("ea57219b-217e-444d-9741-c1c4e7aee9f7"), new Guid("2d0935d0-cdb5-4c3e-9726-e27ea731c43b"), new Guid("d7184821-3b9c-4800-874f-32d7cd9b72e3"));
			ShipmentBillFromContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentBillFromContactMechanism.IsDerived = true;
			ShipmentBillFromContactMechanism.IsIndexed = true;

			ShipmentBillFromContactMechanism.AssociationType.ObjectType = this;

			ShipmentBillFromContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			ShipmentBillFromContactMechanism.RoleType.AssignedSingularName = "BillFromContactMechanism";
			ShipmentBillFromContactMechanism.RoleType.AssignedPluralName = "BillFromContactMechanisms";
			this.Roles.BillFromContactMechanism = ShipmentBillFromContactMechanism.RoleType;

			var ShipmentHandlingInstruction = new RelationType(AppsDomain.Instance, new Guid("ee49c6ca-bb03-40d3-97f1-004cc5a31132"), new Guid("167b541c-d2dd-4d9b-9fe1-6cd8d1a5f727"), new Guid("39a0ed41-436e-44bd-afc7-5d848397433b"));
			ShipmentHandlingInstruction.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentHandlingInstruction.AssociationType.ObjectType = this;

			ShipmentHandlingInstruction.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ShipmentHandlingInstruction.RoleType.AssignedSingularName = "HandlingInstruction";
			ShipmentHandlingInstruction.RoleType.AssignedPluralName = "HandlingInstructions";
			ShipmentHandlingInstruction.RoleType.Size = -1;
			this.Roles.HandlingInstruction = ShipmentHandlingInstruction.RoleType;

			var ShipmentStore = new RelationType(AppsDomain.Instance, new Guid("f1059139-6664-43d5-801f-79a4cc4288a6"), new Guid("92807e93-ed03-4dbc-9296-c508c879705b"), new Guid("3f2699b9-9652-4af4-98d7-2ff803677692"));
			ShipmentStore.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentStore.IsIndexed = true;

			ShipmentStore.AssociationType.ObjectType = this;

			ShipmentStore.RoleType.ObjectType = StoreClass.Instance;;
			ShipmentStore.RoleType.AssignedSingularName = "Store";
			ShipmentStore.RoleType.AssignedPluralName = "Stores";
			this.Roles.Store = ShipmentStore.RoleType;

			var ShipmentShipFromParty = new RelationType(AppsDomain.Instance, new Guid("f1e92d31-db63-419c-8ed7-49f5db66c63d"), new Guid("fffbc8b5-a541-402d-8df6-3134cc52b306"), new Guid("566b9c3a-3fec-455f-a40d-b23338d3508c"));
			ShipmentShipFromParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentShipFromParty.IsIndexed = true;

			ShipmentShipFromParty.AssociationType.ObjectType = this;

			ShipmentShipFromParty.RoleType.ObjectType = PartyInterface.Instance;;
			ShipmentShipFromParty.RoleType.AssignedSingularName = "ShipFromParty";
			ShipmentShipFromParty.RoleType.AssignedPluralName = "ShipFromParties";
			this.Roles.ShipFromParty = ShipmentShipFromParty.RoleType;

			var ShipmentShipmentRouteSegment = new RelationType(AppsDomain.Instance, new Guid("f403ab39-cc81-4e09-8794-a45db9ef178f"), new Guid("78c8d202-0277-4c3a-9e24-74041cc56872"), new Guid("8086c3d5-1577-4c32-bf73-abe72aac725c"));
			ShipmentShipmentRouteSegment.AssignedMultiplicity = Multiplicity.OneToMany;
			ShipmentShipmentRouteSegment.IsIndexed = true;

			ShipmentShipmentRouteSegment.AssociationType.ObjectType = this;

			ShipmentShipmentRouteSegment.RoleType.ObjectType = ShipmentRouteSegmentClass.Instance;;
			ShipmentShipmentRouteSegment.RoleType.AssignedSingularName = "ShipmentRouteSegment";
			ShipmentShipmentRouteSegment.RoleType.AssignedPluralName = "ShipmentRouteSegments";
			this.Roles.ShipmentRouteSegment = ShipmentShipmentRouteSegment.RoleType;

			var ShipmentEstimatedArrivalDate = new RelationType(AppsDomain.Instance, new Guid("fdac3beb-edf8-4d1b-80d4-21b643ef43ce"), new Guid("63d8adfc-6afb-499f-bd27-2f1d3f78bee6"), new Guid("8f56ce24-500e-4db9-abce-c7a301c38fe6"));
			ShipmentEstimatedArrivalDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentEstimatedArrivalDate.AssociationType.ObjectType = this;

			ShipmentEstimatedArrivalDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ShipmentEstimatedArrivalDate.RoleType.AssignedSingularName = "EstimatedArrivalDate";
			ShipmentEstimatedArrivalDate.RoleType.AssignedPluralName = "EstimatedArrivalDates";
			this.Roles.EstimatedArrivalDate = ShipmentEstimatedArrivalDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseShipmentClass.Instance.ConcreteRoles.ShipmentMethod = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentMethod]; 
			CustomerReturnClass.Instance.ConcreteRoles.ShipmentMethod = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentMethod]; 
			CustomerShipmentClass.Instance.ConcreteRoles.ShipmentMethod = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentMethod]; 
			PurchaseReturnClass.Instance.ConcreteRoles.ShipmentMethod = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentMethod]; 
			DropShipmentClass.Instance.ConcreteRoles.ShipmentMethod = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentMethod]; 
			TransferClass.Instance.ConcreteRoles.ShipmentMethod = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentMethod]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.BillToContactMechanism = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToContactMechanism]; 
			CustomerReturnClass.Instance.ConcreteRoles.BillToContactMechanism = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToContactMechanism]; 
			CustomerShipmentClass.Instance.ConcreteRoles.BillToContactMechanism = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToContactMechanism]; 
			PurchaseReturnClass.Instance.ConcreteRoles.BillToContactMechanism = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToContactMechanism]; 
			DropShipmentClass.Instance.ConcreteRoles.BillToContactMechanism = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToContactMechanism]; 
			TransferClass.Instance.ConcreteRoles.BillToContactMechanism = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToContactMechanism]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.ShipmentPackage = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentPackage]; 
			CustomerReturnClass.Instance.ConcreteRoles.ShipmentPackage = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentPackage]; 
			CustomerShipmentClass.Instance.ConcreteRoles.ShipmentPackage = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentPackage]; 
			PurchaseReturnClass.Instance.ConcreteRoles.ShipmentPackage = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentPackage]; 
			DropShipmentClass.Instance.ConcreteRoles.ShipmentPackage = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentPackage]; 
			TransferClass.Instance.ConcreteRoles.ShipmentPackage = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentPackage]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.ShipmentNumber = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentNumber]; 
			CustomerReturnClass.Instance.ConcreteRoles.ShipmentNumber = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentNumber]; 
			CustomerShipmentClass.Instance.ConcreteRoles.ShipmentNumber = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentNumber]; 
			PurchaseReturnClass.Instance.ConcreteRoles.ShipmentNumber = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentNumber]; 
			DropShipmentClass.Instance.ConcreteRoles.ShipmentNumber = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentNumber]; 
			TransferClass.Instance.ConcreteRoles.ShipmentNumber = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentNumber]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.Document = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			CustomerReturnClass.Instance.ConcreteRoles.Document = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			CustomerShipmentClass.Instance.ConcreteRoles.Document = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			PurchaseReturnClass.Instance.ConcreteRoles.Document = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			DropShipmentClass.Instance.ConcreteRoles.Document = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			TransferClass.Instance.ConcreteRoles.Document = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.BillToParty = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToParty]; 
			CustomerReturnClass.Instance.ConcreteRoles.BillToParty = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToParty]; 
			CustomerShipmentClass.Instance.ConcreteRoles.BillToParty = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToParty]; 
			PurchaseReturnClass.Instance.ConcreteRoles.BillToParty = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToParty]; 
			DropShipmentClass.Instance.ConcreteRoles.BillToParty = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToParty]; 
			TransferClass.Instance.ConcreteRoles.BillToParty = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillToParty]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.ShipToParty = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToParty]; 
			CustomerReturnClass.Instance.ConcreteRoles.ShipToParty = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToParty]; 
			CustomerShipmentClass.Instance.ConcreteRoles.ShipToParty = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToParty]; 
			PurchaseReturnClass.Instance.ConcreteRoles.ShipToParty = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToParty]; 
			DropShipmentClass.Instance.ConcreteRoles.ShipToParty = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToParty]; 
			TransferClass.Instance.ConcreteRoles.ShipToParty = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToParty]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.ShipmentItem = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentItem]; 
			CustomerReturnClass.Instance.ConcreteRoles.ShipmentItem = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentItem]; 
			CustomerShipmentClass.Instance.ConcreteRoles.ShipmentItem = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentItem]; 
			PurchaseReturnClass.Instance.ConcreteRoles.ShipmentItem = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentItem]; 
			DropShipmentClass.Instance.ConcreteRoles.ShipmentItem = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentItem]; 
			TransferClass.Instance.ConcreteRoles.ShipmentItem = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentItem]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.BillFromInternalOrganisation = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromInternalOrganisation]; 
			CustomerReturnClass.Instance.ConcreteRoles.BillFromInternalOrganisation = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromInternalOrganisation]; 
			CustomerShipmentClass.Instance.ConcreteRoles.BillFromInternalOrganisation = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromInternalOrganisation]; 
			PurchaseReturnClass.Instance.ConcreteRoles.BillFromInternalOrganisation = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromInternalOrganisation]; 
			DropShipmentClass.Instance.ConcreteRoles.BillFromInternalOrganisation = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromInternalOrganisation]; 
			TransferClass.Instance.ConcreteRoles.BillFromInternalOrganisation = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromInternalOrganisation]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.ReceiverContactMechanism = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReceiverContactMechanism]; 
			CustomerReturnClass.Instance.ConcreteRoles.ReceiverContactMechanism = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReceiverContactMechanism]; 
			CustomerShipmentClass.Instance.ConcreteRoles.ReceiverContactMechanism = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReceiverContactMechanism]; 
			PurchaseReturnClass.Instance.ConcreteRoles.ReceiverContactMechanism = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReceiverContactMechanism]; 
			DropShipmentClass.Instance.ConcreteRoles.ReceiverContactMechanism = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReceiverContactMechanism]; 
			TransferClass.Instance.ConcreteRoles.ReceiverContactMechanism = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReceiverContactMechanism]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.ShipToAddress = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToAddress]; 
			CustomerReturnClass.Instance.ConcreteRoles.ShipToAddress = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToAddress]; 
			CustomerShipmentClass.Instance.ConcreteRoles.ShipToAddress = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToAddress]; 
			PurchaseReturnClass.Instance.ConcreteRoles.ShipToAddress = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToAddress]; 
			DropShipmentClass.Instance.ConcreteRoles.ShipToAddress = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToAddress]; 
			TransferClass.Instance.ConcreteRoles.ShipToAddress = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipToAddress]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.EstimatedShipCost = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipCost]; 
			CustomerReturnClass.Instance.ConcreteRoles.EstimatedShipCost = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipCost]; 
			CustomerShipmentClass.Instance.ConcreteRoles.EstimatedShipCost = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipCost]; 
			PurchaseReturnClass.Instance.ConcreteRoles.EstimatedShipCost = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipCost]; 
			DropShipmentClass.Instance.ConcreteRoles.EstimatedShipCost = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipCost]; 
			TransferClass.Instance.ConcreteRoles.EstimatedShipCost = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipCost]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.EstimatedShipDate = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipDate]; 
			CustomerReturnClass.Instance.ConcreteRoles.EstimatedShipDate = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipDate]; 
			CustomerShipmentClass.Instance.ConcreteRoles.EstimatedShipDate = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipDate]; 
			PurchaseReturnClass.Instance.ConcreteRoles.EstimatedShipDate = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipDate]; 
			DropShipmentClass.Instance.ConcreteRoles.EstimatedShipDate = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipDate]; 
			TransferClass.Instance.ConcreteRoles.EstimatedShipDate = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedShipDate]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.LatestCancelDate = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LatestCancelDate]; 
			CustomerReturnClass.Instance.ConcreteRoles.LatestCancelDate = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LatestCancelDate]; 
			CustomerShipmentClass.Instance.ConcreteRoles.LatestCancelDate = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LatestCancelDate]; 
			PurchaseReturnClass.Instance.ConcreteRoles.LatestCancelDate = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LatestCancelDate]; 
			DropShipmentClass.Instance.ConcreteRoles.LatestCancelDate = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LatestCancelDate]; 
			TransferClass.Instance.ConcreteRoles.LatestCancelDate = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LatestCancelDate]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.Carrier = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Carrier]; 
			CustomerReturnClass.Instance.ConcreteRoles.Carrier = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Carrier]; 
			CustomerShipmentClass.Instance.ConcreteRoles.Carrier = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Carrier]; 
			PurchaseReturnClass.Instance.ConcreteRoles.Carrier = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Carrier]; 
			DropShipmentClass.Instance.ConcreteRoles.Carrier = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Carrier]; 
			TransferClass.Instance.ConcreteRoles.Carrier = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Carrier]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.InquireAboutContactMechanism = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InquireAboutContactMechanism]; 
			CustomerReturnClass.Instance.ConcreteRoles.InquireAboutContactMechanism = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InquireAboutContactMechanism]; 
			CustomerShipmentClass.Instance.ConcreteRoles.InquireAboutContactMechanism = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InquireAboutContactMechanism]; 
			PurchaseReturnClass.Instance.ConcreteRoles.InquireAboutContactMechanism = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InquireAboutContactMechanism]; 
			DropShipmentClass.Instance.ConcreteRoles.InquireAboutContactMechanism = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InquireAboutContactMechanism]; 
			TransferClass.Instance.ConcreteRoles.InquireAboutContactMechanism = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InquireAboutContactMechanism]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.EstimatedReadyDate = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedReadyDate]; 
			CustomerReturnClass.Instance.ConcreteRoles.EstimatedReadyDate = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedReadyDate]; 
			CustomerShipmentClass.Instance.ConcreteRoles.EstimatedReadyDate = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedReadyDate]; 
			PurchaseReturnClass.Instance.ConcreteRoles.EstimatedReadyDate = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedReadyDate]; 
			DropShipmentClass.Instance.ConcreteRoles.EstimatedReadyDate = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedReadyDate]; 
			TransferClass.Instance.ConcreteRoles.EstimatedReadyDate = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedReadyDate]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.ShipFromAddress = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromAddress]; 
			CustomerReturnClass.Instance.ConcreteRoles.ShipFromAddress = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromAddress]; 
			CustomerShipmentClass.Instance.ConcreteRoles.ShipFromAddress = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromAddress]; 
			PurchaseReturnClass.Instance.ConcreteRoles.ShipFromAddress = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromAddress]; 
			DropShipmentClass.Instance.ConcreteRoles.ShipFromAddress = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromAddress]; 
			TransferClass.Instance.ConcreteRoles.ShipFromAddress = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromAddress]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.BillFromContactMechanism = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromContactMechanism]; 
			CustomerReturnClass.Instance.ConcreteRoles.BillFromContactMechanism = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromContactMechanism]; 
			CustomerShipmentClass.Instance.ConcreteRoles.BillFromContactMechanism = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromContactMechanism]; 
			PurchaseReturnClass.Instance.ConcreteRoles.BillFromContactMechanism = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromContactMechanism]; 
			DropShipmentClass.Instance.ConcreteRoles.BillFromContactMechanism = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromContactMechanism]; 
			TransferClass.Instance.ConcreteRoles.BillFromContactMechanism = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillFromContactMechanism]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.HandlingInstruction = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HandlingInstruction]; 
			CustomerReturnClass.Instance.ConcreteRoles.HandlingInstruction = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HandlingInstruction]; 
			CustomerShipmentClass.Instance.ConcreteRoles.HandlingInstruction = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HandlingInstruction]; 
			PurchaseReturnClass.Instance.ConcreteRoles.HandlingInstruction = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HandlingInstruction]; 
			DropShipmentClass.Instance.ConcreteRoles.HandlingInstruction = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HandlingInstruction]; 
			TransferClass.Instance.ConcreteRoles.HandlingInstruction = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.HandlingInstruction]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.Store = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 
			CustomerReturnClass.Instance.ConcreteRoles.Store = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 
			CustomerShipmentClass.Instance.ConcreteRoles.Store = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 
			PurchaseReturnClass.Instance.ConcreteRoles.Store = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 
			DropShipmentClass.Instance.ConcreteRoles.Store = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 
			TransferClass.Instance.ConcreteRoles.Store = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Store]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.ShipFromParty = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromParty]; 
			CustomerReturnClass.Instance.ConcreteRoles.ShipFromParty = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromParty]; 
			CustomerShipmentClass.Instance.ConcreteRoles.ShipFromParty = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromParty]; 
			PurchaseReturnClass.Instance.ConcreteRoles.ShipFromParty = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromParty]; 
			DropShipmentClass.Instance.ConcreteRoles.ShipFromParty = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromParty]; 
			TransferClass.Instance.ConcreteRoles.ShipFromParty = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipFromParty]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.ShipmentRouteSegment = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentRouteSegment]; 
			CustomerReturnClass.Instance.ConcreteRoles.ShipmentRouteSegment = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentRouteSegment]; 
			CustomerShipmentClass.Instance.ConcreteRoles.ShipmentRouteSegment = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentRouteSegment]; 
			PurchaseReturnClass.Instance.ConcreteRoles.ShipmentRouteSegment = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentRouteSegment]; 
			DropShipmentClass.Instance.ConcreteRoles.ShipmentRouteSegment = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentRouteSegment]; 
			TransferClass.Instance.ConcreteRoles.ShipmentRouteSegment = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentRouteSegment]; 

			PurchaseShipmentClass.Instance.ConcreteRoles.EstimatedArrivalDate = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedArrivalDate]; 
			CustomerReturnClass.Instance.ConcreteRoles.EstimatedArrivalDate = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedArrivalDate]; 
			CustomerShipmentClass.Instance.ConcreteRoles.EstimatedArrivalDate = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedArrivalDate]; 
			PurchaseReturnClass.Instance.ConcreteRoles.EstimatedArrivalDate = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedArrivalDate]; 
			DropShipmentClass.Instance.ConcreteRoles.EstimatedArrivalDate = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedArrivalDate]; 
			TransferClass.Instance.ConcreteRoles.EstimatedArrivalDate = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedArrivalDate]; 


		}

		internal class RolesType
		{
			internal RoleType ShipmentMethod;
			internal RoleType BillToContactMechanism;
			internal RoleType ShipmentPackage;
			internal RoleType ShipmentNumber;
			internal RoleType Document;
			internal RoleType BillToParty;
			internal RoleType ShipToParty;
			internal RoleType ShipmentItem;
			internal RoleType BillFromInternalOrganisation;
			internal RoleType ReceiverContactMechanism;
			internal RoleType ShipToAddress;
			internal RoleType EstimatedShipCost;
			internal RoleType EstimatedShipDate;
			internal RoleType LatestCancelDate;
			internal RoleType Carrier;
			internal RoleType InquireAboutContactMechanism;
			internal RoleType EstimatedReadyDate;
			internal RoleType ShipFromAddress;
			internal RoleType BillFromContactMechanism;
			internal RoleType HandlingInstruction;
			internal RoleType Store;
			internal RoleType ShipFromParty;
			internal RoleType ShipmentRouteSegment;
			internal RoleType EstimatedArrivalDate;

		}
	}public partial class PostalCodeClass : Class
	{
		public static PostalCodeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PostalCodeClass() : base(AppsDomain.Instance, new Guid("9d0065b8-2760-4ec5-928a-9ebd128bbfdd"))
        {
			this.SingularName = "PostalCode";
			this.PluralName = "PostalCodes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8b0bf632-7c0f-46e6-a7f4-581e713f6a22"))
			{
				Subtype = Instance,
				Supertype = CountryBoundInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a2554a5d-d5a9-44ed-bcfc-11cd3988a562"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("d40416e6-70a4-480c-96f3-9d7aa4f03d0e"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PostalCodeCode = new RelationType(AppsDomain.Instance, new Guid("20267bfe-b651-4ed7-bd22-f4300022e39c"), new Guid("48a9b292-452c-48be-9cb3-2b20f23a510e"), new Guid("12e48856-88e9-4e97-aa32-fd532d2f050d"));
			PostalCodeCode.AssignedMultiplicity = Multiplicity.OneToOne;
			PostalCodeCode.AssociationType.ObjectType = this;

			PostalCodeCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PostalCodeCode.RoleType.AssignedSingularName = "Code";
			PostalCodeCode.RoleType.AssignedPluralName = "Codes";
			PostalCodeCode.RoleType.Size = 256;
			this.Roles.Code = PostalCodeCode.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PostalCodeClass.Instance.ConcreteRoles.Code = PostalCodeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Code]; 


		}

		internal class RolesType
		{
			internal RoleType Code;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Code;
			internal ConcreteRoleType Country;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class NonSerializedInventoryItemObjectStateClass : Class
	{
		public static NonSerializedInventoryItemObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal NonSerializedInventoryItemObjectStateClass() : base(AppsDomain.Instance, new Guid("9dd17a3f-0e3c-4d87-b840-2f23a96dd165"))
        {
			this.SingularName = "NonSerializedInventoryItemObjectState";
			this.PluralName = "NonSerializedInventoryItemObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("338dad9b-67f8-4d3d-ad23-e2c8eb16825c"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ProfessionalAssignmentClass : Class
	{
		public static ProfessionalAssignmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProfessionalAssignmentClass() : base(AppsDomain.Instance, new Guid("9e679821-8eeb-4dce-b090-d8ade95cb47f"))
        {
			this.SingularName = "ProfessionalAssignment";
			this.PluralName = "ProfessionalAssignments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3d3e9d8d-2274-404e-9773-76f32100fbe1"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("b4b9a7b6-a99a-4f0e-a67d-3e58070c12a9"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProfessionalAssignmentProfessional = new RelationType(AppsDomain.Instance, new Guid("18af73aa-336f-4120-8508-a59a9acf17bc"), new Guid("31da78aa-5e06-48f8-90e4-018ef021a280"), new Guid("cf515b68-b198-4348-881c-fd9a0bcf22bf"));
			ProfessionalAssignmentProfessional.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProfessionalAssignmentProfessional.IsIndexed = true;

			ProfessionalAssignmentProfessional.AssociationType.ObjectType = this;

			ProfessionalAssignmentProfessional.RoleType.ObjectType = PersonClass.Instance;;
			ProfessionalAssignmentProfessional.RoleType.AssignedSingularName = "Professional";
			ProfessionalAssignmentProfessional.RoleType.AssignedPluralName = "Professionals";
			this.Roles.Professional = ProfessionalAssignmentProfessional.RoleType;

			var ProfessionalAssignmentEngagementItem = new RelationType(AppsDomain.Instance, new Guid("a75d3ec2-c4f8-4de6-a10c-fe5e3897e663"), new Guid("70e8f936-27c8-42cb-9459-9a823aaa6318"), new Guid("bb592768-a6f0-47fb-bc74-a15fc5867b34"));
			ProfessionalAssignmentEngagementItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProfessionalAssignmentEngagementItem.IsIndexed = true;

			ProfessionalAssignmentEngagementItem.AssociationType.ObjectType = this;

			ProfessionalAssignmentEngagementItem.RoleType.ObjectType = EngagementItemInterface.Instance;;
			ProfessionalAssignmentEngagementItem.RoleType.AssignedSingularName = "EngagementItem";
			ProfessionalAssignmentEngagementItem.RoleType.AssignedPluralName = "EngagementItems";
			this.Roles.EngagementItem = ProfessionalAssignmentEngagementItem.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProfessionalAssignmentClass.Instance.ConcreteRoles.Professional = ProfessionalAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Professional]; 

			ProfessionalAssignmentClass.Instance.ConcreteRoles.EngagementItem = ProfessionalAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementItem]; 


		}

		internal class RolesType
		{
			internal RoleType Professional;
			internal RoleType EngagementItem;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Professional;
			internal ConcreteRoleType EngagementItem;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class ContainerInterface: Interface
	{
		public static ContainerInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ContainerInterface() : base(AppsDomain.Instance, new Guid("9ec6dae1-439e-4b19-b4dc-885e1ed943d7"))
        {
			this.SingularName = "Container";
			this.PluralName = "Containers";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cd81edd7-f12f-4d61-b17b-8e4484c0b1c2"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var ContainerFacility = new RelationType(AppsDomain.Instance, new Guid("a8279f40-4624-4aa9-9e61-fc01f880ca17"), new Guid("15f3df8c-c20e-4162-b5f8-1e031001f11f"), new Guid("33da1e6a-60bd-4c50-9fe6-30946254a5f7"));
			ContainerFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			ContainerFacility.IsIndexed = true;

			ContainerFacility.AssociationType.ObjectType = this;

			ContainerFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			ContainerFacility.RoleType.AssignedSingularName = "Facility";
			ContainerFacility.RoleType.AssignedPluralName = "Facilities";
			this.Roles.Facility = ContainerFacility.RoleType;

			var ContainerContainerDescription = new RelationType(AppsDomain.Instance, new Guid("e4ca9708-8c0c-451a-b63c-126a96b2ad72"), new Guid("780fde92-4842-4366-afe8-09ef9bde95f6"), new Guid("54113d74-1620-4eb6-8c16-50531af1be17"));
			ContainerContainerDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			ContainerContainerDescription.AssociationType.ObjectType = this;

			ContainerContainerDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ContainerContainerDescription.RoleType.AssignedSingularName = "ContainerDescription";
			ContainerContainerDescription.RoleType.AssignedPluralName = "ContainerDescriptions";
			ContainerContainerDescription.RoleType.Size = 256;
			this.Roles.ContainerDescription = ContainerContainerDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BarrelClass.Instance.ConcreteRoles.Facility = BarrelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			RoomClass.Instance.ConcreteRoles.Facility = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			ShelfClass.Instance.ConcreteRoles.Facility = ShelfClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			BinClass.Instance.ConcreteRoles.Facility = BinClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 

			BarrelClass.Instance.ConcreteRoles.ContainerDescription = BarrelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContainerDescription]; 
			RoomClass.Instance.ConcreteRoles.ContainerDescription = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContainerDescription]; 
			ShelfClass.Instance.ConcreteRoles.ContainerDescription = ShelfClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContainerDescription]; 
			BinClass.Instance.ConcreteRoles.ContainerDescription = BinClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContainerDescription]; 


		}

		internal class RolesType
		{
			internal RoleType Facility;
			internal RoleType ContainerDescription;

		}
	}public partial class PaymentInterface: Interface
	{
		public static PaymentInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PaymentInterface() : base(AppsDomain.Instance, new Guid("9f20a35c-d814-4690-a96f-2bcd25f6c6a2"))
        {
			this.SingularName = "Payment";
			this.PluralName = "Payments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("283d020a-0d54-4764-8f5e-8364200618ee"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("4e7c1f4e-8b99-4a88-86cd-304b25a5ba82"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("b826c23e-3a10-41bc-895b-f517ca4ac373"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PaymentAmount = new RelationType(AppsDomain.Instance, new Guid("4c8b7a4f-f151-419e-8365-ce0da0b3a709"), new Guid("32007a7b-e849-41c3-96f5-61d253607f98"), new Guid("5d06b93d-b58e-48ba-b1b8-215b2e84bf4d"));
			PaymentAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentAmount.AssociationType.ObjectType = this;

			PaymentAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PaymentAmount.RoleType.AssignedSingularName = "Amount";
			PaymentAmount.RoleType.AssignedPluralName = "Amounts";
			PaymentAmount.RoleType.Scale = 2;
			PaymentAmount.RoleType.Precision = 19;
			this.Roles.Amount = PaymentAmount.RoleType;

			var PaymentPaymentMethod = new RelationType(AppsDomain.Instance, new Guid("5be2e66e-4714-4dc1-a0f2-a9f600815e41"), new Guid("321a8622-1b74-4b48-bfe2-7a9478879f06"), new Guid("e877dc1e-18ba-4286-888f-831e0433544d"));
			PaymentPaymentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentPaymentMethod.IsIndexed = true;

			PaymentPaymentMethod.AssociationType.ObjectType = this;

			PaymentPaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			PaymentPaymentMethod.RoleType.AssignedSingularName = "PaymentMethod";
			PaymentPaymentMethod.RoleType.AssignedPluralName = "PaymentMethods";
			this.Roles.PaymentMethod = PaymentPaymentMethod.RoleType;

			var PaymentEffectiveDate = new RelationType(AppsDomain.Instance, new Guid("7afc9649-43c9-4a60-a298-27361ba59765"), new Guid("41547bdb-9d10-42fb-a75f-b0c8d9b8d09e"), new Guid("6038fc56-abb9-41e6-965c-d71648d9f5ce"));
			PaymentEffectiveDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentEffectiveDate.AssociationType.ObjectType = this;

			PaymentEffectiveDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PaymentEffectiveDate.RoleType.AssignedSingularName = "EffectiveDate";
			PaymentEffectiveDate.RoleType.AssignedPluralName = "EffectiveDates";
			this.Roles.EffectiveDate = PaymentEffectiveDate.RoleType;

			var PaymentSendingParty = new RelationType(AppsDomain.Instance, new Guid("a80a1ed7-473b-493b-a9ab-23a682c6ae44"), new Guid("3e95c4c2-6164-486a-a483-e0552a142e13"), new Guid("495d6adc-8fff-4754-99cf-b4f2a65e6b44"));
			PaymentSendingParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentSendingParty.IsIndexed = true;

			PaymentSendingParty.AssociationType.ObjectType = this;

			PaymentSendingParty.RoleType.ObjectType = PartyInterface.Instance;;
			PaymentSendingParty.RoleType.AssignedSingularName = "SendingParty";
			PaymentSendingParty.RoleType.AssignedPluralName = "SendingParties";
			this.Roles.SendingParty = PaymentSendingParty.RoleType;

			var PaymentPaymentApplication = new RelationType(AppsDomain.Instance, new Guid("b0c79092-c5d0-426b-b06d-ccec574bb7d9"), new Guid("d85e6a8c-5fa9-455d-bc94-6d02b47e7cd8"), new Guid("967768b1-8ec5-4b58-8e8c-2513e5528bb2"));
			PaymentPaymentApplication.AssignedMultiplicity = Multiplicity.OneToMany;
			PaymentPaymentApplication.IsIndexed = true;

			PaymentPaymentApplication.AssociationType.ObjectType = this;

			PaymentPaymentApplication.RoleType.ObjectType = PaymentApplicationClass.Instance;;
			PaymentPaymentApplication.RoleType.AssignedSingularName = "PaymentApplication";
			PaymentPaymentApplication.RoleType.AssignedPluralName = "PaymentApplications";
			this.Roles.PaymentApplication = PaymentPaymentApplication.RoleType;

			var PaymentReferenceNumber = new RelationType(AppsDomain.Instance, new Guid("f49e4d28-12a9-4575-818b-b475bec0c9d1"), new Guid("9760d670-085b-4573-85c2-96356d362d4e"), new Guid("779b1e2c-4be5-4324-b141-192cca8a7b56"));
			PaymentReferenceNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentReferenceNumber.AssociationType.ObjectType = this;

			PaymentReferenceNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PaymentReferenceNumber.RoleType.AssignedSingularName = "ReferenceNumber";
			PaymentReferenceNumber.RoleType.AssignedPluralName = "ReferenceNumbers";
			PaymentReferenceNumber.RoleType.Size = 256;
			this.Roles.ReferenceNumber = PaymentReferenceNumber.RoleType;

			var PaymentReceivingParty = new RelationType(AppsDomain.Instance, new Guid("faafa75e-496c-4220-ae3f-ab7d1e317484"), new Guid("c5800c84-707e-443c-a8ae-bc4e5598bc08"), new Guid("46c1c87e-c4af-4383-814d-5452b2faae94"));
			PaymentReceivingParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentReceivingParty.IsIndexed = true;

			PaymentReceivingParty.AssociationType.ObjectType = this;

			PaymentReceivingParty.RoleType.ObjectType = PartyInterface.Instance;;
			PaymentReceivingParty.RoleType.AssignedSingularName = "ReceivingParty";
			PaymentReceivingParty.RoleType.AssignedPluralName = "ReceivingParties";
			this.Roles.ReceivingParty = PaymentReceivingParty.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ReceiptClass.Instance.ConcreteRoles.Amount = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 
			DisbursementClass.Instance.ConcreteRoles.Amount = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 
			PayCheckClass.Instance.ConcreteRoles.Amount = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 

			ReceiptClass.Instance.ConcreteRoles.PaymentMethod = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 
			DisbursementClass.Instance.ConcreteRoles.PaymentMethod = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 
			PayCheckClass.Instance.ConcreteRoles.PaymentMethod = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 

			ReceiptClass.Instance.ConcreteRoles.EffectiveDate = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EffectiveDate]; 
			DisbursementClass.Instance.ConcreteRoles.EffectiveDate = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EffectiveDate]; 
			PayCheckClass.Instance.ConcreteRoles.EffectiveDate = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EffectiveDate]; 

			ReceiptClass.Instance.ConcreteRoles.SendingParty = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SendingParty]; 
			DisbursementClass.Instance.ConcreteRoles.SendingParty = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SendingParty]; 
			PayCheckClass.Instance.ConcreteRoles.SendingParty = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SendingParty]; 

			ReceiptClass.Instance.ConcreteRoles.PaymentApplication = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentApplication]; 
			DisbursementClass.Instance.ConcreteRoles.PaymentApplication = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentApplication]; 
			PayCheckClass.Instance.ConcreteRoles.PaymentApplication = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentApplication]; 

			ReceiptClass.Instance.ConcreteRoles.ReferenceNumber = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReferenceNumber]; 
			DisbursementClass.Instance.ConcreteRoles.ReferenceNumber = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReferenceNumber]; 
			PayCheckClass.Instance.ConcreteRoles.ReferenceNumber = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReferenceNumber]; 

			ReceiptClass.Instance.ConcreteRoles.ReceivingParty = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReceivingParty]; 
			DisbursementClass.Instance.ConcreteRoles.ReceivingParty = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReceivingParty]; 
			PayCheckClass.Instance.ConcreteRoles.ReceivingParty = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReceivingParty]; 


		}

		internal class RolesType
		{
			internal RoleType Amount;
			internal RoleType PaymentMethod;
			internal RoleType EffectiveDate;
			internal RoleType SendingParty;
			internal RoleType PaymentApplication;
			internal RoleType ReferenceNumber;
			internal RoleType ReceivingParty;

		}
	}public partial class TransferObjectStateClass : Class
	{
		public static TransferObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TransferObjectStateClass() : base(AppsDomain.Instance, new Guid("9f3d9ae6-cbbf-4cfb-900d-bc66edccbf95"))
        {
			this.SingularName = "TransferObjectState";
			this.PluralName = "TransferObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4960682f-d940-4da2-8923-f6d3be0e1ecf"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PackageRevenueHistoryClass : Class
	{
		public static PackageRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PackageRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("9f995d6f-972a-46e4-bbe4-d1e9bedf09ef"))
        {
			this.SingularName = "PackageRevenueHistory";
			this.PluralName = "PackageRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b59dfeee-6cea-4afa-8af5-1dab709647b9"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PackageRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("10487ca8-f973-4be7-b2ae-91857fe0486c"), new Guid("33beebef-7ccd-4ce3-a64b-262380d58728"), new Guid("6e01962d-36d5-4b16-8dc7-4290e3f8095e"));
			PackageRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PackageRevenueHistoryInternalOrganisation.IsIndexed = true;

			PackageRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			PackageRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PackageRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PackageRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PackageRevenueHistoryInternalOrganisation.RoleType;

			var PackageRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("3d753279-fce6-4d44-a712-08fc21a562f5"), new Guid("91ab2864-0e91-40bc-bac1-293b7f696f5f"), new Guid("498418d5-938c-4a6f-bf7e-ad683faf0bea"));
			PackageRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PackageRevenueHistoryRevenue.AssociationType.ObjectType = this;

			PackageRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PackageRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			PackageRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			PackageRevenueHistoryRevenue.RoleType.Scale = 2;
			PackageRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = PackageRevenueHistoryRevenue.RoleType;

			var PackageRevenueHistoryPackage = new RelationType(AppsDomain.Instance, new Guid("662d235e-1d36-48d1-a945-f0b60e579ca1"), new Guid("ffc5e375-a778-459e-978c-e542952cd0fa"), new Guid("771e3c35-cb1a-4fb7-8c0d-01f6bbb9f4e3"));
			PackageRevenueHistoryPackage.AssignedMultiplicity = Multiplicity.ManyToOne;
			PackageRevenueHistoryPackage.IsIndexed = true;

			PackageRevenueHistoryPackage.AssociationType.ObjectType = this;

			PackageRevenueHistoryPackage.RoleType.ObjectType = PackageClass.Instance;;
			PackageRevenueHistoryPackage.RoleType.AssignedSingularName = "Package";
			PackageRevenueHistoryPackage.RoleType.AssignedPluralName = "Packages";
			this.Roles.Package = PackageRevenueHistoryPackage.RoleType;

			var PackageRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("7e7e4510-d1fb-4389-8a8c-d444f1c87daa"), new Guid("89879f07-2f9a-4c6c-bf3a-8d2ec8742d27"), new Guid("28f27ac4-af47-41a1-b264-1c58bb73a852"));
			PackageRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PackageRevenueHistoryCurrency.IsIndexed = true;

			PackageRevenueHistoryCurrency.AssociationType.ObjectType = this;

			PackageRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PackageRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			PackageRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PackageRevenueHistoryCurrency.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PackageRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = PackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			PackageRevenueHistoryClass.Instance.ConcreteRoles.Revenue = PackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			PackageRevenueHistoryClass.Instance.ConcreteRoles.Package = PackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Package]; 

			PackageRevenueHistoryClass.Instance.ConcreteRoles.Currency = PackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 


		}

		internal class RolesType
		{
			internal RoleType InternalOrganisation;
			internal RoleType Revenue;
			internal RoleType Package;
			internal RoleType Currency;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Package;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class JournalEntryDetailClass : Class
	{
		public static JournalEntryDetailClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal JournalEntryDetailClass() : base(AppsDomain.Instance, new Guid("9ffd634a-27b9-46a5-bf77-4ae25a9b9ebf"))
        {
			this.SingularName = "JournalEntryDetail";
			this.PluralName = "JournalEntryDetails";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4e041ac6-6a24-4e05-ab2a-3125d0925a03"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var JournalEntryDetailGeneralLedgerAccount = new RelationType(AppsDomain.Instance, new Guid("9e273a44-b68f-4379-b2cd-f6ac1d524c4a"), new Guid("003c293d-650f-422b-a5a4-aa8caff4ce3d"), new Guid("a1639744-d44f-472d-821b-ec9eaf5a8530"));
			JournalEntryDetailGeneralLedgerAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			JournalEntryDetailGeneralLedgerAccount.IsIndexed = true;

			JournalEntryDetailGeneralLedgerAccount.AssociationType.ObjectType = this;

			JournalEntryDetailGeneralLedgerAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			JournalEntryDetailGeneralLedgerAccount.RoleType.AssignedSingularName = "GeneralLedgerAccount";
			JournalEntryDetailGeneralLedgerAccount.RoleType.AssignedPluralName = "GeneralLedgerAccounts";
			this.Roles.GeneralLedgerAccount = JournalEntryDetailGeneralLedgerAccount.RoleType;

			var JournalEntryDetailAmount = new RelationType(AppsDomain.Instance, new Guid("b51ddcf7-ae36-4fbc-b8b5-3b2befa4a720"), new Guid("9a4e561c-df1e-4d5f-8b31-384959d56e4f"), new Guid("e49734eb-3232-4fcb-b923-d873804545c9"));
			JournalEntryDetailAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalEntryDetailAmount.AssociationType.ObjectType = this;

			JournalEntryDetailAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			JournalEntryDetailAmount.RoleType.AssignedSingularName = "Amount";
			JournalEntryDetailAmount.RoleType.AssignedPluralName = "Amounts";
			JournalEntryDetailAmount.RoleType.Scale = 2;
			JournalEntryDetailAmount.RoleType.Precision = 19;
			this.Roles.Amount = JournalEntryDetailAmount.RoleType;

			var JournalEntryDetailDebit = new RelationType(AppsDomain.Instance, new Guid("bc59e72d-935c-46fd-a595-4de24369fc12"), new Guid("d157af85-88b6-4a13-b142-ba7d176bbb40"), new Guid("539cedbf-3d80-45b3-8d3c-2e154f541ce9"));
			JournalEntryDetailDebit.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalEntryDetailDebit.AssociationType.ObjectType = this;

			JournalEntryDetailDebit.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			JournalEntryDetailDebit.RoleType.AssignedSingularName = "Debit";
			JournalEntryDetailDebit.RoleType.AssignedPluralName = "Debits";
			this.Roles.Debit = JournalEntryDetailDebit.RoleType;


		}

		internal override void SetRelationTypes()
		{
			JournalEntryDetailClass.Instance.ConcreteRoles.GeneralLedgerAccount = JournalEntryDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccount]; 

			JournalEntryDetailClass.Instance.ConcreteRoles.Amount = JournalEntryDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 

			JournalEntryDetailClass.Instance.ConcreteRoles.Debit = JournalEntryDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Debit]; 


		}

		internal class RolesType
		{
			internal RoleType GeneralLedgerAccount;
			internal RoleType Amount;
			internal RoleType Debit;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType GeneralLedgerAccount;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType Debit;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class TestingRequirementClass : Class
	{
		public static TestingRequirementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TestingRequirementClass() : base(AppsDomain.Instance, new Guid("a06befc5-c347-4ffb-9391-2a099fca5145"))
        {
			this.SingularName = "TestingRequirement";
			this.PluralName = "TestingRequirements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f552ae41-9920-43b7-8eca-b4c4341933e1"))
			{
				Subtype = Instance,
				Supertype = PartSpecificationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PartSpecificationStatus;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType DocumentationDate;
			internal ConcreteRoleType CurrentPartSpecificationStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CaseClass : Class
	{
		public static CaseClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CaseClass() : base(AppsDomain.Instance, new Guid("a0705b81-2eef-4c51-9454-a31bcedc20a3"))
        {
			this.SingularName = "Case";
			this.PluralName = "Cases";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7864bb96-de3f-414a-9974-76806e59b4b1"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("7fec8535-43d5-462a-b964-a4bd0b9cc9b6"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ae8ea6fb-6aa5-4c3f-ba77-e6e5d4e8575f"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CaseCurrentCaseStatus = new RelationType(AppsDomain.Instance, new Guid("2286f83b-7992-4aa0-80fe-ad19e3c8c572"), new Guid("484381bd-6dbc-4a78-bc59-c21422b942b2"), new Guid("c9951d63-5b1a-4053-9756-16b46a336288"));
			CaseCurrentCaseStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			CaseCurrentCaseStatus.IsDerived = true;
			CaseCurrentCaseStatus.IsIndexed = true;

			CaseCurrentCaseStatus.AssociationType.ObjectType = this;

			CaseCurrentCaseStatus.RoleType.ObjectType = CaseStatusClass.Instance;;
			CaseCurrentCaseStatus.RoleType.AssignedSingularName = "CurrentCaseStatus";
			CaseCurrentCaseStatus.RoleType.AssignedPluralName = "CurrentCaseStatuses";
			this.Roles.CurrentCaseStatus = CaseCurrentCaseStatus.RoleType;

			var CaseCaseStatus = new RelationType(AppsDomain.Instance, new Guid("51bfbe94-46a5-411f-ac10-8623bfc4472c"), new Guid("b8b5d65b-14c9-4ab0-89b9-4124d60cfeb7"), new Guid("b49c43fd-798c-4608-a055-af04d97aa72d"));
			CaseCaseStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			CaseCaseStatus.IsDerived = true;
			CaseCaseStatus.IsIndexed = true;

			CaseCaseStatus.AssociationType.ObjectType = this;

			CaseCaseStatus.RoleType.ObjectType = CaseStatusClass.Instance;;
			CaseCaseStatus.RoleType.AssignedSingularName = "CaseStatus";
			CaseCaseStatus.RoleType.AssignedPluralName = "CaseStatuses";
			this.Roles.CaseStatus = CaseCaseStatus.RoleType;

			var CaseStartDate = new RelationType(AppsDomain.Instance, new Guid("65e310b5-1358-450c-aec2-985dcc724cdd"), new Guid("d815e7c2-fe40-470c-9ab9-007f7bc0465b"), new Guid("fee6ebfb-3ce6-473b-9142-ea70ade93709"));
			CaseStartDate.AssignedMultiplicity = Multiplicity.OneToOne;
			CaseStartDate.AssociationType.ObjectType = this;

			CaseStartDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CaseStartDate.RoleType.AssignedSingularName = "StartDate";
			CaseStartDate.RoleType.AssignedPluralName = "StartDates";
			this.Roles.StartDate = CaseStartDate.RoleType;

			var CaseCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("6f68ff93-e70c-4581-b0c7-94b2f75e6860"), new Guid("8fb16366-5def-43eb-a68b-2bac5169564b"), new Guid("546330b8-f772-45f0-b2f0-66cf4a9ebffc"));
			CaseCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CaseCurrentObjectState.IsDerived = true;
			CaseCurrentObjectState.IsIndexed = true;

			CaseCurrentObjectState.AssociationType.ObjectType = this;

			CaseCurrentObjectState.RoleType.ObjectType = CaseObjectStateClass.Instance;;
			CaseCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			CaseCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = CaseCurrentObjectState.RoleType;

			var CaseDescription = new RelationType(AppsDomain.Instance, new Guid("87f64957-53f9-446e-ac1f-323a00da027f"), new Guid("289d52aa-fb69-4e7d-ba49-e4521614e19b"), new Guid("dec26736-f037-48c1-a4b2-0247b9abf92b"));
			CaseDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			CaseDescription.AssociationType.ObjectType = this;

			CaseDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CaseDescription.RoleType.AssignedSingularName = "Description";
			CaseDescription.RoleType.AssignedPluralName = "Descriptions";
			CaseDescription.RoleType.Size = 256;
			this.Roles.Description = CaseDescription.RoleType;

			var CasePreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("be264aef-f259-494c-bfbf-20d20afde14c"), new Guid("d76227b9-0a0d-4f88-a169-99f5e681d374"), new Guid("b05ebe9f-e108-4dfe-b1e2-afb6dc9c3f55"));
			CasePreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CasePreviousObjectState.IsDerived = true;
			CasePreviousObjectState.IsIndexed = true;

			CasePreviousObjectState.AssociationType.ObjectType = this;

			CasePreviousObjectState.RoleType.ObjectType = CaseObjectStateClass.Instance;;
			CasePreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			CasePreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = CasePreviousObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CaseClass.Instance.ConcreteRoles.CurrentCaseStatus = CaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentCaseStatus]; 

			CaseClass.Instance.ConcreteRoles.CaseStatus = CaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CaseStatus]; 

			CaseClass.Instance.ConcreteRoles.StartDate = CaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDate]; 

			CaseClass.Instance.ConcreteRoles.CurrentObjectState = CaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			CaseClass.Instance.ConcreteRoles.Description = CaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			CaseClass.Instance.ConcreteRoles.PreviousObjectState = CaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType CurrentCaseStatus;
			internal RoleType CaseStatus;
			internal RoleType StartDate;
			internal RoleType CurrentObjectState;
			internal RoleType Description;
			internal RoleType PreviousObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentCaseStatus;
			internal ConcreteRoleType CaseStatus;
			internal ConcreteRoleType StartDate;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CapitalizationClass : Class
	{
		public static CapitalizationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CapitalizationClass() : base(AppsDomain.Instance, new Guid("a0a753be-15ca-49e2-8f5f-f956fa132f49"))
        {
			this.SingularName = "Capitalization";
			this.PluralName = "Capitalizations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("37790eef-b705-49da-943a-8784ecf5d0c8"))
			{
				Subtype = Instance,
				Supertype = InternalAccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PurchaseReturnClass : Class
	{
		public static PurchaseReturnClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseReturnClass() : base(AppsDomain.Instance, new Guid("a0cf565a-2dcf-4513-9110-8c34468d993f"))
        {
			this.SingularName = "PurchaseReturn";
			this.PluralName = "PurchaseReturns";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f5828301-6945-437d-b32e-17379544216c"))
			{
				Subtype = Instance,
				Supertype = ShipmentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseReturnCurrentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("01d0a8b8-0361-440f-8d96-967578262318"), new Guid("9a79ad26-180a-45fd-8b50-ca8c641e9f77"), new Guid("e44876b6-c198-493a-8efc-4a4d09bd2b00"));
			PurchaseReturnCurrentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseReturnCurrentShipmentStatus.IsDerived = true;
			PurchaseReturnCurrentShipmentStatus.IsIndexed = true;

			PurchaseReturnCurrentShipmentStatus.AssociationType.ObjectType = this;

			PurchaseReturnCurrentShipmentStatus.RoleType.ObjectType = PurchaseReturnStatusClass.Instance;;
			PurchaseReturnCurrentShipmentStatus.RoleType.AssignedSingularName = "CurrentShipmentStatus";
			PurchaseReturnCurrentShipmentStatus.RoleType.AssignedPluralName = "CurrentShipmentStatus";
			this.Roles.CurrentShipmentStatus = PurchaseReturnCurrentShipmentStatus.RoleType;

			var PurchaseReturnCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("91b10295-d8d6-4240-914c-9ee8a6c21b96"), new Guid("47441947-8d72-4730-ab25-077dc80b4ca1"), new Guid("ba9b3f52-0a0e-46ec-b3fb-d9330ebd5269"));
			PurchaseReturnCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseReturnCurrentObjectState.IsDerived = true;
			PurchaseReturnCurrentObjectState.IsIndexed = true;

			PurchaseReturnCurrentObjectState.AssociationType.ObjectType = this;

			PurchaseReturnCurrentObjectState.RoleType.ObjectType = PurchaseReturnObjectStateClass.Instance;;
			PurchaseReturnCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			PurchaseReturnCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = PurchaseReturnCurrentObjectState.RoleType;

			var PurchaseReturnShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("a5f3cf87-1730-4841-9df4-2638b10f3222"), new Guid("b1cb7246-2417-4618-bb03-decb38a0fc9f"), new Guid("5ede1e3f-bed7-4603-adfe-f576e23a2e2f"));
			PurchaseReturnShipmentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseReturnShipmentStatus.IsDerived = true;
			PurchaseReturnShipmentStatus.IsIndexed = true;

			PurchaseReturnShipmentStatus.AssociationType.ObjectType = this;

			PurchaseReturnShipmentStatus.RoleType.ObjectType = PurchaseReturnStatusClass.Instance;;
			PurchaseReturnShipmentStatus.RoleType.AssignedSingularName = "ShipmentStatus";
			PurchaseReturnShipmentStatus.RoleType.AssignedPluralName = "ShipmentStatuses";
			this.Roles.ShipmentStatus = PurchaseReturnShipmentStatus.RoleType;

			var PurchaseReturnPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("efdd7208-9662-4207-b484-e6d8fdc708e1"), new Guid("5cf89807-6553-402e-b34c-b8dd6d0baa60"), new Guid("b02b25b8-d004-44c9-8dee-d4ddd285e853"));
			PurchaseReturnPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseReturnPreviousObjectState.IsDerived = true;
			PurchaseReturnPreviousObjectState.IsIndexed = true;

			PurchaseReturnPreviousObjectState.AssociationType.ObjectType = this;

			PurchaseReturnPreviousObjectState.RoleType.ObjectType = PurchaseReturnObjectStateClass.Instance;;
			PurchaseReturnPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			PurchaseReturnPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = PurchaseReturnPreviousObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseReturnClass.Instance.ConcreteRoles.CurrentShipmentStatus = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentShipmentStatus]; 

			PurchaseReturnClass.Instance.ConcreteRoles.CurrentObjectState = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			PurchaseReturnClass.Instance.ConcreteRoles.ShipmentStatus = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentStatus]; 

			PurchaseReturnClass.Instance.ConcreteRoles.PreviousObjectState = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType CurrentShipmentStatus;
			internal RoleType CurrentObjectState;
			internal RoleType ShipmentStatus;
			internal RoleType PreviousObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentShipmentStatus;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ShipmentStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType ShipmentMethod;
			internal ConcreteRoleType BillToContactMechanism;
			internal ConcreteRoleType ShipmentPackage;
			internal ConcreteRoleType ShipmentNumber;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType BillToParty;
			internal ConcreteRoleType ShipToParty;
			internal ConcreteRoleType ShipmentItem;
			internal ConcreteRoleType BillFromInternalOrganisation;
			internal ConcreteRoleType ReceiverContactMechanism;
			internal ConcreteRoleType ShipToAddress;
			internal ConcreteRoleType EstimatedShipCost;
			internal ConcreteRoleType EstimatedShipDate;
			internal ConcreteRoleType LatestCancelDate;
			internal ConcreteRoleType Carrier;
			internal ConcreteRoleType InquireAboutContactMechanism;
			internal ConcreteRoleType EstimatedReadyDate;
			internal ConcreteRoleType ShipFromAddress;
			internal ConcreteRoleType BillFromContactMechanism;
			internal ConcreteRoleType HandlingInstruction;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType ShipFromParty;
			internal ConcreteRoleType ShipmentRouteSegment;
			internal ConcreteRoleType EstimatedArrivalDate;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class WorkEffortPartStandardClass : Class
	{
		public static WorkEffortPartStandardClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortPartStandardClass() : base(AppsDomain.Instance, new Guid("a12e5d28-e431-48d3-bbb1-8a2f5e3c4991"))
        {
			this.SingularName = "WorkEffortPartStandard";
			this.PluralName = "WorkEffortPartStandards";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("6522e002-ed7a-49fd-ba17-ae0d790547a4"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortPartStandardPart = new RelationType(AppsDomain.Instance, new Guid("4d4913e2-649d-4589-86ee-93cfa6c426a7"), new Guid("9228803e-089c-4ee6-9a42-18503d12f663"), new Guid("abb46361-be39-4668-8bbb-26de268a654c"));
			WorkEffortPartStandardPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortPartStandardPart.IsIndexed = true;

			WorkEffortPartStandardPart.AssociationType.ObjectType = this;

			WorkEffortPartStandardPart.RoleType.ObjectType = PartInterface.Instance;;
			WorkEffortPartStandardPart.RoleType.AssignedSingularName = "Part";
			WorkEffortPartStandardPart.RoleType.AssignedPluralName = "Parts";
			this.Roles.Part = WorkEffortPartStandardPart.RoleType;

			var WorkEffortPartStandardEstimatedCost = new RelationType(AppsDomain.Instance, new Guid("68d4af49-a55f-416c-8097-d93da90e1132"), new Guid("f7423733-f8ec-41f6-85a5-fd528d9291fc"), new Guid("0748dd9e-6ea8-4eea-87f8-c40605e06d0c"));
			WorkEffortPartStandardEstimatedCost.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortPartStandardEstimatedCost.AssociationType.ObjectType = this;

			WorkEffortPartStandardEstimatedCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortPartStandardEstimatedCost.RoleType.AssignedSingularName = "EstimatedCost";
			WorkEffortPartStandardEstimatedCost.RoleType.AssignedPluralName = "EstimatedCosts";
			WorkEffortPartStandardEstimatedCost.RoleType.Scale = 2;
			WorkEffortPartStandardEstimatedCost.RoleType.Precision = 19;
			this.Roles.EstimatedCost = WorkEffortPartStandardEstimatedCost.RoleType;

			var WorkEffortPartStandardEstimatedQuantity = new RelationType(AppsDomain.Instance, new Guid("ec3e9aee-c39b-46a1-9968-af914f9057f3"), new Guid("5e99179e-4abd-409b-b091-263037554a6a"), new Guid("c63106ff-fe33-40fb-acb6-e7fb9907eb18"));
			WorkEffortPartStandardEstimatedQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortPartStandardEstimatedQuantity.AssociationType.ObjectType = this;

			WorkEffortPartStandardEstimatedQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			WorkEffortPartStandardEstimatedQuantity.RoleType.AssignedSingularName = "EstimatedQuantity";
			WorkEffortPartStandardEstimatedQuantity.RoleType.AssignedPluralName = "EstimatedQuantities";
			this.Roles.EstimatedQuantity = WorkEffortPartStandardEstimatedQuantity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortPartStandardClass.Instance.ConcreteRoles.Part = WorkEffortPartStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 

			WorkEffortPartStandardClass.Instance.ConcreteRoles.EstimatedCost = WorkEffortPartStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedCost]; 

			WorkEffortPartStandardClass.Instance.ConcreteRoles.EstimatedQuantity = WorkEffortPartStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedQuantity]; 


		}

		internal class RolesType
		{
			internal RoleType Part;
			internal RoleType EstimatedCost;
			internal RoleType EstimatedQuantity;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Part;
			internal ConcreteRoleType EstimatedCost;
			internal ConcreteRoleType EstimatedQuantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SurchargeComponentClass : Class
	{
		public static SurchargeComponentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SurchargeComponentClass() : base(AppsDomain.Instance, new Guid("a18de27f-54fe-4160-b149-475bebeaf716"))
        {
			this.SingularName = "SurchargeComponent";
			this.PluralName = "SurchargeComponents";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5e784996-809e-4fe8-a5d1-9dfacc617911"))
			{
				Subtype = Instance,
				Supertype = PriceComponentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SurchargeComponentPercentage = new RelationType(AppsDomain.Instance, new Guid("0e9d10cd-6905-42ca-9db3-aed9b123eb2a"), new Guid("79b7473b-d65d-469b-9061-bb344da42c7e"), new Guid("f5d669b0-89d3-4605-ae6e-dcee6c673c50"));
			SurchargeComponentPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SurchargeComponentPercentage.AssociationType.ObjectType = this;

			SurchargeComponentPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SurchargeComponentPercentage.RoleType.AssignedSingularName = "Percentage";
			SurchargeComponentPercentage.RoleType.AssignedPluralName = "Percentages";
			SurchargeComponentPercentage.RoleType.Scale = 2;
			SurchargeComponentPercentage.RoleType.Precision = 19;
			this.Roles.Percentage = SurchargeComponentPercentage.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SurchargeComponentClass.Instance.ConcreteRoles.Percentage = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Percentage]; 


		}

		internal class RolesType
		{
			internal RoleType Percentage;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Percentage;
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType Rate;
			internal ConcreteRoleType RevenueValueBreak;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType OrderQuantityBreak;
			internal ConcreteRoleType PackageQuantityBreak;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType RevenueQuantityBreak;
			internal ConcreteRoleType SpecifiedFor;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType AgreementPricingProgram;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType OrderKind;
			internal ConcreteRoleType OrderValue;
			internal ConcreteRoleType Price;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class BankClass : Class
	{
		public static BankClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BankClass() : base(AppsDomain.Instance, new Guid("a24a8e12-7067-4bfb-8fc0-225a824d1a05"))
        {
			this.SingularName = "Bank";
			this.PluralName = "Banks";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cdaee2a7-a131-41cf-8115-ac65eb18809f"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var BankLogo = new RelationType(AppsDomain.Instance, new Guid("28723704-3a61-445a-b14e-c757ebbf8d66"), new Guid("86b555ec-72f1-4ed6-b161-56d23508cf99"), new Guid("17dc868b-9a11-41c1-9366-b10f47d1fe3f"));
			BankLogo.AssignedMultiplicity = Multiplicity.ManyToOne;
			BankLogo.IsIndexed = true;

			BankLogo.AssociationType.ObjectType = this;

			BankLogo.RoleType.ObjectType = MediaClass.Instance;;
			BankLogo.RoleType.AssignedSingularName = "Logo";
			BankLogo.RoleType.AssignedPluralName = "Logos";
			this.Roles.Logo = BankLogo.RoleType;

			var BankBic = new RelationType(AppsDomain.Instance, new Guid("354e114f-5d6b-4883-8e58-5c7a39878b6d"), new Guid("5c30c485-8f98-4a6d-8e05-3774331d9e7a"), new Guid("ed87ce26-a306-4590-8901-7b4fca4e2f57"));
			BankBic.AssignedMultiplicity = Multiplicity.OneToOne;
			BankBic.AssociationType.ObjectType = this;

			BankBic.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BankBic.RoleType.AssignedSingularName = "Bic";
			BankBic.RoleType.AssignedPluralName = "Bics";
			BankBic.RoleType.Size = 256;
			this.Roles.Bic = BankBic.RoleType;

			var BankSwiftCode = new RelationType(AppsDomain.Instance, new Guid("a7851af8-38cd-4785-b81c-fb2fa403d9f6"), new Guid("f7460d4e-1094-46af-b04a-46115c2fee6a"), new Guid("92429a4b-9166-4e40-a356-caedaf296e23"));
			BankSwiftCode.AssignedMultiplicity = Multiplicity.OneToOne;
			BankSwiftCode.AssociationType.ObjectType = this;

			BankSwiftCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BankSwiftCode.RoleType.AssignedSingularName = "SwiftCode";
			BankSwiftCode.RoleType.AssignedPluralName = "SwiftCodes";
			BankSwiftCode.RoleType.Size = 256;
			this.Roles.SwiftCode = BankSwiftCode.RoleType;

			var BankCountry = new RelationType(AppsDomain.Instance, new Guid("d3a11d21-0232-48a0-b784-c111ad05f5da"), new Guid("0c8f4f92-50c5-4440-ae4e-e1734d7fdc60"), new Guid("627538dd-fac1-44a0-83c0-220b65440365"));
			BankCountry.AssignedMultiplicity = Multiplicity.ManyToOne;
			BankCountry.IsIndexed = true;

			BankCountry.AssociationType.ObjectType = this;

			BankCountry.RoleType.ObjectType = CountryClass.Instance;;
			BankCountry.RoleType.AssignedSingularName = "Country";
			BankCountry.RoleType.AssignedPluralName = "Countries";
			this.Roles.Country = BankCountry.RoleType;

			var BankName = new RelationType(AppsDomain.Instance, new Guid("d4191223-d9be-4cbb-b2ad-ee0844dcae87"), new Guid("dc80650c-b20f-468f-8d3f-5410a7632961"), new Guid("85b6a787-7c26-42a6-aef9-d8b685ff97f6"));
			BankName.AssignedMultiplicity = Multiplicity.OneToOne;
			BankName.AssociationType.ObjectType = this;

			BankName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BankName.RoleType.AssignedSingularName = "Name";
			BankName.RoleType.AssignedPluralName = "Names";
			BankName.RoleType.Size = 256;
			this.Roles.Name = BankName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BankClass.Instance.ConcreteRoles.Logo = BankClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Logo]; 

			BankClass.Instance.ConcreteRoles.Bic = BankClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Bic]; 

			BankClass.Instance.ConcreteRoles.SwiftCode = BankClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SwiftCode]; 

			BankClass.Instance.ConcreteRoles.Country = BankClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Country]; 

			BankClass.Instance.ConcreteRoles.Name = BankClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Logo;
			internal RoleType Bic;
			internal RoleType SwiftCode;
			internal RoleType Country;
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Logo;
			internal ConcreteRoleType Bic;
			internal ConcreteRoleType SwiftCode;
			internal ConcreteRoleType Country;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProductRevenueClass : Class
	{
		public static ProductRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductRevenueClass() : base(AppsDomain.Instance, new Guid("a34ca9ef-63e5-48c0-8a62-c8f43ad2d9d9"))
        {
			this.SingularName = "ProductRevenue";
			this.PluralName = "ProductRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("53ec5361-4844-45a7-8128-c1b22e5f6729"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("8cfffd6e-32aa-40b6-ad03-6ffaa72a188a"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("1ae30294-1cb3-4d85-a587-4d347ea6eac3"), new Guid("dbb2dab9-e5a7-49a8-8479-a9190f536b72"), new Guid("5cae7798-695c-4618-b5b0-088bf2333b56"));
			ProductRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductRevenueRevenue.AssociationType.ObjectType = this;

			ProductRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ProductRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			ProductRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			ProductRevenueRevenue.RoleType.Scale = 2;
			ProductRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = ProductRevenueRevenue.RoleType;

			var ProductRevenueProductName = new RelationType(AppsDomain.Instance, new Guid("2e046fac-7803-49ba-a477-ee2cc889e3f1"), new Guid("da9d4c62-184a-4cc1-bd5c-4708a6daf71b"), new Guid("799d36ff-3411-401a-bdd5-60ff0b7f210a"));
			ProductRevenueProductName.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductRevenueProductName.AssociationType.ObjectType = this;

			ProductRevenueProductName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProductRevenueProductName.RoleType.AssignedSingularName = "ProductName";
			ProductRevenueProductName.RoleType.AssignedPluralName = "ProductNames";
			ProductRevenueProductName.RoleType.Size = 256;
			this.Roles.ProductName = ProductRevenueProductName.RoleType;

			var ProductRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("5f87a322-6943-4b20-b667-11bdf2f29244"), new Guid("e4cc94a8-3282-4a52-9e7e-1291105c3269"), new Guid("4e6ed630-8d5d-4b1c-8934-4332d15426ad"));
			ProductRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductRevenueCurrency.IsIndexed = true;

			ProductRevenueCurrency.AssociationType.ObjectType = this;

			ProductRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			ProductRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			ProductRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = ProductRevenueCurrency.RoleType;

			var ProductRevenueYear = new RelationType(AppsDomain.Instance, new Guid("8ee78120-6ec6-4470-835a-fdff01d3625e"), new Guid("7e4511b3-bd4e-4e4b-9f6c-c4254c47d258"), new Guid("ca9e8bf5-56c0-4795-a79d-9189fcc7ebcc"));
			ProductRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductRevenueYear.IsIndexed = true;

			ProductRevenueYear.AssociationType.ObjectType = this;

			ProductRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			ProductRevenueYear.RoleType.AssignedSingularName = "Year";
			ProductRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = ProductRevenueYear.RoleType;

			var ProductRevenueProduct = new RelationType(AppsDomain.Instance, new Guid("c2570065-9bd8-403e-be43-884d31d4ccce"), new Guid("9d6ab03e-c52b-431b-aaee-f8116cf3a64c"), new Guid("d84acfc6-0df5-4d50-89bf-b36e2a0e5e9c"));
			ProductRevenueProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductRevenueProduct.IsIndexed = true;

			ProductRevenueProduct.AssociationType.ObjectType = this;

			ProductRevenueProduct.RoleType.ObjectType = ProductInterface.Instance;;
			ProductRevenueProduct.RoleType.AssignedSingularName = "Product";
			ProductRevenueProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = ProductRevenueProduct.RoleType;

			var ProductRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("ce487eb1-8a85-4999-a322-def96f9134d8"), new Guid("ebb2943e-4a43-4271-8348-486f74761826"), new Guid("d6135f1f-464a-4e00-914c-7185b281d86d"));
			ProductRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductRevenueMonth.AssociationType.ObjectType = this;

			ProductRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			ProductRevenueMonth.RoleType.AssignedSingularName = "Month";
			ProductRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = ProductRevenueMonth.RoleType;

			var ProductRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("e33476e4-a420-4fa5-a367-72ff75c4d5c4"), new Guid("e13c2b60-30b8-48d4-b0d7-443ac8e493e5"), new Guid("15aa589a-9169-4644-8256-b8a644a6b5cf"));
			ProductRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductRevenueInternalOrganisation.IsIndexed = true;

			ProductRevenueInternalOrganisation.AssociationType.ObjectType = this;

			ProductRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			ProductRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			ProductRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = ProductRevenueInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductRevenueClass.Instance.ConcreteRoles.Revenue = ProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			ProductRevenueClass.Instance.ConcreteRoles.ProductName = ProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductName]; 

			ProductRevenueClass.Instance.ConcreteRoles.Currency = ProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			ProductRevenueClass.Instance.ConcreteRoles.Year = ProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			ProductRevenueClass.Instance.ConcreteRoles.Product = ProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			ProductRevenueClass.Instance.ConcreteRoles.Month = ProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			ProductRevenueClass.Instance.ConcreteRoles.InternalOrganisation = ProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType Revenue;
			internal RoleType ProductName;
			internal RoleType Currency;
			internal RoleType Year;
			internal RoleType Product;
			internal RoleType Month;
			internal RoleType InternalOrganisation;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType ProductName;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DisbursementAccountingTransactionClass : Class
	{
		public static DisbursementAccountingTransactionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DisbursementAccountingTransactionClass() : base(AppsDomain.Instance, new Guid("a3a5aeea-3c8b-43ab-94f1-49a1bd2d7254"))
        {
			this.SingularName = "DisbursementAccountingTransaction";
			this.PluralName = "DisbursementAccountingTransactions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("090bd181-4da5-4c8c-8ea3-a003e413beae"))
			{
				Subtype = Instance,
				Supertype = ExternalAccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DisbursementAccountingTransactionDisbursement = new RelationType(AppsDomain.Instance, new Guid("62c15bc4-42fd-45b8-ae5d-5cdf92c0b414"), new Guid("920ffcd4-6085-4d22-8d81-caf2dde21e70"), new Guid("33b6e056-e1e2-4173-97db-485593bf9e36"));
			DisbursementAccountingTransactionDisbursement.AssignedMultiplicity = Multiplicity.OneToOne;
			DisbursementAccountingTransactionDisbursement.IsIndexed = true;

			DisbursementAccountingTransactionDisbursement.AssociationType.ObjectType = this;

			DisbursementAccountingTransactionDisbursement.RoleType.ObjectType = DisbursementClass.Instance;;
			DisbursementAccountingTransactionDisbursement.RoleType.AssignedSingularName = "Disbursement";
			DisbursementAccountingTransactionDisbursement.RoleType.AssignedPluralName = "Disbursements";
			this.Roles.Disbursement = DisbursementAccountingTransactionDisbursement.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.Disbursement = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Disbursement]; 


		}

		internal class RolesType
		{
			internal RoleType Disbursement;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Disbursement;
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OrderValueClass : Class
	{
		public static OrderValueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrderValueClass() : base(AppsDomain.Instance, new Guid("a3ca36e6-960d-4e3a-96d0-6ca1d71d05d7"))
        {
			this.SingularName = "OrderValue";
			this.PluralName = "OrderValues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ea3a438f-6c57-48a0-9e04-5b84d1c7d8dc"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrderValueThroughAmount = new RelationType(AppsDomain.Instance, new Guid("077a33bc-a822-4a23-918c-7fcaacdc61d1"), new Guid("f38c5851-7187-4f53-8eaf-85edee7e733d"), new Guid("7ee1e68b-5bb5-4e72-b63d-83132346a503"));
			OrderValueThroughAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderValueThroughAmount.AssociationType.ObjectType = this;

			OrderValueThroughAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderValueThroughAmount.RoleType.AssignedSingularName = "ThroughAmount";
			OrderValueThroughAmount.RoleType.AssignedPluralName = "ThroughAmounts";
			OrderValueThroughAmount.RoleType.Scale = 2;
			OrderValueThroughAmount.RoleType.Precision = 19;
			this.Roles.ThroughAmount = OrderValueThroughAmount.RoleType;

			var OrderValueFromAmount = new RelationType(AppsDomain.Instance, new Guid("b25816e8-4b0c-4857-907f-7a391df2c55e"), new Guid("017aab24-a93c-4654-bc89-96e075d13c08"), new Guid("eedd52f8-0713-428e-b10a-a7da99b967aa"));
			OrderValueFromAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderValueFromAmount.AssociationType.ObjectType = this;

			OrderValueFromAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderValueFromAmount.RoleType.AssignedSingularName = "FromAmount";
			OrderValueFromAmount.RoleType.AssignedPluralName = "FromAmounts";
			OrderValueFromAmount.RoleType.Scale = 2;
			OrderValueFromAmount.RoleType.Precision = 19;
			this.Roles.FromAmount = OrderValueFromAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrderValueClass.Instance.ConcreteRoles.ThroughAmount = OrderValueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughAmount]; 

			OrderValueClass.Instance.ConcreteRoles.FromAmount = OrderValueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromAmount]; 


		}

		internal class RolesType
		{
			internal RoleType ThroughAmount;
			internal RoleType FromAmount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ThroughAmount;
			internal ConcreteRoleType FromAmount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class VatTariffClass : Class
	{
		public static VatTariffClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VatTariffClass() : base(AppsDomain.Instance, new Guid("a3f63642-b397-4281-ba7e-8c77e9f30658"))
        {
			this.SingularName = "VatTariff";
			this.PluralName = "VatTariffs";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b6f8389b-1eda-491a-912a-20d1e7983c85"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ObligationClass : Class
	{
		public static ObligationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ObligationClass() : base(AppsDomain.Instance, new Guid("a3fe34f9-7dfb-46fe-98ec-ed9a7d14ac19"))
        {
			this.SingularName = "Obligation";
			this.PluralName = "Obligations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("52eb01f7-d844-43b8-a038-42760fcf39a3"))
			{
				Subtype = Instance,
				Supertype = ExternalAccountingTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType AccountingTransactionDetail;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DerivedTotalAmount;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesInvoiceObjectStateClass : Class
	{
		public static SalesInvoiceObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesInvoiceObjectStateClass() : base(AppsDomain.Instance, new Guid("a4092f59-2baf-4041-83e6-5d50c8338a5c"))
        {
			this.SingularName = "SalesInvoiceObjectState";
			this.PluralName = "SalesInvoiceObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("fae00f24-ac20-4be5-83bf-0812d7e5f7f5"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class VatRateClass : Class
	{
		public static VatRateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VatRateClass() : base(AppsDomain.Instance, new Guid("a5e29ca1-80de-4de4-9085-b69f21550b5a"))
        {
			this.SingularName = "VatRate";
			this.PluralName = "VatRates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0c56a15f-507d-4cc8-a0f0-f3b2f0c623e3"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var VatRateVatCalculationMethod = new RelationType(AppsDomain.Instance, new Guid("0d6bd6c4-7220-45b4-891c-719f4bd141ce"), new Guid("f04be7c9-5f36-4cc2-8ad0-cad7386114da"), new Guid("2f66e429-ac12-4d6c-9f06-a5986b0667fc"));
			VatRateVatCalculationMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRateVatCalculationMethod.IsIndexed = true;

			VatRateVatCalculationMethod.AssociationType.ObjectType = this;

			VatRateVatCalculationMethod.RoleType.ObjectType = VatCalculationMethodClass.Instance;;
			VatRateVatCalculationMethod.RoleType.AssignedSingularName = "VatCalculationMethod";
			VatRateVatCalculationMethod.RoleType.AssignedPluralName = "VatCalculationMethods";
			this.Roles.VatCalculationMethod = VatRateVatCalculationMethod.RoleType;

			var VatRateVatReturnBox = new RelationType(AppsDomain.Instance, new Guid("36b9d86d-4e2e-4ff5-b167-8ea6c81dd6cc"), new Guid("8e37c73a-5508-432f-94c9-77d0159b0cc2"), new Guid("955c2b54-1aab-4eb0-b71d-3b6e4664e3b3"));
			VatRateVatReturnBox.AssignedMultiplicity = Multiplicity.ManyToMany;
			VatRateVatReturnBox.IsIndexed = true;

			VatRateVatReturnBox.AssociationType.ObjectType = this;

			VatRateVatReturnBox.RoleType.ObjectType = VatReturnBoxClass.Instance;;
			VatRateVatReturnBox.RoleType.AssignedSingularName = "VatReturnBox";
			VatRateVatReturnBox.RoleType.AssignedPluralName = "VatReturnBoxes";
			this.Roles.VatReturnBox = VatRateVatReturnBox.RoleType;

			var VatRateRate = new RelationType(AppsDomain.Instance, new Guid("3f1ca41a-8443-4d81-a112-48fa1e28728b"), new Guid("f95d3157-469c-454d-8e5b-57e52ac2c89c"), new Guid("abf7d332-7a32-4b1f-91dd-3bd3802b8efa"));
			VatRateRate.AssignedMultiplicity = Multiplicity.OneToOne;
			VatRateRate.AssociationType.ObjectType = this;

			VatRateRate.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			VatRateRate.RoleType.AssignedSingularName = "Rate";
			VatRateRate.RoleType.AssignedPluralName = "Rate";
			VatRateRate.RoleType.Scale = 2;
			VatRateRate.RoleType.Precision = 19;
			this.Roles.Rate = VatRateRate.RoleType;

			var VatRateVatPayableAccount = new RelationType(AppsDomain.Instance, new Guid("46cf5d68-cceb-4b49-933c-875e9614eb8b"), new Guid("deaf1d2c-6590-460e-9e16-0eaf68af6b3d"), new Guid("b4fdf839-5b01-432c-b165-9664a199d0bf"));
			VatRateVatPayableAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			VatRateVatPayableAccount.IsIndexed = true;

			VatRateVatPayableAccount.AssociationType.ObjectType = this;

			VatRateVatPayableAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			VatRateVatPayableAccount.RoleType.AssignedSingularName = "VatPayableAccount";
			VatRateVatPayableAccount.RoleType.AssignedPluralName = "VatPayableAccounts";
			this.Roles.VatPayableAccount = VatRateVatPayableAccount.RoleType;

			var VatRateTaxAuthority = new RelationType(AppsDomain.Instance, new Guid("5418fdea-366c-4e0b-b2e0-d49cfb12cbe5"), new Guid("b63a4251-c297-46cb-a2a3-b0d619abe398"), new Guid("52fc90c1-2de7-4076-8cbf-44174ebd25a2"));
			VatRateTaxAuthority.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRateTaxAuthority.IsIndexed = true;

			VatRateTaxAuthority.AssociationType.ObjectType = this;

			VatRateTaxAuthority.RoleType.ObjectType = OrganisationClass.Instance;;
			VatRateTaxAuthority.RoleType.AssignedSingularName = "TaxAuthority";
			VatRateTaxAuthority.RoleType.AssignedPluralName = "TaxAuthorities";
			this.Roles.TaxAuthority = VatRateTaxAuthority.RoleType;

			var VatRateVatRateUsage = new RelationType(AppsDomain.Instance, new Guid("5551f4ce-858f-4f29-9e92-3c2c893bb44b"), new Guid("bf0f6d49-1753-42f4-99e6-649e64bb0629"), new Guid("be2f8700-bd7d-4dd1-91ff-637ddc6a07a6"));
			VatRateVatRateUsage.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRateVatRateUsage.IsIndexed = true;

			VatRateVatRateUsage.AssociationType.ObjectType = this;

			VatRateVatRateUsage.RoleType.ObjectType = VatRateUsageClass.Instance;;
			VatRateVatRateUsage.RoleType.AssignedSingularName = "VatRateUsage";
			VatRateVatRateUsage.RoleType.AssignedPluralName = "VatRateUsages";
			this.Roles.VatRateUsage = VatRateVatRateUsage.RoleType;

			var VatRateVatRatePurchaseKind = new RelationType(AppsDomain.Instance, new Guid("821df580-26d4-415c-b2ea-3e96a08c2f62"), new Guid("5678eef7-6892-4c47-900d-85b5c5c08940"), new Guid("bb7c23b8-0a01-4afa-91a6-7816bbaa803c"));
			VatRateVatRatePurchaseKind.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRateVatRatePurchaseKind.IsIndexed = true;

			VatRateVatRatePurchaseKind.AssociationType.ObjectType = this;

			VatRateVatRatePurchaseKind.RoleType.ObjectType = VatRatePurchaseKindClass.Instance;;
			VatRateVatRatePurchaseKind.RoleType.AssignedSingularName = "VatRatePurchaseKind";
			VatRateVatRatePurchaseKind.RoleType.AssignedPluralName = "VatRatePurchaseKinds";
			this.Roles.VatRatePurchaseKind = VatRateVatRatePurchaseKind.RoleType;

			var VatRateVatTariff = new RelationType(AppsDomain.Instance, new Guid("8b37058f-49bd-4cc6-8c26-9a9e7c6700ad"), new Guid("71231b78-14e7-41c3-8691-745f4dd9c919"), new Guid("00945490-ff10-440b-be3b-de563caf892f"));
			VatRateVatTariff.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRateVatTariff.IsIndexed = true;

			VatRateVatTariff.AssociationType.ObjectType = this;

			VatRateVatTariff.RoleType.ObjectType = VatTariffClass.Instance;;
			VatRateVatTariff.RoleType.AssignedSingularName = "VatTariff";
			VatRateVatTariff.RoleType.AssignedPluralName = "VatTariffs";
			this.Roles.VatTariff = VatRateVatTariff.RoleType;

			var VatRatePaymentFrequency = new RelationType(AppsDomain.Instance, new Guid("958c1fda-0126-4b0a-8967-5d9df3ba50dc"), new Guid("edcb9612-a4d4-4ddc-971c-48b7dfa6b03c"), new Guid("9e77b9ad-9031-4766-a2f3-33c875395a79"));
			VatRatePaymentFrequency.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRatePaymentFrequency.IsIndexed = true;

			VatRatePaymentFrequency.AssociationType.ObjectType = this;

			VatRatePaymentFrequency.RoleType.ObjectType = TimeFrequencyClass.Instance;;
			VatRatePaymentFrequency.RoleType.AssignedSingularName = "PaymentFrequency";
			VatRatePaymentFrequency.RoleType.AssignedPluralName = "PaymentFrequencies";
			this.Roles.PaymentFrequency = VatRatePaymentFrequency.RoleType;

			var VatRateVatToPayAccount = new RelationType(AppsDomain.Instance, new Guid("b2aa3989-8e65-4fdb-9654-46ae615fd73a"), new Guid("74a0152e-f989-4bf6-8164-7e515876a65a"), new Guid("5b899c69-af8c-4655-9809-b4158738e1db"));
			VatRateVatToPayAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRateVatToPayAccount.IsIndexed = true;

			VatRateVatToPayAccount.AssociationType.ObjectType = this;

			VatRateVatToPayAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			VatRateVatToPayAccount.RoleType.AssignedSingularName = "VatToPayAccount";
			VatRateVatToPayAccount.RoleType.AssignedPluralName = "VatToPayAccounts";
			this.Roles.VatToPayAccount = VatRateVatToPayAccount.RoleType;

			var VatRateEuSalesListType = new RelationType(AppsDomain.Instance, new Guid("b628964e-5139-4c32-a2c1-239deaff70e8"), new Guid("229bebd5-4899-4f7d-bebd-266ee211f72a"), new Guid("c51def22-77d1-4dc5-bc3e-b55095ae5af1"));
			VatRateEuSalesListType.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRateEuSalesListType.IsIndexed = true;

			VatRateEuSalesListType.AssociationType.ObjectType = this;

			VatRateEuSalesListType.RoleType.ObjectType = EuSalesListTypeClass.Instance;;
			VatRateEuSalesListType.RoleType.AssignedSingularName = "EuSalesListType";
			VatRateEuSalesListType.RoleType.AssignedPluralName = "EuSalesListTypes";
			this.Roles.EuSalesListType = VatRateEuSalesListType.RoleType;

			var VatRateVatToReceiveAccount = new RelationType(AppsDomain.Instance, new Guid("cbd85372-08d1-4c6d-81a9-02d76c874c46"), new Guid("235cfb9b-1cea-4e37-8e35-f9993ca175b6"), new Guid("41b72bc0-f2b6-4895-808b-76a5b6fb9035"));
			VatRateVatToReceiveAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			VatRateVatToReceiveAccount.IsIndexed = true;

			VatRateVatToReceiveAccount.AssociationType.ObjectType = this;

			VatRateVatToReceiveAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			VatRateVatToReceiveAccount.RoleType.AssignedSingularName = "VatToReceiveAccount";
			VatRateVatToReceiveAccount.RoleType.AssignedPluralName = "VatToReceiveAccounts";
			this.Roles.VatToReceiveAccount = VatRateVatToReceiveAccount.RoleType;

			var VatRateVatReceivableAccount = new RelationType(AppsDomain.Instance, new Guid("cf879781-9f52-438c-b0e0-fd23f336bead"), new Guid("524372df-0707-4a60-b5f6-1305d197da36"), new Guid("c8831b10-b22f-49d4-a551-05b0c9f6ade2"));
			VatRateVatReceivableAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			VatRateVatReceivableAccount.IsIndexed = true;

			VatRateVatReceivableAccount.AssociationType.ObjectType = this;

			VatRateVatReceivableAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			VatRateVatReceivableAccount.RoleType.AssignedSingularName = "VatReceivableAccount";
			VatRateVatReceivableAccount.RoleType.AssignedPluralName = "VatReceivableAccounts";
			this.Roles.VatReceivableAccount = VatRateVatReceivableAccount.RoleType;

			var VatRateReverseCharge = new RelationType(AppsDomain.Instance, new Guid("e6242c51-98f9-408d-9dd8-07e3c639c82e"), new Guid("11486112-1786-4d73-aee7-cdc1e8b271e3"), new Guid("5224e2d8-7d48-4f63-97ff-796232781f81"));
			VatRateReverseCharge.AssignedMultiplicity = Multiplicity.OneToOne;
			VatRateReverseCharge.AssociationType.ObjectType = this;

			VatRateReverseCharge.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			VatRateReverseCharge.RoleType.AssignedSingularName = "ReverseCharge";
			VatRateReverseCharge.RoleType.AssignedPluralName = "ReverseCharges";
			this.Roles.ReverseCharge = VatRateReverseCharge.RoleType;


		}

		internal override void SetRelationTypes()
		{
			VatRateClass.Instance.ConcreteRoles.VatCalculationMethod = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatCalculationMethod]; 

			VatRateClass.Instance.ConcreteRoles.VatReturnBox = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatReturnBox]; 

			VatRateClass.Instance.ConcreteRoles.Rate = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Rate]; 

			VatRateClass.Instance.ConcreteRoles.VatPayableAccount = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatPayableAccount]; 

			VatRateClass.Instance.ConcreteRoles.TaxAuthority = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TaxAuthority]; 

			VatRateClass.Instance.ConcreteRoles.VatRateUsage = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRateUsage]; 

			VatRateClass.Instance.ConcreteRoles.VatRatePurchaseKind = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRatePurchaseKind]; 

			VatRateClass.Instance.ConcreteRoles.VatTariff = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatTariff]; 

			VatRateClass.Instance.ConcreteRoles.PaymentFrequency = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentFrequency]; 

			VatRateClass.Instance.ConcreteRoles.VatToPayAccount = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatToPayAccount]; 

			VatRateClass.Instance.ConcreteRoles.EuSalesListType = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EuSalesListType]; 

			VatRateClass.Instance.ConcreteRoles.VatToReceiveAccount = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatToReceiveAccount]; 

			VatRateClass.Instance.ConcreteRoles.VatReceivableAccount = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatReceivableAccount]; 

			VatRateClass.Instance.ConcreteRoles.ReverseCharge = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReverseCharge]; 


		}

		internal class RolesType
		{
			internal RoleType VatCalculationMethod;
			internal RoleType VatReturnBox;
			internal RoleType Rate;
			internal RoleType VatPayableAccount;
			internal RoleType TaxAuthority;
			internal RoleType VatRateUsage;
			internal RoleType VatRatePurchaseKind;
			internal RoleType VatTariff;
			internal RoleType PaymentFrequency;
			internal RoleType VatToPayAccount;
			internal RoleType EuSalesListType;
			internal RoleType VatToReceiveAccount;
			internal RoleType VatReceivableAccount;
			internal RoleType ReverseCharge;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType VatCalculationMethod;
			internal ConcreteRoleType VatReturnBox;
			internal ConcreteRoleType Rate;
			internal ConcreteRoleType VatPayableAccount;
			internal ConcreteRoleType TaxAuthority;
			internal ConcreteRoleType VatRateUsage;
			internal ConcreteRoleType VatRatePurchaseKind;
			internal ConcreteRoleType VatTariff;
			internal ConcreteRoleType PaymentFrequency;
			internal ConcreteRoleType VatToPayAccount;
			internal ConcreteRoleType EuSalesListType;
			internal ConcreteRoleType VatToReceiveAccount;
			internal ConcreteRoleType VatReceivableAccount;
			internal ConcreteRoleType ReverseCharge;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class InvoiceInterface: Interface
	{
		public static InvoiceInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal InvoiceInterface() : base(AppsDomain.Instance, new Guid("a6f4eedb-b0b5-491d-bcc0-09d2bc109e86"))
        {
			this.SingularName = "Invoice";
			this.PluralName = "Invoices";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0e8b30cb-83f9-44c5-b2af-217aff5cbc66"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("0fdd44b5-be17-486b-bf90-6412bc8aa618"))
			{
				Subtype = Instance,
				Supertype = LocalisedInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("3001673a-65d0-4a3d-b6b1-25582d2923f8"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("595dc7f5-8075-4293-b177-505010a5a237"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a445c494-a0ee-427b-95e2-7dbae1e44769"))
			{
				Subtype = Instance,
				Supertype = PrintableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("c1fe0a2d-0713-4182-b7c0-be95dae607a7"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var InvoiceTotalShippingAndHandlingCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("19019399-963f-4075-8754-16e1e5a4c496"), new Guid("43580c50-7831-48c7-afdf-5c4e23bcec93"), new Guid("371d3a45-0283-4c8d-850f-acc9c2395464"));
			InvoiceTotalShippingAndHandlingCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalShippingAndHandlingCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceTotalShippingAndHandlingCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalShippingAndHandlingCustomerCurrency.RoleType.AssignedSingularName = "TotalShippingAndHandlingCustomerCurrency";
			InvoiceTotalShippingAndHandlingCustomerCurrency.RoleType.AssignedPluralName = "TotalShippingAndHandlingsCustomerCurrency";
			InvoiceTotalShippingAndHandlingCustomerCurrency.RoleType.Scale = 2;
			InvoiceTotalShippingAndHandlingCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalShippingAndHandlingCustomerCurrency = InvoiceTotalShippingAndHandlingCustomerCurrency.RoleType;

			var InvoiceCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("1c535b3f-bb97-43a8-bd29-29c4dc267814"), new Guid("d3155310-1267-4780-b69d-4dd47ef15e73"), new Guid("2603b50f-78b9-429c-be30-38949bdec59a"));
			InvoiceCustomerCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			InvoiceCustomerCurrency.IsDerived = true;
			InvoiceCustomerCurrency.IsIndexed = true;

			InvoiceCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceCustomerCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			InvoiceCustomerCurrency.RoleType.AssignedSingularName = "CustomerCurrency";
			InvoiceCustomerCurrency.RoleType.AssignedPluralName = "CustomerCurrencies";
			this.Roles.CustomerCurrency = InvoiceCustomerCurrency.RoleType;

			var InvoiceDescription = new RelationType(AppsDomain.Instance, new Guid("2d82521d-30bd-4185-84c7-4dfe08b5ddef"), new Guid("aa6230a9-7a9e-4d42-a14a-49b1c3b382ab"), new Guid("5c1fbd73-39e2-4a4a-b58b-2e6c7a110755"));
			InvoiceDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceDescription.AssociationType.ObjectType = this;

			InvoiceDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InvoiceDescription.RoleType.AssignedSingularName = "Description";
			InvoiceDescription.RoleType.AssignedPluralName = "Descriptions";
			InvoiceDescription.RoleType.Size = 256;
			this.Roles.Description = InvoiceDescription.RoleType;

			var InvoiceShippingAndHandlingCharge = new RelationType(AppsDomain.Instance, new Guid("2f7d19a8-75e1-4c95-b60f-60343f2dd4bc"), new Guid("31c04533-c845-4b71-bf88-79e4c3ad8ec4"), new Guid("6bdaa705-8ea0-4df2-936a-0b392556a21d"));
			InvoiceShippingAndHandlingCharge.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceShippingAndHandlingCharge.IsIndexed = true;

			InvoiceShippingAndHandlingCharge.AssociationType.ObjectType = this;

			InvoiceShippingAndHandlingCharge.RoleType.ObjectType = ShippingAndHandlingChargeClass.Instance;;
			InvoiceShippingAndHandlingCharge.RoleType.AssignedSingularName = "ShippingAndHandlingCharge";
			InvoiceShippingAndHandlingCharge.RoleType.AssignedPluralName = "ShippingAndHandlingCharges";
			this.Roles.ShippingAndHandlingCharge = InvoiceShippingAndHandlingCharge.RoleType;

			var InvoiceTotalFeeCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("3aa6c5be-ae74-401e-8d03-420230c4ea42"), new Guid("3d5e1fcc-a9d7-4c30-9e3b-90091f5ec63e"), new Guid("133d6dcb-5429-42aa-b788-2eccd2633139"));
			InvoiceTotalFeeCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalFeeCustomerCurrency.IsDerived = true;
			InvoiceTotalFeeCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceTotalFeeCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalFeeCustomerCurrency.RoleType.AssignedSingularName = "TotalFeeCustomerCurrency";
			InvoiceTotalFeeCustomerCurrency.RoleType.AssignedPluralName = "TotalFeesCustomerCurrency";
			InvoiceTotalFeeCustomerCurrency.RoleType.Scale = 2;
			InvoiceTotalFeeCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalFeeCustomerCurrency = InvoiceTotalFeeCustomerCurrency.RoleType;

			var InvoiceFee = new RelationType(AppsDomain.Instance, new Guid("3b1a0c47-dd3e-406c-a1e7-bc88f7a10794"), new Guid("7ce35340-fbb1-4689-a4e5-2a7f17455d37"), new Guid("72db7683-8659-441f-ae23-0407e4e11c11"));
			InvoiceFee.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceFee.IsIndexed = true;

			InvoiceFee.AssociationType.ObjectType = this;

			InvoiceFee.RoleType.ObjectType = FeeClass.Instance;;
			InvoiceFee.RoleType.AssignedSingularName = "Fee";
			InvoiceFee.RoleType.AssignedPluralName = "Fees";
			this.Roles.Fee = InvoiceFee.RoleType;

			var InvoiceTotalExVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("3b6e0ea5-d9b9-4673-89e9-1491b8e6a691"), new Guid("cd0ba793-77fb-44b4-bf1c-4bf32a98d254"), new Guid("d677c967-568a-4c32-a822-caba4ea5990c"));
			InvoiceTotalExVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalExVatCustomerCurrency.IsDerived = true;
			InvoiceTotalExVatCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceTotalExVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalExVatCustomerCurrency.RoleType.AssignedSingularName = "TotalExVatCustomerCurrency";
			InvoiceTotalExVatCustomerCurrency.RoleType.AssignedPluralName = "TotalExVatsCustomerCurrency";
			InvoiceTotalExVatCustomerCurrency.RoleType.Scale = 2;
			InvoiceTotalExVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalExVatCustomerCurrency = InvoiceTotalExVatCustomerCurrency.RoleType;

			var InvoiceCustomerReference = new RelationType(AppsDomain.Instance, new Guid("4b2eedbb-ec59-4e18-949f-f467e41f6401"), new Guid("b41474a8-482f-458f-b70d-b11e97129ea0"), new Guid("5bab4dea-3566-4421-96c5-27b774b6542a"));
			InvoiceCustomerReference.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceCustomerReference.AssociationType.ObjectType = this;

			InvoiceCustomerReference.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InvoiceCustomerReference.RoleType.AssignedSingularName = "CustomerReference";
			InvoiceCustomerReference.RoleType.AssignedPluralName = "CustomerReferences";
			InvoiceCustomerReference.RoleType.Size = 256;
			this.Roles.CustomerReference = InvoiceCustomerReference.RoleType;

			var InvoiceDiscountAdjustment = new RelationType(AppsDomain.Instance, new Guid("4b3a3ad0-d624-46f1-a53c-f79980b50793"), new Guid("72a0c734-9199-45fd-8264-a80721a016f2"), new Guid("95e67307-5e1b-451a-ab4a-c93079b25c76"));
			InvoiceDiscountAdjustment.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceDiscountAdjustment.IsIndexed = true;

			InvoiceDiscountAdjustment.AssociationType.ObjectType = this;

			InvoiceDiscountAdjustment.RoleType.ObjectType = DiscountAdjustmentClass.Instance;;
			InvoiceDiscountAdjustment.RoleType.AssignedSingularName = "DiscountAdjustment";
			InvoiceDiscountAdjustment.RoleType.AssignedPluralName = "DiscountAdjustments";
			this.Roles.DiscountAdjustment = InvoiceDiscountAdjustment.RoleType;

			var InvoiceAmountPaid = new RelationType(AppsDomain.Instance, new Guid("4d3f69a0-6e9d-4ba3-acd8-e5dab2a7f401"), new Guid("4ac19707-3c95-4b7d-b281-2f9d86c3eeb9"), new Guid("15779f7b-07ce-4373-a9cd-1ee5690ddbfc"));
			InvoiceAmountPaid.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceAmountPaid.IsDerived = true;
			InvoiceAmountPaid.AssociationType.ObjectType = this;

			InvoiceAmountPaid.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceAmountPaid.RoleType.AssignedSingularName = "AmountPaid";
			InvoiceAmountPaid.RoleType.AssignedPluralName = "AmountsPaid";
			InvoiceAmountPaid.RoleType.Scale = 2;
			InvoiceAmountPaid.RoleType.Precision = 19;
			this.Roles.AmountPaid = InvoiceAmountPaid.RoleType;

			var InvoiceTotalDiscount = new RelationType(AppsDomain.Instance, new Guid("6b474ddd-c2fd-4db1-bf18-44c86a309d53"), new Guid("01576aed-1f77-47db-bf04-40aa5dcae63a"), new Guid("f0bd433a-f5cc-4a6d-be5f-8f09594aa566"));
			InvoiceTotalDiscount.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalDiscount.IsDerived = true;
			InvoiceTotalDiscount.AssociationType.ObjectType = this;

			InvoiceTotalDiscount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalDiscount.RoleType.AssignedSingularName = "TotalDiscount";
			InvoiceTotalDiscount.RoleType.AssignedPluralName = "TotalDiscounts";
			InvoiceTotalDiscount.RoleType.Scale = 2;
			InvoiceTotalDiscount.RoleType.Precision = 19;
			this.Roles.TotalDiscount = InvoiceTotalDiscount.RoleType;

			var InvoiceBillingAccount = new RelationType(AppsDomain.Instance, new Guid("6ea961d5-89fc-4526-922a-80538ecb5654"), new Guid("66c5cfdd-6af4-4d75-b826-843be3b01bca"), new Guid("f560bb3d-f855-4ec3-a5e7-4bd6c4da2595"));
			InvoiceBillingAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			InvoiceBillingAccount.IsIndexed = true;

			InvoiceBillingAccount.AssociationType.ObjectType = this;

			InvoiceBillingAccount.RoleType.ObjectType = BillingAccountClass.Instance;;
			InvoiceBillingAccount.RoleType.AssignedSingularName = "BillingAccount";
			InvoiceBillingAccount.RoleType.AssignedPluralName = "BillingAccounts";
			this.Roles.BillingAccount = InvoiceBillingAccount.RoleType;

			var InvoiceTotalIncVat = new RelationType(AppsDomain.Instance, new Guid("7b6ab1ed-845d-4671-bda2-43ad2327ea53"), new Guid("d0994e3f-4741-4f9e-9f4f-8923ed3afdf3"), new Guid("4b4902c0-780d-4de2-97ff-54a5f3bdc521"));
			InvoiceTotalIncVat.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalIncVat.IsDerived = true;
			InvoiceTotalIncVat.AssociationType.ObjectType = this;

			InvoiceTotalIncVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalIncVat.RoleType.AssignedSingularName = "TotalIncVat";
			InvoiceTotalIncVat.RoleType.AssignedPluralName = "TotalsIncVat";
			InvoiceTotalIncVat.RoleType.Scale = 2;
			InvoiceTotalIncVat.RoleType.Precision = 19;
			this.Roles.TotalIncVat = InvoiceTotalIncVat.RoleType;

			var InvoiceTotalSurcharge = new RelationType(AppsDomain.Instance, new Guid("7e8de8bd-f1c0-4fa5-a629-34d9d5f71b85"), new Guid("483b0b71-a4a8-4606-a432-d98d8bd262a2"), new Guid("32e8201c-9e71-48e7-ae20-972e14ea4aeb"));
			InvoiceTotalSurcharge.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalSurcharge.IsDerived = true;
			InvoiceTotalSurcharge.AssociationType.ObjectType = this;

			InvoiceTotalSurcharge.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalSurcharge.RoleType.AssignedSingularName = "TotalSurcharge";
			InvoiceTotalSurcharge.RoleType.AssignedPluralName = "TotalSurcharges";
			InvoiceTotalSurcharge.RoleType.Scale = 2;
			InvoiceTotalSurcharge.RoleType.Precision = 19;
			this.Roles.TotalSurcharge = InvoiceTotalSurcharge.RoleType;

			var InvoiceTotalBasePrice = new RelationType(AppsDomain.Instance, new Guid("7fda150d-44c8-45a9-8048-dfe38d936c3e"), new Guid("e2199200-562f-474d-a822-094fba167dc6"), new Guid("09cba9f7-d85f-4c54-a857-c28f22f0eaae"));
			InvoiceTotalBasePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalBasePrice.IsDerived = true;
			InvoiceTotalBasePrice.AssociationType.ObjectType = this;

			InvoiceTotalBasePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalBasePrice.RoleType.AssignedSingularName = "TotalBasePrice";
			InvoiceTotalBasePrice.RoleType.AssignedPluralName = "TotalBasePrices";
			InvoiceTotalBasePrice.RoleType.Scale = 2;
			InvoiceTotalBasePrice.RoleType.Precision = 19;
			this.Roles.TotalBasePrice = InvoiceTotalBasePrice.RoleType;

			var InvoiceTotalVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("8247ec6f-e4b2-424c-922b-a6a5d6b05654"), new Guid("5dd3f140-ff9d-4f87-930c-94b135dd9b7f"), new Guid("d8cbb429-edc1-4d2c-90d3-99b7a4caabb8"));
			InvoiceTotalVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalVatCustomerCurrency.IsDerived = true;
			InvoiceTotalVatCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceTotalVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalVatCustomerCurrency.RoleType.AssignedSingularName = "TotalVatCustomerCurrency";
			InvoiceTotalVatCustomerCurrency.RoleType.AssignedPluralName = "TotalVatsCustomerCurrency";
			InvoiceTotalVatCustomerCurrency.RoleType.Scale = 2;
			InvoiceTotalVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalVatCustomerCurrency = InvoiceTotalVatCustomerCurrency.RoleType;

			var InvoiceInvoiceDate = new RelationType(AppsDomain.Instance, new Guid("82541f62-bf0e-4e33-9971-15a5a4fa4469"), new Guid("b3579af4-1c8e-46c5-bc1c-a9d7711a4a48"), new Guid("d54fdbf9-c580-4a49-b058-28aab77d81e0"));
			InvoiceInvoiceDate.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceInvoiceDate.AssociationType.ObjectType = this;

			InvoiceInvoiceDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			InvoiceInvoiceDate.RoleType.AssignedSingularName = "InvoiceDate";
			InvoiceInvoiceDate.RoleType.AssignedPluralName = "InvoiceDates";
			this.Roles.InvoiceDate = InvoiceInvoiceDate.RoleType;

			var InvoiceEntryDate = new RelationType(AppsDomain.Instance, new Guid("8798a760-de3d-4210-bd22-165582728f36"), new Guid("d0d6a00a-2d79-4798-b51f-7e6dfb8551d5"), new Guid("c1f88c71-2415-4928-ae3b-16c7f85af30c"));
			InvoiceEntryDate.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceEntryDate.IsDerived = true;
			InvoiceEntryDate.AssociationType.ObjectType = this;

			InvoiceEntryDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			InvoiceEntryDate.RoleType.AssignedSingularName = "EntryDate";
			InvoiceEntryDate.RoleType.AssignedPluralName = "EntryDates";
			this.Roles.EntryDate = InvoiceEntryDate.RoleType;

			var InvoiceTotalIncVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("8e1b6a86-eceb-412e-a246-bd95b564c87b"), new Guid("8e08972a-f735-4a67-b941-7136e29434be"), new Guid("bd40de52-c9c7-48e0-9129-b1d471a03097"));
			InvoiceTotalIncVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalIncVatCustomerCurrency.IsDerived = true;
			InvoiceTotalIncVatCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceTotalIncVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalIncVatCustomerCurrency.RoleType.AssignedSingularName = "TotalIncVatCustomerCurrency";
			InvoiceTotalIncVatCustomerCurrency.RoleType.AssignedPluralName = "TotalIncVatsCustomerCurrency";
			InvoiceTotalIncVatCustomerCurrency.RoleType.Scale = 2;
			InvoiceTotalIncVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalIncVatCustomerCurrency = InvoiceTotalIncVatCustomerCurrency.RoleType;

			var InvoiceTotalShippingAndHandling = new RelationType(AppsDomain.Instance, new Guid("94029787-f838-47bb-9617-807a8514a350"), new Guid("92badbf6-7d16-46b2-b214-1ea26855970d"), new Guid("2dc528f7-451e-4570-922b-649d9448ed11"));
			InvoiceTotalShippingAndHandling.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalShippingAndHandling.IsDerived = true;
			InvoiceTotalShippingAndHandling.AssociationType.ObjectType = this;

			InvoiceTotalShippingAndHandling.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalShippingAndHandling.RoleType.AssignedSingularName = "TotalShippingAndHandling";
			InvoiceTotalShippingAndHandling.RoleType.AssignedPluralName = "TotalsShippingAndHandling";
			InvoiceTotalShippingAndHandling.RoleType.Scale = 2;
			InvoiceTotalShippingAndHandling.RoleType.Precision = 19;
			this.Roles.TotalShippingAndHandling = InvoiceTotalShippingAndHandling.RoleType;

			var InvoiceTotalBasePriceCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("96baf5df-43b2-4f4b-aca9-bdd2432318a7"), new Guid("52eba17e-91db-4a52-8b4e-98a5eadbde84"), new Guid("1461fa7e-cc65-4006-a8be-cc6220291b7d"));
			InvoiceTotalBasePriceCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalBasePriceCustomerCurrency.IsDerived = true;
			InvoiceTotalBasePriceCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceTotalBasePriceCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalBasePriceCustomerCurrency.RoleType.AssignedSingularName = "TotalBasePriceCustomerCurrency";
			InvoiceTotalBasePriceCustomerCurrency.RoleType.AssignedPluralName = "TotalBasePricesCustomerCurrency";
			InvoiceTotalBasePriceCustomerCurrency.RoleType.Scale = 2;
			InvoiceTotalBasePriceCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalBasePriceCustomerCurrency = InvoiceTotalBasePriceCustomerCurrency.RoleType;

			var InvoiceSurchargeAdjustment = new RelationType(AppsDomain.Instance, new Guid("982949e0-87ac-400c-8830-a779b75e10ad"), new Guid("0892c266-1b04-4d66-b344-1e29ddf09bd4"), new Guid("f1fb8739-1cb1-4080-ac63-b78512218d3a"));
			InvoiceSurchargeAdjustment.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceSurchargeAdjustment.IsIndexed = true;

			InvoiceSurchargeAdjustment.AssociationType.ObjectType = this;

			InvoiceSurchargeAdjustment.RoleType.ObjectType = SurchargeAdjustmentClass.Instance;;
			InvoiceSurchargeAdjustment.RoleType.AssignedSingularName = "SurchargeAdjustment";
			InvoiceSurchargeAdjustment.RoleType.AssignedPluralName = "SurchargeAdjustments";
			this.Roles.SurchargeAdjustment = InvoiceSurchargeAdjustment.RoleType;

			var InvoiceTotalExVat = new RelationType(AppsDomain.Instance, new Guid("9eec85a4-e41a-4ca2-82fa-2dc0aa45c9d5"), new Guid("26c9285b-4c0e-443e-914b-ceb95d37a8fe"), new Guid("4d9bb0e9-23b1-429e-bf61-2fa3b9afb2b8"));
			InvoiceTotalExVat.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalExVat.IsDerived = true;
			InvoiceTotalExVat.AssociationType.ObjectType = this;

			InvoiceTotalExVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalExVat.RoleType.AssignedSingularName = "TotalExVat";
			InvoiceTotalExVat.RoleType.AssignedPluralName = "TotalsExVat";
			InvoiceTotalExVat.RoleType.Scale = 2;
			InvoiceTotalExVat.RoleType.Precision = 19;
			this.Roles.TotalExVat = InvoiceTotalExVat.RoleType;

			var InvoiceInvoiceTerm = new RelationType(AppsDomain.Instance, new Guid("9ff2d65b-0478-41cc-b70b-0df90cdbe190"), new Guid("38654202-df58-4f2a-9c8d-094fb511a19a"), new Guid("a12bdf85-5c6d-43e4-92b2-8f2fefc03e3e"));
			InvoiceInvoiceTerm.AssignedMultiplicity = Multiplicity.OneToMany;
			InvoiceInvoiceTerm.IsIndexed = true;

			InvoiceInvoiceTerm.AssociationType.ObjectType = this;

			InvoiceInvoiceTerm.RoleType.ObjectType = InvoiceTermClass.Instance;;
			InvoiceInvoiceTerm.RoleType.AssignedSingularName = "InvoiceTerm";
			InvoiceInvoiceTerm.RoleType.AssignedPluralName = "InvoiceTerms";
			this.Roles.InvoiceTerm = InvoiceInvoiceTerm.RoleType;

			var InvoiceTotalSurchargeCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("a9504981-4b3e-406c-9fc8-64204efb1deb"), new Guid("409180f3-1b30-457d-86dd-44d4ee834b3e"), new Guid("740953b9-578e-4d0e-916d-5e283a1825be"));
			InvoiceTotalSurchargeCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalSurchargeCustomerCurrency.IsDerived = true;
			InvoiceTotalSurchargeCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceTotalSurchargeCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalSurchargeCustomerCurrency.RoleType.AssignedSingularName = "TotalSurchargeCustomerCurrency";
			InvoiceTotalSurchargeCustomerCurrency.RoleType.AssignedPluralName = "TotalSurchargesCustomerCurrency";
			InvoiceTotalSurchargeCustomerCurrency.RoleType.Scale = 2;
			InvoiceTotalSurchargeCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalSurchargeCustomerCurrency = InvoiceTotalSurchargeCustomerCurrency.RoleType;

			var InvoiceInvoiceNumber = new RelationType(AppsDomain.Instance, new Guid("ab342937-1e58-4cd7-99b5-c8a5e7afe317"), new Guid("0cd0981d-d26b-42e4-a50d-9747a1171b12"), new Guid("431bbc5d-4de6-4cee-aa2d-f1f5c6e7e745"));
			InvoiceInvoiceNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceInvoiceNumber.AssociationType.ObjectType = this;

			InvoiceInvoiceNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InvoiceInvoiceNumber.RoleType.AssignedSingularName = "InvoiceNumber";
			InvoiceInvoiceNumber.RoleType.AssignedPluralName = "InvoiceNumbers";
			InvoiceInvoiceNumber.RoleType.Size = 256;
			this.Roles.InvoiceNumber = InvoiceInvoiceNumber.RoleType;

			var InvoiceMessage = new RelationType(AppsDomain.Instance, new Guid("b298c12c-620b-4cf2-b47e-df17afc65552"), new Guid("4eff42a0-dfe5-440c-a2d2-7612ece8ff11"), new Guid("92365fb1-d257-4fbd-81e4-097ef6d2405e"));
			InvoiceMessage.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceMessage.AssociationType.ObjectType = this;

			InvoiceMessage.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InvoiceMessage.RoleType.AssignedSingularName = "Message";
			InvoiceMessage.RoleType.AssignedPluralName = "Messages";
			InvoiceMessage.RoleType.Size = -1;
			this.Roles.Message = InvoiceMessage.RoleType;

			var InvoiceVatRegime = new RelationType(AppsDomain.Instance, new Guid("c2ecfd15-7662-45b4-99bd-9093ca108d23"), new Guid("32efeb84-a275-4b14-ba1f-aa99ba1bc776"), new Guid("4e4351e1-7174-4337-b448-bd3f79e3aaa4"));
			InvoiceVatRegime.AssignedMultiplicity = Multiplicity.ManyToOne;
			InvoiceVatRegime.IsIndexed = true;

			InvoiceVatRegime.AssociationType.ObjectType = this;

			InvoiceVatRegime.RoleType.ObjectType = VatRegimeClass.Instance;;
			InvoiceVatRegime.RoleType.AssignedSingularName = "VatRegime";
			InvoiceVatRegime.RoleType.AssignedPluralName = "VatRegimes";
			this.Roles.VatRegime = InvoiceVatRegime.RoleType;

			var InvoiceTotalDiscountCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("c6a896be-d9e1-40b1-9f85-52dbf2886a58"), new Guid("a6369011-976f-49eb-bd82-69f82ab580f0"), new Guid("7032574d-2cb1-4e08-8d4d-1eb102502c63"));
			InvoiceTotalDiscountCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalDiscountCustomerCurrency.IsDerived = true;
			InvoiceTotalDiscountCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceTotalDiscountCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalDiscountCustomerCurrency.RoleType.AssignedSingularName = "TotalDiscountCustomerCurrency";
			InvoiceTotalDiscountCustomerCurrency.RoleType.AssignedPluralName = "TotalDiscountsCustomerCurrency";
			InvoiceTotalDiscountCustomerCurrency.RoleType.Scale = 2;
			InvoiceTotalDiscountCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalDiscountCustomerCurrency = InvoiceTotalDiscountCustomerCurrency.RoleType;

			var InvoiceTotalVat = new RelationType(AppsDomain.Instance, new Guid("c7350047-9282-41c8-8d82-4e1f86369e9c"), new Guid("0468ccd7-0e03-4bff-8812-ee1f979a6a3f"), new Guid("09a4e368-3d7e-4dd5-8708-fa9ff5bddc4b"));
			InvoiceTotalVat.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalVat.IsDerived = true;
			InvoiceTotalVat.AssociationType.ObjectType = this;

			InvoiceTotalVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalVat.RoleType.AssignedSingularName = "TotalVat";
			InvoiceTotalVat.RoleType.AssignedPluralName = "TotalsVat";
			InvoiceTotalVat.RoleType.Scale = 2;
			InvoiceTotalVat.RoleType.Precision = 19;
			this.Roles.TotalVat = InvoiceTotalVat.RoleType;

			var InvoiceTotalFee = new RelationType(AppsDomain.Instance, new Guid("fa826458-5423-43dd-b02f-fe2673a2d0f3"), new Guid("ac559656-d5c1-4325-a267-9775136a25af"), new Guid("837d36ee-f23f-45bc-87a9-9760d08f29c4"));
			InvoiceTotalFee.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceTotalFee.IsDerived = true;
			InvoiceTotalFee.AssociationType.ObjectType = this;

			InvoiceTotalFee.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceTotalFee.RoleType.AssignedSingularName = "TotalFee";
			InvoiceTotalFee.RoleType.AssignedPluralName = "TotalsFee";
			InvoiceTotalFee.RoleType.Scale = 2;
			InvoiceTotalFee.RoleType.Precision = 19;
			this.Roles.TotalFee = InvoiceTotalFee.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesInvoiceClass.Instance.ConcreteRoles.TotalShippingAndHandlingCustomerCurrency = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalShippingAndHandlingCustomerCurrency]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalShippingAndHandlingCustomerCurrency = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalShippingAndHandlingCustomerCurrency]; 

			SalesInvoiceClass.Instance.ConcreteRoles.CustomerCurrency = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerCurrency]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.CustomerCurrency = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerCurrency]; 

			SalesInvoiceClass.Instance.ConcreteRoles.Description = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.Description = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			SalesInvoiceClass.Instance.ConcreteRoles.ShippingAndHandlingCharge = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingAndHandlingCharge]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.ShippingAndHandlingCharge = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingAndHandlingCharge]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalFeeCustomerCurrency = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalFeeCustomerCurrency]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalFeeCustomerCurrency = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalFeeCustomerCurrency]; 

			SalesInvoiceClass.Instance.ConcreteRoles.Fee = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Fee]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.Fee = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Fee]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalExVatCustomerCurrency = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVatCustomerCurrency]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalExVatCustomerCurrency = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVatCustomerCurrency]; 

			SalesInvoiceClass.Instance.ConcreteRoles.CustomerReference = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerReference]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.CustomerReference = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerReference]; 

			SalesInvoiceClass.Instance.ConcreteRoles.DiscountAdjustment = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DiscountAdjustment]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.DiscountAdjustment = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DiscountAdjustment]; 

			SalesInvoiceClass.Instance.ConcreteRoles.AmountPaid = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AmountPaid]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.AmountPaid = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AmountPaid]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalDiscount = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscount]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalDiscount = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscount]; 

			SalesInvoiceClass.Instance.ConcreteRoles.BillingAccount = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAccount]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.BillingAccount = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BillingAccount]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalIncVat = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVat]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalIncVat = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVat]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalSurcharge = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurcharge]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalSurcharge = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurcharge]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalBasePrice = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePrice]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalBasePrice = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePrice]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalVatCustomerCurrency = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVatCustomerCurrency]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalVatCustomerCurrency = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVatCustomerCurrency]; 

			SalesInvoiceClass.Instance.ConcreteRoles.InvoiceDate = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceDate]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.InvoiceDate = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceDate]; 

			SalesInvoiceClass.Instance.ConcreteRoles.EntryDate = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.EntryDate = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EntryDate]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalIncVatCustomerCurrency = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVatCustomerCurrency]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalIncVatCustomerCurrency = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVatCustomerCurrency]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalShippingAndHandling = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalShippingAndHandling]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalShippingAndHandling = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalShippingAndHandling]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalBasePriceCustomerCurrency = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePriceCustomerCurrency]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalBasePriceCustomerCurrency = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePriceCustomerCurrency]; 

			SalesInvoiceClass.Instance.ConcreteRoles.SurchargeAdjustment = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SurchargeAdjustment]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.SurchargeAdjustment = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SurchargeAdjustment]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalExVat = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVat]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalExVat = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVat]; 

			SalesInvoiceClass.Instance.ConcreteRoles.InvoiceTerm = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceTerm]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.InvoiceTerm = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceTerm]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalSurchargeCustomerCurrency = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeCustomerCurrency]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalSurchargeCustomerCurrency = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeCustomerCurrency]; 

			SalesInvoiceClass.Instance.ConcreteRoles.InvoiceNumber = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceNumber]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.InvoiceNumber = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceNumber]; 

			SalesInvoiceClass.Instance.ConcreteRoles.Message = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Message]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.Message = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Message]; 

			SalesInvoiceClass.Instance.ConcreteRoles.VatRegime = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.VatRegime = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalDiscountCustomerCurrency = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountCustomerCurrency]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalDiscountCustomerCurrency = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountCustomerCurrency]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalVat = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVat]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalVat = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVat]; 

			SalesInvoiceClass.Instance.ConcreteRoles.TotalFee = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalFee]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.TotalFee = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalFee]; 


		}

		internal class RolesType
		{
			internal RoleType TotalShippingAndHandlingCustomerCurrency;
			internal RoleType CustomerCurrency;
			internal RoleType Description;
			internal RoleType ShippingAndHandlingCharge;
			internal RoleType TotalFeeCustomerCurrency;
			internal RoleType Fee;
			internal RoleType TotalExVatCustomerCurrency;
			internal RoleType CustomerReference;
			internal RoleType DiscountAdjustment;
			internal RoleType AmountPaid;
			internal RoleType TotalDiscount;
			internal RoleType BillingAccount;
			internal RoleType TotalIncVat;
			internal RoleType TotalSurcharge;
			internal RoleType TotalBasePrice;
			internal RoleType TotalVatCustomerCurrency;
			internal RoleType InvoiceDate;
			internal RoleType EntryDate;
			internal RoleType TotalIncVatCustomerCurrency;
			internal RoleType TotalShippingAndHandling;
			internal RoleType TotalBasePriceCustomerCurrency;
			internal RoleType SurchargeAdjustment;
			internal RoleType TotalExVat;
			internal RoleType InvoiceTerm;
			internal RoleType TotalSurchargeCustomerCurrency;
			internal RoleType InvoiceNumber;
			internal RoleType Message;
			internal RoleType VatRegime;
			internal RoleType TotalDiscountCustomerCurrency;
			internal RoleType TotalVat;
			internal RoleType TotalFee;

		}
	}public partial class ProfessionalServicesRelationshipClass : Class
	{
		public static ProfessionalServicesRelationshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProfessionalServicesRelationshipClass() : base(AppsDomain.Instance, new Guid("a6f772e6-8f2c-4180-bbf9-2e5ab0f0efc8"))
        {
			this.SingularName = "ProfessionalServicesRelationship";
			this.PluralName = "ProfessionalServicesRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("564e4930-ae12-451c-b7ad-2ad91068f536"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProfessionalServicesRelationshipProfessional = new RelationType(AppsDomain.Instance, new Guid("62edaaeb-bcef-4c3c-955a-30d708bc4a3c"), new Guid("af3829d6-137c-4453-b705-60b7dfa8c045"), new Guid("29b1fec5-de9c-4fe2-bdfc-fc9d33ca90b5"));
			ProfessionalServicesRelationshipProfessional.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProfessionalServicesRelationshipProfessional.IsIndexed = true;

			ProfessionalServicesRelationshipProfessional.AssociationType.ObjectType = this;

			ProfessionalServicesRelationshipProfessional.RoleType.ObjectType = PersonClass.Instance;;
			ProfessionalServicesRelationshipProfessional.RoleType.AssignedSingularName = "Professional";
			ProfessionalServicesRelationshipProfessional.RoleType.AssignedPluralName = "Professionals";
			this.Roles.Professional = ProfessionalServicesRelationshipProfessional.RoleType;

			var ProfessionalServicesRelationshipProfessionalServicesProvider = new RelationType(AppsDomain.Instance, new Guid("a587695e-a9b3-4b5b-b211-a19096b88815"), new Guid("d3fc269c-debf-4ada-b1be-b2f48d2ae027"), new Guid("c6b955f2-20ed-4164-8f11-2c5d24fa0443"));
			ProfessionalServicesRelationshipProfessionalServicesProvider.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProfessionalServicesRelationshipProfessionalServicesProvider.IsIndexed = true;

			ProfessionalServicesRelationshipProfessionalServicesProvider.AssociationType.ObjectType = this;

			ProfessionalServicesRelationshipProfessionalServicesProvider.RoleType.ObjectType = OrganisationClass.Instance;;
			ProfessionalServicesRelationshipProfessionalServicesProvider.RoleType.AssignedSingularName = "ProfessionalServicesProvider";
			ProfessionalServicesRelationshipProfessionalServicesProvider.RoleType.AssignedPluralName = "ProfessionalServicesProviders";
			this.Roles.ProfessionalServicesProvider = ProfessionalServicesRelationshipProfessionalServicesProvider.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.Professional = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Professional]; 

			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.ProfessionalServicesProvider = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProfessionalServicesProvider]; 


		}

		internal class RolesType
		{
			internal RoleType Professional;
			internal RoleType ProfessionalServicesProvider;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Professional;
			internal ConcreteRoleType ProfessionalServicesProvider;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RecurringChargeClass : Class
	{
		public static RecurringChargeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RecurringChargeClass() : base(AppsDomain.Instance, new Guid("a71e670c-f089-4ec1-8295-dda8e7b62a19"))
        {
			this.SingularName = "RecurringCharge";
			this.PluralName = "RecurringCharges";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("9a7ee068-61ca-4f9c-90bc-1d13f52d73ff"))
			{
				Subtype = Instance,
				Supertype = PriceComponentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var RecurringChargeTimeFrequency = new RelationType(AppsDomain.Instance, new Guid("f95e774f-239e-4136-a964-c3d1841a43ba"), new Guid("46b2864f-5c9b-43b9-a6b0-0bcf907adbc8"), new Guid("97a9949b-6266-4fa2-a33a-3b13eaf21a93"));
			RecurringChargeTimeFrequency.AssignedMultiplicity = Multiplicity.ManyToOne;
			RecurringChargeTimeFrequency.IsIndexed = true;

			RecurringChargeTimeFrequency.AssociationType.ObjectType = this;

			RecurringChargeTimeFrequency.RoleType.ObjectType = TimeFrequencyClass.Instance;;
			RecurringChargeTimeFrequency.RoleType.AssignedSingularName = "TimeFrequency";
			RecurringChargeTimeFrequency.RoleType.AssignedPluralName = "TimeFrequencies";
			this.Roles.TimeFrequency = RecurringChargeTimeFrequency.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RecurringChargeClass.Instance.ConcreteRoles.TimeFrequency = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TimeFrequency]; 


		}

		internal class RolesType
		{
			internal RoleType TimeFrequency;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType TimeFrequency;
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType Rate;
			internal ConcreteRoleType RevenueValueBreak;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType OrderQuantityBreak;
			internal ConcreteRoleType PackageQuantityBreak;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType RevenueQuantityBreak;
			internal ConcreteRoleType SpecifiedFor;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType AgreementPricingProgram;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType OrderKind;
			internal ConcreteRoleType OrderValue;
			internal ConcreteRoleType Price;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class FinancialTermClass : Class
	{
		public static FinancialTermClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal FinancialTermClass() : base(AppsDomain.Instance, new Guid("a73aa458-2293-4578-be67-ad32e36a4991"))
        {
			this.SingularName = "FinancialTerm";
			this.PluralName = "FinancialTerms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f30e8ae5-b6e4-4172-baa3-72cb34291fbb"))
			{
				Subtype = Instance,
				Supertype = AgreementTermInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType TermValue;
			internal ConcreteRoleType TermType;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RequirementStatusClass : Class
	{
		public static RequirementStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RequirementStatusClass() : base(AppsDomain.Instance, new Guid("a79b3e89-e878-45a5-9c9f-7911d259fc33"))
        {
			this.SingularName = "RequirementStatus";
			this.PluralName = "RequirementStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("af35bb1b-a54e-44b7-868a-12148f0c9f33"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var RequirementStatusRequirementObjectState = new RelationType(AppsDomain.Instance, new Guid("03542f1b-23ac-4bfc-add5-bad028295b4e"), new Guid("9000b234-a6cf-4707-8a33-b90f6ee7b869"), new Guid("7baebeac-8013-4acc-bef7-508eed0eb1c3"));
			RequirementStatusRequirementObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementStatusRequirementObjectState.IsIndexed = true;

			RequirementStatusRequirementObjectState.AssociationType.ObjectType = this;

			RequirementStatusRequirementObjectState.RoleType.ObjectType = RequirementObjectStateClass.Instance;;
			RequirementStatusRequirementObjectState.RoleType.AssignedSingularName = "RequirementObjectState";
			RequirementStatusRequirementObjectState.RoleType.AssignedPluralName = "RequirementObjectStates";
			this.Roles.RequirementObjectState = RequirementStatusRequirementObjectState.RoleType;

			var RequirementStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("49e2a03a-aeba-4ae2-9f75-47639334bde6"), new Guid("a3ac3a93-90ed-4bfb-8a8c-e1fbd8fe743e"), new Guid("265a7954-c3be-420b-98b5-ff70076cefdf"));
			RequirementStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			RequirementStatusStartDateTime.AssociationType.ObjectType = this;

			RequirementStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			RequirementStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			RequirementStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = RequirementStatusStartDateTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RequirementStatusClass.Instance.ConcreteRoles.RequirementObjectState = RequirementStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementObjectState]; 

			RequirementStatusClass.Instance.ConcreteRoles.StartDateTime = RequirementStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 


		}

		internal class RolesType
		{
			internal RoleType RequirementObjectState;
			internal RoleType StartDateTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType RequirementObjectState;
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PurchaseInvoiceItemObjectStateClass : Class
	{
		public static PurchaseInvoiceItemObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseInvoiceItemObjectStateClass() : base(AppsDomain.Instance, new Guid("a7d98869-b51e-45b4-9403-06094bb61fcf"))
        {
			this.SingularName = "PurchaseInvoiceItemObjectState";
			this.PluralName = "PurchaseInvoiceItemObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("713b2d95-c1e7-4104-ad99-77e6f982a302"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class InvoiceTermClass : Class
	{
		public static InvoiceTermClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InvoiceTermClass() : base(AppsDomain.Instance, new Guid("a917f763-e54a-4693-bf7b-d8e7aead8fe6"))
        {
			this.SingularName = "InvoiceTerm";
			this.PluralName = "InvoiceTerms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1cd2c00f-e602-46b3-90c9-68f5e6236985"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("af0da516-b300-455d-933a-02d15a97af65"))
			{
				Subtype = Instance,
				Supertype = AgreementTermInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType TermValue;
			internal ConcreteRoleType TermType;
			internal ConcreteRoleType Description;

		}
	}public partial class DropShipmentClass : Class
	{
		public static DropShipmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DropShipmentClass() : base(AppsDomain.Instance, new Guid("a981c832-dd3a-4b97-9bc9-d2dd83872bf2"))
        {
			this.SingularName = "DropShipment";
			this.PluralName = "DropShipments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("db665e4e-4045-400e-9856-3087936ef35e"))
			{
				Subtype = Instance,
				Supertype = ShipmentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DropShipmentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("0984f98c-fc64-4c86-aeb6-1d804d1506db"), new Guid("f7de3d8b-e404-4652-8eb1-dc58f8307e14"), new Guid("9ac05629-f7ae-422e-8131-78389ba7ecf9"));
			DropShipmentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			DropShipmentShipmentStatus.IsDerived = true;
			DropShipmentShipmentStatus.IsIndexed = true;

			DropShipmentShipmentStatus.AssociationType.ObjectType = this;

			DropShipmentShipmentStatus.RoleType.ObjectType = DropShipmentStatusClass.Instance;;
			DropShipmentShipmentStatus.RoleType.AssignedSingularName = "ShipmentStatus";
			DropShipmentShipmentStatus.RoleType.AssignedPluralName = "ShipmentStatuses";
			this.Roles.ShipmentStatus = DropShipmentShipmentStatus.RoleType;

			var DropShipmentCurrentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("44230591-89df-46ec-882c-09bbac7fd5d2"), new Guid("fa5c5391-6bf5-435c-ba35-08d5315216db"), new Guid("a3b29fd7-cf97-4cbf-9329-681542e8de75"));
			DropShipmentCurrentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			DropShipmentCurrentShipmentStatus.IsDerived = true;
			DropShipmentCurrentShipmentStatus.IsIndexed = true;

			DropShipmentCurrentShipmentStatus.AssociationType.ObjectType = this;

			DropShipmentCurrentShipmentStatus.RoleType.ObjectType = DropShipmentStatusClass.Instance;;
			DropShipmentCurrentShipmentStatus.RoleType.AssignedSingularName = "CurrentShipmentStatus";
			DropShipmentCurrentShipmentStatus.RoleType.AssignedPluralName = "CurrentShipmentStatus";
			this.Roles.CurrentShipmentStatus = DropShipmentCurrentShipmentStatus.RoleType;

			var DropShipmentPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("6f2e27fb-5a64-43fe-916c-f559cc1eddee"), new Guid("834a0334-bd03-4a18-bfcd-6a79e2d86533"), new Guid("422f7610-0d21-406c-9ce4-e6d8beec6624"));
			DropShipmentPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			DropShipmentPreviousObjectState.IsDerived = true;
			DropShipmentPreviousObjectState.IsIndexed = true;

			DropShipmentPreviousObjectState.AssociationType.ObjectType = this;

			DropShipmentPreviousObjectState.RoleType.ObjectType = DropShipmentObjectStateClass.Instance;;
			DropShipmentPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			DropShipmentPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = DropShipmentPreviousObjectState.RoleType;

			var DropShipmentCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("a7d6815b-9d6c-44c4-a80f-bc2fd8aa1ea7"), new Guid("14c83374-67ae-480b-a67d-597e8614480e"), new Guid("9b4e523e-215a-4b2a-bd99-1540113e5fc3"));
			DropShipmentCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			DropShipmentCurrentObjectState.IsDerived = true;
			DropShipmentCurrentObjectState.IsIndexed = true;

			DropShipmentCurrentObjectState.AssociationType.ObjectType = this;

			DropShipmentCurrentObjectState.RoleType.ObjectType = DropShipmentObjectStateClass.Instance;;
			DropShipmentCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			DropShipmentCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = DropShipmentCurrentObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DropShipmentClass.Instance.ConcreteRoles.ShipmentStatus = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentStatus]; 

			DropShipmentClass.Instance.ConcreteRoles.CurrentShipmentStatus = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentShipmentStatus]; 

			DropShipmentClass.Instance.ConcreteRoles.PreviousObjectState = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			DropShipmentClass.Instance.ConcreteRoles.CurrentObjectState = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType ShipmentStatus;
			internal RoleType CurrentShipmentStatus;
			internal RoleType PreviousObjectState;
			internal RoleType CurrentObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ShipmentStatus;
			internal ConcreteRoleType CurrentShipmentStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ShipmentMethod;
			internal ConcreteRoleType BillToContactMechanism;
			internal ConcreteRoleType ShipmentPackage;
			internal ConcreteRoleType ShipmentNumber;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType BillToParty;
			internal ConcreteRoleType ShipToParty;
			internal ConcreteRoleType ShipmentItem;
			internal ConcreteRoleType BillFromInternalOrganisation;
			internal ConcreteRoleType ReceiverContactMechanism;
			internal ConcreteRoleType ShipToAddress;
			internal ConcreteRoleType EstimatedShipCost;
			internal ConcreteRoleType EstimatedShipDate;
			internal ConcreteRoleType LatestCancelDate;
			internal ConcreteRoleType Carrier;
			internal ConcreteRoleType InquireAboutContactMechanism;
			internal ConcreteRoleType EstimatedReadyDate;
			internal ConcreteRoleType ShipFromAddress;
			internal ConcreteRoleType BillFromContactMechanism;
			internal ConcreteRoleType HandlingInstruction;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType ShipFromParty;
			internal ConcreteRoleType ShipmentRouteSegment;
			internal ConcreteRoleType EstimatedArrivalDate;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class SalesInvoiceItemClass : Class
	{
		public static SalesInvoiceItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesInvoiceItemClass() : base(AppsDomain.Instance, new Guid("a98f8aca-d711-47e8-ac9c-25b607cbaef1"))
        {
			this.SingularName = "SalesInvoiceItem";
			this.PluralName = "SalesInvoiceItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1f3ecb9f-2d4d-4233-bd27-be434220d092"))
			{
				Subtype = Instance,
				Supertype = InvoiceItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesInvoiceItemProductFeature = new RelationType(AppsDomain.Instance, new Guid("0854aece-6ca1-4b8d-99a9-6d424de8dfd4"), new Guid("cebb5430-809a-4d46-bc7b-563ee72f0848"), new Guid("f1f68b89-b95f-43c9-82d5-cb9eec635869"));
			SalesInvoiceItemProductFeature.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceItemProductFeature.IsIndexed = true;

			SalesInvoiceItemProductFeature.AssociationType.ObjectType = this;

			SalesInvoiceItemProductFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			SalesInvoiceItemProductFeature.RoleType.AssignedSingularName = "ProductFeature";
			SalesInvoiceItemProductFeature.RoleType.AssignedPluralName = "ProductFeatures";
			this.Roles.ProductFeature = SalesInvoiceItemProductFeature.RoleType;

			var SalesInvoiceItemCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("0a93f639-a456-4318-a8fa-8d3c2a107379"), new Guid("f9476899-7bd7-472a-ae64-0a7f4610cb87"), new Guid("56ce0901-621f-407f-81be-9921ad6d19be"));
			SalesInvoiceItemCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceItemCurrentObjectState.IsDerived = true;
			SalesInvoiceItemCurrentObjectState.IsIndexed = true;

			SalesInvoiceItemCurrentObjectState.AssociationType.ObjectType = this;

			SalesInvoiceItemCurrentObjectState.RoleType.ObjectType = SalesInvoiceItemObjectStateClass.Instance;;
			SalesInvoiceItemCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			SalesInvoiceItemCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = SalesInvoiceItemCurrentObjectState.RoleType;

			var SalesInvoiceItemRequiredProfitMargin = new RelationType(AppsDomain.Instance, new Guid("103d42a5-fdee-4689-af19-2ea4c8060de3"), new Guid("ee01bcc4-b926-444d-8982-8c56158327f1"), new Guid("a1643b4c-c95e-427c-a6b8-44860bc79d6e"));
			SalesInvoiceItemRequiredProfitMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceItemRequiredProfitMargin.AssociationType.ObjectType = this;

			SalesInvoiceItemRequiredProfitMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceItemRequiredProfitMargin.RoleType.AssignedSingularName = "RequiredProfitMargin";
			SalesInvoiceItemRequiredProfitMargin.RoleType.AssignedPluralName = "RequiredProfitMargins";
			SalesInvoiceItemRequiredProfitMargin.RoleType.Scale = 2;
			SalesInvoiceItemRequiredProfitMargin.RoleType.Precision = 19;
			this.Roles.RequiredProfitMargin = SalesInvoiceItemRequiredProfitMargin.RoleType;

			var SalesInvoiceItemInitialMarkupPercentage = new RelationType(AppsDomain.Instance, new Guid("1a18b2f1-a31e-4ec3-8981-5f65af2ff907"), new Guid("398e3c8d-1b7f-40c5-a4f1-4a086d369199"), new Guid("514101cb-6833-4935-81e7-79c64b417a26"));
			SalesInvoiceItemInitialMarkupPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceItemInitialMarkupPercentage.IsDerived = true;
			SalesInvoiceItemInitialMarkupPercentage.AssociationType.ObjectType = this;

			SalesInvoiceItemInitialMarkupPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceItemInitialMarkupPercentage.RoleType.AssignedSingularName = "InitialMarkupPercentage";
			SalesInvoiceItemInitialMarkupPercentage.RoleType.AssignedPluralName = "InitialMarkupPercentages";
			SalesInvoiceItemInitialMarkupPercentage.RoleType.Scale = 2;
			SalesInvoiceItemInitialMarkupPercentage.RoleType.Precision = 19;
			this.Roles.InitialMarkupPercentage = SalesInvoiceItemInitialMarkupPercentage.RoleType;

			var SalesInvoiceItemMaintainedMarkupPercentage = new RelationType(AppsDomain.Instance, new Guid("2f6e0b52-d37c-4caf-91d0-862666195247"), new Guid("898628e9-2191-4a2f-b05d-517b5ac90e5c"), new Guid("6a71a9f7-f572-4cd2-b8ca-86e3c85a5d71"));
			SalesInvoiceItemMaintainedMarkupPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceItemMaintainedMarkupPercentage.IsDerived = true;
			SalesInvoiceItemMaintainedMarkupPercentage.AssociationType.ObjectType = this;

			SalesInvoiceItemMaintainedMarkupPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceItemMaintainedMarkupPercentage.RoleType.AssignedSingularName = "MaintainedMarkupPercentage";
			SalesInvoiceItemMaintainedMarkupPercentage.RoleType.AssignedPluralName = "MaintainedMarkupPercentages";
			SalesInvoiceItemMaintainedMarkupPercentage.RoleType.Scale = 2;
			SalesInvoiceItemMaintainedMarkupPercentage.RoleType.Precision = 19;
			this.Roles.MaintainedMarkupPercentage = SalesInvoiceItemMaintainedMarkupPercentage.RoleType;

			var SalesInvoiceItemProduct = new RelationType(AppsDomain.Instance, new Guid("4daa5c18-85c6-49c0-8f23-8e419e44471c"), new Guid("061348dc-59a2-41d1-92bb-ccf16a1f31aa"), new Guid("a037ec30-f0f4-4dda-8eb5-80a042b26399"));
			SalesInvoiceItemProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceItemProduct.IsIndexed = true;

			SalesInvoiceItemProduct.AssociationType.ObjectType = this;

			SalesInvoiceItemProduct.RoleType.ObjectType = ProductInterface.Instance;;
			SalesInvoiceItemProduct.RoleType.AssignedSingularName = "Product";
			SalesInvoiceItemProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = SalesInvoiceItemProduct.RoleType;

			var SalesInvoiceItemUnitPurchasePrice = new RelationType(AppsDomain.Instance, new Guid("4f9e110d-fca8-4956-9d2f-178843eb9b9f"), new Guid("95aa4883-8bd0-4cd7-a060-4efabaef6530"), new Guid("02e0ee54-d063-4b00-87be-c2d3747ef3a6"));
			SalesInvoiceItemUnitPurchasePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceItemUnitPurchasePrice.IsDerived = true;
			SalesInvoiceItemUnitPurchasePrice.AssociationType.ObjectType = this;

			SalesInvoiceItemUnitPurchasePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceItemUnitPurchasePrice.RoleType.AssignedSingularName = "UnitPurchasePrice";
			SalesInvoiceItemUnitPurchasePrice.RoleType.AssignedPluralName = "UnitPurchasePrices";
			SalesInvoiceItemUnitPurchasePrice.RoleType.Scale = 2;
			SalesInvoiceItemUnitPurchasePrice.RoleType.Precision = 19;
			this.Roles.UnitPurchasePrice = SalesInvoiceItemUnitPurchasePrice.RoleType;

			var SalesInvoiceItemInvoiceItemStatus = new RelationType(AppsDomain.Instance, new Guid("5a2c6c32-f7b6-40da-859f-a430edc27a43"), new Guid("31bd5084-75e8-4781-a7f0-d4a82f391066"), new Guid("c627c330-7381-4363-be05-3c80cac5b8af"));
			SalesInvoiceItemInvoiceItemStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			SalesInvoiceItemInvoiceItemStatus.IsDerived = true;
			SalesInvoiceItemInvoiceItemStatus.IsIndexed = true;

			SalesInvoiceItemInvoiceItemStatus.AssociationType.ObjectType = this;

			SalesInvoiceItemInvoiceItemStatus.RoleType.ObjectType = SalesInvoiceItemStatusClass.Instance;;
			SalesInvoiceItemInvoiceItemStatus.RoleType.AssignedSingularName = "InvoiceItemStatus";
			SalesInvoiceItemInvoiceItemStatus.RoleType.AssignedPluralName = "InvoiceItemStatuses";
			this.Roles.InvoiceItemStatus = SalesInvoiceItemInvoiceItemStatus.RoleType;

			var SalesInvoiceItemSalesOrderItem = new RelationType(AppsDomain.Instance, new Guid("5bdae88b-856d-4746-8645-9bded2a4a3bd"), new Guid("2b93a791-124c-45ac-8f3c-bf33f2dcfc13"), new Guid("b303f168-96d8-478a-b42c-6b7594b8db42"));
			SalesInvoiceItemSalesOrderItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceItemSalesOrderItem.IsDerived = true;
			SalesInvoiceItemSalesOrderItem.IsIndexed = true;

			SalesInvoiceItemSalesOrderItem.AssociationType.ObjectType = this;

			SalesInvoiceItemSalesOrderItem.RoleType.ObjectType = SalesOrderItemClass.Instance;;
			SalesInvoiceItemSalesOrderItem.RoleType.AssignedSingularName = "SalesOrderItem";
			SalesInvoiceItemSalesOrderItem.RoleType.AssignedPluralName = "SalesOrderItems";
			this.Roles.SalesOrderItem = SalesInvoiceItemSalesOrderItem.RoleType;

			var SalesInvoiceItemSalesInvoiceItemType = new RelationType(AppsDomain.Instance, new Guid("6dd4e8ee-48ed-400d-a129-99a3a651586a"), new Guid("f99e5e01-943c-4de9-862c-c472d2d873f2"), new Guid("6cb182c2-b481-4e26-869e-609990ea68b3"));
			SalesInvoiceItemSalesInvoiceItemType.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceItemSalesInvoiceItemType.IsIndexed = true;

			SalesInvoiceItemSalesInvoiceItemType.AssociationType.ObjectType = this;

			SalesInvoiceItemSalesInvoiceItemType.RoleType.ObjectType = SalesInvoiceItemTypeClass.Instance;;
			SalesInvoiceItemSalesInvoiceItemType.RoleType.AssignedSingularName = "SalesInvoiceItemType";
			SalesInvoiceItemSalesInvoiceItemType.RoleType.AssignedPluralName = "SalesInvoiceItemTypes";
			this.Roles.SalesInvoiceItemType = SalesInvoiceItemSalesInvoiceItemType.RoleType;

			var SalesInvoiceItemSalesRep = new RelationType(AppsDomain.Instance, new Guid("90866201-03a1-44b2-9318-5048639b58c8"), new Guid("0618fddc-dee4-4cd4-9d4d-b7356be9dc65"), new Guid("d61277d3-b916-4783-9de0-48f9eb6808c4"));
			SalesInvoiceItemSalesRep.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceItemSalesRep.IsIndexed = true;

			SalesInvoiceItemSalesRep.AssociationType.ObjectType = this;

			SalesInvoiceItemSalesRep.RoleType.ObjectType = PersonClass.Instance;;
			SalesInvoiceItemSalesRep.RoleType.AssignedSingularName = "SalesRep";
			SalesInvoiceItemSalesRep.RoleType.AssignedPluralName = "SalesReps";
			this.Roles.SalesRep = SalesInvoiceItemSalesRep.RoleType;

			var SalesInvoiceItemInitialProfitMargin = new RelationType(AppsDomain.Instance, new Guid("a04f506f-7ac9-4ab9-8f3f-1aba1ae76a67"), new Guid("7774b9a7-e842-4b3d-b608-5d039b0811fb"), new Guid("b7b589f5-59f2-4004-862f-0fb6c790137d"));
			SalesInvoiceItemInitialProfitMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceItemInitialProfitMargin.IsDerived = true;
			SalesInvoiceItemInitialProfitMargin.AssociationType.ObjectType = this;

			SalesInvoiceItemInitialProfitMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceItemInitialProfitMargin.RoleType.AssignedSingularName = "InitialProfitMargin";
			SalesInvoiceItemInitialProfitMargin.RoleType.AssignedPluralName = "InitialProfitMargins";
			SalesInvoiceItemInitialProfitMargin.RoleType.Scale = 2;
			SalesInvoiceItemInitialProfitMargin.RoleType.Precision = 19;
			this.Roles.InitialProfitMargin = SalesInvoiceItemInitialProfitMargin.RoleType;

			var SalesInvoiceItemCurrentInvoiceItemStatus = new RelationType(AppsDomain.Instance, new Guid("a9f8629d-bb0d-4f73-8ccb-81b6d64b23a0"), new Guid("0237658e-7d41-44a8-b75d-4e9dea506eda"), new Guid("d72a1dd5-5c83-4848-9c58-901fae551bb8"));
			SalesInvoiceItemCurrentInvoiceItemStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceItemCurrentInvoiceItemStatus.IsDerived = true;
			SalesInvoiceItemCurrentInvoiceItemStatus.IsIndexed = true;

			SalesInvoiceItemCurrentInvoiceItemStatus.AssociationType.ObjectType = this;

			SalesInvoiceItemCurrentInvoiceItemStatus.RoleType.ObjectType = SalesInvoiceItemStatusClass.Instance;;
			SalesInvoiceItemCurrentInvoiceItemStatus.RoleType.AssignedSingularName = "CurrentInvoiceItemStatus";
			SalesInvoiceItemCurrentInvoiceItemStatus.RoleType.AssignedPluralName = "CurrentInvoiceItemStatuses";
			this.Roles.CurrentInvoiceItemStatus = SalesInvoiceItemCurrentInvoiceItemStatus.RoleType;

			var SalesInvoiceItemMaintainedProfitMargin = new RelationType(AppsDomain.Instance, new Guid("ba9acc7e-635d-4387-98eb-67ea26e9e2db"), new Guid("0198d048-f14e-419d-ac2f-1f7f8e2d0bbc"), new Guid("7d6f6274-24bb-47e4-892b-ce95cd197d77"));
			SalesInvoiceItemMaintainedProfitMargin.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceItemMaintainedProfitMargin.IsDerived = true;
			SalesInvoiceItemMaintainedProfitMargin.AssociationType.ObjectType = this;

			SalesInvoiceItemMaintainedProfitMargin.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceItemMaintainedProfitMargin.RoleType.AssignedSingularName = "MaintainedProfitMargin";
			SalesInvoiceItemMaintainedProfitMargin.RoleType.AssignedPluralName = "MaintainedProfitMargins";
			SalesInvoiceItemMaintainedProfitMargin.RoleType.Scale = 2;
			SalesInvoiceItemMaintainedProfitMargin.RoleType.Precision = 19;
			this.Roles.MaintainedProfitMargin = SalesInvoiceItemMaintainedProfitMargin.RoleType;

			var SalesInvoiceItemTimeEntry = new RelationType(AppsDomain.Instance, new Guid("bd485f1f-6937-4270-8695-6f9a50e671c3"), new Guid("4314e405-2692-4cda-9617-804b43d7090f"), new Guid("b8ab5103-31c0-41cb-b6a0-e8f3e18a7945"));
			SalesInvoiceItemTimeEntry.AssignedMultiplicity = Multiplicity.ManyToMany;
			SalesInvoiceItemTimeEntry.IsIndexed = true;

			SalesInvoiceItemTimeEntry.AssociationType.ObjectType = this;

			SalesInvoiceItemTimeEntry.RoleType.ObjectType = TimeEntryClass.Instance;;
			SalesInvoiceItemTimeEntry.RoleType.AssignedSingularName = "TimeEntry";
			SalesInvoiceItemTimeEntry.RoleType.AssignedPluralName = "TimeEntries";
			this.Roles.TimeEntry = SalesInvoiceItemTimeEntry.RoleType;

			var SalesInvoiceItemRequiredMarkupPercentage = new RelationType(AppsDomain.Instance, new Guid("bfd8c2d5-57f9-4650-97ae-2f2b1819b3a9"), new Guid("6dbc805e-2360-49ef-bdd5-644a454cae40"), new Guid("b6e9179b-b7d8-4ad8-9aee-0ca3adef40af"));
			SalesInvoiceItemRequiredMarkupPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesInvoiceItemRequiredMarkupPercentage.AssociationType.ObjectType = this;

			SalesInvoiceItemRequiredMarkupPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesInvoiceItemRequiredMarkupPercentage.RoleType.AssignedSingularName = "RequiredMarkupPercentage";
			SalesInvoiceItemRequiredMarkupPercentage.RoleType.AssignedPluralName = "RequiredMarkupPercentages";
			SalesInvoiceItemRequiredMarkupPercentage.RoleType.Scale = 2;
			SalesInvoiceItemRequiredMarkupPercentage.RoleType.Precision = 19;
			this.Roles.RequiredMarkupPercentage = SalesInvoiceItemRequiredMarkupPercentage.RoleType;

			var SalesInvoiceItemPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("e8121ef7-e1f1-4245-a003-bae93e076a09"), new Guid("7986627b-3328-4d54-9064-052a81fec92d"), new Guid("dab55577-afea-4030-ad75-2c12873c2785"));
			SalesInvoiceItemPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesInvoiceItemPreviousObjectState.IsDerived = true;
			SalesInvoiceItemPreviousObjectState.IsIndexed = true;

			SalesInvoiceItemPreviousObjectState.AssociationType.ObjectType = this;

			SalesInvoiceItemPreviousObjectState.RoleType.ObjectType = SalesInvoiceItemObjectStateClass.Instance;;
			SalesInvoiceItemPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			SalesInvoiceItemPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = SalesInvoiceItemPreviousObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesInvoiceItemClass.Instance.ConcreteRoles.ProductFeature = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.CurrentObjectState = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.RequiredProfitMargin = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredProfitMargin]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.InitialMarkupPercentage = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialMarkupPercentage]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.MaintainedMarkupPercentage = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaintainedMarkupPercentage]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.Product = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.UnitPurchasePrice = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitPurchasePrice]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.InvoiceItemStatus = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceItemStatus]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.SalesOrderItem = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOrderItem]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.SalesInvoiceItemType = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesInvoiceItemType]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.SalesRep = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRep]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.InitialProfitMargin = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialProfitMargin]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.CurrentInvoiceItemStatus = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentInvoiceItemStatus]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.MaintainedProfitMargin = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaintainedProfitMargin]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.TimeEntry = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TimeEntry]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.RequiredMarkupPercentage = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredMarkupPercentage]; 

			SalesInvoiceItemClass.Instance.ConcreteRoles.PreviousObjectState = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType ProductFeature;
			internal RoleType CurrentObjectState;
			internal RoleType RequiredProfitMargin;
			internal RoleType InitialMarkupPercentage;
			internal RoleType MaintainedMarkupPercentage;
			internal RoleType Product;
			internal RoleType UnitPurchasePrice;
			internal RoleType InvoiceItemStatus;
			internal RoleType SalesOrderItem;
			internal RoleType SalesInvoiceItemType;
			internal RoleType SalesRep;
			internal RoleType InitialProfitMargin;
			internal RoleType CurrentInvoiceItemStatus;
			internal RoleType MaintainedProfitMargin;
			internal RoleType TimeEntry;
			internal RoleType RequiredMarkupPercentage;
			internal RoleType PreviousObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType RequiredProfitMargin;
			internal ConcreteRoleType InitialMarkupPercentage;
			internal ConcreteRoleType MaintainedMarkupPercentage;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType UnitPurchasePrice;
			internal ConcreteRoleType InvoiceItemStatus;
			internal ConcreteRoleType SalesOrderItem;
			internal ConcreteRoleType SalesInvoiceItemType;
			internal ConcreteRoleType SalesRep;
			internal ConcreteRoleType InitialProfitMargin;
			internal ConcreteRoleType CurrentInvoiceItemStatus;
			internal ConcreteRoleType MaintainedProfitMargin;
			internal ConcreteRoleType TimeEntry;
			internal ConcreteRoleType RequiredMarkupPercentage;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType TotalIncVatCustomerCurrency;
			internal ConcreteRoleType InvoiceTerm;
			internal ConcreteRoleType TotalVatCustomerCurrency;
			internal ConcreteRoleType TotalBasePrice;
			internal ConcreteRoleType TotalSurcharge;
			internal ConcreteRoleType TotalInvoiceAdjustment;
			internal ConcreteRoleType TotalExVatCustomerCurrency;
			internal ConcreteRoleType TotalDiscount;
			internal ConcreteRoleType InvoiceVatRateItem;
			internal ConcreteRoleType TotalDiscountAsPercentage;
			internal ConcreteRoleType CalculatedUnitPrice;
			internal ConcreteRoleType UnitDiscount;
			internal ConcreteRoleType AssignedVatRegime;
			internal ConcreteRoleType TotalIncVat;
			internal ConcreteRoleType AdjustmentFor;
			internal ConcreteRoleType UnitBasePrice;
			internal ConcreteRoleType TotalSurchargeCustomerCurrency;
			internal ConcreteRoleType SerializedInventoryItem;
			internal ConcreteRoleType CurrentPriceComponent;
			internal ConcreteRoleType DiscountAdjustment;
			internal ConcreteRoleType ActualUnitPrice;
			internal ConcreteRoleType Message;
			internal ConcreteRoleType TotalInvoiceAdjustmentCustomerCurrency;
			internal ConcreteRoleType AmountPaid;
			internal ConcreteRoleType DerivedVatRate;
			internal ConcreteRoleType TotalDiscountCustomerCurrency;
			internal ConcreteRoleType UnitSurcharge;
			internal ConcreteRoleType TotalExVat;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType TotalSurchargeAsPercentage;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType TotalBasePriceCustomerCurrency;
			internal ConcreteRoleType TotalVat;
			internal ConcreteRoleType SurchargeAdjustment;
			internal ConcreteRoleType UnitVat;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EngagementItemInterface: Interface
	{
		public static EngagementItemInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal EngagementItemInterface() : base(AppsDomain.Instance, new Guid("aa3bf631-5aa5-48ab-a249-ef61f640fb72"))
        {
			this.SingularName = "EngagementItem";
			this.PluralName = "EngagementItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("aaaa31e8-961a-487c-9714-4635c4b095ca"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var EngagementItemQuoteItem = new RelationType(AppsDomain.Instance, new Guid("141333b6-2cc9-487e-acc1-86d314f2b30a"), new Guid("17fbbe0c-7d74-46ba-b5dd-a115536dd1a6"), new Guid("10b8af44-2efd-4549-981c-8471860dfb55"));
			EngagementItemQuoteItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementItemQuoteItem.IsIndexed = true;

			EngagementItemQuoteItem.AssociationType.ObjectType = this;

			EngagementItemQuoteItem.RoleType.ObjectType = QuoteItemClass.Instance;;
			EngagementItemQuoteItem.RoleType.AssignedSingularName = "QuoteItem";
			EngagementItemQuoteItem.RoleType.AssignedPluralName = "QuoteItems";
			this.Roles.QuoteItem = EngagementItemQuoteItem.RoleType;

			var EngagementItemDescription = new RelationType(AppsDomain.Instance, new Guid("2a187dcd-5004-4722-a0ec-e571cd5b5bc6"), new Guid("f733d61f-a981-4a80-9816-dc10e0d1e2c9"), new Guid("a8912656-740c-4216-93f6-8fff119c385e"));
			EngagementItemDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementItemDescription.AssociationType.ObjectType = this;

			EngagementItemDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EngagementItemDescription.RoleType.AssignedSingularName = "Description";
			EngagementItemDescription.RoleType.AssignedPluralName = "Descriptions";
			EngagementItemDescription.RoleType.Size = 256;
			this.Roles.Description = EngagementItemDescription.RoleType;

			var EngagementItemExpectedStartDate = new RelationType(AppsDomain.Instance, new Guid("33fe3f86-8b73-4a70-b9c0-62ac27531ac3"), new Guid("24a3d499-1f30-4b0e-8a27-a42808c4b1a2"), new Guid("5e4915f7-955d-41a9-9c38-d8b6f7837ea4"));
			EngagementItemExpectedStartDate.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementItemExpectedStartDate.AssociationType.ObjectType = this;

			EngagementItemExpectedStartDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			EngagementItemExpectedStartDate.RoleType.AssignedSingularName = "ExpectedStartDate";
			EngagementItemExpectedStartDate.RoleType.AssignedPluralName = "ExpectedStartDates";
			this.Roles.ExpectedStartDate = EngagementItemExpectedStartDate.RoleType;

			var EngagementItemExpectedEndDate = new RelationType(AppsDomain.Instance, new Guid("3635cb84-2d4f-4fa1-ac18-4c8a6cc129c5"), new Guid("b58461be-8138-42e1-9e4b-e095ae66fc90"), new Guid("afc29589-892c-41ca-94b3-92a775009a6e"));
			EngagementItemExpectedEndDate.AssignedMultiplicity = Multiplicity.OneToOne;
			EngagementItemExpectedEndDate.AssociationType.ObjectType = this;

			EngagementItemExpectedEndDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			EngagementItemExpectedEndDate.RoleType.AssignedSingularName = "ExpectedEndDate";
			EngagementItemExpectedEndDate.RoleType.AssignedPluralName = "ExpectedEndDates";
			this.Roles.ExpectedEndDate = EngagementItemExpectedEndDate.RoleType;

			var EngagementItemEngagementWorkFulfillment = new RelationType(AppsDomain.Instance, new Guid("40b24df7-6834-401a-a598-82203af63f99"), new Guid("04cbacfd-910f-4707-b952-ffdaaab28c60"), new Guid("3345748e-d859-47f4-bb45-1920469b1cfc"));
			EngagementItemEngagementWorkFulfillment.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementItemEngagementWorkFulfillment.IsIndexed = true;

			EngagementItemEngagementWorkFulfillment.AssociationType.ObjectType = this;

			EngagementItemEngagementWorkFulfillment.RoleType.ObjectType = WorkEffortInterface.Instance;;
			EngagementItemEngagementWorkFulfillment.RoleType.AssignedSingularName = "EngagementWorkFulfillment";
			EngagementItemEngagementWorkFulfillment.RoleType.AssignedPluralName = "EngagementWorkFulfillments";
			this.Roles.EngagementWorkFulfillment = EngagementItemEngagementWorkFulfillment.RoleType;

			var EngagementItemEngagementRate = new RelationType(AppsDomain.Instance, new Guid("9133f59e-048d-4020-88e4-5a4bc36d663b"), new Guid("46ad58c7-3125-4307-93ae-58c386e98899"), new Guid("3065d420-15ec-47d3-9fa6-56a79d4c315b"));
			EngagementItemEngagementRate.AssignedMultiplicity = Multiplicity.OneToMany;
			EngagementItemEngagementRate.IsIndexed = true;

			EngagementItemEngagementRate.AssociationType.ObjectType = this;

			EngagementItemEngagementRate.RoleType.ObjectType = EngagementRateClass.Instance;;
			EngagementItemEngagementRate.RoleType.AssignedSingularName = "EngagementRate";
			EngagementItemEngagementRate.RoleType.AssignedPluralName = "EngagementRates";
			this.Roles.EngagementRate = EngagementItemEngagementRate.RoleType;

			var EngagementItemCurrentEngagementRate = new RelationType(AppsDomain.Instance, new Guid("9e1f4da4-41af-4030-b67f-79f1f49fa076"), new Guid("b5361ebf-2809-4fe7-8f24-bd68ec61c9b8"), new Guid("124043c0-dd7e-4d94-9c0c-a3804c343f11"));
			EngagementItemCurrentEngagementRate.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementItemCurrentEngagementRate.IsDerived = true;
			EngagementItemCurrentEngagementRate.IsIndexed = true;

			EngagementItemCurrentEngagementRate.AssociationType.ObjectType = this;

			EngagementItemCurrentEngagementRate.RoleType.ObjectType = EngagementRateClass.Instance;;
			EngagementItemCurrentEngagementRate.RoleType.AssignedSingularName = "CurrentEngagementRate";
			EngagementItemCurrentEngagementRate.RoleType.AssignedPluralName = "CurrentEngagementRates";
			this.Roles.CurrentEngagementRate = EngagementItemCurrentEngagementRate.RoleType;

			var EngagementItemOrderedWith = new RelationType(AppsDomain.Instance, new Guid("b445f2d6-55a6-4cb4-9550-5be8863eddb6"), new Guid("21509869-1643-402a-a5eb-9657f1f01af9"), new Guid("8844d711-33d6-4d19-ad21-edcd60851f1d"));
			EngagementItemOrderedWith.AssignedMultiplicity = Multiplicity.OneToMany;
			EngagementItemOrderedWith.IsIndexed = true;

			EngagementItemOrderedWith.AssociationType.ObjectType = this;

			EngagementItemOrderedWith.RoleType.ObjectType = EngagementItemInterface.Instance;;
			EngagementItemOrderedWith.RoleType.AssignedSingularName = "OrderedWith";
			EngagementItemOrderedWith.RoleType.AssignedPluralName = "OrderedWiths";
			this.Roles.OrderedWith = EngagementItemOrderedWith.RoleType;

			var EngagementItemCurrentAssignedProfessional = new RelationType(AppsDomain.Instance, new Guid("c2ec3c6b-af56-4c6b-bdaf-76d3ea340bf7"), new Guid("d9a53328-0414-4403-bd54-37b48ec05823"), new Guid("a2dd5921-6ec7-4d7b-8aae-9a7e685688d1"));
			EngagementItemCurrentAssignedProfessional.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementItemCurrentAssignedProfessional.IsDerived = true;
			EngagementItemCurrentAssignedProfessional.IsIndexed = true;

			EngagementItemCurrentAssignedProfessional.AssociationType.ObjectType = this;

			EngagementItemCurrentAssignedProfessional.RoleType.ObjectType = PersonClass.Instance;;
			EngagementItemCurrentAssignedProfessional.RoleType.AssignedSingularName = "CurrentAssignedProfessional";
			EngagementItemCurrentAssignedProfessional.RoleType.AssignedPluralName = "CurrentAssignedProfessionals";
			this.Roles.CurrentAssignedProfessional = EngagementItemCurrentAssignedProfessional.RoleType;

			var EngagementItemProduct = new RelationType(AppsDomain.Instance, new Guid("c7204c16-67b1-4e6d-b787-ce8ab9c6c111"), new Guid("d417f454-c1fa-41da-8b00-653b27d875a4"), new Guid("eaa02501-f6d8-4d12-b11e-523bf70805a4"));
			EngagementItemProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementItemProduct.IsIndexed = true;

			EngagementItemProduct.AssociationType.ObjectType = this;

			EngagementItemProduct.RoleType.ObjectType = ProductInterface.Instance;;
			EngagementItemProduct.RoleType.AssignedSingularName = "Product";
			EngagementItemProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = EngagementItemProduct.RoleType;

			var EngagementItemProductFeature = new RelationType(AppsDomain.Instance, new Guid("dbb3d0c5-836d-477b-a42f-b260f3316458"), new Guid("888670c7-e42c-41eb-994f-91af9d2d93f3"), new Guid("ce43a83c-0289-42b5-9330-0341fa847809"));
			EngagementItemProductFeature.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngagementItemProductFeature.IsIndexed = true;

			EngagementItemProductFeature.AssociationType.ObjectType = this;

			EngagementItemProductFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			EngagementItemProductFeature.RoleType.AssignedSingularName = "ProductFeature";
			EngagementItemProductFeature.RoleType.AssignedPluralName = "ProductFeatures";
			this.Roles.ProductFeature = EngagementItemProductFeature.RoleType;


		}

		internal override void SetRelationTypes()
		{
			StandardServiceOrderItemClass.Instance.ConcreteRoles.QuoteItem = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteItem]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.QuoteItem = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteItem]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.QuoteItem = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteItem]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.QuoteItem = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteItem]; 
			GoodOrderItemClass.Instance.ConcreteRoles.QuoteItem = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteItem]; 

			StandardServiceOrderItemClass.Instance.ConcreteRoles.Description = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.Description = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.Description = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.Description = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			GoodOrderItemClass.Instance.ConcreteRoles.Description = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			StandardServiceOrderItemClass.Instance.ConcreteRoles.ExpectedStartDate = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpectedStartDate]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.ExpectedStartDate = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpectedStartDate]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.ExpectedStartDate = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpectedStartDate]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.ExpectedStartDate = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpectedStartDate]; 
			GoodOrderItemClass.Instance.ConcreteRoles.ExpectedStartDate = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpectedStartDate]; 

			StandardServiceOrderItemClass.Instance.ConcreteRoles.ExpectedEndDate = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpectedEndDate]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.ExpectedEndDate = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpectedEndDate]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.ExpectedEndDate = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpectedEndDate]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.ExpectedEndDate = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpectedEndDate]; 
			GoodOrderItemClass.Instance.ConcreteRoles.ExpectedEndDate = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpectedEndDate]; 

			StandardServiceOrderItemClass.Instance.ConcreteRoles.EngagementWorkFulfillment = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementWorkFulfillment]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.EngagementWorkFulfillment = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementWorkFulfillment]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.EngagementWorkFulfillment = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementWorkFulfillment]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.EngagementWorkFulfillment = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementWorkFulfillment]; 
			GoodOrderItemClass.Instance.ConcreteRoles.EngagementWorkFulfillment = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementWorkFulfillment]; 

			StandardServiceOrderItemClass.Instance.ConcreteRoles.EngagementRate = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementRate]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.EngagementRate = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementRate]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.EngagementRate = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementRate]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.EngagementRate = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementRate]; 
			GoodOrderItemClass.Instance.ConcreteRoles.EngagementRate = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngagementRate]; 

			StandardServiceOrderItemClass.Instance.ConcreteRoles.CurrentEngagementRate = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentEngagementRate]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.CurrentEngagementRate = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentEngagementRate]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.CurrentEngagementRate = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentEngagementRate]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.CurrentEngagementRate = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentEngagementRate]; 
			GoodOrderItemClass.Instance.ConcreteRoles.CurrentEngagementRate = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentEngagementRate]; 

			StandardServiceOrderItemClass.Instance.ConcreteRoles.OrderedWith = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderedWith]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.OrderedWith = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderedWith]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.OrderedWith = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderedWith]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.OrderedWith = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderedWith]; 
			GoodOrderItemClass.Instance.ConcreteRoles.OrderedWith = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderedWith]; 

			StandardServiceOrderItemClass.Instance.ConcreteRoles.CurrentAssignedProfessional = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentAssignedProfessional]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.CurrentAssignedProfessional = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentAssignedProfessional]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.CurrentAssignedProfessional = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentAssignedProfessional]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.CurrentAssignedProfessional = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentAssignedProfessional]; 
			GoodOrderItemClass.Instance.ConcreteRoles.CurrentAssignedProfessional = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentAssignedProfessional]; 

			StandardServiceOrderItemClass.Instance.ConcreteRoles.Product = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.Product = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.Product = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.Product = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 
			GoodOrderItemClass.Instance.ConcreteRoles.Product = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			StandardServiceOrderItemClass.Instance.ConcreteRoles.ProductFeature = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.ProductFeature = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.ProductFeature = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.ProductFeature = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 
			GoodOrderItemClass.Instance.ConcreteRoles.ProductFeature = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 


		}

		internal class RolesType
		{
			internal RoleType QuoteItem;
			internal RoleType Description;
			internal RoleType ExpectedStartDate;
			internal RoleType ExpectedEndDate;
			internal RoleType EngagementWorkFulfillment;
			internal RoleType EngagementRate;
			internal RoleType CurrentEngagementRate;
			internal RoleType OrderedWith;
			internal RoleType CurrentAssignedProfessional;
			internal RoleType Product;
			internal RoleType ProductFeature;

		}
	}public partial class OrderQuantityBreakClass : Class
	{
		public static OrderQuantityBreakClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrderQuantityBreakClass() : base(AppsDomain.Instance, new Guid("aa5898e6-71d0-4dcb-9bbd-35ae5cb0e0ef"))
        {
			this.SingularName = "OrderQuantityBreak";
			this.PluralName = "OrderQuantityBreaks";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4d3ec119-2fcb-44ba-9a02-2b3c787b9cf1"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OrderQuantityBreakThroughAmount = new RelationType(AppsDomain.Instance, new Guid("6d20ad83-150b-44d7-940c-725554175ba9"), new Guid("8d3c682c-a6fa-4ff9-9734-1a0fb21342fe"), new Guid("88caf998-c922-437c-84a2-fa9370c6fb28"));
			OrderQuantityBreakThroughAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderQuantityBreakThroughAmount.AssociationType.ObjectType = this;

			OrderQuantityBreakThroughAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderQuantityBreakThroughAmount.RoleType.AssignedSingularName = "ThroughAmount";
			OrderQuantityBreakThroughAmount.RoleType.AssignedPluralName = "ThroughAmounts";
			OrderQuantityBreakThroughAmount.RoleType.Scale = 2;
			OrderQuantityBreakThroughAmount.RoleType.Precision = 19;
			this.Roles.ThroughAmount = OrderQuantityBreakThroughAmount.RoleType;

			var OrderQuantityBreakFromAmount = new RelationType(AppsDomain.Instance, new Guid("9ac69278-fef8-4f82-8dfa-dcc192274e23"), new Guid("9a9c5ef7-d3d0-4787-a653-b2c8893bd737"), new Guid("16547884-680e-45fe-a85a-7aa77e896f50"));
			OrderQuantityBreakFromAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderQuantityBreakFromAmount.AssociationType.ObjectType = this;

			OrderQuantityBreakFromAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderQuantityBreakFromAmount.RoleType.AssignedSingularName = "FromAmount";
			OrderQuantityBreakFromAmount.RoleType.AssignedPluralName = "FromAmounts";
			OrderQuantityBreakFromAmount.RoleType.Scale = 2;
			OrderQuantityBreakFromAmount.RoleType.Precision = 19;
			this.Roles.FromAmount = OrderQuantityBreakFromAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OrderQuantityBreakClass.Instance.ConcreteRoles.ThroughAmount = OrderQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughAmount]; 

			OrderQuantityBreakClass.Instance.ConcreteRoles.FromAmount = OrderQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromAmount]; 


		}

		internal class RolesType
		{
			internal RoleType ThroughAmount;
			internal RoleType FromAmount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ThroughAmount;
			internal ConcreteRoleType FromAmount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EventClass : Class
	{
		public static EventClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EventClass() : base(AppsDomain.Instance, new Guid("aad26d12-9e80-410c-ab99-57064bd3dd2e"))
        {
			this.SingularName = "Event";
			this.PluralName = "Events";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var EventRegistrationRequired = new RelationType(AppsDomain.Instance, new Guid("189505d9-434f-4d12-a6ab-44edcf44801c"), new Guid("edd0f108-0d6c-414a-8460-2a6f2e4c8f6b"), new Guid("ea95aeb1-2d78-4d96-b725-cb5bc7268176"));
			EventRegistrationRequired.AssignedMultiplicity = Multiplicity.OneToOne;
			EventRegistrationRequired.AssociationType.ObjectType = this;

			EventRegistrationRequired.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			EventRegistrationRequired.RoleType.AssignedSingularName = "RegistrationRequired";
			EventRegistrationRequired.RoleType.AssignedPluralName = "RegistrationsRequired";
			this.Roles.RegistrationRequired = EventRegistrationRequired.RoleType;

			var EventLink = new RelationType(AppsDomain.Instance, new Guid("1a4f5119-23c5-4cbe-afdb-565c0e8f9e80"), new Guid("1ba99ae5-2e3b-4e41-ba52-75f724860ee3"), new Guid("1f2c258c-30c3-4e2d-a1ad-263fe0680381"));
			EventLink.AssignedMultiplicity = Multiplicity.OneToOne;
			EventLink.AssociationType.ObjectType = this;

			EventLink.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EventLink.RoleType.AssignedSingularName = "Link";
			EventLink.RoleType.AssignedPluralName = "Links";
			EventLink.RoleType.Size = 256;
			this.Roles.Link = EventLink.RoleType;

			var EventLocation = new RelationType(AppsDomain.Instance, new Guid("6eb8fbc4-7fbd-4eb6-8944-01737b1182cc"), new Guid("a3aa3fe3-8d70-435b-b567-823d4771d3fa"), new Guid("f7d30205-c1fa-4cfa-9194-21301e5812fb"));
			EventLocation.AssignedMultiplicity = Multiplicity.OneToOne;
			EventLocation.AssociationType.ObjectType = this;

			EventLocation.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EventLocation.RoleType.AssignedSingularName = "Location";
			EventLocation.RoleType.AssignedPluralName = "Locations";
			EventLocation.RoleType.Size = 256;
			this.Roles.Location = EventLocation.RoleType;

			var EventText = new RelationType(AppsDomain.Instance, new Guid("78cfaf88-c3c4-41d1-b9f0-f69a82646930"), new Guid("c23f6022-4df9-46ce-9eed-7dabf1f1f502"), new Guid("2eaa85f3-e70f-4a4c-96a1-64e68457261c"));
			EventText.AssignedMultiplicity = Multiplicity.OneToOne;
			EventText.AssociationType.ObjectType = this;

			EventText.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EventText.RoleType.AssignedSingularName = "Text";
			EventText.RoleType.AssignedPluralName = "Texts";
			EventText.RoleType.Size = -1;
			this.Roles.Text = EventText.RoleType;

			var EventAnnouncementText = new RelationType(AppsDomain.Instance, new Guid("79b05cf2-2175-4724-acdd-88bc05f15881"), new Guid("7276942a-8c26-466f-aa32-698454184454"), new Guid("def8b1dc-c837-40a1-bbcc-4bb00b0250e0"));
			EventAnnouncementText.AssignedMultiplicity = Multiplicity.OneToOne;
			EventAnnouncementText.AssociationType.ObjectType = this;

			EventAnnouncementText.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EventAnnouncementText.RoleType.AssignedSingularName = "AnnouncementText";
			EventAnnouncementText.RoleType.AssignedPluralName = "AnnouncementTexts";
			EventAnnouncementText.RoleType.Size = -1;
			this.Roles.AnnouncementText = EventAnnouncementText.RoleType;

			var EventFrom = new RelationType(AppsDomain.Instance, new Guid("7a66f2bc-bfb1-420a-a383-acf3092ca48b"), new Guid("d3943099-a5ec-413b-9079-239c67bdc696"), new Guid("1c1aead6-f157-4d23-a9f0-0565e2b7ff82"));
			EventFrom.AssignedMultiplicity = Multiplicity.OneToOne;
			EventFrom.AssociationType.ObjectType = this;

			EventFrom.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			EventFrom.RoleType.AssignedSingularName = "From";
			EventFrom.RoleType.AssignedPluralName = "Froms";
			this.Roles.From = EventFrom.RoleType;

			var EventLocale = new RelationType(AppsDomain.Instance, new Guid("7d73d60c-bcb2-4be6-bc60-e4420a8d0417"), new Guid("09cdba21-c34e-465e-847b-8062232c6d85"), new Guid("f80dabde-e6f0-4044-9468-f96641bdd49a"));
			EventLocale.AssignedMultiplicity = Multiplicity.ManyToOne;
			EventLocale.IsIndexed = true;

			EventLocale.AssociationType.ObjectType = this;

			EventLocale.RoleType.ObjectType = LocaleClass.Instance;;
			EventLocale.RoleType.AssignedSingularName = "Locale";
			EventLocale.RoleType.AssignedPluralName = "Locales";
			this.Roles.Locale = EventLocale.RoleType;

			var EventTitle = new RelationType(AppsDomain.Instance, new Guid("b044d498-2995-41d2-8487-0ec323b011bc"), new Guid("b517e0c7-6b49-4f27-bbb3-3cd291fd14fd"), new Guid("6f371186-d82b-42ac-a7f1-a8382454a332"));
			EventTitle.AssignedMultiplicity = Multiplicity.OneToOne;
			EventTitle.AssociationType.ObjectType = this;

			EventTitle.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EventTitle.RoleType.AssignedSingularName = "Title";
			EventTitle.RoleType.AssignedPluralName = "Titles";
			EventTitle.RoleType.Size = 256;
			this.Roles.Title = EventTitle.RoleType;

			var EventPhoto = new RelationType(AppsDomain.Instance, new Guid("cbc5a9f6-cd08-41aa-a4aa-dac9a8a802ac"), new Guid("ec42a541-030f-4fbe-9fba-145c8fbc8e87"), new Guid("ecc373d4-636f-4114-8635-55a97e629607"));
			EventPhoto.AssignedMultiplicity = Multiplicity.ManyToOne;
			EventPhoto.IsIndexed = true;

			EventPhoto.AssociationType.ObjectType = this;

			EventPhoto.RoleType.ObjectType = MediaClass.Instance;;
			EventPhoto.RoleType.AssignedSingularName = "Photo";
			EventPhoto.RoleType.AssignedPluralName = "Photos";
			this.Roles.Photo = EventPhoto.RoleType;

			var EventAnnounce = new RelationType(AppsDomain.Instance, new Guid("d9d15920-705f-4ca3-bfa1-47bd5d5b7238"), new Guid("a5a2ab0f-d7c9-44c7-9fd5-be9cc9ea1666"), new Guid("79827257-f70d-4961-8fa0-4798a4f4a28d"));
			EventAnnounce.AssignedMultiplicity = Multiplicity.OneToOne;
			EventAnnounce.AssociationType.ObjectType = this;

			EventAnnounce.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			EventAnnounce.RoleType.AssignedSingularName = "Announce";
			EventAnnounce.RoleType.AssignedPluralName = "Announces";
			this.Roles.Announce = EventAnnounce.RoleType;

			var EventTo = new RelationType(AppsDomain.Instance, new Guid("de61dd0d-1f8e-4a55-9fe4-f44cf35b6a31"), new Guid("90352035-7b90-414f-be38-7f3e4d5fbd95"), new Guid("b8c6fe1f-7c7e-41ae-8f03-32a18e4920e5"));
			EventTo.AssignedMultiplicity = Multiplicity.OneToOne;
			EventTo.AssociationType.ObjectType = this;

			EventTo.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			EventTo.RoleType.AssignedSingularName = "To";
			EventTo.RoleType.AssignedPluralName = "Tos";
			this.Roles.To = EventTo.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EventClass.Instance.ConcreteRoles.RegistrationRequired = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RegistrationRequired]; 

			EventClass.Instance.ConcreteRoles.Link = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Link]; 

			EventClass.Instance.ConcreteRoles.Location = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Location]; 

			EventClass.Instance.ConcreteRoles.Text = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 

			EventClass.Instance.ConcreteRoles.AnnouncementText = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AnnouncementText]; 

			EventClass.Instance.ConcreteRoles.From = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.From]; 

			EventClass.Instance.ConcreteRoles.Locale = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 

			EventClass.Instance.ConcreteRoles.Title = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Title]; 

			EventClass.Instance.ConcreteRoles.Photo = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Photo]; 

			EventClass.Instance.ConcreteRoles.Announce = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Announce]; 

			EventClass.Instance.ConcreteRoles.To = EventClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.To]; 


		}

		internal class RolesType
		{
			internal RoleType RegistrationRequired;
			internal RoleType Link;
			internal RoleType Location;
			internal RoleType Text;
			internal RoleType AnnouncementText;
			internal RoleType From;
			internal RoleType Locale;
			internal RoleType Title;
			internal RoleType Photo;
			internal RoleType Announce;
			internal RoleType To;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType RegistrationRequired;
			internal ConcreteRoleType Link;
			internal ConcreteRoleType Location;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType AnnouncementText;
			internal ConcreteRoleType From;
			internal ConcreteRoleType Locale;
			internal ConcreteRoleType Title;
			internal ConcreteRoleType Photo;
			internal ConcreteRoleType Announce;
			internal ConcreteRoleType To;

		}
	}public partial class ClientRelationshipClass : Class
	{
		public static ClientRelationshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ClientRelationshipClass() : base(AppsDomain.Instance, new Guid("aadaf02e-0bb8-4862-a354-488f39aa8f4e"))
        {
			this.SingularName = "ClientRelationship";
			this.PluralName = "ClientRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3298699d-9ef8-47e3-99c4-ef3528f0371d"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ClientRelationshipClient = new RelationType(AppsDomain.Instance, new Guid("d611f21a-1045-40ea-b05b-0c29913d5f1c"), new Guid("115baf34-414a-4cfa-8d1f-dfbeb7264077"), new Guid("69161130-4a2e-430e-92a2-b8ab0e6ef8dc"));
			ClientRelationshipClient.AssignedMultiplicity = Multiplicity.ManyToOne;
			ClientRelationshipClient.IsIndexed = true;

			ClientRelationshipClient.AssociationType.ObjectType = this;

			ClientRelationshipClient.RoleType.ObjectType = PartyInterface.Instance;;
			ClientRelationshipClient.RoleType.AssignedSingularName = "Client";
			ClientRelationshipClient.RoleType.AssignedPluralName = "Clients";
			this.Roles.Client = ClientRelationshipClient.RoleType;

			var ClientRelationshipInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("e081884c-3db2-4be3-9c85-9167528d751b"), new Guid("32544879-3730-449a-9835-8decbfe9f4fc"), new Guid("2f9c92b5-7cf2-42ba-924d-4b5d0c73956c"));
			ClientRelationshipInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			ClientRelationshipInternalOrganisation.IsIndexed = true;

			ClientRelationshipInternalOrganisation.AssociationType.ObjectType = this;

			ClientRelationshipInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			ClientRelationshipInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			ClientRelationshipInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = ClientRelationshipInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ClientRelationshipClass.Instance.ConcreteRoles.Client = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Client]; 

			ClientRelationshipClass.Instance.ConcreteRoles.InternalOrganisation = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType Client;
			internal RoleType InternalOrganisation;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Client;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PurchaseOrderItemClass : Class
	{
		public static PurchaseOrderItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseOrderItemClass() : base(AppsDomain.Instance, new Guid("ab648bd0-6e31-4ab0-a9ee-cf4a6f02033d"))
        {
			this.SingularName = "PurchaseOrderItem";
			this.PluralName = "PurchaseOrderItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("26c91392-7d50-4e33-9b48-24c6870d9adb"))
			{
				Subtype = Instance,
				Supertype = OrderItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PurchaseOrderItemOrderItemStatus = new RelationType(AppsDomain.Instance, new Guid("0d6cc324-fa0e-4a8c-8afd-802a6301a6c7"), new Guid("68ad7777-1d14-4635-8f36-1c1e68bd1989"), new Guid("ddbd34f4-264a-4465-b57c-a3f9c76e6a52"));
			PurchaseOrderItemOrderItemStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseOrderItemOrderItemStatus.IsDerived = true;
			PurchaseOrderItemOrderItemStatus.IsIndexed = true;

			PurchaseOrderItemOrderItemStatus.AssociationType.ObjectType = this;

			PurchaseOrderItemOrderItemStatus.RoleType.ObjectType = PurchaseOrderItemStatusClass.Instance;;
			PurchaseOrderItemOrderItemStatus.RoleType.AssignedSingularName = "OrderItemStatus";
			PurchaseOrderItemOrderItemStatus.RoleType.AssignedPluralName = "OrderItemStatuses";
			this.Roles.OrderItemStatus = PurchaseOrderItemOrderItemStatus.RoleType;

			var PurchaseOrderItemCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("43035995-bea3-488b-9e81-e85e929faa57"), new Guid("f9d773a8-772b-4981-a360-944f14a5ef94"), new Guid("f7034bc1-6cc0-4e03-ab3c-da64d427df9b"));
			PurchaseOrderItemCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderItemCurrentObjectState.IsDerived = true;
			PurchaseOrderItemCurrentObjectState.IsIndexed = true;

			PurchaseOrderItemCurrentObjectState.AssociationType.ObjectType = this;

			PurchaseOrderItemCurrentObjectState.RoleType.ObjectType = PurchaseOrderItemObjectStateClass.Instance;;
			PurchaseOrderItemCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			PurchaseOrderItemCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = PurchaseOrderItemCurrentObjectState.RoleType;

			var PurchaseOrderItemShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("47af92f0-f773-40e2-b0ed-4b3677eddbb7"), new Guid("6eb5977f-2a79-49e1-ac87-16a53de7e40b"), new Guid("e2ee216b-ae28-4ddf-b354-aa7a75f4cc4e"));
			PurchaseOrderItemShipmentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseOrderItemShipmentStatus.IsDerived = true;
			PurchaseOrderItemShipmentStatus.IsIndexed = true;

			PurchaseOrderItemShipmentStatus.AssociationType.ObjectType = this;

			PurchaseOrderItemShipmentStatus.RoleType.ObjectType = PurchaseOrderItemStatusClass.Instance;;
			PurchaseOrderItemShipmentStatus.RoleType.AssignedSingularName = "ShipmentStatus";
			PurchaseOrderItemShipmentStatus.RoleType.AssignedPluralName = "ShipmentStatuses";
			this.Roles.ShipmentStatus = PurchaseOrderItemShipmentStatus.RoleType;

			var PurchaseOrderItemPaymentStatus = new RelationType(AppsDomain.Instance, new Guid("5e2f5c1a-99e7-4906-8cdd-e78ac4f4bce0"), new Guid("de791292-84df-4297-959f-d3bc61a2e137"), new Guid("5f9865d9-b7b2-42e3-b13d-013b8945e843"));
			PurchaseOrderItemPaymentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			PurchaseOrderItemPaymentStatus.IsDerived = true;
			PurchaseOrderItemPaymentStatus.IsIndexed = true;

			PurchaseOrderItemPaymentStatus.AssociationType.ObjectType = this;

			PurchaseOrderItemPaymentStatus.RoleType.ObjectType = PurchaseOrderItemStatusClass.Instance;;
			PurchaseOrderItemPaymentStatus.RoleType.AssignedSingularName = "PaymentStatus";
			PurchaseOrderItemPaymentStatus.RoleType.AssignedPluralName = "PaymentStatuses";
			this.Roles.PaymentStatus = PurchaseOrderItemPaymentStatus.RoleType;

			var PurchaseOrderItemQuantityReceived = new RelationType(AppsDomain.Instance, new Guid("64e30c56-a77d-4ecf-b21e-e480dd5a25d8"), new Guid("448695c9-c23b-4ae0-98d7-802a8ae4e9f8"), new Guid("9586b58f-8ae0-4b26-81b6-085a9e28aa77"));
			PurchaseOrderItemQuantityReceived.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseOrderItemQuantityReceived.IsDerived = true;
			PurchaseOrderItemQuantityReceived.AssociationType.ObjectType = this;

			PurchaseOrderItemQuantityReceived.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PurchaseOrderItemQuantityReceived.RoleType.AssignedSingularName = "QuantityReceived";
			PurchaseOrderItemQuantityReceived.RoleType.AssignedPluralName = "QuantitiesReceived";
			PurchaseOrderItemQuantityReceived.RoleType.Scale = 2;
			PurchaseOrderItemQuantityReceived.RoleType.Precision = 19;
			this.Roles.QuantityReceived = PurchaseOrderItemQuantityReceived.RoleType;

			var PurchaseOrderItemCurrentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("6c187e2c-d7ab-4d3d-b8d9-732af7310e7e"), new Guid("50d321f7-fa51-4d08-a12d-e7b8702d2c33"), new Guid("0aab6049-05b6-494a-ac11-df251374f8f4"));
			PurchaseOrderItemCurrentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseOrderItemCurrentShipmentStatus.IsDerived = true;
			PurchaseOrderItemCurrentShipmentStatus.IsIndexed = true;

			PurchaseOrderItemCurrentShipmentStatus.AssociationType.ObjectType = this;

			PurchaseOrderItemCurrentShipmentStatus.RoleType.ObjectType = PurchaseOrderItemStatusClass.Instance;;
			PurchaseOrderItemCurrentShipmentStatus.RoleType.AssignedSingularName = "CurrentShipmentStatus";
			PurchaseOrderItemCurrentShipmentStatus.RoleType.AssignedPluralName = "CurrentShipmentStatuses";
			this.Roles.CurrentShipmentStatus = PurchaseOrderItemCurrentShipmentStatus.RoleType;

			var PurchaseOrderItemProduct = new RelationType(AppsDomain.Instance, new Guid("adfe14e7-fbf6-465f-b6e5-1eb3e8583179"), new Guid("682538a3-d3e7-432b-9264-38197462cee1"), new Guid("fecc85a0-871b-4846-b8f1-c2a5728fbbd2"));
			PurchaseOrderItemProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderItemProduct.IsIndexed = true;

			PurchaseOrderItemProduct.AssociationType.ObjectType = this;

			PurchaseOrderItemProduct.RoleType.ObjectType = ProductInterface.Instance;;
			PurchaseOrderItemProduct.RoleType.AssignedSingularName = "Product";
			PurchaseOrderItemProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = PurchaseOrderItemProduct.RoleType;

			var PurchaseOrderItemCurrentOrderItemStatus = new RelationType(AppsDomain.Instance, new Guid("bbe10173-c24c-4514-86ec-96bd0741efa6"), new Guid("d12015c4-7462-4dec-95b6-2c233cbb8607"), new Guid("75c95f93-74c1-47b9-9bcc-457edc48a4b3"));
			PurchaseOrderItemCurrentOrderItemStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseOrderItemCurrentOrderItemStatus.IsDerived = true;
			PurchaseOrderItemCurrentOrderItemStatus.IsIndexed = true;

			PurchaseOrderItemCurrentOrderItemStatus.AssociationType.ObjectType = this;

			PurchaseOrderItemCurrentOrderItemStatus.RoleType.ObjectType = PurchaseOrderItemStatusClass.Instance;;
			PurchaseOrderItemCurrentOrderItemStatus.RoleType.AssignedSingularName = "CurrentOrderItemStatus";
			PurchaseOrderItemCurrentOrderItemStatus.RoleType.AssignedPluralName = "CurrentOrderItemStatuses";
			this.Roles.CurrentOrderItemStatus = PurchaseOrderItemCurrentOrderItemStatus.RoleType;

			var PurchaseOrderItemCurrentPaymentStatus = new RelationType(AppsDomain.Instance, new Guid("cca92fe0-8711-46fd-b08d-bf313cc585a6"), new Guid("db50db5b-59d8-46b9-9c59-d1b9a93fec11"), new Guid("425b29d1-4001-46e0-821c-6da18051d3ee"));
			PurchaseOrderItemCurrentPaymentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PurchaseOrderItemCurrentPaymentStatus.IsDerived = true;
			PurchaseOrderItemCurrentPaymentStatus.IsIndexed = true;

			PurchaseOrderItemCurrentPaymentStatus.AssociationType.ObjectType = this;

			PurchaseOrderItemCurrentPaymentStatus.RoleType.ObjectType = PurchaseOrderItemStatusClass.Instance;;
			PurchaseOrderItemCurrentPaymentStatus.RoleType.AssignedSingularName = "CurrentPaymentStatus";
			PurchaseOrderItemCurrentPaymentStatus.RoleType.AssignedPluralName = "CurrentPaymentStatus";
			this.Roles.CurrentPaymentStatus = PurchaseOrderItemCurrentPaymentStatus.RoleType;

			var PurchaseOrderItemPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("de9fac15-23af-46be-9083-de57c71d3866"), new Guid("5c2e6357-2016-4302-bfe7-b0721c5ef00a"), new Guid("eed3684b-8f57-41e6-b247-1aaf07d2bee6"));
			PurchaseOrderItemPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderItemPreviousObjectState.IsDerived = true;
			PurchaseOrderItemPreviousObjectState.IsIndexed = true;

			PurchaseOrderItemPreviousObjectState.AssociationType.ObjectType = this;

			PurchaseOrderItemPreviousObjectState.RoleType.ObjectType = PurchaseOrderItemObjectStateClass.Instance;;
			PurchaseOrderItemPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			PurchaseOrderItemPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = PurchaseOrderItemPreviousObjectState.RoleType;

			var PurchaseOrderItemPart = new RelationType(AppsDomain.Instance, new Guid("e2dc0027-220b-4935-bc5a-cb2e2b6be248"), new Guid("3d24da0d-fdd6-46e3-909b-7710e84e2d68"), new Guid("76ed288c-be72-44e2-8b83-0a0f5a616e52"));
			PurchaseOrderItemPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			PurchaseOrderItemPart.IsIndexed = true;

			PurchaseOrderItemPart.AssociationType.ObjectType = this;

			PurchaseOrderItemPart.RoleType.ObjectType = PartInterface.Instance;;
			PurchaseOrderItemPart.RoleType.AssignedSingularName = "Part";
			PurchaseOrderItemPart.RoleType.AssignedPluralName = "Parts";
			this.Roles.Part = PurchaseOrderItemPart.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseOrderItemClass.Instance.ConcreteRoles.OrderItemStatus = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderItemStatus]; 

			PurchaseOrderItemClass.Instance.ConcreteRoles.CurrentObjectState = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			PurchaseOrderItemClass.Instance.ConcreteRoles.ShipmentStatus = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentStatus]; 

			PurchaseOrderItemClass.Instance.ConcreteRoles.PaymentStatus = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentStatus]; 

			PurchaseOrderItemClass.Instance.ConcreteRoles.QuantityReceived = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityReceived]; 

			PurchaseOrderItemClass.Instance.ConcreteRoles.CurrentShipmentStatus = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentShipmentStatus]; 

			PurchaseOrderItemClass.Instance.ConcreteRoles.Product = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			PurchaseOrderItemClass.Instance.ConcreteRoles.CurrentOrderItemStatus = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentOrderItemStatus]; 

			PurchaseOrderItemClass.Instance.ConcreteRoles.CurrentPaymentStatus = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPaymentStatus]; 

			PurchaseOrderItemClass.Instance.ConcreteRoles.PreviousObjectState = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			PurchaseOrderItemClass.Instance.ConcreteRoles.Part = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 


		}

		internal class RolesType
		{
			internal RoleType OrderItemStatus;
			internal RoleType CurrentObjectState;
			internal RoleType ShipmentStatus;
			internal RoleType PaymentStatus;
			internal RoleType QuantityReceived;
			internal RoleType CurrentShipmentStatus;
			internal RoleType Product;
			internal RoleType CurrentOrderItemStatus;
			internal RoleType CurrentPaymentStatus;
			internal RoleType PreviousObjectState;
			internal RoleType Part;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType OrderItemStatus;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ShipmentStatus;
			internal ConcreteRoleType PaymentStatus;
			internal ConcreteRoleType QuantityReceived;
			internal ConcreteRoleType CurrentShipmentStatus;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType CurrentOrderItemStatus;
			internal ConcreteRoleType CurrentPaymentStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Part;
			internal ConcreteRoleType TotalDiscountAsPercentage;
			internal ConcreteRoleType DiscountAdjustment;
			internal ConcreteRoleType UnitVat;
			internal ConcreteRoleType TotalVatCustomerCurrency;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType BudgetItem;
			internal ConcreteRoleType TotalVat;
			internal ConcreteRoleType UnitSurcharge;
			internal ConcreteRoleType UnitDiscount;
			internal ConcreteRoleType PreviousQuantity;
			internal ConcreteRoleType QuantityOrdered;
			internal ConcreteRoleType TotalExVatCustomerCurrency;
			internal ConcreteRoleType DerivedVatRate;
			internal ConcreteRoleType ActualUnitPrice;
			internal ConcreteRoleType TotalIncVatCustomerCurrency;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UnitBasePrice;
			internal ConcreteRoleType CorrespondingPurchaseOrder;
			internal ConcreteRoleType CalculatedUnitPrice;
			internal ConcreteRoleType TotalOrderAdjustmentCustomerCurrency;
			internal ConcreteRoleType TotalOrderAdjustment;
			internal ConcreteRoleType TotalSurchargeCustomerCurrency;
			internal ConcreteRoleType QuoteItem;
			internal ConcreteRoleType AssignedDeliveryDate;
			internal ConcreteRoleType DeliveryDate;
			internal ConcreteRoleType TotalIncVat;
			internal ConcreteRoleType TotalSurchargeAsPercentage;
			internal ConcreteRoleType TotalDiscountCustomerCurrency;
			internal ConcreteRoleType TotalDiscount;
			internal ConcreteRoleType TotalSurcharge;
			internal ConcreteRoleType OrderTerm;
			internal ConcreteRoleType AssignedVatRegime;
			internal ConcreteRoleType ShippingInstruction;
			internal ConcreteRoleType TotalBasePrice;
			internal ConcreteRoleType Association;
			internal ConcreteRoleType TotalExVat;
			internal ConcreteRoleType TotalBasePriceCustomerCurrency;
			internal ConcreteRoleType CurrentPriceComponent;
			internal ConcreteRoleType SurchargeAdjustment;
			internal ConcreteRoleType Message;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class WorkEffortAssignmentRateClass : Class
	{
		public static WorkEffortAssignmentRateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortAssignmentRateClass() : base(AppsDomain.Instance, new Guid("ac18c87b-683c-4529-9171-d23e73c583d4"))
        {
			this.SingularName = "WorkEffortAssignmentRate";
			this.PluralName = "WorkEffortAssignmentRates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1a280507-2607-4747-a889-8d506e17e876"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortAssignmentRateRateType = new RelationType(AppsDomain.Instance, new Guid("3a4e3614-cb04-4014-826b-78a2b87e6a1f"), new Guid("0548e8ad-5ba7-462a-b3ef-6be2014bad65"), new Guid("26ee13eb-79f5-46a1-8749-485f43a3ee8c"));
			WorkEffortAssignmentRateRateType.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortAssignmentRateRateType.IsIndexed = true;

			WorkEffortAssignmentRateRateType.AssociationType.ObjectType = this;

			WorkEffortAssignmentRateRateType.RoleType.ObjectType = RateTypeClass.Instance;;
			WorkEffortAssignmentRateRateType.RoleType.AssignedSingularName = "RateType";
			WorkEffortAssignmentRateRateType.RoleType.AssignedPluralName = "RateTypes";
			this.Roles.RateType = WorkEffortAssignmentRateRateType.RoleType;

			var WorkEffortAssignmentRateWorkEffortPartyAssignment = new RelationType(AppsDomain.Instance, new Guid("627da684-d501-4221-97c2-81329e2b5e8c"), new Guid("4b9c1fd3-acf0-4e5b-8cb5-d32f94bff10b"), new Guid("e6409680-f8e1-4c61-8bd3-b9ec42435741"));
			WorkEffortAssignmentRateWorkEffortPartyAssignment.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortAssignmentRateWorkEffortPartyAssignment.IsIndexed = true;

			WorkEffortAssignmentRateWorkEffortPartyAssignment.AssociationType.ObjectType = this;

			WorkEffortAssignmentRateWorkEffortPartyAssignment.RoleType.ObjectType = WorkEffortPartyAssignmentClass.Instance;;
			WorkEffortAssignmentRateWorkEffortPartyAssignment.RoleType.AssignedSingularName = "WorkEffortPartyAssignment";
			WorkEffortAssignmentRateWorkEffortPartyAssignment.RoleType.AssignedPluralName = "WorkEffortPartyAssignments";
			this.Roles.WorkEffortPartyAssignment = WorkEffortAssignmentRateWorkEffortPartyAssignment.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortAssignmentRateClass.Instance.ConcreteRoles.RateType = WorkEffortAssignmentRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RateType]; 

			WorkEffortAssignmentRateClass.Instance.ConcreteRoles.WorkEffortPartyAssignment = WorkEffortAssignmentRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffortPartyAssignment]; 


		}

		internal class RolesType
		{
			internal RoleType RateType;
			internal RoleType WorkEffortPartyAssignment;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType RateType;
			internal ConcreteRoleType WorkEffortPartyAssignment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EuSalesListTypeClass : Class
	{
		public static EuSalesListTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EuSalesListTypeClass() : base(AppsDomain.Instance, new Guid("acbe7b46-bcfe-4e8b-b8a7-7b9eeac4d6e2"))
        {
			this.SingularName = "EuSalesListType";
			this.PluralName = "EuSalesListTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f3e92d18-614f-4d5f-8a22-7b166b81bb7a"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PurchaseOrderItemObjectStateClass : Class
	{
		public static PurchaseOrderItemObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PurchaseOrderItemObjectStateClass() : base(AppsDomain.Instance, new Guid("ad76acee-eccc-42ce-9897-8c3f0252caf4"))
        {
			this.SingularName = "PurchaseOrderItemObjectState";
			this.PluralName = "PurchaseOrderItemObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("6f6446e0-d564-4829-8eba-906de6a2493a"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ProvinceClass : Class
	{
		public static ProvinceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProvinceClass() : base(AppsDomain.Instance, new Guid("ada24931-020a-48e8-8f8d-18ddb8f46cf7"))
        {
			this.SingularName = "Province";
			this.PluralName = "Provinces";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("25f3a694-8e42-465d-abda-46f3eaec0ffc"))
			{
				Subtype = Instance,
				Supertype = CityBoundInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("72e6b9c9-955d-461c-9484-a67310d1f10c"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("8d1c0ebf-fbca-447e-9223-ffd768a798bd"))
			{
				Subtype = Instance,
				Supertype = CountryBoundInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("b11f19b3-d1cf-4236-9ef9-c99ae09e9a81"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProvinceName = new RelationType(AppsDomain.Instance, new Guid("e04bddba-a014-4793-8787-d9cb83ba7d60"), new Guid("da01d60d-4b8a-4472-9a6a-c21af0963a0b"), new Guid("211c25b7-ecc2-4bdb-a73c-f37090eb165c"));
			ProvinceName.AssignedMultiplicity = Multiplicity.OneToOne;
			ProvinceName.AssociationType.ObjectType = this;

			ProvinceName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProvinceName.RoleType.AssignedSingularName = "Name";
			ProvinceName.RoleType.AssignedPluralName = "Names";
			ProvinceName.RoleType.Size = 256;
			this.Roles.Name = ProvinceName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProvinceClass.Instance.ConcreteRoles.Name = ProvinceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType City;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Country;

		}
	}public partial class InventoryItemVarianceClass : Class
	{
		public static InventoryItemVarianceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InventoryItemVarianceClass() : base(AppsDomain.Instance, new Guid("b00e2650-283f-4326-bdd3-46a2890e2037"))
        {
			this.SingularName = "InventoryItemVariance";
			this.PluralName = "InventoryItemVariances";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("844b4149-350f-4e88-a276-cedf6ff5d0f5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a02db81a-f572-4772-b2ea-ddf49db6c9dc"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var InventoryItemVarianceQuantity = new RelationType(AppsDomain.Instance, new Guid("57bdf1d7-84b8-4c7c-a470-396f6facd3bd"), new Guid("6f8706cd-f005-4ab1-8deb-db5d00b72403"), new Guid("1a45c449-2b0d-4f64-be40-0858018b9cf6"));
			InventoryItemVarianceQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			InventoryItemVarianceQuantity.AssociationType.ObjectType = this;

			InventoryItemVarianceQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			InventoryItemVarianceQuantity.RoleType.AssignedSingularName = "Quantity";
			InventoryItemVarianceQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = InventoryItemVarianceQuantity.RoleType;

			var InventoryItemVarianceItemVarianceAccountingTransaction = new RelationType(AppsDomain.Instance, new Guid("58ead8d2-c9c3-4092-b5d1-79af4811f43c"), new Guid("82f2636f-738d-45b8-bdc0-5136ad8d8382"), new Guid("eee9f92b-5649-467f-8a99-4318c24cc002"));
			InventoryItemVarianceItemVarianceAccountingTransaction.AssignedMultiplicity = Multiplicity.OneToOne;
			InventoryItemVarianceItemVarianceAccountingTransaction.IsIndexed = true;

			InventoryItemVarianceItemVarianceAccountingTransaction.AssociationType.ObjectType = this;

			InventoryItemVarianceItemVarianceAccountingTransaction.RoleType.ObjectType = ItemVarianceAccountingTransactionClass.Instance;;
			InventoryItemVarianceItemVarianceAccountingTransaction.RoleType.AssignedSingularName = "ItemVarianceAccountingTransaction";
			InventoryItemVarianceItemVarianceAccountingTransaction.RoleType.AssignedPluralName = "ItemVarianceAccountingTransactions";
			this.Roles.ItemVarianceAccountingTransaction = InventoryItemVarianceItemVarianceAccountingTransaction.RoleType;

			var InventoryItemVarianceInventoryDate = new RelationType(AppsDomain.Instance, new Guid("af9fa5bc-a392-473d-b077-7f06ee24390b"), new Guid("9a0f9ecd-9954-4c2f-bb0e-e94f9cc3c19a"), new Guid("5665d533-cd9c-4328-b422-66a94d77b19b"));
			InventoryItemVarianceInventoryDate.AssignedMultiplicity = Multiplicity.OneToOne;
			InventoryItemVarianceInventoryDate.AssociationType.ObjectType = this;

			InventoryItemVarianceInventoryDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			InventoryItemVarianceInventoryDate.RoleType.AssignedSingularName = "InventoryDate";
			InventoryItemVarianceInventoryDate.RoleType.AssignedPluralName = "InventoryDates";
			this.Roles.InventoryDate = InventoryItemVarianceInventoryDate.RoleType;

			var InventoryItemVarianceReason = new RelationType(AppsDomain.Instance, new Guid("e422efc4-4d17-46d8-bba4-6e78e7761f93"), new Guid("468307f7-5033-4e77-9482-5df34ca9a4f1"), new Guid("7e0b8650-0d19-4ecc-b6e6-3c78dfe8c2aa"));
			InventoryItemVarianceReason.AssignedMultiplicity = Multiplicity.ManyToOne;
			InventoryItemVarianceReason.IsIndexed = true;

			InventoryItemVarianceReason.AssociationType.ObjectType = this;

			InventoryItemVarianceReason.RoleType.ObjectType = VarianceReasonClass.Instance;;
			InventoryItemVarianceReason.RoleType.AssignedSingularName = "Reason";
			InventoryItemVarianceReason.RoleType.AssignedPluralName = "Reasons";
			this.Roles.Reason = InventoryItemVarianceReason.RoleType;


		}

		internal override void SetRelationTypes()
		{
			InventoryItemVarianceClass.Instance.ConcreteRoles.Quantity = InventoryItemVarianceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			InventoryItemVarianceClass.Instance.ConcreteRoles.ItemVarianceAccountingTransaction = InventoryItemVarianceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ItemVarianceAccountingTransaction]; 

			InventoryItemVarianceClass.Instance.ConcreteRoles.InventoryDate = InventoryItemVarianceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryDate]; 

			InventoryItemVarianceClass.Instance.ConcreteRoles.Reason = InventoryItemVarianceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Reason]; 


		}

		internal class RolesType
		{
			internal RoleType Quantity;
			internal RoleType ItemVarianceAccountingTransaction;
			internal RoleType InventoryDate;
			internal RoleType Reason;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType ItemVarianceAccountingTransaction;
			internal ConcreteRoleType InventoryDate;
			internal ConcreteRoleType Reason;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class ContactMechanismInterface: Interface
	{
		public static ContactMechanismInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ContactMechanismInterface() : base(AppsDomain.Instance, new Guid("b033f9c9-c799-485c-a199-914a9e9119d9"))
        {
			this.SingularName = "ContactMechanism";
			this.PluralName = "ContactMechanisms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("087eeb41-e633-4a19-b84d-f95256d1d046"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var ContactMechanismDescription = new RelationType(AppsDomain.Instance, new Guid("3c4ab373-8ff4-44ef-a97d-d8a27513f69c"), new Guid("0edba6dd-606a-4751-bd86-b98822d4b1f2"), new Guid("ab370eaa-ede5-4bee-a9ab-6f6e52889f77"));
			ContactMechanismDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			ContactMechanismDescription.AssociationType.ObjectType = this;

			ContactMechanismDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ContactMechanismDescription.RoleType.AssignedSingularName = "Description";
			ContactMechanismDescription.RoleType.AssignedPluralName = "Descriptions";
			ContactMechanismDescription.RoleType.Size = 256;
			this.Roles.Description = ContactMechanismDescription.RoleType;

			var RoutedFromFollowTo = new RelationType(AppsDomain.Instance, new Guid("e2bd1f50-f891-4e3f-bac0-e9582b89e64c"), new Guid("9bb26e51-9acf-4fa1-8a24-3d0b1b2f7103"), new Guid("d85aba30-7aee-4bc4-9026-26ba4f355d70"));
			RoutedFromFollowTo.AssignedMultiplicity = Multiplicity.ManyToMany;
			RoutedFromFollowTo.IsIndexed = true;

			RoutedFromFollowTo.AssociationType.ObjectType = this;

			RoutedFromFollowTo.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			RoutedFromFollowTo.RoleType.AssignedSingularName = "FollowTo";
			RoutedFromFollowTo.RoleType.AssignedPluralName = "FollowTo";
			this.Roles.FollowTo = RoutedFromFollowTo.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WebAddressClass.Instance.ConcreteRoles.Description = WebAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			TelecommunicationsNumberClass.Instance.ConcreteRoles.Description = TelecommunicationsNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			PostalAddressClass.Instance.ConcreteRoles.Description = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			EmailAddressClass.Instance.ConcreteRoles.Description = EmailAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			WebAddressClass.Instance.ConcreteRoles.FollowTo = WebAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FollowTo]; 
			TelecommunicationsNumberClass.Instance.ConcreteRoles.FollowTo = TelecommunicationsNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FollowTo]; 
			PostalAddressClass.Instance.ConcreteRoles.FollowTo = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FollowTo]; 
			EmailAddressClass.Instance.ConcreteRoles.FollowTo = EmailAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FollowTo]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType FollowTo;

		}
	}public partial class CommunicationEventInterface: Interface
	{
		public static CommunicationEventInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal CommunicationEventInterface() : base(AppsDomain.Instance, new Guid("b05371ff-0c9e-4ee3-b31d-e2edeed8649e"))
        {
			this.SingularName = "CommunicationEvent";
			this.PluralName = "CommunicationEvents";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("02cc53fa-a8a5-4f92-8eb8-9877beee2939"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("2fb97694-7587-408e-8501-f8dea1ec806a"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("90bb4163-2b8b-4010-b721-93d171dc7aa0"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ba87c159-eb1d-4473-a2db-d0c166a09cd8"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var CommunicationEventScheduledStart = new RelationType(AppsDomain.Instance, new Guid("01665c57-a343-441d-9760-53763badce51"), new Guid("82c1dad0-6d6d-440c-8bf0-f20d35ab0863"), new Guid("0dd9728e-0887-4029-af20-dd69371fbba0"));
			CommunicationEventScheduledStart.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventScheduledStart.AssociationType.ObjectType = this;

			CommunicationEventScheduledStart.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CommunicationEventScheduledStart.RoleType.AssignedSingularName = "ScheduledStart";
			CommunicationEventScheduledStart.RoleType.AssignedPluralName = "ScheduledStarts";
			this.Roles.ScheduledStart = CommunicationEventScheduledStart.RoleType;

			var CommunicationEventToParty = new RelationType(AppsDomain.Instance, new Guid("16c8aada-318c-4bbb-b8a7-7fa20120eda4"), new Guid("1f7eaa6f-ccdf-464e-a58a-439c5a063827"), new Guid("04e87ca8-16f0-408c-996c-23c63358c21b"));
			CommunicationEventToParty.AssignedMultiplicity = Multiplicity.ManyToMany;
			CommunicationEventToParty.IsDerived = true;
			CommunicationEventToParty.IsIndexed = true;

			CommunicationEventToParty.AssociationType.ObjectType = this;

			CommunicationEventToParty.RoleType.ObjectType = PartyInterface.Instance;;
			CommunicationEventToParty.RoleType.AssignedSingularName = "ToParty";
			CommunicationEventToParty.RoleType.AssignedPluralName = "ToParties";
			this.Roles.ToParty = CommunicationEventToParty.RoleType;

			var CommunicationEventToContactMechanism = new RelationType(AppsDomain.Instance, new Guid("1aacf179-cf9f-43e1-b950-4121809fde2d"), new Guid("6c66dc32-0780-4159-afca-b952c3984d1f"), new Guid("bec5291d-f50a-4673-8318-e9c5f553f625"));
			CommunicationEventToContactMechanism.AssignedMultiplicity = Multiplicity.ManyToMany;
			CommunicationEventToContactMechanism.IsIndexed = true;

			CommunicationEventToContactMechanism.AssociationType.ObjectType = this;

			CommunicationEventToContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			CommunicationEventToContactMechanism.RoleType.AssignedSingularName = "ToContactMechanism";
			CommunicationEventToContactMechanism.RoleType.AssignedPluralName = "ToContactMechanisms";
			this.Roles.ToContactMechanism = CommunicationEventToContactMechanism.RoleType;

			var CommunicationEventCommunicationEventStatus = new RelationType(AppsDomain.Instance, new Guid("250911c2-1f8d-4946-8c7f-3e3fa47d66a5"), new Guid("6537fd2e-e4a7-4cee-9494-e0b54d717b62"), new Guid("4cd91320-82a3-4379-b589-cc834a713591"));
			CommunicationEventCommunicationEventStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			CommunicationEventCommunicationEventStatus.IsDerived = true;
			CommunicationEventCommunicationEventStatus.IsIndexed = true;

			CommunicationEventCommunicationEventStatus.AssociationType.ObjectType = this;

			CommunicationEventCommunicationEventStatus.RoleType.ObjectType = CommunicationEventStatusClass.Instance;;
			CommunicationEventCommunicationEventStatus.RoleType.AssignedSingularName = "CommunicationEventStatus";
			CommunicationEventCommunicationEventStatus.RoleType.AssignedPluralName = "CommunicationEventStatuses";
			this.Roles.CommunicationEventStatus = CommunicationEventCommunicationEventStatus.RoleType;

			var CommunicationEventInvolvedParty = new RelationType(AppsDomain.Instance, new Guid("28874ffe-f3b3-4aba-9f28-ba7c15b0cb65"), new Guid("544164cd-43e9-4e3c-a0b2-a33574accd7c"), new Guid("cbf3c355-cf99-4bd4-8f8b-e0dca835b9d2"));
			CommunicationEventInvolvedParty.AssignedMultiplicity = Multiplicity.ManyToMany;
			CommunicationEventInvolvedParty.IsDerived = true;
			CommunicationEventInvolvedParty.IsIndexed = true;

			CommunicationEventInvolvedParty.AssociationType.ObjectType = this;

			CommunicationEventInvolvedParty.RoleType.ObjectType = PartyInterface.Instance;;
			CommunicationEventInvolvedParty.RoleType.AssignedSingularName = "InvolvedParty";
			CommunicationEventInvolvedParty.RoleType.AssignedPluralName = "InvolvedParties";
			this.Roles.InvolvedParty = CommunicationEventInvolvedParty.RoleType;

			var CommunicationEventInitialScheduledStart = new RelationType(AppsDomain.Instance, new Guid("2fa315f8-6208-495c-bcc4-2ccda734cc09"), new Guid("6b5d29f8-7016-4cdb-9af9-8320b1c7304d"), new Guid("8e7c8bab-063d-4f77-99ae-6e7979b63ce4"));
			CommunicationEventInitialScheduledStart.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventInitialScheduledStart.AssociationType.ObjectType = this;

			CommunicationEventInitialScheduledStart.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CommunicationEventInitialScheduledStart.RoleType.AssignedSingularName = "InitialScheduledStart";
			CommunicationEventInitialScheduledStart.RoleType.AssignedPluralName = "InitialScheduledStarts";
			this.Roles.InitialScheduledStart = CommunicationEventInitialScheduledStart.RoleType;

			var CommunicationEventCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("3657016d-01c5-43db-bd03-5203c1aef14d"), new Guid("4c2863c0-dc44-42e6-a330-a5c82a37151d"), new Guid("69227618-628c-4a54-8ad9-bc20d087413d"));
			CommunicationEventCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CommunicationEventCurrentObjectState.IsDerived = true;
			CommunicationEventCurrentObjectState.IsIndexed = true;

			CommunicationEventCurrentObjectState.AssociationType.ObjectType = this;

			CommunicationEventCurrentObjectState.RoleType.ObjectType = CommunicationEventObjectStateClass.Instance;;
			CommunicationEventCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			CommunicationEventCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = CommunicationEventCurrentObjectState.RoleType;

			var CommunicationEventEventPurpose = new RelationType(AppsDomain.Instance, new Guid("3a5658bd-b1b9-47e3-b542-ea9de348a44e"), new Guid("6086288c-6880-4b98-a0ef-7b4a7ecd0af9"), new Guid("d55ec601-4f3f-4834-baec-1675234e7ba5"));
			CommunicationEventEventPurpose.AssignedMultiplicity = Multiplicity.ManyToMany;
			CommunicationEventEventPurpose.IsIndexed = true;

			CommunicationEventEventPurpose.AssociationType.ObjectType = this;

			CommunicationEventEventPurpose.RoleType.ObjectType = CommunicationEventPurposeClass.Instance;;
			CommunicationEventEventPurpose.RoleType.AssignedSingularName = "EventPurpose";
			CommunicationEventEventPurpose.RoleType.AssignedPluralName = "EventPurposes";
			this.Roles.EventPurpose = CommunicationEventEventPurpose.RoleType;

			var CommunicationEventScheduledEnd = new RelationType(AppsDomain.Instance, new Guid("3bc21bd3-1af9-492d-8dde-b0696e20a11a"), new Guid("439ec2e8-0f9c-474f-8cca-6b33887897ae"), new Guid("1d09f872-86ef-4970-9459-d03075799145"));
			CommunicationEventScheduledEnd.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventScheduledEnd.AssociationType.ObjectType = this;

			CommunicationEventScheduledEnd.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CommunicationEventScheduledEnd.RoleType.AssignedSingularName = "ScheduledEnd";
			CommunicationEventScheduledEnd.RoleType.AssignedPluralName = "ScheduledEnds";
			this.Roles.ScheduledEnd = CommunicationEventScheduledEnd.RoleType;

			var CommunicationEventActualEnd = new RelationType(AppsDomain.Instance, new Guid("43c26f1f-25bd-4b45-9cdf-c81d021b0b37"), new Guid("feaad4be-f3e2-4f76-9a87-9676d86bda35"), new Guid("10be3680-44d1-41c9-a084-fbd27a36ecbb"));
			CommunicationEventActualEnd.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventActualEnd.AssociationType.ObjectType = this;

			CommunicationEventActualEnd.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CommunicationEventActualEnd.RoleType.AssignedSingularName = "ActualEnd";
			CommunicationEventActualEnd.RoleType.AssignedPluralName = "ActualEnds";
			this.Roles.ActualEnd = CommunicationEventActualEnd.RoleType;

			var CommunicationEventWorkEffort = new RelationType(AppsDomain.Instance, new Guid("51f3e08a-7b1b-4d5b-989c-ad2c734a1b2f"), new Guid("4f409a5c-1de8-4c4f-a157-02f79bef3efb"), new Guid("1fce36c5-aa88-443b-a3a3-c8bd2fd032dd"));
			CommunicationEventWorkEffort.AssignedMultiplicity = Multiplicity.ManyToMany;
			CommunicationEventWorkEffort.IsIndexed = true;

			CommunicationEventWorkEffort.AssociationType.ObjectType = this;

			CommunicationEventWorkEffort.RoleType.ObjectType = WorkEffortInterface.Instance;;
			CommunicationEventWorkEffort.RoleType.AssignedSingularName = "WorkEffort";
			CommunicationEventWorkEffort.RoleType.AssignedPluralName = "WorkEfforts";
			this.Roles.WorkEffort = CommunicationEventWorkEffort.RoleType;

			var CommunicationEventDescription = new RelationType(AppsDomain.Instance, new Guid("52adc5f3-d6ef-4804-8755-b86532d8b6fe"), new Guid("3c7ad2b5-b1c0-4509-b1e3-6e902778bee6"), new Guid("8722394b-3873-4eb2-8bf4-d70abaf0a77a"));
			CommunicationEventDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventDescription.AssociationType.ObjectType = this;

			CommunicationEventDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CommunicationEventDescription.RoleType.AssignedSingularName = "Description";
			CommunicationEventDescription.RoleType.AssignedPluralName = "Descriptions";
			CommunicationEventDescription.RoleType.Size = -1;
			this.Roles.Description = CommunicationEventDescription.RoleType;

			var CommunicationEventInitialScheduledEnd = new RelationType(AppsDomain.Instance, new Guid("65499ae5-ab06-4d21-8f94-8bf95a665e3d"), new Guid("e4844fd8-62d1-4057-8a9b-4ad4fdc3186b"), new Guid("346af9bb-6091-4d5b-ad8e-92d254876f4a"));
			CommunicationEventInitialScheduledEnd.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventInitialScheduledEnd.AssociationType.ObjectType = this;

			CommunicationEventInitialScheduledEnd.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CommunicationEventInitialScheduledEnd.RoleType.AssignedSingularName = "InitialScheduledEnd";
			CommunicationEventInitialScheduledEnd.RoleType.AssignedPluralName = "InitialScheduledEnds";
			this.Roles.InitialScheduledEnd = CommunicationEventInitialScheduledEnd.RoleType;

			var CommunicationEventFromParty = new RelationType(AppsDomain.Instance, new Guid("7384d5c7-9af9-45b0-9969-dffe9781cc8c"), new Guid("540ba3fb-0ba9-4a66-97bb-dfdc33f5cfe8"), new Guid("e571e53d-8b4e-4fa9-9b00-191ffd35c3c5"));
			CommunicationEventFromParty.AssignedMultiplicity = Multiplicity.ManyToMany;
			CommunicationEventFromParty.IsDerived = true;
			CommunicationEventFromParty.IsIndexed = true;

			CommunicationEventFromParty.AssociationType.ObjectType = this;

			CommunicationEventFromParty.RoleType.ObjectType = PartyInterface.Instance;;
			CommunicationEventFromParty.RoleType.AssignedSingularName = "FromParty";
			CommunicationEventFromParty.RoleType.AssignedPluralName = "FromParties";
			this.Roles.FromParty = CommunicationEventFromParty.RoleType;

			var CommunicationEventSubject = new RelationType(AppsDomain.Instance, new Guid("79e945d3-1200-4a90-8e80-eba298bcda40"), new Guid("da2c6684-c940-439b-a4b0-76bb1c3cfc12"), new Guid("22204173-7328-4fe4-a1a6-c394b5908a54"));
			CommunicationEventSubject.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventSubject.AssociationType.ObjectType = this;

			CommunicationEventSubject.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CommunicationEventSubject.RoleType.AssignedSingularName = "Subject";
			CommunicationEventSubject.RoleType.AssignedPluralName = "Subjects";
			CommunicationEventSubject.RoleType.Size = -1;
			this.Roles.Subject = CommunicationEventSubject.RoleType;

			var CommunicationEventPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("7ad2db94-8251-4fb6-9ef0-be9ef3b6b521"), new Guid("20c1124c-12ad-4983-a4d9-9622b3822f9a"), new Guid("98d28f23-7c1b-45f4-b807-8477ae91a7a1"));
			CommunicationEventPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CommunicationEventPreviousObjectState.IsDerived = true;
			CommunicationEventPreviousObjectState.IsIndexed = true;

			CommunicationEventPreviousObjectState.AssociationType.ObjectType = this;

			CommunicationEventPreviousObjectState.RoleType.ObjectType = CommunicationEventObjectStateClass.Instance;;
			CommunicationEventPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			CommunicationEventPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = CommunicationEventPreviousObjectState.RoleType;

			var CommunicationEventDocument = new RelationType(AppsDomain.Instance, new Guid("91a1555b-a126-4727-86a4-e57e20ebb5da"), new Guid("38c18c13-4e90-459e-8595-60f1b070cd2a"), new Guid("767e994e-523c-4f2d-a974-470bedb64087"));
			CommunicationEventDocument.AssignedMultiplicity = Multiplicity.OneToMany;
			CommunicationEventDocument.IsIndexed = true;

			CommunicationEventDocument.AssociationType.ObjectType = this;

			CommunicationEventDocument.RoleType.ObjectType = MediaClass.Instance;;
			CommunicationEventDocument.RoleType.AssignedSingularName = "Document";
			CommunicationEventDocument.RoleType.AssignedPluralName = "Documents";
			this.Roles.Document = CommunicationEventDocument.RoleType;

			var CommunicationEventCase = new RelationType(AppsDomain.Instance, new Guid("9e52b6a3-3f94-43d6-9fda-879f57499c05"), new Guid("9dd6ccef-f816-40d6-9bb4-e1e88b2e0c06"), new Guid("7c309ce2-dd9a-4299-b462-b506b8ca54f4"));
			CommunicationEventCase.AssignedMultiplicity = Multiplicity.ManyToOne;
			CommunicationEventCase.IsIndexed = true;

			CommunicationEventCase.AssociationType.ObjectType = this;

			CommunicationEventCase.RoleType.ObjectType = CaseClass.Instance;;
			CommunicationEventCase.RoleType.AssignedSingularName = "Case";
			CommunicationEventCase.RoleType.AssignedPluralName = "Cases";
			this.Roles.Case = CommunicationEventCase.RoleType;

			var CommunicationEventPriority = new RelationType(AppsDomain.Instance, new Guid("bdf87e9c-4ca3-4fba-8b3e-c1252f849953"), new Guid("2dff0c3b-b14e-4d0f-89d7-e6e371051a1f"), new Guid("d8fb04b0-a113-4cf1-ab3d-1761e2423e76"));
			CommunicationEventPriority.AssignedMultiplicity = Multiplicity.ManyToOne;
			CommunicationEventPriority.IsIndexed = true;

			CommunicationEventPriority.AssociationType.ObjectType = this;

			CommunicationEventPriority.RoleType.ObjectType = PriorityClass.Instance;;
			this.Roles.Priority = CommunicationEventPriority.RoleType;

			var CommunicationEventFromContactMechanism = new RelationType(AppsDomain.Instance, new Guid("c1655c56-9e3d-4fe3-9592-681087dfac13"), new Guid("c92e6264-1872-4cc5-b6d3-6ab1c8c0f877"), new Guid("a2b30174-2efe-4517-be55-c8d4b16d4402"));
			CommunicationEventFromContactMechanism.AssignedMultiplicity = Multiplicity.ManyToMany;
			CommunicationEventFromContactMechanism.IsIndexed = true;

			CommunicationEventFromContactMechanism.AssociationType.ObjectType = this;

			CommunicationEventFromContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			CommunicationEventFromContactMechanism.RoleType.AssignedSingularName = "FromContactMechanism";
			CommunicationEventFromContactMechanism.RoleType.AssignedPluralName = "FromContactMechanisms";
			this.Roles.FromContactMechanism = CommunicationEventFromContactMechanism.RoleType;

			var CommunicationEventOwner = new RelationType(AppsDomain.Instance, new Guid("c43b6f6f-0fda-4794-9199-84b39373ecb3"), new Guid("f8f85fd4-3b97-4a67-8b42-12e17938c802"), new Guid("bc58b136-9b36-4065-babb-934ede99aefd"));
			CommunicationEventOwner.AssignedMultiplicity = Multiplicity.ManyToOne;
			CommunicationEventOwner.IsIndexed = true;

			CommunicationEventOwner.AssociationType.ObjectType = this;

			CommunicationEventOwner.RoleType.ObjectType = PersonClass.Instance;;
			CommunicationEventOwner.RoleType.AssignedSingularName = "Owner";
			CommunicationEventOwner.RoleType.AssignedPluralName = "Owners";
			this.Roles.Owner = CommunicationEventOwner.RoleType;

			var CommunicationEventCurrentCommunicationEventStatus = new RelationType(AppsDomain.Instance, new Guid("d515f7b6-50d5-447f-b69a-2d1c78b465d3"), new Guid("dbcacd62-f6d0-4c5e-ae39-d3943042c1eb"), new Guid("ff52f71d-40fe-4d0c-9334-800bf9bde1f1"));
			CommunicationEventCurrentCommunicationEventStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventCurrentCommunicationEventStatus.IsDerived = true;
			CommunicationEventCurrentCommunicationEventStatus.IsIndexed = true;

			CommunicationEventCurrentCommunicationEventStatus.AssociationType.ObjectType = this;

			CommunicationEventCurrentCommunicationEventStatus.RoleType.ObjectType = CommunicationEventStatusClass.Instance;;
			CommunicationEventCurrentCommunicationEventStatus.RoleType.AssignedSingularName = "CurrentCommunicationEventStatus";
			CommunicationEventCurrentCommunicationEventStatus.RoleType.AssignedPluralName = "CurrentCommunicationEventStatuses";
			this.Roles.CurrentCommunicationEventStatus = CommunicationEventCurrentCommunicationEventStatus.RoleType;

			var CommunicationEventNote = new RelationType(AppsDomain.Instance, new Guid("e85169df-772c-46cc-a0ef-2bf413aec11d"), new Guid("684ad0be-d99a-4f67-a235-7d17d49ea224"), new Guid("1b5cc695-29d7-48b7-991f-c8271f9a00d4"));
			CommunicationEventNote.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventNote.AssociationType.ObjectType = this;

			CommunicationEventNote.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CommunicationEventNote.RoleType.AssignedSingularName = "Note";
			CommunicationEventNote.RoleType.AssignedPluralName = "Notes";
			CommunicationEventNote.RoleType.Size = -1;
			this.Roles.Note = CommunicationEventNote.RoleType;

			var CommunicationEventActualStart = new RelationType(AppsDomain.Instance, new Guid("ecc20a6a-ef70-4a09-8a3b-c8dce88eaa27"), new Guid("abdb3a26-ae86-4500-a9d9-d9546fb6f856"), new Guid("406f48d7-a0be-48c9-81f5-7b506b41e114"));
			CommunicationEventActualStart.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventActualStart.AssociationType.ObjectType = this;

			CommunicationEventActualStart.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CommunicationEventActualStart.RoleType.AssignedSingularName = "ActualStart";
			CommunicationEventActualStart.RoleType.AssignedPluralName = "ActualStarts";
			this.Roles.ActualStart = CommunicationEventActualStart.RoleType;


		}

		internal override void SetRelationTypes()
		{
			LetterCorrespondenceClass.Instance.ConcreteRoles.ScheduledStart = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			FaxCommunicationClass.Instance.ConcreteRoles.ScheduledStart = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			EmailCommunicationClass.Instance.ConcreteRoles.ScheduledStart = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.ScheduledStart = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.ScheduledStart = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.ScheduledStart = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledStart]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.ToParty = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			FaxCommunicationClass.Instance.ConcreteRoles.ToParty = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			EmailCommunicationClass.Instance.ConcreteRoles.ToParty = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.ToParty = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.ToParty = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.ToParty = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToParty]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.ToContactMechanism = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToContactMechanism]; 
			FaxCommunicationClass.Instance.ConcreteRoles.ToContactMechanism = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToContactMechanism]; 
			EmailCommunicationClass.Instance.ConcreteRoles.ToContactMechanism = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToContactMechanism]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.ToContactMechanism = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToContactMechanism]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.ToContactMechanism = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToContactMechanism]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.ToContactMechanism = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToContactMechanism]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.CommunicationEventStatus = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEventStatus]; 
			FaxCommunicationClass.Instance.ConcreteRoles.CommunicationEventStatus = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEventStatus]; 
			EmailCommunicationClass.Instance.ConcreteRoles.CommunicationEventStatus = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEventStatus]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.CommunicationEventStatus = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEventStatus]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.CommunicationEventStatus = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEventStatus]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.CommunicationEventStatus = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEventStatus]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.InvolvedParty = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvolvedParty]; 
			FaxCommunicationClass.Instance.ConcreteRoles.InvolvedParty = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvolvedParty]; 
			EmailCommunicationClass.Instance.ConcreteRoles.InvolvedParty = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvolvedParty]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.InvolvedParty = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvolvedParty]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.InvolvedParty = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvolvedParty]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.InvolvedParty = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvolvedParty]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.InitialScheduledStart = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledStart]; 
			FaxCommunicationClass.Instance.ConcreteRoles.InitialScheduledStart = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledStart]; 
			EmailCommunicationClass.Instance.ConcreteRoles.InitialScheduledStart = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledStart]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.InitialScheduledStart = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledStart]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.InitialScheduledStart = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledStart]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.InitialScheduledStart = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledStart]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.CurrentObjectState = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			FaxCommunicationClass.Instance.ConcreteRoles.CurrentObjectState = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			EmailCommunicationClass.Instance.ConcreteRoles.CurrentObjectState = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.CurrentObjectState = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.CurrentObjectState = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.CurrentObjectState = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.EventPurpose = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EventPurpose]; 
			FaxCommunicationClass.Instance.ConcreteRoles.EventPurpose = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EventPurpose]; 
			EmailCommunicationClass.Instance.ConcreteRoles.EventPurpose = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EventPurpose]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.EventPurpose = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EventPurpose]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.EventPurpose = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EventPurpose]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.EventPurpose = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EventPurpose]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.ScheduledEnd = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledEnd]; 
			FaxCommunicationClass.Instance.ConcreteRoles.ScheduledEnd = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledEnd]; 
			EmailCommunicationClass.Instance.ConcreteRoles.ScheduledEnd = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledEnd]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.ScheduledEnd = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledEnd]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.ScheduledEnd = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledEnd]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.ScheduledEnd = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ScheduledEnd]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.ActualEnd = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualEnd]; 
			FaxCommunicationClass.Instance.ConcreteRoles.ActualEnd = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualEnd]; 
			EmailCommunicationClass.Instance.ConcreteRoles.ActualEnd = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualEnd]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.ActualEnd = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualEnd]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.ActualEnd = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualEnd]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.ActualEnd = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualEnd]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.WorkEffort = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 
			FaxCommunicationClass.Instance.ConcreteRoles.WorkEffort = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 
			EmailCommunicationClass.Instance.ConcreteRoles.WorkEffort = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.WorkEffort = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.WorkEffort = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.WorkEffort = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.WorkEffort]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.Description = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			FaxCommunicationClass.Instance.ConcreteRoles.Description = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			EmailCommunicationClass.Instance.ConcreteRoles.Description = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.Description = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.Description = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.Description = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.InitialScheduledEnd = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledEnd]; 
			FaxCommunicationClass.Instance.ConcreteRoles.InitialScheduledEnd = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledEnd]; 
			EmailCommunicationClass.Instance.ConcreteRoles.InitialScheduledEnd = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledEnd]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.InitialScheduledEnd = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledEnd]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.InitialScheduledEnd = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledEnd]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.InitialScheduledEnd = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InitialScheduledEnd]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.FromParty = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			FaxCommunicationClass.Instance.ConcreteRoles.FromParty = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			EmailCommunicationClass.Instance.ConcreteRoles.FromParty = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.FromParty = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.FromParty = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.FromParty = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromParty]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.Subject = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Subject]; 
			FaxCommunicationClass.Instance.ConcreteRoles.Subject = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Subject]; 
			EmailCommunicationClass.Instance.ConcreteRoles.Subject = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Subject]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.Subject = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Subject]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.Subject = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Subject]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.Subject = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Subject]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.PreviousObjectState = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			FaxCommunicationClass.Instance.ConcreteRoles.PreviousObjectState = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			EmailCommunicationClass.Instance.ConcreteRoles.PreviousObjectState = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.PreviousObjectState = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.PreviousObjectState = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.PreviousObjectState = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.Document = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			FaxCommunicationClass.Instance.ConcreteRoles.Document = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			EmailCommunicationClass.Instance.ConcreteRoles.Document = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.Document = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.Document = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.Document = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.Case = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Case]; 
			FaxCommunicationClass.Instance.ConcreteRoles.Case = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Case]; 
			EmailCommunicationClass.Instance.ConcreteRoles.Case = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Case]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.Case = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Case]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.Case = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Case]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.Case = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Case]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.Priority = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			FaxCommunicationClass.Instance.ConcreteRoles.Priority = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			EmailCommunicationClass.Instance.ConcreteRoles.Priority = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.Priority = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.Priority = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.Priority = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Priority]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.FromContactMechanism = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromContactMechanism]; 
			FaxCommunicationClass.Instance.ConcreteRoles.FromContactMechanism = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromContactMechanism]; 
			EmailCommunicationClass.Instance.ConcreteRoles.FromContactMechanism = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromContactMechanism]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.FromContactMechanism = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromContactMechanism]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.FromContactMechanism = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromContactMechanism]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.FromContactMechanism = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromContactMechanism]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.Owner = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 
			FaxCommunicationClass.Instance.ConcreteRoles.Owner = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 
			EmailCommunicationClass.Instance.ConcreteRoles.Owner = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.Owner = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.Owner = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.Owner = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.CurrentCommunicationEventStatus = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentCommunicationEventStatus]; 
			FaxCommunicationClass.Instance.ConcreteRoles.CurrentCommunicationEventStatus = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentCommunicationEventStatus]; 
			EmailCommunicationClass.Instance.ConcreteRoles.CurrentCommunicationEventStatus = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentCommunicationEventStatus]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.CurrentCommunicationEventStatus = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentCommunicationEventStatus]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.CurrentCommunicationEventStatus = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentCommunicationEventStatus]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.CurrentCommunicationEventStatus = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentCommunicationEventStatus]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.Note = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Note]; 
			FaxCommunicationClass.Instance.ConcreteRoles.Note = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Note]; 
			EmailCommunicationClass.Instance.ConcreteRoles.Note = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Note]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.Note = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Note]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.Note = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Note]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.Note = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Note]; 

			LetterCorrespondenceClass.Instance.ConcreteRoles.ActualStart = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			FaxCommunicationClass.Instance.ConcreteRoles.ActualStart = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			EmailCommunicationClass.Instance.ConcreteRoles.ActualStart = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.ActualStart = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.ActualStart = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.ActualStart = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualStart]; 


		}

		internal class RolesType
		{
			internal RoleType ScheduledStart;
			internal RoleType ToParty;
			internal RoleType ToContactMechanism;
			internal RoleType CommunicationEventStatus;
			internal RoleType InvolvedParty;
			internal RoleType InitialScheduledStart;
			internal RoleType CurrentObjectState;
			internal RoleType EventPurpose;
			internal RoleType ScheduledEnd;
			internal RoleType ActualEnd;
			internal RoleType WorkEffort;
			internal RoleType Description;
			internal RoleType InitialScheduledEnd;
			internal RoleType FromParty;
			internal RoleType Subject;
			internal RoleType PreviousObjectState;
			internal RoleType Document;
			internal RoleType Case;
			internal RoleType Priority;
			internal RoleType FromContactMechanism;
			internal RoleType Owner;
			internal RoleType CurrentCommunicationEventStatus;
			internal RoleType Note;
			internal RoleType ActualStart;

		}
	}public partial class PositionResponsibilityClass : Class
	{
		public static PositionResponsibilityClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PositionResponsibilityClass() : base(AppsDomain.Instance, new Guid("b0a42c94-3d4e-47f1-86a2-cf45eeba5f0d"))
        {
			this.SingularName = "PositionResponsibility";
			this.PluralName = "PositionResponsibilities";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("48f9e69e-f213-4f36-b626-dc00b41abf20"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("8c870657-a56f-4ac2-ac34-ad860ca47a54"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PositionResponsibilityPosition = new RelationType(AppsDomain.Instance, new Guid("493412a4-c29c-4e1c-9167-6c0c0dca831f"), new Guid("030fa5c5-e41f-4141-a91e-02b37a20e685"), new Guid("fe87742c-4238-4be0-9f58-70ae3f01c96b"));
			PositionResponsibilityPosition.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionResponsibilityPosition.IsIndexed = true;

			PositionResponsibilityPosition.AssociationType.ObjectType = this;

			PositionResponsibilityPosition.RoleType.ObjectType = PositionClass.Instance;;
			PositionResponsibilityPosition.RoleType.AssignedSingularName = "Position";
			PositionResponsibilityPosition.RoleType.AssignedPluralName = "Positions";
			this.Roles.Position = PositionResponsibilityPosition.RoleType;

			var PositionResponsibilityResponsibility = new RelationType(AppsDomain.Instance, new Guid("9c8794b9-2c7b-4afa-86a6-21fb48fc902f"), new Guid("7613dcb8-0c6f-4c65-96c0-75d2cc9db16e"), new Guid("70d2a311-d09b-406c-89d4-3adbbc0a8fe2"));
			PositionResponsibilityResponsibility.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionResponsibilityResponsibility.IsIndexed = true;

			PositionResponsibilityResponsibility.AssociationType.ObjectType = this;

			PositionResponsibilityResponsibility.RoleType.ObjectType = ResponsibilityClass.Instance;;
			PositionResponsibilityResponsibility.RoleType.AssignedSingularName = "Responsibility";
			PositionResponsibilityResponsibility.RoleType.AssignedPluralName = "Responsibilities";
			this.Roles.Responsibility = PositionResponsibilityResponsibility.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PositionResponsibilityClass.Instance.ConcreteRoles.Position = PositionResponsibilityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Position]; 

			PositionResponsibilityClass.Instance.ConcreteRoles.Responsibility = PositionResponsibilityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Responsibility]; 


		}

		internal class RolesType
		{
			internal RoleType Position;
			internal RoleType Responsibility;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Position;
			internal ConcreteRoleType Responsibility;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DeliverableTypeClass : Class
	{
		public static DeliverableTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DeliverableTypeClass() : base(AppsDomain.Instance, new Guid("b1208ddd-9c28-46c3-8d05-2ea1ee29945d"))
        {
			this.SingularName = "DeliverableType";
			this.PluralName = "DeliverableTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("234b5bf8-943d-4b68-8288-87f6a2f1ec2f"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class SubAssemblyClass : Class
	{
		public static SubAssemblyClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SubAssemblyClass() : base(AppsDomain.Instance, new Guid("b1a10fe4-2d84-452b-b0cb-e96e55014856"))
        {
			this.SingularName = "SubAssembly";
			this.PluralName = "SubAssemblies";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("60762a02-1f40-4747-9529-af82858c8716"))
			{
				Subtype = Instance,
				Supertype = PartInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType OwnedByParty;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType PartSpecification;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType ManufacturerId;
			internal ConcreteRoleType ReorderLevel;
			internal ConcreteRoleType ReorderQuantity;
			internal ConcreteRoleType PriceComponent;
			internal ConcreteRoleType InventoryItemKind;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class RequirementObjectStateClass : Class
	{
		public static RequirementObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RequirementObjectStateClass() : base(AppsDomain.Instance, new Guid("b1ee7191-544e-4cee-bbb1-d64364eb7137"))
        {
			this.SingularName = "RequirementObjectState";
			this.PluralName = "RequirementObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("6b750f14-ce59-4012-a56e-6f1d521f2c56"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class WorkFlowClass : Class
	{
		public static WorkFlowClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkFlowClass() : base(AppsDomain.Instance, new Guid("b2a169ce-4e2a-48fc-aa39-dfc783ecb401"))
        {
			this.SingularName = "WorkFlow";
			this.PluralName = "WorkFlows";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d5b1361c-35c4-453f-821d-5ec4c20e4eb9"))
			{
				Subtype = Instance,
				Supertype = WorkEffortInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentWorkEffortStatus;
			internal ConcreteRoleType Precendency;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeliverableProduced;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType InventoryItemNeeded;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType ActualCompletion;
			internal ConcreteRoleType OrderItemFulfillment;
			internal ConcreteRoleType WorkEffortStatus;
			internal ConcreteRoleType WorkEffortType;
			internal ConcreteRoleType InventoryItemProduced;
			internal ConcreteRoleType WorkEffortPurpose;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType RequirementFulfillment;
			internal ConcreteRoleType SpecialTerms;
			internal ConcreteRoleType Concurrency;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ActualHours;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ScheduledCompletion;
			internal ConcreteRoleType EstimatedHours;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class TaskClass : Class
	{
		public static TaskClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TaskClass() : base(AppsDomain.Instance, new Guid("b2cf9a3d-f156-4da7-87bf-ecdeaa13e326"))
        {
			this.SingularName = "Task";
			this.PluralName = "Tasks";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ae16f89f-9f41-4cc1-9c49-9f9c6a68300f"))
			{
				Subtype = Instance,
				Supertype = WorkEffortInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentWorkEffortStatus;
			internal ConcreteRoleType Precendency;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeliverableProduced;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType InventoryItemNeeded;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType ActualCompletion;
			internal ConcreteRoleType OrderItemFulfillment;
			internal ConcreteRoleType WorkEffortStatus;
			internal ConcreteRoleType WorkEffortType;
			internal ConcreteRoleType InventoryItemProduced;
			internal ConcreteRoleType WorkEffortPurpose;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType RequirementFulfillment;
			internal ConcreteRoleType SpecialTerms;
			internal ConcreteRoleType Concurrency;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ActualHours;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ScheduledCompletion;
			internal ConcreteRoleType EstimatedHours;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ResourceRequirementClass : Class
	{
		public static ResourceRequirementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ResourceRequirementClass() : base(AppsDomain.Instance, new Guid("b3753d18-0b7e-4177-92c3-81ae8ce35a8f"))
        {
			this.SingularName = "ResourceRequirement";
			this.PluralName = "ResourceRequirements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8d1816ed-6264-43a1-b145-71b37d0a8c09"))
			{
				Subtype = Instance,
				Supertype = RequirementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ResourceRequirementDuties = new RelationType(AppsDomain.Instance, new Guid("0655305f-5658-45de-b901-a908a4887a0f"), new Guid("10db5470-e9cb-464a-bcd4-65dd4434b6fe"), new Guid("b1a4dec7-156a-4c16-94b7-966dba1faef1"));
			ResourceRequirementDuties.AssignedMultiplicity = Multiplicity.OneToOne;
			ResourceRequirementDuties.AssociationType.ObjectType = this;

			ResourceRequirementDuties.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ResourceRequirementDuties.RoleType.AssignedSingularName = "Duties";
			ResourceRequirementDuties.RoleType.AssignedPluralName = "DutiesPlural";
			ResourceRequirementDuties.RoleType.Size = -1;
			this.Roles.Duties = ResourceRequirementDuties.RoleType;

			var ResourceRequirementNumberOfPositions = new RelationType(AppsDomain.Instance, new Guid("46f13bbb-430e-47e3-a8e2-edf3ae190417"), new Guid("48167ab3-671a-4a2c-b5c9-e8964f35448b"), new Guid("841659d8-deb9-4902-855b-22b9c9822331"));
			ResourceRequirementNumberOfPositions.AssignedMultiplicity = Multiplicity.OneToOne;
			ResourceRequirementNumberOfPositions.AssociationType.ObjectType = this;

			ResourceRequirementNumberOfPositions.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ResourceRequirementNumberOfPositions.RoleType.AssignedSingularName = "NumberOfPositions";
			ResourceRequirementNumberOfPositions.RoleType.AssignedPluralName = "NumbersOfPositions";
			ResourceRequirementNumberOfPositions.RoleType.Scale = 2;
			ResourceRequirementNumberOfPositions.RoleType.Precision = 19;
			this.Roles.NumberOfPositions = ResourceRequirementNumberOfPositions.RoleType;

			var ResourceRequirementRequiredStartDate = new RelationType(AppsDomain.Instance, new Guid("a0a42e5c-3106-4709-aa7b-c916a0ba8508"), new Guid("dc0b4ab7-19d1-4d15-938a-07ce77ba3b23"), new Guid("eeec43e2-dcb4-4ae1-aceb-afbb9da25f68"));
			ResourceRequirementRequiredStartDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ResourceRequirementRequiredStartDate.AssociationType.ObjectType = this;

			ResourceRequirementRequiredStartDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ResourceRequirementRequiredStartDate.RoleType.AssignedSingularName = "RequiredStartDate";
			ResourceRequirementRequiredStartDate.RoleType.AssignedPluralName = "RequiredStartDates";
			this.Roles.RequiredStartDate = ResourceRequirementRequiredStartDate.RoleType;

			var ResourceRequirementNeededSkill = new RelationType(AppsDomain.Instance, new Guid("d1c048c9-eb05-4cd2-a06c-a8dacf993ab2"), new Guid("88727cd2-46fd-44c0-a5bf-08698256592d"), new Guid("602edcd9-9446-4bbd-9133-1fbb45f423db"));
			ResourceRequirementNeededSkill.AssignedMultiplicity = Multiplicity.OneToMany;
			ResourceRequirementNeededSkill.IsIndexed = true;

			ResourceRequirementNeededSkill.AssociationType.ObjectType = this;

			ResourceRequirementNeededSkill.RoleType.ObjectType = NeededSkillClass.Instance;;
			ResourceRequirementNeededSkill.RoleType.AssignedSingularName = "NeededSkill";
			ResourceRequirementNeededSkill.RoleType.AssignedPluralName = "NeededSkills";
			this.Roles.NeededSkill = ResourceRequirementNeededSkill.RoleType;

			var ResourceRequirementRequiredEndDate = new RelationType(AppsDomain.Instance, new Guid("ffd07bff-38a2-4284-958d-18b1296f6112"), new Guid("ff6383a4-8502-4f12-8337-6a6ead2f3f0f"), new Guid("1aea6980-6914-4587-98ad-93d9164ebd63"));
			ResourceRequirementRequiredEndDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ResourceRequirementRequiredEndDate.AssociationType.ObjectType = this;

			ResourceRequirementRequiredEndDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ResourceRequirementRequiredEndDate.RoleType.AssignedSingularName = "RequiredEndDate";
			ResourceRequirementRequiredEndDate.RoleType.AssignedPluralName = "RequiredEndDates";
			this.Roles.RequiredEndDate = ResourceRequirementRequiredEndDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ResourceRequirementClass.Instance.ConcreteRoles.Duties = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Duties]; 

			ResourceRequirementClass.Instance.ConcreteRoles.NumberOfPositions = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NumberOfPositions]; 

			ResourceRequirementClass.Instance.ConcreteRoles.RequiredStartDate = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredStartDate]; 

			ResourceRequirementClass.Instance.ConcreteRoles.NeededSkill = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NeededSkill]; 

			ResourceRequirementClass.Instance.ConcreteRoles.RequiredEndDate = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredEndDate]; 


		}

		internal class RolesType
		{
			internal RoleType Duties;
			internal RoleType NumberOfPositions;
			internal RoleType RequiredStartDate;
			internal RoleType NeededSkill;
			internal RoleType RequiredEndDate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Duties;
			internal ConcreteRoleType NumberOfPositions;
			internal ConcreteRoleType RequiredStartDate;
			internal ConcreteRoleType NeededSkill;
			internal ConcreteRoleType RequiredEndDate;
			internal ConcreteRoleType RequiredByDate;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Authorizer;
			internal ConcreteRoleType RequirementStatus;
			internal ConcreteRoleType Reason;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType NeededFor;
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType CurrentRequirementStatus;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ServicedBy;
			internal ConcreteRoleType EstimatedBudget;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class BudgetItemClass : Class
	{
		public static BudgetItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BudgetItemClass() : base(AppsDomain.Instance, new Guid("b397c075-215a-4d5b-b962-ea48540a64fa"))
        {
			this.SingularName = "BudgetItem";
			this.PluralName = "BudgetItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("91e31260-9ad2-472c-af3b-bcfa0414f0e2"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var BudgetItemPurpose = new RelationType(AppsDomain.Instance, new Guid("24645d36-9f98-4d08-a7e0-51c1132a110d"), new Guid("27704145-5c5c-4267-b1aa-27f8a64284bb"), new Guid("ef36805b-89db-4195-9848-234e3adf9ba8"));
			BudgetItemPurpose.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetItemPurpose.AssociationType.ObjectType = this;

			BudgetItemPurpose.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BudgetItemPurpose.RoleType.AssignedSingularName = "Purpose";
			BudgetItemPurpose.RoleType.AssignedPluralName = "Puposes";
			BudgetItemPurpose.RoleType.Size = 256;
			this.Roles.Purpose = BudgetItemPurpose.RoleType;

			var BudgetItemJustification = new RelationType(AppsDomain.Instance, new Guid("6b313789-9a6d-47ca-adad-def39af1e11f"), new Guid("bab74221-37b5-424d-895b-6e79e54fbf0d"), new Guid("013505ff-07c0-4e13-9efe-6347111c2ce8"));
			BudgetItemJustification.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetItemJustification.AssociationType.ObjectType = this;

			BudgetItemJustification.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BudgetItemJustification.RoleType.AssignedSingularName = "Justification";
			BudgetItemJustification.RoleType.AssignedPluralName = "Justifications";
			BudgetItemJustification.RoleType.Size = 256;
			this.Roles.Justification = BudgetItemJustification.RoleType;

			var BudgetItemChild = new RelationType(AppsDomain.Instance, new Guid("a4e584cc-7cf6-4590-83e4-a827a7a06624"), new Guid("76a35c5f-4f20-4520-ba02-f68a0dd61e0d"), new Guid("528620b6-e0a7-424a-8c8a-a9fa9c8ed84c"));
			BudgetItemChild.AssignedMultiplicity = Multiplicity.OneToMany;
			BudgetItemChild.IsIndexed = true;

			BudgetItemChild.AssociationType.ObjectType = this;

			BudgetItemChild.RoleType.ObjectType = BudgetItemClass.Instance;;
			BudgetItemChild.RoleType.AssignedSingularName = "Child";
			BudgetItemChild.RoleType.AssignedPluralName = "Children";
			this.Roles.Child = BudgetItemChild.RoleType;

			var BudgetItemAmount = new RelationType(AppsDomain.Instance, new Guid("cced2368-6a7d-4aea-8112-57dead05f7b4"), new Guid("3af60015-58d7-4bcb-8776-b209875d44ba"), new Guid("b2badaf8-f9fb-4869-a0ab-d5c8fb9a7f51"));
			BudgetItemAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetItemAmount.AssociationType.ObjectType = this;

			BudgetItemAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			BudgetItemAmount.RoleType.AssignedSingularName = "Amount";
			BudgetItemAmount.RoleType.AssignedPluralName = "Amounts";
			BudgetItemAmount.RoleType.Scale = 2;
			BudgetItemAmount.RoleType.Precision = 19;
			this.Roles.Amount = BudgetItemAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BudgetItemClass.Instance.ConcreteRoles.Purpose = BudgetItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Purpose]; 

			BudgetItemClass.Instance.ConcreteRoles.Justification = BudgetItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Justification]; 

			BudgetItemClass.Instance.ConcreteRoles.Child = BudgetItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 

			BudgetItemClass.Instance.ConcreteRoles.Amount = BudgetItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 


		}

		internal class RolesType
		{
			internal RoleType Purpose;
			internal RoleType Justification;
			internal RoleType Child;
			internal RoleType Amount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Purpose;
			internal ConcreteRoleType Justification;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class InternalRequirementClass : Class
	{
		public static InternalRequirementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InternalRequirementClass() : base(AppsDomain.Instance, new Guid("b46c9149-21ef-45a6-aef6-c6aa30389d7f"))
        {
			this.SingularName = "InternalRequirement";
			this.PluralName = "InternalRequirements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("03fc88be-bb81-4bf8-b75b-0966b4fb5f8a"))
			{
				Subtype = Instance,
				Supertype = RequirementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType RequiredByDate;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Authorizer;
			internal ConcreteRoleType RequirementStatus;
			internal ConcreteRoleType Reason;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType NeededFor;
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType CurrentRequirementStatus;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ServicedBy;
			internal ConcreteRoleType EstimatedBudget;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PositionReportingStructureClass : Class
	{
		public static PositionReportingStructureClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PositionReportingStructureClass() : base(AppsDomain.Instance, new Guid("b50d0780-bcbf-4041-8576-164577d40c55"))
        {
			this.SingularName = "PositionReportingStructure";
			this.PluralName = "PositionReportingStructures";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("6133fcb9-1730-453c-a7ed-d2869ea7ba56"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("eadb791c-71b6-47f2-a850-8facf5073d1b"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PositionReportingStructurePrimary = new RelationType(AppsDomain.Instance, new Guid("23b91508-508f-4afe-8259-a17f16381833"), new Guid("71f3915d-e412-40fa-abb3-c083e8b2488b"), new Guid("b658e2b8-0929-4770-b231-e532653d0841"));
			PositionReportingStructurePrimary.AssignedMultiplicity = Multiplicity.OneToOne;
			PositionReportingStructurePrimary.AssociationType.ObjectType = this;

			PositionReportingStructurePrimary.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			PositionReportingStructurePrimary.RoleType.AssignedSingularName = "Primary";
			PositionReportingStructurePrimary.RoleType.AssignedPluralName = "Primaries";
			this.Roles.Primary = PositionReportingStructurePrimary.RoleType;

			var PositionReportingStructureManagedByPosition = new RelationType(AppsDomain.Instance, new Guid("5fbc72bf-2153-4b91-83f9-6fd057e4b1d6"), new Guid("c06de12f-bf0e-4d91-b8f6-9f6b250b107c"), new Guid("26944bd3-762b-4436-ba19-5e5c34c1247f"));
			PositionReportingStructureManagedByPosition.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionReportingStructureManagedByPosition.IsIndexed = true;

			PositionReportingStructureManagedByPosition.AssociationType.ObjectType = this;

			PositionReportingStructureManagedByPosition.RoleType.ObjectType = PositionClass.Instance;;
			PositionReportingStructureManagedByPosition.RoleType.AssignedSingularName = "ManagedByPosition";
			PositionReportingStructureManagedByPosition.RoleType.AssignedPluralName = "ManagedByPositions";
			this.Roles.ManagedByPosition = PositionReportingStructureManagedByPosition.RoleType;

			var PositionReportingStructurePosition = new RelationType(AppsDomain.Instance, new Guid("e2e60d09-ebfa-4bf3-94e9-759279b00919"), new Guid("1e94dba5-c7d3-41ca-ae79-80b0d2b2ce3c"), new Guid("7b375d54-2364-422c-a264-dd6438d53d33"));
			PositionReportingStructurePosition.AssignedMultiplicity = Multiplicity.ManyToOne;
			PositionReportingStructurePosition.IsIndexed = true;

			PositionReportingStructurePosition.AssociationType.ObjectType = this;

			PositionReportingStructurePosition.RoleType.ObjectType = PositionClass.Instance;;
			PositionReportingStructurePosition.RoleType.AssignedSingularName = "Position";
			PositionReportingStructurePosition.RoleType.AssignedPluralName = "Positions";
			this.Roles.Position = PositionReportingStructurePosition.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PositionReportingStructureClass.Instance.ConcreteRoles.Primary = PositionReportingStructureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Primary]; 

			PositionReportingStructureClass.Instance.ConcreteRoles.ManagedByPosition = PositionReportingStructureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ManagedByPosition]; 

			PositionReportingStructureClass.Instance.ConcreteRoles.Position = PositionReportingStructureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Position]; 


		}

		internal class RolesType
		{
			internal RoleType Primary;
			internal RoleType ManagedByPosition;
			internal RoleType Position;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Primary;
			internal ConcreteRoleType ManagedByPosition;
			internal ConcreteRoleType Position;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class PartnershipClass : Class
	{
		public static PartnershipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartnershipClass() : base(AppsDomain.Instance, new Guid("b55d1ad5-0ef0-40f0-b8d4-b39c370d7dcf"))
        {
			this.SingularName = "Partnership";
			this.PluralName = "Partnerships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("90c19f86-5e2d-494c-ac53-66b18084badc"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartnershipInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("c8eafc73-9fb3-4a7b-8349-1dd1e9f64520"), new Guid("4d6ee3e0-4c0c-4387-b140-e2296c8bcbd4"), new Guid("386770df-4089-482e-9b54-af375c37319f"));
			PartnershipInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartnershipInternalOrganisation.IsIndexed = true;

			PartnershipInternalOrganisation.AssociationType.ObjectType = this;

			PartnershipInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PartnershipInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PartnershipInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PartnershipInternalOrganisation.RoleType;

			var PartnershipPartner = new RelationType(AppsDomain.Instance, new Guid("c9a60b88-e525-4bcd-94bd-3fca8989319f"), new Guid("309ffb3e-7cd3-4958-9177-e7f25a272579"), new Guid("f77b776b-b957-418b-acfb-a4aad51f7a8a"));
			PartnershipPartner.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartnershipPartner.IsIndexed = true;

			PartnershipPartner.AssociationType.ObjectType = this;

			PartnershipPartner.RoleType.ObjectType = OrganisationClass.Instance;;
			PartnershipPartner.RoleType.AssignedSingularName = "Partner";
			PartnershipPartner.RoleType.AssignedPluralName = "Partners";
			this.Roles.Partner = PartnershipPartner.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartnershipClass.Instance.ConcreteRoles.InternalOrganisation = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			PartnershipClass.Instance.ConcreteRoles.Partner = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Partner]; 


		}

		internal class RolesType
		{
			internal RoleType InternalOrganisation;
			internal RoleType Partner;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Partner;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OperatingBudgetClass : Class
	{
		public static OperatingBudgetClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OperatingBudgetClass() : base(AppsDomain.Instance, new Guid("b5d151c7-0b18-4280-80d1-77b46162dba8"))
        {
			this.SingularName = "OperatingBudget";
			this.PluralName = "OperatingBudgets";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f0706b19-e5ce-427f-a04a-9cd483094bee"))
			{
				Subtype = Instance,
				Supertype = BudgetInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType BudgetRevision;
			internal ConcreteRoleType BudgetStatus;
			internal ConcreteRoleType BudgetNumber;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType BudgetReview;
			internal ConcreteRoleType CurrentBudgetStatus;
			internal ConcreteRoleType BudgetItem;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class BinClass : Class
	{
		public static BinClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BinClass() : base(AppsDomain.Instance, new Guid("b5d29ed3-b850-4607-9f49-9a920a2bffa1"))
        {
			this.SingularName = "Bin";
			this.PluralName = "Bins";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("25d53895-67ae-4ac8-ac11-50b08c587f09"))
			{
				Subtype = Instance,
				Supertype = ContainerInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ContainerDescription;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ManufacturingConfigurationClass : Class
	{
		public static ManufacturingConfigurationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ManufacturingConfigurationClass() : base(AppsDomain.Instance, new Guid("b6c168d6-3d5c-4f5f-b6c6-d348600f1483"))
        {
			this.SingularName = "ManufacturingConfiguration";
			this.PluralName = "ManufacturingConfigurations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5bec61f8-8388-4c69-8eb9-feaad55c9621"))
			{
				Subtype = Instance,
				Supertype = InventoryItemConfigurationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InventoryItem;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType ComponentInventoryItem;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class IUnitOfMeasureInterface: Interface
	{
		public static IUnitOfMeasureInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal IUnitOfMeasureInterface() : base(AppsDomain.Instance, new Guid("b7215af5-97d6-42b0-9f6f-c1fccb2bc695"))
        {
			this.SingularName = "IUnitOfMeasure";
			this.PluralName = "IUnitsOfMeasure";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("29a433a2-7ee9-48c5-afad-5714dd2da560"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("7831779b-588f-41d2-8032-30aef235dcef"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var IUnitOfMeasureDescription = new RelationType(AppsDomain.Instance, new Guid("22d65b11-5d96-4632-9e95-72e30b885942"), new Guid("873998c2-8c2e-415a-a3c3-6406b21febd8"), new Guid("0543bd39-be9a-49cb-ae23-5df243ee7ea5"));
			IUnitOfMeasureDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			IUnitOfMeasureDescription.AssociationType.ObjectType = this;

			IUnitOfMeasureDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			IUnitOfMeasureDescription.RoleType.AssignedSingularName = "Description";
			IUnitOfMeasureDescription.RoleType.AssignedPluralName = "Descriptions";
			IUnitOfMeasureDescription.RoleType.Size = 256;
			this.Roles.Description = IUnitOfMeasureDescription.RoleType;

			var IUnitOfMeasureUnitOfMeasureConversion = new RelationType(AppsDomain.Instance, new Guid("65c75f72-3bb4-415c-8aa7-b291d96dd157"), new Guid("9225dd82-fdb4-451f-a1cf-000fa37268f1"), new Guid("d202f3f6-2f04-4b2e-8c66-d630be77d76d"));
			IUnitOfMeasureUnitOfMeasureConversion.AssignedMultiplicity = Multiplicity.OneToMany;
			IUnitOfMeasureUnitOfMeasureConversion.IsIndexed = true;

			IUnitOfMeasureUnitOfMeasureConversion.AssociationType.ObjectType = this;

			IUnitOfMeasureUnitOfMeasureConversion.RoleType.ObjectType = UnitOfMeasureConversionClass.Instance;;
			IUnitOfMeasureUnitOfMeasureConversion.RoleType.AssignedSingularName = "UnitOfMeasureConversion";
			IUnitOfMeasureUnitOfMeasureConversion.RoleType.AssignedPluralName = "UnitOfMeasureConversions";
			this.Roles.UnitOfMeasureConversion = IUnitOfMeasureUnitOfMeasureConversion.RoleType;

			var IUnitOfMeasureAbbreviation = new RelationType(AppsDomain.Instance, new Guid("9b0e7410-6201-420c-9efc-0689edb33d42"), new Guid("2e153d1b-3e03-4ff6-84a6-39c9186999f8"), new Guid("60ebb0ec-bcb8-46c5-8293-36b3b0ad3bdb"));
			IUnitOfMeasureAbbreviation.AssignedMultiplicity = Multiplicity.OneToOne;
			IUnitOfMeasureAbbreviation.AssociationType.ObjectType = this;

			IUnitOfMeasureAbbreviation.RoleType.ObjectType = AllorsStringUnit.Instance;;
			IUnitOfMeasureAbbreviation.RoleType.AssignedSingularName = "Abbreviation";
			IUnitOfMeasureAbbreviation.RoleType.AssignedPluralName = "Abbreviations";
			IUnitOfMeasureAbbreviation.RoleType.Size = 256;
			this.Roles.Abbreviation = IUnitOfMeasureAbbreviation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TimeFrequencyClass.Instance.ConcreteRoles.Description = TimeFrequencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			UnitOfMeasureClass.Instance.ConcreteRoles.Description = UnitOfMeasureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			CurrencyClass.Instance.ConcreteRoles.Description = CurrencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			TimeFrequencyClass.Instance.ConcreteRoles.UnitOfMeasureConversion = TimeFrequencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasureConversion]; 
			UnitOfMeasureClass.Instance.ConcreteRoles.UnitOfMeasureConversion = UnitOfMeasureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasureConversion]; 
			CurrencyClass.Instance.ConcreteRoles.UnitOfMeasureConversion = CurrencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasureConversion]; 

			TimeFrequencyClass.Instance.ConcreteRoles.Abbreviation = TimeFrequencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			UnitOfMeasureClass.Instance.ConcreteRoles.Abbreviation = UnitOfMeasureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 
			CurrencyClass.Instance.ConcreteRoles.Abbreviation = CurrencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Abbreviation]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType UnitOfMeasureConversion;
			internal RoleType Abbreviation;

		}
	}public partial class ProfessionalPlacementClass : Class
	{
		public static ProfessionalPlacementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProfessionalPlacementClass() : base(AppsDomain.Instance, new Guid("b83205c5-261f-4d9d-9789-55966ae8d61b"))
        {
			this.SingularName = "ProfessionalPlacement";
			this.PluralName = "ProfessionalPlacements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("276b2fea-b262-46d0-b515-059a916abf27"))
			{
				Subtype = Instance,
				Supertype = EngagementItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType QuoteItem;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ExpectedStartDate;
			internal ConcreteRoleType ExpectedEndDate;
			internal ConcreteRoleType EngagementWorkFulfillment;
			internal ConcreteRoleType EngagementRate;
			internal ConcreteRoleType CurrentEngagementRate;
			internal ConcreteRoleType OrderedWith;
			internal ConcreteRoleType CurrentAssignedProfessional;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesRepCommissionClass : Class
	{
		public static SalesRepCommissionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesRepCommissionClass() : base(AppsDomain.Instance, new Guid("bb5e8196-f821-4fb8-98cb-f19416d1427c"))
        {
			this.SingularName = "SalesRepCommission";
			this.PluralName = "SalesRepCommissions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("249559c8-899d-4295-a87f-3a0da8cc6300"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesRepCommissionCommission = new RelationType(AppsDomain.Instance, new Guid("24a89a6a-dc83-431c-b94c-b2c976bc1784"), new Guid("f7da0085-eeb3-4a4c-bc5c-2b0b32340d80"), new Guid("3927fecb-c2fc-442e-b84e-1922a197acde"));
			SalesRepCommissionCommission.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepCommissionCommission.AssociationType.ObjectType = this;

			SalesRepCommissionCommission.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesRepCommissionCommission.RoleType.AssignedSingularName = "Commission";
			SalesRepCommissionCommission.RoleType.AssignedPluralName = "Commisisons";
			SalesRepCommissionCommission.RoleType.Scale = 2;
			SalesRepCommissionCommission.RoleType.Precision = 19;
			this.Roles.Commission = SalesRepCommissionCommission.RoleType;

			var SalesRepCommissionInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("af3ad6bb-70a1-4682-945c-4cad1407ecf2"), new Guid("cf6d2b69-9646-46d2-a7a1-d02f8b8ec954"), new Guid("6361ff04-7d8e-45f3-b3a5-efe1f6c983be"));
			SalesRepCommissionInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepCommissionInternalOrganisation.IsIndexed = true;

			SalesRepCommissionInternalOrganisation.AssociationType.ObjectType = this;

			SalesRepCommissionInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesRepCommissionInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			SalesRepCommissionInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = SalesRepCommissionInternalOrganisation.RoleType;

			var SalesRepCommissionSalesRepName = new RelationType(AppsDomain.Instance, new Guid("d1afca2c-802a-4e66-8c76-42a2e6a1e0a6"), new Guid("5215dffe-8b1d-43d2-8f88-c16d3e328456"), new Guid("803e015d-6022-4397-a7be-2dd1c2556cca"));
			SalesRepCommissionSalesRepName.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepCommissionSalesRepName.AssociationType.ObjectType = this;

			SalesRepCommissionSalesRepName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			SalesRepCommissionSalesRepName.RoleType.AssignedSingularName = "SalesRepName";
			SalesRepCommissionSalesRepName.RoleType.AssignedPluralName = "SalesRepNames";
			SalesRepCommissionSalesRepName.RoleType.Size = 256;
			this.Roles.SalesRepName = SalesRepCommissionSalesRepName.RoleType;

			var SalesRepCommissionMonth = new RelationType(AppsDomain.Instance, new Guid("d3cb9001-ff8c-47e0-b91d-4d3d3fd245ed"), new Guid("120813ab-5471-4fb6-aa85-417bfbf18559"), new Guid("c17a6b73-52de-41da-9d4d-f00faa10f60a"));
			SalesRepCommissionMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepCommissionMonth.AssociationType.ObjectType = this;

			SalesRepCommissionMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesRepCommissionMonth.RoleType.AssignedSingularName = "Month";
			SalesRepCommissionMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = SalesRepCommissionMonth.RoleType;

			var SalesRepCommissionYear = new RelationType(AppsDomain.Instance, new Guid("e7d499e6-9a91-41ea-837c-ede30bb19333"), new Guid("f8469819-f8fc-4762-a3fc-0117bb186269"), new Guid("51481c72-d94f-469f-a22e-57dbe9c1c8ca"));
			SalesRepCommissionYear.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepCommissionYear.AssociationType.ObjectType = this;

			SalesRepCommissionYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesRepCommissionYear.RoleType.AssignedSingularName = "Year";
			SalesRepCommissionYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = SalesRepCommissionYear.RoleType;

			var SalesRepCommissionCurrency = new RelationType(AppsDomain.Instance, new Guid("ea8de270-d03a-44cf-9b97-c233e1615d9e"), new Guid("7c2854ac-f4db-41e5-8b2f-7a9e9b376dff"), new Guid("bd39c031-3391-4b20-a57f-86c6e4c5b130"));
			SalesRepCommissionCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepCommissionCurrency.IsIndexed = true;

			SalesRepCommissionCurrency.AssociationType.ObjectType = this;

			SalesRepCommissionCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			SalesRepCommissionCurrency.RoleType.AssignedSingularName = "Currency";
			SalesRepCommissionCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = SalesRepCommissionCurrency.RoleType;

			var SalesRepCommissionSalesRep = new RelationType(AppsDomain.Instance, new Guid("f6d1ce52-7d8e-42e2-a76e-acc35e2b5dd8"), new Guid("743000d8-a71b-4638-9b3e-a5be4e45fd29"), new Guid("7e4d3cd9-4066-4186-a311-b1cd5155d632"));
			SalesRepCommissionSalesRep.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepCommissionSalesRep.IsIndexed = true;

			SalesRepCommissionSalesRep.AssociationType.ObjectType = this;

			SalesRepCommissionSalesRep.RoleType.ObjectType = PersonClass.Instance;;
			SalesRepCommissionSalesRep.RoleType.AssignedSingularName = "SalesRep";
			SalesRepCommissionSalesRep.RoleType.AssignedPluralName = "SalesReps";
			this.Roles.SalesRep = SalesRepCommissionSalesRep.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesRepCommissionClass.Instance.ConcreteRoles.Commission = SalesRepCommissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Commission]; 

			SalesRepCommissionClass.Instance.ConcreteRoles.InternalOrganisation = SalesRepCommissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			SalesRepCommissionClass.Instance.ConcreteRoles.SalesRepName = SalesRepCommissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRepName]; 

			SalesRepCommissionClass.Instance.ConcreteRoles.Month = SalesRepCommissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			SalesRepCommissionClass.Instance.ConcreteRoles.Year = SalesRepCommissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			SalesRepCommissionClass.Instance.ConcreteRoles.Currency = SalesRepCommissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			SalesRepCommissionClass.Instance.ConcreteRoles.SalesRep = SalesRepCommissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRep]; 


		}

		internal class RolesType
		{
			internal RoleType Commission;
			internal RoleType InternalOrganisation;
			internal RoleType SalesRepName;
			internal RoleType Month;
			internal RoleType Year;
			internal RoleType Currency;
			internal RoleType SalesRep;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Commission;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType SalesRepName;
			internal ConcreteRoleType Month;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType SalesRep;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CityBoundInterface: Interface
	{
		public static CityBoundInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal CityBoundInterface() : base(AppsDomain.Instance, new Guid("bfdd33dc-5701-41ec-a768-f745155663d3"))
        {
			this.SingularName = "CityBound";
			this.PluralName = "CityBounds";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5f139646-056d-4703-8063-57dc2cdab656"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var CityBoundCity = new RelationType(AppsDomain.Instance, new Guid("7723a00d-8764-40e2-99a8-a790401689b5"), new Guid("bb222d51-4e32-4182-8c45-8ce6db2f2cea"), new Guid("4aa9efbb-fc9d-44f3-b713-3b1493637467"));
			CityBoundCity.AssignedMultiplicity = Multiplicity.OneToMany;
			CityBoundCity.IsIndexed = true;

			CityBoundCity.AssociationType.ObjectType = this;

			CityBoundCity.RoleType.ObjectType = CityClass.Instance;;
			CityBoundCity.RoleType.AssignedSingularName = "City";
			CityBoundCity.RoleType.AssignedPluralName = "Cities";
			this.Roles.City = CityBoundCity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TerritoryClass.Instance.ConcreteRoles.City = TerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.City]; 
			ProvinceClass.Instance.ConcreteRoles.City = ProvinceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.City]; 
			StateClass.Instance.ConcreteRoles.City = StateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.City]; 
			CountyClass.Instance.ConcreteRoles.City = CountyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.City]; 
			CountryClass.Instance.ConcreteRoles.City = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.City]; 


		}

		internal class RolesType
		{
			internal RoleType City;

		}
	}public partial class DeductionClass : Class
	{
		public static DeductionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DeductionClass() : base(AppsDomain.Instance, new Guid("c04ccfcf-ae3f-4e7f-9e19-503ba547b678"))
        {
			this.SingularName = "Deduction";
			this.PluralName = "Deductions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f4c5b547-5ab2-47b0-bdbd-0deb7438d80e"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DeductionDeductionType = new RelationType(AppsDomain.Instance, new Guid("0deb347e-22c7-4b48-b461-aa579e156398"), new Guid("aced036b-04ba-41da-a3fd-fb3d0782b8c6"), new Guid("b09c7a91-bcca-4f80-b68c-309fdf1e80b0"));
			DeductionDeductionType.AssignedMultiplicity = Multiplicity.ManyToOne;
			DeductionDeductionType.IsIndexed = true;

			DeductionDeductionType.AssociationType.ObjectType = this;

			DeductionDeductionType.RoleType.ObjectType = DeductionTypeClass.Instance;;
			DeductionDeductionType.RoleType.AssignedSingularName = "DeductionType";
			DeductionDeductionType.RoleType.AssignedPluralName = "DeductionTypes";
			this.Roles.DeductionType = DeductionDeductionType.RoleType;

			var DeductionAmount = new RelationType(AppsDomain.Instance, new Guid("abaece2a-d56d-4af9-8421-1d587cd9dda2"), new Guid("b8d4b48b-292a-4348-8dba-15f89d573dd5"), new Guid("1077f672-905b-4198-ada5-e52fb34c986e"));
			DeductionAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			DeductionAmount.AssociationType.ObjectType = this;

			DeductionAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			DeductionAmount.RoleType.AssignedSingularName = "Amount";
			DeductionAmount.RoleType.AssignedPluralName = "Amounts";
			DeductionAmount.RoleType.Scale = 2;
			DeductionAmount.RoleType.Precision = 19;
			this.Roles.Amount = DeductionAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DeductionClass.Instance.ConcreteRoles.DeductionType = DeductionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeductionType]; 

			DeductionClass.Instance.ConcreteRoles.Amount = DeductionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 


		}

		internal class RolesType
		{
			internal RoleType DeductionType;
			internal RoleType Amount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeductionType;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CaseStatusClass : Class
	{
		public static CaseStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CaseStatusClass() : base(AppsDomain.Instance, new Guid("c0b015e0-57a4-4fe3-984b-12e8bda25db7"))
        {
			this.SingularName = "CaseStatus";
			this.PluralName = "CaseStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5ec68337-990f-4705-b6ff-e180490fe22b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CaseStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("28ef5fa2-7e2a-4ebb-b5a2-fe8cf7f18d04"), new Guid("9a1d40d3-0c58-4088-9a62-d7a35b787bf6"), new Guid("1acf2d5a-2631-48da-8e9a-222ff1293e83"));
			CaseStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			CaseStatusStartDateTime.AssociationType.ObjectType = this;

			CaseStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CaseStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			CaseStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = CaseStatusStartDateTime.RoleType;

			var CaseStatusCaseObjectState = new RelationType(AppsDomain.Instance, new Guid("332b3322-ef2e-4457-8503-045aa99061c9"), new Guid("76b6d6d5-e406-43aa-be3f-90a685a3f8dc"), new Guid("8fbd70e2-fc8c-4584-ac6c-82bc432f9326"));
			CaseStatusCaseObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CaseStatusCaseObjectState.IsIndexed = true;

			CaseStatusCaseObjectState.AssociationType.ObjectType = this;

			CaseStatusCaseObjectState.RoleType.ObjectType = CaseObjectStateClass.Instance;;
			CaseStatusCaseObjectState.RoleType.AssignedSingularName = "CaseObjectState";
			CaseStatusCaseObjectState.RoleType.AssignedPluralName = "CaseObjectStates";
			this.Roles.CaseObjectState = CaseStatusCaseObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CaseStatusClass.Instance.ConcreteRoles.StartDateTime = CaseStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			CaseStatusClass.Instance.ConcreteRoles.CaseObjectState = CaseStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CaseObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType CaseObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType CaseObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DiscountComponentClass : Class
	{
		public static DiscountComponentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DiscountComponentClass() : base(AppsDomain.Instance, new Guid("c0b927c4-7197-4295-8edf-057b6b4b3a6a"))
        {
			this.SingularName = "DiscountComponent";
			this.PluralName = "DiscountComponents";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("a51c71e9-f77c-48fa-988b-2f43acc354ea"))
			{
				Subtype = Instance,
				Supertype = PriceComponentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DiscountComponentPercentage = new RelationType(AppsDomain.Instance, new Guid("1101cd39-852b-4eac-8649-de1a3f080703"), new Guid("ff284a40-cfa1-4b5b-90ec-c42b4dc35ef5"), new Guid("88c08616-c1e6-4c53-b1e8-74fa33bc310d"));
			DiscountComponentPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			DiscountComponentPercentage.AssociationType.ObjectType = this;

			DiscountComponentPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			DiscountComponentPercentage.RoleType.AssignedSingularName = "Percentage";
			DiscountComponentPercentage.RoleType.AssignedPluralName = "Percentages";
			DiscountComponentPercentage.RoleType.Scale = 2;
			DiscountComponentPercentage.RoleType.Precision = 19;
			this.Roles.Percentage = DiscountComponentPercentage.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DiscountComponentClass.Instance.ConcreteRoles.Percentage = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Percentage]; 


		}

		internal class RolesType
		{
			internal RoleType Percentage;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Percentage;
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType Rate;
			internal ConcreteRoleType RevenueValueBreak;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType OrderQuantityBreak;
			internal ConcreteRoleType PackageQuantityBreak;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType RevenueQuantityBreak;
			internal ConcreteRoleType SpecifiedFor;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType AgreementPricingProgram;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType OrderKind;
			internal ConcreteRoleType OrderValue;
			internal ConcreteRoleType Price;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class OrganisationUnitClass : Class
	{
		public static OrganisationUnitClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OrganisationUnitClass() : base(AppsDomain.Instance, new Guid("c0e14757-9825-4a86-95d9-b87c68efcb9c"))
        {
			this.SingularName = "OrganisationUnit";
			this.PluralName = "OrganisationUnits";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cb76daef-3746-42ae-b74a-cd5aeab2fae2"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PartSubstituteClass : Class
	{
		public static PartSubstituteClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartSubstituteClass() : base(AppsDomain.Instance, new Guid("c0ea51d6-e9f1-4cb3-80ea-36d8ac4f8a15"))
        {
			this.SingularName = "PartSubstitute";
			this.PluralName = "PartSubstitutes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c6a9283c-d874-46a3-aad7-ceaba2e1b9c3"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("de32c7a2-770c-4512-b30b-38fed846a5cc"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartSubstituteSubstitutionPart = new RelationType(AppsDomain.Instance, new Guid("23f8fda9-9109-4826-988f-74e115a430f4"), new Guid("9f43aa6a-68d0-44f9-aecb-977b6f0d66ea"), new Guid("1a0b6784-dcbe-4f86-acb1-1a0408f00465"));
			PartSubstituteSubstitutionPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartSubstituteSubstitutionPart.IsIndexed = true;

			PartSubstituteSubstitutionPart.AssociationType.ObjectType = this;

			PartSubstituteSubstitutionPart.RoleType.ObjectType = PartInterface.Instance;;
			PartSubstituteSubstitutionPart.RoleType.AssignedSingularName = "SubstitutionPart";
			PartSubstituteSubstitutionPart.RoleType.AssignedPluralName = "SubstitutionParts";
			this.Roles.SubstitutionPart = PartSubstituteSubstitutionPart.RoleType;

			var PartSubstitutePreference = new RelationType(AppsDomain.Instance, new Guid("510f8f4c-ff09-4d32-8c1c-e905dbbd684b"), new Guid("25d0c7ec-767e-4509-9164-67dbec0d66f4"), new Guid("d2c04285-03ab-4391-9338-d158630793b0"));
			PartSubstitutePreference.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartSubstitutePreference.IsIndexed = true;

			PartSubstitutePreference.AssociationType.ObjectType = this;

			PartSubstitutePreference.RoleType.ObjectType = OrdinalClass.Instance;;
			PartSubstitutePreference.RoleType.AssignedSingularName = "Preference";
			PartSubstitutePreference.RoleType.AssignedPluralName = "Preferences";
			this.Roles.Preference = PartSubstitutePreference.RoleType;

			var PartSubstituteFromDate = new RelationType(AppsDomain.Instance, new Guid("9cd198eb-2c25-425e-a23b-c321938f2512"), new Guid("8f8c0254-8bb0-4e61-83b5-38b0b80d0b97"), new Guid("6939df10-1c96-4a64-aae4-201392e9fd59"));
			PartSubstituteFromDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PartSubstituteFromDate.AssociationType.ObjectType = this;

			PartSubstituteFromDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PartSubstituteFromDate.RoleType.AssignedSingularName = "FromDate";
			PartSubstituteFromDate.RoleType.AssignedPluralName = "FromDates";
			this.Roles.FromDate = PartSubstituteFromDate.RoleType;

			var PartSubstituteQuantity = new RelationType(AppsDomain.Instance, new Guid("ccb0a290-b3f4-4e55-b52c-67ca70d67439"), new Guid("0d0e7982-f7cb-4c6b-bff7-e59f81296d6b"), new Guid("ab2549fe-dd9a-45dd-a9b0-7e3ff1f6a68f"));
			PartSubstituteQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			PartSubstituteQuantity.AssociationType.ObjectType = this;

			PartSubstituteQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartSubstituteQuantity.RoleType.AssignedSingularName = "Quantity";
			PartSubstituteQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = PartSubstituteQuantity.RoleType;

			var PartSubstitutePart = new RelationType(AppsDomain.Instance, new Guid("e7d4ae25-175a-4e2a-88c2-9d8d5a468d1a"), new Guid("4986253b-2d85-45d1-8809-dcaab09e22f4"), new Guid("b85ed877-cd74-40cd-b2cf-aee6b24c3eeb"));
			PartSubstitutePart.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartSubstitutePart.IsIndexed = true;

			PartSubstitutePart.AssociationType.ObjectType = this;

			PartSubstitutePart.RoleType.ObjectType = PartInterface.Instance;;
			PartSubstitutePart.RoleType.AssignedSingularName = "Part";
			PartSubstitutePart.RoleType.AssignedPluralName = "Parts";
			this.Roles.Part = PartSubstitutePart.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartSubstituteClass.Instance.ConcreteRoles.SubstitutionPart = PartSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubstitutionPart]; 

			PartSubstituteClass.Instance.ConcreteRoles.Preference = PartSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Preference]; 

			PartSubstituteClass.Instance.ConcreteRoles.FromDate = PartSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 

			PartSubstituteClass.Instance.ConcreteRoles.Quantity = PartSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			PartSubstituteClass.Instance.ConcreteRoles.Part = PartSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 


		}

		internal class RolesType
		{
			internal RoleType SubstitutionPart;
			internal RoleType Preference;
			internal RoleType FromDate;
			internal RoleType Quantity;
			internal RoleType Part;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType SubstitutionPart;
			internal ConcreteRoleType Preference;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType Part;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class GoodOrderItemClass : Class
	{
		public static GoodOrderItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal GoodOrderItemClass() : base(AppsDomain.Instance, new Guid("c1b6fac9-8e69-4c07-8cec-e9b52c690e72"))
        {
			this.SingularName = "GoodOrderItem";
			this.PluralName = "GoodOrderItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("43d93bb8-900c-4c6e-892c-f750aaf40155"))
			{
				Subtype = Instance,
				Supertype = EngagementItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var GoodOrderItemPrice = new RelationType(AppsDomain.Instance, new Guid("de65b7a6-b2b3-4d77-9cb4-94720adb43f0"), new Guid("3ed4dffc-09eb-4285-a31c-ba3af0666451"), new Guid("2f1173ef-1723-4ee5-9ff3-a01b6216584a"));
			GoodOrderItemPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			GoodOrderItemPrice.AssociationType.ObjectType = this;

			GoodOrderItemPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			GoodOrderItemPrice.RoleType.AssignedSingularName = "Price";
			GoodOrderItemPrice.RoleType.AssignedPluralName = "Prices";
			GoodOrderItemPrice.RoleType.Scale = 2;
			GoodOrderItemPrice.RoleType.Precision = 19;
			this.Roles.Price = GoodOrderItemPrice.RoleType;

			var GoodOrderItemQuantity = new RelationType(AppsDomain.Instance, new Guid("f7399ebd-64f0-4bfa-a063-e75389d6a7cc"), new Guid("30b12a84-e2cc-4d24-aca3-71568961f9ee"), new Guid("bf1eeede-db39-4996-a2da-b3da503c2415"));
			GoodOrderItemQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			GoodOrderItemQuantity.AssociationType.ObjectType = this;

			GoodOrderItemQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			GoodOrderItemQuantity.RoleType.AssignedSingularName = "Quantity";
			GoodOrderItemQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = GoodOrderItemQuantity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			GoodOrderItemClass.Instance.ConcreteRoles.Price = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Price]; 

			GoodOrderItemClass.Instance.ConcreteRoles.Quantity = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 


		}

		internal class RolesType
		{
			internal RoleType Price;
			internal RoleType Quantity;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Price;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType QuoteItem;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ExpectedStartDate;
			internal ConcreteRoleType ExpectedEndDate;
			internal ConcreteRoleType EngagementWorkFulfillment;
			internal ConcreteRoleType EngagementRate;
			internal ConcreteRoleType CurrentEngagementRate;
			internal ConcreteRoleType OrderedWith;
			internal ConcreteRoleType CurrentAssignedProfessional;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class VolumeUsageClass : Class
	{
		public static VolumeUsageClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VolumeUsageClass() : base(AppsDomain.Instance, new Guid("c219edcd-71dc-4f0b-afee-4b06f3d785be"))
        {
			this.SingularName = "VolumeUsage";
			this.PluralName = "VolumeUsages";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("29ba7c85-7dd8-4db2-92f3-5b59120fa2be"))
			{
				Subtype = Instance,
				Supertype = DeploymentUsageInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var VolumeUsageQuantity = new RelationType(AppsDomain.Instance, new Guid("52e7e94c-3df5-46b5-97f7-27977fc82940"), new Guid("9b4f98c0-206b-4324-8f58-9adacead03c8"), new Guid("9c2c4c4e-ed7c-467f-8a35-65beee383a9d"));
			VolumeUsageQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			VolumeUsageQuantity.AssociationType.ObjectType = this;

			VolumeUsageQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			VolumeUsageQuantity.RoleType.AssignedSingularName = "Quantity";
			VolumeUsageQuantity.RoleType.AssignedPluralName = "Quantities";
			VolumeUsageQuantity.RoleType.Scale = 2;
			VolumeUsageQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = VolumeUsageQuantity.RoleType;

			var VolumeUsageUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("db33fa70-1a64-4f4a-97a8-ee1103b44e62"), new Guid("2f3b8c14-8eb0-41d5-9fc8-76d29c81d329"), new Guid("03a0c297-8d28-475e-88b7-ffad88d852e8"));
			VolumeUsageUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			VolumeUsageUnitOfMeasure.IsIndexed = true;

			VolumeUsageUnitOfMeasure.AssociationType.ObjectType = this;

			VolumeUsageUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			VolumeUsageUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			VolumeUsageUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = VolumeUsageUnitOfMeasure.RoleType;


		}

		internal override void SetRelationTypes()
		{
			VolumeUsageClass.Instance.ConcreteRoles.Quantity = VolumeUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			VolumeUsageClass.Instance.ConcreteRoles.UnitOfMeasure = VolumeUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 


		}

		internal class RolesType
		{
			internal RoleType Quantity;
			internal RoleType UnitOfMeasure;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType TimeFrequency;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class ProductQuoteClass : Class
	{
		public static ProductQuoteClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductQuoteClass() : base(AppsDomain.Instance, new Guid("c2214ff4-d592-4f0d-9215-e431b23dc9c2"))
        {
			this.SingularName = "ProductQuote";
			this.PluralName = "ProductQuotes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ab31e3cd-1574-4295-b754-0116d5e021ab"))
			{
				Subtype = Instance,
				Supertype = QuoteInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ValidFromDate;
			internal ConcreteRoleType QuoteTerm;
			internal ConcreteRoleType Issuer;
			internal ConcreteRoleType ValidThroughDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Receiver;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType IssueDate;
			internal ConcreteRoleType QuoteItem;
			internal ConcreteRoleType QuoteNumber;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class TransferStatusClass : Class
	{
		public static TransferStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TransferStatusClass() : base(AppsDomain.Instance, new Guid("c2b88d46-c321-48c4-9493-22a886d91bf9"))
        {
			this.SingularName = "TransferStatus";
			this.PluralName = "TransferStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("75a44fc8-0c6f-45fa-a7a0-41bf1910386b"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var TransferStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("05a4a5a6-cdaf-4ec8-9a34-cbd40753789b"), new Guid("a259de23-8d18-4d51-81e3-42796a144b5b"), new Guid("b3fd264c-91a5-425b-b9a0-48eb5cc765fd"));
			TransferStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			TransferStatusStartDateTime.AssociationType.ObjectType = this;

			TransferStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			TransferStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			TransferStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = TransferStatusStartDateTime.RoleType;

			var TransferStatusTransferObjectState = new RelationType(AppsDomain.Instance, new Guid("a08cde84-30e0-4f99-b6b5-35b45c3fa2b8"), new Guid("0fb9e813-bd7d-40c8-a1c2-10a569e873c8"), new Guid("63627877-78be-4ffc-aa0d-740049add137"));
			TransferStatusTransferObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			TransferStatusTransferObjectState.IsIndexed = true;

			TransferStatusTransferObjectState.AssociationType.ObjectType = this;

			TransferStatusTransferObjectState.RoleType.ObjectType = TransferObjectStateClass.Instance;;
			TransferStatusTransferObjectState.RoleType.AssignedSingularName = "TransferObjectState";
			TransferStatusTransferObjectState.RoleType.AssignedPluralName = "TransferObjectStates";
			this.Roles.TransferObjectState = TransferStatusTransferObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TransferStatusClass.Instance.ConcreteRoles.StartDateTime = TransferStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			TransferStatusClass.Instance.ConcreteRoles.TransferObjectState = TransferStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransferObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType TransferObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType TransferObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class StateClass : Class
	{
		public static StateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal StateClass() : base(AppsDomain.Instance, new Guid("c37f7876-51af-4748-b083-4a6e42e99597"))
        {
			this.SingularName = "State";
			this.PluralName = "States";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("29223f21-4db9-4d6d-a4e9-36269054890d"))
			{
				Subtype = Instance,
				Supertype = CityBoundInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("699447ab-3c2b-4540-9bb1-14efa7e10dbc"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("a6b836fb-ed20-4080-b981-f5fd16bc2760"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("f490eb23-5d9d-464d-bc7a-84a96bd8da2a"))
			{
				Subtype = Instance,
				Supertype = CountryBoundInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var StateName = new RelationType(AppsDomain.Instance, new Guid("35ee6ba1-e75f-43f4-b33e-593748b5e359"), new Guid("040f516a-f173-44ba-b12c-a768e3216aec"), new Guid("250129ac-caf9-486a-ae89-f47634738376"));
			StateName.AssignedMultiplicity = Multiplicity.OneToOne;
			StateName.AssociationType.ObjectType = this;

			StateName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			StateName.RoleType.AssignedSingularName = "Name";
			StateName.RoleType.AssignedPluralName = "Names";
			StateName.RoleType.Size = 256;
			this.Roles.Name = StateName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			StateClass.Instance.ConcreteRoles.Name = StateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType City;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Country;

		}
	}public partial class JournalEntryNumberClass : Class
	{
		public static JournalEntryNumberClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal JournalEntryNumberClass() : base(AppsDomain.Instance, new Guid("c47bf25f-7d16-4dcd-af3b-5e893a1cdd92"))
        {
			this.SingularName = "JournalEntryNumber";
			this.PluralName = "JournalEntryNumbers";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("721b3444-fda9-4e0b-bafa-91191cb97549"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var JournalEntryNumberJournalType = new RelationType(AppsDomain.Instance, new Guid("8fd6ce7a-0b08-4af4-9b7f-05a7e12445ed"), new Guid("0d39f242-de6a-4192-88e7-a78e5ddfcdb1"), new Guid("f5564eaa-202c-43c2-9dda-2e1500f0606d"));
			JournalEntryNumberJournalType.AssignedMultiplicity = Multiplicity.ManyToOne;
			JournalEntryNumberJournalType.IsIndexed = true;

			JournalEntryNumberJournalType.AssociationType.ObjectType = this;

			JournalEntryNumberJournalType.RoleType.ObjectType = JournalTypeClass.Instance;;
			JournalEntryNumberJournalType.RoleType.AssignedSingularName = "JournalType";
			JournalEntryNumberJournalType.RoleType.AssignedPluralName = "JournalTypes";
			this.Roles.JournalType = JournalEntryNumberJournalType.RoleType;

			var JournalEntryNumberNumber = new RelationType(AppsDomain.Instance, new Guid("99719445-24e6-445e-8ce1-60c0b5911723"), new Guid("4d278d9b-a817-4311-ba52-d1bd14db8cc2"), new Guid("2d669167-ac38-4dd1-a846-ba0f1b724bd2"));
			JournalEntryNumberNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalEntryNumberNumber.AssociationType.ObjectType = this;

			JournalEntryNumberNumber.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			JournalEntryNumberNumber.RoleType.AssignedSingularName = "Number";
			JournalEntryNumberNumber.RoleType.AssignedPluralName = "Number";
			this.Roles.Number = JournalEntryNumberNumber.RoleType;

			var JournalEntryNumberYear = new RelationType(AppsDomain.Instance, new Guid("a47d5af5-21a8-4d4f-a2be-956ae7da8819"), new Guid("fd990275-4217-46fd-9f2d-e7af28ff5598"), new Guid("863f988b-ffab-4896-bd0a-02daaabc6fc0"));
			JournalEntryNumberYear.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalEntryNumberYear.AssociationType.ObjectType = this;

			JournalEntryNumberYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			JournalEntryNumberYear.RoleType.AssignedSingularName = "Year";
			JournalEntryNumberYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = JournalEntryNumberYear.RoleType;


		}

		internal override void SetRelationTypes()
		{
			JournalEntryNumberClass.Instance.ConcreteRoles.JournalType = JournalEntryNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.JournalType]; 

			JournalEntryNumberClass.Instance.ConcreteRoles.Number = JournalEntryNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Number]; 

			JournalEntryNumberClass.Instance.ConcreteRoles.Year = JournalEntryNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 


		}

		internal class RolesType
		{
			internal RoleType JournalType;
			internal RoleType Number;
			internal RoleType Year;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType JournalType;
			internal ConcreteRoleType Number;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ToleranceClass : Class
	{
		public static ToleranceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ToleranceClass() : base(AppsDomain.Instance, new Guid("c4b51143-7e9c-4f1d-a34f-cc99f29a12e9"))
        {
			this.SingularName = "Tolerance";
			this.PluralName = "Tolerances";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cc3843ff-2229-49ea-8a33-d052a899bdeb"))
			{
				Subtype = Instance,
				Supertype = PartSpecificationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PartSpecificationStatus;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType DocumentationDate;
			internal ConcreteRoleType CurrentPartSpecificationStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class OrderAdjustmentInterface: Interface
	{
		public static OrderAdjustmentInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal OrderAdjustmentInterface() : base(AppsDomain.Instance, new Guid("c5578565-c07a-4dc1-8381-41955db364e2"))
        {
			this.SingularName = "OrderAdjustment";
			this.PluralName = "OrderAdjustments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("12188fb3-7099-4c62-b121-7d3d1372f38f"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var OrderAdjustmentAmount = new RelationType(AppsDomain.Instance, new Guid("4e7cbdda-9f19-44dd-bbef-6cab5d92a8a3"), new Guid("5ccd492c-cf29-468b-b99d-126a9573e573"), new Guid("7388d1a3-f24a-4c41-b57c-938160b3d1a6"));
			OrderAdjustmentAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderAdjustmentAmount.AssociationType.ObjectType = this;

			OrderAdjustmentAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderAdjustmentAmount.RoleType.AssignedSingularName = "Amount";
			OrderAdjustmentAmount.RoleType.AssignedPluralName = "Amounts";
			OrderAdjustmentAmount.RoleType.Scale = 2;
			OrderAdjustmentAmount.RoleType.Precision = 19;
			this.Roles.Amount = OrderAdjustmentAmount.RoleType;

			var OrderAdjustmentVatRate = new RelationType(AppsDomain.Instance, new Guid("78d6de86-0f4d-4d8e-a9a6-4730668fa754"), new Guid("51d96df2-1e92-4ea2-8ec7-e918d5781ae7"), new Guid("933a70e0-0fa0-42cd-a4d5-b3eb10b57802"));
			OrderAdjustmentVatRate.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderAdjustmentVatRate.IsIndexed = true;

			OrderAdjustmentVatRate.AssociationType.ObjectType = this;

			OrderAdjustmentVatRate.RoleType.ObjectType = VatRateClass.Instance;;
			OrderAdjustmentVatRate.RoleType.AssignedSingularName = "VatRate";
			OrderAdjustmentVatRate.RoleType.AssignedPluralName = "VatRates";
			this.Roles.VatRate = OrderAdjustmentVatRate.RoleType;

			var OrderAdjustmentPercentage = new RelationType(AppsDomain.Instance, new Guid("bc1ad594-88b6-4176-994c-a52be672f06d"), new Guid("ebc960bf-dd8c-4854-afec-185b260315e9"), new Guid("9d2f66e2-0bbd-46ab-b65b-43e6b38383b9"));
			OrderAdjustmentPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderAdjustmentPercentage.AssociationType.ObjectType = this;

			OrderAdjustmentPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderAdjustmentPercentage.RoleType.AssignedSingularName = "Percentage";
			OrderAdjustmentPercentage.RoleType.AssignedPluralName = "Percentages";
			OrderAdjustmentPercentage.RoleType.Scale = 2;
			OrderAdjustmentPercentage.RoleType.Precision = 19;
			this.Roles.Percentage = OrderAdjustmentPercentage.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DiscountAdjustmentClass.Instance.ConcreteRoles.Amount = DiscountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 
			SurchargeAdjustmentClass.Instance.ConcreteRoles.Amount = SurchargeAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 
			ShippingAndHandlingChargeClass.Instance.ConcreteRoles.Amount = ShippingAndHandlingChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 
			FeeClass.Instance.ConcreteRoles.Amount = FeeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 

			DiscountAdjustmentClass.Instance.ConcreteRoles.VatRate = DiscountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			SurchargeAdjustmentClass.Instance.ConcreteRoles.VatRate = SurchargeAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			ShippingAndHandlingChargeClass.Instance.ConcreteRoles.VatRate = ShippingAndHandlingChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			FeeClass.Instance.ConcreteRoles.VatRate = FeeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 

			DiscountAdjustmentClass.Instance.ConcreteRoles.Percentage = DiscountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Percentage]; 
			SurchargeAdjustmentClass.Instance.ConcreteRoles.Percentage = SurchargeAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Percentage]; 
			ShippingAndHandlingChargeClass.Instance.ConcreteRoles.Percentage = ShippingAndHandlingChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Percentage]; 
			FeeClass.Instance.ConcreteRoles.Percentage = FeeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Percentage]; 


		}

		internal class RolesType
		{
			internal RoleType Amount;
			internal RoleType VatRate;
			internal RoleType Percentage;

		}
	}public partial class EngineeringChangeClass : Class
	{
		public static EngineeringChangeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EngineeringChangeClass() : base(AppsDomain.Instance, new Guid("c6c4537a-21f8-4d62-b584-3c609fb2210f"))
        {
			this.SingularName = "EngineeringChange";
			this.PluralName = "EngineeringChanges";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("34a35d8d-3b4b-4084-a375-c522dd4daaea"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("4a710591-8145-49e9-a22b-ac1faf7756b3"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var EngineeringChangeRequestor = new RelationType(AppsDomain.Instance, new Guid("1a5edba2-6fda-4eb1-9e37-7a0e368ccff0"), new Guid("1858c16c-47e0-4707-ba58-acd34378d25e"), new Guid("3cdaec27-9203-4ed3-8b9d-a4995db9210d"));
			EngineeringChangeRequestor.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngineeringChangeRequestor.IsIndexed = true;

			EngineeringChangeRequestor.AssociationType.ObjectType = this;

			EngineeringChangeRequestor.RoleType.ObjectType = PersonClass.Instance;;
			EngineeringChangeRequestor.RoleType.AssignedSingularName = "Requestor";
			EngineeringChangeRequestor.RoleType.AssignedPluralName = "Requestors";
			this.Roles.Requestor = EngineeringChangeRequestor.RoleType;

			var EngineeringChangeAuthorizer = new RelationType(AppsDomain.Instance, new Guid("1b65b18b-c930-49b4-85e4-bb4b07dfdca2"), new Guid("a34d8a88-50c9-4ece-920c-a1d95388b5ab"), new Guid("5aa1e795-726a-4459-9c1a-e4efb82e807f"));
			EngineeringChangeAuthorizer.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngineeringChangeAuthorizer.IsIndexed = true;

			EngineeringChangeAuthorizer.AssociationType.ObjectType = this;

			EngineeringChangeAuthorizer.RoleType.ObjectType = PersonClass.Instance;;
			EngineeringChangeAuthorizer.RoleType.AssignedSingularName = "Authorizer";
			EngineeringChangeAuthorizer.RoleType.AssignedPluralName = "Authorizers";
			this.Roles.Authorizer = EngineeringChangeAuthorizer.RoleType;

			var EngineeringChangeDescription = new RelationType(AppsDomain.Instance, new Guid("4487e364-4c5e-4b84-8847-a6ec1f1a0e6f"), new Guid("79d6a20e-6bc9-49a4-bc81-c10c73871076"), new Guid("85ad4eb9-58e5-422b-a14d-767c7a07414d"));
			EngineeringChangeDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			EngineeringChangeDescription.AssociationType.ObjectType = this;

			EngineeringChangeDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EngineeringChangeDescription.RoleType.AssignedSingularName = "Description";
			EngineeringChangeDescription.RoleType.AssignedPluralName = "Descriptions";
			EngineeringChangeDescription.RoleType.Size = 256;
			this.Roles.Description = EngineeringChangeDescription.RoleType;

			var EngineeringChangePreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("4662a33f-24e2-48b1-a3a3-8c288ff3f523"), new Guid("93d71cc4-593a-4b04-bb78-1461b04aa9a0"), new Guid("ead6bb80-05d1-4552-93e9-d6278409629f"));
			EngineeringChangePreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngineeringChangePreviousObjectState.IsDerived = true;
			EngineeringChangePreviousObjectState.IsIndexed = true;

			EngineeringChangePreviousObjectState.AssociationType.ObjectType = this;

			EngineeringChangePreviousObjectState.RoleType.ObjectType = EngineeringChangeObjectStateClass.Instance;;
			EngineeringChangePreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			EngineeringChangePreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = EngineeringChangePreviousObjectState.RoleType;

			var EngineeringChangeDesigner = new RelationType(AppsDomain.Instance, new Guid("8d123834-364e-47d7-9d1e-63f4ef19f8c0"), new Guid("b42a9f7c-5032-44e6-97ed-ac4d1ff48445"), new Guid("b3943779-7867-4d29-b562-f67aeb595512"));
			EngineeringChangeDesigner.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngineeringChangeDesigner.IsIndexed = true;

			EngineeringChangeDesigner.AssociationType.ObjectType = this;

			EngineeringChangeDesigner.RoleType.ObjectType = PersonClass.Instance;;
			EngineeringChangeDesigner.RoleType.AssignedSingularName = "Designer";
			EngineeringChangeDesigner.RoleType.AssignedPluralName = "Designers";
			this.Roles.Designer = EngineeringChangeDesigner.RoleType;

			var EngineeringChangePartSpecification = new RelationType(AppsDomain.Instance, new Guid("9caba64b-4959-43f9-a6a6-c76dff62dc02"), new Guid("4709e3c9-c5cc-457c-a6ff-5eb981b3ef2e"), new Guid("9b113390-7966-4078-9651-e2c80143cee5"));
			EngineeringChangePartSpecification.AssignedMultiplicity = Multiplicity.ManyToMany;
			EngineeringChangePartSpecification.IsIndexed = true;

			EngineeringChangePartSpecification.AssociationType.ObjectType = this;

			EngineeringChangePartSpecification.RoleType.ObjectType = PartSpecificationInterface.Instance;;
			EngineeringChangePartSpecification.RoleType.AssignedSingularName = "PartSpecification";
			EngineeringChangePartSpecification.RoleType.AssignedPluralName = "PartSpecifications";
			this.Roles.PartSpecification = EngineeringChangePartSpecification.RoleType;

			var EngineeringChangePartBillOfMaterial = new RelationType(AppsDomain.Instance, new Guid("b076cdcc-7e3f-46c8-b127-98d29a4c9e4e"), new Guid("d0506d24-4cab-4030-be18-59dd879b4bef"), new Guid("a385c549-0dcf-4ed9-b6c5-f264bba435a9"));
			EngineeringChangePartBillOfMaterial.AssignedMultiplicity = Multiplicity.ManyToMany;
			EngineeringChangePartBillOfMaterial.IsIndexed = true;

			EngineeringChangePartBillOfMaterial.AssociationType.ObjectType = this;

			EngineeringChangePartBillOfMaterial.RoleType.ObjectType = PartBillOfMaterialInterface.Instance;;
			EngineeringChangePartBillOfMaterial.RoleType.AssignedSingularName = "PartBillOfMaterial";
			EngineeringChangePartBillOfMaterial.RoleType.AssignedPluralName = "PartBillOfMaterials";
			this.Roles.PartBillOfMaterial = EngineeringChangePartBillOfMaterial.RoleType;

			var EngineeringChangeCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("c360a1d9-5d8c-4295-aaae-2d50410dd293"), new Guid("2e3c4504-2130-45dd-b9bf-4e50abb021c0"), new Guid("91e1016b-0724-420f-9a6f-00294e61314a"));
			EngineeringChangeCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngineeringChangeCurrentObjectState.IsDerived = true;
			EngineeringChangeCurrentObjectState.IsIndexed = true;

			EngineeringChangeCurrentObjectState.AssociationType.ObjectType = this;

			EngineeringChangeCurrentObjectState.RoleType.ObjectType = EngineeringChangeObjectStateClass.Instance;;
			EngineeringChangeCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			EngineeringChangeCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = EngineeringChangeCurrentObjectState.RoleType;

			var EngineeringChangeEngineeringChangeStatus = new RelationType(AppsDomain.Instance, new Guid("caf244e2-f61d-436e-978c-1d0af118949f"), new Guid("a77aa2de-44a6-4ee1-aa13-45cf8c4da853"), new Guid("f94b94ed-6f33-43c2-b7e5-241823e59a4f"));
			EngineeringChangeEngineeringChangeStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			EngineeringChangeEngineeringChangeStatus.IsIndexed = true;

			EngineeringChangeEngineeringChangeStatus.AssociationType.ObjectType = this;

			EngineeringChangeEngineeringChangeStatus.RoleType.ObjectType = EngineeringChangeStatusClass.Instance;;
			EngineeringChangeEngineeringChangeStatus.RoleType.AssignedSingularName = "EngineeringChangeStatus";
			EngineeringChangeEngineeringChangeStatus.RoleType.AssignedPluralName = "EngineeringChangeStatuses";
			this.Roles.EngineeringChangeStatus = EngineeringChangeEngineeringChangeStatus.RoleType;

			var EngineeringChangeTester = new RelationType(AppsDomain.Instance, new Guid("d18955d3-1fce-46c9-bb44-5830bfdc09fd"), new Guid("078d9017-3d7a-4ba5-9c9b-58f778893a15"), new Guid("11d5ba0d-8c70-40a3-873d-ab27e1b8e4bf"));
			EngineeringChangeTester.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngineeringChangeTester.IsIndexed = true;

			EngineeringChangeTester.AssociationType.ObjectType = this;

			EngineeringChangeTester.RoleType.ObjectType = PersonClass.Instance;;
			EngineeringChangeTester.RoleType.AssignedSingularName = "Tester";
			EngineeringChangeTester.RoleType.AssignedPluralName = "Testers";
			this.Roles.Tester = EngineeringChangeTester.RoleType;

			var EngineeringChangeCurrentEngineeringChangeStatus = new RelationType(AppsDomain.Instance, new Guid("f56d7ad0-430d-482d-a298-5c41ffb082b4"), new Guid("30ec7448-b167-4273-bb00-cb87a604bb52"), new Guid("013964b5-022e-4b39-89ba-1cfb466fc3ff"));
			EngineeringChangeCurrentEngineeringChangeStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			EngineeringChangeCurrentEngineeringChangeStatus.IsDerived = true;
			EngineeringChangeCurrentEngineeringChangeStatus.IsIndexed = true;

			EngineeringChangeCurrentEngineeringChangeStatus.AssociationType.ObjectType = this;

			EngineeringChangeCurrentEngineeringChangeStatus.RoleType.ObjectType = EngineeringChangeStatusClass.Instance;;
			EngineeringChangeCurrentEngineeringChangeStatus.RoleType.AssignedSingularName = "CurrentEngineeringChangeStatus";
			EngineeringChangeCurrentEngineeringChangeStatus.RoleType.AssignedPluralName = "CurrentEngineeringChangeStatuses";
			this.Roles.CurrentEngineeringChangeStatus = EngineeringChangeCurrentEngineeringChangeStatus.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EngineeringChangeClass.Instance.ConcreteRoles.Requestor = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Requestor]; 

			EngineeringChangeClass.Instance.ConcreteRoles.Authorizer = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Authorizer]; 

			EngineeringChangeClass.Instance.ConcreteRoles.Description = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			EngineeringChangeClass.Instance.ConcreteRoles.PreviousObjectState = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			EngineeringChangeClass.Instance.ConcreteRoles.Designer = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Designer]; 

			EngineeringChangeClass.Instance.ConcreteRoles.PartSpecification = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartSpecification]; 

			EngineeringChangeClass.Instance.ConcreteRoles.PartBillOfMaterial = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartBillOfMaterial]; 

			EngineeringChangeClass.Instance.ConcreteRoles.CurrentObjectState = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			EngineeringChangeClass.Instance.ConcreteRoles.EngineeringChangeStatus = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngineeringChangeStatus]; 

			EngineeringChangeClass.Instance.ConcreteRoles.Tester = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Tester]; 

			EngineeringChangeClass.Instance.ConcreteRoles.CurrentEngineeringChangeStatus = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentEngineeringChangeStatus]; 


		}

		internal class RolesType
		{
			internal RoleType Requestor;
			internal RoleType Authorizer;
			internal RoleType Description;
			internal RoleType PreviousObjectState;
			internal RoleType Designer;
			internal RoleType PartSpecification;
			internal RoleType PartBillOfMaterial;
			internal RoleType CurrentObjectState;
			internal RoleType EngineeringChangeStatus;
			internal RoleType Tester;
			internal RoleType CurrentEngineeringChangeStatus;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Requestor;
			internal ConcreteRoleType Authorizer;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Designer;
			internal ConcreteRoleType PartSpecification;
			internal ConcreteRoleType PartBillOfMaterial;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType EngineeringChangeStatus;
			internal ConcreteRoleType Tester;
			internal ConcreteRoleType CurrentEngineeringChangeStatus;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class VatRatePurchaseKindClass : Class
	{
		public static VatRatePurchaseKindClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VatRatePurchaseKindClass() : base(AppsDomain.Instance, new Guid("c758f77e-e3b3-4517-831a-af1bf0e1dceb"))
        {
			this.SingularName = "VatRatePurchaseKind";
			this.PluralName = "VatRatePurchaseKinds";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("91620728-4b9f-4b22-809f-c2ff741cb6a5"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class EmailTemplateClass : Class
	{
		public static EmailTemplateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EmailTemplateClass() : base(AppsDomain.Instance, new Guid("c78a49b1-9918-4f15-95f3-c537c82f59fd"))
        {
			this.SingularName = "EmailTemplate";
			this.PluralName = "EmailTemplates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cc785e19-1084-4051-bd42-e600592616b2"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var EmailTemplateDescription = new RelationType(AppsDomain.Instance, new Guid("21bbeaa8-f4cf-4b09-9fcd-af72a70e6f15"), new Guid("18d3ed19-fcac-4010-9bcb-2c0f6f41acc1"), new Guid("27ade42e-f19f-444a-9134-db74add756b3"));
			EmailTemplateDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			EmailTemplateDescription.AssociationType.ObjectType = this;

			EmailTemplateDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EmailTemplateDescription.RoleType.AssignedSingularName = "Description";
			EmailTemplateDescription.RoleType.AssignedPluralName = "Descriptions";
			EmailTemplateDescription.RoleType.Size = 256;
			this.Roles.Description = EmailTemplateDescription.RoleType;

			var EmailTemplateBodyTemplate = new RelationType(AppsDomain.Instance, new Guid("8bb431b6-a6ea-48d0-ad78-975ec26b470f"), new Guid("15e1b022-709b-4443-a85c-c1b2956c14e9"), new Guid("8ce6a6a6-2387-4dd7-8bea-dec068aec152"));
			EmailTemplateBodyTemplate.AssignedMultiplicity = Multiplicity.OneToOne;
			EmailTemplateBodyTemplate.AssociationType.ObjectType = this;

			EmailTemplateBodyTemplate.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EmailTemplateBodyTemplate.RoleType.AssignedSingularName = "BodyTemplate";
			EmailTemplateBodyTemplate.RoleType.AssignedPluralName = "BodyTemplates";
			EmailTemplateBodyTemplate.RoleType.Size = -1;
			this.Roles.BodyTemplate = EmailTemplateBodyTemplate.RoleType;

			var EmailTemplateSubjectTemplate = new RelationType(AppsDomain.Instance, new Guid("f05fc608-5dcd-4d7d-b472-5b84c2a195a4"), new Guid("c00233a0-c9a2-4c01-88fc-9ea5eb7fd564"), new Guid("c39a94b3-455b-4602-8d55-abb2fca560ed"));
			EmailTemplateSubjectTemplate.AssignedMultiplicity = Multiplicity.OneToOne;
			EmailTemplateSubjectTemplate.AssociationType.ObjectType = this;

			EmailTemplateSubjectTemplate.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EmailTemplateSubjectTemplate.RoleType.AssignedSingularName = "SubjectTemplate";
			EmailTemplateSubjectTemplate.RoleType.AssignedPluralName = "SubjectTemplates";
			EmailTemplateSubjectTemplate.RoleType.Size = -1;
			this.Roles.SubjectTemplate = EmailTemplateSubjectTemplate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EmailTemplateClass.Instance.ConcreteRoles.Description = EmailTemplateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			EmailTemplateClass.Instance.ConcreteRoles.BodyTemplate = EmailTemplateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BodyTemplate]; 

			EmailTemplateClass.Instance.ConcreteRoles.SubjectTemplate = EmailTemplateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubjectTemplate]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType BodyTemplate;
			internal RoleType SubjectTemplate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType BodyTemplate;
			internal ConcreteRoleType SubjectTemplate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ThresholdClass : Class
	{
		public static ThresholdClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ThresholdClass() : base(AppsDomain.Instance, new Guid("c7b56330-1fb6-46c7-a042-04a4cf671ec1"))
        {
			this.SingularName = "Threshold";
			this.PluralName = "Thresholds";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d7b7beac-40a8-40c1-85ad-ee4e0241c9a7"))
			{
				Subtype = Instance,
				Supertype = AgreementTermInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType TermValue;
			internal ConcreteRoleType TermType;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EmploymentApplicationStatusClass : Class
	{
		public static EmploymentApplicationStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EmploymentApplicationStatusClass() : base(AppsDomain.Instance, new Guid("c7c24ce4-3455-4cec-a733-64a436434b3e"))
        {
			this.SingularName = "EmploymentApplicationStatus";
			this.PluralName = "EmploymentApplicationStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("da5e9500-3c3e-4f69-bab9-41005031f1bc"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class QualificationClass : Class
	{
		public static QualificationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal QualificationClass() : base(AppsDomain.Instance, new Guid("c8077ff8-f443-44b5-93f5-15ad7f4a258d"))
        {
			this.SingularName = "Qualification";
			this.PluralName = "Qualifications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("31865435-41e3-4c20-8b70-b5dfeb19168e"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class InternalOrganisationClass : Class
	{
		public static InternalOrganisationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal InternalOrganisationClass() : base(AppsDomain.Instance, new Guid("c81441c8-9ac9-440e-a926-c96230b2701f"))
        {
			this.SingularName = "InternalOrganisation";
			this.PluralName = "InternalOrganisations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("df1da5df-b70a-4197-9f39-6d370434186c"))
			{
				Subtype = Instance,
				Supertype = PartyInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var InternalOrganisationPurchaseOrderNumberPrefix = new RelationType(AppsDomain.Instance, new Guid("00bf781c-c874-44fe-ae60-d6609075b1c0"), new Guid("3b99af1e-e6c3-498b-aabd-78d6e82c8819"), new Guid("b9a508e2-2931-4ddc-ab34-947d19c2d742"));
			InternalOrganisationPurchaseOrderNumberPrefix.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationPurchaseOrderNumberPrefix.AssociationType.ObjectType = this;

			InternalOrganisationPurchaseOrderNumberPrefix.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationPurchaseOrderNumberPrefix.RoleType.AssignedSingularName = "PurchaseOrderNumberPrefix";
			InternalOrganisationPurchaseOrderNumberPrefix.RoleType.AssignedPluralName = "PurchaseOrderNumberPrefixes";
			InternalOrganisationPurchaseOrderNumberPrefix.RoleType.Size = 256;
			this.Roles.PurchaseOrderNumberPrefix = InternalOrganisationPurchaseOrderNumberPrefix.RoleType;

			var InternalOrganisationTransactionReferenceNumber = new RelationType(AppsDomain.Instance, new Guid("01d4f5d8-da57-4524-b35f-69a1a4adfa1c"), new Guid("84ff4f9a-b1d3-4e2c-aff6-52a9f75e874a"), new Guid("ee1b0251-ba57-490a-bdc9-c4e8fd6142ce"));
			InternalOrganisationTransactionReferenceNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationTransactionReferenceNumber.AssociationType.ObjectType = this;

			InternalOrganisationTransactionReferenceNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationTransactionReferenceNumber.RoleType.AssignedSingularName = "TransactionReferenceNumber";
			InternalOrganisationTransactionReferenceNumber.RoleType.AssignedPluralName = "TransactionReferenceNumbers";
			InternalOrganisationTransactionReferenceNumber.RoleType.Size = 256;
			this.Roles.TransactionReferenceNumber = InternalOrganisationTransactionReferenceNumber.RoleType;

			var InternalOrganisationJournalEntryNumber = new RelationType(AppsDomain.Instance, new Guid("0994b73e-8d4c-4fa4-aca2-287449b22ca7"), new Guid("17a9138e-76c8-42e1-85b8-7af73b551a22"), new Guid("09fbb64d-c32e-4734-8df9-6e741a5070a5"));
			InternalOrganisationJournalEntryNumber.AssignedMultiplicity = Multiplicity.OneToMany;
			InternalOrganisationJournalEntryNumber.IsIndexed = true;

			InternalOrganisationJournalEntryNumber.AssociationType.ObjectType = this;

			InternalOrganisationJournalEntryNumber.RoleType.ObjectType = JournalEntryNumberClass.Instance;;
			InternalOrganisationJournalEntryNumber.RoleType.AssignedSingularName = "JournalEntryNumber";
			InternalOrganisationJournalEntryNumber.RoleType.AssignedPluralName = "JournalEntryNumbers";
			this.Roles.JournalEntryNumber = InternalOrganisationJournalEntryNumber.RoleType;

			var InternalOrganisationEuListingState = new RelationType(AppsDomain.Instance, new Guid("1a2533cb-9b75-4597-83ab-9bbfc49e0103"), new Guid("b4cb12ba-0ea1-41e5-945a-030503bf2c7b"), new Guid("031ba0aa-32e4-470c-9a79-fae65cace2f2"));
			InternalOrganisationEuListingState.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationEuListingState.IsIndexed = true;

			InternalOrganisationEuListingState.AssociationType.ObjectType = this;

			InternalOrganisationEuListingState.RoleType.ObjectType = CountryClass.Instance;;
			InternalOrganisationEuListingState.RoleType.AssignedSingularName = "EuListingState";
			InternalOrganisationEuListingState.RoleType.AssignedPluralName = "EuListingState";
			this.Roles.EuListingState = InternalOrganisationEuListingState.RoleType;

			var InternalOrganisationPurchaseInvoiceCounter = new RelationType(AppsDomain.Instance, new Guid("1a986cbf-b7db-4850-af06-d96e1339beb7"), new Guid("fc69f819-2ca0-4ac4-b36e-cfff791679a1"), new Guid("d6e816ae-50c5-41c7-8877-9f4c30208d47"));
			InternalOrganisationPurchaseInvoiceCounter.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationPurchaseInvoiceCounter.IsIndexed = true;

			InternalOrganisationPurchaseInvoiceCounter.AssociationType.ObjectType = this;

			InternalOrganisationPurchaseInvoiceCounter.RoleType.ObjectType = CounterClass.Instance;;
			InternalOrganisationPurchaseInvoiceCounter.RoleType.AssignedSingularName = "PurchaseInvoiceCounter";
			InternalOrganisationPurchaseInvoiceCounter.RoleType.AssignedPluralName = "PurchaseInvoiceCounters";
			this.Roles.PurchaseInvoiceCounter = InternalOrganisationPurchaseInvoiceCounter.RoleType;

			var InternalOrganisationActualAccountingPeriod = new RelationType(AppsDomain.Instance, new Guid("219a1d97-9615-47c5-bc4d-20a7d37313bd"), new Guid("4fd6a9e2-174c-41db-b519-44c317de0f96"), new Guid("45f4d069-5faf-45cf-b097-21f58fab4097"));
			InternalOrganisationActualAccountingPeriod.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationActualAccountingPeriod.IsIndexed = true;

			InternalOrganisationActualAccountingPeriod.AssociationType.ObjectType = this;

			InternalOrganisationActualAccountingPeriod.RoleType.ObjectType = AccountingPeriodClass.Instance;;
			InternalOrganisationActualAccountingPeriod.RoleType.AssignedSingularName = "ActualAccountingPeriod";
			InternalOrganisationActualAccountingPeriod.RoleType.AssignedPluralName = "ActualAccountingPeriods";
			this.Roles.ActualAccountingPeriod = InternalOrganisationActualAccountingPeriod.RoleType;

			var InternalOrganisationInvoiceSequence = new RelationType(AppsDomain.Instance, new Guid("23aee857-9cea-481c-a4a3-72dd8b808d71"), new Guid("61c64e66-4647-439d-9efa-28500319e8ca"), new Guid("4d68b2fe-d5b4-45f8-9e68-377d75f3401d"));
			InternalOrganisationInvoiceSequence.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationInvoiceSequence.IsIndexed = true;

			InternalOrganisationInvoiceSequence.AssociationType.ObjectType = this;

			InternalOrganisationInvoiceSequence.RoleType.ObjectType = InvoiceSequenceClass.Instance;;
			InternalOrganisationInvoiceSequence.RoleType.AssignedSingularName = "InvoiceSequence";
			InternalOrganisationInvoiceSequence.RoleType.AssignedPluralName = "InvoiceSequences";
			this.Roles.InvoiceSequence = InternalOrganisationInvoiceSequence.RoleType;

			var InternalOrganisationActivePaymentMethod = new RelationType(AppsDomain.Instance, new Guid("293758d7-cc0a-4f1c-b122-84f609a828c2"), new Guid("afe9d80b-2984-4e46-b45c-e5a25af3bccd"), new Guid("97aa32a6-69c0-4cc5-9e42-98907ff6c45f"));
			InternalOrganisationActivePaymentMethod.AssignedMultiplicity = Multiplicity.OneToMany;
			InternalOrganisationActivePaymentMethod.IsDerived = true;
			InternalOrganisationActivePaymentMethod.IsIndexed = true;

			InternalOrganisationActivePaymentMethod.AssociationType.ObjectType = this;

			InternalOrganisationActivePaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			InternalOrganisationActivePaymentMethod.RoleType.AssignedSingularName = "ActivePaymentMethod";
			InternalOrganisationActivePaymentMethod.RoleType.AssignedPluralName = "ActivePaymentMethods";
			this.Roles.ActivePaymentMethod = InternalOrganisationActivePaymentMethod.RoleType;

			var InternalOrganisationPurchaseShipmentTemplate = new RelationType(AppsDomain.Instance, new Guid("33a47048-277a-40e8-bfe0-c8090eb179b2"), new Guid("81bc7c99-b328-4b81-9391-fe7659146924"), new Guid("403008e6-8c8a-437e-8b09-02573198e319"));
			InternalOrganisationPurchaseShipmentTemplate.AssignedMultiplicity = Multiplicity.ManyToMany;
			InternalOrganisationPurchaseShipmentTemplate.IsIndexed = true;

			InternalOrganisationPurchaseShipmentTemplate.AssociationType.ObjectType = this;

			InternalOrganisationPurchaseShipmentTemplate.RoleType.ObjectType = StringTemplateClass.Instance;;
			InternalOrganisationPurchaseShipmentTemplate.RoleType.AssignedSingularName = "PurchaseShipmentTemplate";
			InternalOrganisationPurchaseShipmentTemplate.RoleType.AssignedPluralName = "PurchaseShipmentTemplates";
			this.Roles.PurchaseShipmentTemplate = InternalOrganisationPurchaseShipmentTemplate.RoleType;

			var InternalOrganisationMaximumAllowedPaymentDifference = new RelationType(AppsDomain.Instance, new Guid("37b4bf2c-5b09-42b0-84d9-59b57793cf37"), new Guid("22aff7e0-1b45-4f06-b281-19cbf0d1c511"), new Guid("dcd31b64-e449-4833-91cb-8237bdb71b78"));
			InternalOrganisationMaximumAllowedPaymentDifference.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationMaximumAllowedPaymentDifference.AssociationType.ObjectType = this;

			InternalOrganisationMaximumAllowedPaymentDifference.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InternalOrganisationMaximumAllowedPaymentDifference.RoleType.AssignedSingularName = "MaximumAllowedPaymentDifference";
			InternalOrganisationMaximumAllowedPaymentDifference.RoleType.AssignedPluralName = "MaximumAllowedPaymentDifferences";
			InternalOrganisationMaximumAllowedPaymentDifference.RoleType.Scale = 2;
			InternalOrganisationMaximumAllowedPaymentDifference.RoleType.Precision = 19;
			this.Roles.MaximumAllowedPaymentDifference = InternalOrganisationMaximumAllowedPaymentDifference.RoleType;

			var InternalOrganisationLogoImage = new RelationType(AppsDomain.Instance, new Guid("39a09487-dcf4-4bc8-8494-859d7a8cc3dd"), new Guid("da98358b-fb19-4b40-ad32-ffc0b48583fe"), new Guid("9b20db3b-ac0e-4374-8262-3ee22f8067ee"));
			InternalOrganisationLogoImage.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationLogoImage.IsIndexed = true;

			InternalOrganisationLogoImage.AssociationType.ObjectType = this;

			InternalOrganisationLogoImage.RoleType.ObjectType = MediaClass.Instance;;
			InternalOrganisationLogoImage.RoleType.AssignedSingularName = "LogoImage";
			InternalOrganisationLogoImage.RoleType.AssignedPluralName = "LogoImages";
			this.Roles.LogoImage = InternalOrganisationLogoImage.RoleType;

			var InternalOrganisationCostCenterSplitMethod = new RelationType(AppsDomain.Instance, new Guid("3b32c442-9cbc-41d8-8eb2-2ae41beca2c4"), new Guid("eda352cd-00cc-4d04-99cf-f7ad667cb20a"), new Guid("b8211575-f4c9-44c8-89b2-bd122704f098"));
			InternalOrganisationCostCenterSplitMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationCostCenterSplitMethod.IsIndexed = true;

			InternalOrganisationCostCenterSplitMethod.AssociationType.ObjectType = this;

			InternalOrganisationCostCenterSplitMethod.RoleType.ObjectType = CostCenterSplitMethodClass.Instance;;
			InternalOrganisationCostCenterSplitMethod.RoleType.AssignedSingularName = "CostCenterSplitMethod";
			InternalOrganisationCostCenterSplitMethod.RoleType.AssignedPluralName = "CostCenterSplitMethods";
			this.Roles.CostCenterSplitMethod = InternalOrganisationCostCenterSplitMethod.RoleType;

			var InternalOrganisationPurchaseOrderCounter = new RelationType(AppsDomain.Instance, new Guid("44f165ed-a6ca-4979-9046-a0f7391bef7d"), new Guid("5e581649-0b45-498f-b274-fdcc05bb3894"), new Guid("1069343b-d6d5-4418-abf9-688b9dcec6d0"));
			InternalOrganisationPurchaseOrderCounter.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationPurchaseOrderCounter.IsIndexed = true;

			InternalOrganisationPurchaseOrderCounter.AssociationType.ObjectType = this;

			InternalOrganisationPurchaseOrderCounter.RoleType.ObjectType = CounterClass.Instance;;
			InternalOrganisationPurchaseOrderCounter.RoleType.AssignedSingularName = "PurchaseOrderCounter";
			InternalOrganisationPurchaseOrderCounter.RoleType.AssignedPluralName = "PurchaseOrderCounters";
			this.Roles.PurchaseOrderCounter = InternalOrganisationPurchaseOrderCounter.RoleType;

			var InternalOrganisationLegalForm = new RelationType(AppsDomain.Instance, new Guid("496f6d33-2259-442e-924f-636d73cec52f"), new Guid("4ac05596-41d8-402a-8308-d9f458d604e0"), new Guid("0739dac1-6507-4306-95c9-78f10532a78e"));
			InternalOrganisationLegalForm.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationLegalForm.IsIndexed = true;

			InternalOrganisationLegalForm.AssociationType.ObjectType = this;

			InternalOrganisationLegalForm.RoleType.ObjectType = LegalFormClass.Instance;;
			InternalOrganisationLegalForm.RoleType.AssignedSingularName = "LegalForm";
			InternalOrganisationLegalForm.RoleType.AssignedPluralName = "LegalForms";
			this.Roles.LegalForm = InternalOrganisationLegalForm.RoleType;

			var InternalOrganisationAccountingPeriod = new RelationType(AppsDomain.Instance, new Guid("49b087e2-9f55-463e-8e77-2500149ad771"), new Guid("1da60a2b-5359-4688-b925-edee515a2427"), new Guid("a0e7966c-1096-4491-a712-1dc38b58b67c"));
			InternalOrganisationAccountingPeriod.AssignedMultiplicity = Multiplicity.OneToMany;
			InternalOrganisationAccountingPeriod.IsIndexed = true;

			InternalOrganisationAccountingPeriod.AssociationType.ObjectType = this;

			InternalOrganisationAccountingPeriod.RoleType.ObjectType = AccountingPeriodClass.Instance;;
			InternalOrganisationAccountingPeriod.RoleType.AssignedSingularName = "AccountingPeriod";
			InternalOrganisationAccountingPeriod.RoleType.AssignedPluralName = "AccountingPeriods";
			this.Roles.AccountingPeriod = InternalOrganisationAccountingPeriod.RoleType;

			var InternalOrganisationSalesPaymentDifferencesAccount = new RelationType(AppsDomain.Instance, new Guid("4fc741ef-fe95-49a8-8bcd-8ff43092db88"), new Guid("0e58cd98-94e6-42ab-8501-394f8b8d3624"), new Guid("d5096d5d-a443-4667-95dd-7184f348e55c"));
			InternalOrganisationSalesPaymentDifferencesAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationSalesPaymentDifferencesAccount.IsIndexed = true;

			InternalOrganisationSalesPaymentDifferencesAccount.AssociationType.ObjectType = this;

			InternalOrganisationSalesPaymentDifferencesAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			InternalOrganisationSalesPaymentDifferencesAccount.RoleType.AssignedSingularName = "SalesPaymentDifferencesAccount";
			InternalOrganisationSalesPaymentDifferencesAccount.RoleType.AssignedPluralName = "SalesPaymentDifferencesAccounts";
			this.Roles.SalesPaymentDifferencesAccount = InternalOrganisationSalesPaymentDifferencesAccount.RoleType;

			var InternalOrganisationName = new RelationType(AppsDomain.Instance, new Guid("538fc59e-42da-471a-96a4-d8a93b2de229"), new Guid("d0f6dc1f-a056-4a8c-b138-d68a5cf10247"), new Guid("948f1ebc-a637-4c1b-ae35-dcc7462c95d0"));
			InternalOrganisationName.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationName.AssociationType.ObjectType = this;

			InternalOrganisationName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationName.RoleType.AssignedSingularName = "Name";
			InternalOrganisationName.RoleType.AssignedPluralName = "Names";
			InternalOrganisationName.RoleType.Size = 256;
			this.Roles.Name = InternalOrganisationName.RoleType;

			var InternalOrganisationPurchaseTransactionReferenceNumber = new RelationType(AppsDomain.Instance, new Guid("5b64038f-5ad9-46a6-9af6-b95819ac9830"), new Guid("753f6fa9-ff10-402c-9812-d2c738d35dbb"), new Guid("8411c910-14d4-4629-aa39-c58602a799d4"));
			InternalOrganisationPurchaseTransactionReferenceNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationPurchaseTransactionReferenceNumber.AssociationType.ObjectType = this;

			InternalOrganisationPurchaseTransactionReferenceNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationPurchaseTransactionReferenceNumber.RoleType.AssignedSingularName = "PurchaseTransactionReferenceNumber";
			InternalOrganisationPurchaseTransactionReferenceNumber.RoleType.AssignedPluralName = "PurchaseTransactionReferenceNumbers";
			InternalOrganisationPurchaseTransactionReferenceNumber.RoleType.Size = 256;
			this.Roles.PurchaseTransactionReferenceNumber = InternalOrganisationPurchaseTransactionReferenceNumber.RoleType;

			var InternalOrganisationFiscalYearStartMonth = new RelationType(AppsDomain.Instance, new Guid("5b64cf9d-e990-491e-b009-3481d73db67e"), new Guid("40296302-a559-4014-ba68-929d4238f4d8"), new Guid("5b966f3d-cc80-44f4-b255-87182aa796d4"));
			InternalOrganisationFiscalYearStartMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationFiscalYearStartMonth.AssociationType.ObjectType = this;

			InternalOrganisationFiscalYearStartMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			InternalOrganisationFiscalYearStartMonth.RoleType.AssignedSingularName = "FiscalYearStartMonth";
			InternalOrganisationFiscalYearStartMonth.RoleType.AssignedPluralName = "FiscalYearStartMonths";
			this.Roles.FiscalYearStartMonth = InternalOrganisationFiscalYearStartMonth.RoleType;

			var InternalOrganisationPurchaseOrderTemplate = new RelationType(AppsDomain.Instance, new Guid("5ca9eda8-278b-4466-99f3-8c61d0383ef4"), new Guid("5dd8f968-1ebf-4b94-be2d-11005d24aeb5"), new Guid("9e72477e-4729-4371-8f6b-80ff618705f7"));
			InternalOrganisationPurchaseOrderTemplate.AssignedMultiplicity = Multiplicity.ManyToMany;
			InternalOrganisationPurchaseOrderTemplate.IsIndexed = true;

			InternalOrganisationPurchaseOrderTemplate.AssociationType.ObjectType = this;

			InternalOrganisationPurchaseOrderTemplate.RoleType.ObjectType = StringTemplateClass.Instance;;
			InternalOrganisationPurchaseOrderTemplate.RoleType.AssignedSingularName = "PurchaseOrderTemplate";
			InternalOrganisationPurchaseOrderTemplate.RoleType.AssignedPluralName = "PurchaseOrderTemplates";
			this.Roles.PurchaseOrderTemplate = InternalOrganisationPurchaseOrderTemplate.RoleType;

			var InternalOrganisationCostOfGoodsSoldMethod = new RelationType(AppsDomain.Instance, new Guid("63c9ceb1-d583-41e1-a9a9-0c2576e9adfc"), new Guid("fd1ac2ff-6869-44bd-9b4e-05a3b14fbad9"), new Guid("41058049-5c44-47b7-bbb9-34ab0bdcfbcb"));
			InternalOrganisationCostOfGoodsSoldMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationCostOfGoodsSoldMethod.IsIndexed = true;

			InternalOrganisationCostOfGoodsSoldMethod.AssociationType.ObjectType = this;

			InternalOrganisationCostOfGoodsSoldMethod.RoleType.ObjectType = CostOfGoodsSoldMethodClass.Instance;;
			InternalOrganisationCostOfGoodsSoldMethod.RoleType.AssignedSingularName = "CostOfGoodsSoldMethod";
			InternalOrganisationCostOfGoodsSoldMethod.RoleType.AssignedPluralName = "CostOfGoodsSoldMethods";
			this.Roles.CostOfGoodsSoldMethod = InternalOrganisationCostOfGoodsSoldMethod.RoleType;

			var InternalOrganisationEmployeeRole = new RelationType(AppsDomain.Instance, new Guid("76acc9c6-0aa1-4b30-8cca-4629fdd56b91"), new Guid("b9f585f4-a612-451a-ac0e-4a2584982385"), new Guid("e9e6013f-9458-4d27-89a2-bced57a2b15f"));
			InternalOrganisationEmployeeRole.AssignedMultiplicity = Multiplicity.ManyToMany;
			InternalOrganisationEmployeeRole.IsIndexed = true;

			InternalOrganisationEmployeeRole.AssociationType.ObjectType = this;

			InternalOrganisationEmployeeRole.RoleType.ObjectType = RoleClass.Instance;;
			InternalOrganisationEmployeeRole.RoleType.AssignedSingularName = "EmployeeRole";
			InternalOrganisationEmployeeRole.RoleType.AssignedPluralName = "EmployeeRoles";
			this.Roles.EmployeeRole = InternalOrganisationEmployeeRole.RoleType;

			var InternalOrganisationVatDeactivated = new RelationType(AppsDomain.Instance, new Guid("77ae5145-791a-4ef0-94cc-6c9683b02f13"), new Guid("0da6cc82-b538-4346-bb48-19b02223a566"), new Guid("bef210d2-7af6-4653-872b-a5eebba2af87"));
			InternalOrganisationVatDeactivated.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationVatDeactivated.AssociationType.ObjectType = this;

			InternalOrganisationVatDeactivated.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			InternalOrganisationVatDeactivated.RoleType.AssignedSingularName = "VatDeactivated";
			InternalOrganisationVatDeactivated.RoleType.AssignedPluralName = "VatsDeactivated";
			this.Roles.VatDeactivated = InternalOrganisationVatDeactivated.RoleType;

			var InternalOrganisationFiscalYearStartDay = new RelationType(AppsDomain.Instance, new Guid("7e210c5e-a68b-4ea0-b019-1dd452d8e407"), new Guid("b9c41192-1666-44c0-9365-b24df29a2cdf"), new Guid("dfe3042c-babb-416b-a414-5dda0a2958c0"));
			InternalOrganisationFiscalYearStartDay.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationFiscalYearStartDay.AssociationType.ObjectType = this;

			InternalOrganisationFiscalYearStartDay.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			InternalOrganisationFiscalYearStartDay.RoleType.AssignedSingularName = "FiscalYearStartDay";
			InternalOrganisationFiscalYearStartDay.RoleType.AssignedPluralName = "FiscalYearStartDays";
			this.Roles.FiscalYearStartDay = InternalOrganisationFiscalYearStartDay.RoleType;

			var InternalOrganisationGeneralLedgerAccount = new RelationType(AppsDomain.Instance, new Guid("848f3098-ce8b-400c-9775-85c00ac68f28"), new Guid("44649646-ccf8-48b7-9ebf-a09df75d23fc"), new Guid("3d5a74b3-cb62-4803-8115-fde43a648af5"));
			InternalOrganisationGeneralLedgerAccount.AssignedMultiplicity = Multiplicity.OneToMany;
			InternalOrganisationGeneralLedgerAccount.IsDerived = true;
			InternalOrganisationGeneralLedgerAccount.IsIndexed = true;

			InternalOrganisationGeneralLedgerAccount.AssociationType.ObjectType = this;

			InternalOrganisationGeneralLedgerAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			InternalOrganisationGeneralLedgerAccount.RoleType.AssignedSingularName = "GeneralLedgerAccount";
			InternalOrganisationGeneralLedgerAccount.RoleType.AssignedPluralName = "GeneralLedgerAccounts";
			this.Roles.GeneralLedgerAccount = InternalOrganisationGeneralLedgerAccount.RoleType;

			var InternalOrganisationAccountingTransactionCounter = new RelationType(AppsDomain.Instance, new Guid("859d95c2-7321-4408-bcd1-405dc0b31efc"), new Guid("47674006-74f4-497e-b9b6-1d5cff1ada0f"), new Guid("0dc922be-86d0-469e-a9d2-5bf19a910994"));
			InternalOrganisationAccountingTransactionCounter.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationAccountingTransactionCounter.IsIndexed = true;

			InternalOrganisationAccountingTransactionCounter.AssociationType.ObjectType = this;

			InternalOrganisationAccountingTransactionCounter.RoleType.ObjectType = CounterClass.Instance;;
			InternalOrganisationAccountingTransactionCounter.RoleType.AssignedSingularName = "AccountingTransactionCounter";
			InternalOrganisationAccountingTransactionCounter.RoleType.AssignedPluralName = "AccountingTransactionCounters";
			this.Roles.AccountingTransactionCounter = InternalOrganisationAccountingTransactionCounter.RoleType;

			var InternalOrganisationIncomingShipmentCounter = new RelationType(AppsDomain.Instance, new Guid("86dd32e2-74e7-4ced-bfbd-4e1fdc723588"), new Guid("ab8ace70-5d23-4ba0-83f7-471a8dbefeb6"), new Guid("fa1a381c-a895-44d2-a028-860486b1d1af"));
			InternalOrganisationIncomingShipmentCounter.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationIncomingShipmentCounter.IsIndexed = true;

			InternalOrganisationIncomingShipmentCounter.AssociationType.ObjectType = this;

			InternalOrganisationIncomingShipmentCounter.RoleType.ObjectType = CounterClass.Instance;;
			InternalOrganisationIncomingShipmentCounter.RoleType.AssignedSingularName = "IncomingShipmentCounter";
			InternalOrganisationIncomingShipmentCounter.RoleType.AssignedPluralName = "IncomingShipmentCounters";
			this.Roles.IncomingShipmentCounter = InternalOrganisationIncomingShipmentCounter.RoleType;

			var InternalOrganisationRetainedEarningsAccount = new RelationType(AppsDomain.Instance, new Guid("89f4907d-4a10-428d-9e6b-ef9fb045c019"), new Guid("a0fd3167-5d4e-400f-b593-1497fce5d024"), new Guid("0ab03957-8140-4e1c-8a13-a9647f6c9e47"));
			InternalOrganisationRetainedEarningsAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationRetainedEarningsAccount.IsIndexed = true;

			InternalOrganisationRetainedEarningsAccount.AssociationType.ObjectType = this;

			InternalOrganisationRetainedEarningsAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			InternalOrganisationRetainedEarningsAccount.RoleType.AssignedSingularName = "RetainedEarningsAccount";
			InternalOrganisationRetainedEarningsAccount.RoleType.AssignedPluralName = "RetainedEarningsAccounts";
			this.Roles.RetainedEarningsAccount = InternalOrganisationRetainedEarningsAccount.RoleType;

			var InternalOrganisationPackagingSlipTemplate = new RelationType(AppsDomain.Instance, new Guid("9306706d-c35c-4e7d-af31-60ff13c348bd"), new Guid("7299e411-7fd5-4500-8e25-a44f0339806a"), new Guid("1975353f-30b6-4c4a-ab41-94886c8f7f5a"));
			InternalOrganisationPackagingSlipTemplate.AssignedMultiplicity = Multiplicity.ManyToMany;
			InternalOrganisationPackagingSlipTemplate.IsIndexed = true;

			InternalOrganisationPackagingSlipTemplate.AssociationType.ObjectType = this;

			InternalOrganisationPackagingSlipTemplate.RoleType.ObjectType = StringTemplateClass.Instance;;
			InternalOrganisationPackagingSlipTemplate.RoleType.AssignedSingularName = "PackagingSlipTemplate";
			InternalOrganisationPackagingSlipTemplate.RoleType.AssignedPluralName = "PackagingSlipTemplates";
			this.Roles.PackagingSlipTemplate = InternalOrganisationPackagingSlipTemplate.RoleType;

			var InternalOrganisationCustomer = new RelationType(AppsDomain.Instance, new Guid("9a2ab89e-c3bc-4b6b-a82d-417dc21c8f9e"), new Guid("fcc6e653-3787-44a0-8a3a-35e80e232a02"), new Guid("31549cf9-6418-4d19-96b0-5813cc964491"));
			InternalOrganisationCustomer.AssignedMultiplicity = Multiplicity.OneToMany;
			InternalOrganisationCustomer.IsDerived = true;
			InternalOrganisationCustomer.IsIndexed = true;

			InternalOrganisationCustomer.AssociationType.ObjectType = this;

			InternalOrganisationCustomer.RoleType.ObjectType = PartyInterface.Instance;;
			InternalOrganisationCustomer.RoleType.AssignedSingularName = "Customer";
			InternalOrganisationCustomer.RoleType.AssignedPluralName = "Customers";
			this.Roles.Customer = InternalOrganisationCustomer.RoleType;

			var InternalOrganisationPurchaseInvoiceNumberPrefix = new RelationType(AppsDomain.Instance, new Guid("9d6aaa81-9f97-427e-9f46-1f1e93748248"), new Guid("b251ce10-b4ac-45da-bc57-0a42e75f3660"), new Guid("6ffd36cd-37de-444b-93b6-4128de34254f"));
			InternalOrganisationPurchaseInvoiceNumberPrefix.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationPurchaseInvoiceNumberPrefix.AssociationType.ObjectType = this;

			InternalOrganisationPurchaseInvoiceNumberPrefix.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationPurchaseInvoiceNumberPrefix.RoleType.AssignedSingularName = "PurchaseInvoiceNumberPrefix";
			InternalOrganisationPurchaseInvoiceNumberPrefix.RoleType.AssignedPluralName = "PurchaseInvoiceNumberPrefixes";
			InternalOrganisationPurchaseInvoiceNumberPrefix.RoleType.Size = 256;
			this.Roles.PurchaseInvoiceNumberPrefix = InternalOrganisationPurchaseInvoiceNumberPrefix.RoleType;

			var InternalOrganisationPickListTemplate = new RelationType(AppsDomain.Instance, new Guid("a8d09b7d-5f55-4adb-897b-73b2c107932f"), new Guid("82e7ff09-f69c-4f22-97ad-80cae5730f19"), new Guid("9309b4cb-0552-4f9a-bf50-77bb686d8b8e"));
			InternalOrganisationPickListTemplate.AssignedMultiplicity = Multiplicity.ManyToMany;
			InternalOrganisationPickListTemplate.IsIndexed = true;

			InternalOrganisationPickListTemplate.AssociationType.ObjectType = this;

			InternalOrganisationPickListTemplate.RoleType.ObjectType = StringTemplateClass.Instance;;
			InternalOrganisationPickListTemplate.RoleType.AssignedSingularName = "PickListTemplate";
			InternalOrganisationPickListTemplate.RoleType.AssignedPluralName = "PickListTemplates";
			this.Roles.PickListTemplate = InternalOrganisationPickListTemplate.RoleType;

			var InternalOrganisationSalesPaymentDiscountDifferencesAccount = new RelationType(AppsDomain.Instance, new Guid("ab2004c1-fd91-4298-87cd-532a6fe5efb0"), new Guid("b53b80a4-92f5-4e08-a9fb-86bf2bd9572e"), new Guid("7fe218f4-975d-40f4-82b6-b43cb308aff4"));
			InternalOrganisationSalesPaymentDiscountDifferencesAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationSalesPaymentDiscountDifferencesAccount.IsIndexed = true;

			InternalOrganisationSalesPaymentDiscountDifferencesAccount.AssociationType.ObjectType = this;

			InternalOrganisationSalesPaymentDiscountDifferencesAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			InternalOrganisationSalesPaymentDiscountDifferencesAccount.RoleType.AssignedSingularName = "SalesPaymentDiscountDifferencesAccount";
			InternalOrganisationSalesPaymentDiscountDifferencesAccount.RoleType.AssignedPluralName = "SalesPaymentDiscountDifferencesAccounts";
			this.Roles.SalesPaymentDiscountDifferencesAccount = InternalOrganisationSalesPaymentDiscountDifferencesAccount.RoleType;

			var InternalOrganisationSubAccountCounter = new RelationType(AppsDomain.Instance, new Guid("ad7c8532-59d2-4668-bd9f-6c67ddc4e4bc"), new Guid("7028e722-f29d-42f6-b7c5-d73c2e99c907"), new Guid("48454368-06c6-4e64-876b-b5e4268407a4"));
			InternalOrganisationSubAccountCounter.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationSubAccountCounter.IsIndexed = true;

			InternalOrganisationSubAccountCounter.AssociationType.ObjectType = this;

			InternalOrganisationSubAccountCounter.RoleType.ObjectType = CounterClass.Instance;;
			InternalOrganisationSubAccountCounter.RoleType.AssignedSingularName = "SubAccountCounter";
			InternalOrganisationSubAccountCounter.RoleType.AssignedPluralName = "SubAccountCounters";
			this.Roles.SubAccountCounter = InternalOrganisationSubAccountCounter.RoleType;

			var InternalOrganisationAccountingTransactionNumber = new RelationType(AppsDomain.Instance, new Guid("afbaffe6-b03c-463e-b074-08b32641b482"), new Guid("4a02dff3-4bd3-4453-b2fa-e6e79f1b18b0"), new Guid("334cb83a-410e-4abb-8b51-9dd19e2fc21b"));
			InternalOrganisationAccountingTransactionNumber.AssignedMultiplicity = Multiplicity.OneToMany;
			InternalOrganisationAccountingTransactionNumber.IsIndexed = true;

			InternalOrganisationAccountingTransactionNumber.AssociationType.ObjectType = this;

			InternalOrganisationAccountingTransactionNumber.RoleType.ObjectType = AccountingTransactionNumberClass.Instance;;
			InternalOrganisationAccountingTransactionNumber.RoleType.AssignedSingularName = "AccountingTransactionNumber";
			InternalOrganisationAccountingTransactionNumber.RoleType.AssignedPluralName = "AccountingTransactionNumbers";
			this.Roles.AccountingTransactionNumber = InternalOrganisationAccountingTransactionNumber.RoleType;

			var InternalOrganisationQuoteTemplate = new RelationType(AppsDomain.Instance, new Guid("b79d1af6-f14a-4466-aba2-893bf554dbc1"), new Guid("e24f08c4-a880-42f7-907d-d844d48fa152"), new Guid("78650a41-e592-4889-8c62-2f16a2e7fa01"));
			InternalOrganisationQuoteTemplate.AssignedMultiplicity = Multiplicity.ManyToMany;
			InternalOrganisationQuoteTemplate.IsIndexed = true;

			InternalOrganisationQuoteTemplate.AssociationType.ObjectType = this;

			InternalOrganisationQuoteTemplate.RoleType.ObjectType = StringTemplateClass.Instance;;
			InternalOrganisationQuoteTemplate.RoleType.AssignedSingularName = "QuoteTemplate";
			InternalOrganisationQuoteTemplate.RoleType.AssignedPluralName = "QuoteTemplates";
			this.Roles.QuoteTemplate = InternalOrganisationQuoteTemplate.RoleType;

			var InternalOrganisationTransactionReferenceNumberPrefix = new RelationType(AppsDomain.Instance, new Guid("b8af8dce-d0e8-4e16-8d72-e56b920a04b4"), new Guid("57168fae-0b31-4370-afff-ab5a02c9a8ee"), new Guid("d4c44bcf-c38b-46b9-86f6-462a48714389"));
			InternalOrganisationTransactionReferenceNumberPrefix.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationTransactionReferenceNumberPrefix.AssociationType.ObjectType = this;

			InternalOrganisationTransactionReferenceNumberPrefix.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationTransactionReferenceNumberPrefix.RoleType.AssignedSingularName = "TransactionReferenceNumberPrefix";
			InternalOrganisationTransactionReferenceNumberPrefix.RoleType.AssignedPluralName = "TransactionReferenceNumberPrefixes";
			InternalOrganisationTransactionReferenceNumberPrefix.RoleType.Size = 256;
			this.Roles.TransactionReferenceNumberPrefix = InternalOrganisationTransactionReferenceNumberPrefix.RoleType;

			var InternalOrganisationQuoteCounter = new RelationType(AppsDomain.Instance, new Guid("ba00c0d2-6067-4584-bdc4-e6c72be77232"), new Guid("687afb94-445e-41e2-bf22-deaac5b40e5a"), new Guid("9fa5512e-098a-40fd-a821-38a5f5f280f5"));
			InternalOrganisationQuoteCounter.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationQuoteCounter.IsIndexed = true;

			InternalOrganisationQuoteCounter.AssociationType.ObjectType = this;

			InternalOrganisationQuoteCounter.RoleType.ObjectType = CounterClass.Instance;;
			InternalOrganisationQuoteCounter.RoleType.AssignedSingularName = "QuoteCounter";
			InternalOrganisationQuoteCounter.RoleType.AssignedPluralName = "QuoteCounters";
			this.Roles.QuoteCounter = InternalOrganisationQuoteCounter.RoleType;

			var InternalOrganisationPreviousCurrency = new RelationType(AppsDomain.Instance, new Guid("bce0d7d9-cfc9-4092-99a1-93ff5c0b94dd"), new Guid("5c4cfec8-5bc0-48d2-ac92-132c0538e614"), new Guid("bece103b-dde6-4319-938b-e08d23d9f99e"));
			InternalOrganisationPreviousCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationPreviousCurrency.IsDerived = true;
			InternalOrganisationPreviousCurrency.IsIndexed = true;

			InternalOrganisationPreviousCurrency.AssociationType.ObjectType = this;

			InternalOrganisationPreviousCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			InternalOrganisationPreviousCurrency.RoleType.AssignedSingularName = "PreviousCurrency";
			InternalOrganisationPreviousCurrency.RoleType.AssignedPluralName = "PreviousCurrencies";
			this.Roles.PreviousCurrency = InternalOrganisationPreviousCurrency.RoleType;

			var InternalOrganisationEmployee = new RelationType(AppsDomain.Instance, new Guid("cd40057a-5211-4289-a4ef-c30aa4049957"), new Guid("5dd54980-fa14-434c-80fc-64dec203fd8b"), new Guid("ca87441c-6ce7-4041-bdd4-ca83f3b19289"));
			InternalOrganisationEmployee.AssignedMultiplicity = Multiplicity.OneToMany;
			InternalOrganisationEmployee.IsDerived = true;
			InternalOrganisationEmployee.IsIndexed = true;

			InternalOrganisationEmployee.AssociationType.ObjectType = this;

			InternalOrganisationEmployee.RoleType.ObjectType = PersonClass.Instance;;
			InternalOrganisationEmployee.RoleType.AssignedSingularName = "Employee";
			InternalOrganisationEmployee.RoleType.AssignedPluralName = "Employees";
			this.Roles.Employee = InternalOrganisationEmployee.RoleType;

			var InternalOrganisationPurchasePaymentDifferencesAccount = new RelationType(AppsDomain.Instance, new Guid("d0ebaa65-260a-4511-a137-89f25016f12c"), new Guid("70e0b1a9-4c82-4c47-a6b8-df7a62423a08"), new Guid("1413c3f9-a226-4356-8bcc-6f8ae1963a6e"));
			InternalOrganisationPurchasePaymentDifferencesAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationPurchasePaymentDifferencesAccount.IsIndexed = true;

			InternalOrganisationPurchasePaymentDifferencesAccount.AssociationType.ObjectType = this;

			InternalOrganisationPurchasePaymentDifferencesAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			InternalOrganisationPurchasePaymentDifferencesAccount.RoleType.AssignedSingularName = "PurchasePaymentDifferencesAccount";
			InternalOrganisationPurchasePaymentDifferencesAccount.RoleType.AssignedPluralName = "PurchasePaymentDifferencesAccounts";
			this.Roles.PurchasePaymentDifferencesAccount = InternalOrganisationPurchasePaymentDifferencesAccount.RoleType;

			var InternalOrganisationSuspenceAccount = new RelationType(AppsDomain.Instance, new Guid("d2ad57d5-de30-4bc0-90a7-9aea7a9da8c7"), new Guid("dbd28e59-d5d6-4d95-aef1-6881e0fe2d48"), new Guid("2e28606f-5708-4c0f-bdfa-04019a0e97d9"));
			InternalOrganisationSuspenceAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationSuspenceAccount.IsIndexed = true;

			InternalOrganisationSuspenceAccount.AssociationType.ObjectType = this;

			InternalOrganisationSuspenceAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			InternalOrganisationSuspenceAccount.RoleType.AssignedSingularName = "SuspenceAccount";
			InternalOrganisationSuspenceAccount.RoleType.AssignedPluralName = "SuspenceAccounts";
			this.Roles.SuspenceAccount = InternalOrganisationSuspenceAccount.RoleType;

			var InternalOrganisationNetIncomeAccount = new RelationType(AppsDomain.Instance, new Guid("d48ef8bb-064b-4360-8162-a138fb601761"), new Guid("91252cf4-eca3-4b9d-b06d-5df795c3709c"), new Guid("3ef1f904-5b02-4f00-8486-2e452668be67"));
			InternalOrganisationNetIncomeAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationNetIncomeAccount.IsIndexed = true;

			InternalOrganisationNetIncomeAccount.AssociationType.ObjectType = this;

			InternalOrganisationNetIncomeAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			InternalOrganisationNetIncomeAccount.RoleType.AssignedSingularName = "NetIncomeAccount";
			InternalOrganisationNetIncomeAccount.RoleType.AssignedPluralName = "NetIncomeAccounts";
			this.Roles.NetIncomeAccount = InternalOrganisationNetIncomeAccount.RoleType;

			var InternalOrganisationDoAccounting = new RelationType(AppsDomain.Instance, new Guid("d5645df8-2b10-435d-8e47-57b5d268541a"), new Guid("4d145acb-007a-46b9-98a8-a86888221e28"), new Guid("c2fe67e4-a100-4d96-b4ff-df1ec73db5fe"));
			InternalOrganisationDoAccounting.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationDoAccounting.AssociationType.ObjectType = this;

			InternalOrganisationDoAccounting.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			InternalOrganisationDoAccounting.RoleType.AssignedSingularName = "DoAccounting";
			InternalOrganisationDoAccounting.RoleType.AssignedPluralName = "DosAccounting";
			this.Roles.DoAccounting = InternalOrganisationDoAccounting.RoleType;

			var InternalOrganisationDefaultFacility = new RelationType(AppsDomain.Instance, new Guid("dcf24d2f-7bf2-43fd-82b4-bd30fd545022"), new Guid("b4b8b2e6-141c-416f-89a8-746c72c26e5c"), new Guid("dc7127c4-c4ca-49a3-95ae-970de554d4f3"));
			InternalOrganisationDefaultFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationDefaultFacility.IsIndexed = true;

			InternalOrganisationDefaultFacility.AssociationType.ObjectType = this;

			InternalOrganisationDefaultFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			InternalOrganisationDefaultFacility.RoleType.AssignedSingularName = "DefaultFacility";
			InternalOrganisationDefaultFacility.RoleType.AssignedPluralName = "DefaultFacilities";
			this.Roles.DefaultFacility = InternalOrganisationDefaultFacility.RoleType;

			var InternalOrganisationPurchasePaymentDiscountDifferencesAccount = new RelationType(AppsDomain.Instance, new Guid("dd008dfe-a219-42ab-bc08-d091da3f8ea4"), new Guid("77ce8418-a00b-46d0-ab7b-4a782b7387da"), new Guid("a5ac9bc1-5323-41ec-a791-d4ecc7d0eee8"));
			InternalOrganisationPurchasePaymentDiscountDifferencesAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationPurchasePaymentDiscountDifferencesAccount.IsIndexed = true;

			InternalOrganisationPurchasePaymentDiscountDifferencesAccount.AssociationType.ObjectType = this;

			InternalOrganisationPurchasePaymentDiscountDifferencesAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			InternalOrganisationPurchasePaymentDiscountDifferencesAccount.RoleType.AssignedSingularName = "PurchasePaymentDiscountDifferencesAccount";
			InternalOrganisationPurchasePaymentDiscountDifferencesAccount.RoleType.AssignedPluralName = "PurchasePaymentDiscountDifferencesAccounts";
			this.Roles.PurchasePaymentDiscountDifferencesAccount = InternalOrganisationPurchasePaymentDiscountDifferencesAccount.RoleType;

			var InternalOrganisationSupplier = new RelationType(AppsDomain.Instance, new Guid("e09976e8-dc99-4539-9b0b-0bbe98cc5404"), new Guid("0d828c12-82bd-4b37-96c8-68997a7c2f48"), new Guid("3d362cd1-d49c-422f-9722-7276a6ee07c4"));
			InternalOrganisationSupplier.AssignedMultiplicity = Multiplicity.OneToMany;
			InternalOrganisationSupplier.IsDerived = true;
			InternalOrganisationSupplier.IsIndexed = true;

			InternalOrganisationSupplier.AssociationType.ObjectType = this;

			InternalOrganisationSupplier.RoleType.ObjectType = PartyInterface.Instance;;
			InternalOrganisationSupplier.RoleType.AssignedSingularName = "Supplier";
			InternalOrganisationSupplier.RoleType.AssignedPluralName = "Suppliers";
			this.Roles.Supplier = InternalOrganisationSupplier.RoleType;

			var InternalOrganisationQuoteNumberPrefix = new RelationType(AppsDomain.Instance, new Guid("e9af1ca5-d24f-4af2-8687-833744941b24"), new Guid("ca041d3d-7adf-43da-ac42-c749633bd9b8"), new Guid("4b50a77e-4343-415b-ad45-6cd074b681b5"));
			InternalOrganisationQuoteNumberPrefix.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationQuoteNumberPrefix.AssociationType.ObjectType = this;

			InternalOrganisationQuoteNumberPrefix.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationQuoteNumberPrefix.RoleType.AssignedSingularName = "QuoteNumberPrefix";
			InternalOrganisationQuoteNumberPrefix.RoleType.AssignedPluralName = "QuoteNumberPrefixes";
			InternalOrganisationQuoteNumberPrefix.RoleType.Size = 256;
			this.Roles.QuoteNumberPrefix = InternalOrganisationQuoteNumberPrefix.RoleType;

			var InternalOrganisationPurchaseTransactionReferenceNumberPrefix = new RelationType(AppsDomain.Instance, new Guid("ec8e7400-0088-4237-af32-a687e1c45d77"), new Guid("3ee2e0b2-6835-490b-937a-a853c85dd3e4"), new Guid("c70fd771-87a6-4e97-98ea-34c2c0265450"));
			InternalOrganisationPurchaseTransactionReferenceNumberPrefix.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationPurchaseTransactionReferenceNumberPrefix.AssociationType.ObjectType = this;

			InternalOrganisationPurchaseTransactionReferenceNumberPrefix.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationPurchaseTransactionReferenceNumberPrefix.RoleType.AssignedSingularName = "PurchaseTransactionReferenceNumberPrefix";
			InternalOrganisationPurchaseTransactionReferenceNumberPrefix.RoleType.AssignedPluralName = "PurchaseTransactionReferenceNumberPrefixes";
			InternalOrganisationPurchaseTransactionReferenceNumberPrefix.RoleType.Size = 256;
			this.Roles.PurchaseTransactionReferenceNumberPrefix = InternalOrganisationPurchaseTransactionReferenceNumberPrefix.RoleType;

			var InternalOrganisationTaxNumber = new RelationType(AppsDomain.Instance, new Guid("f14f1865-7820-4ed5-8ca9-dffcbeb6b1ec"), new Guid("4b8a7531-3996-4af2-a921-3b5653dc46ba"), new Guid("0b574be0-2369-41df-9f64-71235c0b9e9a"));
			InternalOrganisationTaxNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationTaxNumber.AssociationType.ObjectType = this;

			InternalOrganisationTaxNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationTaxNumber.RoleType.AssignedSingularName = "TaxNumber";
			InternalOrganisationTaxNumber.RoleType.AssignedPluralName = "TaxNumbers";
			InternalOrganisationTaxNumber.RoleType.Size = 256;
			this.Roles.TaxNumber = InternalOrganisationTaxNumber.RoleType;

			var InternalOrganisationCalculationDifferencesAccount = new RelationType(AppsDomain.Instance, new Guid("f353e7ef-d24d-4a27-8ec9-e930ef936240"), new Guid("cf556dfd-4b43-48e4-8243-df2650d8ce97"), new Guid("6b7bda76-5fe7-4526-8c79-b42324fd4090"));
			InternalOrganisationCalculationDifferencesAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			InternalOrganisationCalculationDifferencesAccount.IsIndexed = true;

			InternalOrganisationCalculationDifferencesAccount.AssociationType.ObjectType = this;

			InternalOrganisationCalculationDifferencesAccount.RoleType.ObjectType = GeneralLedgerAccountClass.Instance;;
			InternalOrganisationCalculationDifferencesAccount.RoleType.AssignedSingularName = "CalculationDifferencesAccount";
			InternalOrganisationCalculationDifferencesAccount.RoleType.AssignedPluralName = "CalculationDifferencesAccounts";
			this.Roles.CalculationDifferencesAccount = InternalOrganisationCalculationDifferencesAccount.RoleType;

			var InternalOrganisationPaymentMethod = new RelationType(AppsDomain.Instance, new Guid("f7ad4cfe-fc31-412c-8df7-2a514783e2ed"), new Guid("4145ddcd-726a-405f-b4cb-2e85b0bd60a2"), new Guid("7940e9e6-e6f6-4eac-bfa4-e14f63315276"));
			InternalOrganisationPaymentMethod.AssignedMultiplicity = Multiplicity.OneToMany;
			InternalOrganisationPaymentMethod.IsIndexed = true;

			InternalOrganisationPaymentMethod.AssociationType.ObjectType = this;

			InternalOrganisationPaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			InternalOrganisationPaymentMethod.RoleType.AssignedSingularName = "PaymentMethod";
			InternalOrganisationPaymentMethod.RoleType.AssignedPluralName = "PaymentMethods";
			this.Roles.PaymentMethod = InternalOrganisationPaymentMethod.RoleType;

			var InternalOrganisationIncomingShipmentNumberPrefix = new RelationType(AppsDomain.Instance, new Guid("fe96e14b-9dbd-4497-935f-f605abd2ada7"), new Guid("68f9e5fd-7398-456b-bcb8-27b23dbce3f1"), new Guid("3fc3517d-0d36-4401-a56f-ac3a83f1f892"));
			InternalOrganisationIncomingShipmentNumberPrefix.AssignedMultiplicity = Multiplicity.OneToOne;
			InternalOrganisationIncomingShipmentNumberPrefix.AssociationType.ObjectType = this;

			InternalOrganisationIncomingShipmentNumberPrefix.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InternalOrganisationIncomingShipmentNumberPrefix.RoleType.AssignedSingularName = "IncomingShipmentNumberPrefix";
			InternalOrganisationIncomingShipmentNumberPrefix.RoleType.AssignedPluralName = "IncomingShipmentNumberPrefixes";
			InternalOrganisationIncomingShipmentNumberPrefix.RoleType.Size = 256;
			this.Roles.IncomingShipmentNumberPrefix = InternalOrganisationIncomingShipmentNumberPrefix.RoleType;


		}

		internal override void SetRelationTypes()
		{
			InternalOrganisationClass.Instance.ConcreteRoles.PurchaseOrderNumberPrefix = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseOrderNumberPrefix]; 

			InternalOrganisationClass.Instance.ConcreteRoles.TransactionReferenceNumber = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionReferenceNumber]; 

			InternalOrganisationClass.Instance.ConcreteRoles.JournalEntryNumber = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.JournalEntryNumber]; 

			InternalOrganisationClass.Instance.ConcreteRoles.EuListingState = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EuListingState]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PurchaseInvoiceCounter = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseInvoiceCounter]; 

			InternalOrganisationClass.Instance.ConcreteRoles.ActualAccountingPeriod = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualAccountingPeriod]; 

			InternalOrganisationClass.Instance.ConcreteRoles.InvoiceSequence = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceSequence]; 

			InternalOrganisationClass.Instance.ConcreteRoles.ActivePaymentMethod = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActivePaymentMethod]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PurchaseShipmentTemplate = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseShipmentTemplate]; 

			InternalOrganisationClass.Instance.ConcreteRoles.MaximumAllowedPaymentDifference = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaximumAllowedPaymentDifference]; 

			InternalOrganisationClass.Instance.ConcreteRoles.LogoImage = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LogoImage]; 

			InternalOrganisationClass.Instance.ConcreteRoles.CostCenterSplitMethod = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CostCenterSplitMethod]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PurchaseOrderCounter = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseOrderCounter]; 

			InternalOrganisationClass.Instance.ConcreteRoles.LegalForm = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LegalForm]; 

			InternalOrganisationClass.Instance.ConcreteRoles.AccountingPeriod = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingPeriod]; 

			InternalOrganisationClass.Instance.ConcreteRoles.SalesPaymentDifferencesAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesPaymentDifferencesAccount]; 

			InternalOrganisationClass.Instance.ConcreteRoles.Name = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PurchaseTransactionReferenceNumber = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseTransactionReferenceNumber]; 

			InternalOrganisationClass.Instance.ConcreteRoles.FiscalYearStartMonth = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FiscalYearStartMonth]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PurchaseOrderTemplate = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseOrderTemplate]; 

			InternalOrganisationClass.Instance.ConcreteRoles.CostOfGoodsSoldMethod = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CostOfGoodsSoldMethod]; 

			InternalOrganisationClass.Instance.ConcreteRoles.EmployeeRole = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EmployeeRole]; 

			InternalOrganisationClass.Instance.ConcreteRoles.VatDeactivated = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatDeactivated]; 

			InternalOrganisationClass.Instance.ConcreteRoles.FiscalYearStartDay = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FiscalYearStartDay]; 

			InternalOrganisationClass.Instance.ConcreteRoles.GeneralLedgerAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccount]; 

			InternalOrganisationClass.Instance.ConcreteRoles.AccountingTransactionCounter = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionCounter]; 

			InternalOrganisationClass.Instance.ConcreteRoles.IncomingShipmentCounter = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IncomingShipmentCounter]; 

			InternalOrganisationClass.Instance.ConcreteRoles.RetainedEarningsAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RetainedEarningsAccount]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PackagingSlipTemplate = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PackagingSlipTemplate]; 

			InternalOrganisationClass.Instance.ConcreteRoles.Customer = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Customer]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PurchaseInvoiceNumberPrefix = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseInvoiceNumberPrefix]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PickListTemplate = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PickListTemplate]; 

			InternalOrganisationClass.Instance.ConcreteRoles.SalesPaymentDiscountDifferencesAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesPaymentDiscountDifferencesAccount]; 

			InternalOrganisationClass.Instance.ConcreteRoles.SubAccountCounter = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubAccountCounter]; 

			InternalOrganisationClass.Instance.ConcreteRoles.AccountingTransactionNumber = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AccountingTransactionNumber]; 

			InternalOrganisationClass.Instance.ConcreteRoles.QuoteTemplate = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteTemplate]; 

			InternalOrganisationClass.Instance.ConcreteRoles.TransactionReferenceNumberPrefix = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TransactionReferenceNumberPrefix]; 

			InternalOrganisationClass.Instance.ConcreteRoles.QuoteCounter = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteCounter]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PreviousCurrency = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousCurrency]; 

			InternalOrganisationClass.Instance.ConcreteRoles.Employee = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Employee]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PurchasePaymentDifferencesAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchasePaymentDifferencesAccount]; 

			InternalOrganisationClass.Instance.ConcreteRoles.SuspenceAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SuspenceAccount]; 

			InternalOrganisationClass.Instance.ConcreteRoles.NetIncomeAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NetIncomeAccount]; 

			InternalOrganisationClass.Instance.ConcreteRoles.DoAccounting = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DoAccounting]; 

			InternalOrganisationClass.Instance.ConcreteRoles.DefaultFacility = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultFacility]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PurchasePaymentDiscountDifferencesAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchasePaymentDiscountDifferencesAccount]; 

			InternalOrganisationClass.Instance.ConcreteRoles.Supplier = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Supplier]; 

			InternalOrganisationClass.Instance.ConcreteRoles.QuoteNumberPrefix = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteNumberPrefix]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PurchaseTransactionReferenceNumberPrefix = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PurchaseTransactionReferenceNumberPrefix]; 

			InternalOrganisationClass.Instance.ConcreteRoles.TaxNumber = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TaxNumber]; 

			InternalOrganisationClass.Instance.ConcreteRoles.CalculationDifferencesAccount = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CalculationDifferencesAccount]; 

			InternalOrganisationClass.Instance.ConcreteRoles.PaymentMethod = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 

			InternalOrganisationClass.Instance.ConcreteRoles.IncomingShipmentNumberPrefix = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IncomingShipmentNumberPrefix]; 


		}

		internal class RolesType
		{
			internal RoleType PurchaseOrderNumberPrefix;
			internal RoleType TransactionReferenceNumber;
			internal RoleType JournalEntryNumber;
			internal RoleType EuListingState;
			internal RoleType PurchaseInvoiceCounter;
			internal RoleType ActualAccountingPeriod;
			internal RoleType InvoiceSequence;
			internal RoleType ActivePaymentMethod;
			internal RoleType PurchaseShipmentTemplate;
			internal RoleType MaximumAllowedPaymentDifference;
			internal RoleType LogoImage;
			internal RoleType CostCenterSplitMethod;
			internal RoleType PurchaseOrderCounter;
			internal RoleType LegalForm;
			internal RoleType AccountingPeriod;
			internal RoleType SalesPaymentDifferencesAccount;
			internal RoleType Name;
			internal RoleType PurchaseTransactionReferenceNumber;
			internal RoleType FiscalYearStartMonth;
			internal RoleType PurchaseOrderTemplate;
			internal RoleType CostOfGoodsSoldMethod;
			internal RoleType EmployeeRole;
			internal RoleType VatDeactivated;
			internal RoleType FiscalYearStartDay;
			internal RoleType GeneralLedgerAccount;
			internal RoleType AccountingTransactionCounter;
			internal RoleType IncomingShipmentCounter;
			internal RoleType RetainedEarningsAccount;
			internal RoleType PackagingSlipTemplate;
			internal RoleType Customer;
			internal RoleType PurchaseInvoiceNumberPrefix;
			internal RoleType PickListTemplate;
			internal RoleType SalesPaymentDiscountDifferencesAccount;
			internal RoleType SubAccountCounter;
			internal RoleType AccountingTransactionNumber;
			internal RoleType QuoteTemplate;
			internal RoleType TransactionReferenceNumberPrefix;
			internal RoleType QuoteCounter;
			internal RoleType PreviousCurrency;
			internal RoleType Employee;
			internal RoleType PurchasePaymentDifferencesAccount;
			internal RoleType SuspenceAccount;
			internal RoleType NetIncomeAccount;
			internal RoleType DoAccounting;
			internal RoleType DefaultFacility;
			internal RoleType PurchasePaymentDiscountDifferencesAccount;
			internal RoleType Supplier;
			internal RoleType QuoteNumberPrefix;
			internal RoleType PurchaseTransactionReferenceNumberPrefix;
			internal RoleType TaxNumber;
			internal RoleType CalculationDifferencesAccount;
			internal RoleType PaymentMethod;
			internal RoleType IncomingShipmentNumberPrefix;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PurchaseOrderNumberPrefix;
			internal ConcreteRoleType TransactionReferenceNumber;
			internal ConcreteRoleType JournalEntryNumber;
			internal ConcreteRoleType EuListingState;
			internal ConcreteRoleType PurchaseInvoiceCounter;
			internal ConcreteRoleType ActualAccountingPeriod;
			internal ConcreteRoleType InvoiceSequence;
			internal ConcreteRoleType ActivePaymentMethod;
			internal ConcreteRoleType PurchaseShipmentTemplate;
			internal ConcreteRoleType MaximumAllowedPaymentDifference;
			internal ConcreteRoleType LogoImage;
			internal ConcreteRoleType CostCenterSplitMethod;
			internal ConcreteRoleType PurchaseOrderCounter;
			internal ConcreteRoleType LegalForm;
			internal ConcreteRoleType AccountingPeriod;
			internal ConcreteRoleType SalesPaymentDifferencesAccount;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType PurchaseTransactionReferenceNumber;
			internal ConcreteRoleType FiscalYearStartMonth;
			internal ConcreteRoleType PurchaseOrderTemplate;
			internal ConcreteRoleType CostOfGoodsSoldMethod;
			internal ConcreteRoleType EmployeeRole;
			internal ConcreteRoleType VatDeactivated;
			internal ConcreteRoleType FiscalYearStartDay;
			internal ConcreteRoleType GeneralLedgerAccount;
			internal ConcreteRoleType AccountingTransactionCounter;
			internal ConcreteRoleType IncomingShipmentCounter;
			internal ConcreteRoleType RetainedEarningsAccount;
			internal ConcreteRoleType PackagingSlipTemplate;
			internal ConcreteRoleType Customer;
			internal ConcreteRoleType PurchaseInvoiceNumberPrefix;
			internal ConcreteRoleType PickListTemplate;
			internal ConcreteRoleType SalesPaymentDiscountDifferencesAccount;
			internal ConcreteRoleType SubAccountCounter;
			internal ConcreteRoleType AccountingTransactionNumber;
			internal ConcreteRoleType QuoteTemplate;
			internal ConcreteRoleType TransactionReferenceNumberPrefix;
			internal ConcreteRoleType QuoteCounter;
			internal ConcreteRoleType PreviousCurrency;
			internal ConcreteRoleType Employee;
			internal ConcreteRoleType PurchasePaymentDifferencesAccount;
			internal ConcreteRoleType SuspenceAccount;
			internal ConcreteRoleType NetIncomeAccount;
			internal ConcreteRoleType DoAccounting;
			internal ConcreteRoleType DefaultFacility;
			internal ConcreteRoleType PurchasePaymentDiscountDifferencesAccount;
			internal ConcreteRoleType Supplier;
			internal ConcreteRoleType QuoteNumberPrefix;
			internal ConcreteRoleType PurchaseTransactionReferenceNumberPrefix;
			internal ConcreteRoleType TaxNumber;
			internal ConcreteRoleType CalculationDifferencesAccount;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType IncomingShipmentNumberPrefix;
			internal ConcreteRoleType YTDRevenue;
			internal ConcreteRoleType LastYearsRevenue;
			internal ConcreteRoleType BillingInquiriesFax;
			internal ConcreteRoleType Qualification;
			internal ConcreteRoleType HomeAddress;
			internal ConcreteRoleType SalesOffice;
			internal ConcreteRoleType OrderInquiriesFax;
			internal ConcreteRoleType CurrentSalesRep;
			internal ConcreteRoleType PartyContactMechanism;
			internal ConcreteRoleType ShippingInquiriesFax;
			internal ConcreteRoleType ShippingInquiriesPhone;
			internal ConcreteRoleType BillingAccount;
			internal ConcreteRoleType OrderInquiriesPhone;
			internal ConcreteRoleType PartySkill;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType ExcludeFromDunning;
			internal ConcreteRoleType BankAccount;
			internal ConcreteRoleType BillingAddress;
			internal ConcreteRoleType DefaultShipmentMethod;
			internal ConcreteRoleType Resume;
			internal ConcreteRoleType HeadQuarter;
			internal ConcreteRoleType PersonalEmailAddress;
			internal ConcreteRoleType CellPhoneNumber;
			internal ConcreteRoleType BillingInquiriesPhone;
			internal ConcreteRoleType PartyName;
			internal ConcreteRoleType OrderAddress;
			internal ConcreteRoleType InternetAddress;
			internal ConcreteRoleType Content;
			internal ConcreteRoleType CreditCard;
			internal ConcreteRoleType ShippingAddress;
			internal ConcreteRoleType OpenOrderAmount;
			internal ConcreteRoleType GeneralFaxNumber;
			internal ConcreteRoleType DefaultPaymentMethod;
			internal ConcreteRoleType GeneralPhoneNumber;
			internal ConcreteRoleType PreferredCurrency;
			internal ConcreteRoleType VatRegime;
			internal ConcreteRoleType Locale;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType OwnerSecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class EstimatedProductCostInterface: Interface
	{
		public static EstimatedProductCostInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal EstimatedProductCostInterface() : base(AppsDomain.Instance, new Guid("c8df7ac5-4e6f-4add-981f-f0d9a8c14e24"))
        {
			this.SingularName = "EstimatedProductCost";
			this.PluralName = "EstimatedProductCosts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1c1b9eaa-ed99-452e-b9d3-f67758c3f3d7"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("91836dc5-ea42-4653-a952-be60a95d7258"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var EstimatedProductCostCost = new RelationType(AppsDomain.Instance, new Guid("2a8f919f-19f0-4b33-b8b8-26937d49d298"), new Guid("6d46215f-6af1-49b9-bc27-41de412a5b43"), new Guid("0d0adab4-db9a-492b-8aaf-e40b864705aa"));
			EstimatedProductCostCost.AssignedMultiplicity = Multiplicity.OneToOne;
			EstimatedProductCostCost.AssociationType.ObjectType = this;

			EstimatedProductCostCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			EstimatedProductCostCost.RoleType.AssignedSingularName = "Cost";
			EstimatedProductCostCost.RoleType.AssignedPluralName = "Costs";
			EstimatedProductCostCost.RoleType.Scale = 2;
			EstimatedProductCostCost.RoleType.Precision = 19;
			this.Roles.Cost = EstimatedProductCostCost.RoleType;

			var EstimatedProductCostCurrency = new RelationType(AppsDomain.Instance, new Guid("78a7ee9c-4aeb-471d-ae17-5878737f1f67"), new Guid("d4e26be2-9adc-4ded-b373-e88c7ecd7e29"), new Guid("51bb9283-5e98-4a69-ae20-85460ee532d7"));
			EstimatedProductCostCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			EstimatedProductCostCurrency.IsIndexed = true;

			EstimatedProductCostCurrency.AssociationType.ObjectType = this;

			EstimatedProductCostCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			EstimatedProductCostCurrency.RoleType.AssignedSingularName = "Currency";
			EstimatedProductCostCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = EstimatedProductCostCurrency.RoleType;

			var EstimatedProductCostOrganisation = new RelationType(AppsDomain.Instance, new Guid("ce0f4392-cf76-49ba-a6bd-47b4e125ec61"), new Guid("acc9ae9a-8cb4-46cc-a507-db82759435d8"), new Guid("5ebf8530-9a22-43d0-a1db-d976dfcbeaea"));
			EstimatedProductCostOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			EstimatedProductCostOrganisation.IsIndexed = true;

			EstimatedProductCostOrganisation.AssociationType.ObjectType = this;

			EstimatedProductCostOrganisation.RoleType.ObjectType = OrganisationClass.Instance;;
			EstimatedProductCostOrganisation.RoleType.AssignedSingularName = "Organisation";
			EstimatedProductCostOrganisation.RoleType.AssignedPluralName = "Organisations";
			this.Roles.Organisation = EstimatedProductCostOrganisation.RoleType;

			var EstimatedProductCostDescription = new RelationType(AppsDomain.Instance, new Guid("d5e63839-7009-4582-8d9a-ac9591aa10c9"), new Guid("bfc2363f-b9ef-43ba-b5de-83104b9492ba"), new Guid("31982d33-6240-4718-b9db-6762adb85670"));
			EstimatedProductCostDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			EstimatedProductCostDescription.AssociationType.ObjectType = this;

			EstimatedProductCostDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EstimatedProductCostDescription.RoleType.AssignedSingularName = "Description";
			EstimatedProductCostDescription.RoleType.AssignedPluralName = "Descriptions";
			EstimatedProductCostDescription.RoleType.Size = 256;
			this.Roles.Description = EstimatedProductCostDescription.RoleType;

			var EstimatedProductCostGeographicBoundary = new RelationType(AppsDomain.Instance, new Guid("e7942246-0343-437e-9b92-fc2d5e6438fd"), new Guid("434c6b12-146d-4f53-b1a3-5b75afaf57f2"), new Guid("c763f72b-aa80-4caa-91b0-eddb949d3d34"));
			EstimatedProductCostGeographicBoundary.AssignedMultiplicity = Multiplicity.ManyToOne;
			EstimatedProductCostGeographicBoundary.IsIndexed = true;

			EstimatedProductCostGeographicBoundary.AssociationType.ObjectType = this;

			EstimatedProductCostGeographicBoundary.RoleType.ObjectType = GeographicBoundaryInterface.Instance;;
			EstimatedProductCostGeographicBoundary.RoleType.AssignedSingularName = "GeographicBoundary";
			EstimatedProductCostGeographicBoundary.RoleType.AssignedPluralName = "GeographicBoundaries";
			this.Roles.GeographicBoundary = EstimatedProductCostGeographicBoundary.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EstimatedLaborCostClass.Instance.ConcreteRoles.Cost = EstimatedLaborCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Cost]; 
			EstimatedOtherCostClass.Instance.ConcreteRoles.Cost = EstimatedOtherCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Cost]; 
			EstimatedMaterialCostClass.Instance.ConcreteRoles.Cost = EstimatedMaterialCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Cost]; 

			EstimatedLaborCostClass.Instance.ConcreteRoles.Currency = EstimatedLaborCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 
			EstimatedOtherCostClass.Instance.ConcreteRoles.Currency = EstimatedOtherCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 
			EstimatedMaterialCostClass.Instance.ConcreteRoles.Currency = EstimatedMaterialCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			EstimatedLaborCostClass.Instance.ConcreteRoles.Organisation = EstimatedLaborCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Organisation]; 
			EstimatedOtherCostClass.Instance.ConcreteRoles.Organisation = EstimatedOtherCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Organisation]; 
			EstimatedMaterialCostClass.Instance.ConcreteRoles.Organisation = EstimatedMaterialCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Organisation]; 

			EstimatedLaborCostClass.Instance.ConcreteRoles.Description = EstimatedLaborCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			EstimatedOtherCostClass.Instance.ConcreteRoles.Description = EstimatedOtherCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			EstimatedMaterialCostClass.Instance.ConcreteRoles.Description = EstimatedMaterialCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			EstimatedLaborCostClass.Instance.ConcreteRoles.GeographicBoundary = EstimatedLaborCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 
			EstimatedOtherCostClass.Instance.ConcreteRoles.GeographicBoundary = EstimatedOtherCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 
			EstimatedMaterialCostClass.Instance.ConcreteRoles.GeographicBoundary = EstimatedMaterialCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 


		}

		internal class RolesType
		{
			internal RoleType Cost;
			internal RoleType Currency;
			internal RoleType Organisation;
			internal RoleType Description;
			internal RoleType GeographicBoundary;

		}
	}public partial class OwnBankAccountClass : Class
	{
		public static OwnBankAccountClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OwnBankAccountClass() : base(AppsDomain.Instance, new Guid("ca008b8d-584e-4aa5-a759-895b634defc5"))
        {
			this.SingularName = "OwnBankAccount";
			this.PluralName = "OwnBankAccounts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4b8297cd-df3b-45e9-94cc-1f7fa5a4a9d0"))
			{
				Subtype = Instance,
				Supertype = PaymentMethodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("7787a118-b68b-4951-8938-c0f7a650b698"))
			{
				Subtype = Instance,
				Supertype = FinancialAccountInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var OwnBankAccountBankAccount = new RelationType(AppsDomain.Instance, new Guid("d83ca1e3-4137-4e92-a61d-0b8a1b8f7085"), new Guid("8a492054-a6be-4824-a0d2-daeed69c091b"), new Guid("c90ac5e5-2368-45d1-bc4a-0621c30f20e5"));
			OwnBankAccountBankAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			OwnBankAccountBankAccount.IsIndexed = true;

			OwnBankAccountBankAccount.AssociationType.ObjectType = this;

			OwnBankAccountBankAccount.RoleType.ObjectType = BankAccountClass.Instance;;
			OwnBankAccountBankAccount.RoleType.AssignedSingularName = "BankAccount";
			OwnBankAccountBankAccount.RoleType.AssignedPluralName = "BankAccounts";
			this.Roles.BankAccount = OwnBankAccountBankAccount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OwnBankAccountClass.Instance.ConcreteRoles.BankAccount = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BankAccount]; 


		}

		internal class RolesType
		{
			internal RoleType BankAccount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType BankAccount;
			internal ConcreteRoleType BalanceLimit;
			internal ConcreteRoleType CurrentBalance;
			internal ConcreteRoleType Journal;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType GlPaymentInTransit;
			internal ConcreteRoleType Remarks;
			internal ConcreteRoleType GeneralLedgerAccount;
			internal ConcreteRoleType Creditor;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType FinancialAccountTransaction;

		}
	}public partial class DeploymentUsageInterface: Interface
	{
		public static DeploymentUsageInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal DeploymentUsageInterface() : base(AppsDomain.Instance, new Guid("ca0f0654-3974-4e5e-a57e-593216c05e16"))
        {
			this.SingularName = "DeploymentUsage";
			this.PluralName = "DeploymentUsages";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0ab66ee3-76ed-4362-bbc3-185b137fd3cc"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("44af2ca2-0ca1-496d-ab60-5a884072ee9f"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("4aa2f7ac-c15e-4082-82b6-40e774212ffc"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var DeploymentUsageTimeFrequency = new RelationType(AppsDomain.Instance, new Guid("50c6bc05-83ff-4d40-b476-51418355eb0c"), new Guid("e8aa74ab-d70a-43f4-9cac-de0160e3f257"), new Guid("cc27af60-5ddd-4cce-bcc1-d68b3d5c6ab4"));
			DeploymentUsageTimeFrequency.AssignedMultiplicity = Multiplicity.ManyToOne;
			DeploymentUsageTimeFrequency.IsIndexed = true;

			DeploymentUsageTimeFrequency.AssociationType.ObjectType = this;

			DeploymentUsageTimeFrequency.RoleType.ObjectType = TimeFrequencyClass.Instance;;
			DeploymentUsageTimeFrequency.RoleType.AssignedSingularName = "TimeFrequency";
			DeploymentUsageTimeFrequency.RoleType.AssignedPluralName = "TimeFrequencies";
			this.Roles.TimeFrequency = DeploymentUsageTimeFrequency.RoleType;


		}

		internal override void SetRelationTypes()
		{
			VolumeUsageClass.Instance.ConcreteRoles.TimeFrequency = VolumeUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TimeFrequency]; 
			ActivityUsageClass.Instance.ConcreteRoles.TimeFrequency = ActivityUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TimeFrequency]; 
			TimePeriodUsageClass.Instance.ConcreteRoles.TimeFrequency = TimePeriodUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TimeFrequency]; 


		}

		internal class RolesType
		{
			internal RoleType TimeFrequency;

		}
	}public partial class PartyContactMechanismClass : Class
	{
		public static PartyContactMechanismClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyContactMechanismClass() : base(AppsDomain.Instance, new Guid("ca633037-ba1e-4304-9f2c-3353c287474b"))
        {
			this.SingularName = "PartyContactMechanism";
			this.PluralName = "PartyContactMechanisms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c676f2d8-dc38-4612-ab6b-791fd1bdae7e"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("eef159fd-7362-40d6-a25d-a247586bf58a"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyContactMechanismContactPurpose = new RelationType(AppsDomain.Instance, new Guid("2ca2f403-67f8-49e6-9a62-4547d2cc83a1"), new Guid("b4dea5e8-2fa0-49a4-aed3-6bc32aade7e6"), new Guid("6d98949f-823f-4a66-92c2-8182156efef9"));
			PartyContactMechanismContactPurpose.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyContactMechanismContactPurpose.IsIndexed = true;

			PartyContactMechanismContactPurpose.AssociationType.ObjectType = this;

			PartyContactMechanismContactPurpose.RoleType.ObjectType = ContactMechanismPurposeClass.Instance;;
			PartyContactMechanismContactPurpose.RoleType.AssignedSingularName = "ContactPurpose";
			PartyContactMechanismContactPurpose.RoleType.AssignedPluralName = "ContactPurposes";
			this.Roles.ContactPurpose = PartyContactMechanismContactPurpose.RoleType;

			var PartyContactMechanismContactMechanism = new RelationType(AppsDomain.Instance, new Guid("afd94e13-db8e-45cd-8d6c-d9085054d71f"), new Guid("55fa72b2-2d47-442b-90a8-03537771df30"), new Guid("d435dd59-d047-4952-bd96-f644d226e975"));
			PartyContactMechanismContactMechanism.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyContactMechanismContactMechanism.IsIndexed = true;

			PartyContactMechanismContactMechanism.AssociationType.ObjectType = this;

			PartyContactMechanismContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			PartyContactMechanismContactMechanism.RoleType.AssignedSingularName = "ContactMechanism";
			PartyContactMechanismContactMechanism.RoleType.AssignedPluralName = "ContactMechanisms";
			this.Roles.ContactMechanism = PartyContactMechanismContactMechanism.RoleType;

			var PartyContactMechanismUseAsDefault = new RelationType(AppsDomain.Instance, new Guid("eb412c34-7127-4b37-8831-5280b9ed1885"), new Guid("d24adc95-f792-4caa-b6f4-de6a0caa8114"), new Guid("a9168214-b208-4a21-905c-da53f9a4619d"));
			PartyContactMechanismUseAsDefault.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyContactMechanismUseAsDefault.AssociationType.ObjectType = this;

			PartyContactMechanismUseAsDefault.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			PartyContactMechanismUseAsDefault.RoleType.AssignedSingularName = "UseAsDefault";
			PartyContactMechanismUseAsDefault.RoleType.AssignedPluralName = "UseAsDefaults";
			this.Roles.UseAsDefault = PartyContactMechanismUseAsDefault.RoleType;

			var PartyContactMechanismNonSolicitationIndicator = new RelationType(AppsDomain.Instance, new Guid("f859fd15-4359-4de1-9927-75b6e443ffab"), new Guid("0935e3ed-7141-47b2-b4cc-72274b9e7680"), new Guid("1c57da10-ffcb-4b97-a930-ae10c2059b98"));
			PartyContactMechanismNonSolicitationIndicator.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyContactMechanismNonSolicitationIndicator.AssociationType.ObjectType = this;

			PartyContactMechanismNonSolicitationIndicator.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			PartyContactMechanismNonSolicitationIndicator.RoleType.AssignedSingularName = "NonSolicitationIndicator";
			PartyContactMechanismNonSolicitationIndicator.RoleType.AssignedPluralName = "NonSolicitationIndicators";
			this.Roles.NonSolicitationIndicator = PartyContactMechanismNonSolicitationIndicator.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyContactMechanismClass.Instance.ConcreteRoles.ContactPurpose = PartyContactMechanismClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContactPurpose]; 

			PartyContactMechanismClass.Instance.ConcreteRoles.ContactMechanism = PartyContactMechanismClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContactMechanism]; 

			PartyContactMechanismClass.Instance.ConcreteRoles.UseAsDefault = PartyContactMechanismClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UseAsDefault]; 

			PartyContactMechanismClass.Instance.ConcreteRoles.NonSolicitationIndicator = PartyContactMechanismClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NonSolicitationIndicator]; 


		}

		internal class RolesType
		{
			internal RoleType ContactPurpose;
			internal RoleType ContactMechanism;
			internal RoleType UseAsDefault;
			internal RoleType NonSolicitationIndicator;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ContactPurpose;
			internal ConcreteRoleType ContactMechanism;
			internal ConcreteRoleType UseAsDefault;
			internal ConcreteRoleType NonSolicitationIndicator;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PriorityClass : Class
	{
		public static PriorityClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PriorityClass() : base(AppsDomain.Instance, new Guid("caa4814f-85a2-46a8-97a7-82220f8270cb"))
        {
			this.SingularName = "Priority";
			this.PluralName = "Priorities";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("782f003e-4cee-4a01-8653-71f433666f76"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CostCenterSplitMethodClass : Class
	{
		public static CostCenterSplitMethodClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CostCenterSplitMethodClass() : base(AppsDomain.Instance, new Guid("cabc3b20-0456-47d9-a030-6df1d1f8ea9e"))
        {
			this.SingularName = "CostCenterSplitMethod";
			this.PluralName = "CostCenterSplitMethods";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4acfefd8-f422-4e32-8195-c7c3e3b6d9c2"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class EstimatedMaterialCostClass : Class
	{
		public static EstimatedMaterialCostClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EstimatedMaterialCostClass() : base(AppsDomain.Instance, new Guid("cb6a8e8a-04a6-437b-b952-f502cca2a2db"))
        {
			this.SingularName = "EstimatedMaterialCost";
			this.PluralName = "EstimatedMaterialCosts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("91f13395-5918-4d7e-b1f8-2337738efc47"))
			{
				Subtype = Instance,
				Supertype = EstimatedProductCostInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Cost;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Organisation;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class QuoteTermClass : Class
	{
		public static QuoteTermClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal QuoteTermClass() : base(AppsDomain.Instance, new Guid("cd60cf6d-65ba-4e31-b85d-16c19fc0978b"))
        {
			this.SingularName = "QuoteTerm";
			this.PluralName = "QuoteTerms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("951e4e94-0e03-4093-bdba-cae9423836b7"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var QuoteTermTermValue = new RelationType(AppsDomain.Instance, new Guid("ce70acf3-9bc4-4572-9487-ef1ab900b488"), new Guid("df24f334-df05-48b2-95c8-dc69bafbdf06"), new Guid("c64eb6c1-0bf8-4504-8c35-e4753f050911"));
			QuoteTermTermValue.AssignedMultiplicity = Multiplicity.OneToOne;
			QuoteTermTermValue.AssociationType.ObjectType = this;

			QuoteTermTermValue.RoleType.ObjectType = AllorsStringUnit.Instance;;
			QuoteTermTermValue.RoleType.AssignedSingularName = "TermValue";
			QuoteTermTermValue.RoleType.AssignedPluralName = "TermValues";
			QuoteTermTermValue.RoleType.Size = 256;
			this.Roles.TermValue = QuoteTermTermValue.RoleType;

			var QuoteTermTermType = new RelationType(AppsDomain.Instance, new Guid("e53203f0-1d8f-45ea-bcc2-627c9440e66f"), new Guid("8319e551-dc5c-461e-bbf2-6c37b50becce"), new Guid("88fc03e5-6ab5-4b95-9027-282a595ca3f7"));
			QuoteTermTermType.AssignedMultiplicity = Multiplicity.ManyToOne;
			QuoteTermTermType.IsIndexed = true;

			QuoteTermTermType.AssociationType.ObjectType = this;

			QuoteTermTermType.RoleType.ObjectType = TermTypeClass.Instance;;
			QuoteTermTermType.RoleType.AssignedSingularName = "TermType";
			QuoteTermTermType.RoleType.AssignedPluralName = "TermTypes";
			this.Roles.TermType = QuoteTermTermType.RoleType;


		}

		internal override void SetRelationTypes()
		{
			QuoteTermClass.Instance.ConcreteRoles.TermValue = QuoteTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermValue]; 

			QuoteTermClass.Instance.ConcreteRoles.TermType = QuoteTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TermType]; 


		}

		internal class RolesType
		{
			internal RoleType TermValue;
			internal RoleType TermType;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType TermValue;
			internal ConcreteRoleType TermType;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class TransferClass : Class
	{
		public static TransferClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TransferClass() : base(AppsDomain.Instance, new Guid("cd66a79f-c4b8-4c33-b6ec-1928809b6b88"))
        {
			this.SingularName = "Transfer";
			this.PluralName = "Transfers";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b518e61f-c7a6-44bc-98ac-03714798c077"))
			{
				Subtype = Instance,
				Supertype = ShipmentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var TransferPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("002399be-0fef-46ca-bb53-018287430a08"), new Guid("2ee2901c-eee5-48ad-a213-518d464d8ffd"), new Guid("e77f67f8-6be9-4425-a8ca-630dccb5ecc1"));
			TransferPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			TransferPreviousObjectState.IsDerived = true;
			TransferPreviousObjectState.IsIndexed = true;

			TransferPreviousObjectState.AssociationType.ObjectType = this;

			TransferPreviousObjectState.RoleType.ObjectType = TransferObjectStateClass.Instance;;
			TransferPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			TransferPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = TransferPreviousObjectState.RoleType;

			var TransferCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("01757aca-7f45-4061-8721-1fa3d8cca852"), new Guid("b0b86e04-cd64-4a19-94dd-86ba558b478b"), new Guid("d775ad19-df10-4941-b384-d0de7c3ed943"));
			TransferCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			TransferCurrentObjectState.IsDerived = true;
			TransferCurrentObjectState.IsIndexed = true;

			TransferCurrentObjectState.AssociationType.ObjectType = this;

			TransferCurrentObjectState.RoleType.ObjectType = TransferObjectStateClass.Instance;;
			TransferCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			TransferCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = TransferCurrentObjectState.RoleType;

			var TransferCurrentShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("2fc36280-2378-4c2d-aab1-b2f038a5cfa5"), new Guid("731be3ab-46e5-4ff9-acc7-c7d106f32896"), new Guid("ea288e25-6d3c-4138-86fc-4e0fb86a088e"));
			TransferCurrentShipmentStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			TransferCurrentShipmentStatus.IsDerived = true;
			TransferCurrentShipmentStatus.IsIndexed = true;

			TransferCurrentShipmentStatus.AssociationType.ObjectType = this;

			TransferCurrentShipmentStatus.RoleType.ObjectType = TransferStatusClass.Instance;;
			TransferCurrentShipmentStatus.RoleType.AssignedSingularName = "CurrentShipmentStatus";
			TransferCurrentShipmentStatus.RoleType.AssignedPluralName = "CurrentShipmentStatuses";
			this.Roles.CurrentShipmentStatus = TransferCurrentShipmentStatus.RoleType;

			var TransferShipmentStatus = new RelationType(AppsDomain.Instance, new Guid("e415cf27-7ae7-48a7-a889-ad90a7384a68"), new Guid("b205e173-5355-4dcc-a615-521b46e3759a"), new Guid("96976d0f-10b8-4c67-a9a1-9b87b64eb46c"));
			TransferShipmentStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			TransferShipmentStatus.IsDerived = true;
			TransferShipmentStatus.IsIndexed = true;

			TransferShipmentStatus.AssociationType.ObjectType = this;

			TransferShipmentStatus.RoleType.ObjectType = TransferStatusClass.Instance;;
			TransferShipmentStatus.RoleType.AssignedSingularName = "ShipmentStatus";
			TransferShipmentStatus.RoleType.AssignedPluralName = "ShipmentStatuses";
			this.Roles.ShipmentStatus = TransferShipmentStatus.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TransferClass.Instance.ConcreteRoles.PreviousObjectState = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			TransferClass.Instance.ConcreteRoles.CurrentObjectState = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			TransferClass.Instance.ConcreteRoles.CurrentShipmentStatus = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentShipmentStatus]; 

			TransferClass.Instance.ConcreteRoles.ShipmentStatus = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentStatus]; 


		}

		internal class RolesType
		{
			internal RoleType PreviousObjectState;
			internal RoleType CurrentObjectState;
			internal RoleType CurrentShipmentStatus;
			internal RoleType ShipmentStatus;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType CurrentShipmentStatus;
			internal ConcreteRoleType ShipmentStatus;
			internal ConcreteRoleType ShipmentMethod;
			internal ConcreteRoleType BillToContactMechanism;
			internal ConcreteRoleType ShipmentPackage;
			internal ConcreteRoleType ShipmentNumber;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType BillToParty;
			internal ConcreteRoleType ShipToParty;
			internal ConcreteRoleType ShipmentItem;
			internal ConcreteRoleType BillFromInternalOrganisation;
			internal ConcreteRoleType ReceiverContactMechanism;
			internal ConcreteRoleType ShipToAddress;
			internal ConcreteRoleType EstimatedShipCost;
			internal ConcreteRoleType EstimatedShipDate;
			internal ConcreteRoleType LatestCancelDate;
			internal ConcreteRoleType Carrier;
			internal ConcreteRoleType InquireAboutContactMechanism;
			internal ConcreteRoleType EstimatedReadyDate;
			internal ConcreteRoleType ShipFromAddress;
			internal ConcreteRoleType BillFromContactMechanism;
			internal ConcreteRoleType HandlingInstruction;
			internal ConcreteRoleType Store;
			internal ConcreteRoleType ShipFromParty;
			internal ConcreteRoleType ShipmentRouteSegment;
			internal ConcreteRoleType EstimatedArrivalDate;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class FacilityInterface: Interface
	{
		public static FacilityInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal FacilityInterface() : base(AppsDomain.Instance, new Guid("cdd79e23-a132-48b0-b88f-a03bd029f49d"))
        {
			this.SingularName = "Facility";
			this.PluralName = "Facilities";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1b415273-d11c-4602-9815-a5eee6bf61d5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("573927ab-fbb3-4179-b78b-0af6221e3512"))
			{
				Subtype = Instance,
				Supertype = GeoLocatableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var FacilityMadeUpOf = new RelationType(AppsDomain.Instance, new Guid("1a7f255a-3e94-41df-b71d-10ab36f38ffb"), new Guid("1341fb5d-26b6-4c07-bb31-a444c451c547"), new Guid("cd2ee41e-ffba-4a59-9b9c-0d3eb581420c"));
			FacilityMadeUpOf.AssignedMultiplicity = Multiplicity.ManyToOne;
			FacilityMadeUpOf.IsIndexed = true;

			FacilityMadeUpOf.AssociationType.ObjectType = this;

			FacilityMadeUpOf.RoleType.ObjectType = FacilityInterface.Instance;;
			FacilityMadeUpOf.RoleType.AssignedSingularName = "MadeUpOf";
			FacilityMadeUpOf.RoleType.AssignedPluralName = "MadeUpOfs";
			this.Roles.MadeUpOf = FacilityMadeUpOf.RoleType;

			var FacilitySquareFootage = new RelationType(AppsDomain.Instance, new Guid("1daad895-cf57-4110-a4e0-117e0212c3e4"), new Guid("304a1b7b-215a-4fad-ab99-d0a974e8b0c0"), new Guid("5ab48116-f33a-484e-9e6e-05a912efc9d5"));
			FacilitySquareFootage.AssignedMultiplicity = Multiplicity.OneToOne;
			FacilitySquareFootage.AssociationType.ObjectType = this;

			FacilitySquareFootage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			FacilitySquareFootage.RoleType.AssignedSingularName = "SquareFootage";
			FacilitySquareFootage.RoleType.AssignedPluralName = "SquareFootages";
			FacilitySquareFootage.RoleType.Scale = 2;
			FacilitySquareFootage.RoleType.Precision = 19;
			this.Roles.SquareFootage = FacilitySquareFootage.RoleType;

			var FacilityDescription = new RelationType(AppsDomain.Instance, new Guid("2df0999d-97cb-4c76-9f3e-076376e60e38"), new Guid("d29a1df5-e08f-4f7c-876c-a1ab737206a5"), new Guid("5dd1abff-5a4c-4d30-8c69-1bcc83e5460e"));
			FacilityDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			FacilityDescription.AssociationType.ObjectType = this;

			FacilityDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			FacilityDescription.RoleType.AssignedSingularName = "Description";
			FacilityDescription.RoleType.AssignedPluralName = "Descriptions";
			FacilityDescription.RoleType.Size = 256;
			this.Roles.Description = FacilityDescription.RoleType;

			var FacilityFacilityContactMechanism = new RelationType(AppsDomain.Instance, new Guid("4b55ee38-64e9-4c11-a204-36e2f460c5f8"), new Guid("87db14ec-a82a-4107-bae1-8ea945a68bce"), new Guid("d576e2ee-dcf0-4f06-a496-42bceaf94399"));
			FacilityFacilityContactMechanism.AssignedMultiplicity = Multiplicity.ManyToMany;
			FacilityFacilityContactMechanism.IsIndexed = true;

			FacilityFacilityContactMechanism.AssociationType.ObjectType = this;

			FacilityFacilityContactMechanism.RoleType.ObjectType = ContactMechanismInterface.Instance;;
			FacilityFacilityContactMechanism.RoleType.AssignedSingularName = "FacilityContactMechanism";
			FacilityFacilityContactMechanism.RoleType.AssignedPluralName = "FacilityContactMechanisms";
			this.Roles.FacilityContactMechanism = FacilityFacilityContactMechanism.RoleType;

			var FacilityName = new RelationType(AppsDomain.Instance, new Guid("b8f50794-848b-42be-9114-5eea579f5f71"), new Guid("7c9d689d-c38d-48b1-b1f0-5b211828ae8a"), new Guid("d9ee92cb-3131-4442-be42-269ae294378d"));
			FacilityName.AssignedMultiplicity = Multiplicity.OneToOne;
			FacilityName.AssociationType.ObjectType = this;

			FacilityName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			FacilityName.RoleType.AssignedSingularName = "Name";
			FacilityName.RoleType.AssignedPluralName = "Names";
			FacilityName.RoleType.Size = 256;
			this.Roles.Name = FacilityName.RoleType;

			var FacilityOwner = new RelationType(AppsDomain.Instance, new Guid("c73693db-9eae-4d81-a801-2ef4d619544b"), new Guid("e72fd5d0-f80f-4ecc-a6f7-a0f697c91e0b"), new Guid("61dedec6-5aa1-4717-9b7b-34b77a1b31b9"));
			FacilityOwner.AssignedMultiplicity = Multiplicity.ManyToOne;
			FacilityOwner.IsIndexed = true;

			FacilityOwner.AssociationType.ObjectType = this;

			FacilityOwner.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			FacilityOwner.RoleType.AssignedSingularName = "Owner";
			FacilityOwner.RoleType.AssignedPluralName = "Owners";
			this.Roles.Owner = FacilityOwner.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BuildingClass.Instance.ConcreteRoles.MadeUpOf = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MadeUpOf]; 
			RoomClass.Instance.ConcreteRoles.MadeUpOf = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MadeUpOf]; 
			PlantClass.Instance.ConcreteRoles.MadeUpOf = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MadeUpOf]; 
			WarehouseClass.Instance.ConcreteRoles.MadeUpOf = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MadeUpOf]; 
			FloorClass.Instance.ConcreteRoles.MadeUpOf = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MadeUpOf]; 
			OfficeClass.Instance.ConcreteRoles.MadeUpOf = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MadeUpOf]; 

			BuildingClass.Instance.ConcreteRoles.SquareFootage = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SquareFootage]; 
			RoomClass.Instance.ConcreteRoles.SquareFootage = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SquareFootage]; 
			PlantClass.Instance.ConcreteRoles.SquareFootage = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SquareFootage]; 
			WarehouseClass.Instance.ConcreteRoles.SquareFootage = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SquareFootage]; 
			FloorClass.Instance.ConcreteRoles.SquareFootage = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SquareFootage]; 
			OfficeClass.Instance.ConcreteRoles.SquareFootage = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SquareFootage]; 

			BuildingClass.Instance.ConcreteRoles.Description = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			RoomClass.Instance.ConcreteRoles.Description = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			PlantClass.Instance.ConcreteRoles.Description = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			WarehouseClass.Instance.ConcreteRoles.Description = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			FloorClass.Instance.ConcreteRoles.Description = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			OfficeClass.Instance.ConcreteRoles.Description = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			BuildingClass.Instance.ConcreteRoles.FacilityContactMechanism = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FacilityContactMechanism]; 
			RoomClass.Instance.ConcreteRoles.FacilityContactMechanism = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FacilityContactMechanism]; 
			PlantClass.Instance.ConcreteRoles.FacilityContactMechanism = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FacilityContactMechanism]; 
			WarehouseClass.Instance.ConcreteRoles.FacilityContactMechanism = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FacilityContactMechanism]; 
			FloorClass.Instance.ConcreteRoles.FacilityContactMechanism = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FacilityContactMechanism]; 
			OfficeClass.Instance.ConcreteRoles.FacilityContactMechanism = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FacilityContactMechanism]; 

			BuildingClass.Instance.ConcreteRoles.Name = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			RoomClass.Instance.ConcreteRoles.Name = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PlantClass.Instance.ConcreteRoles.Name = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			WarehouseClass.Instance.ConcreteRoles.Name = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			FloorClass.Instance.ConcreteRoles.Name = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			OfficeClass.Instance.ConcreteRoles.Name = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			BuildingClass.Instance.ConcreteRoles.Owner = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 
			RoomClass.Instance.ConcreteRoles.Owner = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 
			PlantClass.Instance.ConcreteRoles.Owner = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 
			WarehouseClass.Instance.ConcreteRoles.Owner = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 
			FloorClass.Instance.ConcreteRoles.Owner = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 
			OfficeClass.Instance.ConcreteRoles.Owner = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 


		}

		internal class RolesType
		{
			internal RoleType MadeUpOf;
			internal RoleType SquareFootage;
			internal RoleType Description;
			internal RoleType FacilityContactMechanism;
			internal RoleType Name;
			internal RoleType Owner;

		}
	}public partial class RevenueQuantityBreakClass : Class
	{
		public static RevenueQuantityBreakClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RevenueQuantityBreakClass() : base(AppsDomain.Instance, new Guid("ce394ad6-1229-4621-8506-5f0347cd8c92"))
        {
			this.SingularName = "RevenueQuantityBreak";
			this.PluralName = "RevenueQuantityBreaks";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4d1f8de6-850f-432e-95ec-be9df5b69991"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var RevenueQuantityBreakProductCategory = new RelationType(AppsDomain.Instance, new Guid("047e27db-873d-404e-a07f-0e32f2e19dbe"), new Guid("fe0b216f-4002-4663-966d-bc9baeceea80"), new Guid("39043e7b-42e7-471a-8033-c9a928a7939d"));
			RevenueQuantityBreakProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			RevenueQuantityBreakProductCategory.IsIndexed = true;

			RevenueQuantityBreakProductCategory.AssociationType.ObjectType = this;

			RevenueQuantityBreakProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			this.Roles.ProductCategory = RevenueQuantityBreakProductCategory.RoleType;

			var RevenueQuantityBreakThrough = new RelationType(AppsDomain.Instance, new Guid("7bca5fd8-016d-43d8-a38e-a811f3bd77ab"), new Guid("f312afd5-a46c-4fb6-88a4-e945b30098da"), new Guid("087a6ce6-9a53-4ab1-8d9a-b8d00107c533"));
			RevenueQuantityBreakThrough.AssignedMultiplicity = Multiplicity.OneToOne;
			RevenueQuantityBreakThrough.AssociationType.ObjectType = this;

			RevenueQuantityBreakThrough.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			RevenueQuantityBreakThrough.RoleType.AssignedSingularName = "Through";
			RevenueQuantityBreakThrough.RoleType.AssignedPluralName = "Throughs";
			RevenueQuantityBreakThrough.RoleType.Scale = 2;
			RevenueQuantityBreakThrough.RoleType.Precision = 19;
			this.Roles.Through = RevenueQuantityBreakThrough.RoleType;

			var RevenueQuantityBreakFrom = new RelationType(AppsDomain.Instance, new Guid("bae5ce9b-1bc0-46e4-89d9-26e8de81f54a"), new Guid("c1b72b95-f55f-4aaa-86a8-aba006489ec5"), new Guid("03cc5c67-caf6-4d1f-8a46-edd1c0f76fa9"));
			RevenueQuantityBreakFrom.AssignedMultiplicity = Multiplicity.OneToOne;
			RevenueQuantityBreakFrom.AssociationType.ObjectType = this;

			RevenueQuantityBreakFrom.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			RevenueQuantityBreakFrom.RoleType.AssignedSingularName = "From";
			RevenueQuantityBreakFrom.RoleType.AssignedPluralName = "Froms";
			RevenueQuantityBreakFrom.RoleType.Scale = 2;
			RevenueQuantityBreakFrom.RoleType.Precision = 19;
			this.Roles.From = RevenueQuantityBreakFrom.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RevenueQuantityBreakClass.Instance.ConcreteRoles.ProductCategory = RevenueQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			RevenueQuantityBreakClass.Instance.ConcreteRoles.Through = RevenueQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Through]; 

			RevenueQuantityBreakClass.Instance.ConcreteRoles.From = RevenueQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.From]; 


		}

		internal class RolesType
		{
			internal RoleType ProductCategory;
			internal RoleType Through;
			internal RoleType From;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType Through;
			internal ConcreteRoleType From;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class GeneralLedgerAccountTypeClass : Class
	{
		public static GeneralLedgerAccountTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal GeneralLedgerAccountTypeClass() : base(AppsDomain.Instance, new Guid("ce5c78ee-f892-4ced-9b21-51d84c77127f"))
        {
			this.SingularName = "GeneralLedgerAccountType";
			this.PluralName = "GeneralLedgerAccountTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("321a9cdc-f51f-4349-a598-20b1a4bb6304"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var GeneralLedgerAccountTypeDescription = new RelationType(AppsDomain.Instance, new Guid("e01a0752-531b-4ee3-a58e-711f377247e1"), new Guid("dcfb5761-0d99-4a8f-afc9-2c0e64cd1c68"), new Guid("7d579eae-a239-4f55-9719-02f39dbc42d8"));
			GeneralLedgerAccountTypeDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			GeneralLedgerAccountTypeDescription.AssociationType.ObjectType = this;

			GeneralLedgerAccountTypeDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			GeneralLedgerAccountTypeDescription.RoleType.AssignedSingularName = "Description";
			GeneralLedgerAccountTypeDescription.RoleType.AssignedPluralName = "Descriptions";
			GeneralLedgerAccountTypeDescription.RoleType.Size = 256;
			this.Roles.Description = GeneralLedgerAccountTypeDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			GeneralLedgerAccountTypeClass.Instance.ConcreteRoles.Description = GeneralLedgerAccountTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SerializedInventoryItemObjectStateClass : Class
	{
		public static SerializedInventoryItemObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SerializedInventoryItemObjectStateClass() : base(AppsDomain.Instance, new Guid("d042eeae-5c17-4936-861b-aaa9dfaed254"))
        {
			this.SingularName = "SerializedInventoryItemObjectState";
			this.PluralName = "SerializedInventoryItemObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d06322a6-d6ef-498b-a750-3ae5aaf590c5"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ProspectRelationshipClass : Class
	{
		public static ProspectRelationshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProspectRelationshipClass() : base(AppsDomain.Instance, new Guid("d0de3fad-1944-44e5-be99-b74df7a1f917"))
        {
			this.SingularName = "ProspectRelationship";
			this.PluralName = "ProspectRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("108a5f14-2944-46cd-98ed-8563eee412c8"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProspectRelationshipInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("6ff817ee-7f62-440b-a699-6a04c0e0b730"), new Guid("25b90f76-b9ba-4f95-bb17-9479f6ee58e4"), new Guid("5e3e7da0-1c75-4a77-9ac1-0b43b7f4c087"));
			ProspectRelationshipInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProspectRelationshipInternalOrganisation.IsIndexed = true;

			ProspectRelationshipInternalOrganisation.AssociationType.ObjectType = this;

			ProspectRelationshipInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			this.Roles.InternalOrganisation = ProspectRelationshipInternalOrganisation.RoleType;

			var ProspectRelationshipProspect = new RelationType(AppsDomain.Instance, new Guid("e803f51e-a497-4e3a-b082-494fc4af943a"), new Guid("4e75fb76-3831-4646-99a7-c6b904d867ef"), new Guid("1f4abcc7-8c9a-4e4a-8ff4-48a05c5d4291"));
			ProspectRelationshipProspect.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProspectRelationshipProspect.IsIndexed = true;

			ProspectRelationshipProspect.AssociationType.ObjectType = this;

			ProspectRelationshipProspect.RoleType.ObjectType = PartyInterface.Instance;;
			ProspectRelationshipProspect.RoleType.AssignedSingularName = "Prospect";
			ProspectRelationshipProspect.RoleType.AssignedPluralName = "Prospects";
			this.Roles.Prospect = ProspectRelationshipProspect.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProspectRelationshipClass.Instance.ConcreteRoles.InternalOrganisation = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			ProspectRelationshipClass.Instance.ConcreteRoles.Prospect = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Prospect]; 


		}

		internal class RolesType
		{
			internal RoleType InternalOrganisation;
			internal RoleType Prospect;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Prospect;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class FaceToFaceCommunicationClass : Class
	{
		public static FaceToFaceCommunicationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal FaceToFaceCommunicationClass() : base(AppsDomain.Instance, new Guid("d0f9fc0d-a3c5-46cc-ab00-4c724995fc14"))
        {
			this.SingularName = "FaceToFaceCommunication";
			this.PluralName = "FaceToFaceCommunications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("95e81c3f-b0f9-48ff-8d0c-f00792e605d9"))
			{
				Subtype = Instance,
				Supertype = CommunicationEventInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var FaceToFaceCommunicationParticipant = new RelationType(AppsDomain.Instance, new Guid("52b8614b-799e-4aea-a012-ea8dbc23f8dd"), new Guid("ac424847-d426-4614-99a2-37c70841c454"), new Guid("bcf4a8df-8b57-4b3c-a6e5-f9b56c71a13b"));
			FaceToFaceCommunicationParticipant.AssignedMultiplicity = Multiplicity.ManyToMany;
			FaceToFaceCommunicationParticipant.IsIndexed = true;

			FaceToFaceCommunicationParticipant.AssociationType.ObjectType = this;

			FaceToFaceCommunicationParticipant.RoleType.ObjectType = PartyInterface.Instance;;
			FaceToFaceCommunicationParticipant.RoleType.AssignedSingularName = "Participant";
			FaceToFaceCommunicationParticipant.RoleType.AssignedPluralName = "Participants";
			this.Roles.Participant = FaceToFaceCommunicationParticipant.RoleType;

			var FaceToFaceCommunicationLocation = new RelationType(AppsDomain.Instance, new Guid("95ae979f-d549-4ea1-87f0-46aa55e4b14a"), new Guid("d34e4203-0bd2-4fe4-a2ef-9f9f52b49cf9"), new Guid("9f67b296-953d-4e04-b94d-6ffece87ceef"));
			FaceToFaceCommunicationLocation.AssignedMultiplicity = Multiplicity.OneToOne;
			FaceToFaceCommunicationLocation.AssociationType.ObjectType = this;

			FaceToFaceCommunicationLocation.RoleType.ObjectType = AllorsStringUnit.Instance;;
			FaceToFaceCommunicationLocation.RoleType.AssignedSingularName = "Location";
			FaceToFaceCommunicationLocation.RoleType.AssignedPluralName = "Locations";
			FaceToFaceCommunicationLocation.RoleType.Size = 256;
			this.Roles.Location = FaceToFaceCommunicationLocation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.Participant = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Participant]; 

			FaceToFaceCommunicationClass.Instance.ConcreteRoles.Location = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Location]; 


		}

		internal class RolesType
		{
			internal RoleType Participant;
			internal RoleType Location;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Participant;
			internal ConcreteRoleType Location;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType ToContactMechanism;
			internal ConcreteRoleType CommunicationEventStatus;
			internal ConcreteRoleType InvolvedParty;
			internal ConcreteRoleType InitialScheduledStart;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType EventPurpose;
			internal ConcreteRoleType ScheduledEnd;
			internal ConcreteRoleType ActualEnd;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType InitialScheduledEnd;
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType Subject;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType Case;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType FromContactMechanism;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType CurrentCommunicationEventStatus;
			internal ConcreteRoleType Note;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class BudgetReviewClass : Class
	{
		public static BudgetReviewClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BudgetReviewClass() : base(AppsDomain.Instance, new Guid("d12719f0-2c0e-4a9d-869b-4a209fc35a56"))
        {
			this.SingularName = "BudgetReview";
			this.PluralName = "BudgetReviews";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("6fec2c6b-b5e7-43cb-91b6-3b4a2557e5ae"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("eb26333f-4b0b-473b-b693-bb3b2192a8ed"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var BudgetReviewReviewDate = new RelationType(AppsDomain.Instance, new Guid("4396be4d-edb4-405d-a39a-ee6ff5c39ca5"), new Guid("9cbcaf98-22d1-41ed-b7d4-88a32e41de5f"), new Guid("61c422a4-cfb0-4e7a-b8ee-29ecf92589ee"));
			BudgetReviewReviewDate.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetReviewReviewDate.AssociationType.ObjectType = this;

			BudgetReviewReviewDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			BudgetReviewReviewDate.RoleType.AssignedSingularName = "ReviewDate";
			BudgetReviewReviewDate.RoleType.AssignedPluralName = "ReviewDates";
			this.Roles.ReviewDate = BudgetReviewReviewDate.RoleType;

			var BudgetReviewDescription = new RelationType(AppsDomain.Instance, new Guid("6d065017-6c6f-413c-bc79-1a6349180c34"), new Guid("b0f12ce4-58e3-4757-996f-3e3aca8aafbb"), new Guid("eff0da0c-1ea3-40d8-8894-141d43f20a5f"));
			BudgetReviewDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetReviewDescription.AssociationType.ObjectType = this;

			BudgetReviewDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BudgetReviewDescription.RoleType.AssignedSingularName = "Description";
			BudgetReviewDescription.RoleType.AssignedPluralName = "Descriptions";
			BudgetReviewDescription.RoleType.Size = 256;
			this.Roles.Description = BudgetReviewDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BudgetReviewClass.Instance.ConcreteRoles.ReviewDate = BudgetReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ReviewDate]; 

			BudgetReviewClass.Instance.ConcreteRoles.Description = BudgetReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType ReviewDate;
			internal RoleType Description;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ReviewDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EngineeringChangeStatusClass : Class
	{
		public static EngineeringChangeStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EngineeringChangeStatusClass() : base(AppsDomain.Instance, new Guid("d149dd80-1cdc-4a29-bb0b-b88823d718bc"))
        {
			this.SingularName = "EngineeringChangeStatus";
			this.PluralName = "EngineeringChangeStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d4e598d0-8004-42aa-a739-9605802e54a4"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var EngineeringChangeStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("0a6c34f7-b37b-4abc-b12e-05ef14a8d986"), new Guid("66d0b0a8-b39a-4654-9ce6-3b8a8e9bbf4a"), new Guid("765d186a-a5b5-4895-ae27-93bfe6ef98f2"));
			EngineeringChangeStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			EngineeringChangeStatusStartDateTime.AssociationType.ObjectType = this;

			EngineeringChangeStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			EngineeringChangeStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			EngineeringChangeStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = EngineeringChangeStatusStartDateTime.RoleType;

			var EngineeringChangeStatusEngineeringChangeObjectState = new RelationType(AppsDomain.Instance, new Guid("6a7695dc-4343-4645-b4f1-78348d6873c3"), new Guid("7a1f031f-29ca-4b1c-95c0-1bdc35856412"), new Guid("09cf51ab-77a3-4188-97ad-590b6bca6a97"));
			EngineeringChangeStatusEngineeringChangeObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			EngineeringChangeStatusEngineeringChangeObjectState.IsDerived = true;
			EngineeringChangeStatusEngineeringChangeObjectState.IsIndexed = true;

			EngineeringChangeStatusEngineeringChangeObjectState.AssociationType.ObjectType = this;

			EngineeringChangeStatusEngineeringChangeObjectState.RoleType.ObjectType = EngineeringChangeObjectStateClass.Instance;;
			EngineeringChangeStatusEngineeringChangeObjectState.RoleType.AssignedSingularName = "EngineeringChangeObjectState";
			EngineeringChangeStatusEngineeringChangeObjectState.RoleType.AssignedPluralName = "EngineeringChangeObjectStates";
			this.Roles.EngineeringChangeObjectState = EngineeringChangeStatusEngineeringChangeObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EngineeringChangeStatusClass.Instance.ConcreteRoles.StartDateTime = EngineeringChangeStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			EngineeringChangeStatusClass.Instance.ConcreteRoles.EngineeringChangeObjectState = EngineeringChangeStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EngineeringChangeObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType EngineeringChangeObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType EngineeringChangeObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProductQualityClass : Class
	{
		public static ProductQualityClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductQualityClass() : base(AppsDomain.Instance, new Guid("d14fa0d2-8743-4d3c-8109-2ab9161cb310"))
        {
			this.SingularName = "ProductQuality";
			this.PluralName = "ProductQualities";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("81d5d0d7-de6b-4d92-b640-0dc28501a0e5"))
			{
				Subtype = Instance,
				Supertype = ProductFeatureInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("8a4c1d35-dd2f-4e09-bfef-343826460d4a"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType EstimatedProductCost;
			internal ConcreteRoleType BasePrice;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DependentFeature;
			internal ConcreteRoleType IncompatibleFeature;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;

		}
	}public partial class DisbursementClass : Class
	{
		public static DisbursementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DisbursementClass() : base(AppsDomain.Instance, new Guid("d152e0a4-c76f-4945-8c0f-ad1e5f70ad07"))
        {
			this.SingularName = "Disbursement";
			this.PluralName = "Disbursements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b21b73e4-bc5c-4d32-9500-ea23b69649b6"))
			{
				Subtype = Instance,
				Supertype = PaymentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType EffectiveDate;
			internal ConcreteRoleType SendingParty;
			internal ConcreteRoleType PaymentApplication;
			internal ConcreteRoleType ReferenceNumber;
			internal ConcreteRoleType ReceivingParty;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ResearchClass : Class
	{
		public static ResearchClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ResearchClass() : base(AppsDomain.Instance, new Guid("d1d8f99e-430d-4104-a2db-777a0f6292e3"))
        {
			this.SingularName = "Research";
			this.PluralName = "Researches";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("e51829c5-5818-4961-9687-ed69dd2ada46"))
			{
				Subtype = Instance,
				Supertype = WorkEffortInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentWorkEffortStatus;
			internal ConcreteRoleType Precendency;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeliverableProduced;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType InventoryItemNeeded;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType ActualCompletion;
			internal ConcreteRoleType OrderItemFulfillment;
			internal ConcreteRoleType WorkEffortStatus;
			internal ConcreteRoleType WorkEffortType;
			internal ConcreteRoleType InventoryItemProduced;
			internal ConcreteRoleType WorkEffortPurpose;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType RequirementFulfillment;
			internal ConcreteRoleType SpecialTerms;
			internal ConcreteRoleType Concurrency;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ActualHours;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ScheduledCompletion;
			internal ConcreteRoleType EstimatedHours;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PartBillOfMaterialInterface: Interface
	{
		public static PartBillOfMaterialInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PartBillOfMaterialInterface() : base(AppsDomain.Instance, new Guid("d204e616-039c-40c8-81cc-18f3a7345d99"))
        {
			this.SingularName = "PartBillOfMaterial";
			this.PluralName = "PartBillOfMaterials";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("127a50a4-2eee-40cd-bd2b-24637b96ea30"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("16793d0d-1ef8-4456-92df-cec2a8a47b12"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("26becead-16d9-4208-a81e-73f806d54033"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PartBillOfMaterialPart = new RelationType(AppsDomain.Instance, new Guid("06c3a64a-ef2c-44a0-81ee-1335842cf844"), new Guid("738ee8fd-307a-4d12-a0fc-238640386eee"), new Guid("e0145603-3f58-46f5-8348-77ad4d211543"));
			PartBillOfMaterialPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartBillOfMaterialPart.IsIndexed = true;

			PartBillOfMaterialPart.AssociationType.ObjectType = this;

			PartBillOfMaterialPart.RoleType.ObjectType = PartInterface.Instance;;
			PartBillOfMaterialPart.RoleType.AssignedSingularName = "Part";
			PartBillOfMaterialPart.RoleType.AssignedPluralName = "Parts";
			this.Roles.Part = PartBillOfMaterialPart.RoleType;

			var PartBillOfMaterialInstruction = new RelationType(AppsDomain.Instance, new Guid("24de2b73-c51b-47b5-bd80-2022c0e37841"), new Guid("a6dc16b1-6c02-4060-9f64-982d09ffe5dc"), new Guid("f3a70021-f5af-4493-b71c-74c65649a6c1"));
			PartBillOfMaterialInstruction.AssignedMultiplicity = Multiplicity.OneToOne;
			PartBillOfMaterialInstruction.AssociationType.ObjectType = this;

			PartBillOfMaterialInstruction.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PartBillOfMaterialInstruction.RoleType.AssignedSingularName = "Instruction";
			PartBillOfMaterialInstruction.RoleType.AssignedPluralName = "Instructions";
			PartBillOfMaterialInstruction.RoleType.Size = -1;
			this.Roles.Instruction = PartBillOfMaterialInstruction.RoleType;

			var PartBillOfMaterialQuantityUsed = new RelationType(AppsDomain.Instance, new Guid("ac18525c-57ef-4a11-a775-e27c397b334c"), new Guid("2a043325-46cb-4219-a580-e71efe6814b5"), new Guid("f526f282-0f15-4e98-af8f-9e8d658c4d38"));
			PartBillOfMaterialQuantityUsed.AssignedMultiplicity = Multiplicity.OneToOne;
			PartBillOfMaterialQuantityUsed.AssociationType.ObjectType = this;

			PartBillOfMaterialQuantityUsed.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PartBillOfMaterialQuantityUsed.RoleType.AssignedSingularName = "QuantityUsed";
			PartBillOfMaterialQuantityUsed.RoleType.AssignedPluralName = "QuantitiesUsed";
			this.Roles.QuantityUsed = PartBillOfMaterialQuantityUsed.RoleType;

			var PartBillOfMaterialComponentPart = new RelationType(AppsDomain.Instance, new Guid("eb1b2313-df9b-407d-9cf9-617d58c6f4be"), new Guid("9d9c4b58-8144-4d64-92ca-b81abecc5f40"), new Guid("8f188307-b996-41eb-8811-462a3a4d436e"));
			PartBillOfMaterialComponentPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartBillOfMaterialComponentPart.IsIndexed = true;

			PartBillOfMaterialComponentPart.AssociationType.ObjectType = this;

			PartBillOfMaterialComponentPart.RoleType.ObjectType = PartInterface.Instance;;
			PartBillOfMaterialComponentPart.RoleType.AssignedSingularName = "ComponentPart";
			PartBillOfMaterialComponentPart.RoleType.AssignedPluralName = "ComponentParts";
			this.Roles.ComponentPart = PartBillOfMaterialComponentPart.RoleType;


		}

		internal override void SetRelationTypes()
		{
			EngineeringBomClass.Instance.ConcreteRoles.Part = EngineeringBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 
			ManufacturingBomClass.Instance.ConcreteRoles.Part = ManufacturingBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 

			EngineeringBomClass.Instance.ConcreteRoles.Instruction = EngineeringBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Instruction]; 
			ManufacturingBomClass.Instance.ConcreteRoles.Instruction = ManufacturingBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Instruction]; 

			EngineeringBomClass.Instance.ConcreteRoles.QuantityUsed = EngineeringBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityUsed]; 
			ManufacturingBomClass.Instance.ConcreteRoles.QuantityUsed = ManufacturingBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityUsed]; 

			EngineeringBomClass.Instance.ConcreteRoles.ComponentPart = EngineeringBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ComponentPart]; 
			ManufacturingBomClass.Instance.ConcreteRoles.ComponentPart = ManufacturingBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ComponentPart]; 


		}

		internal class RolesType
		{
			internal RoleType Part;
			internal RoleType Instruction;
			internal RoleType QuantityUsed;
			internal RoleType ComponentPart;

		}
	}public partial class JournalClass : Class
	{
		public static JournalClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal JournalClass() : base(AppsDomain.Instance, new Guid("d3446420-6d2a-4d18-a6eb-0405da9f7cc5"))
        {
			this.SingularName = "Journal";
			this.PluralName = "Journals";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8fb46962-b0ba-431e-a391-1133d24fefb4"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var JournalUseAsDefault = new RelationType(AppsDomain.Instance, new Guid("01abf1e4-c2f8-4d04-8046-f5ac5428ff11"), new Guid("1ee04497-3585-4910-83c3-1bcdbe3c3bd2"), new Guid("82e88c20-35ac-4346-9881-157d305ed33b"));
			JournalUseAsDefault.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalUseAsDefault.AssociationType.ObjectType = this;

			JournalUseAsDefault.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			JournalUseAsDefault.RoleType.AssignedSingularName = "UseAsDefault";
			JournalUseAsDefault.RoleType.AssignedPluralName = "UseAsDefaults";
			this.Roles.UseAsDefault = JournalUseAsDefault.RoleType;

			var JournalGlPaymentInTransit = new RelationType(AppsDomain.Instance, new Guid("04f786b4-66be-4616-9966-ac026384c0d3"), new Guid("a1ed1007-5f6a-4177-9847-45339c24331a"), new Guid("0a653d75-829b-4612-b260-ec470eea0221"));
			JournalGlPaymentInTransit.AssignedMultiplicity = Multiplicity.ManyToOne;
			JournalGlPaymentInTransit.IsIndexed = true;

			JournalGlPaymentInTransit.AssociationType.ObjectType = this;

			JournalGlPaymentInTransit.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			JournalGlPaymentInTransit.RoleType.AssignedSingularName = "GlPaymentInTransit";
			JournalGlPaymentInTransit.RoleType.AssignedPluralName = "GlPaymentsInTransit";
			this.Roles.GlPaymentInTransit = JournalGlPaymentInTransit.RoleType;

			var JournalJournalType = new RelationType(AppsDomain.Instance, new Guid("1ec79ec4-60a8-4fdc-b11e-8c25697cd457"), new Guid("cfda1134-8fdf-449c-99cb-1e9ad29448fc"), new Guid("511439d3-de78-4b3b-8489-9fd661c41fdc"));
			JournalJournalType.AssignedMultiplicity = Multiplicity.ManyToOne;
			JournalJournalType.IsIndexed = true;

			JournalJournalType.AssociationType.ObjectType = this;

			JournalJournalType.RoleType.ObjectType = JournalTypeClass.Instance;;
			JournalJournalType.RoleType.AssignedSingularName = "JournalType";
			JournalJournalType.RoleType.AssignedPluralName = "JournalTypes";
			this.Roles.JournalType = JournalJournalType.RoleType;

			var JournalDescription = new RelationType(AppsDomain.Instance, new Guid("37493cfc-e817-4b89-b7cb-7d29f69cf41e"), new Guid("3a30aed2-9a0b-4eb2-948e-6ac033d2a5e0"), new Guid("13871d2d-ae7a-48be-99da-79711be267f8"));
			JournalDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalDescription.AssociationType.ObjectType = this;

			JournalDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			JournalDescription.RoleType.AssignedSingularName = "Description";
			JournalDescription.RoleType.AssignedPluralName = "Descriptions";
			JournalDescription.RoleType.Size = 256;
			this.Roles.Description = JournalDescription.RoleType;

			var JournalBlockUnpaidTransactions = new RelationType(AppsDomain.Instance, new Guid("3a52aa7c-fa01-4845-866c-976e48ea2179"), new Guid("8ab91bc9-99da-4bb4-b249-866a54fb4117"), new Guid("8bf5236d-6b99-4b86-b686-1cbf96bcde03"));
			JournalBlockUnpaidTransactions.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalBlockUnpaidTransactions.AssociationType.ObjectType = this;

			JournalBlockUnpaidTransactions.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			JournalBlockUnpaidTransactions.RoleType.AssignedSingularName = "BlockUnpaidTransactions";
			JournalBlockUnpaidTransactions.RoleType.AssignedPluralName = "BlockUnpaidTransactionss";
			this.Roles.BlockUnpaidTransactions = JournalBlockUnpaidTransactions.RoleType;

			var JournalContraAccount = new RelationType(AppsDomain.Instance, new Guid("4f1b0471-67f9-4fa1-9b69-b5d9cbeda5e7"), new Guid("b18129bb-5cf8-4408-a4fb-b5782fe67684"), new Guid("bf1656e9-0124-4403-855e-da94157e293d"));
			JournalContraAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalContraAccount.IsIndexed = true;

			JournalContraAccount.AssociationType.ObjectType = this;

			JournalContraAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			JournalContraAccount.RoleType.AssignedSingularName = "ContraAccount";
			JournalContraAccount.RoleType.AssignedPluralName = "ContraAccounts";
			this.Roles.ContraAccount = JournalContraAccount.RoleType;

			var JournalInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("76e76063-ddce-4a8a-98fb-884cd6179c45"), new Guid("1395e70f-cd1c-457e-bfd8-c7f31a32c8f4"), new Guid("b6416161-0b77-4a30-b00e-59a0eaaa1e87"));
			JournalInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			JournalInternalOrganisation.IsIndexed = true;

			JournalInternalOrganisation.AssociationType.ObjectType = this;

			JournalInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			JournalInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			JournalInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = JournalInternalOrganisation.RoleType;

			var JournalPreviousJournalType = new RelationType(AppsDomain.Instance, new Guid("774f30df-26b4-41d5-9ecb-d1fd62244e1f"), new Guid("9a4078bb-350b-4fbb-8fc2-16e86928d32e"), new Guid("dfbac079-a8f6-4576-8d54-39bf76553e0c"));
			JournalPreviousJournalType.AssignedMultiplicity = Multiplicity.ManyToOne;
			JournalPreviousJournalType.IsDerived = true;
			JournalPreviousJournalType.IsIndexed = true;

			JournalPreviousJournalType.AssociationType.ObjectType = this;

			JournalPreviousJournalType.RoleType.ObjectType = JournalTypeClass.Instance;;
			JournalPreviousJournalType.RoleType.AssignedSingularName = "PreviousJournalType";
			JournalPreviousJournalType.RoleType.AssignedPluralName = "PreviousJournalTypes";
			this.Roles.PreviousJournalType = JournalPreviousJournalType.RoleType;

			var JournalPreviousContraAccount = new RelationType(AppsDomain.Instance, new Guid("9aa48ebb-0ee0-4662-bfc5-f6b8ccb7a7c3"), new Guid("96d76f8b-5121-401f-bf2b-3f504494f4d7"), new Guid("e4d8e7b3-48be-4a9a-848e-c35dd3889715"));
			JournalPreviousContraAccount.AssignedMultiplicity = Multiplicity.ManyToOne;
			JournalPreviousContraAccount.IsDerived = true;
			JournalPreviousContraAccount.IsIndexed = true;

			JournalPreviousContraAccount.AssociationType.ObjectType = this;

			JournalPreviousContraAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			JournalPreviousContraAccount.RoleType.AssignedSingularName = "PreviousContraAccount";
			JournalPreviousContraAccount.RoleType.AssignedPluralName = "PreviousContraAccounts";
			this.Roles.PreviousContraAccount = JournalPreviousContraAccount.RoleType;

			var JournalJournalEntry = new RelationType(AppsDomain.Instance, new Guid("9b7c3687-b268-4c2b-8b04-c04a0c55d79f"), new Guid("47be858f-a462-4e23-acee-18aecdebc95e"), new Guid("f1907d6b-5015-4583-8d63-5c74f5954b97"));
			JournalJournalEntry.AssignedMultiplicity = Multiplicity.OneToMany;
			JournalJournalEntry.IsIndexed = true;

			JournalJournalEntry.AssociationType.ObjectType = this;

			JournalJournalEntry.RoleType.ObjectType = JournalEntryClass.Instance;;
			JournalJournalEntry.RoleType.AssignedSingularName = "JournalEntry";
			JournalJournalEntry.RoleType.AssignedPluralName = "JournalEntries";
			this.Roles.JournalEntry = JournalJournalEntry.RoleType;

			var JournalCloseWhenInBalance = new RelationType(AppsDomain.Instance, new Guid("dbdca15b-5337-44f1-b490-c69cb36df9c3"), new Guid("b4d7972b-4e79-4192-b862-c358ad10b48e"), new Guid("1ba97bd5-9644-47c6-b5e0-52207322cc38"));
			JournalCloseWhenInBalance.AssignedMultiplicity = Multiplicity.OneToOne;
			JournalCloseWhenInBalance.AssociationType.ObjectType = this;

			JournalCloseWhenInBalance.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			JournalCloseWhenInBalance.RoleType.AssignedSingularName = "CloseWhenInBalance";
			JournalCloseWhenInBalance.RoleType.AssignedPluralName = "CloseWhenInBalances";
			this.Roles.CloseWhenInBalance = JournalCloseWhenInBalance.RoleType;


		}

		internal override void SetRelationTypes()
		{
			JournalClass.Instance.ConcreteRoles.UseAsDefault = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UseAsDefault]; 

			JournalClass.Instance.ConcreteRoles.GlPaymentInTransit = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GlPaymentInTransit]; 

			JournalClass.Instance.ConcreteRoles.JournalType = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.JournalType]; 

			JournalClass.Instance.ConcreteRoles.Description = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			JournalClass.Instance.ConcreteRoles.BlockUnpaidTransactions = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BlockUnpaidTransactions]; 

			JournalClass.Instance.ConcreteRoles.ContraAccount = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContraAccount]; 

			JournalClass.Instance.ConcreteRoles.InternalOrganisation = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			JournalClass.Instance.ConcreteRoles.PreviousJournalType = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousJournalType]; 

			JournalClass.Instance.ConcreteRoles.PreviousContraAccount = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousContraAccount]; 

			JournalClass.Instance.ConcreteRoles.JournalEntry = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.JournalEntry]; 

			JournalClass.Instance.ConcreteRoles.CloseWhenInBalance = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CloseWhenInBalance]; 


		}

		internal class RolesType
		{
			internal RoleType UseAsDefault;
			internal RoleType GlPaymentInTransit;
			internal RoleType JournalType;
			internal RoleType Description;
			internal RoleType BlockUnpaidTransactions;
			internal RoleType ContraAccount;
			internal RoleType InternalOrganisation;
			internal RoleType PreviousJournalType;
			internal RoleType PreviousContraAccount;
			internal RoleType JournalEntry;
			internal RoleType CloseWhenInBalance;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType UseAsDefault;
			internal ConcreteRoleType GlPaymentInTransit;
			internal ConcreteRoleType JournalType;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType BlockUnpaidTransactions;
			internal ConcreteRoleType ContraAccount;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType PreviousJournalType;
			internal ConcreteRoleType PreviousContraAccount;
			internal ConcreteRoleType JournalEntry;
			internal ConcreteRoleType CloseWhenInBalance;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ShipmentItemClass : Class
	{
		public static ShipmentItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ShipmentItemClass() : base(AppsDomain.Instance, new Guid("d35c33c3-ca15-4b70-b20d-c51ed068626a"))
        {
			this.SingularName = "ShipmentItem";
			this.PluralName = "ShipmentItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8ec5cc0b-f4f9-4d1f-9b16-ab87a6d3ec08"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("b3a4fa91-dedc-4aaa-b29d-21b03e738114"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ShipmentItemQuantity = new RelationType(AppsDomain.Instance, new Guid("082e7e0d-190c-463f-89c8-af8e2c57c68d"), new Guid("cfbef516-6673-4496-ad91-54e772557ef5"), new Guid("7e235029-4dc3-46d2-878d-58a05e68c4e1"));
			ShipmentItemQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentItemQuantity.AssociationType.ObjectType = this;

			ShipmentItemQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ShipmentItemQuantity.RoleType.AssignedSingularName = "Quantity";
			ShipmentItemQuantity.RoleType.AssignedPluralName = "Quantities";
			ShipmentItemQuantity.RoleType.Scale = 2;
			ShipmentItemQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = ShipmentItemQuantity.RoleType;

			var ShipmentItemPart = new RelationType(AppsDomain.Instance, new Guid("158f104b-fa5c-425e-8b55-ee4e866820ec"), new Guid("77f01592-48e6-486f-9217-7c9cfc477267"), new Guid("6dcd6646-e5fa-42c9-a54b-c95380e860a2"));
			ShipmentItemPart.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentItemPart.IsIndexed = true;

			ShipmentItemPart.AssociationType.ObjectType = this;

			ShipmentItemPart.RoleType.ObjectType = PartInterface.Instance;;
			ShipmentItemPart.RoleType.AssignedSingularName = "Part";
			ShipmentItemPart.RoleType.AssignedPluralName = "Parts";
			this.Roles.Part = ShipmentItemPart.RoleType;

			var ShipmentItemContentsDescription = new RelationType(AppsDomain.Instance, new Guid("19c691ae-f849-451e-ac7e-ea84f4a9b51a"), new Guid("9a57f102-0b43-4f10-af75-c808c718c8b7"), new Guid("b18cc4e1-0be7-48d7-9e92-efc1e3a3edca"));
			ShipmentItemContentsDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentItemContentsDescription.AssociationType.ObjectType = this;

			ShipmentItemContentsDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ShipmentItemContentsDescription.RoleType.AssignedSingularName = "ContentsDescription";
			ShipmentItemContentsDescription.RoleType.AssignedPluralName = "ContentsDescriptions";
			ShipmentItemContentsDescription.RoleType.Size = 256;
			this.Roles.ContentsDescription = ShipmentItemContentsDescription.RoleType;

			var ShipmentItemDocument = new RelationType(AppsDomain.Instance, new Guid("6b3ab563-a19b-4d92-be3a-ddf3046d5b18"), new Guid("d41aeb48-bd41-40b2-bbc4-f4dd096a6c5f"), new Guid("e9a936df-2165-455e-8f9c-02b3dc5d7ebb"));
			ShipmentItemDocument.AssignedMultiplicity = Multiplicity.OneToMany;
			ShipmentItemDocument.IsIndexed = true;

			ShipmentItemDocument.AssociationType.ObjectType = this;

			ShipmentItemDocument.RoleType.ObjectType = DocumentInterface.Instance;;
			ShipmentItemDocument.RoleType.AssignedSingularName = "Document";
			ShipmentItemDocument.RoleType.AssignedPluralName = "Documents";
			this.Roles.Document = ShipmentItemDocument.RoleType;

			var ShipmentItemQuantityShipped = new RelationType(AppsDomain.Instance, new Guid("92cca1c2-4c7e-49a0-ba4b-88693b87c379"), new Guid("d7dca1d7-e678-4b52-9c25-d93f353ca25d"), new Guid("50dd2c62-6d8f-45bf-a77b-c8e1f7933ad3"));
			ShipmentItemQuantityShipped.AssignedMultiplicity = Multiplicity.OneToOne;
			ShipmentItemQuantityShipped.IsDerived = true;
			ShipmentItemQuantityShipped.AssociationType.ObjectType = this;

			ShipmentItemQuantityShipped.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ShipmentItemQuantityShipped.RoleType.AssignedSingularName = "QuantityShipped";
			ShipmentItemQuantityShipped.RoleType.AssignedPluralName = "QuantitiesShipped";
			ShipmentItemQuantityShipped.RoleType.Scale = 2;
			ShipmentItemQuantityShipped.RoleType.Precision = 19;
			this.Roles.QuantityShipped = ShipmentItemQuantityShipped.RoleType;

			var ShipmentItemInResponseToShipmentItem = new RelationType(AppsDomain.Instance, new Guid("b5d35e87-f741-4600-9838-4419b127681d"), new Guid("797743d0-c0e9-4a75-9180-4e05eb55423f"), new Guid("d37d1290-af88-45c1-8e70-2774de0c58c2"));
			ShipmentItemInResponseToShipmentItem.AssignedMultiplicity = Multiplicity.OneToMany;
			ShipmentItemInResponseToShipmentItem.IsIndexed = true;

			ShipmentItemInResponseToShipmentItem.AssociationType.ObjectType = this;

			ShipmentItemInResponseToShipmentItem.RoleType.ObjectType = ShipmentItemClass.Instance;;
			ShipmentItemInResponseToShipmentItem.RoleType.AssignedSingularName = "InResponseToShipmentItem";
			ShipmentItemInResponseToShipmentItem.RoleType.AssignedPluralName = "InResponseToShipmentItems";
			this.Roles.InResponseToShipmentItem = ShipmentItemInResponseToShipmentItem.RoleType;

			var ShipmentItemInventoryItem = new RelationType(AppsDomain.Instance, new Guid("b8ca6fae-0866-4806-9ffd-64d5d2b978f9"), new Guid("2a9e81f6-6009-4706-a0d0-cd180cb825e6"), new Guid("31227051-0164-40e7-9e37-d1b31719e483"));
			ShipmentItemInventoryItem.AssignedMultiplicity = Multiplicity.ManyToMany;
			ShipmentItemInventoryItem.IsIndexed = true;

			ShipmentItemInventoryItem.AssociationType.ObjectType = this;

			ShipmentItemInventoryItem.RoleType.ObjectType = InventoryItemInterface.Instance;;
			ShipmentItemInventoryItem.RoleType.AssignedSingularName = "InventoryItem";
			ShipmentItemInventoryItem.RoleType.AssignedPluralName = "InventoryItems";
			this.Roles.InventoryItem = ShipmentItemInventoryItem.RoleType;

			var ShipmentItemProductFeature = new RelationType(AppsDomain.Instance, new Guid("b9bfaea8-e5f0-4b0e-955f-df28ed63e8e3"), new Guid("7da8c058-92b7-4fd7-9eaf-7b7fb94f62cf"), new Guid("fb45aece-26e0-42ec-8dac-ddfcf11e61d9"));
			ShipmentItemProductFeature.AssignedMultiplicity = Multiplicity.ManyToMany;
			ShipmentItemProductFeature.IsIndexed = true;

			ShipmentItemProductFeature.AssociationType.ObjectType = this;

			ShipmentItemProductFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			ShipmentItemProductFeature.RoleType.AssignedSingularName = "ProductFeature";
			ShipmentItemProductFeature.RoleType.AssignedPluralName = "ProductFeatures";
			this.Roles.ProductFeature = ShipmentItemProductFeature.RoleType;

			var ShipmentItemInvoiceItem = new RelationType(AppsDomain.Instance, new Guid("bdd8041b-b1d1-4902-980a-f085c0af166d"), new Guid("150fd46f-8768-4210-a559-740386e7c03d"), new Guid("2fb644a8-bbd4-419e-8c30-ef10efeb07d7"));
			ShipmentItemInvoiceItem.AssignedMultiplicity = Multiplicity.OneToMany;
			ShipmentItemInvoiceItem.IsIndexed = true;

			ShipmentItemInvoiceItem.AssociationType.ObjectType = this;

			ShipmentItemInvoiceItem.RoleType.ObjectType = InvoiceItemInterface.Instance;;
			ShipmentItemInvoiceItem.RoleType.AssignedSingularName = "InvoiceItem";
			ShipmentItemInvoiceItem.RoleType.AssignedPluralName = "InvoiceItems";
			this.Roles.InvoiceItem = ShipmentItemInvoiceItem.RoleType;

			var ShipmentItemGood = new RelationType(AppsDomain.Instance, new Guid("f5c0279e-5ce4-4f09-bb93-ecaeb4825bcf"), new Guid("59b2bb80-3e60-4958-a3d8-9b5f7242d95c"), new Guid("fbac397f-52f2-4903-95bc-ee3f6ab3ae7b"));
			ShipmentItemGood.AssignedMultiplicity = Multiplicity.ManyToOne;
			ShipmentItemGood.IsIndexed = true;

			ShipmentItemGood.AssociationType.ObjectType = this;

			ShipmentItemGood.RoleType.ObjectType = GoodClass.Instance;;
			ShipmentItemGood.RoleType.AssignedSingularName = "Good";
			ShipmentItemGood.RoleType.AssignedPluralName = "Goods";
			this.Roles.Good = ShipmentItemGood.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ShipmentItemClass.Instance.ConcreteRoles.Quantity = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			ShipmentItemClass.Instance.ConcreteRoles.Part = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Part]; 

			ShipmentItemClass.Instance.ConcreteRoles.ContentsDescription = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ContentsDescription]; 

			ShipmentItemClass.Instance.ConcreteRoles.Document = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Document]; 

			ShipmentItemClass.Instance.ConcreteRoles.QuantityShipped = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityShipped]; 

			ShipmentItemClass.Instance.ConcreteRoles.InResponseToShipmentItem = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InResponseToShipmentItem]; 

			ShipmentItemClass.Instance.ConcreteRoles.InventoryItem = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItem]; 

			ShipmentItemClass.Instance.ConcreteRoles.ProductFeature = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 

			ShipmentItemClass.Instance.ConcreteRoles.InvoiceItem = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceItem]; 

			ShipmentItemClass.Instance.ConcreteRoles.Good = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Good]; 


		}

		internal class RolesType
		{
			internal RoleType Quantity;
			internal RoleType Part;
			internal RoleType ContentsDescription;
			internal RoleType Document;
			internal RoleType QuantityShipped;
			internal RoleType InResponseToShipmentItem;
			internal RoleType InventoryItem;
			internal RoleType ProductFeature;
			internal RoleType InvoiceItem;
			internal RoleType Good;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType Part;
			internal ConcreteRoleType ContentsDescription;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType QuantityShipped;
			internal ConcreteRoleType InResponseToShipmentItem;
			internal ConcreteRoleType InventoryItem;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType InvoiceItem;
			internal ConcreteRoleType Good;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProductFeatureInterface: Interface
	{
		public static ProductFeatureInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ProductFeatureInterface() : base(AppsDomain.Instance, new Guid("d3c5a482-e17a-4e37-84eb-55a035e80f2f"))
        {
			this.SingularName = "ProductFeature";
			this.PluralName = "ProductFeatures";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("610427e6-6d1e-4e52-bd2f-c2a1d1538213"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e6525f8c-ac60-47c1-ba33-a9f207236679"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var ProductFeatureEstimatedProductCost = new RelationType(AppsDomain.Instance, new Guid("4a8c511a-8146-4d6d-bc35-d8d6b8f1786d"), new Guid("31ff19c6-9916-4f4c-8d67-30649d3a07ea"), new Guid("8e35afcf-c606-4099-ba83-87c6b6fc37e1"));
			ProductFeatureEstimatedProductCost.AssignedMultiplicity = Multiplicity.OneToMany;
			ProductFeatureEstimatedProductCost.IsIndexed = true;

			ProductFeatureEstimatedProductCost.AssociationType.ObjectType = this;

			ProductFeatureEstimatedProductCost.RoleType.ObjectType = EstimatedProductCostInterface.Instance;;
			ProductFeatureEstimatedProductCost.RoleType.AssignedSingularName = "EstimatedProductCost";
			ProductFeatureEstimatedProductCost.RoleType.AssignedPluralName = "EstimatedProductCosts";
			this.Roles.EstimatedProductCost = ProductFeatureEstimatedProductCost.RoleType;

			var ProductFeatureBasePrice = new RelationType(AppsDomain.Instance, new Guid("8ac8ab84-f78f-4232-a4f7-390f55019663"), new Guid("6c65b1ad-91e4-4aae-a78e-d6d142bb98e5"), new Guid("3115f401-fc58-48da-a769-afecafbeb729"));
			ProductFeatureBasePrice.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductFeatureBasePrice.IsDerived = true;
			ProductFeatureBasePrice.IsIndexed = true;

			ProductFeatureBasePrice.AssociationType.ObjectType = this;

			ProductFeatureBasePrice.RoleType.ObjectType = PriceComponentInterface.Instance;;
			ProductFeatureBasePrice.RoleType.AssignedSingularName = "BasePrice";
			ProductFeatureBasePrice.RoleType.AssignedPluralName = "BasePrices";
			this.Roles.BasePrice = ProductFeatureBasePrice.RoleType;

			var ProductFeatureDescription = new RelationType(AppsDomain.Instance, new Guid("b75855b8-c921-4d60-8ea0-650a0f574f7f"), new Guid("dd0b49c7-56f4-43ac-a470-ddc191d1c279"), new Guid("64bfaf6d-aaac-42ec-ac37-22a1d674611f"));
			ProductFeatureDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductFeatureDescription.AssociationType.ObjectType = this;

			ProductFeatureDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProductFeatureDescription.RoleType.AssignedSingularName = "Description";
			ProductFeatureDescription.RoleType.AssignedPluralName = "Descriptions";
			ProductFeatureDescription.RoleType.Size = 256;
			this.Roles.Description = ProductFeatureDescription.RoleType;

			var ProductFeatureDependentFeature = new RelationType(AppsDomain.Instance, new Guid("badde93b-4691-435e-9ba3-e52435e9f574"), new Guid("c49ca161-d15b-4ba9-b42f-06144e8ca9f6"), new Guid("a3a58a70-3bab-4c8a-ac47-8beaca3b46d2"));
			ProductFeatureDependentFeature.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductFeatureDependentFeature.IsIndexed = true;

			ProductFeatureDependentFeature.AssociationType.ObjectType = this;

			ProductFeatureDependentFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			ProductFeatureDependentFeature.RoleType.AssignedSingularName = "DependentFeature";
			ProductFeatureDependentFeature.RoleType.AssignedPluralName = "DependentFeatures";
			this.Roles.DependentFeature = ProductFeatureDependentFeature.RoleType;

			var ProductFeatureIncompatibleFeature = new RelationType(AppsDomain.Instance, new Guid("ce228118-f5b2-49bb-b0cd-7e0ca8e10315"), new Guid("d90b3906-a48d-473c-85a7-baae359d58a7"), new Guid("0305f707-683e-4fcd-94a0-7c0b3a2b27e4"));
			ProductFeatureIncompatibleFeature.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductFeatureIncompatibleFeature.IsIndexed = true;

			ProductFeatureIncompatibleFeature.AssociationType.ObjectType = this;

			ProductFeatureIncompatibleFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			ProductFeatureIncompatibleFeature.RoleType.AssignedSingularName = "IncompatibleFeature";
			ProductFeatureIncompatibleFeature.RoleType.AssignedPluralName = "IncompatibleFeatures";
			this.Roles.IncompatibleFeature = ProductFeatureIncompatibleFeature.RoleType;

			var ProductFeatureVatRate = new RelationType(AppsDomain.Instance, new Guid("efe16e22-edfb-40b1-83c0-110f874c285a"), new Guid("3c78c391-cf55-40ce-9d11-a0600787ed82"), new Guid("6c3e8238-f1dd-4461-a73b-0927cd26db29"));
			ProductFeatureVatRate.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductFeatureVatRate.IsIndexed = true;

			ProductFeatureVatRate.AssociationType.ObjectType = this;

			ProductFeatureVatRate.RoleType.ObjectType = VatRateClass.Instance;;
			ProductFeatureVatRate.RoleType.AssignedSingularName = "VatRate";
			ProductFeatureVatRate.RoleType.AssignedPluralName = "VatRates";
			this.Roles.VatRate = ProductFeatureVatRate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DimensionClass.Instance.ConcreteRoles.EstimatedProductCost = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedProductCost]; 
			ModelClass.Instance.ConcreteRoles.EstimatedProductCost = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedProductCost]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.EstimatedProductCost = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedProductCost]; 
			SizeClass.Instance.ConcreteRoles.EstimatedProductCost = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedProductCost]; 
			ColourClass.Instance.ConcreteRoles.EstimatedProductCost = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedProductCost]; 
			ProductQualityClass.Instance.ConcreteRoles.EstimatedProductCost = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedProductCost]; 
			ServiceFeatureClass.Instance.ConcreteRoles.EstimatedProductCost = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedProductCost]; 

			DimensionClass.Instance.ConcreteRoles.BasePrice = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BasePrice]; 
			ModelClass.Instance.ConcreteRoles.BasePrice = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BasePrice]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.BasePrice = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BasePrice]; 
			SizeClass.Instance.ConcreteRoles.BasePrice = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BasePrice]; 
			ColourClass.Instance.ConcreteRoles.BasePrice = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BasePrice]; 
			ProductQualityClass.Instance.ConcreteRoles.BasePrice = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BasePrice]; 
			ServiceFeatureClass.Instance.ConcreteRoles.BasePrice = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BasePrice]; 

			DimensionClass.Instance.ConcreteRoles.Description = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ModelClass.Instance.ConcreteRoles.Description = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.Description = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			SizeClass.Instance.ConcreteRoles.Description = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ColourClass.Instance.ConcreteRoles.Description = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ProductQualityClass.Instance.ConcreteRoles.Description = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ServiceFeatureClass.Instance.ConcreteRoles.Description = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			DimensionClass.Instance.ConcreteRoles.DependentFeature = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DependentFeature]; 
			ModelClass.Instance.ConcreteRoles.DependentFeature = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DependentFeature]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.DependentFeature = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DependentFeature]; 
			SizeClass.Instance.ConcreteRoles.DependentFeature = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DependentFeature]; 
			ColourClass.Instance.ConcreteRoles.DependentFeature = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DependentFeature]; 
			ProductQualityClass.Instance.ConcreteRoles.DependentFeature = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DependentFeature]; 
			ServiceFeatureClass.Instance.ConcreteRoles.DependentFeature = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DependentFeature]; 

			DimensionClass.Instance.ConcreteRoles.IncompatibleFeature = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IncompatibleFeature]; 
			ModelClass.Instance.ConcreteRoles.IncompatibleFeature = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IncompatibleFeature]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.IncompatibleFeature = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IncompatibleFeature]; 
			SizeClass.Instance.ConcreteRoles.IncompatibleFeature = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IncompatibleFeature]; 
			ColourClass.Instance.ConcreteRoles.IncompatibleFeature = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IncompatibleFeature]; 
			ProductQualityClass.Instance.ConcreteRoles.IncompatibleFeature = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IncompatibleFeature]; 
			ServiceFeatureClass.Instance.ConcreteRoles.IncompatibleFeature = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IncompatibleFeature]; 

			DimensionClass.Instance.ConcreteRoles.VatRate = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			ModelClass.Instance.ConcreteRoles.VatRate = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.VatRate = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			SizeClass.Instance.ConcreteRoles.VatRate = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			ColourClass.Instance.ConcreteRoles.VatRate = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			ProductQualityClass.Instance.ConcreteRoles.VatRate = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 
			ServiceFeatureClass.Instance.ConcreteRoles.VatRate = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 


		}

		internal class RolesType
		{
			internal RoleType EstimatedProductCost;
			internal RoleType BasePrice;
			internal RoleType Description;
			internal RoleType DependentFeature;
			internal RoleType IncompatibleFeature;
			internal RoleType VatRate;

		}
	}public partial class RequirementInterface: Interface
	{
		public static RequirementInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal RequirementInterface() : base(AppsDomain.Instance, new Guid("d3f90525-b7fe-4f81-bccd-adf4f57260bc"))
        {
			this.SingularName = "Requirement";
			this.PluralName = "Requirements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8eda8772-f755-4579-9603-ecc228dcc92f"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("cf84fcbd-4c5e-4a5e-a4e1-9c2433ba674f"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e381bbb0-ceaa-4246-8880-7627ef2391a4"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var RequirementRequiredByDate = new RelationType(AppsDomain.Instance, new Guid("0f2c9ca2-9f2a-403e-8110-311fc0622326"), new Guid("099c426c-7b3f-4c9a-9059-525851488030"), new Guid("178dfe82-99e2-4026-84f9-223e10e852c7"));
			RequirementRequiredByDate.AssignedMultiplicity = Multiplicity.OneToOne;
			RequirementRequiredByDate.AssociationType.ObjectType = this;

			RequirementRequiredByDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			RequirementRequiredByDate.RoleType.AssignedSingularName = "RequiredByDate";
			RequirementRequiredByDate.RoleType.AssignedPluralName = "RequiredByDates";
			this.Roles.RequiredByDate = RequirementRequiredByDate.RoleType;

			var RequirementPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("289a217e-4705-4bf0-b3bb-e51a056e13ee"), new Guid("320a457b-8a35-487d-9ebb-eaa7f6443ebf"), new Guid("63cbc132-2108-4686-9cc6-811914524bcc"));
			RequirementPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementPreviousObjectState.IsDerived = true;
			RequirementPreviousObjectState.IsIndexed = true;

			RequirementPreviousObjectState.AssociationType.ObjectType = this;

			RequirementPreviousObjectState.RoleType.ObjectType = RequirementObjectStateClass.Instance;;
			RequirementPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			RequirementPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = RequirementPreviousObjectState.RoleType;

			var RequirementAuthorizer = new RelationType(AppsDomain.Instance, new Guid("2b828f2b-201d-4ae2-b64c-b2c5be713653"), new Guid("8bd1a8cc-4f4d-41ad-b4fb-d43d4759c0e4"), new Guid("041107e2-0936-48a6-86dd-58ace8cbf7ac"));
			RequirementAuthorizer.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementAuthorizer.IsIndexed = true;

			RequirementAuthorizer.AssociationType.ObjectType = this;

			RequirementAuthorizer.RoleType.ObjectType = PartyInterface.Instance;;
			RequirementAuthorizer.RoleType.AssignedSingularName = "Authorizer";
			RequirementAuthorizer.RoleType.AssignedPluralName = "Authorizers";
			this.Roles.Authorizer = RequirementAuthorizer.RoleType;

			var RequirementRequirementStatus = new RelationType(AppsDomain.Instance, new Guid("36511540-8c83-467c-9ed0-ff5dee38c378"), new Guid("047c0186-3878-4895-9946-4b5a32c5bae1"), new Guid("c80ac083-3b01-432c-81e1-56da054a5023"));
			RequirementRequirementStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			RequirementRequirementStatus.IsDerived = true;
			RequirementRequirementStatus.IsIndexed = true;

			RequirementRequirementStatus.AssociationType.ObjectType = this;

			RequirementRequirementStatus.RoleType.ObjectType = RequirementStatusClass.Instance;;
			RequirementRequirementStatus.RoleType.AssignedSingularName = "RequirementStatus";
			RequirementRequirementStatus.RoleType.AssignedPluralName = "RequirementStatuses";
			this.Roles.RequirementStatus = RequirementRequirementStatus.RoleType;

			var RequirementReason = new RelationType(AppsDomain.Instance, new Guid("3a6ba1d0-3efb-44f3-b90b-7e504ed11140"), new Guid("5e36946c-46d4-4cd4-9ba7-e1c94746ffe9"), new Guid("93f93798-b587-4f8f-9a82-2e0e9c870a52"));
			RequirementReason.AssignedMultiplicity = Multiplicity.OneToOne;
			RequirementReason.AssociationType.ObjectType = this;

			RequirementReason.RoleType.ObjectType = AllorsStringUnit.Instance;;
			RequirementReason.RoleType.AssignedSingularName = "Reason";
			RequirementReason.RoleType.AssignedPluralName = "Reasons";
			RequirementReason.RoleType.Size = -1;
			this.Roles.Reason = RequirementReason.RoleType;

			var RequirementChild = new RelationType(AppsDomain.Instance, new Guid("3ecf2b1e-ac3d-4533-9da1-341111fca04d"), new Guid("ea9f2ab4-6774-44eb-91ce-545f499ae792"), new Guid("483b60d4-f3b7-47da-abb4-c7cefee78e2a"));
			RequirementChild.AssignedMultiplicity = Multiplicity.OneToMany;
			RequirementChild.IsIndexed = true;

			RequirementChild.AssociationType.ObjectType = this;

			RequirementChild.RoleType.ObjectType = RequirementInterface.Instance;;
			RequirementChild.RoleType.AssignedSingularName = "Child";
			RequirementChild.RoleType.AssignedPluralName = "Children";
			this.Roles.Child = RequirementChild.RoleType;

			var RequirementNeededFor = new RelationType(AppsDomain.Instance, new Guid("43e11ee6-dcee-4a2c-80a7-8e04ee36ceb8"), new Guid("d2351d54-e600-400b-a350-9d2f81b5cf3d"), new Guid("0d52a5f8-3852-4483-9f0d-a6877fc3b5a0"));
			RequirementNeededFor.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementNeededFor.IsIndexed = true;

			RequirementNeededFor.AssociationType.ObjectType = this;

			RequirementNeededFor.RoleType.ObjectType = PartyInterface.Instance;;
			RequirementNeededFor.RoleType.AssignedSingularName = "NeededFor";
			RequirementNeededFor.RoleType.AssignedPluralName = "NeededFors";
			this.Roles.NeededFor = RequirementNeededFor.RoleType;

			var RequirementOriginator = new RelationType(AppsDomain.Instance, new Guid("5ed2803c-02d4-4187-8155-bee79e1a0829"), new Guid("e0d08055-60ad-4417-b861-ef3b44f00e79"), new Guid("c4abf003-69be-4e79-8958-701aac912d13"));
			RequirementOriginator.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementOriginator.IsIndexed = true;

			RequirementOriginator.AssociationType.ObjectType = this;

			RequirementOriginator.RoleType.ObjectType = PartyInterface.Instance;;
			RequirementOriginator.RoleType.AssignedSingularName = "Originator";
			RequirementOriginator.RoleType.AssignedPluralName = "Originators";
			this.Roles.Originator = RequirementOriginator.RoleType;

			var RequirementCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("ad98fd99-98b3-4876-b4af-b0c6aa7f41eb"), new Guid("d7a1af36-aea0-4e99-ab8b-b264c6bad301"), new Guid("5d88d9ac-6895-4a72-811b-2c02c9daed9b"));
			RequirementCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementCurrentObjectState.IsDerived = true;
			RequirementCurrentObjectState.IsIndexed = true;

			RequirementCurrentObjectState.AssociationType.ObjectType = this;

			RequirementCurrentObjectState.RoleType.ObjectType = RequirementObjectStateClass.Instance;;
			RequirementCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			RequirementCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = RequirementCurrentObjectState.RoleType;

			var RequirementCurrentRequirementStatus = new RelationType(AppsDomain.Instance, new Guid("b21d89b3-dfbf-484d-afa8-d6ee43cbef6c"), new Guid("7a949028-b354-4749-b048-ba487958fb01"), new Guid("5a205868-1893-444d-8fa2-5ad1361555b9"));
			RequirementCurrentRequirementStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			RequirementCurrentRequirementStatus.IsDerived = true;
			RequirementCurrentRequirementStatus.IsIndexed = true;

			RequirementCurrentRequirementStatus.AssociationType.ObjectType = this;

			RequirementCurrentRequirementStatus.RoleType.ObjectType = RequirementStatusClass.Instance;;
			RequirementCurrentRequirementStatus.RoleType.AssignedSingularName = "CurrentRequirementStatus";
			RequirementCurrentRequirementStatus.RoleType.AssignedPluralName = "CurrentRequirementStatuses";
			this.Roles.CurrentRequirementStatus = RequirementCurrentRequirementStatus.RoleType;

			var RequirementFacility = new RelationType(AppsDomain.Instance, new Guid("b6b7e1e9-6cce-4ca0-a085-0afd3a58ec50"), new Guid("fc02e70b-da78-4f1e-aac3-8b4ba32cea90"), new Guid("1137e61a-5efc-4c7c-9073-0f02c03b9408"));
			RequirementFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementFacility.IsIndexed = true;

			RequirementFacility.AssociationType.ObjectType = this;

			RequirementFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			RequirementFacility.RoleType.AssignedSingularName = "Facility";
			RequirementFacility.RoleType.AssignedPluralName = "Facilities";
			this.Roles.Facility = RequirementFacility.RoleType;

			var RequirementServicedBy = new RelationType(AppsDomain.Instance, new Guid("bfce13c0-b5c2-46f0-b0fd-d0d288f8dc07"), new Guid("7c7ea2fb-451e-4a94-b5fd-cdeab8d97844"), new Guid("f3923b48-a297-43b6-b318-bdafac87c36b"));
			RequirementServicedBy.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequirementServicedBy.IsIndexed = true;

			RequirementServicedBy.AssociationType.ObjectType = this;

			RequirementServicedBy.RoleType.ObjectType = PartyInterface.Instance;;
			RequirementServicedBy.RoleType.AssignedSingularName = "ServicedBy";
			RequirementServicedBy.RoleType.AssignedPluralName = "ServicedBys";
			this.Roles.ServicedBy = RequirementServicedBy.RoleType;

			var RequirementEstimatedBudget = new RelationType(AppsDomain.Instance, new Guid("c34694b4-bd8e-46e9-8bf1-fb1296738ab4"), new Guid("3bd6d711-d49b-4477-9173-e4f8a17f1d8b"), new Guid("6f53fe03-c9a2-43b8-b38e-99597d751a82"));
			RequirementEstimatedBudget.AssignedMultiplicity = Multiplicity.OneToOne;
			RequirementEstimatedBudget.AssociationType.ObjectType = this;

			RequirementEstimatedBudget.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			RequirementEstimatedBudget.RoleType.AssignedSingularName = "EstimatedBudget";
			RequirementEstimatedBudget.RoleType.AssignedPluralName = "EstimatedBudgets";
			RequirementEstimatedBudget.RoleType.Scale = 2;
			RequirementEstimatedBudget.RoleType.Precision = 19;
			this.Roles.EstimatedBudget = RequirementEstimatedBudget.RoleType;

			var RequirementDescription = new RelationType(AppsDomain.Instance, new Guid("d902fe48-c91f-43fe-b402-e0d87606124a"), new Guid("dfda3196-d793-4f58-af1e-661d943c8908"), new Guid("943f924a-5e11-4e5e-9f3a-fc3df42acfc7"));
			RequirementDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			RequirementDescription.AssociationType.ObjectType = this;

			RequirementDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			RequirementDescription.RoleType.AssignedSingularName = "Description";
			RequirementDescription.RoleType.AssignedPluralName = "Descriptions";
			RequirementDescription.RoleType.Size = 256;
			this.Roles.Description = RequirementDescription.RoleType;

			var RequirementQuantity = new RelationType(AppsDomain.Instance, new Guid("f553ad3c-675f-4b97-95c9-42f4d85eb5f9"), new Guid("995dbc52-905b-4572-a41f-8d39584f4132"), new Guid("81fa089d-cc7f-4893-8186-ef6c98780b68"));
			RequirementQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			RequirementQuantity.AssociationType.ObjectType = this;

			RequirementQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			RequirementQuantity.RoleType.AssignedSingularName = "Quantity";
			RequirementQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = RequirementQuantity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductRequirementClass.Instance.ConcreteRoles.RequiredByDate = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredByDate]; 
			ProjectRequirementClass.Instance.ConcreteRoles.RequiredByDate = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredByDate]; 
			ResourceRequirementClass.Instance.ConcreteRoles.RequiredByDate = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredByDate]; 
			InternalRequirementClass.Instance.ConcreteRoles.RequiredByDate = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredByDate]; 
			CustomerRequirementClass.Instance.ConcreteRoles.RequiredByDate = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredByDate]; 
			WorkRequirementClass.Instance.ConcreteRoles.RequiredByDate = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredByDate]; 

			ProductRequirementClass.Instance.ConcreteRoles.PreviousObjectState = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			ProjectRequirementClass.Instance.ConcreteRoles.PreviousObjectState = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			ResourceRequirementClass.Instance.ConcreteRoles.PreviousObjectState = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			InternalRequirementClass.Instance.ConcreteRoles.PreviousObjectState = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			CustomerRequirementClass.Instance.ConcreteRoles.PreviousObjectState = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			WorkRequirementClass.Instance.ConcreteRoles.PreviousObjectState = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			ProductRequirementClass.Instance.ConcreteRoles.Authorizer = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Authorizer]; 
			ProjectRequirementClass.Instance.ConcreteRoles.Authorizer = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Authorizer]; 
			ResourceRequirementClass.Instance.ConcreteRoles.Authorizer = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Authorizer]; 
			InternalRequirementClass.Instance.ConcreteRoles.Authorizer = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Authorizer]; 
			CustomerRequirementClass.Instance.ConcreteRoles.Authorizer = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Authorizer]; 
			WorkRequirementClass.Instance.ConcreteRoles.Authorizer = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Authorizer]; 

			ProductRequirementClass.Instance.ConcreteRoles.RequirementStatus = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementStatus]; 
			ProjectRequirementClass.Instance.ConcreteRoles.RequirementStatus = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementStatus]; 
			ResourceRequirementClass.Instance.ConcreteRoles.RequirementStatus = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementStatus]; 
			InternalRequirementClass.Instance.ConcreteRoles.RequirementStatus = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementStatus]; 
			CustomerRequirementClass.Instance.ConcreteRoles.RequirementStatus = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementStatus]; 
			WorkRequirementClass.Instance.ConcreteRoles.RequirementStatus = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequirementStatus]; 

			ProductRequirementClass.Instance.ConcreteRoles.Reason = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Reason]; 
			ProjectRequirementClass.Instance.ConcreteRoles.Reason = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Reason]; 
			ResourceRequirementClass.Instance.ConcreteRoles.Reason = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Reason]; 
			InternalRequirementClass.Instance.ConcreteRoles.Reason = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Reason]; 
			CustomerRequirementClass.Instance.ConcreteRoles.Reason = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Reason]; 
			WorkRequirementClass.Instance.ConcreteRoles.Reason = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Reason]; 

			ProductRequirementClass.Instance.ConcreteRoles.Child = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			ProjectRequirementClass.Instance.ConcreteRoles.Child = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			ResourceRequirementClass.Instance.ConcreteRoles.Child = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			InternalRequirementClass.Instance.ConcreteRoles.Child = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			CustomerRequirementClass.Instance.ConcreteRoles.Child = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 
			WorkRequirementClass.Instance.ConcreteRoles.Child = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 

			ProductRequirementClass.Instance.ConcreteRoles.NeededFor = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NeededFor]; 
			ProjectRequirementClass.Instance.ConcreteRoles.NeededFor = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NeededFor]; 
			ResourceRequirementClass.Instance.ConcreteRoles.NeededFor = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NeededFor]; 
			InternalRequirementClass.Instance.ConcreteRoles.NeededFor = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NeededFor]; 
			CustomerRequirementClass.Instance.ConcreteRoles.NeededFor = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NeededFor]; 
			WorkRequirementClass.Instance.ConcreteRoles.NeededFor = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NeededFor]; 

			ProductRequirementClass.Instance.ConcreteRoles.Originator = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 
			ProjectRequirementClass.Instance.ConcreteRoles.Originator = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 
			ResourceRequirementClass.Instance.ConcreteRoles.Originator = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 
			InternalRequirementClass.Instance.ConcreteRoles.Originator = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 
			CustomerRequirementClass.Instance.ConcreteRoles.Originator = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 
			WorkRequirementClass.Instance.ConcreteRoles.Originator = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 

			ProductRequirementClass.Instance.ConcreteRoles.CurrentObjectState = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			ProjectRequirementClass.Instance.ConcreteRoles.CurrentObjectState = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			ResourceRequirementClass.Instance.ConcreteRoles.CurrentObjectState = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			InternalRequirementClass.Instance.ConcreteRoles.CurrentObjectState = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			CustomerRequirementClass.Instance.ConcreteRoles.CurrentObjectState = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			WorkRequirementClass.Instance.ConcreteRoles.CurrentObjectState = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			ProductRequirementClass.Instance.ConcreteRoles.CurrentRequirementStatus = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentRequirementStatus]; 
			ProjectRequirementClass.Instance.ConcreteRoles.CurrentRequirementStatus = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentRequirementStatus]; 
			ResourceRequirementClass.Instance.ConcreteRoles.CurrentRequirementStatus = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentRequirementStatus]; 
			InternalRequirementClass.Instance.ConcreteRoles.CurrentRequirementStatus = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentRequirementStatus]; 
			CustomerRequirementClass.Instance.ConcreteRoles.CurrentRequirementStatus = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentRequirementStatus]; 
			WorkRequirementClass.Instance.ConcreteRoles.CurrentRequirementStatus = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentRequirementStatus]; 

			ProductRequirementClass.Instance.ConcreteRoles.Facility = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			ProjectRequirementClass.Instance.ConcreteRoles.Facility = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			ResourceRequirementClass.Instance.ConcreteRoles.Facility = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			InternalRequirementClass.Instance.ConcreteRoles.Facility = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			CustomerRequirementClass.Instance.ConcreteRoles.Facility = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 
			WorkRequirementClass.Instance.ConcreteRoles.Facility = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Facility]; 

			ProductRequirementClass.Instance.ConcreteRoles.ServicedBy = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ServicedBy]; 
			ProjectRequirementClass.Instance.ConcreteRoles.ServicedBy = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ServicedBy]; 
			ResourceRequirementClass.Instance.ConcreteRoles.ServicedBy = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ServicedBy]; 
			InternalRequirementClass.Instance.ConcreteRoles.ServicedBy = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ServicedBy]; 
			CustomerRequirementClass.Instance.ConcreteRoles.ServicedBy = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ServicedBy]; 
			WorkRequirementClass.Instance.ConcreteRoles.ServicedBy = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ServicedBy]; 

			ProductRequirementClass.Instance.ConcreteRoles.EstimatedBudget = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedBudget]; 
			ProjectRequirementClass.Instance.ConcreteRoles.EstimatedBudget = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedBudget]; 
			ResourceRequirementClass.Instance.ConcreteRoles.EstimatedBudget = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedBudget]; 
			InternalRequirementClass.Instance.ConcreteRoles.EstimatedBudget = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedBudget]; 
			CustomerRequirementClass.Instance.ConcreteRoles.EstimatedBudget = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedBudget]; 
			WorkRequirementClass.Instance.ConcreteRoles.EstimatedBudget = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedBudget]; 

			ProductRequirementClass.Instance.ConcreteRoles.Description = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ProjectRequirementClass.Instance.ConcreteRoles.Description = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			ResourceRequirementClass.Instance.ConcreteRoles.Description = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			InternalRequirementClass.Instance.ConcreteRoles.Description = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			CustomerRequirementClass.Instance.ConcreteRoles.Description = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			WorkRequirementClass.Instance.ConcreteRoles.Description = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			ProductRequirementClass.Instance.ConcreteRoles.Quantity = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 
			ProjectRequirementClass.Instance.ConcreteRoles.Quantity = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 
			ResourceRequirementClass.Instance.ConcreteRoles.Quantity = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 
			InternalRequirementClass.Instance.ConcreteRoles.Quantity = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 
			CustomerRequirementClass.Instance.ConcreteRoles.Quantity = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 
			WorkRequirementClass.Instance.ConcreteRoles.Quantity = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 


		}

		internal class RolesType
		{
			internal RoleType RequiredByDate;
			internal RoleType PreviousObjectState;
			internal RoleType Authorizer;
			internal RoleType RequirementStatus;
			internal RoleType Reason;
			internal RoleType Child;
			internal RoleType NeededFor;
			internal RoleType Originator;
			internal RoleType CurrentObjectState;
			internal RoleType CurrentRequirementStatus;
			internal RoleType Facility;
			internal RoleType ServicedBy;
			internal RoleType EstimatedBudget;
			internal RoleType Description;
			internal RoleType Quantity;

		}
	}public partial class EmploymentAgreementClass : Class
	{
		public static EmploymentAgreementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EmploymentAgreementClass() : base(AppsDomain.Instance, new Guid("d402d086-0d7a-4e98-bcb1-8f8e1cfabb99"))
        {
			this.SingularName = "EmploymentAgreement";
			this.PluralName = "EmploymentAgreements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("2e88e842-8cc5-4766-ac13-3fc8f9d31085"))
			{
				Subtype = Instance,
				Supertype = AgreementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AgreementDate;
			internal ConcreteRoleType Addendum;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType AgreementTerm;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType AgreementItem;
			internal ConcreteRoleType AgreementNumber;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class ManufacturerSuggestedRetailPriceClass : Class
	{
		public static ManufacturerSuggestedRetailPriceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ManufacturerSuggestedRetailPriceClass() : base(AppsDomain.Instance, new Guid("d4cfdb68-9128-4afc-8670-192e55115499"))
        {
			this.SingularName = "ManufacturerSuggestedRetailPrice";
			this.PluralName = "ManufacturerSuggestedRetailPrices";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d227a1be-e97d-449e-bee5-736af19d6efb"))
			{
				Subtype = Instance,
				Supertype = PriceComponentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType Rate;
			internal ConcreteRoleType RevenueValueBreak;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType OrderQuantityBreak;
			internal ConcreteRoleType PackageQuantityBreak;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType RevenueQuantityBreak;
			internal ConcreteRoleType SpecifiedFor;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType AgreementPricingProgram;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType OrderKind;
			internal ConcreteRoleType OrderValue;
			internal ConcreteRoleType Price;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType SalesChannel;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class NewsItemClass : Class
	{
		public static NewsItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal NewsItemClass() : base(AppsDomain.Instance, new Guid("d50ffc20-9e2d-4362-8e3f-b54d7368d487"))
        {
			this.SingularName = "NewsItem";
			this.PluralName = "NewsItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b7fc290f-12a4-4911-8598-a9f37166b2d0"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var NewsItemIsPublished = new RelationType(AppsDomain.Instance, new Guid("1a86dc14-eadc-4aad-83c2-238e31a20658"), new Guid("f8d3058b-3e81-4da8-a29f-52dd267e1733"), new Guid("ae0eba55-6aaf-4ed4-a784-006f5bf95f49"));
			NewsItemIsPublished.AssignedMultiplicity = Multiplicity.OneToOne;
			NewsItemIsPublished.AssociationType.ObjectType = this;

			NewsItemIsPublished.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			NewsItemIsPublished.RoleType.AssignedSingularName = "IsPublished";
			NewsItemIsPublished.RoleType.AssignedPluralName = "ArePublished";
			this.Roles.IsPublished = NewsItemIsPublished.RoleType;

			var NewsItemTitle = new RelationType(AppsDomain.Instance, new Guid("2f1736ea-0e74-43a9-b047-cc37bc9618fa"), new Guid("c1202b23-5507-43ea-849d-94cd46392927"), new Guid("0add2328-35a3-4286-bd0e-258a47756ce5"));
			NewsItemTitle.AssignedMultiplicity = Multiplicity.OneToOne;
			NewsItemTitle.AssociationType.ObjectType = this;

			NewsItemTitle.RoleType.ObjectType = AllorsStringUnit.Instance;;
			NewsItemTitle.RoleType.AssignedSingularName = "Title";
			NewsItemTitle.RoleType.AssignedPluralName = "Titles";
			NewsItemTitle.RoleType.Size = 256;
			this.Roles.Title = NewsItemTitle.RoleType;

			var NewsItemDisplayOrder = new RelationType(AppsDomain.Instance, new Guid("369f8b36-1bb8-45b6-b02d-6cd7c126cb54"), new Guid("bc2dd1eb-0f39-4717-bd3e-bfcaee6e0a0c"), new Guid("c43bf977-c5de-44f9-99a9-bb8e9dd96122"));
			NewsItemDisplayOrder.AssignedMultiplicity = Multiplicity.OneToOne;
			NewsItemDisplayOrder.AssociationType.ObjectType = this;

			NewsItemDisplayOrder.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			NewsItemDisplayOrder.RoleType.AssignedSingularName = "DisplayOrder";
			NewsItemDisplayOrder.RoleType.AssignedPluralName = "DisplayOrders";
			this.Roles.DisplayOrder = NewsItemDisplayOrder.RoleType;

			var NewsItemLocale = new RelationType(AppsDomain.Instance, new Guid("372331ef-70a4-4a67-8f85-a0907ace9194"), new Guid("39e20d75-09f5-4692-a16a-86c2b284e0fa"), new Guid("0ad8a7a1-3466-452c-ac7f-5df53627ae5f"));
			NewsItemLocale.AssignedMultiplicity = Multiplicity.ManyToOne;
			NewsItemLocale.IsIndexed = true;

			NewsItemLocale.AssociationType.ObjectType = this;

			NewsItemLocale.RoleType.ObjectType = LocaleClass.Instance;;
			NewsItemLocale.RoleType.AssignedSingularName = "Locale";
			NewsItemLocale.RoleType.AssignedPluralName = "Locales";
			this.Roles.Locale = NewsItemLocale.RoleType;

			var NewsItemLongText = new RelationType(AppsDomain.Instance, new Guid("4a03f057-339f-4dd4-ac89-3b97d27d2170"), new Guid("ca816c14-6aaf-4ed8-b140-f9c941e4f769"), new Guid("687c0be7-138d-4ea3-a87f-58df8ac7e60d"));
			NewsItemLongText.AssignedMultiplicity = Multiplicity.OneToOne;
			NewsItemLongText.AssociationType.ObjectType = this;

			NewsItemLongText.RoleType.ObjectType = AllorsStringUnit.Instance;;
			NewsItemLongText.RoleType.AssignedSingularName = "LongText";
			NewsItemLongText.RoleType.AssignedPluralName = "LongTexts";
			NewsItemLongText.RoleType.Size = 256;
			this.Roles.LongText = NewsItemLongText.RoleType;

			var NewsItemText = new RelationType(AppsDomain.Instance, new Guid("7aee11d0-f9b4-450d-83b8-357811e99246"), new Guid("2ddcf225-907a-4d99-921c-f61893aa7ac8"), new Guid("a08e2201-208f-4823-a814-a498aa0db9a5"));
			NewsItemText.AssignedMultiplicity = Multiplicity.OneToOne;
			NewsItemText.AssociationType.ObjectType = this;

			NewsItemText.RoleType.ObjectType = AllorsStringUnit.Instance;;
			NewsItemText.RoleType.AssignedSingularName = "Text";
			NewsItemText.RoleType.AssignedPluralName = "Texts";
			NewsItemText.RoleType.Size = -1;
			this.Roles.Text = NewsItemText.RoleType;

			var NewsItemDate = new RelationType(AppsDomain.Instance, new Guid("a184408c-a1b0-47b2-821a-a2ab643b523e"), new Guid("213a7484-741a-4a2b-b765-3bc1b8427a64"), new Guid("55094ebe-bf49-44f4-bb0f-5722eca4ae90"));
			NewsItemDate.AssignedMultiplicity = Multiplicity.OneToOne;
			NewsItemDate.AssociationType.ObjectType = this;

			NewsItemDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			NewsItemDate.RoleType.AssignedSingularName = "Date";
			NewsItemDate.RoleType.AssignedPluralName = "Date";
			this.Roles.Date = NewsItemDate.RoleType;

			var NewsItemAnnouncement = new RelationType(AppsDomain.Instance, new Guid("d29e707f-66dc-4fbf-aba4-63473498dd4b"), new Guid("b977e1eb-5a75-4f36-8381-6b49615e7969"), new Guid("5fe8e6f1-a992-452b-8711-0a9ed007ef2e"));
			NewsItemAnnouncement.AssignedMultiplicity = Multiplicity.OneToOne;
			NewsItemAnnouncement.AssociationType.ObjectType = this;

			NewsItemAnnouncement.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			NewsItemAnnouncement.RoleType.AssignedSingularName = "Announcement";
			NewsItemAnnouncement.RoleType.AssignedPluralName = "Announcements";
			this.Roles.Announcement = NewsItemAnnouncement.RoleType;


		}

		internal override void SetRelationTypes()
		{
			NewsItemClass.Instance.ConcreteRoles.IsPublished = NewsItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsPublished]; 

			NewsItemClass.Instance.ConcreteRoles.Title = NewsItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Title]; 

			NewsItemClass.Instance.ConcreteRoles.DisplayOrder = NewsItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DisplayOrder]; 

			NewsItemClass.Instance.ConcreteRoles.Locale = NewsItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 

			NewsItemClass.Instance.ConcreteRoles.LongText = NewsItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LongText]; 

			NewsItemClass.Instance.ConcreteRoles.Text = NewsItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 

			NewsItemClass.Instance.ConcreteRoles.Date = NewsItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Date]; 

			NewsItemClass.Instance.ConcreteRoles.Announcement = NewsItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Announcement]; 


		}

		internal class RolesType
		{
			internal RoleType IsPublished;
			internal RoleType Title;
			internal RoleType DisplayOrder;
			internal RoleType Locale;
			internal RoleType LongText;
			internal RoleType Text;
			internal RoleType Date;
			internal RoleType Announcement;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType IsPublished;
			internal ConcreteRoleType Title;
			internal ConcreteRoleType DisplayOrder;
			internal ConcreteRoleType Locale;
			internal ConcreteRoleType LongText;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType Date;
			internal ConcreteRoleType Announcement;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PartyBenefitClass : Class
	{
		public static PartyBenefitClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyBenefitClass() : base(AppsDomain.Instance, new Guid("d520cf1a-8d3a-4380-8b88-85cd63a5ad05"))
        {
			this.SingularName = "PartyBenefit";
			this.PluralName = "PartyBenefits";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b54a3516-3bd2-46df-9fa4-7f005d3102ba"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyBenefitTimeFrequency = new RelationType(AppsDomain.Instance, new Guid("15638ba3-73c7-4c32-aaa7-a91d4a5e9951"), new Guid("e904820e-49c4-4fa7-9f91-55e9430bcf38"), new Guid("0af63f52-dd36-45b4-9123-4d12a74d502a"));
			PartyBenefitTimeFrequency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyBenefitTimeFrequency.IsIndexed = true;

			PartyBenefitTimeFrequency.AssociationType.ObjectType = this;

			PartyBenefitTimeFrequency.RoleType.ObjectType = TimeFrequencyClass.Instance;;
			PartyBenefitTimeFrequency.RoleType.AssignedSingularName = "TimeFrequency";
			PartyBenefitTimeFrequency.RoleType.AssignedPluralName = "TimeFrequencies";
			this.Roles.TimeFrequency = PartyBenefitTimeFrequency.RoleType;

			var PartyBenefitCost = new RelationType(AppsDomain.Instance, new Guid("1c4a69e7-62c7-4e6b-b7a5-69817d1788df"), new Guid("67280aad-73cd-4366-8a4f-2d38257e022e"), new Guid("0d391786-7d0b-488f-95db-f449f85459ec"));
			PartyBenefitCost.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyBenefitCost.AssociationType.ObjectType = this;

			PartyBenefitCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyBenefitCost.RoleType.AssignedSingularName = "Cost";
			PartyBenefitCost.RoleType.AssignedPluralName = "Costs";
			PartyBenefitCost.RoleType.Scale = 2;
			PartyBenefitCost.RoleType.Precision = 19;
			this.Roles.Cost = PartyBenefitCost.RoleType;

			var PartyBenefitActualEmployerPaidPercentage = new RelationType(AppsDomain.Instance, new Guid("320e98c9-adff-41cf-894a-500730cf6c09"), new Guid("b9693920-2e4d-41e2-8925-c6e40b0ed673"), new Guid("2d48ba77-63e8-4397-9004-09329058f01b"));
			PartyBenefitActualEmployerPaidPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyBenefitActualEmployerPaidPercentage.AssociationType.ObjectType = this;

			PartyBenefitActualEmployerPaidPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyBenefitActualEmployerPaidPercentage.RoleType.AssignedSingularName = "ActualEmployerPaidPercentage";
			PartyBenefitActualEmployerPaidPercentage.RoleType.AssignedPluralName = "ActualEmployerPaidPercentages";
			PartyBenefitActualEmployerPaidPercentage.RoleType.Scale = 2;
			PartyBenefitActualEmployerPaidPercentage.RoleType.Precision = 19;
			this.Roles.ActualEmployerPaidPercentage = PartyBenefitActualEmployerPaidPercentage.RoleType;

			var PartyBenefitBenefit = new RelationType(AppsDomain.Instance, new Guid("9a8fcada-bf2c-450d-a941-e0c7ec414cf3"), new Guid("56813128-50b2-4fbf-ad0f-0385930a6805"), new Guid("95e9e94b-0fad-47e0-bfcf-f131e6962694"));
			PartyBenefitBenefit.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyBenefitBenefit.IsIndexed = true;

			PartyBenefitBenefit.AssociationType.ObjectType = this;

			PartyBenefitBenefit.RoleType.ObjectType = BenefitClass.Instance;;
			PartyBenefitBenefit.RoleType.AssignedSingularName = "Benefit";
			PartyBenefitBenefit.RoleType.AssignedPluralName = "Benefits";
			this.Roles.Benefit = PartyBenefitBenefit.RoleType;

			var PartyBenefitActualAvailableTime = new RelationType(AppsDomain.Instance, new Guid("e4bd1497-824b-477a-9842-a87b4193b430"), new Guid("fc6f6c2a-5732-4c3d-8db0-58e3a4f26d6c"), new Guid("53891641-e7a9-46a6-bd2c-56b7f23b0ab5"));
			PartyBenefitActualAvailableTime.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyBenefitActualAvailableTime.AssociationType.ObjectType = this;

			PartyBenefitActualAvailableTime.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyBenefitActualAvailableTime.RoleType.AssignedSingularName = "ActualAvailableTime";
			PartyBenefitActualAvailableTime.RoleType.AssignedPluralName = "ActualAvailableTimes";
			PartyBenefitActualAvailableTime.RoleType.Scale = 2;
			PartyBenefitActualAvailableTime.RoleType.Precision = 19;
			this.Roles.ActualAvailableTime = PartyBenefitActualAvailableTime.RoleType;

			var PartyBenefitEmployment = new RelationType(AppsDomain.Instance, new Guid("f377fde6-39b4-47e1-a3c0-e574f416f6ad"), new Guid("8a5b1e5f-e945-43ac-a1ae-72c1c0457a73"), new Guid("c4d10070-cbf6-4ebf-a9f1-a53a8d6d41b4"));
			PartyBenefitEmployment.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyBenefitEmployment.IsIndexed = true;

			PartyBenefitEmployment.AssociationType.ObjectType = this;

			PartyBenefitEmployment.RoleType.ObjectType = EmploymentClass.Instance;;
			PartyBenefitEmployment.RoleType.AssignedSingularName = "Employment";
			PartyBenefitEmployment.RoleType.AssignedPluralName = "Employments";
			this.Roles.Employment = PartyBenefitEmployment.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyBenefitClass.Instance.ConcreteRoles.TimeFrequency = PartyBenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TimeFrequency]; 

			PartyBenefitClass.Instance.ConcreteRoles.Cost = PartyBenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Cost]; 

			PartyBenefitClass.Instance.ConcreteRoles.ActualEmployerPaidPercentage = PartyBenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualEmployerPaidPercentage]; 

			PartyBenefitClass.Instance.ConcreteRoles.Benefit = PartyBenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Benefit]; 

			PartyBenefitClass.Instance.ConcreteRoles.ActualAvailableTime = PartyBenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualAvailableTime]; 

			PartyBenefitClass.Instance.ConcreteRoles.Employment = PartyBenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Employment]; 


		}

		internal class RolesType
		{
			internal RoleType TimeFrequency;
			internal RoleType Cost;
			internal RoleType ActualEmployerPaidPercentage;
			internal RoleType Benefit;
			internal RoleType ActualAvailableTime;
			internal RoleType Employment;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType TimeFrequency;
			internal ConcreteRoleType Cost;
			internal ConcreteRoleType ActualEmployerPaidPercentage;
			internal ConcreteRoleType Benefit;
			internal ConcreteRoleType ActualAvailableTime;
			internal ConcreteRoleType Employment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PostalAddressClass : Class
	{
		public static PostalAddressClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PostalAddressClass() : base(AppsDomain.Instance, new Guid("d54b4bba-a84c-4826-85ba-7340714035c7"))
        {
			this.SingularName = "PostalAddress";
			this.PluralName = "PostalAddresses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0bbbbd48-c792-493d-beda-77ead5c71c1f"))
			{
				Subtype = Instance,
				Supertype = ContactMechanismInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("9c016254-ee52-49e6-bd4f-b136d90b66c5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("f2b48fa8-e085-4584-8288-6ac3d4291408"))
			{
				Subtype = Instance,
				Supertype = GeoLocatableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PostalAddressGeographicBoundary = new RelationType(AppsDomain.Instance, new Guid("24216a78-41d8-4ffc-958a-2411530eeb94"), new Guid("649eb363-210c-4567-be0a-bcd3e666294e"), new Guid("1e9fb472-c39d-4e46-a58c-3cbf2b99c2cd"));
			PostalAddressGeographicBoundary.AssignedMultiplicity = Multiplicity.ManyToMany;
			PostalAddressGeographicBoundary.IsIndexed = true;

			PostalAddressGeographicBoundary.AssociationType.ObjectType = this;

			PostalAddressGeographicBoundary.RoleType.ObjectType = GeographicBoundaryInterface.Instance;;
			PostalAddressGeographicBoundary.RoleType.AssignedSingularName = "GeographicBoundary";
			PostalAddressGeographicBoundary.RoleType.AssignedPluralName = "GeographicBoundaries";
			this.Roles.GeographicBoundary = PostalAddressGeographicBoundary.RoleType;

			var PostalAddressAddress3 = new RelationType(AppsDomain.Instance, new Guid("5440794c-8569-46fb-a5cb-42dc523e1264"), new Guid("1f14c608-3744-4697-a226-443196a57e94"), new Guid("db609423-3100-46a1-890d-0dbef16daf3f"));
			PostalAddressAddress3.AssignedMultiplicity = Multiplicity.OneToOne;
			PostalAddressAddress3.AssociationType.ObjectType = this;

			PostalAddressAddress3.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PostalAddressAddress3.RoleType.AssignedSingularName = "Address3";
			PostalAddressAddress3.RoleType.AssignedPluralName = "Addresses3";
			PostalAddressAddress3.RoleType.Size = 256;
			this.Roles.Address3 = PostalAddressAddress3.RoleType;

			var PostalAddressCountry = new RelationType(AppsDomain.Instance, new Guid("5c513411-ca39-4f39-844d-54cf0468a702"), new Guid("d72a1dc4-a61b-4f91-89ac-29f633b6944b"), new Guid("13e57a25-6265-4a56-a4e7-c914a0c57cb9"));
			PostalAddressCountry.AssignedMultiplicity = Multiplicity.ManyToOne;
			PostalAddressCountry.IsDerived = true;
			PostalAddressCountry.IsIndexed = true;

			PostalAddressCountry.AssociationType.ObjectType = this;

			PostalAddressCountry.RoleType.ObjectType = CountryClass.Instance;;
			PostalAddressCountry.RoleType.AssignedSingularName = "Country";
			PostalAddressCountry.RoleType.AssignedPluralName = "Countries";
			this.Roles.Country = PostalAddressCountry.RoleType;

			var PostalAddressAddress2 = new RelationType(AppsDomain.Instance, new Guid("9475dd68-43f7-4195-bf57-8ce82333980e"), new Guid("c0a0b7b4-5f1a-4b8b-a858-5de3abc5e66f"), new Guid("58ffb62f-f270-4a64-b2a9-26b2cec8eaee"));
			PostalAddressAddress2.AssignedMultiplicity = Multiplicity.OneToOne;
			PostalAddressAddress2.AssociationType.ObjectType = this;

			PostalAddressAddress2.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PostalAddressAddress2.RoleType.AssignedSingularName = "Address2";
			PostalAddressAddress2.RoleType.AssignedPluralName = "Addresses2";
			PostalAddressAddress2.RoleType.Size = 256;
			this.Roles.Address2 = PostalAddressAddress2.RoleType;

			var PostalAddressCity = new RelationType(AppsDomain.Instance, new Guid("9801fa63-ac82-4774-bf84-d2752b95b8a3"), new Guid("6eb0ec18-2d30-4529-b741-785aad15842f"), new Guid("a477adeb-04b9-449c-b61c-4a1384fe10aa"));
			PostalAddressCity.AssignedMultiplicity = Multiplicity.ManyToOne;
			PostalAddressCity.IsDerived = true;
			PostalAddressCity.IsIndexed = true;

			PostalAddressCity.AssociationType.ObjectType = this;

			PostalAddressCity.RoleType.ObjectType = CityClass.Instance;;
			PostalAddressCity.RoleType.AssignedSingularName = "City";
			PostalAddressCity.RoleType.AssignedPluralName = "Cities";
			this.Roles.City = PostalAddressCity.RoleType;

			var PostalAddressAddress1 = new RelationType(AppsDomain.Instance, new Guid("c83eb0ff-8503-4f2a-9280-f8e46b382b6a"), new Guid("2976fdd4-19c4-4913-8875-1bf413da02fd"), new Guid("04c32889-628b-4f9f-8504-65a73268055d"));
			PostalAddressAddress1.AssignedMultiplicity = Multiplicity.OneToOne;
			PostalAddressAddress1.AssociationType.ObjectType = this;

			PostalAddressAddress1.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PostalAddressAddress1.RoleType.AssignedSingularName = "Address1";
			PostalAddressAddress1.RoleType.AssignedPluralName = "Addresses1";
			PostalAddressAddress1.RoleType.Size = 256;
			this.Roles.Address1 = PostalAddressAddress1.RoleType;

			var PostalAddressPostalBoundary = new RelationType(AppsDomain.Instance, new Guid("dfec7833-a7c1-4c27-bbdb-7bc2cc9e8f30"), new Guid("c206f13e-d4eb-4818-81ef-e134251698cd"), new Guid("f6a78ca4-be61-41ff-803b-05934f8691e7"));
			PostalAddressPostalBoundary.AssignedMultiplicity = Multiplicity.OneToOne;
			PostalAddressPostalBoundary.IsIndexed = true;

			PostalAddressPostalBoundary.AssociationType.ObjectType = this;

			PostalAddressPostalBoundary.RoleType.ObjectType = PostalBoundaryClass.Instance;;
			PostalAddressPostalBoundary.RoleType.AssignedSingularName = "PostalBoundary";
			PostalAddressPostalBoundary.RoleType.AssignedPluralName = "PostalBoundaries";
			this.Roles.PostalBoundary = PostalAddressPostalBoundary.RoleType;

			var PostalAddressPostalCode = new RelationType(AppsDomain.Instance, new Guid("e642d557-a842-4357-be4a-ed7da965d592"), new Guid("ad1d5592-71a7-4410-91e3-f00ea1c29ce1"), new Guid("23f50fbf-71df-4532-9b45-17e5ac3ad7f4"));
			PostalAddressPostalCode.AssignedMultiplicity = Multiplicity.ManyToOne;
			PostalAddressPostalCode.IsDerived = true;
			PostalAddressPostalCode.IsIndexed = true;

			PostalAddressPostalCode.AssociationType.ObjectType = this;

			PostalAddressPostalCode.RoleType.ObjectType = PostalCodeClass.Instance;;
			PostalAddressPostalCode.RoleType.AssignedSingularName = "PostalCode";
			PostalAddressPostalCode.RoleType.AssignedPluralName = "PostalCodes";
			this.Roles.PostalCode = PostalAddressPostalCode.RoleType;

			var PostalAddressDirections = new RelationType(AppsDomain.Instance, new Guid("f2ba6a39-2e34-42bc-accb-0d8838311994"), new Guid("6d2b7cbb-1825-40a9-9000-2854a9cd6a26"), new Guid("53349be7-9048-494f-96e0-367468eb9dad"));
			PostalAddressDirections.AssignedMultiplicity = Multiplicity.OneToOne;
			PostalAddressDirections.AssociationType.ObjectType = this;

			PostalAddressDirections.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PostalAddressDirections.RoleType.AssignedSingularName = "Directions";
			PostalAddressDirections.RoleType.AssignedPluralName = "Directions";
			PostalAddressDirections.RoleType.Size = 256;
			this.Roles.Directions = PostalAddressDirections.RoleType;

			var PostalAddressFormattedFullAddress = new RelationType(AppsDomain.Instance, new Guid("f97e6fa7-3c30-4ab1-9b9b-d2c9ad257009"), new Guid("d57e1d69-6f84-4601-8ae8-0807d6bf4d5c"), new Guid("26ca4fa5-70e5-4f38-a731-ca3a34f24a91"));
			PostalAddressFormattedFullAddress.AssignedMultiplicity = Multiplicity.OneToOne;
			PostalAddressFormattedFullAddress.IsDerived = true;
			PostalAddressFormattedFullAddress.AssociationType.ObjectType = this;

			PostalAddressFormattedFullAddress.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PostalAddressFormattedFullAddress.RoleType.AssignedSingularName = "FormattedFullAddress";
			PostalAddressFormattedFullAddress.RoleType.AssignedPluralName = "FormattedFullAddresses";
			PostalAddressFormattedFullAddress.RoleType.Size = -1;
			this.Roles.FormattedFullAddress = PostalAddressFormattedFullAddress.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PostalAddressClass.Instance.ConcreteRoles.GeographicBoundary = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeographicBoundary]; 

			PostalAddressClass.Instance.ConcreteRoles.Address3 = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Address3]; 

			PostalAddressClass.Instance.ConcreteRoles.Country = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Country]; 

			PostalAddressClass.Instance.ConcreteRoles.Address2 = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Address2]; 

			PostalAddressClass.Instance.ConcreteRoles.City = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.City]; 

			PostalAddressClass.Instance.ConcreteRoles.Address1 = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Address1]; 

			PostalAddressClass.Instance.ConcreteRoles.PostalBoundary = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PostalBoundary]; 

			PostalAddressClass.Instance.ConcreteRoles.PostalCode = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PostalCode]; 

			PostalAddressClass.Instance.ConcreteRoles.Directions = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Directions]; 

			PostalAddressClass.Instance.ConcreteRoles.FormattedFullAddress = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FormattedFullAddress]; 


		}

		internal class RolesType
		{
			internal RoleType GeographicBoundary;
			internal RoleType Address3;
			internal RoleType Country;
			internal RoleType Address2;
			internal RoleType City;
			internal RoleType Address1;
			internal RoleType PostalBoundary;
			internal RoleType PostalCode;
			internal RoleType Directions;
			internal RoleType FormattedFullAddress;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType GeographicBoundary;
			internal ConcreteRoleType Address3;
			internal ConcreteRoleType Country;
			internal ConcreteRoleType Address2;
			internal ConcreteRoleType City;
			internal ConcreteRoleType Address1;
			internal ConcreteRoleType PostalBoundary;
			internal ConcreteRoleType PostalCode;
			internal ConcreteRoleType Directions;
			internal ConcreteRoleType FormattedFullAddress;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType FollowTo;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PackageQuantityBreakClass : Class
	{
		public static PackageQuantityBreakClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PackageQuantityBreakClass() : base(AppsDomain.Instance, new Guid("d551887b-8520-478d-bf2c-b0f26e3bc356"))
        {
			this.SingularName = "PackageQuantityBreak";
			this.PluralName = "PackageQuantityBreaks";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("166be787-3caa-4c90-85a5-2b1f3169f065"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PackageQuantityBreakFrom = new RelationType(AppsDomain.Instance, new Guid("0df167e7-e1b7-4c2a-9de4-f06fc359600f"), new Guid("66f59599-97de-44a7-908a-a86a43e332e0"), new Guid("7d181c6a-e465-4e2e-a789-82f2c956b0c2"));
			PackageQuantityBreakFrom.AssignedMultiplicity = Multiplicity.OneToOne;
			PackageQuantityBreakFrom.AssociationType.ObjectType = this;

			PackageQuantityBreakFrom.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PackageQuantityBreakFrom.RoleType.AssignedSingularName = "From";
			PackageQuantityBreakFrom.RoleType.AssignedPluralName = "Froms";
			this.Roles.From = PackageQuantityBreakFrom.RoleType;

			var PackageQuantityBreakThrough = new RelationType(AppsDomain.Instance, new Guid("c282c1db-d9a5-40b8-aed1-ddbd060cdbcd"), new Guid("edc54775-b7d9-4d2c-94a3-93e8974f5da8"), new Guid("2c753aa2-9ee7-4b06-9851-ce992a3545e3"));
			PackageQuantityBreakThrough.AssignedMultiplicity = Multiplicity.OneToOne;
			PackageQuantityBreakThrough.AssociationType.ObjectType = this;

			PackageQuantityBreakThrough.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PackageQuantityBreakThrough.RoleType.AssignedSingularName = "Through";
			PackageQuantityBreakThrough.RoleType.AssignedPluralName = "Throughs";
			this.Roles.Through = PackageQuantityBreakThrough.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PackageQuantityBreakClass.Instance.ConcreteRoles.From = PackageQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.From]; 

			PackageQuantityBreakClass.Instance.ConcreteRoles.Through = PackageQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Through]; 


		}

		internal class RolesType
		{
			internal RoleType From;
			internal RoleType Through;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType From;
			internal ConcreteRoleType Through;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SubContractorRelationshipClass : Class
	{
		public static SubContractorRelationshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SubContractorRelationshipClass() : base(AppsDomain.Instance, new Guid("d60cc44a-6491-4982-9b2d-99891e382a21"))
        {
			this.SingularName = "SubContractorRelationship";
			this.PluralName = "SubContractorRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("f592bd31-57f0-4072-b780-1375c650dc65"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SubContractorRelationshipContractor = new RelationType(AppsDomain.Instance, new Guid("567a8c58-2584-4dc7-96c8-13fea5b51cf9"), new Guid("f12711a8-11ce-4f9c-a75b-02594b476a9e"), new Guid("8f21a29f-a0b0-412c-b7dd-e2fcdee561d6"));
			SubContractorRelationshipContractor.AssignedMultiplicity = Multiplicity.ManyToOne;
			SubContractorRelationshipContractor.IsIndexed = true;

			SubContractorRelationshipContractor.AssociationType.ObjectType = this;

			SubContractorRelationshipContractor.RoleType.ObjectType = PartyInterface.Instance;;
			SubContractorRelationshipContractor.RoleType.AssignedSingularName = "Contractor";
			SubContractorRelationshipContractor.RoleType.AssignedPluralName = "Contractors";
			this.Roles.Contractor = SubContractorRelationshipContractor.RoleType;

			var SubContractorRelationshipSubContractor = new RelationType(AppsDomain.Instance, new Guid("d95ecb34-dfe4-42df-bc9f-1ad4af72abaa"), new Guid("597810f4-da06-4d63-837e-6cd0419f3d4b"), new Guid("6aca0d56-be58-4876-bfef-918430a119a7"));
			SubContractorRelationshipSubContractor.AssignedMultiplicity = Multiplicity.ManyToOne;
			SubContractorRelationshipSubContractor.IsIndexed = true;

			SubContractorRelationshipSubContractor.AssociationType.ObjectType = this;

			SubContractorRelationshipSubContractor.RoleType.ObjectType = PartyInterface.Instance;;
			SubContractorRelationshipSubContractor.RoleType.AssignedSingularName = "SubContractor";
			SubContractorRelationshipSubContractor.RoleType.AssignedPluralName = "SubContractors";
			this.Roles.SubContractor = SubContractorRelationshipSubContractor.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SubContractorRelationshipClass.Instance.ConcreteRoles.Contractor = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Contractor]; 

			SubContractorRelationshipClass.Instance.ConcreteRoles.SubContractor = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubContractor]; 


		}

		internal class RolesType
		{
			internal RoleType Contractor;
			internal RoleType SubContractor;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Contractor;
			internal ConcreteRoleType SubContractor;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ClientAgreementClass : Class
	{
		public static ClientAgreementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ClientAgreementClass() : base(AppsDomain.Instance, new Guid("d726e301-4e4a-4ccb-9a6e-bc6fc4a327ab"))
        {
			this.SingularName = "ClientAgreement";
			this.PluralName = "ClientAgreements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("41595676-5fbd-4231-b881-285605d9ab33"))
			{
				Subtype = Instance,
				Supertype = AgreementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AgreementDate;
			internal ConcreteRoleType Addendum;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType AgreementTerm;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType AgreementItem;
			internal ConcreteRoleType AgreementNumber;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class InvoiceItemInterface: Interface
	{
		public static InvoiceItemInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal InvoiceItemInterface() : base(AppsDomain.Instance, new Guid("d79f734d-4434-4710-a7ea-7d6306f3064f"))
        {
			this.SingularName = "InvoiceItem";
			this.PluralName = "InvoiceItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("26fa7b34-09ef-4565-aa53-0dc70414d612"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("71701ec1-1fff-4381-8f3f-7f4141c5fd91"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var InvoiceItemTotalIncVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("0599c28d-11f3-4ccb-b78c-2d6c8748b952"), new Guid("a8520b8c-37c2-4b4b-a31d-649ba867f9b8"), new Guid("04cdcfac-28ee-4c0d-9e6f-aaa2b5297eea"));
			InvoiceItemTotalIncVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalIncVatCustomerCurrency.IsDerived = true;
			InvoiceItemTotalIncVatCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceItemTotalIncVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalIncVatCustomerCurrency.RoleType.AssignedSingularName = "TotalIncVatCustomerCurrency";
			InvoiceItemTotalIncVatCustomerCurrency.RoleType.AssignedPluralName = "TotalIncVatsCustomerCurrency";
			InvoiceItemTotalIncVatCustomerCurrency.RoleType.Scale = 2;
			InvoiceItemTotalIncVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalIncVatCustomerCurrency = InvoiceItemTotalIncVatCustomerCurrency.RoleType;

			var InvoiceItemInvoiceTerm = new RelationType(AppsDomain.Instance, new Guid("067674d0-6d9b-4a7e-b0c6-62c24f3a4815"), new Guid("72cdddb8-711d-491c-9965-cef190a10913"), new Guid("5f894db7-f9ed-47d0-a438-c2e00446edbf"));
			InvoiceItemInvoiceTerm.AssignedMultiplicity = Multiplicity.OneToMany;
			InvoiceItemInvoiceTerm.IsIndexed = true;

			InvoiceItemInvoiceTerm.AssociationType.ObjectType = this;

			InvoiceItemInvoiceTerm.RoleType.ObjectType = AgreementTermInterface.Instance;;
			InvoiceItemInvoiceTerm.RoleType.AssignedSingularName = "InvoiceTerm";
			InvoiceItemInvoiceTerm.RoleType.AssignedPluralName = "InvoiceTerms";
			this.Roles.InvoiceTerm = InvoiceItemInvoiceTerm.RoleType;

			var InvoiceItemTotalVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("0805a468-9d72-4199-a88e-402b84fbe3e6"), new Guid("3e586376-57fc-45e3-930a-49ac79c66431"), new Guid("6dbb9536-45c2-4ce4-b215-9ffac8f96450"));
			InvoiceItemTotalVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalVatCustomerCurrency.IsDerived = true;
			InvoiceItemTotalVatCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceItemTotalVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalVatCustomerCurrency.RoleType.AssignedSingularName = "TotalVatCustomerCurrency";
			InvoiceItemTotalVatCustomerCurrency.RoleType.AssignedPluralName = "TotalVatsCustomerCurrency";
			InvoiceItemTotalVatCustomerCurrency.RoleType.Scale = 2;
			InvoiceItemTotalVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalVatCustomerCurrency = InvoiceItemTotalVatCustomerCurrency.RoleType;

			var InvoiceItemTotalBasePrice = new RelationType(AppsDomain.Instance, new Guid("11bfeaf2-f89e-433c-aef2-7154a5e1fa9a"), new Guid("647c6c5f-c2b8-4e39-b5cb-5860dda100b2"), new Guid("c2804f56-758d-4677-83f7-dac3671fa0b7"));
			InvoiceItemTotalBasePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalBasePrice.IsDerived = true;
			InvoiceItemTotalBasePrice.AssociationType.ObjectType = this;

			InvoiceItemTotalBasePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalBasePrice.RoleType.AssignedSingularName = "TotalBasePrice";
			InvoiceItemTotalBasePrice.RoleType.AssignedPluralName = "TotalBasePrices";
			InvoiceItemTotalBasePrice.RoleType.Scale = 2;
			InvoiceItemTotalBasePrice.RoleType.Precision = 19;
			this.Roles.TotalBasePrice = InvoiceItemTotalBasePrice.RoleType;

			var InvoiceItemTotalSurcharge = new RelationType(AppsDomain.Instance, new Guid("1b42d64f-db5e-4c28-8234-53458f269c0a"), new Guid("11e16623-b6d5-40cf-9ea0-c4dd6b189105"), new Guid("ff7a63e0-0805-4ed5-a358-8bb87c418829"));
			InvoiceItemTotalSurcharge.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalSurcharge.IsDerived = true;
			InvoiceItemTotalSurcharge.AssociationType.ObjectType = this;

			InvoiceItemTotalSurcharge.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalSurcharge.RoleType.AssignedSingularName = "TotalSurcharge";
			InvoiceItemTotalSurcharge.RoleType.AssignedPluralName = "TotalSurcharges";
			InvoiceItemTotalSurcharge.RoleType.Scale = 2;
			InvoiceItemTotalSurcharge.RoleType.Precision = 19;
			this.Roles.TotalSurcharge = InvoiceItemTotalSurcharge.RoleType;

			var InvoiceItemTotalInvoiceAdjustment = new RelationType(AppsDomain.Instance, new Guid("1f92aed8-8a8f-4eb6-8102-83a6395788d6"), new Guid("b65ecb61-b074-47fc-aac7-74119295c827"), new Guid("e8c62a38-a856-4db6-a971-575d7971689c"));
			InvoiceItemTotalInvoiceAdjustment.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalInvoiceAdjustment.IsDerived = true;
			InvoiceItemTotalInvoiceAdjustment.AssociationType.ObjectType = this;

			InvoiceItemTotalInvoiceAdjustment.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalInvoiceAdjustment.RoleType.AssignedSingularName = "TotalInvoiceAdjustment";
			InvoiceItemTotalInvoiceAdjustment.RoleType.AssignedPluralName = "TotalInvoiceAdjustments";
			InvoiceItemTotalInvoiceAdjustment.RoleType.Scale = 2;
			InvoiceItemTotalInvoiceAdjustment.RoleType.Precision = 19;
			this.Roles.TotalInvoiceAdjustment = InvoiceItemTotalInvoiceAdjustment.RoleType;

			var InvoiceItemTotalExVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("2fe594e6-1dfe-4be5-9842-98e7e669a8c4"), new Guid("d8846b2b-476b-4396-89f3-273e6fb5c01e"), new Guid("ea7e4254-fdbb-4427-805a-0025245051ec"));
			InvoiceItemTotalExVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalExVatCustomerCurrency.IsDerived = true;
			InvoiceItemTotalExVatCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceItemTotalExVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalExVatCustomerCurrency.RoleType.AssignedSingularName = "TotalExVatCustomerCurrency";
			InvoiceItemTotalExVatCustomerCurrency.RoleType.AssignedPluralName = "TotalExVatsCustomerCurrency";
			InvoiceItemTotalExVatCustomerCurrency.RoleType.Scale = 2;
			InvoiceItemTotalExVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalExVatCustomerCurrency = InvoiceItemTotalExVatCustomerCurrency.RoleType;

			var InvoiceItemTotalDiscount = new RelationType(AppsDomain.Instance, new Guid("32587de5-c4e7-4048-b21d-d3770bda87b0"), new Guid("6d099688-2cf7-463d-bce6-44f171e6d375"), new Guid("bb0476d5-0953-43dc-a461-f19a1ae4d7c4"));
			InvoiceItemTotalDiscount.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalDiscount.IsDerived = true;
			InvoiceItemTotalDiscount.AssociationType.ObjectType = this;

			InvoiceItemTotalDiscount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalDiscount.RoleType.AssignedSingularName = "TotalDiscount";
			InvoiceItemTotalDiscount.RoleType.AssignedPluralName = "TotalDiscounts";
			InvoiceItemTotalDiscount.RoleType.Scale = 2;
			InvoiceItemTotalDiscount.RoleType.Precision = 19;
			this.Roles.TotalDiscount = InvoiceItemTotalDiscount.RoleType;

			var InvoiceItemInvoiceVatRateItem = new RelationType(AppsDomain.Instance, new Guid("33caab05-ec61-4cf9-b903-b5d5a8d7eef9"), new Guid("77489b35-b46a-4540-8359-005adbd9d1f9"), new Guid("cf9b4f4a-b867-4a47-919e-2cb90be72980"));
			InvoiceItemInvoiceVatRateItem.AssignedMultiplicity = Multiplicity.OneToMany;
			InvoiceItemInvoiceVatRateItem.IsIndexed = true;

			InvoiceItemInvoiceVatRateItem.AssociationType.ObjectType = this;

			InvoiceItemInvoiceVatRateItem.RoleType.ObjectType = InvoiceVatRateItemClass.Instance;;
			InvoiceItemInvoiceVatRateItem.RoleType.AssignedSingularName = "InvoiceVatRateItem";
			InvoiceItemInvoiceVatRateItem.RoleType.AssignedPluralName = "InvoiceVatRateItems";
			this.Roles.InvoiceVatRateItem = InvoiceItemInvoiceVatRateItem.RoleType;

			var InvoiceItemTotalDiscountAsPercentage = new RelationType(AppsDomain.Instance, new Guid("374fd832-986e-44fb-b010-5db6ecbdc29a"), new Guid("5d08d863-b624-4a39-984d-63e58a3c39e6"), new Guid("aca753e1-37e1-44a3-b709-41171ae38b9a"));
			InvoiceItemTotalDiscountAsPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalDiscountAsPercentage.AssociationType.ObjectType = this;

			InvoiceItemTotalDiscountAsPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalDiscountAsPercentage.RoleType.AssignedSingularName = "TotalDiscountAsPercentage";
			InvoiceItemTotalDiscountAsPercentage.RoleType.AssignedPluralName = "TotalDiscountsAsPercentage";
			InvoiceItemTotalDiscountAsPercentage.RoleType.Scale = 2;
			InvoiceItemTotalDiscountAsPercentage.RoleType.Precision = 19;
			this.Roles.TotalDiscountAsPercentage = InvoiceItemTotalDiscountAsPercentage.RoleType;

			var InvoiceItemCalculatedUnitPrice = new RelationType(AppsDomain.Instance, new Guid("42c5114f-7963-477d-82cf-09bfa0b194bb"), new Guid("26a8e75e-bc48-45e1-a957-fd41c813bfe3"), new Guid("033c9d78-7940-4485-844c-dedd7e40bd62"));
			InvoiceItemCalculatedUnitPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemCalculatedUnitPrice.IsDerived = true;
			InvoiceItemCalculatedUnitPrice.AssociationType.ObjectType = this;

			InvoiceItemCalculatedUnitPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemCalculatedUnitPrice.RoleType.AssignedSingularName = "CalculatedUnitPrice";
			InvoiceItemCalculatedUnitPrice.RoleType.AssignedPluralName = "CalculatedUnitPrices";
			InvoiceItemCalculatedUnitPrice.RoleType.Scale = 2;
			InvoiceItemCalculatedUnitPrice.RoleType.Precision = 19;
			this.Roles.CalculatedUnitPrice = InvoiceItemCalculatedUnitPrice.RoleType;

			var InvoiceItemUnitDiscount = new RelationType(AppsDomain.Instance, new Guid("43eeabd8-99c6-4f35-a804-0723f695db87"), new Guid("ca00444f-ae9e-4688-942c-017f46227615"), new Guid("65ffee00-11cc-44b0-8f0e-91dd4007a865"));
			InvoiceItemUnitDiscount.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemUnitDiscount.IsDerived = true;
			InvoiceItemUnitDiscount.AssociationType.ObjectType = this;

			InvoiceItemUnitDiscount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemUnitDiscount.RoleType.AssignedSingularName = "UnitDiscount";
			InvoiceItemUnitDiscount.RoleType.AssignedPluralName = "UnitDiscounts";
			InvoiceItemUnitDiscount.RoleType.Scale = 2;
			InvoiceItemUnitDiscount.RoleType.Precision = 19;
			this.Roles.UnitDiscount = InvoiceItemUnitDiscount.RoleType;

			var InvoiceItemAssignedVatRegime = new RelationType(AppsDomain.Instance, new Guid("448b5a4a-f876-48d9-9bae-c770a908997f"), new Guid("0060c405-1ed9-4f3c-be5c-bd12469ab019"), new Guid("9bd2aa77-b22e-43dc-be67-fddeb648d6c4"));
			InvoiceItemAssignedVatRegime.AssignedMultiplicity = Multiplicity.ManyToOne;
			InvoiceItemAssignedVatRegime.IsIndexed = true;

			InvoiceItemAssignedVatRegime.AssociationType.ObjectType = this;

			InvoiceItemAssignedVatRegime.RoleType.ObjectType = VatRegimeClass.Instance;;
			InvoiceItemAssignedVatRegime.RoleType.AssignedSingularName = "AssignedVatRegime";
			InvoiceItemAssignedVatRegime.RoleType.AssignedPluralName = "AssignedVatRegimes";
			this.Roles.AssignedVatRegime = InvoiceItemAssignedVatRegime.RoleType;

			var InvoiceItemTotalIncVat = new RelationType(AppsDomain.Instance, new Guid("45289923-9da5-4d4a-b07c-78ee71d30e31"), new Guid("0dc30627-9f98-4f9e-9d2c-4e09e5994c2d"), new Guid("5a7a7b07-882e-4f3f-bde7-f09c719892ec"));
			InvoiceItemTotalIncVat.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalIncVat.IsDerived = true;
			InvoiceItemTotalIncVat.AssociationType.ObjectType = this;

			InvoiceItemTotalIncVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalIncVat.RoleType.AssignedSingularName = "TotalIncVat";
			InvoiceItemTotalIncVat.RoleType.AssignedPluralName = "TotalIncVats";
			InvoiceItemTotalIncVat.RoleType.Scale = 2;
			InvoiceItemTotalIncVat.RoleType.Precision = 19;
			this.Roles.TotalIncVat = InvoiceItemTotalIncVat.RoleType;

			var InvoiceItemAdjustmentFor = new RelationType(AppsDomain.Instance, new Guid("475d7a79-27a1-4d5a-90c1-3896fa2e892e"), new Guid("ad65733c-6d3d-4e90-97d5-ca91bc4505d9"), new Guid("651b29f8-644d-4588-ac56-0d51f2068ebd"));
			InvoiceItemAdjustmentFor.AssignedMultiplicity = Multiplicity.ManyToOne;
			InvoiceItemAdjustmentFor.IsIndexed = true;

			InvoiceItemAdjustmentFor.AssociationType.ObjectType = this;

			InvoiceItemAdjustmentFor.RoleType.ObjectType = InvoiceItemInterface.Instance;;
			InvoiceItemAdjustmentFor.RoleType.AssignedSingularName = "AdjustmentFor";
			InvoiceItemAdjustmentFor.RoleType.AssignedPluralName = "AdjustmentFors";
			this.Roles.AdjustmentFor = InvoiceItemAdjustmentFor.RoleType;

			var InvoiceItemUnitBasePrice = new RelationType(AppsDomain.Instance, new Guid("5f355cb5-5156-4f76-97bc-ec153a41e9ef"), new Guid("3233b6d6-5bca-401a-ae03-77706efda65b"), new Guid("15d66771-3550-44e6-919b-2bbfbdf8b66d"));
			InvoiceItemUnitBasePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemUnitBasePrice.IsDerived = true;
			InvoiceItemUnitBasePrice.AssociationType.ObjectType = this;

			InvoiceItemUnitBasePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemUnitBasePrice.RoleType.AssignedSingularName = "UnitBasePrice";
			InvoiceItemUnitBasePrice.RoleType.AssignedPluralName = "UnitBasePrices";
			InvoiceItemUnitBasePrice.RoleType.Scale = 2;
			InvoiceItemUnitBasePrice.RoleType.Precision = 19;
			this.Roles.UnitBasePrice = InvoiceItemUnitBasePrice.RoleType;

			var InvoiceItemTotalSurchargeCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("6718d6f1-e62f-4e1f-8368-813ad6fe4417"), new Guid("83c2ab80-c364-445f-a2dc-33cbc8d88d97"), new Guid("e5b9ea20-d51b-4621-979c-238f43ce2f90"));
			InvoiceItemTotalSurchargeCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalSurchargeCustomerCurrency.IsDerived = true;
			InvoiceItemTotalSurchargeCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceItemTotalSurchargeCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalSurchargeCustomerCurrency.RoleType.AssignedSingularName = "TotalSurchargeCustomerCurrency";
			InvoiceItemTotalSurchargeCustomerCurrency.RoleType.AssignedPluralName = "TotalSurchargesCustomerCurrency";
			InvoiceItemTotalSurchargeCustomerCurrency.RoleType.Scale = 2;
			InvoiceItemTotalSurchargeCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalSurchargeCustomerCurrency = InvoiceItemTotalSurchargeCustomerCurrency.RoleType;

			var InvoiceItemSerializedInventoryItem = new RelationType(AppsDomain.Instance, new Guid("6df95cf4-115f-4f43-aaea-52313c47d824"), new Guid("93ba1265-4050-41c1-aaf8-d09786889245"), new Guid("0abd9811-a8ac-42bf-9113-4f9760cfe9eb"));
			InvoiceItemSerializedInventoryItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			InvoiceItemSerializedInventoryItem.IsIndexed = true;

			InvoiceItemSerializedInventoryItem.AssociationType.ObjectType = this;

			InvoiceItemSerializedInventoryItem.RoleType.ObjectType = SerializedInventoryItemClass.Instance;;
			InvoiceItemSerializedInventoryItem.RoleType.AssignedSingularName = "SerializedInventoryItem";
			InvoiceItemSerializedInventoryItem.RoleType.AssignedPluralName = "SerializedInventoryItems";
			this.Roles.SerializedInventoryItem = InvoiceItemSerializedInventoryItem.RoleType;

			var InvoiceItemCurrentPriceComponent = new RelationType(AppsDomain.Instance, new Guid("6dfc7def-6790-4841-90db-c37a431593ec"), new Guid("27f066ba-c894-4ced-9c3f-8af137d0ffb4"), new Guid("88d55469-1e0c-4dc8-83a7-ce0a48d9c9d9"));
			InvoiceItemCurrentPriceComponent.AssignedMultiplicity = Multiplicity.ManyToMany;
			InvoiceItemCurrentPriceComponent.IsDerived = true;
			InvoiceItemCurrentPriceComponent.IsIndexed = true;

			InvoiceItemCurrentPriceComponent.AssociationType.ObjectType = this;

			InvoiceItemCurrentPriceComponent.RoleType.ObjectType = PriceComponentInterface.Instance;;
			InvoiceItemCurrentPriceComponent.RoleType.AssignedSingularName = "CurrentPriceComponent";
			InvoiceItemCurrentPriceComponent.RoleType.AssignedPluralName = "CurrentPriceComponents";
			this.Roles.CurrentPriceComponent = InvoiceItemCurrentPriceComponent.RoleType;

			var InvoiceItemDiscountAdjustment = new RelationType(AppsDomain.Instance, new Guid("741d7629-aa2f-45f9-b66c-4ab8abf07518"), new Guid("c2f98a95-6577-403a-bb7e-5e3f158fe11b"), new Guid("90e76224-e139-436d-a998-0dc24709e52e"));
			InvoiceItemDiscountAdjustment.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemDiscountAdjustment.IsIndexed = true;

			InvoiceItemDiscountAdjustment.AssociationType.ObjectType = this;

			InvoiceItemDiscountAdjustment.RoleType.ObjectType = DiscountAdjustmentClass.Instance;;
			InvoiceItemDiscountAdjustment.RoleType.AssignedSingularName = "DiscountAdjustment";
			InvoiceItemDiscountAdjustment.RoleType.AssignedPluralName = "DiscountAdjustments";
			this.Roles.DiscountAdjustment = InvoiceItemDiscountAdjustment.RoleType;

			var InvoiceItemActualUnitPrice = new RelationType(AppsDomain.Instance, new Guid("7d3a259d-c27f-45d4-96f1-3a43a0e5043f"), new Guid("cafd1700-a59e-4278-90a5-cb387f413b8f"), new Guid("721f302f-94eb-4ccd-b688-d13383d21571"));
			InvoiceItemActualUnitPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemActualUnitPrice.AssociationType.ObjectType = this;

			InvoiceItemActualUnitPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemActualUnitPrice.RoleType.AssignedSingularName = "ActualUnitPrice";
			InvoiceItemActualUnitPrice.RoleType.AssignedPluralName = "ActualUnitPrices";
			InvoiceItemActualUnitPrice.RoleType.Scale = 2;
			InvoiceItemActualUnitPrice.RoleType.Precision = 19;
			this.Roles.ActualUnitPrice = InvoiceItemActualUnitPrice.RoleType;

			var InvoiceItemMessage = new RelationType(AppsDomain.Instance, new Guid("7eed800d-c2b5-4837-a288-150803578b27"), new Guid("9dbf4d82-0d36-42a0-81a7-49f59e5cd226"), new Guid("f3b11549-8cf9-4ade-8465-111536b00171"));
			InvoiceItemMessage.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemMessage.AssociationType.ObjectType = this;

			InvoiceItemMessage.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InvoiceItemMessage.RoleType.AssignedSingularName = "Message";
			InvoiceItemMessage.RoleType.AssignedPluralName = "Messages";
			InvoiceItemMessage.RoleType.Size = -1;
			this.Roles.Message = InvoiceItemMessage.RoleType;

			var InvoiceItemTotalInvoiceAdjustmentCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("8696b970-07e7-4d04-aec5-d42bcd47ce72"), new Guid("ad3bd0d4-12c1-4994-abaa-c47dc0d17a7a"), new Guid("245ad362-41b4-4fa9-91a6-b52329215d13"));
			InvoiceItemTotalInvoiceAdjustmentCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalInvoiceAdjustmentCustomerCurrency.IsDerived = true;
			InvoiceItemTotalInvoiceAdjustmentCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceItemTotalInvoiceAdjustmentCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalInvoiceAdjustmentCustomerCurrency.RoleType.AssignedSingularName = "TotalInvoiceAdjustmentCustomerCurrency";
			InvoiceItemTotalInvoiceAdjustmentCustomerCurrency.RoleType.AssignedPluralName = "TotalInvoiceAdjustmentsCustomerCurrency";
			InvoiceItemTotalInvoiceAdjustmentCustomerCurrency.RoleType.Scale = 2;
			InvoiceItemTotalInvoiceAdjustmentCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalInvoiceAdjustmentCustomerCurrency = InvoiceItemTotalInvoiceAdjustmentCustomerCurrency.RoleType;

			var InvoiceItemAmountPaid = new RelationType(AppsDomain.Instance, new Guid("8fd19791-85ed-44c9-8580-a6768578ca3a"), new Guid("72e1379d-a9c3-41d5-8ae4-a9a82c88ad01"), new Guid("1ca3573f-812f-41ca-a5e8-ec13ea6168aa"));
			InvoiceItemAmountPaid.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemAmountPaid.IsDerived = true;
			InvoiceItemAmountPaid.AssociationType.ObjectType = this;

			InvoiceItemAmountPaid.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemAmountPaid.RoleType.AssignedSingularName = "AmountPaid";
			InvoiceItemAmountPaid.RoleType.AssignedPluralName = "AmountPaids";
			InvoiceItemAmountPaid.RoleType.Scale = 2;
			InvoiceItemAmountPaid.RoleType.Precision = 19;
			this.Roles.AmountPaid = InvoiceItemAmountPaid.RoleType;

			var InvoiceItemDerivedVatRate = new RelationType(AppsDomain.Instance, new Guid("93e0e781-4755-4cd4-aeff-bff905d6e99b"), new Guid("6f45d5e3-ef25-45ea-9f31-11fc6a480c6c"), new Guid("0f3e4887-e43f-4b51-86ee-c4f474de2d7a"));
			InvoiceItemDerivedVatRate.AssignedMultiplicity = Multiplicity.ManyToOne;
			InvoiceItemDerivedVatRate.IsDerived = true;
			InvoiceItemDerivedVatRate.IsIndexed = true;

			InvoiceItemDerivedVatRate.AssociationType.ObjectType = this;

			InvoiceItemDerivedVatRate.RoleType.ObjectType = VatRateClass.Instance;;
			InvoiceItemDerivedVatRate.RoleType.AssignedSingularName = "DerivedVatRate";
			InvoiceItemDerivedVatRate.RoleType.AssignedPluralName = "DerivedVatRates";
			this.Roles.DerivedVatRate = InvoiceItemDerivedVatRate.RoleType;

			var InvoiceItemTotalDiscountCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("b114b874-9e68-4451-b3f1-c5aa7a139a02"), new Guid("4f22e0be-bdcb-496e-b7e5-77c21d1c90df"), new Guid("5bfd82d4-0d28-4382-8447-a72fec2fa8a2"));
			InvoiceItemTotalDiscountCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalDiscountCustomerCurrency.IsDerived = true;
			InvoiceItemTotalDiscountCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceItemTotalDiscountCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalDiscountCustomerCurrency.RoleType.AssignedSingularName = "TotalDiscountCustomerCurrency";
			InvoiceItemTotalDiscountCustomerCurrency.RoleType.AssignedPluralName = "TotalDiscountsCustomerCurrency";
			InvoiceItemTotalDiscountCustomerCurrency.RoleType.Scale = 2;
			InvoiceItemTotalDiscountCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalDiscountCustomerCurrency = InvoiceItemTotalDiscountCustomerCurrency.RoleType;

			var InvoiceItemUnitSurcharge = new RelationType(AppsDomain.Instance, new Guid("b20c5190-65f8-4d71-a3f1-30da9b41173a"), new Guid("5fc0c0b2-4fcc-4f94-853e-eef98f404c28"), new Guid("c85bb656-2979-4144-b56a-cb97005e6de9"));
			InvoiceItemUnitSurcharge.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemUnitSurcharge.IsDerived = true;
			InvoiceItemUnitSurcharge.AssociationType.ObjectType = this;

			InvoiceItemUnitSurcharge.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemUnitSurcharge.RoleType.AssignedSingularName = "UnitSurcharge";
			InvoiceItemUnitSurcharge.RoleType.AssignedPluralName = "UnitSurcharges";
			InvoiceItemUnitSurcharge.RoleType.Scale = 2;
			InvoiceItemUnitSurcharge.RoleType.Precision = 19;
			this.Roles.UnitSurcharge = InvoiceItemUnitSurcharge.RoleType;

			var InvoiceItemTotalExVat = new RelationType(AppsDomain.Instance, new Guid("b3f7be6a-2374-40e3-98e1-095b0117847e"), new Guid("6c6cffda-dc95-437e-90dc-f98ce86e4fdc"), new Guid("c056df57-dd5b-40f2-8032-ef58f4ec3f7d"));
			InvoiceItemTotalExVat.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalExVat.IsDerived = true;
			InvoiceItemTotalExVat.AssociationType.ObjectType = this;

			InvoiceItemTotalExVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalExVat.RoleType.AssignedSingularName = "TotalExVat";
			InvoiceItemTotalExVat.RoleType.AssignedPluralName = "TotalExVats";
			InvoiceItemTotalExVat.RoleType.Scale = 2;
			InvoiceItemTotalExVat.RoleType.Precision = 19;
			this.Roles.TotalExVat = InvoiceItemTotalExVat.RoleType;

			var InvoiceItemQuantity = new RelationType(AppsDomain.Instance, new Guid("ba90acfe-0d55-4854-a046-35279f872e0b"), new Guid("d231d38a-2e1e-4e21-8622-d5b30199f857"), new Guid("b525a1c4-5f1f-402f-9f40-105e711bf45d"));
			InvoiceItemQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemQuantity.AssociationType.ObjectType = this;

			InvoiceItemQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemQuantity.RoleType.AssignedSingularName = "Quantity";
			InvoiceItemQuantity.RoleType.AssignedPluralName = "Quantities";
			InvoiceItemQuantity.RoleType.Scale = 2;
			InvoiceItemQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = InvoiceItemQuantity.RoleType;

			var InvoiceItemTotalSurchargeAsPercentage = new RelationType(AppsDomain.Instance, new Guid("c540c7fe-924d-4616-a49a-515ac65c4cf7"), new Guid("08276c02-e869-40e9-a99d-63448f6c94fb"), new Guid("71bd0f31-0867-4391-a45d-a8684d50d772"));
			InvoiceItemTotalSurchargeAsPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalSurchargeAsPercentage.AssociationType.ObjectType = this;

			InvoiceItemTotalSurchargeAsPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalSurchargeAsPercentage.RoleType.AssignedSingularName = "TotalSurchargeAsPercentage";
			InvoiceItemTotalSurchargeAsPercentage.RoleType.AssignedPluralName = "TotalSurchargesAsPercentage";
			InvoiceItemTotalSurchargeAsPercentage.RoleType.Scale = 2;
			InvoiceItemTotalSurchargeAsPercentage.RoleType.Precision = 19;
			this.Roles.TotalSurchargeAsPercentage = InvoiceItemTotalSurchargeAsPercentage.RoleType;

			var InvoiceItemVatRegime = new RelationType(AppsDomain.Instance, new Guid("cccc995c-1478-4145-ba90-ace3ae7ba184"), new Guid("d479cadc-2f62-4d56-8e82-96c2b3166b4e"), new Guid("9258d1fc-7788-46f2-baf0-5eff2443fd53"));
			InvoiceItemVatRegime.AssignedMultiplicity = Multiplicity.ManyToOne;
			InvoiceItemVatRegime.IsDerived = true;
			InvoiceItemVatRegime.IsIndexed = true;

			InvoiceItemVatRegime.AssociationType.ObjectType = this;

			InvoiceItemVatRegime.RoleType.ObjectType = VatRegimeClass.Instance;;
			InvoiceItemVatRegime.RoleType.AssignedSingularName = "VatRegime";
			InvoiceItemVatRegime.RoleType.AssignedPluralName = "VatRegimes";
			this.Roles.VatRegime = InvoiceItemVatRegime.RoleType;

			var InvoiceItemTotalBasePriceCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("d4144a78-f466-44e9-a62f-d84bcdf22b0f"), new Guid("ac68b612-25dc-4ab9-81a2-06c36cc42bed"), new Guid("67073f7a-6888-40e0-adf5-c4938a966a06"));
			InvoiceItemTotalBasePriceCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalBasePriceCustomerCurrency.IsDerived = true;
			InvoiceItemTotalBasePriceCustomerCurrency.AssociationType.ObjectType = this;

			InvoiceItemTotalBasePriceCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalBasePriceCustomerCurrency.RoleType.AssignedSingularName = "TotalBasePriceCustomerCurrency";
			InvoiceItemTotalBasePriceCustomerCurrency.RoleType.AssignedPluralName = "TotalBasePricesCustomerCurrency";
			InvoiceItemTotalBasePriceCustomerCurrency.RoleType.Scale = 2;
			InvoiceItemTotalBasePriceCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalBasePriceCustomerCurrency = InvoiceItemTotalBasePriceCustomerCurrency.RoleType;

			var InvoiceItemTotalVat = new RelationType(AppsDomain.Instance, new Guid("e30596f0-7c79-4d13-b1d6-26e4fd1f55f2"), new Guid("74658b67-6e2d-4c80-b745-35af0f3f8654"), new Guid("00bae3ee-3825-414b-ad25-595b9ed469f9"));
			InvoiceItemTotalVat.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemTotalVat.IsDerived = true;
			InvoiceItemTotalVat.AssociationType.ObjectType = this;

			InvoiceItemTotalVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemTotalVat.RoleType.AssignedSingularName = "TotalVat";
			InvoiceItemTotalVat.RoleType.AssignedPluralName = "TotalVats";
			InvoiceItemTotalVat.RoleType.Scale = 2;
			InvoiceItemTotalVat.RoleType.Precision = 19;
			this.Roles.TotalVat = InvoiceItemTotalVat.RoleType;

			var InvoiceItemSurchargeAdjustment = new RelationType(AppsDomain.Instance, new Guid("e52e9b0a-4772-465a-bab7-c79372d7000a"), new Guid("6e45a92d-491d-491d-9a28-ee1421a87aaa"), new Guid("4b9e3dd2-09a5-47a3-be48-8bdbe5a5ca7f"));
			InvoiceItemSurchargeAdjustment.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemSurchargeAdjustment.IsIndexed = true;

			InvoiceItemSurchargeAdjustment.AssociationType.ObjectType = this;

			InvoiceItemSurchargeAdjustment.RoleType.ObjectType = SurchargeAdjustmentClass.Instance;;
			InvoiceItemSurchargeAdjustment.RoleType.AssignedSingularName = "SurchargeAdjustment";
			InvoiceItemSurchargeAdjustment.RoleType.AssignedPluralName = "SurchargeAdjustments";
			this.Roles.SurchargeAdjustment = InvoiceItemSurchargeAdjustment.RoleType;

			var InvoiceItemUnitVat = new RelationType(AppsDomain.Instance, new Guid("e7a24fa8-f664-4cf0-a392-8b7827a7f537"), new Guid("ffc4548d-098f-4aa2-8343-309c39583875"), new Guid("8bcba64b-9745-4d98-8f60-f3ce548acd03"));
			InvoiceItemUnitVat.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemUnitVat.IsDerived = true;
			InvoiceItemUnitVat.AssociationType.ObjectType = this;

			InvoiceItemUnitVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			InvoiceItemUnitVat.RoleType.AssignedSingularName = "UnitVat";
			InvoiceItemUnitVat.RoleType.AssignedPluralName = "UnitVats";
			InvoiceItemUnitVat.RoleType.Scale = 2;
			InvoiceItemUnitVat.RoleType.Precision = 19;
			this.Roles.UnitVat = InvoiceItemUnitVat.RoleType;

			var InvoiceItemDescription = new RelationType(AppsDomain.Instance, new Guid("fb202916-1a87-439e-b2d8-b3f3ed4f681a"), new Guid("13dda3fd-6011-4876-9860-158d86024dbd"), new Guid("50ab8ac2-daca-4e66-861d-4134fcaa0e98"));
			InvoiceItemDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			InvoiceItemDescription.AssociationType.ObjectType = this;

			InvoiceItemDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			InvoiceItemDescription.RoleType.AssignedSingularName = "Description";
			InvoiceItemDescription.RoleType.AssignedPluralName = "Descriptions";
			InvoiceItemDescription.RoleType.Size = 256;
			this.Roles.Description = InvoiceItemDescription.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalIncVatCustomerCurrency = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVatCustomerCurrency]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalIncVatCustomerCurrency = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVatCustomerCurrency]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.InvoiceTerm = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceTerm]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.InvoiceTerm = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceTerm]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalVatCustomerCurrency = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVatCustomerCurrency]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalVatCustomerCurrency = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVatCustomerCurrency]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalBasePrice = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePrice]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalBasePrice = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePrice]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalSurcharge = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurcharge]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalSurcharge = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurcharge]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalInvoiceAdjustment = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalInvoiceAdjustment]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalInvoiceAdjustment = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalInvoiceAdjustment]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalExVatCustomerCurrency = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVatCustomerCurrency]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalExVatCustomerCurrency = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVatCustomerCurrency]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalDiscount = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscount]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalDiscount = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscount]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.InvoiceVatRateItem = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceVatRateItem]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.InvoiceVatRateItem = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InvoiceVatRateItem]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalDiscountAsPercentage = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountAsPercentage]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalDiscountAsPercentage = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountAsPercentage]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.CalculatedUnitPrice = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CalculatedUnitPrice]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.CalculatedUnitPrice = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CalculatedUnitPrice]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.UnitDiscount = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitDiscount]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.UnitDiscount = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitDiscount]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.AssignedVatRegime = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssignedVatRegime]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.AssignedVatRegime = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssignedVatRegime]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalIncVat = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVat]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalIncVat = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVat]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.AdjustmentFor = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AdjustmentFor]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.AdjustmentFor = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AdjustmentFor]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.UnitBasePrice = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitBasePrice]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.UnitBasePrice = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitBasePrice]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalSurchargeCustomerCurrency = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeCustomerCurrency]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalSurchargeCustomerCurrency = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeCustomerCurrency]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.SerializedInventoryItem = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SerializedInventoryItem]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.SerializedInventoryItem = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SerializedInventoryItem]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.CurrentPriceComponent = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPriceComponent]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.CurrentPriceComponent = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPriceComponent]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.DiscountAdjustment = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DiscountAdjustment]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.DiscountAdjustment = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DiscountAdjustment]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.ActualUnitPrice = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualUnitPrice]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.ActualUnitPrice = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualUnitPrice]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.Message = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Message]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.Message = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Message]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalInvoiceAdjustmentCustomerCurrency = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalInvoiceAdjustmentCustomerCurrency]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalInvoiceAdjustmentCustomerCurrency = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalInvoiceAdjustmentCustomerCurrency]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.AmountPaid = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AmountPaid]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.AmountPaid = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AmountPaid]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.DerivedVatRate = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedVatRate]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.DerivedVatRate = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedVatRate]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalDiscountCustomerCurrency = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountCustomerCurrency]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalDiscountCustomerCurrency = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountCustomerCurrency]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.UnitSurcharge = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitSurcharge]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.UnitSurcharge = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitSurcharge]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalExVat = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVat]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalExVat = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVat]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.Quantity = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.Quantity = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalSurchargeAsPercentage = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeAsPercentage]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalSurchargeAsPercentage = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeAsPercentage]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.VatRegime = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.VatRegime = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalBasePriceCustomerCurrency = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePriceCustomerCurrency]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalBasePriceCustomerCurrency = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePriceCustomerCurrency]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.TotalVat = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVat]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.TotalVat = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVat]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.SurchargeAdjustment = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SurchargeAdjustment]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.SurchargeAdjustment = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SurchargeAdjustment]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.UnitVat = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitVat]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.UnitVat = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitVat]; 

			PurchaseInvoiceItemClass.Instance.ConcreteRoles.Description = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.Description = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 


		}

		internal class RolesType
		{
			internal RoleType TotalIncVatCustomerCurrency;
			internal RoleType InvoiceTerm;
			internal RoleType TotalVatCustomerCurrency;
			internal RoleType TotalBasePrice;
			internal RoleType TotalSurcharge;
			internal RoleType TotalInvoiceAdjustment;
			internal RoleType TotalExVatCustomerCurrency;
			internal RoleType TotalDiscount;
			internal RoleType InvoiceVatRateItem;
			internal RoleType TotalDiscountAsPercentage;
			internal RoleType CalculatedUnitPrice;
			internal RoleType UnitDiscount;
			internal RoleType AssignedVatRegime;
			internal RoleType TotalIncVat;
			internal RoleType AdjustmentFor;
			internal RoleType UnitBasePrice;
			internal RoleType TotalSurchargeCustomerCurrency;
			internal RoleType SerializedInventoryItem;
			internal RoleType CurrentPriceComponent;
			internal RoleType DiscountAdjustment;
			internal RoleType ActualUnitPrice;
			internal RoleType Message;
			internal RoleType TotalInvoiceAdjustmentCustomerCurrency;
			internal RoleType AmountPaid;
			internal RoleType DerivedVatRate;
			internal RoleType TotalDiscountCustomerCurrency;
			internal RoleType UnitSurcharge;
			internal RoleType TotalExVat;
			internal RoleType Quantity;
			internal RoleType TotalSurchargeAsPercentage;
			internal RoleType VatRegime;
			internal RoleType TotalBasePriceCustomerCurrency;
			internal RoleType TotalVat;
			internal RoleType SurchargeAdjustment;
			internal RoleType UnitVat;
			internal RoleType Description;

		}
	}public partial class StoreClass : Class
	{
		public static StoreClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal StoreClass() : base(AppsDomain.Instance, new Guid("d8611e48-b0ba-4037-a992-09e3e26c6d5d"))
        {
			this.SingularName = "Store";
			this.PluralName = "Stores";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7372e836-6f57-4821-8aea-8ac6baefb407"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ef4d3d8b-b865-4afc-b8a3-5a27eba9c3a7"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var StoreShipmentThreshold = new RelationType(AppsDomain.Instance, new Guid("0a0ad3b1-afa2-4c78-8414-e657fabebb3e"), new Guid("c460c53b-1460-4bc2-8390-98e9c1492b71"), new Guid("06502486-41cb-4840-856e-7d44c0038375"));
			StoreShipmentThreshold.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreShipmentThreshold.AssociationType.ObjectType = this;

			StoreShipmentThreshold.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			StoreShipmentThreshold.RoleType.AssignedSingularName = "ShipmentThreshold";
			StoreShipmentThreshold.RoleType.AssignedPluralName = "ShipmentThreshold";
			StoreShipmentThreshold.RoleType.Scale = 2;
			StoreShipmentThreshold.RoleType.Precision = 19;
			this.Roles.ShipmentThreshold = StoreShipmentThreshold.RoleType;

			var StoreSalesOrderCounter = new RelationType(AppsDomain.Instance, new Guid("124a58f1-f7a3-43d1-8f4d-0a068b7a2659"), new Guid("87a6b9dd-5c38-4b79-a0e4-75e6777f5207"), new Guid("5725c16f-b079-4435-a347-660fe9de7223"));
			StoreSalesOrderCounter.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreSalesOrderCounter.IsIndexed = true;

			StoreSalesOrderCounter.AssociationType.ObjectType = this;

			StoreSalesOrderCounter.RoleType.ObjectType = CounterClass.Instance;;
			StoreSalesOrderCounter.RoleType.AssignedSingularName = "SalesOrderCounter";
			StoreSalesOrderCounter.RoleType.AssignedPluralName = "SalesOrderCounters";
			this.Roles.SalesOrderCounter = StoreSalesOrderCounter.RoleType;

			var StoreSalesInvoiceTemplate = new RelationType(AppsDomain.Instance, new Guid("190d2363-affa-4a4b-8662-d8b566c506d6"), new Guid("76194162-1ef0-45f0-8804-2183f42e0e17"), new Guid("b4d8f605-9a66-468d-b9a0-f2157e8528b7"));
			StoreSalesInvoiceTemplate.AssignedMultiplicity = Multiplicity.ManyToMany;
			StoreSalesInvoiceTemplate.IsIndexed = true;

			StoreSalesInvoiceTemplate.AssociationType.ObjectType = this;

			StoreSalesInvoiceTemplate.RoleType.ObjectType = StringTemplateClass.Instance;;
			StoreSalesInvoiceTemplate.RoleType.AssignedSingularName = "SalesInvoiceTemplate";
			StoreSalesInvoiceTemplate.RoleType.AssignedPluralName = "SalesInvoiceTemplates";
			this.Roles.SalesInvoiceTemplate = StoreSalesInvoiceTemplate.RoleType;

			var StoreOutgoingShipmentNumberPrefix = new RelationType(AppsDomain.Instance, new Guid("3a837bae-993a-4765-8d4f-b690bf65dc79"), new Guid("0304eacc-65bc-475d-9a82-00b0cdb233ad"), new Guid("21c8c056-2997-4f75-82db-597e258dceb6"));
			StoreOutgoingShipmentNumberPrefix.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreOutgoingShipmentNumberPrefix.AssociationType.ObjectType = this;

			StoreOutgoingShipmentNumberPrefix.RoleType.ObjectType = AllorsStringUnit.Instance;;
			StoreOutgoingShipmentNumberPrefix.RoleType.AssignedSingularName = "OutgoingShipmentNumberPrefix";
			StoreOutgoingShipmentNumberPrefix.RoleType.AssignedPluralName = "OutgoingShipmentNumberPrefixes";
			StoreOutgoingShipmentNumberPrefix.RoleType.Size = 256;
			this.Roles.OutgoingShipmentNumberPrefix = StoreOutgoingShipmentNumberPrefix.RoleType;

			var StoreSalesInvoiceNumberPrefix = new RelationType(AppsDomain.Instance, new Guid("3e378f04-0d14-4b03-b8e2-b58da3039184"), new Guid("b4f8b63a-d4c6-4a40-a603-84c4225f02ed"), new Guid("3a00ec26-a46e-4262-aed0-56cb25abf2b1"));
			StoreSalesInvoiceNumberPrefix.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreSalesInvoiceNumberPrefix.AssociationType.ObjectType = this;

			StoreSalesInvoiceNumberPrefix.RoleType.ObjectType = AllorsStringUnit.Instance;;
			StoreSalesInvoiceNumberPrefix.RoleType.AssignedSingularName = "SalesInvoiceNumberPrefix";
			StoreSalesInvoiceNumberPrefix.RoleType.AssignedPluralName = "SalesInvoiceNumberPrefixes";
			StoreSalesInvoiceNumberPrefix.RoleType.Size = 256;
			this.Roles.SalesInvoiceNumberPrefix = StoreSalesInvoiceNumberPrefix.RoleType;

			var StorePaymentGracePeriod = new RelationType(AppsDomain.Instance, new Guid("4927a65d-a9d3-4fad-afce-1ec8679d3a55"), new Guid("e2dc511c-86b0-46fe-b5cf-680dfe012f47"), new Guid("f18df944-920c-474a-ac8e-2e10b460c522"));
			StorePaymentGracePeriod.AssignedMultiplicity = Multiplicity.OneToOne;
			StorePaymentGracePeriod.AssociationType.ObjectType = this;

			StorePaymentGracePeriod.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			StorePaymentGracePeriod.RoleType.AssignedSingularName = "PaymentGracePeriod";
			StorePaymentGracePeriod.RoleType.AssignedPluralName = "PaymentGracePeriods";
			this.Roles.PaymentGracePeriod = StorePaymentGracePeriod.RoleType;

			var StoreLogoImage = new RelationType(AppsDomain.Instance, new Guid("4a647ddb-9a17-4544-8cae-6204140c413a"), new Guid("d657040d-138b-4f6f-9dc7-547448a1fd11"), new Guid("93cab392-5d64-4270-9e5d-ac3a62dcde4d"));
			StoreLogoImage.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreLogoImage.IsIndexed = true;

			StoreLogoImage.AssociationType.ObjectType = this;

			StoreLogoImage.RoleType.ObjectType = MediaClass.Instance;;
			StoreLogoImage.RoleType.AssignedSingularName = "LogoImage";
			StoreLogoImage.RoleType.AssignedPluralName = "LogoImages";
			this.Roles.LogoImage = StoreLogoImage.RoleType;

			var StorePaymentNetDays = new RelationType(AppsDomain.Instance, new Guid("555c3b9a-7556-4fdf-a431-6d18a6ae7cbd"), new Guid("b3625e45-4568-4030-85cc-565f77ccc1a1"), new Guid("5bda243d-b0c9-47bd-9d33-9fd3723512b9"));
			StorePaymentNetDays.AssignedMultiplicity = Multiplicity.OneToOne;
			StorePaymentNetDays.AssociationType.ObjectType = this;

			StorePaymentNetDays.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			StorePaymentNetDays.RoleType.AssignedSingularName = "PaymentNetDays";
			StorePaymentNetDays.RoleType.AssignedPluralName = "PaymentsNetDays";
			this.Roles.PaymentNetDays = StorePaymentNetDays.RoleType;

			var StoreDefaultFacility = new RelationType(AppsDomain.Instance, new Guid("63d433b9-8cb3-428b-b516-be25f1895673"), new Guid("273cfb27-2698-469b-91ab-24901a4df9fd"), new Guid("67f48e4c-6e56-47c8-a87f-47160453ece6"));
			StoreDefaultFacility.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreDefaultFacility.IsIndexed = true;

			StoreDefaultFacility.AssociationType.ObjectType = this;

			StoreDefaultFacility.RoleType.ObjectType = FacilityInterface.Instance;;
			StoreDefaultFacility.RoleType.AssignedSingularName = "DefaultFacility";
			StoreDefaultFacility.RoleType.AssignedPluralName = "DefaultFacilities";
			this.Roles.DefaultFacility = StoreDefaultFacility.RoleType;

			var StoreName = new RelationType(AppsDomain.Instance, new Guid("6e4b701a-2540-4cec-8413-50bfb69d3a7c"), new Guid("2a1d8fe1-51af-4747-b6e4-7c2532e5fa8c"), new Guid("2bcd6952-16c1-4153-a23c-6e58fae6a49c"));
			StoreName.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreName.AssociationType.ObjectType = this;

			StoreName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			StoreName.RoleType.AssignedSingularName = "Name";
			StoreName.RoleType.AssignedPluralName = "Name";
			StoreName.RoleType.Size = 256;
			this.Roles.Name = StoreName.RoleType;

			var StoreSalesOrderTemplate = new RelationType(AppsDomain.Instance, new Guid("72ea05f1-a631-4dec-a568-1307e380d41f"), new Guid("3799c587-25f3-4d18-a671-2d2301dae0df"), new Guid("c6bb5b3c-c599-427d-9c42-dc1966f11ce5"));
			StoreSalesOrderTemplate.AssignedMultiplicity = Multiplicity.ManyToMany;
			StoreSalesOrderTemplate.IsIndexed = true;

			StoreSalesOrderTemplate.AssociationType.ObjectType = this;

			StoreSalesOrderTemplate.RoleType.ObjectType = StringTemplateClass.Instance;;
			StoreSalesOrderTemplate.RoleType.AssignedSingularName = "SalesOrderTemplate";
			StoreSalesOrderTemplate.RoleType.AssignedPluralName = "SalesOrderTemplates";
			this.Roles.SalesOrderTemplate = StoreSalesOrderTemplate.RoleType;

			var StoreCreditLimit = new RelationType(AppsDomain.Instance, new Guid("79244ed7-6388-48ca-86db-7b57a64fe680"), new Guid("5d145726-fa9e-46f9-b389-7f8380e0088c"), new Guid("1df01d8b-9d72-495c-baae-0f5ea4c9e76c"));
			StoreCreditLimit.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreCreditLimit.AssociationType.ObjectType = this;

			StoreCreditLimit.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			StoreCreditLimit.RoleType.AssignedSingularName = "CreditLimit";
			StoreCreditLimit.RoleType.AssignedPluralName = "CreditLimits";
			StoreCreditLimit.RoleType.Scale = 2;
			StoreCreditLimit.RoleType.Precision = 19;
			this.Roles.CreditLimit = StoreCreditLimit.RoleType;

			var StoreDefaultShipmentMethod = new RelationType(AppsDomain.Instance, new Guid("7c9cda07-5920-4037-b934-5b74355c4b85"), new Guid("0da06b1f-12ce-43d1-9e21-82e506ce7750"), new Guid("f1c26a78-d986-4fcc-ac55-3658783790ef"));
			StoreDefaultShipmentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreDefaultShipmentMethod.IsIndexed = true;

			StoreDefaultShipmentMethod.AssociationType.ObjectType = this;

			StoreDefaultShipmentMethod.RoleType.ObjectType = ShipmentMethodClass.Instance;;
			StoreDefaultShipmentMethod.RoleType.AssignedSingularName = "DefaultShipmentMethod";
			StoreDefaultShipmentMethod.RoleType.AssignedPluralName = "DefaultShipmentMethods";
			this.Roles.DefaultShipmentMethod = StoreDefaultShipmentMethod.RoleType;

			var StoreDefaultCarrier = new RelationType(AppsDomain.Instance, new Guid("80670a7a-1be8-4407-917e-fa359e632519"), new Guid("dcd8b2e0-7490-40e4-ae4b-d1b0c0be0527"), new Guid("72993b04-4c10-4467-9d99-064e1b39f9e2"));
			StoreDefaultCarrier.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreDefaultCarrier.IsIndexed = true;

			StoreDefaultCarrier.AssociationType.ObjectType = this;

			StoreDefaultCarrier.RoleType.ObjectType = CarrierClass.Instance;;
			StoreDefaultCarrier.RoleType.AssignedSingularName = "DefaultCarrier";
			StoreDefaultCarrier.RoleType.AssignedPluralName = "DefaultCarriers";
			this.Roles.DefaultCarrier = StoreDefaultCarrier.RoleType;

			var StoreSalesInvoiceCounter = new RelationType(AppsDomain.Instance, new Guid("8a3d0121-e5f9-4bc9-a829-340e1b4b5402"), new Guid("d92f46c9-07aa-4be9-b0ab-36d66b24ae5e"), new Guid("7d03bd42-e0fa-4053-bf9c-c45b06fcff97"));
			StoreSalesInvoiceCounter.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreSalesInvoiceCounter.IsIndexed = true;

			StoreSalesInvoiceCounter.AssociationType.ObjectType = this;

			StoreSalesInvoiceCounter.RoleType.ObjectType = CounterClass.Instance;;
			StoreSalesInvoiceCounter.RoleType.AssignedSingularName = "SalesInvoiceCounter";
			StoreSalesInvoiceCounter.RoleType.AssignedPluralName = "SalesInvoiceCounters";
			this.Roles.SalesInvoiceCounter = StoreSalesInvoiceCounter.RoleType;

			var StoreOrderThreshold = new RelationType(AppsDomain.Instance, new Guid("954d4e3c-f188-45f4-98b8-ece14ac7dabd"), new Guid("a08d71c8-6aa1-4ae3-bccc-a8078bd51071"), new Guid("92f5fc7a-eabe-4710-b1fe-aa35e7fd1606"));
			StoreOrderThreshold.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreOrderThreshold.AssociationType.ObjectType = this;

			StoreOrderThreshold.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			StoreOrderThreshold.RoleType.AssignedSingularName = "OrderThreshold";
			StoreOrderThreshold.RoleType.AssignedPluralName = "OrdersThreshold";
			StoreOrderThreshold.RoleType.Scale = 2;
			StoreOrderThreshold.RoleType.Precision = 19;
			this.Roles.OrderThreshold = StoreOrderThreshold.RoleType;

			var StoreDefaultPaymentMethod = new RelationType(AppsDomain.Instance, new Guid("9a0dfe33-016a-4b41-979c-d17a6f87d2d2"), new Guid("a6741bcc-527d-4cbe-bd1e-fc881fd30951"), new Guid("611edb41-213f-4ade-8ea5-a512b99ee9b6"));
			StoreDefaultPaymentMethod.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreDefaultPaymentMethod.IsIndexed = true;

			StoreDefaultPaymentMethod.AssociationType.ObjectType = this;

			StoreDefaultPaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			StoreDefaultPaymentMethod.RoleType.AssignedSingularName = "DefaultPaymentMethod";
			StoreDefaultPaymentMethod.RoleType.AssignedPluralName = "DefaultPaymentMethods";
			this.Roles.DefaultPaymentMethod = StoreDefaultPaymentMethod.RoleType;

			var StoreOwner = new RelationType(AppsDomain.Instance, new Guid("b64dd0b0-8f35-4c71-9e7c-f47ee7ea1097"), new Guid("6a3bac6d-f9c6-460e-9c02-29728c567109"), new Guid("aaa0ce97-c540-42d7-aed3-e6b3430b1f23"));
			StoreOwner.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreOwner.IsIndexed = true;

			StoreOwner.AssociationType.ObjectType = this;

			StoreOwner.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			StoreOwner.RoleType.AssignedSingularName = "Owner";
			StoreOwner.RoleType.AssignedPluralName = "Owners";
			this.Roles.Owner = StoreOwner.RoleType;

			var StoreFiscalYearInvoiceNumber = new RelationType(AppsDomain.Instance, new Guid("bc11d48f-bcab-4880-afe8-0a52d3c11e44"), new Guid("d44420aa-80fc-4d55-8032-18b1b1c63d69"), new Guid("6a37b722-41b4-411e-bc84-18918990ad14"));
			StoreFiscalYearInvoiceNumber.AssignedMultiplicity = Multiplicity.OneToMany;
			StoreFiscalYearInvoiceNumber.IsIndexed = true;

			StoreFiscalYearInvoiceNumber.AssociationType.ObjectType = this;

			StoreFiscalYearInvoiceNumber.RoleType.ObjectType = FiscalYearInvoiceNumberClass.Instance;;
			StoreFiscalYearInvoiceNumber.RoleType.AssignedSingularName = "FiscalYearInvoiceNumber";
			StoreFiscalYearInvoiceNumber.RoleType.AssignedPluralName = "FiscalYearInvoiceNumbers";
			this.Roles.FiscalYearInvoiceNumber = StoreFiscalYearInvoiceNumber.RoleType;

			var StorePaymentMethod = new RelationType(AppsDomain.Instance, new Guid("ca82d0f8-f886-4936-80f5-a7dbb7c550b5"), new Guid("94284261-b6db-4d74-ae74-955f6481375f"), new Guid("49940864-e0db-4d0b-a607-b1725e6f45c9"));
			StorePaymentMethod.AssignedMultiplicity = Multiplicity.ManyToMany;
			StorePaymentMethod.IsIndexed = true;

			StorePaymentMethod.AssociationType.ObjectType = this;

			StorePaymentMethod.RoleType.ObjectType = PaymentMethodInterface.Instance;;
			StorePaymentMethod.RoleType.AssignedSingularName = "PaymentMethod";
			StorePaymentMethod.RoleType.AssignedPluralName = "PaymentMethods";
			this.Roles.PaymentMethod = StorePaymentMethod.RoleType;

			var StoreOutgoingShipmentCounter = new RelationType(AppsDomain.Instance, new Guid("dfc3f6be-0a95-49e0-8742-3901dbab5185"), new Guid("92072a30-fdb0-42c2-b4b6-f1fa53e83e7e"), new Guid("9fc009b2-0c9c-446f-ba4f-39144cb6c90d"));
			StoreOutgoingShipmentCounter.AssignedMultiplicity = Multiplicity.ManyToOne;
			StoreOutgoingShipmentCounter.IsIndexed = true;

			StoreOutgoingShipmentCounter.AssociationType.ObjectType = this;

			StoreOutgoingShipmentCounter.RoleType.ObjectType = CounterClass.Instance;;
			StoreOutgoingShipmentCounter.RoleType.AssignedSingularName = "OutgoingShipmentCounter";
			StoreOutgoingShipmentCounter.RoleType.AssignedPluralName = "OutgoingShipmentCounters";
			this.Roles.OutgoingShipmentCounter = StoreOutgoingShipmentCounter.RoleType;

			var StoreSalesOrderNumberPrefix = new RelationType(AppsDomain.Instance, new Guid("e00e948e-6fc3-43fd-a49b-008fc6d6133f"), new Guid("3f5cbcd9-c36b-4792-b1fc-15cf533ba6f3"), new Guid("a7e750a0-2e69-485d-8208-ab04682b6efd"));
			StoreSalesOrderNumberPrefix.AssignedMultiplicity = Multiplicity.OneToOne;
			StoreSalesOrderNumberPrefix.AssociationType.ObjectType = this;

			StoreSalesOrderNumberPrefix.RoleType.ObjectType = AllorsStringUnit.Instance;;
			StoreSalesOrderNumberPrefix.RoleType.AssignedSingularName = "SalesOrderNumberPrefix";
			StoreSalesOrderNumberPrefix.RoleType.AssignedPluralName = "SalesOrderNumberPrefixes";
			StoreSalesOrderNumberPrefix.RoleType.Size = 256;
			this.Roles.SalesOrderNumberPrefix = StoreSalesOrderNumberPrefix.RoleType;

			var StoreCustomerShipmentTemplate = new RelationType(AppsDomain.Instance, new Guid("f024d205-2420-40bb-ab1d-71533fa25557"), new Guid("68800a34-f973-4339-b5d5-7c611b39a2b1"), new Guid("e858cc6c-2a6e-4c04-be7a-e019009bf3f7"));
			StoreCustomerShipmentTemplate.AssignedMultiplicity = Multiplicity.ManyToMany;
			StoreCustomerShipmentTemplate.IsIndexed = true;

			StoreCustomerShipmentTemplate.AssociationType.ObjectType = this;

			StoreCustomerShipmentTemplate.RoleType.ObjectType = StringTemplateClass.Instance;;
			StoreCustomerShipmentTemplate.RoleType.AssignedSingularName = "CustomerShipmentTemplate";
			StoreCustomerShipmentTemplate.RoleType.AssignedPluralName = "CustomerShipmentTemplates";
			this.Roles.CustomerShipmentTemplate = StoreCustomerShipmentTemplate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			StoreClass.Instance.ConcreteRoles.ShipmentThreshold = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShipmentThreshold]; 

			StoreClass.Instance.ConcreteRoles.SalesOrderCounter = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOrderCounter]; 

			StoreClass.Instance.ConcreteRoles.SalesInvoiceTemplate = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesInvoiceTemplate]; 

			StoreClass.Instance.ConcreteRoles.OutgoingShipmentNumberPrefix = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OutgoingShipmentNumberPrefix]; 

			StoreClass.Instance.ConcreteRoles.SalesInvoiceNumberPrefix = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesInvoiceNumberPrefix]; 

			StoreClass.Instance.ConcreteRoles.PaymentGracePeriod = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentGracePeriod]; 

			StoreClass.Instance.ConcreteRoles.LogoImage = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LogoImage]; 

			StoreClass.Instance.ConcreteRoles.PaymentNetDays = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentNetDays]; 

			StoreClass.Instance.ConcreteRoles.DefaultFacility = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultFacility]; 

			StoreClass.Instance.ConcreteRoles.Name = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			StoreClass.Instance.ConcreteRoles.SalesOrderTemplate = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOrderTemplate]; 

			StoreClass.Instance.ConcreteRoles.CreditLimit = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CreditLimit]; 

			StoreClass.Instance.ConcreteRoles.DefaultShipmentMethod = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultShipmentMethod]; 

			StoreClass.Instance.ConcreteRoles.DefaultCarrier = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultCarrier]; 

			StoreClass.Instance.ConcreteRoles.SalesInvoiceCounter = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesInvoiceCounter]; 

			StoreClass.Instance.ConcreteRoles.OrderThreshold = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderThreshold]; 

			StoreClass.Instance.ConcreteRoles.DefaultPaymentMethod = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultPaymentMethod]; 

			StoreClass.Instance.ConcreteRoles.Owner = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Owner]; 

			StoreClass.Instance.ConcreteRoles.FiscalYearInvoiceNumber = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FiscalYearInvoiceNumber]; 

			StoreClass.Instance.ConcreteRoles.PaymentMethod = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PaymentMethod]; 

			StoreClass.Instance.ConcreteRoles.OutgoingShipmentCounter = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OutgoingShipmentCounter]; 

			StoreClass.Instance.ConcreteRoles.SalesOrderNumberPrefix = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOrderNumberPrefix]; 

			StoreClass.Instance.ConcreteRoles.CustomerShipmentTemplate = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerShipmentTemplate]; 


		}

		internal class RolesType
		{
			internal RoleType ShipmentThreshold;
			internal RoleType SalesOrderCounter;
			internal RoleType SalesInvoiceTemplate;
			internal RoleType OutgoingShipmentNumberPrefix;
			internal RoleType SalesInvoiceNumberPrefix;
			internal RoleType PaymentGracePeriod;
			internal RoleType LogoImage;
			internal RoleType PaymentNetDays;
			internal RoleType DefaultFacility;
			internal RoleType Name;
			internal RoleType SalesOrderTemplate;
			internal RoleType CreditLimit;
			internal RoleType DefaultShipmentMethod;
			internal RoleType DefaultCarrier;
			internal RoleType SalesInvoiceCounter;
			internal RoleType OrderThreshold;
			internal RoleType DefaultPaymentMethod;
			internal RoleType Owner;
			internal RoleType FiscalYearInvoiceNumber;
			internal RoleType PaymentMethod;
			internal RoleType OutgoingShipmentCounter;
			internal RoleType SalesOrderNumberPrefix;
			internal RoleType CustomerShipmentTemplate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ShipmentThreshold;
			internal ConcreteRoleType SalesOrderCounter;
			internal ConcreteRoleType SalesInvoiceTemplate;
			internal ConcreteRoleType OutgoingShipmentNumberPrefix;
			internal ConcreteRoleType SalesInvoiceNumberPrefix;
			internal ConcreteRoleType PaymentGracePeriod;
			internal ConcreteRoleType LogoImage;
			internal ConcreteRoleType PaymentNetDays;
			internal ConcreteRoleType DefaultFacility;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType SalesOrderTemplate;
			internal ConcreteRoleType CreditLimit;
			internal ConcreteRoleType DefaultShipmentMethod;
			internal ConcreteRoleType DefaultCarrier;
			internal ConcreteRoleType SalesInvoiceCounter;
			internal ConcreteRoleType OrderThreshold;
			internal ConcreteRoleType DefaultPaymentMethod;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType FiscalYearInvoiceNumber;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType OutgoingShipmentCounter;
			internal ConcreteRoleType SalesOrderNumberPrefix;
			internal ConcreteRoleType CustomerShipmentTemplate;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class LotClass : Class
	{
		public static LotClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal LotClass() : base(AppsDomain.Instance, new Guid("d900e278-7add-4e90-8bea-0a65d03f4fa7"))
        {
			this.SingularName = "Lot";
			this.PluralName = "Lots";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("8873ecce-9760-47c5-a37a-a2d33877c556"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var LotExpirationDate = new RelationType(AppsDomain.Instance, new Guid("4888a06a-fcf5-42a7-a1c3-721d3abaa755"), new Guid("0f922c04-b617-4b72-8c22-02f43ac2afb9"), new Guid("46b3ec4d-0463-48eb-8764-8dedf8c48b1a"));
			LotExpirationDate.AssignedMultiplicity = Multiplicity.OneToOne;
			LotExpirationDate.AssociationType.ObjectType = this;

			LotExpirationDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			LotExpirationDate.RoleType.AssignedSingularName = "ExpirationDate";
			LotExpirationDate.RoleType.AssignedPluralName = "ExpirationDates";
			this.Roles.ExpirationDate = LotExpirationDate.RoleType;

			var LotQuantity = new RelationType(AppsDomain.Instance, new Guid("8680f7e2-c5f1-43af-a127-68ac8404fbf4"), new Guid("e350d93d-c5ce-496b-a210-c01b4ff82c60"), new Guid("92953ece-133e-4402-ad5c-5357c34bb99e"));
			LotQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			LotQuantity.AssociationType.ObjectType = this;

			LotQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			LotQuantity.RoleType.AssignedSingularName = "Quantity";
			LotQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = LotQuantity.RoleType;

			var LotLotNumber = new RelationType(AppsDomain.Instance, new Guid("ca7a3e0f-e036-40ed-9346-0d1dae45c560"), new Guid("fdb9e9dc-1395-43ed-8234-187f35b8a7ef"), new Guid("03e6a4fc-2336-4761-807f-20c1b5b80af0"));
			LotLotNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			LotLotNumber.AssociationType.ObjectType = this;

			LotLotNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			LotLotNumber.RoleType.AssignedSingularName = "LotNumber";
			LotLotNumber.RoleType.AssignedPluralName = "LotNumbers";
			LotLotNumber.RoleType.Size = 256;
			this.Roles.LotNumber = LotLotNumber.RoleType;


		}

		internal override void SetRelationTypes()
		{
			LotClass.Instance.ConcreteRoles.ExpirationDate = LotClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ExpirationDate]; 

			LotClass.Instance.ConcreteRoles.Quantity = LotClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			LotClass.Instance.ConcreteRoles.LotNumber = LotClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LotNumber]; 


		}

		internal class RolesType
		{
			internal RoleType ExpirationDate;
			internal RoleType Quantity;
			internal RoleType LotNumber;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ExpirationDate;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType LotNumber;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class WorkEffortSkillStandardClass : Class
	{
		public static WorkEffortSkillStandardClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortSkillStandardClass() : base(AppsDomain.Instance, new Guid("da16f5ee-0e04-41a7-afd7-b12e20414135"))
        {
			this.SingularName = "WorkEffortSkillStandard";
			this.PluralName = "WorkEffortSkillStandards";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7730be15-f57f-4f9a-af73-51d2a2dd3452"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortSkillStandardSkill = new RelationType(AppsDomain.Instance, new Guid("13a68eeb-7ca1-4ecd-a82b-ecbd75da99b6"), new Guid("fe6ffe1f-a4eb-4478-922f-4c786e40709c"), new Guid("e0a9c761-26d1-48cd-bf13-bd6f66d863ba"));
			WorkEffortSkillStandardSkill.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortSkillStandardSkill.IsIndexed = true;

			WorkEffortSkillStandardSkill.AssociationType.ObjectType = this;

			WorkEffortSkillStandardSkill.RoleType.ObjectType = SkillClass.Instance;;
			WorkEffortSkillStandardSkill.RoleType.AssignedSingularName = "Skill";
			WorkEffortSkillStandardSkill.RoleType.AssignedPluralName = "Skills";
			this.Roles.Skill = WorkEffortSkillStandardSkill.RoleType;

			var WorkEffortSkillStandardEstimatedNumberOfPeople = new RelationType(AppsDomain.Instance, new Guid("20623472-f4f3-40fc-bd7c-cd3da44fe224"), new Guid("5bc7090b-cf0e-4d08-8c8a-12db14e42ec3"), new Guid("57be9ba9-bb08-4b38-80eb-596f550f7963"));
			WorkEffortSkillStandardEstimatedNumberOfPeople.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortSkillStandardEstimatedNumberOfPeople.AssociationType.ObjectType = this;

			WorkEffortSkillStandardEstimatedNumberOfPeople.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			WorkEffortSkillStandardEstimatedNumberOfPeople.RoleType.AssignedSingularName = "EstimatedNumberOfPeople";
			WorkEffortSkillStandardEstimatedNumberOfPeople.RoleType.AssignedPluralName = "EstimatedNumbersOfPeople";
			this.Roles.EstimatedNumberOfPeople = WorkEffortSkillStandardEstimatedNumberOfPeople.RoleType;

			var WorkEffortSkillStandardEstimatedDuration = new RelationType(AppsDomain.Instance, new Guid("e05c673f-6c4b-492d-bf68-b4af15310aea"), new Guid("4cd6b8fb-6713-4ba2-8cf8-7fa80e824a0e"), new Guid("72b3e6fe-1f43-4964-90e0-a718635d985d"));
			WorkEffortSkillStandardEstimatedDuration.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortSkillStandardEstimatedDuration.AssociationType.ObjectType = this;

			WorkEffortSkillStandardEstimatedDuration.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortSkillStandardEstimatedDuration.RoleType.AssignedSingularName = "EstimatedDuration";
			WorkEffortSkillStandardEstimatedDuration.RoleType.AssignedPluralName = "EstimatedDurations";
			WorkEffortSkillStandardEstimatedDuration.RoleType.Scale = 2;
			WorkEffortSkillStandardEstimatedDuration.RoleType.Precision = 19;
			this.Roles.EstimatedDuration = WorkEffortSkillStandardEstimatedDuration.RoleType;

			var WorkEffortSkillStandardEstimatedCost = new RelationType(AppsDomain.Instance, new Guid("ed6a55d4-def6-49e0-8b1a-9ee99d8b3c3d"), new Guid("d5289442-6578-4928-873e-7e64cafadf66"), new Guid("206a7548-e6bc-4886-a53c-c11afcd83ede"));
			WorkEffortSkillStandardEstimatedCost.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortSkillStandardEstimatedCost.AssociationType.ObjectType = this;

			WorkEffortSkillStandardEstimatedCost.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			WorkEffortSkillStandardEstimatedCost.RoleType.AssignedSingularName = "EstimatedCost";
			WorkEffortSkillStandardEstimatedCost.RoleType.AssignedPluralName = "EstimatedCosts";
			WorkEffortSkillStandardEstimatedCost.RoleType.Scale = 2;
			WorkEffortSkillStandardEstimatedCost.RoleType.Precision = 19;
			this.Roles.EstimatedCost = WorkEffortSkillStandardEstimatedCost.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortSkillStandardClass.Instance.ConcreteRoles.Skill = WorkEffortSkillStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Skill]; 

			WorkEffortSkillStandardClass.Instance.ConcreteRoles.EstimatedNumberOfPeople = WorkEffortSkillStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedNumberOfPeople]; 

			WorkEffortSkillStandardClass.Instance.ConcreteRoles.EstimatedDuration = WorkEffortSkillStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedDuration]; 

			WorkEffortSkillStandardClass.Instance.ConcreteRoles.EstimatedCost = WorkEffortSkillStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EstimatedCost]; 


		}

		internal class RolesType
		{
			internal RoleType Skill;
			internal RoleType EstimatedNumberOfPeople;
			internal RoleType EstimatedDuration;
			internal RoleType EstimatedCost;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Skill;
			internal ConcreteRoleType EstimatedNumberOfPeople;
			internal ConcreteRoleType EstimatedDuration;
			internal ConcreteRoleType EstimatedCost;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class IndustryClassificationClass : Class
	{
		public static IndustryClassificationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal IndustryClassificationClass() : base(AppsDomain.Instance, new Guid("da27b432-85e4-4c83-bdb0-64cefb347e8a"))
        {
			this.SingularName = "IndustryClassification";
			this.PluralName = "IndustryClassifications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d358bcbd-3048-4343-87b4-1f2571344309"))
			{
				Subtype = Instance,
				Supertype = OrganisationClassificationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class TimeAndMaterialsServiceClass : Class
	{
		public static TimeAndMaterialsServiceClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TimeAndMaterialsServiceClass() : base(AppsDomain.Instance, new Guid("da504b46-2fd0-4500-ae23-61fa73151077"))
        {
			this.SingularName = "TimeAndMaterialsService";
			this.PluralName = "TimeAndMaterialsServices";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("841252fa-7848-4cc2-ad67-c92678053088"))
			{
				Subtype = Instance,
				Supertype = ServiceInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PrimaryProductCategory;
			internal ConcreteRoleType SupportDiscontinuationDate;
			internal ConcreteRoleType SalesDiscontinuationDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType VirtualProductPriceComponent;
			internal ConcreteRoleType IntrastatCode;
			internal ConcreteRoleType ProductCategoryExpanded;
			internal ConcreteRoleType ProductComplement;
			internal ConcreteRoleType OptionalFeature;
			internal ConcreteRoleType ManufacturedBy;
			internal ConcreteRoleType Variant;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IntroductionDate;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType StandardFeature;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType EstimatedProductCost;
			internal ConcreteRoleType ProductObsolescence;
			internal ConcreteRoleType SelectableFeature;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType BasePrice;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType SoldBy;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EquipmentClass : Class
	{
		public static EquipmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EquipmentClass() : base(AppsDomain.Instance, new Guid("da852ff9-0c87-4fa6-a93a-90d97d28029c"))
        {
			this.SingularName = "Equipment";
			this.PluralName = "Equipments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1fbe9695-fbc7-4036-aecc-1df5d2a8acdb"))
			{
				Subtype = Instance,
				Supertype = FixedAssetInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType LastServiceDate;
			internal ConcreteRoleType AcquiredDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ProductionCapacity;
			internal ConcreteRoleType NextServiceDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class RequestItemClass : Class
	{
		public static RequestItemClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RequestItemClass() : base(AppsDomain.Instance, new Guid("daf83fcc-832e-4d5e-ba71-5a08f42355db"))
        {
			this.SingularName = "RequestItem";
			this.PluralName = "RequestItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("b9eb6a4f-34a0-4d61-9093-91eaf3285f75"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("ba236a19-a844-481e-a2b0-1dd4e9523e88"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var RequestItemDescription = new RelationType(AppsDomain.Instance, new Guid("542f3de9-e808-443b-b6e6-baf2db1ec2b1"), new Guid("30b2b652-b7a8-42ec-bd10-dd606a1be951"), new Guid("c176a9ff-7656-4c22-bf00-e19cdcd16566"));
			RequestItemDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			RequestItemDescription.AssociationType.ObjectType = this;

			RequestItemDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			RequestItemDescription.RoleType.AssignedSingularName = "Description";
			RequestItemDescription.RoleType.AssignedPluralName = "Descriptions";
			RequestItemDescription.RoleType.Size = 256;
			this.Roles.Description = RequestItemDescription.RoleType;

			var RequestItemQuantity = new RelationType(AppsDomain.Instance, new Guid("5c0f0069-b7f9-47f1-8346-c30f14afbc0c"), new Guid("0f924664-8b58-45f4-b6f3-d8201610de8f"), new Guid("3560f38b-1945-4eb1-9b9a-c3e84d267647"));
			RequestItemQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			RequestItemQuantity.AssociationType.ObjectType = this;

			RequestItemQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			RequestItemQuantity.RoleType.AssignedSingularName = "Quantity";
			RequestItemQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = RequestItemQuantity.RoleType;

			var RequestItemRequirement = new RelationType(AppsDomain.Instance, new Guid("6544faeb-a4cf-447c-a696-b6561c45086e"), new Guid("3d03cbae-7618-458e-b705-94112c8f66db"), new Guid("0204dc28-cec2-4d6b-b525-c7e4c65f958b"));
			RequestItemRequirement.AssignedMultiplicity = Multiplicity.ManyToMany;
			RequestItemRequirement.IsIndexed = true;

			RequestItemRequirement.AssociationType.ObjectType = this;

			RequestItemRequirement.RoleType.ObjectType = RequirementInterface.Instance;;
			RequestItemRequirement.RoleType.AssignedSingularName = "Requirement";
			RequestItemRequirement.RoleType.AssignedPluralName = "Requirements";
			this.Roles.Requirement = RequestItemRequirement.RoleType;

			var RequestItemDeliverable = new RelationType(AppsDomain.Instance, new Guid("a5d1bef9-3086-4c32-9a6d-ce33c4f09539"), new Guid("1d3eedcb-dc13-46ad-ac43-e6979995e00b"), new Guid("474a6350-abba-4c53-ba26-0320c60aa8a8"));
			RequestItemDeliverable.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequestItemDeliverable.IsIndexed = true;

			RequestItemDeliverable.AssociationType.ObjectType = this;

			RequestItemDeliverable.RoleType.ObjectType = DeliverableClass.Instance;;
			RequestItemDeliverable.RoleType.AssignedSingularName = "Deliverable";
			RequestItemDeliverable.RoleType.AssignedPluralName = "Deliverables";
			this.Roles.Deliverable = RequestItemDeliverable.RoleType;

			var RequestItemProductFeature = new RelationType(AppsDomain.Instance, new Guid("bf40cb6b-e561-4df1-9ac4-e5a72933c7db"), new Guid("2eddcab2-e293-4699-8392-c198018a8ce4"), new Guid("90b8c610-e703-4109-92c7-bad2f5e1501b"));
			RequestItemProductFeature.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequestItemProductFeature.IsIndexed = true;

			RequestItemProductFeature.AssociationType.ObjectType = this;

			RequestItemProductFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			RequestItemProductFeature.RoleType.AssignedSingularName = "ProductFeature";
			RequestItemProductFeature.RoleType.AssignedPluralName = "ProductFeatures";
			this.Roles.ProductFeature = RequestItemProductFeature.RoleType;

			var RequestItemNeededSkill = new RelationType(AppsDomain.Instance, new Guid("d02d15ae-2938-4753-95f1-686ea8b02f47"), new Guid("0abe5f12-ae64-4a8e-b5cc-175d7d2ea1d7"), new Guid("91d62ba3-943e-4aa5-b4fc-6a1f62fcd63f"));
			RequestItemNeededSkill.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequestItemNeededSkill.IsIndexed = true;

			RequestItemNeededSkill.AssociationType.ObjectType = this;

			RequestItemNeededSkill.RoleType.ObjectType = NeededSkillClass.Instance;;
			RequestItemNeededSkill.RoleType.AssignedSingularName = "NeededSkill";
			RequestItemNeededSkill.RoleType.AssignedPluralName = "NeededSkills";
			this.Roles.NeededSkill = RequestItemNeededSkill.RoleType;

			var RequestItemProduct = new RelationType(AppsDomain.Instance, new Guid("f03c07b5-44f2-4e61-ad23-7c373851dafc"), new Guid("d4cce9f6-ebe0-4b72-86f6-d41c8cdf072e"), new Guid("bd7d900b-d5c6-46dc-8843-e4041429858b"));
			RequestItemProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			RequestItemProduct.IsIndexed = true;

			RequestItemProduct.AssociationType.ObjectType = this;

			RequestItemProduct.RoleType.ObjectType = ProductInterface.Instance;;
			RequestItemProduct.RoleType.AssignedSingularName = "Product";
			RequestItemProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = RequestItemProduct.RoleType;

			var RequestItemMaximumAllowedPrice = new RelationType(AppsDomain.Instance, new Guid("fa33c3e6-53c4-428a-bd9c-feba1dd9ed45"), new Guid("1aa99128-9989-4933-8204-9acefc7b040d"), new Guid("99251c00-d729-4363-8ce8-403ace61725e"));
			RequestItemMaximumAllowedPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			RequestItemMaximumAllowedPrice.AssociationType.ObjectType = this;

			RequestItemMaximumAllowedPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			RequestItemMaximumAllowedPrice.RoleType.AssignedSingularName = "MaximumAllowedPrice";
			RequestItemMaximumAllowedPrice.RoleType.AssignedPluralName = "MaximumAllowedPrices";
			RequestItemMaximumAllowedPrice.RoleType.Scale = 2;
			RequestItemMaximumAllowedPrice.RoleType.Precision = 19;
			this.Roles.MaximumAllowedPrice = RequestItemMaximumAllowedPrice.RoleType;

			var RequestItemRequiredByDate = new RelationType(AppsDomain.Instance, new Guid("ff41a43c-997d-4158-984e-e669eb935148"), new Guid("b46ffa62-adcb-4928-bdb0-79d0eef9e676"), new Guid("7c4353a9-efd5-437e-8789-fae92a0be1ed"));
			RequestItemRequiredByDate.AssignedMultiplicity = Multiplicity.OneToOne;
			RequestItemRequiredByDate.AssociationType.ObjectType = this;

			RequestItemRequiredByDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			RequestItemRequiredByDate.RoleType.AssignedSingularName = "RequiredByDate";
			RequestItemRequiredByDate.RoleType.AssignedPluralName = "RequiredByDates";
			this.Roles.RequiredByDate = RequestItemRequiredByDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RequestItemClass.Instance.ConcreteRoles.Description = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			RequestItemClass.Instance.ConcreteRoles.Quantity = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			RequestItemClass.Instance.ConcreteRoles.Requirement = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Requirement]; 

			RequestItemClass.Instance.ConcreteRoles.Deliverable = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Deliverable]; 

			RequestItemClass.Instance.ConcreteRoles.ProductFeature = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 

			RequestItemClass.Instance.ConcreteRoles.NeededSkill = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NeededSkill]; 

			RequestItemClass.Instance.ConcreteRoles.Product = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			RequestItemClass.Instance.ConcreteRoles.MaximumAllowedPrice = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaximumAllowedPrice]; 

			RequestItemClass.Instance.ConcreteRoles.RequiredByDate = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RequiredByDate]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType Quantity;
			internal RoleType Requirement;
			internal RoleType Deliverable;
			internal RoleType ProductFeature;
			internal RoleType NeededSkill;
			internal RoleType Product;
			internal RoleType MaximumAllowedPrice;
			internal RoleType RequiredByDate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType Requirement;
			internal ConcreteRoleType Deliverable;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType NeededSkill;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType MaximumAllowedPrice;
			internal ConcreteRoleType RequiredByDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class SalesChannelClass : Class
	{
		public static SalesChannelClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesChannelClass() : base(AppsDomain.Instance, new Guid("db1678af-6541-4a35-a3b9-cffd0f821bd2"))
        {
			this.SingularName = "SalesChannel";
			this.PluralName = "SalesChannels";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("e27b8ef6-9429-413b-9ef3-d970f6e30b1e"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CustomerRequirementClass : Class
	{
		public static CustomerRequirementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CustomerRequirementClass() : base(AppsDomain.Instance, new Guid("db24e487-daf7-4625-9073-8fd083f653dc"))
        {
			this.SingularName = "CustomerRequirement";
			this.PluralName = "CustomerRequirements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cd637d35-6c79-4609-a983-2d7fb5a54d51"))
			{
				Subtype = Instance,
				Supertype = RequirementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType RequiredByDate;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Authorizer;
			internal ConcreteRoleType RequirementStatus;
			internal ConcreteRoleType Reason;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType NeededFor;
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType CurrentRequirementStatus;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ServicedBy;
			internal ConcreteRoleType EstimatedBudget;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PropertyClass : Class
	{
		public static PropertyClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PropertyClass() : base(AppsDomain.Instance, new Guid("dc54aafb-f0f2-4f72-8a81-d5b2fc792b86"))
        {
			this.SingularName = "Property";
			this.PluralName = "Properties";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("9a080b3c-d894-433d-a062-a8abbf0c1ebf"))
			{
				Subtype = Instance,
				Supertype = FixedAssetInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType LastServiceDate;
			internal ConcreteRoleType AcquiredDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType ProductionCapacity;
			internal ConcreteRoleType NextServiceDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ConstraintSpecificationClass : Class
	{
		public static ConstraintSpecificationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ConstraintSpecificationClass() : base(AppsDomain.Instance, new Guid("dc8ce136-7088-4128-8f69-4d5cb2ca2648"))
        {
			this.SingularName = "ConstraintSpecification";
			this.PluralName = "ConstraintSpecifications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("6feb4aed-e903-434c-b7ba-bd9a9f9f1f59"))
			{
				Subtype = Instance,
				Supertype = PartSpecificationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PartSpecificationStatus;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType DocumentationDate;
			internal ConcreteRoleType CurrentPartSpecificationStatus;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DesiredProductFeatureClass : Class
	{
		public static DesiredProductFeatureClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DesiredProductFeatureClass() : base(AppsDomain.Instance, new Guid("dda88fe9-14b3-463b-ae66-25dd1b136e16"))
        {
			this.SingularName = "DesiredProductFeature";
			this.PluralName = "DesiredProductFeatures";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("59bd142a-f956-4f27-b24c-16fa4fefbef2"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DesiredProductFeatureRequired = new RelationType(AppsDomain.Instance, new Guid("24695d7b-5c61-4b5c-be90-0f18ca46c6a6"), new Guid("c0720b85-3e00-4ad7-8a19-9c6761aa1bba"), new Guid("360db95e-a5ad-4771-ad23-d591be1640d2"));
			DesiredProductFeatureRequired.AssignedMultiplicity = Multiplicity.OneToOne;
			DesiredProductFeatureRequired.AssociationType.ObjectType = this;

			DesiredProductFeatureRequired.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			DesiredProductFeatureRequired.RoleType.AssignedSingularName = "Required";
			DesiredProductFeatureRequired.RoleType.AssignedPluralName = "Requireds";
			this.Roles.Required = DesiredProductFeatureRequired.RoleType;

			var DesiredProductFeatureProductFeature = new RelationType(AppsDomain.Instance, new Guid("d09dbd42-5c59-4d78-b5d7-4dbee0406ead"), new Guid("4a611e8a-1bd5-42b3-b2ba-14403328696b"), new Guid("93f73ab2-af4a-47d1-822b-df576f5a5e86"));
			DesiredProductFeatureProductFeature.AssignedMultiplicity = Multiplicity.ManyToOne;
			DesiredProductFeatureProductFeature.IsIndexed = true;

			DesiredProductFeatureProductFeature.AssociationType.ObjectType = this;

			DesiredProductFeatureProductFeature.RoleType.ObjectType = ProductFeatureInterface.Instance;;
			DesiredProductFeatureProductFeature.RoleType.AssignedSingularName = "ProductFeature";
			DesiredProductFeatureProductFeature.RoleType.AssignedPluralName = "ProductFeatures";
			this.Roles.ProductFeature = DesiredProductFeatureProductFeature.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DesiredProductFeatureClass.Instance.ConcreteRoles.Required = DesiredProductFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Required]; 

			DesiredProductFeatureClass.Instance.ConcreteRoles.ProductFeature = DesiredProductFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductFeature]; 


		}

		internal class RolesType
		{
			internal RoleType Required;
			internal RoleType ProductFeature;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Required;
			internal ConcreteRoleType ProductFeature;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesOrderItemStatusClass : Class
	{
		public static SalesOrderItemStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesOrderItemStatusClass() : base(AppsDomain.Instance, new Guid("de70746f-2c82-4f01-8de9-b4f78105426a"))
        {
			this.SingularName = "SalesOrderItemStatus";
			this.PluralName = "SalesOrderItemStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("dd102abe-831c-46d1-9e54-54ea955756e2"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesOrderItemStatusSalesOrderItemObjectState = new RelationType(AppsDomain.Instance, new Guid("90dd5f56-af80-4f78-a0b6-c13f34c87193"), new Guid("05167075-7e33-42ba-a40a-ef2233af019a"), new Guid("3b0a60b9-b8f3-41f0-af4f-75598240bde1"));
			SalesOrderItemStatusSalesOrderItemObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesOrderItemStatusSalesOrderItemObjectState.IsIndexed = true;

			SalesOrderItemStatusSalesOrderItemObjectState.AssociationType.ObjectType = this;

			SalesOrderItemStatusSalesOrderItemObjectState.RoleType.ObjectType = SalesOrderItemObjectStateClass.Instance;;
			SalesOrderItemStatusSalesOrderItemObjectState.RoleType.AssignedSingularName = "SalesOrderItemObjectState";
			SalesOrderItemStatusSalesOrderItemObjectState.RoleType.AssignedPluralName = "SalesOrderItemObjectStates";
			this.Roles.SalesOrderItemObjectState = SalesOrderItemStatusSalesOrderItemObjectState.RoleType;

			var SalesOrderItemStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("f31a9949-c0b3-45c5-854f-29884ce45c9b"), new Guid("73152227-ec98-4b5a-9fad-0e2d38cd7c61"), new Guid("47852a3a-f906-4757-87b9-29c6e8d560f9"));
			SalesOrderItemStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesOrderItemStatusStartDateTime.AssociationType.ObjectType = this;

			SalesOrderItemStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			SalesOrderItemStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			SalesOrderItemStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = SalesOrderItemStatusStartDateTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesOrderItemStatusClass.Instance.ConcreteRoles.SalesOrderItemObjectState = SalesOrderItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesOrderItemObjectState]; 

			SalesOrderItemStatusClass.Instance.ConcreteRoles.StartDateTime = SalesOrderItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 


		}

		internal class RolesType
		{
			internal RoleType SalesOrderItemObjectState;
			internal RoleType StartDateTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType SalesOrderItemObjectState;
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ActivityUsageClass : Class
	{
		public static ActivityUsageClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ActivityUsageClass() : base(AppsDomain.Instance, new Guid("ded168ad-b674-47ab-855c-46b3e1939e32"))
        {
			this.SingularName = "ActivityUsage";
			this.PluralName = "ActivityUsages";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1c0760af-1eda-4877-a27f-5cb6113e09bb"))
			{
				Subtype = Instance,
				Supertype = DeploymentUsageInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ActivityUsageQuantity = new RelationType(AppsDomain.Instance, new Guid("1c8929c2-090a-41f2-8a22-691a63df4ff7"), new Guid("ab9d6daf-e245-4281-9ff0-fb865c275f79"), new Guid("9acc53b1-4e7a-46c7-a34a-158f5eb05d07"));
			ActivityUsageQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			ActivityUsageQuantity.AssociationType.ObjectType = this;

			ActivityUsageQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ActivityUsageQuantity.RoleType.AssignedSingularName = "Quantity";
			ActivityUsageQuantity.RoleType.AssignedPluralName = "Quantities";
			ActivityUsageQuantity.RoleType.Scale = 2;
			ActivityUsageQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = ActivityUsageQuantity.RoleType;

			var ActivityUsageUnitOfMeasure = new RelationType(AppsDomain.Instance, new Guid("b7672e5b-5ddc-46ba-82f2-4804f8b43ebf"), new Guid("3c0cd8a9-c033-4ff1-9ff5-60e90cfffdf5"), new Guid("ed7d8046-4596-4055-af88-b2e4c9da6898"));
			ActivityUsageUnitOfMeasure.AssignedMultiplicity = Multiplicity.ManyToOne;
			ActivityUsageUnitOfMeasure.IsIndexed = true;

			ActivityUsageUnitOfMeasure.AssociationType.ObjectType = this;

			ActivityUsageUnitOfMeasure.RoleType.ObjectType = UnitOfMeasureClass.Instance;;
			ActivityUsageUnitOfMeasure.RoleType.AssignedSingularName = "UnitOfMeasure";
			ActivityUsageUnitOfMeasure.RoleType.AssignedPluralName = "UnitsOfMeasure";
			this.Roles.UnitOfMeasure = ActivityUsageUnitOfMeasure.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ActivityUsageClass.Instance.ConcreteRoles.Quantity = ActivityUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			ActivityUsageClass.Instance.ConcreteRoles.UnitOfMeasure = ActivityUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitOfMeasure]; 


		}

		internal class RolesType
		{
			internal RoleType Quantity;
			internal RoleType UnitOfMeasure;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType TimeFrequency;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class ProgramClass : Class
	{
		public static ProgramClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProgramClass() : base(AppsDomain.Instance, new Guid("dfe47c36-58b5-4438-b674-cc2e861922d6"))
        {
			this.SingularName = "Program";
			this.PluralName = "Programs";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("fcb61246-0139-4ad2-bbf5-bf7e54539d7e"))
			{
				Subtype = Instance,
				Supertype = WorkEffortInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CurrentWorkEffortStatus;
			internal ConcreteRoleType Precendency;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType DeliverableProduced;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType InventoryItemNeeded;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType ActualCompletion;
			internal ConcreteRoleType OrderItemFulfillment;
			internal ConcreteRoleType WorkEffortStatus;
			internal ConcreteRoleType WorkEffortType;
			internal ConcreteRoleType InventoryItemProduced;
			internal ConcreteRoleType WorkEffortPurpose;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType RequirementFulfillment;
			internal ConcreteRoleType SpecialTerms;
			internal ConcreteRoleType Concurrency;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ActualHours;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType ScheduledCompletion;
			internal ConcreteRoleType EstimatedHours;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CommunicationEventStatusClass : Class
	{
		public static CommunicationEventStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CommunicationEventStatusClass() : base(AppsDomain.Instance, new Guid("e2c3f3fa-7b94-4315-b8dd-2f538d8e2132"))
        {
			this.SingularName = "CommunicationEventStatus";
			this.PluralName = "CommunicationEventStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ed429bde-4cc2-4341-8daf-0270c1c7e32a"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CommunicationEventStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("414fc983-3086-4362-806a-d77b09f04b24"), new Guid("0da368d4-31c3-45b3-b556-561b080a03a5"), new Guid("d0e76e79-e797-44dd-8256-f88c10b1d440"));
			CommunicationEventStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			CommunicationEventStatusStartDateTime.AssociationType.ObjectType = this;

			CommunicationEventStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CommunicationEventStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			CommunicationEventStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = CommunicationEventStatusStartDateTime.RoleType;

			var CommunicationEventStatusCommunicationEventObjectState = new RelationType(AppsDomain.Instance, new Guid("5ad71d39-d9e2-4b08-a6ac-322c18f14be5"), new Guid("51e4f7d6-a511-493e-8207-b60343fccae6"), new Guid("4d04158e-c9a4-490c-9a35-c2205a01938a"));
			CommunicationEventStatusCommunicationEventObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CommunicationEventStatusCommunicationEventObjectState.IsIndexed = true;

			CommunicationEventStatusCommunicationEventObjectState.AssociationType.ObjectType = this;

			CommunicationEventStatusCommunicationEventObjectState.RoleType.ObjectType = CommunicationEventObjectStateClass.Instance;;
			CommunicationEventStatusCommunicationEventObjectState.RoleType.AssignedSingularName = "CommunicationEventObjectState";
			CommunicationEventStatusCommunicationEventObjectState.RoleType.AssignedPluralName = "CommunicationEventObjectStates";
			this.Roles.CommunicationEventObjectState = CommunicationEventStatusCommunicationEventObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CommunicationEventStatusClass.Instance.ConcreteRoles.StartDateTime = CommunicationEventStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			CommunicationEventStatusClass.Instance.ConcreteRoles.CommunicationEventObjectState = CommunicationEventStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CommunicationEventObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType CommunicationEventObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType CommunicationEventObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AgreementSectionClass : Class
	{
		public static AgreementSectionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AgreementSectionClass() : base(AppsDomain.Instance, new Guid("e31d6dd2-b5b2-4fd8-949f-0df688ed2e9b"))
        {
			this.SingularName = "AgreementSection";
			this.PluralName = "AgreementSections";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c8f1b504-22cb-4c9d-90ce-9d3f2fbcabee"))
			{
				Subtype = Instance,
				Supertype = AgreementItemInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Text;
			internal ConcreteRoleType Addendum;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType AgreementTerm;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class GoodClass : Class
	{
		public static GoodClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal GoodClass() : base(AppsDomain.Instance, new Guid("e3e87d40-b4f0-4953-9716-db13b35d716b"))
        {
			this.SingularName = "Good";
			this.PluralName = "Goods";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0064f173-9ab7-4291-9d28-cbfec04f8e72"))
			{
				Subtype = Instance,
				Supertype = ProductInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("b0120538-d44a-458c-8fe0-6e3c89284100"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var GoodAvailableToPromise = new RelationType(AppsDomain.Instance, new Guid("04cd1e20-a031-4a4f-9f40-6debb52b002c"), new Guid("4441b31a-7807-41c6-803b-aeacd18e2867"), new Guid("8dc2ddca-4ae2-48b9-92db-ac68f2f5542e"));
			GoodAvailableToPromise.AssignedMultiplicity = Multiplicity.OneToOne;
			GoodAvailableToPromise.IsDerived = true;
			GoodAvailableToPromise.AssociationType.ObjectType = this;

			GoodAvailableToPromise.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			GoodAvailableToPromise.RoleType.AssignedSingularName = "AvailableToPromise";
			GoodAvailableToPromise.RoleType.AssignedPluralName = "AvailablesToPromise";
			GoodAvailableToPromise.RoleType.Scale = 2;
			GoodAvailableToPromise.RoleType.Precision = 19;
			this.Roles.AvailableToPromise = GoodAvailableToPromise.RoleType;

			var GoodThumbnail = new RelationType(AppsDomain.Instance, new Guid("1e977b9c-8582-48be-ac1d-20a055598290"), new Guid("be920e49-abff-4ef0-80c2-02df6dfa55e3"), new Guid("67e83a0e-db03-439d-832a-b5685887eeaa"));
			GoodThumbnail.AssignedMultiplicity = Multiplicity.ManyToOne;
			GoodThumbnail.IsIndexed = true;

			GoodThumbnail.AssociationType.ObjectType = this;

			GoodThumbnail.RoleType.ObjectType = MediaClass.Instance;;
			GoodThumbnail.RoleType.AssignedSingularName = "Thumbnail";
			GoodThumbnail.RoleType.AssignedPluralName = "Thumbnails";
			this.Roles.Thumbnail = GoodThumbnail.RoleType;

			var GoodInventoryItemKind = new RelationType(AppsDomain.Instance, new Guid("2ca90db1-8595-4de0-957e-dc4476be1654"), new Guid("637fa802-fc65-4b5e-aaf5-e49ac5218b9b"), new Guid("64036e01-6767-46d0-aca7-def5876db81f"));
			GoodInventoryItemKind.AssignedMultiplicity = Multiplicity.ManyToOne;
			GoodInventoryItemKind.IsIndexed = true;

			GoodInventoryItemKind.AssociationType.ObjectType = this;

			GoodInventoryItemKind.RoleType.ObjectType = InventoryItemKindClass.Instance;;
			GoodInventoryItemKind.RoleType.AssignedSingularName = "InventoryItemKind";
			GoodInventoryItemKind.RoleType.AssignedPluralName = "InventoryItemKinds";
			this.Roles.InventoryItemKind = GoodInventoryItemKind.RoleType;

			var GoodBarCode = new RelationType(AppsDomain.Instance, new Guid("4e8eceff-aec2-44f8-9820-4e417ed904c1"), new Guid("30f4ec83-5854-4a53-a594-ba1247d02b2f"), new Guid("80361383-e1fc-4256-9b69-7cd43469d0de"));
			GoodBarCode.AssignedMultiplicity = Multiplicity.OneToOne;
			GoodBarCode.AssociationType.ObjectType = this;

			GoodBarCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			GoodBarCode.RoleType.AssignedSingularName = "BarCode";
			GoodBarCode.RoleType.AssignedPluralName = "BarCodes";
			GoodBarCode.RoleType.Size = 256;
			this.Roles.BarCode = GoodBarCode.RoleType;

			var GoodFinishedGood = new RelationType(AppsDomain.Instance, new Guid("82295ab2-8488-4d7e-8703-9f7fbec55925"), new Guid("c1801b8f-013b-42ff-b02a-a6c9b0e361b8"), new Guid("cdc45553-9c60-4c40-8c82-56c488ee6aae"));
			GoodFinishedGood.AssignedMultiplicity = Multiplicity.ManyToOne;
			GoodFinishedGood.IsIndexed = true;

			GoodFinishedGood.AssociationType.ObjectType = this;

			GoodFinishedGood.RoleType.ObjectType = FinishedGoodClass.Instance;;
			GoodFinishedGood.RoleType.AssignedSingularName = "FinishedGood";
			GoodFinishedGood.RoleType.AssignedPluralName = "FinishedGoods";
			this.Roles.FinishedGood = GoodFinishedGood.RoleType;

			var GoodSku = new RelationType(AppsDomain.Instance, new Guid("859487f7-9759-4c30-8528-8cd5d014b0a2"), new Guid("e293bfae-afd7-4f15-8e01-58c9078364b6"), new Guid("3a499b07-0d4f-4f5a-b679-7d76118f8441"));
			GoodSku.AssignedMultiplicity = Multiplicity.OneToOne;
			GoodSku.AssociationType.ObjectType = this;

			GoodSku.RoleType.ObjectType = AllorsStringUnit.Instance;;
			GoodSku.RoleType.AssignedSingularName = "Sku";
			GoodSku.RoleType.AssignedPluralName = "Skus";
			GoodSku.RoleType.Size = 256;
			this.Roles.Sku = GoodSku.RoleType;

			var GoodArticleNumber = new RelationType(AppsDomain.Instance, new Guid("989d9c6c-56d6-407a-a890-3769cb7a675e"), new Guid("4da4bb2d-f830-4827-bdaf-1c584cdeb437"), new Guid("c31005b1-787d-4a0f-b281-f74551df7be7"));
			GoodArticleNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			GoodArticleNumber.AssociationType.ObjectType = this;

			GoodArticleNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			GoodArticleNumber.RoleType.AssignedSingularName = "ArticleNumber";
			GoodArticleNumber.RoleType.AssignedPluralName = "ArticleNumbers";
			GoodArticleNumber.RoleType.Size = 256;
			this.Roles.ArticleNumber = GoodArticleNumber.RoleType;

			var GoodManufacturerId = new RelationType(AppsDomain.Instance, new Guid("98d99ee6-6dc1-4ef5-ad5c-e24bcd1dfa27"), new Guid("60d2c039-b034-4e7f-a677-d65a302d9f5f"), new Guid("eeba67a7-b5c4-4783-b391-b9dd35093efb"));
			GoodManufacturerId.AssignedMultiplicity = Multiplicity.OneToOne;
			GoodManufacturerId.AssociationType.ObjectType = this;

			GoodManufacturerId.RoleType.ObjectType = AllorsStringUnit.Instance;;
			GoodManufacturerId.RoleType.AssignedSingularName = "ManufacturerId";
			GoodManufacturerId.RoleType.AssignedPluralName = "ManufacturerIds";
			GoodManufacturerId.RoleType.Size = 256;
			this.Roles.ManufacturerId = GoodManufacturerId.RoleType;

			var GoodProductSubstitution = new RelationType(AppsDomain.Instance, new Guid("acbe2dc6-63ad-4910-9752-4cab83e24afb"), new Guid("70d193cf-8985-4c25-84a5-31f4e2fd2a34"), new Guid("73361510-c5a2-4c4f-afe5-94d2b9eaeea3"));
			GoodProductSubstitution.AssignedMultiplicity = Multiplicity.ManyToMany;
			GoodProductSubstitution.IsIndexed = true;

			GoodProductSubstitution.AssociationType.ObjectType = this;

			GoodProductSubstitution.RoleType.ObjectType = ProductInterface.Instance;;
			GoodProductSubstitution.RoleType.AssignedSingularName = "ProductSubstitution";
			GoodProductSubstitution.RoleType.AssignedPluralName = "ProductSubstitutions";
			this.Roles.ProductSubstitution = GoodProductSubstitution.RoleType;

			var GoodProductIncompatibility = new RelationType(AppsDomain.Instance, new Guid("e1ee15a9-f173-4d81-a11d-82abff076fb4"), new Guid("20928aed-02cc-4ea1-9640-cd31cb54ba13"), new Guid("e1c65763-9c2d-4111-bca1-638a69490e99"));
			GoodProductIncompatibility.AssignedMultiplicity = Multiplicity.ManyToMany;
			GoodProductIncompatibility.IsIndexed = true;

			GoodProductIncompatibility.AssociationType.ObjectType = this;

			GoodProductIncompatibility.RoleType.ObjectType = ProductInterface.Instance;;
			GoodProductIncompatibility.RoleType.AssignedSingularName = "ProductIncompatibility";
			GoodProductIncompatibility.RoleType.AssignedPluralName = "ProductIncompatibilities";
			this.Roles.ProductIncompatibility = GoodProductIncompatibility.RoleType;

			var GoodPhoto = new RelationType(AppsDomain.Instance, new Guid("f52c0b7e-dbc4-4082-a2b9-9b1a05ce7179"), new Guid("50478ca9-3eb4-487b-8c8a-6ff48d9155b5"), new Guid("802b6cdb-873a-4455-9fa7-7f2267407f0f"));
			GoodPhoto.AssignedMultiplicity = Multiplicity.ManyToOne;
			GoodPhoto.IsIndexed = true;

			GoodPhoto.AssociationType.ObjectType = this;

			GoodPhoto.RoleType.ObjectType = MediaClass.Instance;;
			GoodPhoto.RoleType.AssignedSingularName = "Photo";
			GoodPhoto.RoleType.AssignedPluralName = "Photos";
			this.Roles.Photo = GoodPhoto.RoleType;


		}

		internal override void SetRelationTypes()
		{
			GoodClass.Instance.ConcreteRoles.AvailableToPromise = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AvailableToPromise]; 

			GoodClass.Instance.ConcreteRoles.Thumbnail = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Thumbnail]; 

			GoodClass.Instance.ConcreteRoles.InventoryItemKind = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItemKind]; 

			GoodClass.Instance.ConcreteRoles.BarCode = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BarCode]; 

			GoodClass.Instance.ConcreteRoles.FinishedGood = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FinishedGood]; 

			GoodClass.Instance.ConcreteRoles.Sku = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Sku]; 

			GoodClass.Instance.ConcreteRoles.ArticleNumber = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ArticleNumber]; 

			GoodClass.Instance.ConcreteRoles.ManufacturerId = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ManufacturerId]; 

			GoodClass.Instance.ConcreteRoles.ProductSubstitution = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductSubstitution]; 

			GoodClass.Instance.ConcreteRoles.ProductIncompatibility = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductIncompatibility]; 

			GoodClass.Instance.ConcreteRoles.Photo = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Photo]; 


		}

		internal class RolesType
		{
			internal RoleType AvailableToPromise;
			internal RoleType Thumbnail;
			internal RoleType InventoryItemKind;
			internal RoleType BarCode;
			internal RoleType FinishedGood;
			internal RoleType Sku;
			internal RoleType ArticleNumber;
			internal RoleType ManufacturerId;
			internal RoleType ProductSubstitution;
			internal RoleType ProductIncompatibility;
			internal RoleType Photo;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AvailableToPromise;
			internal ConcreteRoleType Thumbnail;
			internal ConcreteRoleType InventoryItemKind;
			internal ConcreteRoleType BarCode;
			internal ConcreteRoleType FinishedGood;
			internal ConcreteRoleType Sku;
			internal ConcreteRoleType ArticleNumber;
			internal ConcreteRoleType ManufacturerId;
			internal ConcreteRoleType ProductSubstitution;
			internal ConcreteRoleType ProductIncompatibility;
			internal ConcreteRoleType Photo;
			internal ConcreteRoleType PrimaryProductCategory;
			internal ConcreteRoleType SupportDiscontinuationDate;
			internal ConcreteRoleType SalesDiscontinuationDate;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType VirtualProductPriceComponent;
			internal ConcreteRoleType IntrastatCode;
			internal ConcreteRoleType ProductCategoryExpanded;
			internal ConcreteRoleType ProductComplement;
			internal ConcreteRoleType OptionalFeature;
			internal ConcreteRoleType ManufacturedBy;
			internal ConcreteRoleType Variant;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IntroductionDate;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType StandardFeature;
			internal ConcreteRoleType UnitOfMeasure;
			internal ConcreteRoleType EstimatedProductCost;
			internal ConcreteRoleType ProductObsolescence;
			internal ConcreteRoleType SelectableFeature;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType BasePrice;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType SoldBy;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EngineeringChangeObjectStateClass : Class
	{
		public static EngineeringChangeObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EngineeringChangeObjectStateClass() : base(AppsDomain.Instance, new Guid("e3f78cf6-6367-4b0f-9ac0-b887e7187c5e"))
        {
			this.SingularName = "EngineeringChangeObjectState";
			this.PluralName = "EngineeringChangeObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5ed6c227-75ee-477f-a235-68c76a7b4af7"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class AccountingTransactionDetailClass : Class
	{
		public static AccountingTransactionDetailClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AccountingTransactionDetailClass() : base(AppsDomain.Instance, new Guid("e41be1b2-715b-4bc0-b095-ac23d9950ee4"))
        {
			this.SingularName = "AccountingTransactionDetail";
			this.PluralName = "AccountingTransactionDetails";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ec4c9420-7cb4-4311-9eff-5e6592102701"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var AccountingTransactionDetailAssociatedWith = new RelationType(AppsDomain.Instance, new Guid("63447735-fdfc-4f32-ab89-d848903d71eb"), new Guid("8207e741-2250-4b1a-a6aa-86ca531c9d7c"), new Guid("6bba133d-e323-4acd-a26e-2cb4ee6d8821"));
			AccountingTransactionDetailAssociatedWith.AssignedMultiplicity = Multiplicity.ManyToOne;
			AccountingTransactionDetailAssociatedWith.IsIndexed = true;

			AccountingTransactionDetailAssociatedWith.AssociationType.ObjectType = this;

			AccountingTransactionDetailAssociatedWith.RoleType.ObjectType = AccountingTransactionDetailClass.Instance;;
			AccountingTransactionDetailAssociatedWith.RoleType.AssignedSingularName = "AssociatedWith";
			AccountingTransactionDetailAssociatedWith.RoleType.AssignedPluralName = "AssociatedWiths";
			this.Roles.AssociatedWith = AccountingTransactionDetailAssociatedWith.RoleType;

			var AccountingTransactionDetailOrganisationGlAccountBalance = new RelationType(AppsDomain.Instance, new Guid("644b956b-58e3-465b-b431-5637d9a209e5"), new Guid("1d6d156a-ac84-4453-9efc-40840539d48b"), new Guid("8cdd505a-f5f9-4e85-a49d-d88673f08004"));
			AccountingTransactionDetailOrganisationGlAccountBalance.AssignedMultiplicity = Multiplicity.ManyToOne;
			AccountingTransactionDetailOrganisationGlAccountBalance.IsIndexed = true;

			AccountingTransactionDetailOrganisationGlAccountBalance.AssociationType.ObjectType = this;

			AccountingTransactionDetailOrganisationGlAccountBalance.RoleType.ObjectType = OrganisationGlAccountBalanceClass.Instance;;
			AccountingTransactionDetailOrganisationGlAccountBalance.RoleType.AssignedSingularName = "OrganisationGlAccountBalance";
			AccountingTransactionDetailOrganisationGlAccountBalance.RoleType.AssignedPluralName = "OrganisationGlAccountBalances";
			this.Roles.OrganisationGlAccountBalance = AccountingTransactionDetailOrganisationGlAccountBalance.RoleType;

			var AccountingTransactionDetailAmount = new RelationType(AppsDomain.Instance, new Guid("9b5a3978-9859-432a-939b-73838c2bb3b2"), new Guid("bc276111-7fc2-4ae0-a3d8-ac9af05229b2"), new Guid("f2f407bb-7350-4d02-95ea-e35e680a352d"));
			AccountingTransactionDetailAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingTransactionDetailAmount.AssociationType.ObjectType = this;

			AccountingTransactionDetailAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			AccountingTransactionDetailAmount.RoleType.AssignedSingularName = "Amount";
			AccountingTransactionDetailAmount.RoleType.AssignedPluralName = "Amounts";
			AccountingTransactionDetailAmount.RoleType.Scale = 2;
			AccountingTransactionDetailAmount.RoleType.Precision = 19;
			this.Roles.Amount = AccountingTransactionDetailAmount.RoleType;

			var AccountingTransactionDetailDebit = new RelationType(AppsDomain.Instance, new Guid("d04a0632-e5ec-4a06-bc57-413cf58d2086"), new Guid("e874eb66-e9d3-4bb5-bac0-b322d3db4fd5"), new Guid("c457a4ce-368f-4956-8749-4a66d703c59b"));
			AccountingTransactionDetailDebit.AssignedMultiplicity = Multiplicity.OneToOne;
			AccountingTransactionDetailDebit.AssociationType.ObjectType = this;

			AccountingTransactionDetailDebit.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			AccountingTransactionDetailDebit.RoleType.AssignedSingularName = "Debit";
			AccountingTransactionDetailDebit.RoleType.AssignedPluralName = "Debits";
			this.Roles.Debit = AccountingTransactionDetailDebit.RoleType;


		}

		internal override void SetRelationTypes()
		{
			AccountingTransactionDetailClass.Instance.ConcreteRoles.AssociatedWith = AccountingTransactionDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssociatedWith]; 

			AccountingTransactionDetailClass.Instance.ConcreteRoles.OrganisationGlAccountBalance = AccountingTransactionDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrganisationGlAccountBalance]; 

			AccountingTransactionDetailClass.Instance.ConcreteRoles.Amount = AccountingTransactionDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 

			AccountingTransactionDetailClass.Instance.ConcreteRoles.Debit = AccountingTransactionDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Debit]; 


		}

		internal class RolesType
		{
			internal RoleType AssociatedWith;
			internal RoleType OrganisationGlAccountBalance;
			internal RoleType Amount;
			internal RoleType Debit;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType AssociatedWith;
			internal ConcreteRoleType OrganisationGlAccountBalance;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType Debit;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CountyClass : Class
	{
		public static CountyClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CountyClass() : base(AppsDomain.Instance, new Guid("e6f97f86-6aec-4dde-b828-4de04d42c248"))
        {
			this.SingularName = "County";
			this.PluralName = "Counties";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4f9d201a-e84b-4c34-8363-09abb27245f3"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("d6ae4dff-bcb9-4662-9f19-bd140fddf414"))
			{
				Subtype = Instance,
				Supertype = CityBoundInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("f062668d-5f0f-4753-b9ce-f5c1076c3a9f"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CountyName = new RelationType(AppsDomain.Instance, new Guid("89a67d5c-8f78-41aa-9152-91f8496535bc"), new Guid("93664b6a-08d3-48b7-aada-214db9d19cb8"), new Guid("20477c4e-3c7f-4239-a5ae-313465682966"));
			CountyName.AssignedMultiplicity = Multiplicity.OneToOne;
			CountyName.AssociationType.ObjectType = this;

			CountyName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CountyName.RoleType.AssignedSingularName = "Name";
			CountyName.RoleType.AssignedPluralName = "Names";
			CountyName.RoleType.Size = 256;
			this.Roles.Name = CountyName.RoleType;

			var CountyState = new RelationType(AppsDomain.Instance, new Guid("926ce4e6-cc76-4005-964f-f4d5af5fe944"), new Guid("71bf2977-eb86-4c5d-84f3-7ee97412e460"), new Guid("66743b3b-180e-4a8d-baec-b728fd4ed29c"));
			CountyState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CountyState.IsIndexed = true;

			CountyState.AssociationType.ObjectType = this;

			CountyState.RoleType.ObjectType = StateClass.Instance;;
			CountyState.RoleType.AssignedSingularName = "State";
			CountyState.RoleType.AssignedPluralName = "States";
			this.Roles.State = CountyState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CountyClass.Instance.ConcreteRoles.Name = CountyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			CountyClass.Instance.ConcreteRoles.State = CountyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.State]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType State;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType State;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType City;

		}
	}public partial class ShippingAndHandlingChargeClass : Class
	{
		public static ShippingAndHandlingChargeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ShippingAndHandlingChargeClass() : base(AppsDomain.Instance, new Guid("e7625d17-2485-4894-ba1a-c565b8c6052c"))
        {
			this.SingularName = "ShippingAndHandlingCharge";
			this.PluralName = "ShippingAndHandlingCharges";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("c479419d-be07-42b8-9b0b-3cbc38a37a4a"))
			{
				Subtype = Instance,
				Supertype = OrderAdjustmentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType Percentage;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PerformanceReviewItemTypeClass : Class
	{
		public static PerformanceReviewItemTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PerformanceReviewItemTypeClass() : base(AppsDomain.Instance, new Guid("e80a9fe3-027b-4abd-acfb-99e3db9da70c"))
        {
			this.SingularName = "PerformanceReviewItemType";
			this.PluralName = "PerformanceReviewItemTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("fd429483-6625-4dd7-be18-76add0bf3870"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PostalBoundaryClass : Class
	{
		public static PostalBoundaryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PostalBoundaryClass() : base(AppsDomain.Instance, new Guid("e94bf9e1-373d-49e3-a0fe-f21a8b1525d4"))
        {
			this.SingularName = "PostalBoundary";
			this.PluralName = "PostalBoundaries";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("db2b6a67-26d1-4d11-9ed9-8202d937ff76"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PostalBoundaryPostalCode = new RelationType(AppsDomain.Instance, new Guid("2edd7f54-5596-46c1-9f8a-813c947d95fb"), new Guid("61f54d7a-9ad7-447e-ae79-227833f2473c"), new Guid("68f52b6f-6feb-4e22-ae1a-8ef8334c578f"));
			PostalBoundaryPostalCode.AssignedMultiplicity = Multiplicity.OneToOne;
			PostalBoundaryPostalCode.AssociationType.ObjectType = this;

			PostalBoundaryPostalCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PostalBoundaryPostalCode.RoleType.AssignedSingularName = "PostalCode";
			PostalBoundaryPostalCode.RoleType.AssignedPluralName = "PostalCodes";
			PostalBoundaryPostalCode.RoleType.Size = 256;
			this.Roles.PostalCode = PostalBoundaryPostalCode.RoleType;

			var PostalBoundaryLocality = new RelationType(AppsDomain.Instance, new Guid("7166cc1b-1f00-4cef-9875-8092cd4a76a0"), new Guid("cb2ca991-e054-44af-b6d1-d860072a0859"), new Guid("dea67366-e6ec-4f64-b450-68c6bae4fec7"));
			PostalBoundaryLocality.AssignedMultiplicity = Multiplicity.OneToOne;
			PostalBoundaryLocality.AssociationType.ObjectType = this;

			PostalBoundaryLocality.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PostalBoundaryLocality.RoleType.AssignedSingularName = "Locality";
			PostalBoundaryLocality.RoleType.AssignedPluralName = "Localities";
			PostalBoundaryLocality.RoleType.Size = 256;
			this.Roles.Locality = PostalBoundaryLocality.RoleType;

			var PostalBoundaryCountry = new RelationType(AppsDomain.Instance, new Guid("c0e1c31b-5506-48c0-b46f-239f89eca08f"), new Guid("09a54b9f-1461-4956-ba7a-fc6f086abf77"), new Guid("226183cc-ae5d-4292-982b-aba15304ab70"));
			PostalBoundaryCountry.AssignedMultiplicity = Multiplicity.ManyToOne;
			PostalBoundaryCountry.IsIndexed = true;

			PostalBoundaryCountry.AssociationType.ObjectType = this;

			PostalBoundaryCountry.RoleType.ObjectType = CountryClass.Instance;;
			PostalBoundaryCountry.RoleType.AssignedSingularName = "Country";
			PostalBoundaryCountry.RoleType.AssignedPluralName = "Countries";
			this.Roles.Country = PostalBoundaryCountry.RoleType;

			var PostalBoundaryRegion = new RelationType(AppsDomain.Instance, new Guid("d92c5fd4-68e9-402b-b540-86053df1b70d"), new Guid("ce1593e7-a08d-43f3-a6af-ea5800ff9d3b"), new Guid("f35bdd80-6821-4d72-8cd7-a8f4d0542fc4"));
			PostalBoundaryRegion.AssignedMultiplicity = Multiplicity.OneToOne;
			PostalBoundaryRegion.AssociationType.ObjectType = this;

			PostalBoundaryRegion.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PostalBoundaryRegion.RoleType.AssignedSingularName = "Region";
			PostalBoundaryRegion.RoleType.AssignedPluralName = "Regions";
			PostalBoundaryRegion.RoleType.Size = 256;
			this.Roles.Region = PostalBoundaryRegion.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PostalBoundaryClass.Instance.ConcreteRoles.PostalCode = PostalBoundaryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PostalCode]; 

			PostalBoundaryClass.Instance.ConcreteRoles.Locality = PostalBoundaryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locality]; 

			PostalBoundaryClass.Instance.ConcreteRoles.Country = PostalBoundaryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Country]; 

			PostalBoundaryClass.Instance.ConcreteRoles.Region = PostalBoundaryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Region]; 


		}

		internal class RolesType
		{
			internal RoleType PostalCode;
			internal RoleType Locality;
			internal RoleType Country;
			internal RoleType Region;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType PostalCode;
			internal ConcreteRoleType Locality;
			internal ConcreteRoleType Country;
			internal ConcreteRoleType Region;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProductCategoryClass : Class
	{
		public static ProductCategoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductCategoryClass() : base(AppsDomain.Instance, new Guid("ea83087e-05cc-458c-a6ba-3ce947644a0f"))
        {
			this.SingularName = "ProductCategory";
			this.PluralName = "ProductCategories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("02319e82-f200-4195-ab85-6b6ba8eb3485"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("c850b268-59f5-4517-bc32-c7b377f64eb8"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductCategoryPackage = new RelationType(AppsDomain.Instance, new Guid("049849d5-514b-418d-8397-29db6671b4fa"), new Guid("51631226-3c9e-46a5-9748-b9ab44e36173"), new Guid("11d9ba5c-1012-4442-893b-223d21ba7df7"));
			ProductCategoryPackage.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductCategoryPackage.IsIndexed = true;

			ProductCategoryPackage.AssociationType.ObjectType = this;

			ProductCategoryPackage.RoleType.ObjectType = PackageClass.Instance;;
			ProductCategoryPackage.RoleType.AssignedSingularName = "Package";
			ProductCategoryPackage.RoleType.AssignedPluralName = "Packages";
			this.Roles.Package = ProductCategoryPackage.RoleType;

			var ProductCategoryCode = new RelationType(AppsDomain.Instance, new Guid("22b7b6ef-7adf-424d-a675-d5338478ed44"), new Guid("b80ca91e-846f-4af6-a3a7-b361ef7b6058"), new Guid("55f938db-31e5-468c-90ad-1f7db319afce"));
			ProductCategoryCode.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductCategoryCode.IsIndexed = true;

			ProductCategoryCode.AssociationType.ObjectType = this;

			ProductCategoryCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProductCategoryCode.RoleType.AssignedSingularName = "Code";
			ProductCategoryCode.RoleType.AssignedPluralName = "Codes";
			ProductCategoryCode.RoleType.Size = 256;
			this.Roles.Code = ProductCategoryCode.RoleType;

			var ProductCategoryNoImageAvailableImage = new RelationType(AppsDomain.Instance, new Guid("25367f24-0f84-44f2-adce-ea3c082b6449"), new Guid("729444e1-4cdb-4090-a83b-bfff6d72ac95"), new Guid("956368ba-ca75-4e93-be53-6c0cfc41d704"));
			ProductCategoryNoImageAvailableImage.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductCategoryNoImageAvailableImage.IsIndexed = true;

			ProductCategoryNoImageAvailableImage.AssociationType.ObjectType = this;

			ProductCategoryNoImageAvailableImage.RoleType.ObjectType = MediaClass.Instance;;
			ProductCategoryNoImageAvailableImage.RoleType.AssignedSingularName = "NoImageAvailableImage";
			ProductCategoryNoImageAvailableImage.RoleType.AssignedPluralName = "NoImageAvailableImages";
			this.Roles.NoImageAvailableImage = ProductCategoryNoImageAvailableImage.RoleType;

			var ProductCategoryParent = new RelationType(AppsDomain.Instance, new Guid("2dcea42e-2c3d-483c-b514-b7bd418318ab"), new Guid("98564463-d7a9-4605-997c-2ceacb5c3302"), new Guid("f8ad2d5e-eab0-4c5b-8cb7-35b3439e62e6"));
			ProductCategoryParent.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductCategoryParent.IsIndexed = true;

			ProductCategoryParent.AssociationType.ObjectType = this;

			ProductCategoryParent.RoleType.ObjectType = ProductCategoryClass.Instance;;
			ProductCategoryParent.RoleType.AssignedSingularName = "Parent";
			ProductCategoryParent.RoleType.AssignedPluralName = "Parents";
			this.Roles.Parent = ProductCategoryParent.RoleType;

			var ProductCategoryChild = new RelationType(AppsDomain.Instance, new Guid("6ad49c7d-8c4e-455b-8073-a5ef72e92725"), new Guid("a1d92298-5c2e-42eb-bf1b-1e15a07f1eac"), new Guid("6b6cf3e5-c1ca-4502-ad27-85c33db1f183"));
			ProductCategoryChild.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductCategoryChild.IsDerived = true;
			ProductCategoryChild.IsIndexed = true;

			ProductCategoryChild.AssociationType.ObjectType = this;

			ProductCategoryChild.RoleType.ObjectType = ProductCategoryClass.Instance;;
			ProductCategoryChild.RoleType.AssignedSingularName = "Child";
			ProductCategoryChild.RoleType.AssignedPluralName = "Children";
			this.Roles.Child = ProductCategoryChild.RoleType;

			var ProductCategoryDescription = new RelationType(AppsDomain.Instance, new Guid("743985f3-cfee-45b5-b971-30adf46b5297"), new Guid("9bc06415-c87c-44ab-8644-6a3d53595bd1"), new Guid("22e25946-7262-4fc3-a6ee-d9a25494298a"));
			ProductCategoryDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductCategoryDescription.AssociationType.ObjectType = this;

			ProductCategoryDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProductCategoryDescription.RoleType.AssignedSingularName = "Description";
			ProductCategoryDescription.RoleType.AssignedPluralName = "Descriptions";
			ProductCategoryDescription.RoleType.Size = 256;
			this.Roles.Description = ProductCategoryDescription.RoleType;

			var ProductCategoryName = new RelationType(AppsDomain.Instance, new Guid("8af8b1b1-a711-4e98-a6a0-2948f2d1f315"), new Guid("042e65b2-6df9-4e76-91bd-7766e935cbfe"), new Guid("991971a4-4ced-4cad-a7a5-48cde31f5e95"));
			ProductCategoryName.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductCategoryName.AssociationType.ObjectType = this;

			ProductCategoryName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ProductCategoryName.RoleType.AssignedSingularName = "Name";
			ProductCategoryName.RoleType.AssignedPluralName = "Names";
			ProductCategoryName.RoleType.Size = 256;
			this.Roles.Name = ProductCategoryName.RoleType;

			var ProductCategoryCategoryImage = new RelationType(AppsDomain.Instance, new Guid("9f50cbbc-d0af-46e6-8e04-2bfb0bf1facf"), new Guid("4fe64d4c-747c-4e8f-a657-8174eb8e0b73"), new Guid("bdd11ee4-ade5-46f3-a2b1-2fbb0261ae14"));
			ProductCategoryCategoryImage.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductCategoryCategoryImage.IsIndexed = true;

			ProductCategoryCategoryImage.AssociationType.ObjectType = this;

			ProductCategoryCategoryImage.RoleType.ObjectType = MediaClass.Instance;;
			ProductCategoryCategoryImage.RoleType.AssignedSingularName = "CategoryImage";
			ProductCategoryCategoryImage.RoleType.AssignedPluralName = "CategoryImages";
			this.Roles.CategoryImage = ProductCategoryCategoryImage.RoleType;

			var ProductCategoryAncestor = new RelationType(AppsDomain.Instance, new Guid("b02c92d3-8b3a-4ce0-a49d-5c608a25b7d4"), new Guid("b01ed533-259c-429c-8827-c61222896b8f"), new Guid("7efeb782-6278-4482-8cbb-b46d2a146e96"));
			ProductCategoryAncestor.AssignedMultiplicity = Multiplicity.ManyToMany;
			ProductCategoryAncestor.IsDerived = true;
			ProductCategoryAncestor.IsIndexed = true;

			ProductCategoryAncestor.AssociationType.ObjectType = this;

			ProductCategoryAncestor.RoleType.ObjectType = ProductCategoryClass.Instance;;
			ProductCategoryAncestor.RoleType.AssignedSingularName = "Ancestor";
			ProductCategoryAncestor.RoleType.AssignedPluralName = "Ancestors";
			this.Roles.Ancestor = ProductCategoryAncestor.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductCategoryClass.Instance.ConcreteRoles.Package = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Package]; 

			ProductCategoryClass.Instance.ConcreteRoles.Code = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Code]; 

			ProductCategoryClass.Instance.ConcreteRoles.NoImageAvailableImage = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NoImageAvailableImage]; 

			ProductCategoryClass.Instance.ConcreteRoles.Parent = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Parent]; 

			ProductCategoryClass.Instance.ConcreteRoles.Child = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Child]; 

			ProductCategoryClass.Instance.ConcreteRoles.Description = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			ProductCategoryClass.Instance.ConcreteRoles.Name = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			ProductCategoryClass.Instance.ConcreteRoles.CategoryImage = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CategoryImage]; 

			ProductCategoryClass.Instance.ConcreteRoles.Ancestor = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Ancestor]; 


		}

		internal class RolesType
		{
			internal RoleType Package;
			internal RoleType Code;
			internal RoleType NoImageAvailableImage;
			internal RoleType Parent;
			internal RoleType Child;
			internal RoleType Description;
			internal RoleType Name;
			internal RoleType CategoryImage;
			internal RoleType Ancestor;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Package;
			internal ConcreteRoleType Code;
			internal ConcreteRoleType NoImageAvailableImage;
			internal ConcreteRoleType Parent;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType CategoryImage;
			internal ConcreteRoleType Ancestor;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class RequestForInformationClass : Class
	{
		public static RequestForInformationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RequestForInformationClass() : base(AppsDomain.Instance, new Guid("eab85f26-c3f4-4f47-97dc-8f9429856c00"))
        {
			this.SingularName = "RequestForInformation";
			this.PluralName = "RequestsForInformation";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ef1c92bf-6afe-43cf-9107-6c13db7086fa"))
			{
				Subtype = Instance,
				Supertype = RequestInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Description;
			internal ConcreteRoleType RequiredResponseDate;
			internal ConcreteRoleType RequestItem;
			internal ConcreteRoleType RequestNumber;
			internal ConcreteRoleType RespondingParty;
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;

		}
	}public partial class CountryBoundInterface: Interface
	{
		public static CountryBoundInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal CountryBoundInterface() : base(AppsDomain.Instance, new Guid("eaebcfe7-0d65-43ab-857c-b171086a1982"))
        {
			this.SingularName = "CountryBound";
			this.PluralName = "CountryBounds";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("49bed169-35f0-4f7c-94ff-dbafcbec5984"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var CountryBoundCountry = new RelationType(AppsDomain.Instance, new Guid("095460a7-fffa-4c94-8b51-a4fd9fb80a2e"), new Guid("f5aa22da-64f3-447a-864c-4db5b77d221b"), new Guid("799ab886-ce30-4270-8293-6c302d17e3e3"));
			CountryBoundCountry.AssignedMultiplicity = Multiplicity.ManyToOne;
			CountryBoundCountry.IsIndexed = true;

			CountryBoundCountry.AssociationType.ObjectType = this;

			CountryBoundCountry.RoleType.ObjectType = CountryClass.Instance;;
			CountryBoundCountry.RoleType.AssignedSingularName = "Country";
			CountryBoundCountry.RoleType.AssignedPluralName = "Countries";
			this.Roles.Country = CountryBoundCountry.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TerritoryClass.Instance.ConcreteRoles.Country = TerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Country]; 
			PostalCodeClass.Instance.ConcreteRoles.Country = PostalCodeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Country]; 
			ProvinceClass.Instance.ConcreteRoles.Country = ProvinceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Country]; 
			StateClass.Instance.ConcreteRoles.Country = StateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Country]; 
			CityClass.Instance.ConcreteRoles.Country = CityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Country]; 


		}

		internal class RolesType
		{
			internal RoleType Country;

		}
	}public partial class VatFormClass : Class
	{
		public static VatFormClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal VatFormClass() : base(AppsDomain.Instance, new Guid("eba70b57-05e3-487f-8cf1-45f14fcdc3b9"))
        {
			this.SingularName = "VatForm";
			this.PluralName = "VatForms";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1703a7f5-2e32-4adb-92a9-9bb5d2d0a170"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var VatFormName = new RelationType(AppsDomain.Instance, new Guid("180f9887-5973-4c4a-9277-a383e4f66bc6"), new Guid("db1bf9e9-dc26-40e1-aa5d-c863955e2947"), new Guid("5a3a106c-8a5e-4a4b-b86e-311853aa4353"));
			VatFormName.AssignedMultiplicity = Multiplicity.OneToOne;
			VatFormName.AssociationType.ObjectType = this;

			VatFormName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			VatFormName.RoleType.AssignedSingularName = "Name";
			VatFormName.RoleType.AssignedPluralName = "Names";
			VatFormName.RoleType.Size = 256;
			this.Roles.Name = VatFormName.RoleType;

			var VatFormVatReturnBox = new RelationType(AppsDomain.Instance, new Guid("f3683ece-e247-490f-be4f-4fe12e5cfd06"), new Guid("e8a9518b-d33b-4db5-ac01-6283028a7e1f"), new Guid("657b667e-cd15-4671-bc18-9f49c8aa04e6"));
			VatFormVatReturnBox.AssignedMultiplicity = Multiplicity.OneToMany;
			VatFormVatReturnBox.IsIndexed = true;

			VatFormVatReturnBox.AssociationType.ObjectType = this;

			VatFormVatReturnBox.RoleType.ObjectType = VatReturnBoxClass.Instance;;
			VatFormVatReturnBox.RoleType.AssignedSingularName = "VatReturnBox";
			VatFormVatReturnBox.RoleType.AssignedPluralName = "VatReturnBoxes";
			this.Roles.VatReturnBox = VatFormVatReturnBox.RoleType;


		}

		internal override void SetRelationTypes()
		{
			VatFormClass.Instance.ConcreteRoles.Name = VatFormClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			VatFormClass.Instance.ConcreteRoles.VatReturnBox = VatFormClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatReturnBox]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType VatReturnBox;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType VatReturnBox;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class BudgetRevisionImpactClass : Class
	{
		public static BudgetRevisionImpactClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BudgetRevisionImpactClass() : base(AppsDomain.Instance, new Guid("ebae3ca2-5dca-486d-bbc0-30550313f153"))
        {
			this.SingularName = "BudgetRevisionImpact";
			this.PluralName = "BudgetRevisionImpacts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("e999e0ef-c250-496a-a16b-26058e1ed187"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var BudgetRevisionImpactBudgetItem = new RelationType(AppsDomain.Instance, new Guid("16b0c91f-5746-4ebe-a071-7c42887cccb1"), new Guid("d8f69482-e661-4447-b055-7f3806cace95"), new Guid("ca98b59f-ac83-457f-a5fd-24b35347ea14"));
			BudgetRevisionImpactBudgetItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			BudgetRevisionImpactBudgetItem.IsIndexed = true;

			BudgetRevisionImpactBudgetItem.AssociationType.ObjectType = this;

			BudgetRevisionImpactBudgetItem.RoleType.ObjectType = BudgetItemClass.Instance;;
			BudgetRevisionImpactBudgetItem.RoleType.AssignedSingularName = "BudgetItem";
			BudgetRevisionImpactBudgetItem.RoleType.AssignedPluralName = "BudgetItems";
			this.Roles.BudgetItem = BudgetRevisionImpactBudgetItem.RoleType;

			var BudgetRevisionImpactReason = new RelationType(AppsDomain.Instance, new Guid("55e9b1e3-0545-471e-97b0-07d8968629c2"), new Guid("87269928-a93d-43b3-82d5-4d26d771b113"), new Guid("972f8cb7-72bf-42bd-bf7f-405cbe9f8497"));
			BudgetRevisionImpactReason.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetRevisionImpactReason.AssociationType.ObjectType = this;

			BudgetRevisionImpactReason.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BudgetRevisionImpactReason.RoleType.AssignedSingularName = "Reason";
			BudgetRevisionImpactReason.RoleType.AssignedPluralName = "Reasons";
			BudgetRevisionImpactReason.RoleType.Size = -1;
			this.Roles.Reason = BudgetRevisionImpactReason.RoleType;

			var BudgetRevisionImpactDeleted = new RelationType(AppsDomain.Instance, new Guid("6b3a80c1-eff1-478c-a54e-4912bc4a1242"), new Guid("c8f87804-9940-491d-a6aa-3b4dd888a016"), new Guid("d187ff95-ee86-4d13-90b2-64adebc19be7"));
			BudgetRevisionImpactDeleted.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetRevisionImpactDeleted.AssociationType.ObjectType = this;

			BudgetRevisionImpactDeleted.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			BudgetRevisionImpactDeleted.RoleType.AssignedSingularName = "Deleted";
			BudgetRevisionImpactDeleted.RoleType.AssignedPluralName = "DeletedPlural";
			this.Roles.Deleted = BudgetRevisionImpactDeleted.RoleType;

			var BudgetRevisionImpactAdded = new RelationType(AppsDomain.Instance, new Guid("7d0ad499-1e3d-41cd-bc6c-79aac1a7fa57"), new Guid("d409452f-bd4f-4c71-b71b-8512068d3ce8"), new Guid("ba16d574-8bea-45b8-9da0-f9f14f21ca5f"));
			BudgetRevisionImpactAdded.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetRevisionImpactAdded.AssociationType.ObjectType = this;

			BudgetRevisionImpactAdded.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			BudgetRevisionImpactAdded.RoleType.AssignedSingularName = "Added";
			BudgetRevisionImpactAdded.RoleType.AssignedPluralName = "AddedPlural";
			this.Roles.Added = BudgetRevisionImpactAdded.RoleType;

			var BudgetRevisionImpactRevisedAmount = new RelationType(AppsDomain.Instance, new Guid("80106b6d-8e1d-4db1-a4eb-71a56e9a4c94"), new Guid("81e2607d-d1fc-475d-8a19-b60c34fae7f9"), new Guid("80d4b2a2-f67e-4e76-b527-5b2d067a0499"));
			BudgetRevisionImpactRevisedAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetRevisionImpactRevisedAmount.AssociationType.ObjectType = this;

			BudgetRevisionImpactRevisedAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			BudgetRevisionImpactRevisedAmount.RoleType.AssignedSingularName = "RevisedAmount";
			BudgetRevisionImpactRevisedAmount.RoleType.AssignedPluralName = "RevisedAmounts";
			BudgetRevisionImpactRevisedAmount.RoleType.Scale = 2;
			BudgetRevisionImpactRevisedAmount.RoleType.Precision = 19;
			this.Roles.RevisedAmount = BudgetRevisionImpactRevisedAmount.RoleType;

			var BudgetRevisionImpactBudgetRevision = new RelationType(AppsDomain.Instance, new Guid("b93df76d-439a-45cf-885d-4887afe5fd6f"), new Guid("ed0a9f21-20e3-4f26-a020-5b0afc8ec335"), new Guid("dd1b9041-cff6-4d03-9215-d963a1c2a992"));
			BudgetRevisionImpactBudgetRevision.AssignedMultiplicity = Multiplicity.ManyToOne;
			BudgetRevisionImpactBudgetRevision.IsIndexed = true;

			BudgetRevisionImpactBudgetRevision.AssociationType.ObjectType = this;

			BudgetRevisionImpactBudgetRevision.RoleType.ObjectType = BudgetRevisionClass.Instance;;
			BudgetRevisionImpactBudgetRevision.RoleType.AssignedSingularName = "BudgetRevision";
			BudgetRevisionImpactBudgetRevision.RoleType.AssignedPluralName = "BudgetRevisions";
			this.Roles.BudgetRevision = BudgetRevisionImpactBudgetRevision.RoleType;


		}

		internal override void SetRelationTypes()
		{
			BudgetRevisionImpactClass.Instance.ConcreteRoles.BudgetItem = BudgetRevisionImpactClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetItem]; 

			BudgetRevisionImpactClass.Instance.ConcreteRoles.Reason = BudgetRevisionImpactClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Reason]; 

			BudgetRevisionImpactClass.Instance.ConcreteRoles.Deleted = BudgetRevisionImpactClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Deleted]; 

			BudgetRevisionImpactClass.Instance.ConcreteRoles.Added = BudgetRevisionImpactClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Added]; 

			BudgetRevisionImpactClass.Instance.ConcreteRoles.RevisedAmount = BudgetRevisionImpactClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.RevisedAmount]; 

			BudgetRevisionImpactClass.Instance.ConcreteRoles.BudgetRevision = BudgetRevisionImpactClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetRevision]; 


		}

		internal class RolesType
		{
			internal RoleType BudgetItem;
			internal RoleType Reason;
			internal RoleType Deleted;
			internal RoleType Added;
			internal RoleType RevisedAmount;
			internal RoleType BudgetRevision;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType BudgetItem;
			internal ConcreteRoleType Reason;
			internal ConcreteRoleType Deleted;
			internal ConcreteRoleType Added;
			internal ConcreteRoleType RevisedAmount;
			internal ConcreteRoleType BudgetRevision;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class BudgetInterface: Interface
	{
		public static BudgetInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal BudgetInterface() : base(AppsDomain.Instance, new Guid("ebd4da8c-b86a-4317-86b9-e90a02994dcc"))
        {
			this.SingularName = "Budget";
			this.PluralName = "Budgets";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("440cafac-e072-4f7b-88d6-cb8691bdaff8"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("4a8a466c-f53d-45c6-b3af-7db13fa54bbd"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("69c12833-dd88-4898-9559-e8a0429e4b03"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("d445b9eb-0699-4207-806e-522bfcd6d3a2"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e70b3210-1dbf-4111-9b62-2013cfd8cba5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var BudgetDescription = new RelationType(AppsDomain.Instance, new Guid("1848add9-ab90-4191-b7f1-eb392be3ec4e"), new Guid("8232c215-e592-4ec7-8c44-391c917b7e89"), new Guid("5e27d83d-a601-4101-b4dd-7eef98de82e8"));
			BudgetDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetDescription.AssociationType.ObjectType = this;

			BudgetDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BudgetDescription.RoleType.AssignedSingularName = "Description";
			BudgetDescription.RoleType.AssignedPluralName = "Descriptions";
			BudgetDescription.RoleType.Size = 256;
			this.Roles.Description = BudgetDescription.RoleType;

			var BudgetBudgetRevision = new RelationType(AppsDomain.Instance, new Guid("1c3dd3b4-b514-4a42-965f-d3200325d78c"), new Guid("dccc1ed1-0cac-4e25-a7ee-5848af5b390e"), new Guid("684c491e-c764-4d83-a11f-d3cf80d671ad"));
			BudgetBudgetRevision.AssignedMultiplicity = Multiplicity.OneToMany;
			BudgetBudgetRevision.IsIndexed = true;

			BudgetBudgetRevision.AssociationType.ObjectType = this;

			BudgetBudgetRevision.RoleType.ObjectType = BudgetRevisionClass.Instance;;
			BudgetBudgetRevision.RoleType.AssignedSingularName = "BudgetRevision";
			BudgetBudgetRevision.RoleType.AssignedPluralName = "BudgetRevisions";
			this.Roles.BudgetRevision = BudgetBudgetRevision.RoleType;

			var BudgetBudgetStatus = new RelationType(AppsDomain.Instance, new Guid("2163a044-c967-4137-b1d0-dfd3fac80869"), new Guid("3ec284eb-944c-4ff0-8e24-9be0ceeda22a"), new Guid("f02d72a7-2547-44dc-bb8b-42e58afe186d"));
			BudgetBudgetStatus.AssignedMultiplicity = Multiplicity.OneToMany;
			BudgetBudgetStatus.IsDerived = true;
			BudgetBudgetStatus.IsIndexed = true;

			BudgetBudgetStatus.AssociationType.ObjectType = this;

			BudgetBudgetStatus.RoleType.ObjectType = BudgetStatusClass.Instance;;
			BudgetBudgetStatus.RoleType.AssignedSingularName = "BudgetStatus";
			BudgetBudgetStatus.RoleType.AssignedPluralName = "BudgetStatuses";
			this.Roles.BudgetStatus = BudgetBudgetStatus.RoleType;

			var BudgetBudgetNumber = new RelationType(AppsDomain.Instance, new Guid("494d04ef-aafc-4482-a5c2-4ec9fa93d158"), new Guid("eda25f81-bba9-4e23-9074-4e22338ace23"), new Guid("d2a2990a-2966-4302-8c18-0884915f9d33"));
			BudgetBudgetNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetBudgetNumber.AssociationType.ObjectType = this;

			BudgetBudgetNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			BudgetBudgetNumber.RoleType.AssignedSingularName = "BudgetNumber";
			BudgetBudgetNumber.RoleType.AssignedPluralName = "BudgetNumbers";
			BudgetBudgetNumber.RoleType.Size = 256;
			this.Roles.BudgetNumber = BudgetBudgetNumber.RoleType;

			var BudgetCurrentObjectState = new RelationType(AppsDomain.Instance, new Guid("59cbc253-e17d-4405-bea8-09ad420bf8bc"), new Guid("6f6d9d35-daf5-4a79-85ce-d662cd7ec2d4"), new Guid("a6ec675f-c28a-470e-9923-e623e0ca9c58"));
			BudgetCurrentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			BudgetCurrentObjectState.IsDerived = true;
			BudgetCurrentObjectState.IsIndexed = true;

			BudgetCurrentObjectState.AssociationType.ObjectType = this;

			BudgetCurrentObjectState.RoleType.ObjectType = BudgetObjectStateClass.Instance;;
			BudgetCurrentObjectState.RoleType.AssignedSingularName = "CurrentObjectState";
			BudgetCurrentObjectState.RoleType.AssignedPluralName = "CurrentObjectStates";
			this.Roles.CurrentObjectState = BudgetCurrentObjectState.RoleType;

			var BudgetPreviousObjectState = new RelationType(AppsDomain.Instance, new Guid("5bb46810-419d-4b1e-be3a-a360e7e35ffd"), new Guid("c7e6b216-0292-4079-a0dc-5f87e86d4f95"), new Guid("d8fabb81-7e41-4efa-b008-2ace24694d36"));
			BudgetPreviousObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			BudgetPreviousObjectState.IsDerived = true;
			BudgetPreviousObjectState.IsIndexed = true;

			BudgetPreviousObjectState.AssociationType.ObjectType = this;

			BudgetPreviousObjectState.RoleType.ObjectType = BudgetObjectStateClass.Instance;;
			BudgetPreviousObjectState.RoleType.AssignedSingularName = "PreviousObjectState";
			BudgetPreviousObjectState.RoleType.AssignedPluralName = "PreviousObjectStates";
			this.Roles.PreviousObjectState = BudgetPreviousObjectState.RoleType;

			var BudgetBudgetReview = new RelationType(AppsDomain.Instance, new Guid("834432b1-65b2-4499-a83d-71f0db6e177b"), new Guid("b7f09631-6b4c-417d-ba12-115d07d9d6f5"), new Guid("b9ba1402-ce06-4bdd-9290-165ff8e555d2"));
			BudgetBudgetReview.AssignedMultiplicity = Multiplicity.OneToMany;
			BudgetBudgetReview.IsIndexed = true;

			BudgetBudgetReview.AssociationType.ObjectType = this;

			BudgetBudgetReview.RoleType.ObjectType = BudgetReviewClass.Instance;;
			BudgetBudgetReview.RoleType.AssignedSingularName = "BudgetReview";
			BudgetBudgetReview.RoleType.AssignedPluralName = "BudgetReviews";
			this.Roles.BudgetReview = BudgetBudgetReview.RoleType;

			var BudgetCurrentBudgetStatus = new RelationType(AppsDomain.Instance, new Guid("d4d205b5-6f23-41f5-93fc-08d4d9ad0727"), new Guid("181fd812-5a57-44d5-92c7-70755df1c9e3"), new Guid("516885f8-6aee-4e63-bd38-3134ed753e28"));
			BudgetCurrentBudgetStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			BudgetCurrentBudgetStatus.IsDerived = true;
			BudgetCurrentBudgetStatus.IsIndexed = true;

			BudgetCurrentBudgetStatus.AssociationType.ObjectType = this;

			BudgetCurrentBudgetStatus.RoleType.ObjectType = BudgetStatusClass.Instance;;
			BudgetCurrentBudgetStatus.RoleType.AssignedSingularName = "CurrentBudgetStatus";
			BudgetCurrentBudgetStatus.RoleType.AssignedPluralName = "CurrentBudgetStatuses";
			this.Roles.CurrentBudgetStatus = BudgetCurrentBudgetStatus.RoleType;

			var BudgetBudgetItem = new RelationType(AppsDomain.Instance, new Guid("f6078f5b-036f-45de-ab4f-fb26b6939d11"), new Guid("ba8edec9-a429-482d-bfbd-4f7fd419eaf7"), new Guid("9b9e4779-bb7d-4edb-b432-eab76472135a"));
			BudgetBudgetItem.AssignedMultiplicity = Multiplicity.OneToMany;
			BudgetBudgetItem.IsIndexed = true;

			BudgetBudgetItem.AssociationType.ObjectType = this;

			BudgetBudgetItem.RoleType.ObjectType = BudgetItemClass.Instance;;
			BudgetBudgetItem.RoleType.AssignedSingularName = "BudgetItem";
			BudgetBudgetItem.RoleType.AssignedPluralName = "BudgetItems";
			this.Roles.BudgetItem = BudgetBudgetItem.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CapitalBudgetClass.Instance.ConcreteRoles.Description = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			AccountingPeriodClass.Instance.ConcreteRoles.Description = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			OperatingBudgetClass.Instance.ConcreteRoles.Description = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			CapitalBudgetClass.Instance.ConcreteRoles.BudgetRevision = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetRevision]; 
			AccountingPeriodClass.Instance.ConcreteRoles.BudgetRevision = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetRevision]; 
			OperatingBudgetClass.Instance.ConcreteRoles.BudgetRevision = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetRevision]; 

			CapitalBudgetClass.Instance.ConcreteRoles.BudgetStatus = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetStatus]; 
			AccountingPeriodClass.Instance.ConcreteRoles.BudgetStatus = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetStatus]; 
			OperatingBudgetClass.Instance.ConcreteRoles.BudgetStatus = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetStatus]; 

			CapitalBudgetClass.Instance.ConcreteRoles.BudgetNumber = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetNumber]; 
			AccountingPeriodClass.Instance.ConcreteRoles.BudgetNumber = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetNumber]; 
			OperatingBudgetClass.Instance.ConcreteRoles.BudgetNumber = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetNumber]; 

			CapitalBudgetClass.Instance.ConcreteRoles.CurrentObjectState = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			AccountingPeriodClass.Instance.ConcreteRoles.CurrentObjectState = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 
			OperatingBudgetClass.Instance.ConcreteRoles.CurrentObjectState = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentObjectState]; 

			CapitalBudgetClass.Instance.ConcreteRoles.PreviousObjectState = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			AccountingPeriodClass.Instance.ConcreteRoles.PreviousObjectState = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 
			OperatingBudgetClass.Instance.ConcreteRoles.PreviousObjectState = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousObjectState]; 

			CapitalBudgetClass.Instance.ConcreteRoles.BudgetReview = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetReview]; 
			AccountingPeriodClass.Instance.ConcreteRoles.BudgetReview = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetReview]; 
			OperatingBudgetClass.Instance.ConcreteRoles.BudgetReview = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetReview]; 

			CapitalBudgetClass.Instance.ConcreteRoles.CurrentBudgetStatus = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentBudgetStatus]; 
			AccountingPeriodClass.Instance.ConcreteRoles.CurrentBudgetStatus = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentBudgetStatus]; 
			OperatingBudgetClass.Instance.ConcreteRoles.CurrentBudgetStatus = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentBudgetStatus]; 

			CapitalBudgetClass.Instance.ConcreteRoles.BudgetItem = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetItem]; 
			AccountingPeriodClass.Instance.ConcreteRoles.BudgetItem = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetItem]; 
			OperatingBudgetClass.Instance.ConcreteRoles.BudgetItem = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetItem]; 


		}

		internal class RolesType
		{
			internal RoleType Description;
			internal RoleType BudgetRevision;
			internal RoleType BudgetStatus;
			internal RoleType BudgetNumber;
			internal RoleType CurrentObjectState;
			internal RoleType PreviousObjectState;
			internal RoleType BudgetReview;
			internal RoleType CurrentBudgetStatus;
			internal RoleType BudgetItem;

		}
	}public partial class TemplatePurposeClass : Class
	{
		public static TemplatePurposeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TemplatePurposeClass() : base(AppsDomain.Instance, new Guid("ebf12996-6fc7-4f22-b9be-cedaaba7bfb2"))
        {
			this.SingularName = "TemplatePurpose";
			this.PluralName = "TemplatePurposes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("33304215-276e-4294-958f-a5a88dbe2e5c"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class WebSiteCommunicationClass : Class
	{
		public static WebSiteCommunicationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WebSiteCommunicationClass() : base(AppsDomain.Instance, new Guid("ecf2996a-7f8b-45d5-afac-56c88c62136a"))
        {
			this.SingularName = "WebSiteCommunication";
			this.PluralName = "WebSiteCommunications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("40929272-a254-4661-a193-865e4277dd0a"))
			{
				Subtype = Instance,
				Supertype = CommunicationEventInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WebSiteCommunicationOriginator = new RelationType(AppsDomain.Instance, new Guid("18faf993-316a-4990-8ffd-8bda40f61164"), new Guid("b6c8df26-71f6-49a8-86d0-f38b9717fdc4"), new Guid("96f92902-be8e-41f8-893a-afe4e93ef6d5"));
			WebSiteCommunicationOriginator.AssignedMultiplicity = Multiplicity.ManyToOne;
			WebSiteCommunicationOriginator.IsIndexed = true;

			WebSiteCommunicationOriginator.AssociationType.ObjectType = this;

			WebSiteCommunicationOriginator.RoleType.ObjectType = PartyInterface.Instance;;
			WebSiteCommunicationOriginator.RoleType.AssignedSingularName = "Originator";
			WebSiteCommunicationOriginator.RoleType.AssignedPluralName = "Originators";
			this.Roles.Originator = WebSiteCommunicationOriginator.RoleType;

			var WebSiteCommunicationReceiver = new RelationType(AppsDomain.Instance, new Guid("39077571-13b2-4cc4-be85-517dbc11703e"), new Guid("be25f23d-6c17-4940-abe6-b6936244bcea"), new Guid("f956749a-b0b3-45a4-a4b8-b0bf913d24c2"));
			WebSiteCommunicationReceiver.AssignedMultiplicity = Multiplicity.ManyToOne;
			WebSiteCommunicationReceiver.IsIndexed = true;

			WebSiteCommunicationReceiver.AssociationType.ObjectType = this;

			WebSiteCommunicationReceiver.RoleType.ObjectType = PartyInterface.Instance;;
			WebSiteCommunicationReceiver.RoleType.AssignedSingularName = "Receiver";
			WebSiteCommunicationReceiver.RoleType.AssignedPluralName = "Receivers";
			this.Roles.Receiver = WebSiteCommunicationReceiver.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WebSiteCommunicationClass.Instance.ConcreteRoles.Originator = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Originator]; 

			WebSiteCommunicationClass.Instance.ConcreteRoles.Receiver = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Receiver]; 


		}

		internal class RolesType
		{
			internal RoleType Originator;
			internal RoleType Receiver;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType Receiver;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType ToContactMechanism;
			internal ConcreteRoleType CommunicationEventStatus;
			internal ConcreteRoleType InvolvedParty;
			internal ConcreteRoleType InitialScheduledStart;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType EventPurpose;
			internal ConcreteRoleType ScheduledEnd;
			internal ConcreteRoleType ActualEnd;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType InitialScheduledEnd;
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType Subject;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType Case;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType FromContactMechanism;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType CurrentCommunicationEventStatus;
			internal ConcreteRoleType Note;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class WithdrawalClass : Class
	{
		public static WithdrawalClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WithdrawalClass() : base(AppsDomain.Instance, new Guid("edf1788a-0c75-4635-904d-db9f9a6a7399"))
        {
			this.SingularName = "Withdrawal";
			this.PluralName = "Withdrawals";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ca136431-b312-4f23-b53e-bffe69df757f"))
			{
				Subtype = Instance,
				Supertype = FinancialAccountTransactionInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WithdrawalDisbursement = new RelationType(AppsDomain.Instance, new Guid("b97344ac-a848-4ee0-bdb5-a9d79bb785fc"), new Guid("265511f9-0f02-47c8-b7c4-392f09a69fa2"), new Guid("c7dcd911-b352-4f0f-98fd-ea1c3d8d77d6"));
			WithdrawalDisbursement.AssignedMultiplicity = Multiplicity.OneToOne;
			WithdrawalDisbursement.IsIndexed = true;

			WithdrawalDisbursement.AssociationType.ObjectType = this;

			WithdrawalDisbursement.RoleType.ObjectType = DisbursementClass.Instance;;
			WithdrawalDisbursement.RoleType.AssignedSingularName = "Disbursement";
			WithdrawalDisbursement.RoleType.AssignedPluralName = "Disbursements";
			this.Roles.Disbursement = WithdrawalDisbursement.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WithdrawalClass.Instance.ConcreteRoles.Disbursement = WithdrawalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Disbursement]; 


		}

		internal class RolesType
		{
			internal RoleType Disbursement;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Disbursement;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType EntryDate;
			internal ConcreteRoleType TransactionDate;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DeploymentClass : Class
	{
		public static DeploymentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DeploymentClass() : base(AppsDomain.Instance, new Guid("ee23df25-f7d7-4974-b62e-ee3cba56b709"))
        {
			this.SingularName = "Deployment";
			this.PluralName = "Deployments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("48b7bc22-694d-4337-aa8c-c6a0f35d649f"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("5f8f6068-3fcf-4de6-9cb7-6ac5c99fdc13"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DeploymentProductOffering = new RelationType(AppsDomain.Instance, new Guid("212653db-1677-47bd-944c-b5468673ec63"), new Guid("7543cf10-97dd-4823-b386-f06379e398b2"), new Guid("685a54f0-4e66-4ce3-93a2-f6f45dcf8c8b"));
			DeploymentProductOffering.AssignedMultiplicity = Multiplicity.ManyToOne;
			DeploymentProductOffering.IsIndexed = true;

			DeploymentProductOffering.AssociationType.ObjectType = this;

			DeploymentProductOffering.RoleType.ObjectType = GoodClass.Instance;;
			DeploymentProductOffering.RoleType.AssignedSingularName = "ProductOffering";
			DeploymentProductOffering.RoleType.AssignedPluralName = "ProductOfferings";
			this.Roles.ProductOffering = DeploymentProductOffering.RoleType;

			var DeploymentDeploymentUsage = new RelationType(AppsDomain.Instance, new Guid("c322fbbd-3406-4e73-83ed-033282ab0cfb"), new Guid("d265b170-3854-4276-9a20-325984097991"), new Guid("501b64c8-4181-45ca-a4f3-075232c8b270"));
			DeploymentDeploymentUsage.AssignedMultiplicity = Multiplicity.ManyToOne;
			DeploymentDeploymentUsage.IsIndexed = true;

			DeploymentDeploymentUsage.AssociationType.ObjectType = this;

			DeploymentDeploymentUsage.RoleType.ObjectType = DeploymentUsageInterface.Instance;;
			DeploymentDeploymentUsage.RoleType.AssignedSingularName = "DeploymentUsage";
			DeploymentDeploymentUsage.RoleType.AssignedPluralName = "DeploymentUsages";
			this.Roles.DeploymentUsage = DeploymentDeploymentUsage.RoleType;

			var DeploymentSerializedInventoryItem = new RelationType(AppsDomain.Instance, new Guid("d588ba7f-7b67-43fd-bb67-b9ff82fcffaf"), new Guid("bbee5696-6e53-4ea3-8f57-4e018e6bc61d"), new Guid("33c8e0e5-be98-44bb-a9eb-cfbabd8451b2"));
			DeploymentSerializedInventoryItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			DeploymentSerializedInventoryItem.IsIndexed = true;

			DeploymentSerializedInventoryItem.AssociationType.ObjectType = this;

			DeploymentSerializedInventoryItem.RoleType.ObjectType = SerializedInventoryItemClass.Instance;;
			DeploymentSerializedInventoryItem.RoleType.AssignedSingularName = "SerializedInventoryItem";
			DeploymentSerializedInventoryItem.RoleType.AssignedPluralName = "SerializedInventoryItems";
			this.Roles.SerializedInventoryItem = DeploymentSerializedInventoryItem.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DeploymentClass.Instance.ConcreteRoles.ProductOffering = DeploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductOffering]; 

			DeploymentClass.Instance.ConcreteRoles.DeploymentUsage = DeploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeploymentUsage]; 

			DeploymentClass.Instance.ConcreteRoles.SerializedInventoryItem = DeploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SerializedInventoryItem]; 


		}

		internal class RolesType
		{
			internal RoleType ProductOffering;
			internal RoleType DeploymentUsage;
			internal RoleType SerializedInventoryItem;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ProductOffering;
			internal ConcreteRoleType DeploymentUsage;
			internal ConcreteRoleType SerializedInventoryItem;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class PayCheckClass : Class
	{
		public static PayCheckClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PayCheckClass() : base(AppsDomain.Instance, new Guid("ef5fb351-2f0f-454a-b7b2-104af42b2c72"))
        {
			this.SingularName = "PayCheck";
			this.PluralName = "PayChecks";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7dd4d8e9-8385-433d-87d3-c9635a819179"))
			{
				Subtype = Instance,
				Supertype = PaymentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PayCheckDeduction = new RelationType(AppsDomain.Instance, new Guid("59ddff84-5e67-4210-b721-955e08f8453e"), new Guid("5d445586-f239-4e3b-a3cb-368d46df306f"), new Guid("9a3b62ee-6197-4670-ad8b-c01201ea2235"));
			PayCheckDeduction.AssignedMultiplicity = Multiplicity.OneToMany;
			PayCheckDeduction.IsIndexed = true;

			PayCheckDeduction.AssociationType.ObjectType = this;

			PayCheckDeduction.RoleType.ObjectType = DeductionClass.Instance;;
			PayCheckDeduction.RoleType.AssignedSingularName = "Deduction";
			PayCheckDeduction.RoleType.AssignedPluralName = "Deductions";
			this.Roles.Deduction = PayCheckDeduction.RoleType;

			var PayCheckEmployment = new RelationType(AppsDomain.Instance, new Guid("5db6f5b5-e24e-44fd-bc41-4e0466e97906"), new Guid("53d7d8c9-7028-4ec8-82af-6373e21e3532"), new Guid("c2e4cf65-7a57-4dcd-ab49-c6cbc6b9d9fb"));
			PayCheckEmployment.AssignedMultiplicity = Multiplicity.ManyToOne;
			PayCheckEmployment.IsIndexed = true;

			PayCheckEmployment.AssociationType.ObjectType = this;

			PayCheckEmployment.RoleType.ObjectType = EmploymentClass.Instance;;
			PayCheckEmployment.RoleType.AssignedSingularName = "Employment";
			PayCheckEmployment.RoleType.AssignedPluralName = "Employments";
			this.Roles.Employment = PayCheckEmployment.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PayCheckClass.Instance.ConcreteRoles.Deduction = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Deduction]; 

			PayCheckClass.Instance.ConcreteRoles.Employment = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Employment]; 


		}

		internal class RolesType
		{
			internal RoleType Deduction;
			internal RoleType Employment;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Deduction;
			internal ConcreteRoleType Employment;
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType PaymentMethod;
			internal ConcreteRoleType EffectiveDate;
			internal ConcreteRoleType SendingParty;
			internal ConcreteRoleType PaymentApplication;
			internal ConcreteRoleType ReferenceNumber;
			internal ConcreteRoleType ReceivingParty;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class MaritalStatusClass : Class
	{
		public static MaritalStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal MaritalStatusClass() : base(AppsDomain.Instance, new Guid("ef6ce14d-87e9-4704-be8b-595329a6bf20"))
        {
			this.SingularName = "MaritalStatus";
			this.PluralName = "MaritalStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("9b6090c4-69a4-410b-a6d5-cc7e5039dfbd"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ManifestClass : Class
	{
		public static ManifestClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ManifestClass() : base(AppsDomain.Instance, new Guid("efb6f7a2-edec-40dd-a03a-d4e15abc438d"))
        {
			this.SingularName = "Manifest";
			this.PluralName = "Manifests";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("40727f08-14dd-48b9-81e3-fc79c5a1eb86"))
			{
				Subtype = Instance,
				Supertype = DocumentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DocumentLocation;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;

		}
	}public partial class ExportDocumentClass : Class
	{
		public static ExportDocumentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ExportDocumentClass() : base(AppsDomain.Instance, new Guid("efe15d5d-f07c-497e-98c2-dd64f624840f"))
        {
			this.SingularName = "ExportDocument";
			this.PluralName = "ExportDocuments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("111a7813-2a05-448f-92fe-bc77207ce6f6"))
			{
				Subtype = Instance,
				Supertype = DocumentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DocumentLocation;
			internal ConcreteRoleType PrintContent;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Comment;

		}
	}public partial class InventoryItemConfigurationInterface: Interface
	{
		public static InventoryItemConfigurationInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal InventoryItemConfigurationInterface() : base(AppsDomain.Instance, new Guid("f135770b-7228-4e4b-b7ea-9307b6317fd2"))
        {
			this.SingularName = "InventoryItemConfiguration";
			this.PluralName = "InventoryItemConfigurations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3a5a4422-8a6b-4273-a9cb-c247121cfb94"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("caf0d9c0-1f3e-4e85-bcea-2ce39738bb26"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var InventoryItemConfigurationInventoryItem = new RelationType(AppsDomain.Instance, new Guid("92a85a6b-4f65-4ba4-bd5e-bf44d5a9ca56"), new Guid("e7e7fef5-a973-42b7-8c96-5ede712a353c"), new Guid("6beb2ac6-0319-4524-80a2-54393ba77e69"));
			InventoryItemConfigurationInventoryItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			InventoryItemConfigurationInventoryItem.IsIndexed = true;

			InventoryItemConfigurationInventoryItem.AssociationType.ObjectType = this;

			InventoryItemConfigurationInventoryItem.RoleType.ObjectType = InventoryItemInterface.Instance;;
			InventoryItemConfigurationInventoryItem.RoleType.AssignedSingularName = "InventoryItem";
			InventoryItemConfigurationInventoryItem.RoleType.AssignedPluralName = "InventoryItems";
			this.Roles.InventoryItem = InventoryItemConfigurationInventoryItem.RoleType;

			var InventoryItemConfigurationQuantity = new RelationType(AppsDomain.Instance, new Guid("f041b297-e2bb-4ada-ab89-08ec9bcd6513"), new Guid("6ec9252a-817c-4e39-a2f7-809c86888b9c"), new Guid("0454d8e0-ab31-4907-85b1-41103091a08f"));
			InventoryItemConfigurationQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			InventoryItemConfigurationQuantity.AssociationType.ObjectType = this;

			InventoryItemConfigurationQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			InventoryItemConfigurationQuantity.RoleType.AssignedSingularName = "Quantity";
			InventoryItemConfigurationQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = InventoryItemConfigurationQuantity.RoleType;

			var InventoryItemConfigurationComponentInventoryItem = new RelationType(AppsDomain.Instance, new Guid("f1d4ceeb-f859-4996-babc-dc55837489e0"), new Guid("a0cb4a4e-322e-4f8c-b7b8-b171b1b0aaa5"), new Guid("df3d337b-4998-4604-961c-3c074f91cd1b"));
			InventoryItemConfigurationComponentInventoryItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			InventoryItemConfigurationComponentInventoryItem.IsIndexed = true;

			InventoryItemConfigurationComponentInventoryItem.AssociationType.ObjectType = this;

			InventoryItemConfigurationComponentInventoryItem.RoleType.ObjectType = InventoryItemInterface.Instance;;
			InventoryItemConfigurationComponentInventoryItem.RoleType.AssignedSingularName = "ComponentInventoryItem";
			InventoryItemConfigurationComponentInventoryItem.RoleType.AssignedPluralName = "ComponentInventoryItems";
			this.Roles.ComponentInventoryItem = InventoryItemConfigurationComponentInventoryItem.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ServiceConfigurationClass.Instance.ConcreteRoles.InventoryItem = ServiceConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItem]; 
			ManufacturingConfigurationClass.Instance.ConcreteRoles.InventoryItem = ManufacturingConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItem]; 

			ServiceConfigurationClass.Instance.ConcreteRoles.Quantity = ServiceConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 
			ManufacturingConfigurationClass.Instance.ConcreteRoles.Quantity = ManufacturingConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			ServiceConfigurationClass.Instance.ConcreteRoles.ComponentInventoryItem = ServiceConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ComponentInventoryItem]; 
			ManufacturingConfigurationClass.Instance.ConcreteRoles.ComponentInventoryItem = ManufacturingConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ComponentInventoryItem]; 


		}

		internal class RolesType
		{
			internal RoleType InventoryItem;
			internal RoleType Quantity;
			internal RoleType ComponentInventoryItem;

		}
	}public partial class CustomerShipmentStatusClass : Class
	{
		public static CustomerShipmentStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CustomerShipmentStatusClass() : base(AppsDomain.Instance, new Guid("f13976d4-b1f4-4b78-a720-beab1e0a7e4c"))
        {
			this.SingularName = "CustomerShipmentStatus";
			this.PluralName = "CustomerShipmentStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5f1b571d-8dc6-4795-a65f-e4ee7b0d33e7"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CustomerShipmentStatusCustomerShipmentObjectState = new RelationType(AppsDomain.Instance, new Guid("591d3237-220b-4765-8001-4bc18ecd2d8c"), new Guid("2a2704d6-44f6-4e86-a8c9-407842b7eb83"), new Guid("fd56e773-b27b-4336-b1be-e262d1d26b41"));
			CustomerShipmentStatusCustomerShipmentObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CustomerShipmentStatusCustomerShipmentObjectState.IsIndexed = true;

			CustomerShipmentStatusCustomerShipmentObjectState.AssociationType.ObjectType = this;

			CustomerShipmentStatusCustomerShipmentObjectState.RoleType.ObjectType = CustomerShipmentObjectStateClass.Instance;;
			CustomerShipmentStatusCustomerShipmentObjectState.RoleType.AssignedSingularName = "CustomerShipmentObjectState";
			CustomerShipmentStatusCustomerShipmentObjectState.RoleType.AssignedPluralName = "CustomerShipmentObjectStates";
			this.Roles.CustomerShipmentObjectState = CustomerShipmentStatusCustomerShipmentObjectState.RoleType;

			var CustomerShipmentStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("74e826e5-75d0-4e7d-b2fe-73a7c58e30ef"), new Guid("261ca695-c146-493d-b059-3836913268c4"), new Guid("eb029966-6353-401b-b24b-190460f0c035"));
			CustomerShipmentStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			CustomerShipmentStatusStartDateTime.AssociationType.ObjectType = this;

			CustomerShipmentStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			CustomerShipmentStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			CustomerShipmentStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = CustomerShipmentStatusStartDateTime.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CustomerShipmentStatusClass.Instance.ConcreteRoles.CustomerShipmentObjectState = CustomerShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CustomerShipmentObjectState]; 

			CustomerShipmentStatusClass.Instance.ConcreteRoles.StartDateTime = CustomerShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 


		}

		internal class RolesType
		{
			internal RoleType CustomerShipmentObjectState;
			internal RoleType StartDateTime;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType CustomerShipmentObjectState;
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ExpenseEntryClass : Class
	{
		public static ExpenseEntryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ExpenseEntryClass() : base(AppsDomain.Instance, new Guid("f15e6b0e-0222-4f9b-8ae2-20c20f3b3673"))
        {
			this.SingularName = "ExpenseEntry";
			this.PluralName = "ExpenseEntries";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("ae2d6032-e4a7-479a-bb4c-65220bb7fe79"))
			{
				Subtype = Instance,
				Supertype = ServiceEntryInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ExpenseEntryAmount = new RelationType(AppsDomain.Instance, new Guid("0bb04781-d5b4-455c-8880-b5bfbc9d69f8"), new Guid("cc956cd1-4910-4977-afc5-e76f8bb2dc16"), new Guid("821a410a-afa4-4e6e-b505-3732a864554a"));
			ExpenseEntryAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			ExpenseEntryAmount.AssociationType.ObjectType = this;

			ExpenseEntryAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			ExpenseEntryAmount.RoleType.AssignedSingularName = "Amount";
			ExpenseEntryAmount.RoleType.AssignedPluralName = "Amounts";
			ExpenseEntryAmount.RoleType.Scale = 2;
			ExpenseEntryAmount.RoleType.Precision = 19;
			this.Roles.Amount = ExpenseEntryAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ExpenseEntryClass.Instance.ConcreteRoles.Amount = ExpenseEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 


		}

		internal class RolesType
		{
			internal RoleType Amount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType ThroughDateTime;
			internal ConcreteRoleType EngagementItem;
			internal ConcreteRoleType IsBillable;
			internal ConcreteRoleType FromDateTime;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ProductAssociationInterface: Interface
	{
		public static ProductAssociationInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ProductAssociationInterface() : base(AppsDomain.Instance, new Guid("f194d2e1-d246-40eb-9eab-70ee2521703a"))
        {
			this.SingularName = "ProductAssociation";
			this.PluralName = "ProductAssociations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("24de7a14-73c3-4c6b-ae23-1803dec23a33"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("8035399f-d7cb-4cd0-9551-537f7a33049a"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("bb38455b-0bca-430a-8dae-4eb897b3e52a"))
			{
				Subtype = Instance,
				Supertype = PeriodInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}
	}public partial class PartSpecificationStatusClass : Class
	{
		public static PartSpecificationStatusClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartSpecificationStatusClass() : base(AppsDomain.Instance, new Guid("f1ae6225-15d0-4359-8188-afb73265a617"))
        {
			this.SingularName = "PartSpecificationStatus";
			this.PluralName = "PartSpecificationStatuses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0c4da82d-c2f7-4056-92ca-cc527dfcad35"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartSpecificationStatusStartDateTime = new RelationType(AppsDomain.Instance, new Guid("14fdbce7-3494-48fb-a885-3b688b0c4e15"), new Guid("9b060799-5fca-4e1f-96c0-953444f4b6ac"), new Guid("53c22224-4741-4b2a-ac1f-2174c1bda312"));
			PartSpecificationStatusStartDateTime.AssignedMultiplicity = Multiplicity.OneToOne;
			PartSpecificationStatusStartDateTime.AssociationType.ObjectType = this;

			PartSpecificationStatusStartDateTime.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PartSpecificationStatusStartDateTime.RoleType.AssignedSingularName = "StartDateTime";
			PartSpecificationStatusStartDateTime.RoleType.AssignedPluralName = "StartDateTimes";
			this.Roles.StartDateTime = PartSpecificationStatusStartDateTime.RoleType;

			var PartSpecificationStatusPartSpecificationObjectState = new RelationType(AppsDomain.Instance, new Guid("3b3db2a8-bd50-422b-8605-01142cac2654"), new Guid("f3ae080e-2c22-46e2-9a78-2178f32eab55"), new Guid("a62f66c9-5ed6-4059-8c2e-3a01e268f4eb"));
			PartSpecificationStatusPartSpecificationObjectState.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartSpecificationStatusPartSpecificationObjectState.IsIndexed = true;

			PartSpecificationStatusPartSpecificationObjectState.AssociationType.ObjectType = this;

			PartSpecificationStatusPartSpecificationObjectState.RoleType.ObjectType = PartSpecificationObjectStateClass.Instance;;
			PartSpecificationStatusPartSpecificationObjectState.RoleType.AssignedSingularName = "PartSpecificationObjectState";
			PartSpecificationStatusPartSpecificationObjectState.RoleType.AssignedPluralName = "PartSpecificationObjectStates";
			this.Roles.PartSpecificationObjectState = PartSpecificationStatusPartSpecificationObjectState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartSpecificationStatusClass.Instance.ConcreteRoles.StartDateTime = PartSpecificationStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartDateTime]; 

			PartSpecificationStatusClass.Instance.ConcreteRoles.PartSpecificationObjectState = PartSpecificationStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PartSpecificationObjectState]; 


		}

		internal class RolesType
		{
			internal RoleType StartDateTime;
			internal RoleType PartSpecificationObjectState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartDateTime;
			internal ConcreteRoleType PartSpecificationObjectState;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class DistributionChannelRelationshipClass : Class
	{
		public static DistributionChannelRelationshipClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal DistributionChannelRelationshipClass() : base(AppsDomain.Instance, new Guid("f278459d-6b7f-47cf-ab0e-05c548faab1e"))
        {
			this.SingularName = "DistributionChannelRelationship";
			this.PluralName = "DistributionChannelRelationships";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("72cbe8f0-2465-4fe7-9a73-fcbe73288399"))
			{
				Subtype = Instance,
				Supertype = PartyRelationshipInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var DistributionChannelRelationshipInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("86a07419-5dfd-4618-a472-168ba5fdf3ff"), new Guid("2800f775-ce61-4684-b6a3-5ce28dcf140b"), new Guid("b61fdf73-2420-498c-af0b-49ecdeec359a"));
			DistributionChannelRelationshipInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			DistributionChannelRelationshipInternalOrganisation.IsIndexed = true;

			DistributionChannelRelationshipInternalOrganisation.AssociationType.ObjectType = this;

			DistributionChannelRelationshipInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			DistributionChannelRelationshipInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			DistributionChannelRelationshipInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = DistributionChannelRelationshipInternalOrganisation.RoleType;

			var DistributionChannelRelationshipDistributor = new RelationType(AppsDomain.Instance, new Guid("e7c812db-f6c8-431b-9f4d-5317a0d8673c"), new Guid("21844f4b-372c-45de-acfa-02c428afdbd8"), new Guid("00b349c4-e7f6-4d8f-b4d3-0922a3465a91"));
			DistributionChannelRelationshipDistributor.AssignedMultiplicity = Multiplicity.ManyToOne;
			DistributionChannelRelationshipDistributor.IsIndexed = true;

			DistributionChannelRelationshipDistributor.AssociationType.ObjectType = this;

			DistributionChannelRelationshipDistributor.RoleType.ObjectType = OrganisationClass.Instance;;
			DistributionChannelRelationshipDistributor.RoleType.AssignedSingularName = "Distributor";
			DistributionChannelRelationshipDistributor.RoleType.AssignedPluralName = "Distributors";
			this.Roles.Distributor = DistributionChannelRelationshipDistributor.RoleType;


		}

		internal override void SetRelationTypes()
		{
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.InternalOrganisation = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			DistributionChannelRelationshipClass.Instance.ConcreteRoles.Distributor = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Distributor]; 


		}

		internal class RolesType
		{
			internal RoleType InternalOrganisation;
			internal RoleType Distributor;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Distributor;
			internal ConcreteRoleType PartyRelationshipStatus;
			internal ConcreteRoleType RelationshipAgreement;
			internal ConcreteRoleType PartyRelationshipPriority;
			internal ConcreteRoleType SimpleMovingAverage;
			internal ConcreteRoleType CommunicationEvent;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CustomerShipmentObjectStateClass : Class
	{
		public static CustomerShipmentObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CustomerShipmentObjectStateClass() : base(AppsDomain.Instance, new Guid("f2d5bb8b-b50f-45e5-accb-c752a4445ad2"))
        {
			this.SingularName = "CustomerShipmentObjectState";
			this.PluralName = "CustomerShipmentObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d04d6bde-7dea-4e4d-a9f4-f1d94ebea9ab"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PaymentMethodInterface: Interface
	{
		public static PaymentMethodInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PaymentMethodInterface() : base(AppsDomain.Instance, new Guid("f34d5b9b-b940-4885-9744-754dd0eae08d"))
        {
			this.SingularName = "PaymentMethod";
			this.PluralName = "PaymentMethods";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("13920a13-4c7d-47ad-9181-9e9e597f0ae5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("91fb2e41-2a62-4bb5-8c54-8a0bea14ecba"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PaymentMethodBalanceLimit = new RelationType(AppsDomain.Instance, new Guid("0b16fdbc-c535-45a5-8be9-7b1d2c12337a"), new Guid("0d9ba18d-46fa-4a98-aa6a-37261f2f11a8"), new Guid("7af97652-a1cf-49f8-a33c-33c45dcadd4e"));
			PaymentMethodBalanceLimit.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentMethodBalanceLimit.AssociationType.ObjectType = this;

			PaymentMethodBalanceLimit.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PaymentMethodBalanceLimit.RoleType.AssignedSingularName = "BalanceLimit";
			PaymentMethodBalanceLimit.RoleType.AssignedPluralName = "BalanceLimits";
			PaymentMethodBalanceLimit.RoleType.Scale = 2;
			PaymentMethodBalanceLimit.RoleType.Precision = 19;
			this.Roles.BalanceLimit = PaymentMethodBalanceLimit.RoleType;

			var PaymentMethodCurrentBalance = new RelationType(AppsDomain.Instance, new Guid("2e5e9d24-4697-4811-8636-1ebf9d86b9c2"), new Guid("d479d315-4478-4b97-98c4-bfe964ca9921"), new Guid("bdbca6c9-6a5e-4700-a987-cd62db5b831a"));
			PaymentMethodCurrentBalance.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentMethodCurrentBalance.IsDerived = true;
			PaymentMethodCurrentBalance.AssociationType.ObjectType = this;

			PaymentMethodCurrentBalance.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PaymentMethodCurrentBalance.RoleType.AssignedSingularName = "CurrentBalance";
			PaymentMethodCurrentBalance.RoleType.AssignedPluralName = "CurrentBalances";
			PaymentMethodCurrentBalance.RoleType.Scale = 2;
			PaymentMethodCurrentBalance.RoleType.Precision = 19;
			this.Roles.CurrentBalance = PaymentMethodCurrentBalance.RoleType;

			var PaymentMethodJournal = new RelationType(AppsDomain.Instance, new Guid("36559f29-1182-42d1-831d-587103456ce6"), new Guid("ce33ccae-be2c-4081-abd5-be803bdbc1a4"), new Guid("0c76bfba-2ef1-46fb-bb1f-b49b57f792c0"));
			PaymentMethodJournal.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentMethodJournal.IsIndexed = true;

			PaymentMethodJournal.AssociationType.ObjectType = this;

			PaymentMethodJournal.RoleType.ObjectType = JournalClass.Instance;;
			PaymentMethodJournal.RoleType.AssignedSingularName = "Journal";
			PaymentMethodJournal.RoleType.AssignedPluralName = "Journals";
			this.Roles.Journal = PaymentMethodJournal.RoleType;

			var PaymentMethodDescription = new RelationType(AppsDomain.Instance, new Guid("386c301e-8f0f-48fc-8bec-10ac0df6be9d"), new Guid("168be3f3-97ef-490d-ab65-29c7928310cc"), new Guid("555b2755-24a1-4238-b390-f77e0fd205ac"));
			PaymentMethodDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentMethodDescription.AssociationType.ObjectType = this;

			PaymentMethodDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PaymentMethodDescription.RoleType.AssignedSingularName = "Description";
			PaymentMethodDescription.RoleType.AssignedPluralName = "Descriptions";
			PaymentMethodDescription.RoleType.Size = 256;
			this.Roles.Description = PaymentMethodDescription.RoleType;

			var PaymentMethodGlPaymentInTransit = new RelationType(AppsDomain.Instance, new Guid("59da5fc4-e861-4c7d-aa96-c15cebbb63f2"), new Guid("7e050127-bbea-490a-ac78-354c37daa799"), new Guid("e48560a6-b94d-459b-98d1-4bf429816798"));
			PaymentMethodGlPaymentInTransit.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentMethodGlPaymentInTransit.IsIndexed = true;

			PaymentMethodGlPaymentInTransit.AssociationType.ObjectType = this;

			PaymentMethodGlPaymentInTransit.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			PaymentMethodGlPaymentInTransit.RoleType.AssignedSingularName = "GlPaymentInTransit";
			PaymentMethodGlPaymentInTransit.RoleType.AssignedPluralName = "GlsPaymentInTransit";
			this.Roles.GlPaymentInTransit = PaymentMethodGlPaymentInTransit.RoleType;

			var PaymentMethodRemarks = new RelationType(AppsDomain.Instance, new Guid("6e61f71f-77a1-4795-b876-ba5d74ebdc3e"), new Guid("ce1e09f8-1260-462d-be94-726a8716f6d8"), new Guid("108077d8-ca1c-48c1-8154-f52f7807eb5b"));
			PaymentMethodRemarks.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentMethodRemarks.AssociationType.ObjectType = this;

			PaymentMethodRemarks.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PaymentMethodRemarks.RoleType.AssignedSingularName = "Remarks";
			PaymentMethodRemarks.RoleType.AssignedPluralName = "RemarksPlural";
			PaymentMethodRemarks.RoleType.Size = -1;
			this.Roles.Remarks = PaymentMethodRemarks.RoleType;

			var PaymentMethodGeneralLedgerAccount = new RelationType(AppsDomain.Instance, new Guid("8b11feda-09c8-4f8d-a21d-dddd87531d5b"), new Guid("d7361d9b-b76c-4a22-a385-487219d861d5"), new Guid("2c58e2a1-c7bb-481e-a828-c5bfa0eaec49"));
			PaymentMethodGeneralLedgerAccount.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentMethodGeneralLedgerAccount.IsIndexed = true;

			PaymentMethodGeneralLedgerAccount.AssociationType.ObjectType = this;

			PaymentMethodGeneralLedgerAccount.RoleType.ObjectType = OrganisationGlAccountClass.Instance;;
			PaymentMethodGeneralLedgerAccount.RoleType.AssignedSingularName = "GeneralLedgerAccount";
			PaymentMethodGeneralLedgerAccount.RoleType.AssignedPluralName = "GeneralLedgerAccounts";
			this.Roles.GeneralLedgerAccount = PaymentMethodGeneralLedgerAccount.RoleType;

			var PaymentMethodCreditor = new RelationType(AppsDomain.Instance, new Guid("a937fc55-d737-444b-93b0-525994e09f6a"), new Guid("c33d3bc7-13ff-4d83-be7b-e9fbd7c21d55"), new Guid("2b00353d-bc87-4aa1-b260-3650f93320ff"));
			PaymentMethodCreditor.AssignedMultiplicity = Multiplicity.ManyToOne;
			PaymentMethodCreditor.IsIndexed = true;

			PaymentMethodCreditor.AssociationType.ObjectType = this;

			PaymentMethodCreditor.RoleType.ObjectType = SupplierRelationshipClass.Instance;;
			PaymentMethodCreditor.RoleType.AssignedSingularName = "Creditor";
			PaymentMethodCreditor.RoleType.AssignedPluralName = "Creditors";
			this.Roles.Creditor = PaymentMethodCreditor.RoleType;

			var PaymentMethodIsActive = new RelationType(AppsDomain.Instance, new Guid("c32243ac-8810-478b-b0f4-11a1fe4773bd"), new Guid("433b6034-88a1-4355-81cd-dbd92ef6f7da"), new Guid("238a0b8f-882a-47ea-96cc-ff19126974c1"));
			PaymentMethodIsActive.AssignedMultiplicity = Multiplicity.OneToOne;
			PaymentMethodIsActive.AssociationType.ObjectType = this;

			PaymentMethodIsActive.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			PaymentMethodIsActive.RoleType.AssignedSingularName = "IsActive";
			PaymentMethodIsActive.RoleType.AssignedPluralName = "IsActives";
			this.Roles.IsActive = PaymentMethodIsActive.RoleType;


		}

		internal override void SetRelationTypes()
		{
			OwnCreditCardClass.Instance.ConcreteRoles.BalanceLimit = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BalanceLimit]; 
			CashClass.Instance.ConcreteRoles.BalanceLimit = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BalanceLimit]; 
			OwnBankAccountClass.Instance.ConcreteRoles.BalanceLimit = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BalanceLimit]; 

			OwnCreditCardClass.Instance.ConcreteRoles.CurrentBalance = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentBalance]; 
			CashClass.Instance.ConcreteRoles.CurrentBalance = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentBalance]; 
			OwnBankAccountClass.Instance.ConcreteRoles.CurrentBalance = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentBalance]; 

			OwnCreditCardClass.Instance.ConcreteRoles.Journal = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Journal]; 
			CashClass.Instance.ConcreteRoles.Journal = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Journal]; 
			OwnBankAccountClass.Instance.ConcreteRoles.Journal = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Journal]; 

			OwnCreditCardClass.Instance.ConcreteRoles.Description = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			CashClass.Instance.ConcreteRoles.Description = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			OwnBankAccountClass.Instance.ConcreteRoles.Description = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			OwnCreditCardClass.Instance.ConcreteRoles.GlPaymentInTransit = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GlPaymentInTransit]; 
			CashClass.Instance.ConcreteRoles.GlPaymentInTransit = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GlPaymentInTransit]; 
			OwnBankAccountClass.Instance.ConcreteRoles.GlPaymentInTransit = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GlPaymentInTransit]; 

			OwnCreditCardClass.Instance.ConcreteRoles.Remarks = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Remarks]; 
			CashClass.Instance.ConcreteRoles.Remarks = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Remarks]; 
			OwnBankAccountClass.Instance.ConcreteRoles.Remarks = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Remarks]; 

			OwnCreditCardClass.Instance.ConcreteRoles.GeneralLedgerAccount = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccount]; 
			CashClass.Instance.ConcreteRoles.GeneralLedgerAccount = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccount]; 
			OwnBankAccountClass.Instance.ConcreteRoles.GeneralLedgerAccount = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GeneralLedgerAccount]; 

			OwnCreditCardClass.Instance.ConcreteRoles.Creditor = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Creditor]; 
			CashClass.Instance.ConcreteRoles.Creditor = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Creditor]; 
			OwnBankAccountClass.Instance.ConcreteRoles.Creditor = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Creditor]; 

			OwnCreditCardClass.Instance.ConcreteRoles.IsActive = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			CashClass.Instance.ConcreteRoles.IsActive = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			OwnBankAccountClass.Instance.ConcreteRoles.IsActive = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 


		}

		internal class RolesType
		{
			internal RoleType BalanceLimit;
			internal RoleType CurrentBalance;
			internal RoleType Journal;
			internal RoleType Description;
			internal RoleType GlPaymentInTransit;
			internal RoleType Remarks;
			internal RoleType GeneralLedgerAccount;
			internal RoleType Creditor;
			internal RoleType IsActive;

		}
	}public partial class GenderTypeClass : Class
	{
		public static GenderTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal GenderTypeClass() : base(AppsDomain.Instance, new Guid("f35745a9-a8d3-4002-a484-6f0fb00a69a2"))
        {
			this.SingularName = "GenderType";
			this.PluralName = "GenderTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("63c4f9df-07de-48e5-9579-e03729225505"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class OrderItemInterface: Interface
	{
		public static OrderItemInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal OrderItemInterface() : base(AppsDomain.Instance, new Guid("f3ef0124-e867-4da2-9323-80fbe1f214c2"))
        {
			this.SingularName = "OrderItem";
			this.PluralName = "OrderItems";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("09df78f6-a170-4320-8630-d6dc864ebcfd"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("73b21f03-9940-4567-b545-7cd1fb5f45a7"))
			{
				Subtype = Instance,
				Supertype = CommentableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("7b9105ed-c840-43bc-8843-b823ded8b45f"))
			{
				Subtype = Instance,
				Supertype = TransitionalInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var OrderItemTotalDiscountAsPercentage = new RelationType(AppsDomain.Instance, new Guid("05254848-d99a-430e-80cd-e042ded3de71"), new Guid("b10824dd-70de-4fe1-bdc6-d970ebe33e4a"), new Guid("c3de2ade-8b8b-4423-b40b-fa665a2d6215"));
			OrderItemTotalDiscountAsPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalDiscountAsPercentage.IsDerived = true;
			OrderItemTotalDiscountAsPercentage.AssociationType.ObjectType = this;

			OrderItemTotalDiscountAsPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalDiscountAsPercentage.RoleType.AssignedSingularName = "TotalDiscountAsPercentage";
			OrderItemTotalDiscountAsPercentage.RoleType.AssignedPluralName = "TotalDiscountsAsPercentage";
			OrderItemTotalDiscountAsPercentage.RoleType.Scale = 2;
			OrderItemTotalDiscountAsPercentage.RoleType.Precision = 19;
			this.Roles.TotalDiscountAsPercentage = OrderItemTotalDiscountAsPercentage.RoleType;

			var OrderItemDiscountAdjustment = new RelationType(AppsDomain.Instance, new Guid("0dc8733d-816a-4231-8a56-24363923080f"), new Guid("f41fe55a-b9f4-4a81-a7c6-cffb5e3e8cc1"), new Guid("8aa28a5f-d801-4751-b37a-435b461b1b54"));
			OrderItemDiscountAdjustment.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemDiscountAdjustment.IsIndexed = true;

			OrderItemDiscountAdjustment.AssociationType.ObjectType = this;

			OrderItemDiscountAdjustment.RoleType.ObjectType = DiscountAdjustmentClass.Instance;;
			OrderItemDiscountAdjustment.RoleType.AssignedSingularName = "DiscountAdjustment";
			OrderItemDiscountAdjustment.RoleType.AssignedPluralName = "DiscountAdjustments";
			this.Roles.DiscountAdjustment = OrderItemDiscountAdjustment.RoleType;

			var OrderItemUnitVat = new RelationType(AppsDomain.Instance, new Guid("131359fb-29f2-4ebb-adc2-1e53a99a4e6b"), new Guid("e687dc65-d903-47c4-8e39-ad43f8d5633e"), new Guid("a1031b6a-897b-43e4-99c9-0308acbe708b"));
			OrderItemUnitVat.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemUnitVat.IsDerived = true;
			OrderItemUnitVat.AssociationType.ObjectType = this;

			OrderItemUnitVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemUnitVat.RoleType.AssignedSingularName = "UnitVat";
			OrderItemUnitVat.RoleType.AssignedPluralName = "UnitsVat";
			OrderItemUnitVat.RoleType.Scale = 2;
			OrderItemUnitVat.RoleType.Precision = 19;
			this.Roles.UnitVat = OrderItemUnitVat.RoleType;

			var OrderItemTotalVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("27534e6f-55d3-45e3-82ba-1580af4647d6"), new Guid("cda2b9ab-8d74-471c-95ea-38fb0c4a7589"), new Guid("32f1c0f7-59d6-4c2c-a39e-607d359b6f53"));
			OrderItemTotalVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalVatCustomerCurrency.IsDerived = true;
			OrderItemTotalVatCustomerCurrency.AssociationType.ObjectType = this;

			OrderItemTotalVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalVatCustomerCurrency.RoleType.AssignedSingularName = "TotalVatCustomerCurrency";
			OrderItemTotalVatCustomerCurrency.RoleType.AssignedPluralName = "TotalVatsCustomerCurrency";
			OrderItemTotalVatCustomerCurrency.RoleType.Scale = 2;
			OrderItemTotalVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalVatCustomerCurrency = OrderItemTotalVatCustomerCurrency.RoleType;

			var OrderItemVatRegime = new RelationType(AppsDomain.Instance, new Guid("27f86828-7b4e-4d80-9c3c-095813240c1a"), new Guid("628cb976-30ef-42fd-be72-282b0f291bb2"), new Guid("b78ae277-ca2b-43ff-a730-257281533822"));
			OrderItemVatRegime.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderItemVatRegime.IsDerived = true;
			OrderItemVatRegime.IsIndexed = true;

			OrderItemVatRegime.AssociationType.ObjectType = this;

			OrderItemVatRegime.RoleType.ObjectType = VatRegimeClass.Instance;;
			OrderItemVatRegime.RoleType.AssignedSingularName = "VatRegime";
			OrderItemVatRegime.RoleType.AssignedPluralName = "VatRegimes";
			this.Roles.VatRegime = OrderItemVatRegime.RoleType;

			var OrderItemBudgetItem = new RelationType(AppsDomain.Instance, new Guid("30493d04-3298-4888-8ee4-b8995d9cd5a1"), new Guid("0ab1707d-be04-49c2-a6b1-b6a17eb0a195"), new Guid("95bd36e9-a956-46d2-b2b5-7d7d0f73c411"));
			OrderItemBudgetItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderItemBudgetItem.IsIndexed = true;

			OrderItemBudgetItem.AssociationType.ObjectType = this;

			OrderItemBudgetItem.RoleType.ObjectType = BudgetItemClass.Instance;;
			OrderItemBudgetItem.RoleType.AssignedSingularName = "BudgetItem";
			OrderItemBudgetItem.RoleType.AssignedPluralName = "BudgetItems";
			this.Roles.BudgetItem = OrderItemBudgetItem.RoleType;

			var OrderItemTotalVat = new RelationType(AppsDomain.Instance, new Guid("32792771-06c8-4805-abc4-2e2f9c37c6f3"), new Guid("8f165d5a-ad87-431f-bea6-b8531f78d731"), new Guid("dda45a1d-2377-40ad-88e7-0a8961c1f1e1"));
			OrderItemTotalVat.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalVat.IsDerived = true;
			OrderItemTotalVat.AssociationType.ObjectType = this;

			OrderItemTotalVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalVat.RoleType.AssignedSingularName = "TotalVat";
			OrderItemTotalVat.RoleType.AssignedPluralName = "TotalVats";
			OrderItemTotalVat.RoleType.Scale = 2;
			OrderItemTotalVat.RoleType.Precision = 19;
			this.Roles.TotalVat = OrderItemTotalVat.RoleType;

			var OrderItemUnitSurcharge = new RelationType(AppsDomain.Instance, new Guid("3722807a-0634-4df2-8964-4778b4edc314"), new Guid("091b8400-d566-472d-a804-a55bfd99ff92"), new Guid("7dcca5fa-73b5-4751-9d16-b05e6e5ef5b7"));
			OrderItemUnitSurcharge.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemUnitSurcharge.IsDerived = true;
			OrderItemUnitSurcharge.AssociationType.ObjectType = this;

			OrderItemUnitSurcharge.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemUnitSurcharge.RoleType.AssignedSingularName = "UnitSurcharge";
			OrderItemUnitSurcharge.RoleType.AssignedPluralName = "UnitSurcharges";
			OrderItemUnitSurcharge.RoleType.Scale = 2;
			OrderItemUnitSurcharge.RoleType.Precision = 19;
			this.Roles.UnitSurcharge = OrderItemUnitSurcharge.RoleType;

			var OrderItemUnitDiscount = new RelationType(AppsDomain.Instance, new Guid("37623a64-9f6c-4f35-8e72-c4332037db4d"), new Guid("c99eecb1-6b8a-4f44-999d-35b32ea93605"), new Guid("cc34ad5e-43bd-4e4a-bd9a-afdb64a409ae"));
			OrderItemUnitDiscount.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemUnitDiscount.IsDerived = true;
			OrderItemUnitDiscount.AssociationType.ObjectType = this;

			OrderItemUnitDiscount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemUnitDiscount.RoleType.AssignedSingularName = "UnitDiscount";
			OrderItemUnitDiscount.RoleType.AssignedPluralName = "UnitDiscounts";
			OrderItemUnitDiscount.RoleType.Scale = 2;
			OrderItemUnitDiscount.RoleType.Precision = 19;
			this.Roles.UnitDiscount = OrderItemUnitDiscount.RoleType;

			var OrderItemPreviousQuantity = new RelationType(AppsDomain.Instance, new Guid("38cd5e9e-7305-4c56-bff7-13918bd9f059"), new Guid("d21a1eff-5920-4dbb-9fcb-8f99ea1187f9"), new Guid("a6e6c1d9-0009-4d5a-bebd-6e62c1d71a5a"));
			OrderItemPreviousQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemPreviousQuantity.IsDerived = true;
			OrderItemPreviousQuantity.AssociationType.ObjectType = this;

			OrderItemPreviousQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemPreviousQuantity.RoleType.AssignedSingularName = "PreviousQuantity";
			OrderItemPreviousQuantity.RoleType.AssignedPluralName = "PreviousQuantities";
			OrderItemPreviousQuantity.RoleType.Scale = 2;
			OrderItemPreviousQuantity.RoleType.Precision = 19;
			this.Roles.PreviousQuantity = OrderItemPreviousQuantity.RoleType;

			var OrderItemQuantityOrdered = new RelationType(AppsDomain.Instance, new Guid("454f28cf-bf52-4465-83e4-e871ec36c491"), new Guid("5abe5891-40b6-4b87-a587-e6a2c7658c64"), new Guid("c6d6c5dd-9239-45ae-970c-3716443bed29"));
			OrderItemQuantityOrdered.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemQuantityOrdered.AssociationType.ObjectType = this;

			OrderItemQuantityOrdered.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemQuantityOrdered.RoleType.AssignedSingularName = "QuantityOrdered";
			OrderItemQuantityOrdered.RoleType.AssignedPluralName = "QuantitiesOrdered";
			OrderItemQuantityOrdered.RoleType.Scale = 2;
			OrderItemQuantityOrdered.RoleType.Precision = 19;
			this.Roles.QuantityOrdered = OrderItemQuantityOrdered.RoleType;

			var OrderItemTotalExVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("47839962-efc3-4def-be94-4a5831c3a629"), new Guid("061745f4-94f0-4370-ad60-d08e46d6d474"), new Guid("eef09133-a624-455e-81f4-7c84ea41c931"));
			OrderItemTotalExVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalExVatCustomerCurrency.IsDerived = true;
			OrderItemTotalExVatCustomerCurrency.AssociationType.ObjectType = this;

			OrderItemTotalExVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalExVatCustomerCurrency.RoleType.AssignedSingularName = "TotalExVatCustomerCurrency";
			OrderItemTotalExVatCustomerCurrency.RoleType.AssignedPluralName = "TotalExVatsCustomerCurrency";
			OrderItemTotalExVatCustomerCurrency.RoleType.Scale = 2;
			OrderItemTotalExVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalExVatCustomerCurrency = OrderItemTotalExVatCustomerCurrency.RoleType;

			var OrderItemDerivedVatRate = new RelationType(AppsDomain.Instance, new Guid("5367e41e-b1c3-4311-87b4-6ba2732de1e6"), new Guid("1f602ef8-dfa3-45f6-8577-e6256206bf94"), new Guid("bf829774-be83-4c46-9174-dfeee0eb1fd7"));
			OrderItemDerivedVatRate.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderItemDerivedVatRate.IsDerived = true;
			OrderItemDerivedVatRate.IsIndexed = true;

			OrderItemDerivedVatRate.AssociationType.ObjectType = this;

			OrderItemDerivedVatRate.RoleType.ObjectType = VatRateClass.Instance;;
			OrderItemDerivedVatRate.RoleType.AssignedSingularName = "DerivedVatRate";
			OrderItemDerivedVatRate.RoleType.AssignedPluralName = "DerivedVatRates";
			this.Roles.DerivedVatRate = OrderItemDerivedVatRate.RoleType;

			var OrderItemActualUnitPrice = new RelationType(AppsDomain.Instance, new Guid("5ffe1fc4-704e-4a3f-a27f-d4a47c99c37b"), new Guid("7996c255-663f-462e-bb23-ae61a55a3a48"), new Guid("827f06dd-fc4a-4323-9120-49f9a1ae9abf"));
			OrderItemActualUnitPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemActualUnitPrice.AssociationType.ObjectType = this;

			OrderItemActualUnitPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemActualUnitPrice.RoleType.AssignedSingularName = "ActualUnitPrice";
			OrderItemActualUnitPrice.RoleType.AssignedPluralName = "ActualUnitPrices";
			OrderItemActualUnitPrice.RoleType.Scale = 2;
			OrderItemActualUnitPrice.RoleType.Precision = 19;
			this.Roles.ActualUnitPrice = OrderItemActualUnitPrice.RoleType;

			var OrderItemTotalIncVatCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("6d1a448e-112a-4513-87b8-fd4e5bd03dac"), new Guid("0fe2ff69-d63c-4361-acb3-4fd10ddf30bc"), new Guid("f38daa9a-0303-4dba-9c92-8483f8a134c4"));
			OrderItemTotalIncVatCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalIncVatCustomerCurrency.IsDerived = true;
			OrderItemTotalIncVatCustomerCurrency.AssociationType.ObjectType = this;

			OrderItemTotalIncVatCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalIncVatCustomerCurrency.RoleType.AssignedSingularName = "TotalIncVatCustomerCurrency";
			OrderItemTotalIncVatCustomerCurrency.RoleType.AssignedPluralName = "TotalIncVatsCustomerCurrency";
			OrderItemTotalIncVatCustomerCurrency.RoleType.Scale = 2;
			OrderItemTotalIncVatCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalIncVatCustomerCurrency = OrderItemTotalIncVatCustomerCurrency.RoleType;

			var OrderItemDescription = new RelationType(AppsDomain.Instance, new Guid("6da42dec-ba03-4615-badb-9113a82ff2f7"), new Guid("f8b1946c-f4d3-4c9b-89c3-371b8ce1e329"), new Guid("29fa13ea-307f-49ed-86ad-ff8321911013"));
			OrderItemDescription.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemDescription.AssociationType.ObjectType = this;

			OrderItemDescription.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrderItemDescription.RoleType.AssignedSingularName = "Description";
			OrderItemDescription.RoleType.AssignedPluralName = "Descriptions";
			OrderItemDescription.RoleType.Size = 256;
			this.Roles.Description = OrderItemDescription.RoleType;

			var OrderItemUnitBasePrice = new RelationType(AppsDomain.Instance, new Guid("6dc95126-3287-46e0-9c21-4d6561262a2e"), new Guid("f041eec1-749c-4b73-a01a-c3d692a9d9db"), new Guid("cf6e5ebb-4f3b-42e7-b6a3-486de6ca6d53"));
			OrderItemUnitBasePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemUnitBasePrice.IsDerived = true;
			OrderItemUnitBasePrice.AssociationType.ObjectType = this;

			OrderItemUnitBasePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemUnitBasePrice.RoleType.AssignedSingularName = "UnitBasePrice";
			OrderItemUnitBasePrice.RoleType.AssignedPluralName = "UnitBasePrices";
			OrderItemUnitBasePrice.RoleType.Scale = 2;
			OrderItemUnitBasePrice.RoleType.Precision = 19;
			this.Roles.UnitBasePrice = OrderItemUnitBasePrice.RoleType;

			var OrderItemCorrespondingPurchaseOrder = new RelationType(AppsDomain.Instance, new Guid("70f92965-d99a-4a6a-bc27-029eec7b5c2d"), new Guid("93ffaaa6-7401-4b7f-a297-081a98bee032"), new Guid("233fd990-758e-4f1d-87bd-ae3de8d9486b"));
			OrderItemCorrespondingPurchaseOrder.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderItemCorrespondingPurchaseOrder.IsIndexed = true;

			OrderItemCorrespondingPurchaseOrder.AssociationType.ObjectType = this;

			OrderItemCorrespondingPurchaseOrder.RoleType.ObjectType = PurchaseOrderClass.Instance;;
			OrderItemCorrespondingPurchaseOrder.RoleType.AssignedSingularName = "CorrespondingPurchaseOrder";
			OrderItemCorrespondingPurchaseOrder.RoleType.AssignedPluralName = "CorrespondingPurchaseOrders";
			this.Roles.CorrespondingPurchaseOrder = OrderItemCorrespondingPurchaseOrder.RoleType;

			var OrderItemCalculatedUnitPrice = new RelationType(AppsDomain.Instance, new Guid("7595b52c-012b-42db-9cf2-46939b39f57f"), new Guid("93e899b5-b472-4aea-9f7c-d0863883abb1"), new Guid("c5f0b047-8a9b-4743-bac6-0d358b54a794"));
			OrderItemCalculatedUnitPrice.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemCalculatedUnitPrice.IsDerived = true;
			OrderItemCalculatedUnitPrice.AssociationType.ObjectType = this;

			OrderItemCalculatedUnitPrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemCalculatedUnitPrice.RoleType.AssignedSingularName = "CalculatedUnitPrice";
			OrderItemCalculatedUnitPrice.RoleType.AssignedPluralName = "CalculatedUnitPrice";
			OrderItemCalculatedUnitPrice.RoleType.Scale = 2;
			OrderItemCalculatedUnitPrice.RoleType.Precision = 19;
			this.Roles.CalculatedUnitPrice = OrderItemCalculatedUnitPrice.RoleType;

			var OrderItemTotalOrderAdjustmentCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("84faada9-1bdc-4c08-8892-760eb0cee2ba"), new Guid("3166f432-b675-474a-9a1f-7e558cc1dc58"), new Guid("a2a2b2e8-0477-4b79-8602-7ca37fb17372"));
			OrderItemTotalOrderAdjustmentCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalOrderAdjustmentCustomerCurrency.IsDerived = true;
			OrderItemTotalOrderAdjustmentCustomerCurrency.AssociationType.ObjectType = this;

			OrderItemTotalOrderAdjustmentCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalOrderAdjustmentCustomerCurrency.RoleType.AssignedSingularName = "TotalOrderAdjustmentCustomerCurrency";
			OrderItemTotalOrderAdjustmentCustomerCurrency.RoleType.AssignedPluralName = "TotalOrderAdjustmentsCustomerCurrency";
			OrderItemTotalOrderAdjustmentCustomerCurrency.RoleType.Scale = 2;
			OrderItemTotalOrderAdjustmentCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalOrderAdjustmentCustomerCurrency = OrderItemTotalOrderAdjustmentCustomerCurrency.RoleType;

			var OrderItemTotalOrderAdjustment = new RelationType(AppsDomain.Instance, new Guid("8f06f480-ff7e-4e34-bb7e-6f1271dcc551"), new Guid("dcdcdd88-63b5-4680-80a7-e915abe1cc98"), new Guid("8b0d5be1-a4ed-49de-8913-bdafc5da57ae"));
			OrderItemTotalOrderAdjustment.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalOrderAdjustment.IsDerived = true;
			OrderItemTotalOrderAdjustment.AssociationType.ObjectType = this;

			OrderItemTotalOrderAdjustment.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalOrderAdjustment.RoleType.AssignedSingularName = "TotalOrderAdjustment";
			OrderItemTotalOrderAdjustment.RoleType.AssignedPluralName = "TotalOrderAdjustments";
			OrderItemTotalOrderAdjustment.RoleType.Scale = 2;
			OrderItemTotalOrderAdjustment.RoleType.Precision = 19;
			this.Roles.TotalOrderAdjustment = OrderItemTotalOrderAdjustment.RoleType;

			var OrderItemTotalSurchargeCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("8f3d28ac-7693-4943-9398-a30f3f957283"), new Guid("035e178a-7de0-45c8-a4c1-269eee4c3f0c"), new Guid("3ed702c2-bf3c-472b-8a00-829c0853b7f7"));
			OrderItemTotalSurchargeCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalSurchargeCustomerCurrency.IsDerived = true;
			OrderItemTotalSurchargeCustomerCurrency.AssociationType.ObjectType = this;

			OrderItemTotalSurchargeCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalSurchargeCustomerCurrency.RoleType.AssignedSingularName = "TotalSurchargeCustomerCurrency";
			OrderItemTotalSurchargeCustomerCurrency.RoleType.AssignedPluralName = "TotalSurchargesCustomerCurrency";
			OrderItemTotalSurchargeCustomerCurrency.RoleType.Scale = 2;
			OrderItemTotalSurchargeCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalSurchargeCustomerCurrency = OrderItemTotalSurchargeCustomerCurrency.RoleType;

			var OrderItemQuoteItem = new RelationType(AppsDomain.Instance, new Guid("9674f349-3fcc-495c-b7eb-27b5b580597c"), new Guid("d7c3f753-9db0-4bb5-9b5d-4adbc695e320"), new Guid("34e4011b-c124-4d53-ab30-26734e8ba04c"));
			OrderItemQuoteItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderItemQuoteItem.IsIndexed = true;

			OrderItemQuoteItem.AssociationType.ObjectType = this;

			OrderItemQuoteItem.RoleType.ObjectType = QuoteItemClass.Instance;;
			OrderItemQuoteItem.RoleType.AssignedSingularName = "QuoteItem";
			OrderItemQuoteItem.RoleType.AssignedPluralName = "QuoteItems";
			this.Roles.QuoteItem = OrderItemQuoteItem.RoleType;

			var OrderItemAssignedDeliveryDate = new RelationType(AppsDomain.Instance, new Guid("9dc87cdb-a35f-4a48-9f99-bf0fe07cad5c"), new Guid("b6f17e6b-f61a-4155-8e4c-79ebec1a01d4"), new Guid("9ec4f475-ecb7-4d57-a642-043b0a703094"));
			OrderItemAssignedDeliveryDate.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemAssignedDeliveryDate.AssociationType.ObjectType = this;

			OrderItemAssignedDeliveryDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			OrderItemAssignedDeliveryDate.RoleType.AssignedSingularName = "AssignedDeliveryDate";
			OrderItemAssignedDeliveryDate.RoleType.AssignedPluralName = "AssignedDeliveryDates";
			this.Roles.AssignedDeliveryDate = OrderItemAssignedDeliveryDate.RoleType;

			var OrderItemDeliveryDate = new RelationType(AppsDomain.Instance, new Guid("a1769a74-d832-4ade-be59-a98b17033ca1"), new Guid("72f9c5a1-a66a-4181-b683-c0546f7cb95d"), new Guid("279735e0-974a-46b3-b460-2bd528895f5a"));
			OrderItemDeliveryDate.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemDeliveryDate.IsDerived = true;
			OrderItemDeliveryDate.AssociationType.ObjectType = this;

			OrderItemDeliveryDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			OrderItemDeliveryDate.RoleType.AssignedSingularName = "DeliveryDate";
			OrderItemDeliveryDate.RoleType.AssignedPluralName = "DeliveryDates";
			this.Roles.DeliveryDate = OrderItemDeliveryDate.RoleType;

			var OrderItemTotalIncVat = new RelationType(AppsDomain.Instance, new Guid("a271f7d4-cda1-4ae9-94e4-dda482bd8cd5"), new Guid("68f757fc-3cf5-4dae-b6ba-e2cb08033381"), new Guid("b856b6e9-93e8-47ac-8070-3bb8c0ff29d7"));
			OrderItemTotalIncVat.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalIncVat.IsDerived = true;
			OrderItemTotalIncVat.AssociationType.ObjectType = this;

			OrderItemTotalIncVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalIncVat.RoleType.AssignedSingularName = "TotalIncVat";
			OrderItemTotalIncVat.RoleType.AssignedPluralName = "TotaIIncVats";
			OrderItemTotalIncVat.RoleType.Scale = 2;
			OrderItemTotalIncVat.RoleType.Precision = 19;
			this.Roles.TotalIncVat = OrderItemTotalIncVat.RoleType;

			var OrderItemTotalSurchargeAsPercentage = new RelationType(AppsDomain.Instance, new Guid("a573b8bf-42a6-4389-9f46-1def243220bf"), new Guid("d70fe012-fbfb-486c-8ac7-ac3ae9ea380f"), new Guid("6bff9fb4-7b17-4c5a-a7cb-fa8bd1bf9f5c"));
			OrderItemTotalSurchargeAsPercentage.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalSurchargeAsPercentage.IsDerived = true;
			OrderItemTotalSurchargeAsPercentage.AssociationType.ObjectType = this;

			OrderItemTotalSurchargeAsPercentage.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalSurchargeAsPercentage.RoleType.AssignedSingularName = "TotalSurchargeAsPercentage";
			OrderItemTotalSurchargeAsPercentage.RoleType.AssignedPluralName = "TotalSurchargesAsPercentage";
			OrderItemTotalSurchargeAsPercentage.RoleType.Scale = 2;
			OrderItemTotalSurchargeAsPercentage.RoleType.Precision = 19;
			this.Roles.TotalSurchargeAsPercentage = OrderItemTotalSurchargeAsPercentage.RoleType;

			var OrderItemTotalDiscountCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("a819e4fe-f829-4e1c-9e93-46d9c4b31bd4"), new Guid("1f3b767e-58ee-483d-aa18-ee5c7421a244"), new Guid("b0b1feaa-279f-488a-9062-e0b1ff2dcd7c"));
			OrderItemTotalDiscountCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalDiscountCustomerCurrency.IsDerived = true;
			OrderItemTotalDiscountCustomerCurrency.AssociationType.ObjectType = this;

			OrderItemTotalDiscountCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalDiscountCustomerCurrency.RoleType.AssignedSingularName = "TotalDiscountCustomerCurrency";
			OrderItemTotalDiscountCustomerCurrency.RoleType.AssignedPluralName = "TotalDiscountsCustomerCurrency";
			OrderItemTotalDiscountCustomerCurrency.RoleType.Scale = 2;
			OrderItemTotalDiscountCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalDiscountCustomerCurrency = OrderItemTotalDiscountCustomerCurrency.RoleType;

			var OrderItemTotalDiscount = new RelationType(AppsDomain.Instance, new Guid("b4398edb-2a36-459d-95a1-5d209462ae02"), new Guid("82b15a97-315c-4671-a420-f1b4f50f7ce6"), new Guid("b561ab6f-8843-4409-ac10-accb4b6d123e"));
			OrderItemTotalDiscount.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalDiscount.IsDerived = true;
			OrderItemTotalDiscount.AssociationType.ObjectType = this;

			OrderItemTotalDiscount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalDiscount.RoleType.AssignedSingularName = "TotalDiscount";
			OrderItemTotalDiscount.RoleType.AssignedPluralName = "TotalDiscounts";
			OrderItemTotalDiscount.RoleType.Scale = 2;
			OrderItemTotalDiscount.RoleType.Precision = 19;
			this.Roles.TotalDiscount = OrderItemTotalDiscount.RoleType;

			var OrderItemTotalSurcharge = new RelationType(AppsDomain.Instance, new Guid("b81633d1-5b22-42b9-a484-d401d06022fb"), new Guid("17f4d6e4-fe43-46d4-b28d-651e6e766713"), new Guid("e897b861-0e8a-4b57-ae52-b875d2f67c39"));
			OrderItemTotalSurcharge.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalSurcharge.IsDerived = true;
			OrderItemTotalSurcharge.AssociationType.ObjectType = this;

			OrderItemTotalSurcharge.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalSurcharge.RoleType.AssignedSingularName = "TotalSurcharge";
			OrderItemTotalSurcharge.RoleType.AssignedPluralName = "TotalSurcharges";
			OrderItemTotalSurcharge.RoleType.Scale = 2;
			OrderItemTotalSurcharge.RoleType.Precision = 19;
			this.Roles.TotalSurcharge = OrderItemTotalSurcharge.RoleType;

			var OrderItemOrderTerm = new RelationType(AppsDomain.Instance, new Guid("b82c7b21-5ade-40b6-ba5d-62b6384eaaec"), new Guid("0f950d26-6a3f-4140-9273-7fe886f06582"), new Guid("4aefa88c-6ce9-441e-a8a7-e65b2271c3b9"));
			OrderItemOrderTerm.AssignedMultiplicity = Multiplicity.OneToMany;
			OrderItemOrderTerm.IsIndexed = true;

			OrderItemOrderTerm.AssociationType.ObjectType = this;

			OrderItemOrderTerm.RoleType.ObjectType = OrderTermClass.Instance;;
			OrderItemOrderTerm.RoleType.AssignedSingularName = "OrderTerm";
			OrderItemOrderTerm.RoleType.AssignedPluralName = "OrderTerms";
			this.Roles.OrderTerm = OrderItemOrderTerm.RoleType;

			var OrderItemAssignedVatRegime = new RelationType(AppsDomain.Instance, new Guid("c897fe12-da96-47e6-b00e-920cb9e1c790"), new Guid("40f8d741-df32-487e-8ca5-2764dcaa2200"), new Guid("081c9f92-53c0-448a-bc8c-b19335f43da4"));
			OrderItemAssignedVatRegime.AssignedMultiplicity = Multiplicity.ManyToOne;
			OrderItemAssignedVatRegime.IsIndexed = true;

			OrderItemAssignedVatRegime.AssociationType.ObjectType = this;

			OrderItemAssignedVatRegime.RoleType.ObjectType = VatRegimeClass.Instance;;
			OrderItemAssignedVatRegime.RoleType.AssignedSingularName = "AssignedVatRegime";
			OrderItemAssignedVatRegime.RoleType.AssignedPluralName = "AssignedVatRegimes";
			this.Roles.AssignedVatRegime = OrderItemAssignedVatRegime.RoleType;

			var OrderItemShippingInstruction = new RelationType(AppsDomain.Instance, new Guid("ce398ebb-3b1e-476e-afd5-d32518542b70"), new Guid("d7f29cb6-bae1-41ce-bc67-c37c38f0ba73"), new Guid("49a61617-586a-4b7b-bcc0-e2cf1f4cdee4"));
			OrderItemShippingInstruction.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemShippingInstruction.AssociationType.ObjectType = this;

			OrderItemShippingInstruction.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrderItemShippingInstruction.RoleType.AssignedSingularName = "ShippingInstruction";
			OrderItemShippingInstruction.RoleType.AssignedPluralName = "ShippingInstructions";
			OrderItemShippingInstruction.RoleType.Size = -1;
			this.Roles.ShippingInstruction = OrderItemShippingInstruction.RoleType;

			var OrderItemTotalBasePrice = new RelationType(AppsDomain.Instance, new Guid("d0b1e607-07dc-43e2-a003-89559c87a441"), new Guid("610d7c57-41eb-436f-b3ac-652798619441"), new Guid("f17ef23b-b1c8-43e0-8adb-e605f7fef7ba"));
			OrderItemTotalBasePrice.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalBasePrice.IsDerived = true;
			OrderItemTotalBasePrice.AssociationType.ObjectType = this;

			OrderItemTotalBasePrice.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalBasePrice.RoleType.AssignedSingularName = "TotalBasePrice";
			OrderItemTotalBasePrice.RoleType.AssignedPluralName = "TotalBasePrices";
			OrderItemTotalBasePrice.RoleType.Scale = 2;
			OrderItemTotalBasePrice.RoleType.Precision = 19;
			this.Roles.TotalBasePrice = OrderItemTotalBasePrice.RoleType;

			var OrderItemAssociation = new RelationType(AppsDomain.Instance, new Guid("dadeac55-1586-47ce-9983-2113179e275d"), new Guid("f6bdee3b-d274-4bd6-841e-7dc3d373083f"), new Guid("6a038221-f3ec-4fd0-a235-7f6205404113"));
			OrderItemAssociation.AssignedMultiplicity = Multiplicity.ManyToMany;
			OrderItemAssociation.IsIndexed = true;

			OrderItemAssociation.AssociationType.ObjectType = this;

			OrderItemAssociation.RoleType.ObjectType = OrderItemInterface.Instance;;
			OrderItemAssociation.RoleType.AssignedSingularName = "Association";
			OrderItemAssociation.RoleType.AssignedPluralName = "Associations";
			this.Roles.Association = OrderItemAssociation.RoleType;

			var OrderItemTotalExVat = new RelationType(AppsDomain.Instance, new Guid("dc71aecf-1735-4858-b74f-65e805565eed"), new Guid("e16d7c3d-628a-438f-b141-102d3d508380"), new Guid("746ae197-8f1c-4631-8dcc-a7c9328f41e8"));
			OrderItemTotalExVat.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalExVat.IsDerived = true;
			OrderItemTotalExVat.AssociationType.ObjectType = this;

			OrderItemTotalExVat.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalExVat.RoleType.AssignedSingularName = "TotalExVat";
			OrderItemTotalExVat.RoleType.AssignedPluralName = "TotalExVats";
			OrderItemTotalExVat.RoleType.Scale = 2;
			OrderItemTotalExVat.RoleType.Precision = 19;
			this.Roles.TotalExVat = OrderItemTotalExVat.RoleType;

			var OrderItemTotalBasePriceCustomerCurrency = new RelationType(AppsDomain.Instance, new Guid("dc7d46b9-7c46-42bf-b8ac-20065a958c51"), new Guid("d935d887-08c0-499b-be79-37973dac97e5"), new Guid("edfe7ff0-3a6d-40b4-ab75-86d4b231de95"));
			OrderItemTotalBasePriceCustomerCurrency.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemTotalBasePriceCustomerCurrency.IsDerived = true;
			OrderItemTotalBasePriceCustomerCurrency.AssociationType.ObjectType = this;

			OrderItemTotalBasePriceCustomerCurrency.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			OrderItemTotalBasePriceCustomerCurrency.RoleType.AssignedSingularName = "TotalBasePriceCustomerCurrency";
			OrderItemTotalBasePriceCustomerCurrency.RoleType.AssignedPluralName = "TotalBasePricesCustomerCurrency";
			OrderItemTotalBasePriceCustomerCurrency.RoleType.Scale = 2;
			OrderItemTotalBasePriceCustomerCurrency.RoleType.Precision = 19;
			this.Roles.TotalBasePriceCustomerCurrency = OrderItemTotalBasePriceCustomerCurrency.RoleType;

			var OrderItemCurrentPriceComponent = new RelationType(AppsDomain.Instance, new Guid("dcc8e49e-5770-4686-8f3c-ecedf5bbbfed"), new Guid("b855278d-96ab-486d-b12b-71e2ffe8353d"), new Guid("1bdfc536-bdcc-41dc-b7d3-357c4bcc24cf"));
			OrderItemCurrentPriceComponent.AssignedMultiplicity = Multiplicity.ManyToMany;
			OrderItemCurrentPriceComponent.IsDerived = true;
			OrderItemCurrentPriceComponent.IsIndexed = true;

			OrderItemCurrentPriceComponent.AssociationType.ObjectType = this;

			OrderItemCurrentPriceComponent.RoleType.ObjectType = PriceComponentInterface.Instance;;
			OrderItemCurrentPriceComponent.RoleType.AssignedSingularName = "CurrentPriceComponent";
			OrderItemCurrentPriceComponent.RoleType.AssignedPluralName = "CurrentPriceComponents";
			this.Roles.CurrentPriceComponent = OrderItemCurrentPriceComponent.RoleType;

			var OrderItemSurchargeAdjustment = new RelationType(AppsDomain.Instance, new Guid("fa02ba8e-24a6-45ca-acfc-9ef69301efa2"), new Guid("fc87d284-a120-43fa-86eb-f4aea034cbf4"), new Guid("97d6f184-64c7-4ec7-953e-7ff587cd29af"));
			OrderItemSurchargeAdjustment.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemSurchargeAdjustment.IsIndexed = true;

			OrderItemSurchargeAdjustment.AssociationType.ObjectType = this;

			OrderItemSurchargeAdjustment.RoleType.ObjectType = SurchargeAdjustmentClass.Instance;;
			OrderItemSurchargeAdjustment.RoleType.AssignedSingularName = "SurchargeAdjustment";
			OrderItemSurchargeAdjustment.RoleType.AssignedPluralName = "SurchargeAdjustments";
			this.Roles.SurchargeAdjustment = OrderItemSurchargeAdjustment.RoleType;

			var OrderItemMessage = new RelationType(AppsDomain.Instance, new Guid("feeed27a-c421-476c-b233-02d2fb9db76d"), new Guid("d1458a15-e035-4b07-a6b8-5a9af704a4ac"), new Guid("34e046c2-881c-43e7-8c67-c14c595ac074"));
			OrderItemMessage.AssignedMultiplicity = Multiplicity.OneToOne;
			OrderItemMessage.AssociationType.ObjectType = this;

			OrderItemMessage.RoleType.ObjectType = AllorsStringUnit.Instance;;
			OrderItemMessage.RoleType.AssignedSingularName = "Message";
			OrderItemMessage.RoleType.AssignedPluralName = "Messages";
			OrderItemMessage.RoleType.Size = -1;
			this.Roles.Message = OrderItemMessage.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesOrderItemClass.Instance.ConcreteRoles.TotalDiscountAsPercentage = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountAsPercentage]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalDiscountAsPercentage = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountAsPercentage]; 

			SalesOrderItemClass.Instance.ConcreteRoles.DiscountAdjustment = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DiscountAdjustment]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.DiscountAdjustment = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DiscountAdjustment]; 

			SalesOrderItemClass.Instance.ConcreteRoles.UnitVat = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitVat]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.UnitVat = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitVat]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalVatCustomerCurrency = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVatCustomerCurrency]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalVatCustomerCurrency = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVatCustomerCurrency]; 

			SalesOrderItemClass.Instance.ConcreteRoles.VatRegime = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.VatRegime = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRegime]; 

			SalesOrderItemClass.Instance.ConcreteRoles.BudgetItem = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetItem]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.BudgetItem = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BudgetItem]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalVat = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVat]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalVat = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalVat]; 

			SalesOrderItemClass.Instance.ConcreteRoles.UnitSurcharge = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitSurcharge]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.UnitSurcharge = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitSurcharge]; 

			SalesOrderItemClass.Instance.ConcreteRoles.UnitDiscount = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitDiscount]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.UnitDiscount = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitDiscount]; 

			SalesOrderItemClass.Instance.ConcreteRoles.PreviousQuantity = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousQuantity]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.PreviousQuantity = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PreviousQuantity]; 

			SalesOrderItemClass.Instance.ConcreteRoles.QuantityOrdered = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityOrdered]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.QuantityOrdered = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuantityOrdered]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalExVatCustomerCurrency = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVatCustomerCurrency]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalExVatCustomerCurrency = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVatCustomerCurrency]; 

			SalesOrderItemClass.Instance.ConcreteRoles.DerivedVatRate = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedVatRate]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.DerivedVatRate = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DerivedVatRate]; 

			SalesOrderItemClass.Instance.ConcreteRoles.ActualUnitPrice = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualUnitPrice]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.ActualUnitPrice = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ActualUnitPrice]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalIncVatCustomerCurrency = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVatCustomerCurrency]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalIncVatCustomerCurrency = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVatCustomerCurrency]; 

			SalesOrderItemClass.Instance.ConcreteRoles.Description = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.Description = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Description]; 

			SalesOrderItemClass.Instance.ConcreteRoles.UnitBasePrice = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitBasePrice]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.UnitBasePrice = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UnitBasePrice]; 

			SalesOrderItemClass.Instance.ConcreteRoles.CorrespondingPurchaseOrder = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CorrespondingPurchaseOrder]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.CorrespondingPurchaseOrder = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CorrespondingPurchaseOrder]; 

			SalesOrderItemClass.Instance.ConcreteRoles.CalculatedUnitPrice = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CalculatedUnitPrice]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.CalculatedUnitPrice = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CalculatedUnitPrice]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalOrderAdjustmentCustomerCurrency = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalOrderAdjustmentCustomerCurrency]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalOrderAdjustmentCustomerCurrency = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalOrderAdjustmentCustomerCurrency]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalOrderAdjustment = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalOrderAdjustment]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalOrderAdjustment = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalOrderAdjustment]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalSurchargeCustomerCurrency = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeCustomerCurrency]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalSurchargeCustomerCurrency = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeCustomerCurrency]; 

			SalesOrderItemClass.Instance.ConcreteRoles.QuoteItem = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteItem]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.QuoteItem = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.QuoteItem]; 

			SalesOrderItemClass.Instance.ConcreteRoles.AssignedDeliveryDate = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssignedDeliveryDate]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.AssignedDeliveryDate = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssignedDeliveryDate]; 

			SalesOrderItemClass.Instance.ConcreteRoles.DeliveryDate = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliveryDate]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.DeliveryDate = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeliveryDate]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalIncVat = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVat]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalIncVat = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalIncVat]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalSurchargeAsPercentage = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeAsPercentage]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalSurchargeAsPercentage = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurchargeAsPercentage]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalDiscountCustomerCurrency = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountCustomerCurrency]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalDiscountCustomerCurrency = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscountCustomerCurrency]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalDiscount = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscount]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalDiscount = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalDiscount]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalSurcharge = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurcharge]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalSurcharge = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalSurcharge]; 

			SalesOrderItemClass.Instance.ConcreteRoles.OrderTerm = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderTerm]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.OrderTerm = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OrderTerm]; 

			SalesOrderItemClass.Instance.ConcreteRoles.AssignedVatRegime = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssignedVatRegime]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.AssignedVatRegime = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AssignedVatRegime]; 

			SalesOrderItemClass.Instance.ConcreteRoles.ShippingInstruction = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingInstruction]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.ShippingInstruction = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ShippingInstruction]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalBasePrice = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePrice]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalBasePrice = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePrice]; 

			SalesOrderItemClass.Instance.ConcreteRoles.Association = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Association]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.Association = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Association]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalExVat = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVat]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalExVat = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalExVat]; 

			SalesOrderItemClass.Instance.ConcreteRoles.TotalBasePriceCustomerCurrency = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePriceCustomerCurrency]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.TotalBasePriceCustomerCurrency = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalBasePriceCustomerCurrency]; 

			SalesOrderItemClass.Instance.ConcreteRoles.CurrentPriceComponent = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPriceComponent]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.CurrentPriceComponent = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentPriceComponent]; 

			SalesOrderItemClass.Instance.ConcreteRoles.SurchargeAdjustment = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SurchargeAdjustment]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.SurchargeAdjustment = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SurchargeAdjustment]; 

			SalesOrderItemClass.Instance.ConcreteRoles.Message = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Message]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.Message = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Message]; 


		}

		internal class RolesType
		{
			internal RoleType TotalDiscountAsPercentage;
			internal RoleType DiscountAdjustment;
			internal RoleType UnitVat;
			internal RoleType TotalVatCustomerCurrency;
			internal RoleType VatRegime;
			internal RoleType BudgetItem;
			internal RoleType TotalVat;
			internal RoleType UnitSurcharge;
			internal RoleType UnitDiscount;
			internal RoleType PreviousQuantity;
			internal RoleType QuantityOrdered;
			internal RoleType TotalExVatCustomerCurrency;
			internal RoleType DerivedVatRate;
			internal RoleType ActualUnitPrice;
			internal RoleType TotalIncVatCustomerCurrency;
			internal RoleType Description;
			internal RoleType UnitBasePrice;
			internal RoleType CorrespondingPurchaseOrder;
			internal RoleType CalculatedUnitPrice;
			internal RoleType TotalOrderAdjustmentCustomerCurrency;
			internal RoleType TotalOrderAdjustment;
			internal RoleType TotalSurchargeCustomerCurrency;
			internal RoleType QuoteItem;
			internal RoleType AssignedDeliveryDate;
			internal RoleType DeliveryDate;
			internal RoleType TotalIncVat;
			internal RoleType TotalSurchargeAsPercentage;
			internal RoleType TotalDiscountCustomerCurrency;
			internal RoleType TotalDiscount;
			internal RoleType TotalSurcharge;
			internal RoleType OrderTerm;
			internal RoleType AssignedVatRegime;
			internal RoleType ShippingInstruction;
			internal RoleType TotalBasePrice;
			internal RoleType Association;
			internal RoleType TotalExVat;
			internal RoleType TotalBasePriceCustomerCurrency;
			internal RoleType CurrentPriceComponent;
			internal RoleType SurchargeAdjustment;
			internal RoleType Message;

		}
	}public partial class OfficeClass : Class
	{
		public static OfficeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal OfficeClass() : base(AppsDomain.Instance, new Guid("f444b4be-1703-49b4-918b-2d1aaf27ce5a"))
        {
			this.SingularName = "Office";
			this.PluralName = "Offices";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("85b38ece-b53e-4453-aa34-9319dbc57906"))
			{
				Subtype = Instance,
				Supertype = FacilityInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType MadeUpOf;
			internal ConcreteRoleType SquareFootage;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType FacilityContactMechanism;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class EmailAddressClass : Class
	{
		public static EmailAddressClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EmailAddressClass() : base(AppsDomain.Instance, new Guid("f4b7ea51-eac4-479b-92e8-5109cfeceb77"))
        {
			this.SingularName = "EmailAddress";
			this.PluralName = "EmailAddresses";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3f8a6f57-483e-4b9f-b13e-7186aa9dcdf3"))
			{
				Subtype = Instance,
				Supertype = ElectronicAddressInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType ElectronicAddressString;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType FollowTo;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class WorkEffortInventoryAssignmentClass : Class
	{
		public static WorkEffortInventoryAssignmentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortInventoryAssignmentClass() : base(AppsDomain.Instance, new Guid("f67e7755-5848-4601-ba70-4d1a39abfe4b"))
        {
			this.SingularName = "WorkEffortInventoryAssignment";
			this.PluralName = "WorkEffortInventoryAssignments";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("cd995c65-f0cf-4b95-8719-89d62b04ef99"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkEffortInventoryAssignmentAssignment = new RelationType(AppsDomain.Instance, new Guid("0bf425d4-7468-4e28-8fda-0b04278cb2cd"), new Guid("2c6841c6-c161-48e0-a257-d932d99ae7b4"), new Guid("1afed0f6-15fa-4fd2-91f5-648773933e3b"));
			WorkEffortInventoryAssignmentAssignment.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortInventoryAssignmentAssignment.IsIndexed = true;

			WorkEffortInventoryAssignmentAssignment.AssociationType.ObjectType = this;

			WorkEffortInventoryAssignmentAssignment.RoleType.ObjectType = WorkEffortInterface.Instance;;
			WorkEffortInventoryAssignmentAssignment.RoleType.AssignedSingularName = "Assignment";
			WorkEffortInventoryAssignmentAssignment.RoleType.AssignedPluralName = "Assignments";
			this.Roles.Assignment = WorkEffortInventoryAssignmentAssignment.RoleType;

			var WorkEffortInventoryAssignmentInventoryItem = new RelationType(AppsDomain.Instance, new Guid("5fcdb553-4b8f-419b-9f12-b9cefa68d39f"), new Guid("dba27480-4d2f-4e69-af01-4e9afba2cc98"), new Guid("3f7a72a4-2727-4dd6-a602-60ef9b6896af"));
			WorkEffortInventoryAssignmentInventoryItem.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkEffortInventoryAssignmentInventoryItem.IsIndexed = true;

			WorkEffortInventoryAssignmentInventoryItem.AssociationType.ObjectType = this;

			WorkEffortInventoryAssignmentInventoryItem.RoleType.ObjectType = InventoryItemInterface.Instance;;
			WorkEffortInventoryAssignmentInventoryItem.RoleType.AssignedSingularName = "InventoryItem";
			WorkEffortInventoryAssignmentInventoryItem.RoleType.AssignedPluralName = "InventoryItems";
			this.Roles.InventoryItem = WorkEffortInventoryAssignmentInventoryItem.RoleType;

			var WorkEffortInventoryAssignmentQuantity = new RelationType(AppsDomain.Instance, new Guid("70121570-c02d-4977-80e4-23e14cbc3fc9"), new Guid("b4224775-005c-4078-a5b6-2b8a60bc143a"), new Guid("c82f1c25-9c42-4d38-8fae-f8790e2333ef"));
			WorkEffortInventoryAssignmentQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			WorkEffortInventoryAssignmentQuantity.AssociationType.ObjectType = this;

			WorkEffortInventoryAssignmentQuantity.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			WorkEffortInventoryAssignmentQuantity.RoleType.AssignedSingularName = "Quantity";
			WorkEffortInventoryAssignmentQuantity.RoleType.AssignedPluralName = "Quantities";
			this.Roles.Quantity = WorkEffortInventoryAssignmentQuantity.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkEffortInventoryAssignmentClass.Instance.ConcreteRoles.Assignment = WorkEffortInventoryAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Assignment]; 

			WorkEffortInventoryAssignmentClass.Instance.ConcreteRoles.InventoryItem = WorkEffortInventoryAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InventoryItem]; 

			WorkEffortInventoryAssignmentClass.Instance.ConcreteRoles.Quantity = WorkEffortInventoryAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 


		}

		internal class RolesType
		{
			internal RoleType Assignment;
			internal RoleType InventoryItem;
			internal RoleType Quantity;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Assignment;
			internal ConcreteRoleType InventoryItem;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class CommunicationEventObjectStateClass : Class
	{
		public static CommunicationEventObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CommunicationEventObjectStateClass() : base(AppsDomain.Instance, new Guid("f6ad2546-e977-4176-b03d-d30fb101270c"))
        {
			this.SingularName = "CommunicationEventObjectState";
			this.PluralName = "CommunicationEventObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("46b8bc38-d5a2-4741-ae58-77c215cba4b8"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CityClass : Class
	{
		public static CityClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CityClass() : base(AppsDomain.Instance, new Guid("f6dceab0-f4a7-435e-abce-ac9f7bd28ae4"))
        {
			this.SingularName = "City";
			this.PluralName = "Cities";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("35fd7593-85e6-4c75-acaf-23c027373f7a"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("6e203504-dfa2-45c2-b651-54a7fda9254a"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("c5f137ac-bf20-4142-bbe2-f2a7af930772"))
			{
				Subtype = Instance,
				Supertype = CountryBoundInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CityName = new RelationType(AppsDomain.Instance, new Guid("05ea705c-9800-4442-a684-b8b4251b51ed"), new Guid("a584625d-889d-4943-a130-fab2697def9f"), new Guid("889ccbe9-96a3-4d8e-9b8c-a1877ab89255"));
			CityName.AssignedMultiplicity = Multiplicity.OneToOne;
			CityName.AssociationType.ObjectType = this;

			CityName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CityName.RoleType.AssignedSingularName = "Name";
			CityName.RoleType.AssignedPluralName = "Names";
			CityName.RoleType.Size = 256;
			this.Roles.Name = CityName.RoleType;

			var CityState = new RelationType(AppsDomain.Instance, new Guid("559dd596-e784-4067-a993-b651ac17329d"), new Guid("06cc0af4-6bb9-4a86-a3e9-496f36002c92"), new Guid("89811da3-093a-42fe-8142-60692f1c3f05"));
			CityState.AssignedMultiplicity = Multiplicity.ManyToOne;
			CityState.IsIndexed = true;

			CityState.AssociationType.ObjectType = this;

			CityState.RoleType.ObjectType = StateClass.Instance;;
			CityState.RoleType.AssignedSingularName = "State";
			CityState.RoleType.AssignedPluralName = "States";
			this.Roles.State = CityState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CityClass.Instance.ConcreteRoles.Name = CityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			CityClass.Instance.ConcreteRoles.State = CityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.State]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType State;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType State;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Country;

		}
	}public partial class PickListObjectStateClass : Class
	{
		public static PickListObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PickListObjectStateClass() : base(AppsDomain.Instance, new Guid("f7108ec0-3203-4e62-b323-2e3a6a527d66"))
        {
			this.SingularName = "PickListObjectState";
			this.PluralName = "PickListObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("00ec9b9b-f576-4576-ae02-0c0746948d56"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class MaterialsUsageClass : Class
	{
		public static MaterialsUsageClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal MaterialsUsageClass() : base(AppsDomain.Instance, new Guid("f77787aa-66af-4d6a-bbe1-ce3d93020185"))
        {
			this.SingularName = "MaterialsUsage";
			this.PluralName = "MaterialsUsages";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("4218e630-225f-4032-9609-4f67628702d2"))
			{
				Subtype = Instance,
				Supertype = ServiceEntryInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var MaterialsUsageAmount = new RelationType(AppsDomain.Instance, new Guid("a244ab38-6469-4aa4-ae7e-c245f17f2368"), new Guid("719acc0e-aaa9-465a-a08a-a283635cf48c"), new Guid("441feb11-9913-4c2d-a27f-01f0c4ed27ae"));
			MaterialsUsageAmount.AssignedMultiplicity = Multiplicity.OneToOne;
			MaterialsUsageAmount.AssociationType.ObjectType = this;

			MaterialsUsageAmount.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			MaterialsUsageAmount.RoleType.AssignedSingularName = "Amount";
			MaterialsUsageAmount.RoleType.AssignedPluralName = "Amounts";
			MaterialsUsageAmount.RoleType.Scale = 2;
			MaterialsUsageAmount.RoleType.Precision = 19;
			this.Roles.Amount = MaterialsUsageAmount.RoleType;


		}

		internal override void SetRelationTypes()
		{
			MaterialsUsageClass.Instance.ConcreteRoles.Amount = MaterialsUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Amount]; 


		}

		internal class RolesType
		{
			internal RoleType Amount;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType ThroughDateTime;
			internal ConcreteRoleType EngagementItem;
			internal ConcreteRoleType IsBillable;
			internal ConcreteRoleType FromDateTime;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class EmploymentTerminationReasonClass : Class
	{
		public static EmploymentTerminationReasonClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal EmploymentTerminationReasonClass() : base(AppsDomain.Instance, new Guid("f7b039f4-10f4-4939-8059-5f190fd13b09"))
        {
			this.SingularName = "EmploymentTerminationReason";
			this.PluralName = "EmploymentTerminationReasons";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("5c52265e-ea77-4746-9b1f-0046d6622263"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class WorkEffortObjectStateClass : Class
	{
		public static WorkEffortObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkEffortObjectStateClass() : base(AppsDomain.Instance, new Guid("f7d24734-88d3-47e7-b718-8815914c9ad4"))
        {
			this.SingularName = "WorkEffortObjectState";
			this.PluralName = "WorkEffortObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("d66bff4f-9586-4bbd-8fbc-526a0ec7cca0"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class TimePeriodUsageClass : Class
	{
		public static TimePeriodUsageClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TimePeriodUsageClass() : base(AppsDomain.Instance, new Guid("f7e69670-1824-44ea-b2cd-fdef02ef84a7"))
        {
			this.SingularName = "TimePeriodUsage";
			this.PluralName = "TimePeriodUsages";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("adf08681-f036-4394-81d4-fc2ea2eb19ae"))
			{
				Subtype = Instance,
				Supertype = DeploymentUsageInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType TimeFrequency;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType FromDate;
			internal ConcreteRoleType ThroughDate;

		}
	}public partial class BudgetObjectStateClass : Class
	{
		public static BudgetObjectStateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal BudgetObjectStateClass() : base(AppsDomain.Instance, new Guid("f8ae512e-bca5-498b-860b-11c06ab04d72"))
        {
			this.SingularName = "BudgetObjectState";
			this.PluralName = "BudgetObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("7e58e071-1c8a-4482-9768-321dd887789f"))
			{
				Subtype = Instance,
				Supertype = ObjectStateInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class WorkRequirementClass : Class
	{
		public static WorkRequirementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal WorkRequirementClass() : base(AppsDomain.Instance, new Guid("fa4303c8-a09d-4dd5-97b3-76459b8e038d"))
        {
			this.SingularName = "WorkRequirement";
			this.PluralName = "WorkRequirements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("0be4cde1-613d-4718-b9fc-a1c9594ff618"))
			{
				Subtype = Instance,
				Supertype = RequirementInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var WorkRequirementFixedAsset = new RelationType(AppsDomain.Instance, new Guid("b2d15c8b-a739-4c9d-bc16-eff5e6ca112e"), new Guid("94c8458e-e890-46b0-bdd4-dbfcb9877ded"), new Guid("22899775-0083-4171-801f-9396c9ba16a3"));
			WorkRequirementFixedAsset.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkRequirementFixedAsset.IsIndexed = true;

			WorkRequirementFixedAsset.AssociationType.ObjectType = this;

			WorkRequirementFixedAsset.RoleType.ObjectType = FixedAssetInterface.Instance;;
			WorkRequirementFixedAsset.RoleType.AssignedSingularName = "FixedAsset";
			WorkRequirementFixedAsset.RoleType.AssignedPluralName = "FixedAssets";
			this.Roles.FixedAsset = WorkRequirementFixedAsset.RoleType;

			var WorkRequirementDeliverable = new RelationType(AppsDomain.Instance, new Guid("c9b7298e-1a19-4805-94d6-a6a33acccce0"), new Guid("664c20b0-6cba-43f8-a52a-2655501b9348"), new Guid("9ae7027e-6541-41fd-bae0-6e61c424c864"));
			WorkRequirementDeliverable.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkRequirementDeliverable.IsIndexed = true;

			WorkRequirementDeliverable.AssociationType.ObjectType = this;

			WorkRequirementDeliverable.RoleType.ObjectType = DeliverableClass.Instance;;
			WorkRequirementDeliverable.RoleType.AssignedSingularName = "Deliverable";
			WorkRequirementDeliverable.RoleType.AssignedPluralName = "Deliverables";
			this.Roles.Deliverable = WorkRequirementDeliverable.RoleType;

			var WorkRequirementProduct = new RelationType(AppsDomain.Instance, new Guid("ef364ba6-62ed-40db-a580-cf7f6f473e27"), new Guid("beb281bd-199b-4416-bb38-7d21ec376398"), new Guid("8f541554-8bfa-404a-85e9-453f2809d4a4"));
			WorkRequirementProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			WorkRequirementProduct.IsIndexed = true;

			WorkRequirementProduct.AssociationType.ObjectType = this;

			WorkRequirementProduct.RoleType.ObjectType = ProductInterface.Instance;;
			WorkRequirementProduct.RoleType.AssignedSingularName = "Product";
			WorkRequirementProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = WorkRequirementProduct.RoleType;


		}

		internal override void SetRelationTypes()
		{
			WorkRequirementClass.Instance.ConcreteRoles.FixedAsset = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FixedAsset]; 

			WorkRequirementClass.Instance.ConcreteRoles.Deliverable = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Deliverable]; 

			WorkRequirementClass.Instance.ConcreteRoles.Product = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 


		}

		internal class RolesType
		{
			internal RoleType FixedAsset;
			internal RoleType Deliverable;
			internal RoleType Product;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType FixedAsset;
			internal ConcreteRoleType Deliverable;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType RequiredByDate;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Authorizer;
			internal ConcreteRoleType RequirementStatus;
			internal ConcreteRoleType Reason;
			internal ConcreteRoleType Child;
			internal ConcreteRoleType NeededFor;
			internal ConcreteRoleType Originator;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType CurrentRequirementStatus;
			internal ConcreteRoleType Facility;
			internal ConcreteRoleType ServicedBy;
			internal ConcreteRoleType EstimatedBudget;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class FeeClass : Class
	{
		public static FeeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal FeeClass() : base(AppsDomain.Instance, new Guid("fb3dd618-eeb5-4ef6-87ca-abfe91dc603f"))
        {
			this.SingularName = "Fee";
			this.PluralName = "Fees";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("9e8e17a2-0e9d-46e2-b0b3-26befed0edc1"))
			{
				Subtype = Instance,
				Supertype = OrderAdjustmentInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Amount;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType Percentage;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PhoneCommunicationClass : Class
	{
		public static PhoneCommunicationClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PhoneCommunicationClass() : base(AppsDomain.Instance, new Guid("fcdf4f00-d6f4-493f-a430-89789a3cdef6"))
        {
			this.SingularName = "PhoneCommunication";
			this.PluralName = "PhoneCommunications";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("1c3b3492-3020-4d56-a3af-f4b82d5af5f1"))
			{
				Subtype = Instance,
				Supertype = CommunicationEventInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PhoneCommunicationLeftVoiceMail = new RelationType(AppsDomain.Instance, new Guid("50a8225e-7094-4572-8074-a5df4a50b0bd"), new Guid("5fb6405b-2d06-425d-9e42-cb6638a2e308"), new Guid("209e3d12-b5cf-49c9-a39c-15f14690ec69"));
			PhoneCommunicationLeftVoiceMail.AssignedMultiplicity = Multiplicity.OneToOne;
			PhoneCommunicationLeftVoiceMail.AssociationType.ObjectType = this;

			PhoneCommunicationLeftVoiceMail.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			PhoneCommunicationLeftVoiceMail.RoleType.AssignedSingularName = "LeftVoiceMail";
			PhoneCommunicationLeftVoiceMail.RoleType.AssignedPluralName = "LeftVoiceMails";
			this.Roles.LeftVoiceMail = PhoneCommunicationLeftVoiceMail.RoleType;

			var PhoneCommunicationIncomingCall = new RelationType(AppsDomain.Instance, new Guid("53df1269-a6f0-49a4-bd2f-af4aff75565a"), new Guid("32e719bd-39c7-4fc3-bff2-e0091cebd0b7"), new Guid("5bbb6e8a-7c82-492e-b497-3579007f9294"));
			PhoneCommunicationIncomingCall.AssignedMultiplicity = Multiplicity.OneToOne;
			PhoneCommunicationIncomingCall.AssociationType.ObjectType = this;

			PhoneCommunicationIncomingCall.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			PhoneCommunicationIncomingCall.RoleType.AssignedSingularName = "IncomingCall";
			PhoneCommunicationIncomingCall.RoleType.AssignedPluralName = "IncomingCalls";
			this.Roles.IncomingCall = PhoneCommunicationIncomingCall.RoleType;

			var PhoneCommunicationReceiver = new RelationType(AppsDomain.Instance, new Guid("5e3c675b-b329-47a4-9d53-b0e95837a23b"), new Guid("16fa813c-15d6-4bfb-a7b3-c295efe47a1c"), new Guid("f9320b55-230d-4f10-9a1b-6960137326b7"));
			PhoneCommunicationReceiver.AssignedMultiplicity = Multiplicity.ManyToMany;
			PhoneCommunicationReceiver.IsIndexed = true;

			PhoneCommunicationReceiver.AssociationType.ObjectType = this;

			PhoneCommunicationReceiver.RoleType.ObjectType = PartyInterface.Instance;;
			PhoneCommunicationReceiver.RoleType.AssignedSingularName = "Receiver";
			PhoneCommunicationReceiver.RoleType.AssignedPluralName = "Receivers";
			this.Roles.Receiver = PhoneCommunicationReceiver.RoleType;

			var PhoneCommunicationCaller = new RelationType(AppsDomain.Instance, new Guid("7a37ab85-222a-4d13-b832-b222faefcf39"), new Guid("79c04646-6f62-4867-9f89-f2ce1876e981"), new Guid("507e6ff3-3baa-4c77-b41b-4d1893443dc2"));
			PhoneCommunicationCaller.AssignedMultiplicity = Multiplicity.ManyToMany;
			PhoneCommunicationCaller.IsIndexed = true;

			PhoneCommunicationCaller.AssociationType.ObjectType = this;

			PhoneCommunicationCaller.RoleType.ObjectType = PartyInterface.Instance;;
			PhoneCommunicationCaller.RoleType.AssignedSingularName = "Caller";
			PhoneCommunicationCaller.RoleType.AssignedPluralName = "Callers";
			this.Roles.Caller = PhoneCommunicationCaller.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PhoneCommunicationClass.Instance.ConcreteRoles.LeftVoiceMail = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LeftVoiceMail]; 

			PhoneCommunicationClass.Instance.ConcreteRoles.IncomingCall = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IncomingCall]; 

			PhoneCommunicationClass.Instance.ConcreteRoles.Receiver = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Receiver]; 

			PhoneCommunicationClass.Instance.ConcreteRoles.Caller = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Caller]; 


		}

		internal class RolesType
		{
			internal RoleType LeftVoiceMail;
			internal RoleType IncomingCall;
			internal RoleType Receiver;
			internal RoleType Caller;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LeftVoiceMail;
			internal ConcreteRoleType IncomingCall;
			internal ConcreteRoleType Receiver;
			internal ConcreteRoleType Caller;
			internal ConcreteRoleType ScheduledStart;
			internal ConcreteRoleType ToParty;
			internal ConcreteRoleType ToContactMechanism;
			internal ConcreteRoleType CommunicationEventStatus;
			internal ConcreteRoleType InvolvedParty;
			internal ConcreteRoleType InitialScheduledStart;
			internal ConcreteRoleType CurrentObjectState;
			internal ConcreteRoleType EventPurpose;
			internal ConcreteRoleType ScheduledEnd;
			internal ConcreteRoleType ActualEnd;
			internal ConcreteRoleType WorkEffort;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType InitialScheduledEnd;
			internal ConcreteRoleType FromParty;
			internal ConcreteRoleType Subject;
			internal ConcreteRoleType PreviousObjectState;
			internal ConcreteRoleType Document;
			internal ConcreteRoleType Case;
			internal ConcreteRoleType Priority;
			internal ConcreteRoleType FromContactMechanism;
			internal ConcreteRoleType Owner;
			internal ConcreteRoleType CurrentCommunicationEventStatus;
			internal ConcreteRoleType Note;
			internal ConcreteRoleType ActualStart;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Comment;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class ProductDeliverySkillRequirementClass : Class
	{
		public static ProductDeliverySkillRequirementClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ProductDeliverySkillRequirementClass() : base(AppsDomain.Instance, new Guid("fd342cb7-53d3-4377-acd8-ee586b924678"))
        {
			this.SingularName = "ProductDeliverySkillRequirement";
			this.PluralName = "ProductDeliverySkillRequirements";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("3c46ad73-9cf9-4d0a-928e-e87d3da6a75e"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ProductDeliverySkillRequirementStartedUsingDate = new RelationType(AppsDomain.Instance, new Guid("12c6abaf-a080-45f3-820d-b462978d2539"), new Guid("4a6bd8f2-ea2a-4e07-a018-4b4b37b45a96"), new Guid("3e12bb69-b0bb-40ba-a987-89f5cc40c436"));
			ProductDeliverySkillRequirementStartedUsingDate.AssignedMultiplicity = Multiplicity.OneToOne;
			ProductDeliverySkillRequirementStartedUsingDate.AssociationType.ObjectType = this;

			ProductDeliverySkillRequirementStartedUsingDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			ProductDeliverySkillRequirementStartedUsingDate.RoleType.AssignedSingularName = "StartedUsingDate";
			ProductDeliverySkillRequirementStartedUsingDate.RoleType.AssignedPluralName = "StartedUsingDates";
			this.Roles.StartedUsingDate = ProductDeliverySkillRequirementStartedUsingDate.RoleType;

			var ProductDeliverySkillRequirementService = new RelationType(AppsDomain.Instance, new Guid("5a52b67e-23e4-45ac-a1d4-cb083bf897cc"), new Guid("7de9d895-a524-4fc2-a5f4-7b9e78921d6c"), new Guid("b44bf4b9-3aa8-4abb-b145-11d888bf55c5"));
			ProductDeliverySkillRequirementService.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductDeliverySkillRequirementService.IsIndexed = true;

			ProductDeliverySkillRequirementService.AssociationType.ObjectType = this;

			ProductDeliverySkillRequirementService.RoleType.ObjectType = ServiceInterface.Instance;;
			ProductDeliverySkillRequirementService.RoleType.AssignedSingularName = "Service";
			ProductDeliverySkillRequirementService.RoleType.AssignedPluralName = "Services";
			this.Roles.Service = ProductDeliverySkillRequirementService.RoleType;

			var ProductDeliverySkillRequirementSkill = new RelationType(AppsDomain.Instance, new Guid("6d4ec793-41a7-4044-9744-42d1bd44bbd4"), new Guid("fe73df0c-f46c-42e6-8274-a5de09de72d5"), new Guid("2c2f1476-48a5-45f4-86df-03a86a965af4"));
			ProductDeliverySkillRequirementSkill.AssignedMultiplicity = Multiplicity.ManyToOne;
			ProductDeliverySkillRequirementSkill.IsIndexed = true;

			ProductDeliverySkillRequirementSkill.AssociationType.ObjectType = this;

			ProductDeliverySkillRequirementSkill.RoleType.ObjectType = SkillClass.Instance;;
			ProductDeliverySkillRequirementSkill.RoleType.AssignedSingularName = "Skill";
			ProductDeliverySkillRequirementSkill.RoleType.AssignedPluralName = "Skills";
			this.Roles.Skill = ProductDeliverySkillRequirementSkill.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductDeliverySkillRequirementClass.Instance.ConcreteRoles.StartedUsingDate = ProductDeliverySkillRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.StartedUsingDate]; 

			ProductDeliverySkillRequirementClass.Instance.ConcreteRoles.Service = ProductDeliverySkillRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Service]; 

			ProductDeliverySkillRequirementClass.Instance.ConcreteRoles.Skill = ProductDeliverySkillRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Skill]; 


		}

		internal class RolesType
		{
			internal RoleType StartedUsingDate;
			internal RoleType Service;
			internal RoleType Skill;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType StartedUsingDate;
			internal ConcreteRoleType Service;
			internal ConcreteRoleType Skill;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class SalesRepProductCategoryRevenueClass : Class
	{
		public static SalesRepProductCategoryRevenueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SalesRepProductCategoryRevenueClass() : base(AppsDomain.Instance, new Guid("fd411b2a-0121-4f1f-b1db-86c187e8a089"))
        {
			this.SingularName = "SalesRepProductCategoryRevenue";
			this.PluralName = "SalesRepProductCategoryRevenues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("467836cd-8b9f-475a-b72c-338474df554c"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("9ba17394-99e3-4076-a396-ee90ceb32cdf"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SalesRepProductCategoryRevenueMonth = new RelationType(AppsDomain.Instance, new Guid("30a0a0de-0c74-494c-bf21-ebf13238dd61"), new Guid("e4e3c7ad-970d-4439-ba86-81be13a05dd8"), new Guid("ab9e97c7-3c5c-4fdb-a36e-637875cb714d"));
			SalesRepProductCategoryRevenueMonth.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepProductCategoryRevenueMonth.AssociationType.ObjectType = this;

			SalesRepProductCategoryRevenueMonth.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesRepProductCategoryRevenueMonth.RoleType.AssignedSingularName = "Month";
			SalesRepProductCategoryRevenueMonth.RoleType.AssignedPluralName = "Months";
			this.Roles.Month = SalesRepProductCategoryRevenueMonth.RoleType;

			var SalesRepProductCategoryRevenueSalesRepName = new RelationType(AppsDomain.Instance, new Guid("59d7cb27-e752-405b-9515-7db04aa37da7"), new Guid("348f4a59-ef85-47b1-af43-05ed9982c594"), new Guid("61a193c4-66ae-48ff-b810-437b9812e77f"));
			SalesRepProductCategoryRevenueSalesRepName.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepProductCategoryRevenueSalesRepName.AssociationType.ObjectType = this;

			SalesRepProductCategoryRevenueSalesRepName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			SalesRepProductCategoryRevenueSalesRepName.RoleType.AssignedSingularName = "SalesRepName";
			SalesRepProductCategoryRevenueSalesRepName.RoleType.AssignedPluralName = "SalesRepNames";
			SalesRepProductCategoryRevenueSalesRepName.RoleType.Size = 256;
			this.Roles.SalesRepName = SalesRepProductCategoryRevenueSalesRepName.RoleType;

			var SalesRepProductCategoryRevenueInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("6ee43a8c-8f42-491d-a0ab-3ea5d4352dc8"), new Guid("9a6c58ab-5119-47f6-974d-fa01fbb3d320"), new Guid("4d85870c-75ec-4153-894a-30a6cb253060"));
			SalesRepProductCategoryRevenueInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepProductCategoryRevenueInternalOrganisation.IsIndexed = true;

			SalesRepProductCategoryRevenueInternalOrganisation.AssociationType.ObjectType = this;

			SalesRepProductCategoryRevenueInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SalesRepProductCategoryRevenueInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			SalesRepProductCategoryRevenueInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = SalesRepProductCategoryRevenueInternalOrganisation.RoleType;

			var SalesRepProductCategoryRevenueProductCategory = new RelationType(AppsDomain.Instance, new Guid("7f39eefb-9210-4796-9b91-dc4d5e0b4ea1"), new Guid("f35dfa6d-eca3-49b9-8b83-cd152b9be673"), new Guid("db1bd6a7-a47c-45a3-8e6d-767a4a8e06a5"));
			SalesRepProductCategoryRevenueProductCategory.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepProductCategoryRevenueProductCategory.IsIndexed = true;

			SalesRepProductCategoryRevenueProductCategory.AssociationType.ObjectType = this;

			SalesRepProductCategoryRevenueProductCategory.RoleType.ObjectType = ProductCategoryClass.Instance;;
			SalesRepProductCategoryRevenueProductCategory.RoleType.AssignedSingularName = "ProductCategory";
			SalesRepProductCategoryRevenueProductCategory.RoleType.AssignedPluralName = "ProductCategories";
			this.Roles.ProductCategory = SalesRepProductCategoryRevenueProductCategory.RoleType;

			var SalesRepProductCategoryRevenueCurrency = new RelationType(AppsDomain.Instance, new Guid("92e8bbd9-fe5a-4053-aef3-593dbb13eac0"), new Guid("6e9761f4-fc3d-485a-9b45-32f60f993f3b"), new Guid("b57c833b-6083-4fc5-a6d5-1350caab9a22"));
			SalesRepProductCategoryRevenueCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepProductCategoryRevenueCurrency.IsIndexed = true;

			SalesRepProductCategoryRevenueCurrency.AssociationType.ObjectType = this;

			SalesRepProductCategoryRevenueCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			SalesRepProductCategoryRevenueCurrency.RoleType.AssignedSingularName = "Currency";
			SalesRepProductCategoryRevenueCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = SalesRepProductCategoryRevenueCurrency.RoleType;

			var SalesRepProductCategoryRevenueRevenue = new RelationType(AppsDomain.Instance, new Guid("a875a617-4d86-4d53-bcb5-bc4b40963cb4"), new Guid("32f41de8-6ea6-4a34-a36c-bfc0b3e5ca77"), new Guid("4fc24ed9-01b7-4475-9309-fe3702031b63"));
			SalesRepProductCategoryRevenueRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepProductCategoryRevenueRevenue.AssociationType.ObjectType = this;

			SalesRepProductCategoryRevenueRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			SalesRepProductCategoryRevenueRevenue.RoleType.AssignedSingularName = "Revenue";
			SalesRepProductCategoryRevenueRevenue.RoleType.AssignedPluralName = "Revenues";
			SalesRepProductCategoryRevenueRevenue.RoleType.Scale = 2;
			SalesRepProductCategoryRevenueRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = SalesRepProductCategoryRevenueRevenue.RoleType;

			var SalesRepProductCategoryRevenueYear = new RelationType(AppsDomain.Instance, new Guid("e291d604-4afc-4d73-b28e-04a723a4747b"), new Guid("9a6dcfe5-c728-4c33-a859-d0f5538790c3"), new Guid("be3e8061-a5b1-482f-9d0b-5a1b4774cc80"));
			SalesRepProductCategoryRevenueYear.AssignedMultiplicity = Multiplicity.OneToOne;
			SalesRepProductCategoryRevenueYear.AssociationType.ObjectType = this;

			SalesRepProductCategoryRevenueYear.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			SalesRepProductCategoryRevenueYear.RoleType.AssignedSingularName = "Year";
			SalesRepProductCategoryRevenueYear.RoleType.AssignedPluralName = "Years";
			this.Roles.Year = SalesRepProductCategoryRevenueYear.RoleType;

			var SalesRepProductCategoryRevenueSalesRep = new RelationType(AppsDomain.Instance, new Guid("f978075e-05b8-4204-aa2f-97ab416fd3e8"), new Guid("0695bc15-2d76-4464-b61f-7627cf885ad3"), new Guid("52cfc399-8014-4b2e-94f0-bb67fec26e65"));
			SalesRepProductCategoryRevenueSalesRep.AssignedMultiplicity = Multiplicity.ManyToOne;
			SalesRepProductCategoryRevenueSalesRep.IsIndexed = true;

			SalesRepProductCategoryRevenueSalesRep.AssociationType.ObjectType = this;

			SalesRepProductCategoryRevenueSalesRep.RoleType.ObjectType = PersonClass.Instance;;
			SalesRepProductCategoryRevenueSalesRep.RoleType.AssignedSingularName = "SalesRep";
			SalesRepProductCategoryRevenueSalesRep.RoleType.AssignedPluralName = "SalesReps";
			this.Roles.SalesRep = SalesRepProductCategoryRevenueSalesRep.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SalesRepProductCategoryRevenueClass.Instance.ConcreteRoles.Month = SalesRepProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Month]; 

			SalesRepProductCategoryRevenueClass.Instance.ConcreteRoles.SalesRepName = SalesRepProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRepName]; 

			SalesRepProductCategoryRevenueClass.Instance.ConcreteRoles.InternalOrganisation = SalesRepProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			SalesRepProductCategoryRevenueClass.Instance.ConcreteRoles.ProductCategory = SalesRepProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ProductCategory]; 

			SalesRepProductCategoryRevenueClass.Instance.ConcreteRoles.Currency = SalesRepProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			SalesRepProductCategoryRevenueClass.Instance.ConcreteRoles.Revenue = SalesRepProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			SalesRepProductCategoryRevenueClass.Instance.ConcreteRoles.Year = SalesRepProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Year]; 

			SalesRepProductCategoryRevenueClass.Instance.ConcreteRoles.SalesRep = SalesRepProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SalesRep]; 


		}

		internal class RolesType
		{
			internal RoleType Month;
			internal RoleType SalesRepName;
			internal RoleType InternalOrganisation;
			internal RoleType ProductCategory;
			internal RoleType Currency;
			internal RoleType Revenue;
			internal RoleType Year;
			internal RoleType SalesRep;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Month;
			internal ConcreteRoleType SalesRepName;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType ProductCategory;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Year;
			internal ConcreteRoleType SalesRep;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class ServiceFeatureClass : Class
	{
		public static ServiceFeatureClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ServiceFeatureClass() : base(AppsDomain.Instance, new Guid("fdbea721-61f8-4e75-b1dd-e3880636ee78"))
        {
			this.SingularName = "ServiceFeature";
			this.PluralName = "ServiceFeatures";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("044d8ced-1500-4eb9-9963-5f2697fa5d06"))
			{
				Subtype = Instance,
				Supertype = EnumerationInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("26f4f853-8a37-46a9-ad5a-bddd2c723324"))
			{
				Subtype = Instance,
				Supertype = ProductFeatureInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsActive;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType EstimatedProductCost;
			internal ConcreteRoleType BasePrice;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType DependentFeature;
			internal ConcreteRoleType IncompatibleFeature;
			internal ConcreteRoleType VatRate;

		}
	}public partial class PartyProductRevenueHistoryClass : Class
	{
		public static PartyProductRevenueHistoryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PartyProductRevenueHistoryClass() : base(AppsDomain.Instance, new Guid("fdf777a8-2e6c-45c3-9385-2d53c1aa8469"))
        {
			this.SingularName = "PartyProductRevenueHistory";
			this.PluralName = "PartyProductRevenueHistories";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(AppsDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(AppsDomain.Instance, new Guid("56ace0ca-39ce-48ad-8eaf-aa8ac4bb9020"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PartyProductRevenueHistoryRevenue = new RelationType(AppsDomain.Instance, new Guid("317be52d-211d-4c11-8027-3cdffa9995e7"), new Guid("1359a604-a2ba-4291-84a9-82fe2f4d4108"), new Guid("4ba5744c-d4ed-4218-ac61-681681fbe80e"));
			PartyProductRevenueHistoryRevenue.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductRevenueHistoryRevenue.AssociationType.ObjectType = this;

			PartyProductRevenueHistoryRevenue.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyProductRevenueHistoryRevenue.RoleType.AssignedSingularName = "Revenue";
			PartyProductRevenueHistoryRevenue.RoleType.AssignedPluralName = "Revenues";
			PartyProductRevenueHistoryRevenue.RoleType.Scale = 2;
			PartyProductRevenueHistoryRevenue.RoleType.Precision = 19;
			this.Roles.Revenue = PartyProductRevenueHistoryRevenue.RoleType;

			var PartyProductRevenueHistoryParty = new RelationType(AppsDomain.Instance, new Guid("8a0f314e-522a-43d2-a1a5-5c24ac611f68"), new Guid("4a0d36f0-57b7-4080-a03e-88bcfed45550"), new Guid("6e05bb8d-c23e-4e63-8dd0-25807023e7e9"));
			PartyProductRevenueHistoryParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductRevenueHistoryParty.IsIndexed = true;

			PartyProductRevenueHistoryParty.AssociationType.ObjectType = this;

			PartyProductRevenueHistoryParty.RoleType.ObjectType = PartyInterface.Instance;;
			PartyProductRevenueHistoryParty.RoleType.AssignedSingularName = "Party";
			PartyProductRevenueHistoryParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = PartyProductRevenueHistoryParty.RoleType;

			var PartyProductRevenueHistoryProduct = new RelationType(AppsDomain.Instance, new Guid("9cc5bc41-3dff-4628-aaa5-d6acaf245b5c"), new Guid("f9a1dcd6-b3f0-47d9-a17d-26c619c584b6"), new Guid("bd2426e5-d1ae-4e0e-bd87-a1721cd6bd2b"));
			PartyProductRevenueHistoryProduct.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductRevenueHistoryProduct.IsIndexed = true;

			PartyProductRevenueHistoryProduct.AssociationType.ObjectType = this;

			PartyProductRevenueHistoryProduct.RoleType.ObjectType = ProductInterface.Instance;;
			PartyProductRevenueHistoryProduct.RoleType.AssignedSingularName = "Product";
			PartyProductRevenueHistoryProduct.RoleType.AssignedPluralName = "Products";
			this.Roles.Product = PartyProductRevenueHistoryProduct.RoleType;

			var PartyProductRevenueHistoryQuantity = new RelationType(AppsDomain.Instance, new Guid("a717227b-927e-4fde-aece-2c70773e64c7"), new Guid("a34ff46d-a9cf-4584-858e-141a872bf1c2"), new Guid("73be43b2-e675-4120-9a85-d5fc15cbe0d3"));
			PartyProductRevenueHistoryQuantity.AssignedMultiplicity = Multiplicity.OneToOne;
			PartyProductRevenueHistoryQuantity.AssociationType.ObjectType = this;

			PartyProductRevenueHistoryQuantity.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PartyProductRevenueHistoryQuantity.RoleType.AssignedSingularName = "Quantity";
			PartyProductRevenueHistoryQuantity.RoleType.AssignedPluralName = "Quantities";
			PartyProductRevenueHistoryQuantity.RoleType.Scale = 2;
			PartyProductRevenueHistoryQuantity.RoleType.Precision = 19;
			this.Roles.Quantity = PartyProductRevenueHistoryQuantity.RoleType;

			var PartyProductRevenueHistoryInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("d1703751-31aa-461c-af8a-7f52ac8bc96f"), new Guid("f1db8806-c9ee-4b0d-bb11-da333ecd6acf"), new Guid("640ce1ea-0fea-475f-bb07-a45c34350314"));
			PartyProductRevenueHistoryInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductRevenueHistoryInternalOrganisation.IsIndexed = true;

			PartyProductRevenueHistoryInternalOrganisation.AssociationType.ObjectType = this;

			PartyProductRevenueHistoryInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			PartyProductRevenueHistoryInternalOrganisation.RoleType.AssignedSingularName = "InternalOrganisation";
			PartyProductRevenueHistoryInternalOrganisation.RoleType.AssignedPluralName = "InternalOrganisations";
			this.Roles.InternalOrganisation = PartyProductRevenueHistoryInternalOrganisation.RoleType;

			var PartyProductRevenueHistoryCurrency = new RelationType(AppsDomain.Instance, new Guid("ffc08a0f-5abc-4f3c-9e8d-7ebb4b43a656"), new Guid("6bbf007d-4212-4437-b06e-daeb76566c23"), new Guid("7b3cc4f1-6b9d-438b-b82a-9701ecfbd716"));
			PartyProductRevenueHistoryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			PartyProductRevenueHistoryCurrency.IsIndexed = true;

			PartyProductRevenueHistoryCurrency.AssociationType.ObjectType = this;

			PartyProductRevenueHistoryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			PartyProductRevenueHistoryCurrency.RoleType.AssignedSingularName = "Currency";
			PartyProductRevenueHistoryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = PartyProductRevenueHistoryCurrency.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartyProductRevenueHistoryClass.Instance.ConcreteRoles.Revenue = PartyProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Revenue]; 

			PartyProductRevenueHistoryClass.Instance.ConcreteRoles.Party = PartyProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 

			PartyProductRevenueHistoryClass.Instance.ConcreteRoles.Product = PartyProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Product]; 

			PartyProductRevenueHistoryClass.Instance.ConcreteRoles.Quantity = PartyProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Quantity]; 

			PartyProductRevenueHistoryClass.Instance.ConcreteRoles.InternalOrganisation = PartyProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.InternalOrganisation]; 

			PartyProductRevenueHistoryClass.Instance.ConcreteRoles.Currency = PartyProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 


		}

		internal class RolesType
		{
			internal RoleType Revenue;
			internal RoleType Party;
			internal RoleType Product;
			internal RoleType Quantity;
			internal RoleType InternalOrganisation;
			internal RoleType Currency;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Revenue;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType Product;
			internal ConcreteRoleType Quantity;
			internal ConcreteRoleType InternalOrganisation;
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class LocalisedTextClass : Class
	{
		public static LocalisedTextClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal LocalisedTextClass() : base(BaseDomain.Instance, new Guid("020f5d4d-4a59-4d7b-865a-d72fc70e4d97"))
        {
			this.SingularName = "LocalisedText";
			this.PluralName = "LocalisedTexts";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("c2b526fd-920d-470a-8a40-405b7e4d8335"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("ebe85e2a-084a-452c-896f-aaf390c5bf1a"))
			{
				Subtype = Instance,
				Supertype = LocalisedInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var LocalisedTextText = new RelationType(BaseDomain.Instance, new Guid("50dc85f0-3d22-4bc1-95d9-153674b89f7a"), new Guid("accd061b-20b9-4a24-bb2c-c2f7276f43ab"), new Guid("8d3f68e1-fa6e-414f-aa4d-25fcc2c975d6"));
			LocalisedTextText.AssignedMultiplicity = Multiplicity.OneToOne;
			LocalisedTextText.AssociationType.ObjectType = this;

			LocalisedTextText.RoleType.ObjectType = AllorsStringUnit.Instance;;
			LocalisedTextText.RoleType.AssignedSingularName = "Text";
			LocalisedTextText.RoleType.AssignedPluralName = "Texts";
			LocalisedTextText.RoleType.Size = -1;
			this.Roles.Text = LocalisedTextText.RoleType;


		}

		internal override void SetRelationTypes()
		{
			LocalisedTextClass.Instance.ConcreteRoles.Text = LocalisedTextClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Text]; 


		}

		internal class RolesType
		{
			internal RoleType Text;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Text;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Locale;

		}
	}public partial class CounterClass : Class
	{
		public static CounterClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CounterClass() : base(BaseDomain.Instance, new Guid("0568354f-e3d9-439e-baac-b7dce31b956a"))
        {
			this.SingularName = "Counter";
			this.PluralName = "Counters";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("f2a0c00d-ba20-44bd-94ec-1173370d77c9"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CounterValue = new RelationType(BaseDomain.Instance, new Guid("309d07d9-8dea-4e99-a3b8-53c0d360bc54"), new Guid("0c807020-5397-4cdb-8380-52899b7af6b7"), new Guid("ab60f6a7-d913-4377-ab47-97f0fb9d8f3b"));
			CounterValue.AssignedMultiplicity = Multiplicity.OneToOne;
			CounterValue.AssociationType.ObjectType = this;

			CounterValue.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			CounterValue.RoleType.AssignedSingularName = "Value";
			CounterValue.RoleType.AssignedPluralName = "Values";
			this.Roles.Value = CounterValue.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CounterClass.Instance.ConcreteRoles.Value = CounterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Value]; 


		}

		internal class RolesType
		{
			internal RoleType Value;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Value;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class StringTemplateClass : Class
	{
		public static StringTemplateClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal StringTemplateClass() : base(BaseDomain.Instance, new Guid("0c50c02a-cc9c-4617-8530-15a24d4ac969"))
        {
			this.SingularName = "StringTemplate";
			this.PluralName = "StringTemplates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("714a9702-01f8-48fc-8add-2f50a8b0bd91"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("84fc6495-3e2c-4a99-b0bc-7d818c24eb0b"))
			{
				Subtype = Instance,
				Supertype = LocalisedInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var StringTemplateBody = new RelationType(BaseDomain.Instance, new Guid("2f88f9f8-3c22-40d3-885c-2abd43af96cc"), new Guid("9ad9b285-2a91-4bd9-90dd-8f963ef0a465"), new Guid("3fcb83d0-11c5-48ba-ba9c-5126f0b4e9f4"));
			StringTemplateBody.AssignedMultiplicity = Multiplicity.OneToOne;
			StringTemplateBody.AssociationType.ObjectType = this;

			StringTemplateBody.RoleType.ObjectType = AllorsStringUnit.Instance;;
			StringTemplateBody.RoleType.AssignedSingularName = "Body";
			StringTemplateBody.RoleType.AssignedPluralName = "Bodies";
			StringTemplateBody.RoleType.Size = -1;
			this.Roles.Body = StringTemplateBody.RoleType;

			var StringTemplateName = new RelationType(BaseDomain.Instance, new Guid("c501103b-037a-4961-93df-2dbb74b88a76"), new Guid("1bcdddcc-e462-4d59-af2d-7346245cb271"), new Guid("37bd5d22-89f1-47a4-b6bd-8841e194b213"));
			StringTemplateName.AssignedMultiplicity = Multiplicity.OneToOne;
			StringTemplateName.AssociationType.ObjectType = this;

			StringTemplateName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			StringTemplateName.RoleType.AssignedSingularName = "Name";
			StringTemplateName.RoleType.AssignedPluralName = "Names";
			StringTemplateName.RoleType.Size = 256;
			this.Roles.Name = StringTemplateName.RoleType;

			var StringTemplateTemplatePurpose = new RelationType(AppsDomain.Instance, new Guid("a09af300-8983-4211-af75-3e04efa8ec36"), new Guid("c8d26b39-96a6-4be4-9675-5a6fdb54bae5"), new Guid("e40af32d-abdd-4d7b-9b3d-92abf7fb129a"));
			StringTemplateTemplatePurpose.AssignedMultiplicity = Multiplicity.ManyToOne;
			StringTemplateTemplatePurpose.IsIndexed = true;

			StringTemplateTemplatePurpose.AssociationType.ObjectType = this;

			StringTemplateTemplatePurpose.RoleType.ObjectType = TemplatePurposeClass.Instance;;
			StringTemplateTemplatePurpose.RoleType.AssignedSingularName = "TemplatePurpose";
			StringTemplateTemplatePurpose.RoleType.AssignedPluralName = "TemplatePurposes";
			this.Roles.TemplatePurpose = StringTemplateTemplatePurpose.RoleType;


		}

		internal override void SetRelationTypes()
		{
			StringTemplateClass.Instance.ConcreteRoles.Body = StringTemplateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Body]; 

			StringTemplateClass.Instance.ConcreteRoles.Name = StringTemplateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			StringTemplateClass.Instance.ConcreteRoles.TemplatePurpose = StringTemplateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TemplatePurpose]; 


		}

		internal class RolesType
		{
			internal RoleType Body;
			internal RoleType Name;
			internal RoleType TemplatePurpose;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Body;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType TemplatePurpose;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType Locale;

		}
	}public partial class UniquelyIdentifiableInterface: Interface
	{
		public static UniquelyIdentifiableInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal UniquelyIdentifiableInterface() : base(BaseDomain.Instance, new Guid("122ccfe1-f902-44c1-9d6c-6f6a0afa9469"))
        {
			this.SingularName = "UniquelyIdentifiable";
			this.PluralName = "UniquelyIdentifiables";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var UniquelyIdentifiableUniqueId = new RelationType(BaseDomain.Instance, new Guid("e1842d87-8157-40e7-b06e-4375f311f2c3"), new Guid("fe413e96-cfcf-4e8d-9f23-0fa4f457fdf1"), new Guid("d73fd9a4-13ee-4fa9-8925-d93eca328bf6"));
			UniquelyIdentifiableUniqueId.AssignedMultiplicity = Multiplicity.OneToOne;
			UniquelyIdentifiableUniqueId.IsIndexed = true;

			UniquelyIdentifiableUniqueId.AssociationType.ObjectType = this;

			UniquelyIdentifiableUniqueId.RoleType.ObjectType = AllorsUniqueUnit.Instance;;
			UniquelyIdentifiableUniqueId.RoleType.AssignedSingularName = "UniqueId";
			UniquelyIdentifiableUniqueId.RoleType.AssignedPluralName = "UniqueIds";
			this.Roles.UniqueId = UniquelyIdentifiableUniqueId.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductRequirementClass.Instance.ConcreteRoles.UniqueId = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			LetterCorrespondenceClass.Instance.ConcreteRoles.UniqueId = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseOrderClass.Instance.ConcreteRoles.UniqueId = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			RateTypeClass.Instance.ConcreteRoles.UniqueId = RateTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ContactMechanismPurposeClass.Instance.ConcreteRoles.UniqueId = ContactMechanismPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			TaxDocumentClass.Instance.ConcreteRoles.UniqueId = TaxDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseAgreementClass.Instance.ConcreteRoles.UniqueId = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CostCenterCategoryClass.Instance.ConcreteRoles.UniqueId = CostCenterCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SkillClass.Instance.ConcreteRoles.UniqueId = SkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			EmploymentTerminationClass.Instance.ConcreteRoles.UniqueId = EmploymentTerminationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			OperatingConditionClass.Instance.ConcreteRoles.UniqueId = OperatingConditionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			TermTypeClass.Instance.ConcreteRoles.UniqueId = TermTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseInvoiceItemTypeClass.Instance.ConcreteRoles.UniqueId = PurchaseInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PartSpecificationObjectStateClass.Instance.ConcreteRoles.UniqueId = PartSpecificationObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			RatingTypeClass.Instance.ConcreteRoles.UniqueId = RatingTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseInvoiceTypeClass.Instance.ConcreteRoles.UniqueId = PurchaseInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			GeneralLedgerAccountClass.Instance.ConcreteRoles.UniqueId = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PersonalTitleClass.Instance.ConcreteRoles.UniqueId = PersonalTitleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			TimeFrequencyClass.Instance.ConcreteRoles.UniqueId = TimeFrequencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.UniqueId = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			FaxCommunicationClass.Instance.ConcreteRoles.UniqueId = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ProductDrawingClass.Instance.ConcreteRoles.UniqueId = ProductDrawingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseShipmentObjectStateClass.Instance.ConcreteRoles.UniqueId = PurchaseShipmentObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesOrderItemObjectStateClass.Instance.ConcreteRoles.UniqueId = SalesOrderItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseReturnObjectStateClass.Instance.ConcreteRoles.UniqueId = PurchaseReturnObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			OwnCreditCardClass.Instance.ConcreteRoles.UniqueId = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			DimensionClass.Instance.ConcreteRoles.UniqueId = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesInvoiceItemTypeClass.Instance.ConcreteRoles.UniqueId = SalesInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ModelClass.Instance.ConcreteRoles.UniqueId = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PickListClass.Instance.ConcreteRoles.UniqueId = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CostCenterClass.Instance.ConcreteRoles.UniqueId = CostCenterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SkillRatingClass.Instance.ConcreteRoles.UniqueId = SkillRatingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			BuildingClass.Instance.ConcreteRoles.UniqueId = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseShipmentClass.Instance.ConcreteRoles.UniqueId = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			VatRateUsageClass.Instance.ConcreteRoles.UniqueId = VatRateUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ProjectClass.Instance.ConcreteRoles.UniqueId = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			HobbyClass.Instance.ConcreteRoles.UniqueId = HobbyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			AccountingTransactionTypeClass.Instance.ConcreteRoles.UniqueId = AccountingTransactionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ActivityClass.Instance.ConcreteRoles.UniqueId = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.UniqueId = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			AutomatedAgentClass.Instance.ConcreteRoles.UniqueId = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			FinishedGoodClass.Instance.ConcreteRoles.UniqueId = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PerformanceSpecificationClass.Instance.ConcreteRoles.UniqueId = PerformanceSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ProductionRunClass.Instance.ConcreteRoles.UniqueId = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			OrdinalClass.Instance.ConcreteRoles.UniqueId = OrdinalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ShipmentMethodClass.Instance.ConcreteRoles.UniqueId = ShipmentMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			OrganisationClass.Instance.ConcreteRoles.UniqueId = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			DebitCreditConstantClass.Instance.ConcreteRoles.UniqueId = DebitCreditConstantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			VatCalculationMethodClass.Instance.ConcreteRoles.UniqueId = VatCalculationMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			InvoiceSequenceClass.Instance.ConcreteRoles.UniqueId = InvoiceSequenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			DunningTypeClass.Instance.ConcreteRoles.UniqueId = DunningTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CapitalBudgetClass.Instance.ConcreteRoles.UniqueId = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PositionStatusClass.Instance.ConcreteRoles.UniqueId = PositionStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ShipmentPackageClass.Instance.ConcreteRoles.UniqueId = ShipmentPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseOrderObjectStateClass.Instance.ConcreteRoles.UniqueId = PurchaseOrderObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SizeClass.Instance.ConcreteRoles.UniqueId = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SerializedInventoryItemClass.Instance.ConcreteRoles.UniqueId = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesInvoiceItemObjectStateClass.Instance.ConcreteRoles.UniqueId = SalesInvoiceItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CarrierClass.Instance.ConcreteRoles.UniqueId = CarrierClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ProjectRequirementClass.Instance.ConcreteRoles.UniqueId = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CostOfGoodsSoldMethodClass.Instance.ConcreteRoles.UniqueId = CostOfGoodsSoldMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SkillLevelClass.Instance.ConcreteRoles.UniqueId = SkillLevelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ReceiptClass.Instance.ConcreteRoles.UniqueId = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			MaintenanceClass.Instance.ConcreteRoles.UniqueId = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.UniqueId = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			BillOfLadingClass.Instance.ConcreteRoles.UniqueId = BillOfLadingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			UnitOfMeasureClass.Instance.ConcreteRoles.UniqueId = UnitOfMeasureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			RoomClass.Instance.ConcreteRoles.UniqueId = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PlantClass.Instance.ConcreteRoles.UniqueId = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesInvoiceClass.Instance.ConcreteRoles.UniqueId = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			RegionClass.Instance.ConcreteRoles.UniqueId = RegionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesTerritoryClass.Instance.ConcreteRoles.UniqueId = SalesTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			AssetAssignmentStatusClass.Instance.ConcreteRoles.UniqueId = AssetAssignmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			DeductionTypeClass.Instance.ConcreteRoles.UniqueId = DeductionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PackagingSlipClass.Instance.ConcreteRoles.UniqueId = PackagingSlipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CustomerReturnObjectStateClass.Instance.ConcreteRoles.UniqueId = CustomerReturnObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			VatRegimeClass.Instance.ConcreteRoles.UniqueId = VatRegimeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			AccountingPeriodClass.Instance.ConcreteRoles.UniqueId = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseInvoiceObjectStateClass.Instance.ConcreteRoles.UniqueId = PurchaseInvoiceObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ChartOfAccountsClass.Instance.ConcreteRoles.UniqueId = ChartOfAccountsClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			MarketingMaterialClass.Instance.ConcreteRoles.UniqueId = MarketingMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CaseObjectStateClass.Instance.ConcreteRoles.UniqueId = CaseObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			TerritoryClass.Instance.ConcreteRoles.UniqueId = TerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesOrderClass.Instance.ConcreteRoles.UniqueId = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			WarehouseClass.Instance.ConcreteRoles.UniqueId = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			EmploymentApplicationSourceClass.Instance.ConcreteRoles.UniqueId = EmploymentApplicationSourceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			InventoryItemKindClass.Instance.ConcreteRoles.UniqueId = InventoryItemKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			JournalTypeClass.Instance.ConcreteRoles.UniqueId = JournalTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			FloorClass.Instance.ConcreteRoles.UniqueId = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesAgreementClass.Instance.ConcreteRoles.UniqueId = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.UniqueId = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CustomerReturnClass.Instance.ConcreteRoles.UniqueId = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			OrderKindClass.Instance.ConcreteRoles.UniqueId = OrderKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesInvoiceTypeClass.Instance.ConcreteRoles.UniqueId = SalesInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			WorkEffortTypeKindClass.Instance.ConcreteRoles.UniqueId = WorkEffortTypeKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CashClass.Instance.ConcreteRoles.UniqueId = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			DropShipmentObjectStateClass.Instance.ConcreteRoles.UniqueId = DropShipmentObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ColourClass.Instance.ConcreteRoles.UniqueId = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesOrderObjectStateClass.Instance.ConcreteRoles.UniqueId = SalesOrderObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			EngineeringDocumentClass.Instance.ConcreteRoles.UniqueId = EngineeringDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CommunicationEventPurposeClass.Instance.ConcreteRoles.UniqueId = CommunicationEventPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			WorkEffortPurposeClass.Instance.ConcreteRoles.UniqueId = WorkEffortPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			VarianceReasonClass.Instance.ConcreteRoles.UniqueId = VarianceReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PhaseClass.Instance.ConcreteRoles.UniqueId = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalutationClass.Instance.ConcreteRoles.UniqueId = SalutationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CustomerShipmentClass.Instance.ConcreteRoles.UniqueId = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PackageClass.Instance.ConcreteRoles.UniqueId = PackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			HazardousMaterialsDocumentClass.Instance.ConcreteRoles.UniqueId = HazardousMaterialsDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			EmailCommunicationClass.Instance.ConcreteRoles.UniqueId = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			OrganisationContactKindClass.Instance.ConcreteRoles.UniqueId = OrganisationContactKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PartyRelationshipStatusClass.Instance.ConcreteRoles.UniqueId = PartyRelationshipStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ServiceTerritoryClass.Instance.ConcreteRoles.UniqueId = ServiceTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			DeliverableBasedServiceClass.Instance.ConcreteRoles.UniqueId = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ProductModelClass.Instance.ConcreteRoles.UniqueId = ProductModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			RawMaterialClass.Instance.ConcreteRoles.UniqueId = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PostalCodeClass.Instance.ConcreteRoles.UniqueId = PostalCodeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			NonSerializedInventoryItemObjectStateClass.Instance.ConcreteRoles.UniqueId = NonSerializedInventoryItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			TransferObjectStateClass.Instance.ConcreteRoles.UniqueId = TransferObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			TestingRequirementClass.Instance.ConcreteRoles.UniqueId = TestingRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CaseClass.Instance.ConcreteRoles.UniqueId = CaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseReturnClass.Instance.ConcreteRoles.UniqueId = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			VatTariffClass.Instance.ConcreteRoles.UniqueId = VatTariffClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesInvoiceObjectStateClass.Instance.ConcreteRoles.UniqueId = SalesInvoiceObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseInvoiceItemObjectStateClass.Instance.ConcreteRoles.UniqueId = PurchaseInvoiceItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			DropShipmentClass.Instance.ConcreteRoles.UniqueId = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			EuSalesListTypeClass.Instance.ConcreteRoles.UniqueId = EuSalesListTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PurchaseOrderItemObjectStateClass.Instance.ConcreteRoles.UniqueId = PurchaseOrderItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ProvinceClass.Instance.ConcreteRoles.UniqueId = ProvinceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			DeliverableTypeClass.Instance.ConcreteRoles.UniqueId = DeliverableTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SubAssemblyClass.Instance.ConcreteRoles.UniqueId = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			RequirementObjectStateClass.Instance.ConcreteRoles.UniqueId = RequirementObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			WorkFlowClass.Instance.ConcreteRoles.UniqueId = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			TaskClass.Instance.ConcreteRoles.UniqueId = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ResourceRequirementClass.Instance.ConcreteRoles.UniqueId = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			InternalRequirementClass.Instance.ConcreteRoles.UniqueId = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			OperatingBudgetClass.Instance.ConcreteRoles.UniqueId = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			OrganisationUnitClass.Instance.ConcreteRoles.UniqueId = OrganisationUnitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			StateClass.Instance.ConcreteRoles.UniqueId = StateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ToleranceClass.Instance.ConcreteRoles.UniqueId = ToleranceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			VatRatePurchaseKindClass.Instance.ConcreteRoles.UniqueId = VatRatePurchaseKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			EmploymentApplicationStatusClass.Instance.ConcreteRoles.UniqueId = EmploymentApplicationStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			QualificationClass.Instance.ConcreteRoles.UniqueId = QualificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			InternalOrganisationClass.Instance.ConcreteRoles.UniqueId = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			OwnBankAccountClass.Instance.ConcreteRoles.UniqueId = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PriorityClass.Instance.ConcreteRoles.UniqueId = PriorityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CostCenterSplitMethodClass.Instance.ConcreteRoles.UniqueId = CostCenterSplitMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			TransferClass.Instance.ConcreteRoles.UniqueId = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SerializedInventoryItemObjectStateClass.Instance.ConcreteRoles.UniqueId = SerializedInventoryItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.UniqueId = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ProductQualityClass.Instance.ConcreteRoles.UniqueId = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			DisbursementClass.Instance.ConcreteRoles.UniqueId = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ResearchClass.Instance.ConcreteRoles.UniqueId = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.UniqueId = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PostalAddressClass.Instance.ConcreteRoles.UniqueId = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ClientAgreementClass.Instance.ConcreteRoles.UniqueId = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			StoreClass.Instance.ConcreteRoles.UniqueId = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.UniqueId = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			SalesChannelClass.Instance.ConcreteRoles.UniqueId = SalesChannelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CustomerRequirementClass.Instance.ConcreteRoles.UniqueId = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ConstraintSpecificationClass.Instance.ConcreteRoles.UniqueId = ConstraintSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ProgramClass.Instance.ConcreteRoles.UniqueId = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			GoodClass.Instance.ConcreteRoles.UniqueId = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			EngineeringChangeObjectStateClass.Instance.ConcreteRoles.UniqueId = EngineeringChangeObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CountyClass.Instance.ConcreteRoles.UniqueId = CountyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PerformanceReviewItemTypeClass.Instance.ConcreteRoles.UniqueId = PerformanceReviewItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ProductCategoryClass.Instance.ConcreteRoles.UniqueId = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			TemplatePurposeClass.Instance.ConcreteRoles.UniqueId = TemplatePurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.UniqueId = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PayCheckClass.Instance.ConcreteRoles.UniqueId = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			MaritalStatusClass.Instance.ConcreteRoles.UniqueId = MaritalStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ManifestClass.Instance.ConcreteRoles.UniqueId = ManifestClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ExportDocumentClass.Instance.ConcreteRoles.UniqueId = ExportDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CustomerShipmentObjectStateClass.Instance.ConcreteRoles.UniqueId = CustomerShipmentObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			GenderTypeClass.Instance.ConcreteRoles.UniqueId = GenderTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			OfficeClass.Instance.ConcreteRoles.UniqueId = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CommunicationEventObjectStateClass.Instance.ConcreteRoles.UniqueId = CommunicationEventObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CityClass.Instance.ConcreteRoles.UniqueId = CityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PickListObjectStateClass.Instance.ConcreteRoles.UniqueId = PickListObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			EmploymentTerminationReasonClass.Instance.ConcreteRoles.UniqueId = EmploymentTerminationReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			WorkEffortObjectStateClass.Instance.ConcreteRoles.UniqueId = WorkEffortObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			BudgetObjectStateClass.Instance.ConcreteRoles.UniqueId = BudgetObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			WorkRequirementClass.Instance.ConcreteRoles.UniqueId = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.UniqueId = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			ServiceFeatureClass.Instance.ConcreteRoles.UniqueId = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CounterClass.Instance.ConcreteRoles.UniqueId = CounterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			StringTemplateClass.Instance.ConcreteRoles.UniqueId = StringTemplateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			UserGroupClass.Instance.ConcreteRoles.UniqueId = UserGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			RoleClass.Instance.ConcreteRoles.UniqueId = RoleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PrintQueueClass.Instance.ConcreteRoles.UniqueId = PrintQueueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CountryClass.Instance.ConcreteRoles.UniqueId = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			PersonClass.Instance.ConcreteRoles.UniqueId = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			MediaClass.Instance.ConcreteRoles.UniqueId = MediaClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 
			CurrencyClass.Instance.ConcreteRoles.UniqueId = CurrencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UniqueId]; 


		}

		internal class RolesType
		{
			internal RoleType UniqueId;

		}
	}public partial class SingletonClass : Class
	{
		public static SingletonClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SingletonClass() : base(BaseDomain.Instance, new Guid("313b97a5-328c-4600-9dd2-b5bc146fb13b"))
        {
			this.SingularName = "Singleton";
			this.PluralName = "Singletons";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("dc655fb2-bb19-4338-a641-e95689c58409"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var SingletonDefaultPrintQueue = new RelationType(BaseDomain.Instance, new Guid("64aed238-7009-4157-8395-7eb58ebf7889"), new Guid("2f79ecfe-5fd4-44d1-9c39-457bb3dc6815"), new Guid("d861c8f8-7362-4805-9941-661a99ab11ac"));
			SingletonDefaultPrintQueue.AssignedMultiplicity = Multiplicity.OneToOne;
			SingletonDefaultPrintQueue.IsIndexed = true;

			SingletonDefaultPrintQueue.AssociationType.ObjectType = this;

			SingletonDefaultPrintQueue.RoleType.ObjectType = PrintQueueClass.Instance;;
			SingletonDefaultPrintQueue.RoleType.AssignedSingularName = "DefaultPrintQueue";
			SingletonDefaultPrintQueue.RoleType.AssignedPluralName = "DefaultPrintQueues";
			this.Roles.DefaultPrintQueue = SingletonDefaultPrintQueue.RoleType;

			var SingletonDefaultLocale = new RelationType(BaseDomain.Instance, new Guid("9c1634ab-be99-4504-8690-ed4b39fec5bc"), new Guid("45a4205d-7c02-40d4-8d97-6d7d59e05def"), new Guid("1e051b37-cf30-43ed-a623-dd2928d6d0a3"));
			SingletonDefaultLocale.AssignedMultiplicity = Multiplicity.ManyToOne;
			SingletonDefaultLocale.IsIndexed = true;

			SingletonDefaultLocale.AssociationType.ObjectType = this;

			SingletonDefaultLocale.RoleType.ObjectType = LocaleClass.Instance;;
			SingletonDefaultLocale.RoleType.AssignedSingularName = "DefaultLocale";
			SingletonDefaultLocale.RoleType.AssignedPluralName = "DefaultLocales";
			this.Roles.DefaultLocale = SingletonDefaultLocale.RoleType;

			var SingletonLocale = new RelationType(BaseDomain.Instance, new Guid("9e5a3413-ed33-474f-adf2-149ad5a80719"), new Guid("33d5d8b9-3472-48d8-ab1a-83d00d9cb691"), new Guid("e75a8956-4d02-49ba-b0cf-747b7a9f350d"));
			SingletonLocale.AssignedMultiplicity = Multiplicity.OneToMany;
			SingletonLocale.IsIndexed = true;

			SingletonLocale.AssociationType.ObjectType = this;

			SingletonLocale.RoleType.ObjectType = LocaleClass.Instance;;
			SingletonLocale.RoleType.AssignedSingularName = "Locale";
			SingletonLocale.RoleType.AssignedPluralName = "Locales";
			this.Roles.Locale = SingletonLocale.RoleType;

			var SingletonAdministratorSecurityToken = new RelationType(BaseDomain.Instance, new Guid("d9ea02e5-9aa1-4cbe-9318-06324529a923"), new Guid("6247e69d-4789-4ee0-a75b-c2de44a5fcce"), new Guid("c11f31e1-75a7-4b23-9d58-7dfec256b658"));
			SingletonAdministratorSecurityToken.AssignedMultiplicity = Multiplicity.ManyToOne;
			SingletonAdministratorSecurityToken.IsIndexed = true;

			SingletonAdministratorSecurityToken.AssociationType.ObjectType = this;

			SingletonAdministratorSecurityToken.RoleType.ObjectType = SecurityTokenClass.Instance;;
			SingletonAdministratorSecurityToken.RoleType.AssignedSingularName = "AdministratorSecurityToken";
			SingletonAdministratorSecurityToken.RoleType.AssignedPluralName = "AdministratorSecurityTokens";
			this.Roles.AdministratorSecurityToken = SingletonAdministratorSecurityToken.RoleType;

			var SingletonGuest = new RelationType(BaseDomain.Instance, new Guid("f16652b0-b712-43d7-8d4e-34a22487514d"), new Guid("c92466b5-55ba-496a-8880-2821f32f8f8e"), new Guid("3a12d798-40c3-40e0-ba9f-9d01b1e39e89"));
			SingletonGuest.AssignedMultiplicity = Multiplicity.OneToOne;
			SingletonGuest.AssociationType.ObjectType = this;

			SingletonGuest.RoleType.ObjectType = UserInterface.Instance;;
			SingletonGuest.RoleType.AssignedSingularName = "Guest";
			SingletonGuest.RoleType.AssignedPluralName = "Guests";
			this.Roles.Guest = SingletonGuest.RoleType;

			var SingletonDefaultSecurityToken = new RelationType(BaseDomain.Instance, new Guid("f579494b-e550-4be6-9d93-84618ac78704"), new Guid("33f17e75-99cc-417e-99f3-c29080f08f0a"), new Guid("ca9e3469-583c-4950-ba2c-1bc3a0fc3e96"));
			SingletonDefaultSecurityToken.AssignedMultiplicity = Multiplicity.ManyToOne;
			SingletonDefaultSecurityToken.IsIndexed = true;

			SingletonDefaultSecurityToken.AssociationType.ObjectType = this;

			SingletonDefaultSecurityToken.RoleType.ObjectType = SecurityTokenClass.Instance;;
			SingletonDefaultSecurityToken.RoleType.AssignedSingularName = "DefaultSecurityToken";
			SingletonDefaultSecurityToken.RoleType.AssignedPluralName = "DefaultSecurityTokens";
			this.Roles.DefaultSecurityToken = SingletonDefaultSecurityToken.RoleType;

			var SingletonDefaultCurrency = new RelationType(AppsDomain.Instance, new Guid("9dee4a94-26d5-410f-a3e3-3fcde21c5c89"), new Guid("0322b71b-0389-4393-8b1f-1b3fb12bb7b1"), new Guid("68f80e6a-7ff4-4f07-b2c5-728459c376ae"));
			SingletonDefaultCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			SingletonDefaultCurrency.IsIndexed = true;

			SingletonDefaultCurrency.AssociationType.ObjectType = this;

			SingletonDefaultCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			SingletonDefaultCurrency.RoleType.AssignedSingularName = "DefaultCurrency";
			SingletonDefaultCurrency.RoleType.AssignedPluralName = "DefaultCurrencies";
			this.Roles.DefaultCurrency = SingletonDefaultCurrency.RoleType;

			var SingletonNoImageAvailableImage = new RelationType(AppsDomain.Instance, new Guid("a0fdc553-8081-43fa-ae1a-b9f7767d2d3e"), new Guid("c36bd0ce-d912-4935-b2e2-5aecc822a524"), new Guid("65e3b040-4191-4f26-a51b-6c2a17ec35c7"));
			SingletonNoImageAvailableImage.AssignedMultiplicity = Multiplicity.ManyToOne;
			SingletonNoImageAvailableImage.IsIndexed = true;

			SingletonNoImageAvailableImage.AssociationType.ObjectType = this;

			SingletonNoImageAvailableImage.RoleType.ObjectType = MediaClass.Instance;;
			SingletonNoImageAvailableImage.RoleType.AssignedSingularName = "NoImageAvailableImage";
			SingletonNoImageAvailableImage.RoleType.AssignedPluralName = "NoImageAvailableImages";
			this.Roles.NoImageAvailableImage = SingletonNoImageAvailableImage.RoleType;

			var SingletonDefaultInternalOrganisation = new RelationType(AppsDomain.Instance, new Guid("f154f01e-e8bb-49c0-be80-ef6c6c195ff3"), new Guid("2c42c9e4-72e3-4673-8653-aaf586ebb06a"), new Guid("979d1e59-7a9f-462a-9927-efb8ad2cada5"));
			SingletonDefaultInternalOrganisation.AssignedMultiplicity = Multiplicity.ManyToOne;
			SingletonDefaultInternalOrganisation.IsIndexed = true;

			SingletonDefaultInternalOrganisation.AssociationType.ObjectType = this;

			SingletonDefaultInternalOrganisation.RoleType.ObjectType = InternalOrganisationClass.Instance;;
			SingletonDefaultInternalOrganisation.RoleType.AssignedSingularName = "DefaultInternalOrganisation";
			SingletonDefaultInternalOrganisation.RoleType.AssignedPluralName = "DefaultInternalOrganisations";
			this.Roles.DefaultInternalOrganisation = SingletonDefaultInternalOrganisation.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SingletonClass.Instance.ConcreteRoles.DefaultPrintQueue = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultPrintQueue]; 

			SingletonClass.Instance.ConcreteRoles.DefaultLocale = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultLocale]; 

			SingletonClass.Instance.ConcreteRoles.Locale = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 

			SingletonClass.Instance.ConcreteRoles.AdministratorSecurityToken = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.AdministratorSecurityToken]; 

			SingletonClass.Instance.ConcreteRoles.Guest = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Guest]; 

			SingletonClass.Instance.ConcreteRoles.DefaultSecurityToken = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultSecurityToken]; 

			SingletonClass.Instance.ConcreteRoles.DefaultCurrency = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultCurrency]; 

			SingletonClass.Instance.ConcreteRoles.NoImageAvailableImage = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.NoImageAvailableImage]; 

			SingletonClass.Instance.ConcreteRoles.DefaultInternalOrganisation = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultInternalOrganisation]; 


		}

		internal class RolesType
		{
			internal RoleType DefaultPrintQueue;
			internal RoleType DefaultLocale;
			internal RoleType Locale;
			internal RoleType AdministratorSecurityToken;
			internal RoleType Guest;
			internal RoleType DefaultSecurityToken;
			internal RoleType DefaultCurrency;
			internal RoleType NoImageAvailableImage;
			internal RoleType DefaultInternalOrganisation;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DefaultPrintQueue;
			internal ConcreteRoleType DefaultLocale;
			internal ConcreteRoleType Locale;
			internal ConcreteRoleType AdministratorSecurityToken;
			internal ConcreteRoleType Guest;
			internal ConcreteRoleType DefaultSecurityToken;
			internal ConcreteRoleType DefaultCurrency;
			internal ConcreteRoleType NoImageAvailableImage;
			internal ConcreteRoleType DefaultInternalOrganisation;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class LocaleClass : Class
	{
		public static LocaleClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal LocaleClass() : base(BaseDomain.Instance, new Guid("45033ae6-85b5-4ced-87ce-02518e6c27fd"))
        {
			this.SingularName = "Locale";
			this.PluralName = "Locales";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("317927bf-e978-4239-b257-a443a22e4665"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var LocaleName = new RelationType(BaseDomain.Instance, new Guid("2a2c6f77-e6a2-4eab-bfe3-5d35a8abd7f7"), new Guid("09422255-fa17-41d8-991b-d21d7b37c6c5"), new Guid("647db2b3-997b-4c3a-9ae2-d49b410933c1"));
			LocaleName.AssignedMultiplicity = Multiplicity.OneToOne;
			LocaleName.AssociationType.ObjectType = this;

			LocaleName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			LocaleName.RoleType.AssignedSingularName = "Name";
			LocaleName.RoleType.AssignedPluralName = "Names";
			LocaleName.RoleType.Size = 256;
			this.Roles.Name = LocaleName.RoleType;

			var LocaleLanguage = new RelationType(BaseDomain.Instance, new Guid("d8cac34a-9bb2-4190-bd2a-ec0b87e04cf5"), new Guid("af501892-3c83-41d1-826b-f5c4cb1de7fe"), new Guid("ed32b12a-00ad-420b-9dfa-f1c6ce773fcd"));
			LocaleLanguage.AssignedMultiplicity = Multiplicity.ManyToOne;
			LocaleLanguage.IsIndexed = true;

			LocaleLanguage.AssociationType.ObjectType = this;

			LocaleLanguage.RoleType.ObjectType = LanguageClass.Instance;;
			LocaleLanguage.RoleType.AssignedSingularName = "Language";
			LocaleLanguage.RoleType.AssignedPluralName = "Languages";
			this.Roles.Language = LocaleLanguage.RoleType;

			var LocaleCountry = new RelationType(BaseDomain.Instance, new Guid("ea778b77-2929-4ab4-ad99-bf2f970401a9"), new Guid("bb5904f5-feb0-47eb-903a-0351d55f0d8c"), new Guid("b2fc6e06-3881-427e-b4cc-8457a65f8076"));
			LocaleCountry.AssignedMultiplicity = Multiplicity.ManyToOne;
			LocaleCountry.IsIndexed = true;

			LocaleCountry.AssociationType.ObjectType = this;

			LocaleCountry.RoleType.ObjectType = CountryClass.Instance;;
			LocaleCountry.RoleType.AssignedSingularName = "Country";
			LocaleCountry.RoleType.AssignedPluralName = "Countries";
			this.Roles.Country = LocaleCountry.RoleType;


		}

		internal override void SetRelationTypes()
		{
			LocaleClass.Instance.ConcreteRoles.Name = LocaleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			LocaleClass.Instance.ConcreteRoles.Language = LocaleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Language]; 

			LocaleClass.Instance.ConcreteRoles.Country = LocaleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Country]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType Language;
			internal RoleType Country;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Language;
			internal ConcreteRoleType Country;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class LanguageClass : Class
	{
		public static LanguageClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal LanguageClass() : base(BaseDomain.Instance, new Guid("4a0eca4b-281f-488d-9c7e-497de882c044"))
        {
			this.SingularName = "Language";
			this.PluralName = "Languages";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("a4ebd1f9-84db-4888-ba53-414b67b03c73"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var LanguageName = new RelationType(BaseDomain.Instance, new Guid("be482902-beb5-4a76-8ad0-c1b1c1c0e5c4"), new Guid("d3369fa9-afb7-4d5a-b476-3e4d43cce0fd"), new Guid("308d73b0-1b65-40a9-88f1-288848849c51"));
			LanguageName.AssignedMultiplicity = Multiplicity.OneToOne;
			LanguageName.IsIndexed = true;

			LanguageName.AssociationType.ObjectType = this;

			LanguageName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			LanguageName.RoleType.AssignedSingularName = "Name";
			LanguageName.RoleType.AssignedPluralName = "Names";
			LanguageName.RoleType.Size = 256;
			this.Roles.Name = LanguageName.RoleType;

			var LanguageIsoCode = new RelationType(BaseDomain.Instance, new Guid("d2a32d9f-21cc-4f9d-b0d3-a9b75da66907"), new Guid("6c860e73-d12e-4e35-897e-ed9f8fd8eba0"), new Guid("84f904a6-8dcc-4089-bda6-34325ade6367"));
			LanguageIsoCode.AssignedMultiplicity = Multiplicity.OneToOne;
			LanguageIsoCode.AssociationType.ObjectType = this;

			LanguageIsoCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			LanguageIsoCode.RoleType.AssignedSingularName = "IsoCode";
			LanguageIsoCode.RoleType.AssignedPluralName = "IsoCodes";
			LanguageIsoCode.RoleType.Size = 256;
			this.Roles.IsoCode = LanguageIsoCode.RoleType;

			var LanguageLocalisedName = new RelationType(BaseDomain.Instance, new Guid("f091b264-e6b1-4a57-bbfb-8225cbe8190c"), new Guid("6650af3b-f537-4c2f-afff-6773552315cd"), new Guid("5e9fcced-727d-42a2-95e6-a0f9d8be4ec7"));
			LanguageLocalisedName.AssignedMultiplicity = Multiplicity.OneToMany;
			LanguageLocalisedName.IsIndexed = true;

			LanguageLocalisedName.AssociationType.ObjectType = this;

			LanguageLocalisedName.RoleType.ObjectType = LocalisedTextClass.Instance;;
			LanguageLocalisedName.RoleType.AssignedSingularName = "LocalisedName";
			LanguageLocalisedName.RoleType.AssignedPluralName = "LocalisedNames";
			this.Roles.LocalisedName = LanguageLocalisedName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			LanguageClass.Instance.ConcreteRoles.Name = LanguageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			LanguageClass.Instance.ConcreteRoles.IsoCode = LanguageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsoCode]; 

			LanguageClass.Instance.ConcreteRoles.LocalisedName = LanguageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 


		}

		internal class RolesType
		{
			internal RoleType Name;
			internal RoleType IsoCode;
			internal RoleType LocalisedName;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Name;
			internal ConcreteRoleType IsoCode;
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class UserGroupClass : Class
	{
		public static UserGroupClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal UserGroupClass() : base(BaseDomain.Instance, new Guid("60065f5d-a3c2-4418-880d-1026ab607319"))
        {
			this.SingularName = "UserGroup";
			this.PluralName = "UserGroups";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("6147b424-b6a9-44b9-b173-30d259165a51"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("ff0d36e7-49d3-4bea-88d0-f40e8ddb714e"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var UserGroupRole = new RelationType(BaseDomain.Instance, new Guid("2f8cf270-a153-4e0d-b844-991d577222d4"), new Guid("46f531f2-b211-4f2a-902d-7198cda9c50d"), new Guid("a1b92c88-79d9-4a4f-bb99-0fde4e251a28"));
			UserGroupRole.AssignedMultiplicity = Multiplicity.OneToOne;
			UserGroupRole.IsIndexed = true;

			UserGroupRole.AssociationType.ObjectType = this;

			UserGroupRole.RoleType.ObjectType = RoleClass.Instance;;
			UserGroupRole.RoleType.AssignedSingularName = "Role";
			UserGroupRole.RoleType.AssignedPluralName = "Roles";
			this.Roles.Role = UserGroupRole.RoleType;

			var UserGroupMember = new RelationType(BaseDomain.Instance, new Guid("585bb5cf-9ba4-4865-9027-3667185abc4f"), new Guid("1e2d1e31-ed80-4435-8850-7663d9c5f41d"), new Guid("c552f0b7-95ce-4d45-aaea-56bc8365eee4"));
			UserGroupMember.AssignedMultiplicity = Multiplicity.ManyToMany;
			UserGroupMember.IsIndexed = true;

			UserGroupMember.AssociationType.ObjectType = this;

			UserGroupMember.RoleType.ObjectType = UserInterface.Instance;;
			UserGroupMember.RoleType.AssignedSingularName = "Member";
			UserGroupMember.RoleType.AssignedPluralName = "Members";
			this.Roles.Member = UserGroupMember.RoleType;

			var UserGroupParent = new RelationType(BaseDomain.Instance, new Guid("be9dc116-a7ea-4a4b-aaca-eb0f91fc3741"), new Guid("d8d8fdf7-f261-449b-b611-7c58dc43f6d3"), new Guid("6ec327af-86bc-4c79-8f00-bcb399686bf3"));
			UserGroupParent.AssignedMultiplicity = Multiplicity.ManyToOne;
			UserGroupParent.IsIndexed = true;

			UserGroupParent.AssociationType.ObjectType = this;

			UserGroupParent.RoleType.ObjectType = UserGroupClass.Instance;;
			UserGroupParent.RoleType.AssignedSingularName = "Parent";
			UserGroupParent.RoleType.AssignedPluralName = "Parents";
			this.Roles.Parent = UserGroupParent.RoleType;

			var UserGroupName = new RelationType(BaseDomain.Instance, new Guid("e94e7f05-78bd-4291-923f-38f82d00e3f4"), new Guid("75859e2c-c1a3-4f4c-bb37-4064d0aa81d0"), new Guid("9d3c1eec-bf10-4a79-a37f-bc6a20ff2a79"));
			UserGroupName.AssignedMultiplicity = Multiplicity.OneToOne;
			UserGroupName.IsIndexed = true;

			UserGroupName.AssociationType.ObjectType = this;

			UserGroupName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			UserGroupName.RoleType.AssignedSingularName = "Name";
			UserGroupName.RoleType.AssignedPluralName = "Names";
			UserGroupName.RoleType.Size = 256;
			this.Roles.Name = UserGroupName.RoleType;

			var UserGroupParty = new RelationType(AppsDomain.Instance, new Guid("6b3e1fa8-5718-4a60-91c6-c6bb42be26fd"), new Guid("35c67ad6-c5ff-4e53-82a7-c457323b02b3"), new Guid("5c5e8dd8-4277-4be0-a59b-cc92dc8dde97"));
			UserGroupParty.AssignedMultiplicity = Multiplicity.ManyToOne;
			UserGroupParty.IsIndexed = true;

			UserGroupParty.AssociationType.ObjectType = this;

			UserGroupParty.RoleType.ObjectType = PartyInterface.Instance;;
			UserGroupParty.RoleType.AssignedSingularName = "Party";
			UserGroupParty.RoleType.AssignedPluralName = "Parties";
			this.Roles.Party = UserGroupParty.RoleType;


		}

		internal override void SetRelationTypes()
		{
			UserGroupClass.Instance.ConcreteRoles.Role = UserGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Role]; 

			UserGroupClass.Instance.ConcreteRoles.Member = UserGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Member]; 

			UserGroupClass.Instance.ConcreteRoles.Parent = UserGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Parent]; 

			UserGroupClass.Instance.ConcreteRoles.Name = UserGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			UserGroupClass.Instance.ConcreteRoles.Party = UserGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Party]; 


		}

		internal class RolesType
		{
			internal RoleType Role;
			internal RoleType Member;
			internal RoleType Parent;
			internal RoleType Name;
			internal RoleType Party;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Role;
			internal ConcreteRoleType Member;
			internal ConcreteRoleType Parent;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Party;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PrintableInterface: Interface
	{
		public static PrintableInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PrintableInterface() : base(BaseDomain.Instance, new Guid("61207a42-3199-4249-baa4-9dd11dc0f5b1"))
        {
			this.SingularName = "Printable";
			this.PluralName = "Printables";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("82285900-358c-426f-a592-c7ae138287ed"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("9bc4b1c9-7e87-4b5b-bcf8-c02b462f0d53"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PrintablePrintContent = new RelationType(BaseDomain.Instance, new Guid("c75d4e4c-d47c-4757-bcb0-25b6daedec9e"), new Guid("480b7df7-b463-4038-a48d-35b8a8af899e"), new Guid("8d530dcd-2c3b-4d1d-8acc-9963338968ed"));
			PrintablePrintContent.AssignedMultiplicity = Multiplicity.OneToOne;
			PrintablePrintContent.IsDerived = true;
			PrintablePrintContent.AssociationType.ObjectType = this;

			PrintablePrintContent.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PrintablePrintContent.RoleType.AssignedSingularName = "PrintContent";
			PrintablePrintContent.RoleType.AssignedPluralName = "PrintContents";
			PrintablePrintContent.RoleType.Size = -1;
			this.Roles.PrintContent = PrintablePrintContent.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseOrderClass.Instance.ConcreteRoles.PrintContent = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			TaxDocumentClass.Instance.ConcreteRoles.PrintContent = TaxDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			ProductDrawingClass.Instance.ConcreteRoles.PrintContent = ProductDrawingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			PickListClass.Instance.ConcreteRoles.PrintContent = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			PurchaseShipmentClass.Instance.ConcreteRoles.PrintContent = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			BillOfLadingClass.Instance.ConcreteRoles.PrintContent = BillOfLadingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			SalesInvoiceClass.Instance.ConcreteRoles.PrintContent = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			PackagingSlipClass.Instance.ConcreteRoles.PrintContent = PackagingSlipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			MarketingMaterialClass.Instance.ConcreteRoles.PrintContent = MarketingMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			SalesOrderClass.Instance.ConcreteRoles.PrintContent = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.PrintContent = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			CustomerReturnClass.Instance.ConcreteRoles.PrintContent = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			EngineeringDocumentClass.Instance.ConcreteRoles.PrintContent = EngineeringDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			CustomerShipmentClass.Instance.ConcreteRoles.PrintContent = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			HazardousMaterialsDocumentClass.Instance.ConcreteRoles.PrintContent = HazardousMaterialsDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			ProductModelClass.Instance.ConcreteRoles.PrintContent = ProductModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			PurchaseReturnClass.Instance.ConcreteRoles.PrintContent = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			DropShipmentClass.Instance.ConcreteRoles.PrintContent = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			TransferClass.Instance.ConcreteRoles.PrintContent = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			ManifestClass.Instance.ConcreteRoles.PrintContent = ManifestClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 
			ExportDocumentClass.Instance.ConcreteRoles.PrintContent = ExportDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PrintContent]; 


		}

		internal class RolesType
		{
			internal RoleType PrintContent;

		}
	}public partial class MediaContentClass : Class
	{
		public static MediaContentClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal MediaContentClass() : base(BaseDomain.Instance, new Guid("6c20422e-cb3e-4402-bb40-dacaf584405e"))
        {
			this.SingularName = "MediaContent";
			this.PluralName = "MediaContents";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var MediaContentValue = new RelationType(BaseDomain.Instance, new Guid("0756d508-44b7-405e-bf92-bc09e5702e63"), new Guid("76e6547b-8dcf-4e69-ae2d-c8f8c33989e9"), new Guid("85170945-b020-485b-bb6f-c4122992ebfd"));
			MediaContentValue.AssignedMultiplicity = Multiplicity.OneToOne;
			MediaContentValue.AssociationType.ObjectType = this;

			MediaContentValue.RoleType.ObjectType = AllorsBinaryUnit.Instance;;
			MediaContentValue.RoleType.AssignedSingularName = "Value";
			MediaContentValue.RoleType.AssignedPluralName = "Values";
			MediaContentValue.RoleType.Size = -1;
			this.Roles.Value = MediaContentValue.RoleType;

			var MediaContentHash = new RelationType(BaseDomain.Instance, new Guid("890598a9-0be4-49ee-8dd8-3581ee9355e6"), new Guid("3cf7f10e-dc56-4a50-95a5-fe7fae0be291"), new Guid("70823e7d-5829-4db7-99e0-f6c5f2b0e87b"));
			MediaContentHash.AssignedMultiplicity = Multiplicity.OneToOne;
			MediaContentHash.IsDerived = true;
			MediaContentHash.IsIndexed = true;

			MediaContentHash.AssociationType.ObjectType = this;

			MediaContentHash.RoleType.ObjectType = AllorsStringUnit.Instance;;
			MediaContentHash.RoleType.AssignedSingularName = "Hash";
			MediaContentHash.RoleType.AssignedPluralName = "Hashes";
			MediaContentHash.RoleType.Size = 1024;
			this.Roles.Hash = MediaContentHash.RoleType;


		}

		internal override void SetRelationTypes()
		{
			MediaContentClass.Instance.ConcreteRoles.Value = MediaContentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Value]; 

			MediaContentClass.Instance.ConcreteRoles.Hash = MediaContentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Hash]; 


		}

		internal class RolesType
		{
			internal RoleType Value;
			internal RoleType Hash;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Value;
			internal ConcreteRoleType Hash;

		}
	}public partial class LocalisedInterface: Interface
	{
		public static LocalisedInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal LocalisedInterface() : base(BaseDomain.Instance, new Guid("7979a17c-0829-46df-a0d4-1b01775cfaac"))
        {
			this.SingularName = "Localised";
			this.PluralName = "Localiseds";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var LocalisedLocale = new RelationType(BaseDomain.Instance, new Guid("8c005a4e-5ffe-45fd-b279-778e274f4d83"), new Guid("6684d98b-cd43-4612-bf9d-afefe02a0d43"), new Guid("d43b92ac-9e6f-4238-9625-1e889be054cf"));
			LocalisedLocale.AssignedMultiplicity = Multiplicity.ManyToOne;
			LocalisedLocale.IsIndexed = true;

			LocalisedLocale.AssociationType.ObjectType = this;

			LocalisedLocale.RoleType.ObjectType = LocaleClass.Instance;;
			LocalisedLocale.RoleType.AssignedSingularName = "Locale";
			LocalisedLocale.RoleType.AssignedPluralName = "Locales";
			this.Roles.Locale = LocalisedLocale.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PurchaseOrderClass.Instance.ConcreteRoles.Locale = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 
			AutomatedAgentClass.Instance.ConcreteRoles.Locale = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 
			OrganisationClass.Instance.ConcreteRoles.Locale = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 
			SalesInvoiceClass.Instance.ConcreteRoles.Locale = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 
			SalesOrderClass.Instance.ConcreteRoles.Locale = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.Locale = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 
			InternalOrganisationClass.Instance.ConcreteRoles.Locale = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 
			LocalisedTextClass.Instance.ConcreteRoles.Locale = LocalisedTextClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 
			StringTemplateClass.Instance.ConcreteRoles.Locale = StringTemplateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 
			PersonClass.Instance.ConcreteRoles.Locale = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Locale]; 


		}

		internal class RolesType
		{
			internal RoleType Locale;

		}
	}public partial class PermissionClass : Class
	{
		public static PermissionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PermissionClass() : base(BaseDomain.Instance, new Guid("7fded183-3337-4196-afb0-3266377944bc"))
        {
			this.SingularName = "Permission";
			this.PluralName = "Permissions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("799f485c-6f77-4da1-8f63-a2b1469f8808"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("aec174d4-5633-462c-91a1-10d3e782fdb4"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PermissionOperandTypePointer = new RelationType(BaseDomain.Instance, new Guid("097bb620-f068-440e-8d02-ef9d8be1d0f0"), new Guid("3442728c-164a-477c-87be-19a789229585"), new Guid("3fd81194-2f6f-43e7-9c6b-91f5e3e118ac"));
			PermissionOperandTypePointer.AssignedMultiplicity = Multiplicity.OneToOne;
			PermissionOperandTypePointer.IsIndexed = true;

			PermissionOperandTypePointer.AssociationType.ObjectType = this;

			PermissionOperandTypePointer.RoleType.ObjectType = AllorsUniqueUnit.Instance;;
			PermissionOperandTypePointer.RoleType.AssignedSingularName = "OperandTypePointer";
			PermissionOperandTypePointer.RoleType.AssignedPluralName = "OperandTypePointers";
			this.Roles.OperandTypePointer = PermissionOperandTypePointer.RoleType;

			var PermissionConcreteClassPointer = new RelationType(BaseDomain.Instance, new Guid("29b80857-e51b-4dec-b859-887ed74b1626"), new Guid("8ffed1eb-b64e-4341-bbb6-348ed7f06e83"), new Guid("cadaca05-55ba-4a13-8758-786ff29c8e46"));
			PermissionConcreteClassPointer.AssignedMultiplicity = Multiplicity.OneToOne;
			PermissionConcreteClassPointer.IsIndexed = true;

			PermissionConcreteClassPointer.AssociationType.ObjectType = this;

			PermissionConcreteClassPointer.RoleType.ObjectType = AllorsUniqueUnit.Instance;;
			PermissionConcreteClassPointer.RoleType.AssignedSingularName = "ConcreteClassPointer";
			PermissionConcreteClassPointer.RoleType.AssignedPluralName = "ConcreteClassePointers";
			this.Roles.ConcreteClassPointer = PermissionConcreteClassPointer.RoleType;

			var PermissionOperationEnum = new RelationType(BaseDomain.Instance, new Guid("9d73d437-4918-4f20-b9a7-3ce23a04bd7b"), new Guid("891734d6-4855-4b33-8b3b-f46fd6103149"), new Guid("d29ce0ed-fba8-409d-8675-dc95e1566cfb"));
			PermissionOperationEnum.AssignedMultiplicity = Multiplicity.OneToOne;
			PermissionOperationEnum.IsIndexed = true;

			PermissionOperationEnum.AssociationType.ObjectType = this;

			PermissionOperationEnum.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PermissionOperationEnum.RoleType.AssignedSingularName = "OperationEnum";
			PermissionOperationEnum.RoleType.AssignedPluralName = "OperationEnums";
			this.Roles.OperationEnum = PermissionOperationEnum.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PermissionClass.Instance.ConcreteRoles.OperandTypePointer = PermissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OperandTypePointer]; 

			PermissionClass.Instance.ConcreteRoles.ConcreteClassPointer = PermissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ConcreteClassPointer]; 

			PermissionClass.Instance.ConcreteRoles.OperationEnum = PermissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OperationEnum]; 


		}

		internal class RolesType
		{
			internal RoleType OperandTypePointer;
			internal RoleType ConcreteClassPointer;
			internal RoleType OperationEnum;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType OperandTypePointer;
			internal ConcreteRoleType ConcreteClassPointer;
			internal ConcreteRoleType OperationEnum;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PeriodInterface: Interface
	{
		public static PeriodInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal PeriodInterface() : base(BaseDomain.Instance, new Guid("80adbbfd-952e-46f3-a744-78e0ce42bc80"))
        {
			this.SingularName = "Period";
			this.PluralName = "Periods";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var PeriodFromDate = new RelationType(BaseDomain.Instance, new Guid("5aeb31c7-03d4-4314-bbb2-fca5704b1eab"), new Guid("8cf0bd14-753d-4f34-99b3-7a6b0d90c3d4"), new Guid("0da8ef4e-53b7-4152-b219-7e0cebbca268"));
			PeriodFromDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PeriodFromDate.AssociationType.ObjectType = this;

			PeriodFromDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PeriodFromDate.RoleType.AssignedSingularName = "FromDate";
			PeriodFromDate.RoleType.AssignedPluralName = "FromDates";
			this.Roles.FromDate = PeriodFromDate.RoleType;

			var PeriodThroughDate = new RelationType(BaseDomain.Instance, new Guid("d7576ce2-da27-487a-86aa-b0912f745bc0"), new Guid("cb2fa6c1-f826-45f0-a03f-00e6cb268ebb"), new Guid("4e021875-5bae-4f01-8deb-641016cd2f8d"));
			PeriodThroughDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PeriodThroughDate.AssociationType.ObjectType = this;

			PeriodThroughDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PeriodThroughDate.RoleType.AssignedSingularName = "ThroughDate";
			PeriodThroughDate.RoleType.AssignedPluralName = "ThroughDates";
			this.Roles.ThroughDate = PeriodThroughDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			SupplierOfferingClass.Instance.ConcreteRoles.FromDate = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			WorkEffortPartyAssignmentClass.Instance.ConcreteRoles.FromDate = WorkEffortPartyAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			PurchaseAgreementClass.Instance.ConcreteRoles.FromDate = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			BasePriceClass.Instance.ConcreteRoles.FromDate = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			EngineeringBomClass.Instance.ConcreteRoles.FromDate = EngineeringBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.FromDate = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.FromDate = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			PayHistoryClass.Instance.ConcreteRoles.FromDate = PayHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ServiceEntryHeaderClass.Instance.ConcreteRoles.FromDate = ServiceEntryHeaderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			PartRevisionClass.Instance.ConcreteRoles.FromDate = PartRevisionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ProductConfigurationClass.Instance.ConcreteRoles.FromDate = ProductConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			EstimatedLaborCostClass.Instance.ConcreteRoles.FromDate = EstimatedLaborCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			SupplierRelationshipClass.Instance.ConcreteRoles.FromDate = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			OrganisationRollUpClass.Instance.ConcreteRoles.FromDate = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			WorkEffortAssignmentClass.Instance.ConcreteRoles.FromDate = WorkEffortAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoles.FromDate = WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			CustomerRelationshipClass.Instance.ConcreteRoles.FromDate = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			PartyFixedAssetAssignmentClass.Instance.ConcreteRoles.FromDate = PartyFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			CapitalBudgetClass.Instance.ConcreteRoles.FromDate = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			MarketingPackageClass.Instance.ConcreteRoles.FromDate = MarketingPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ProductPurchasePriceClass.Instance.ConcreteRoles.FromDate = ProductPurchasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			OneTimeChargeClass.Instance.ConcreteRoles.FromDate = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			PartBillOfMaterialSubstituteClass.Instance.ConcreteRoles.FromDate = PartBillOfMaterialSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			OrganisationGlAccountClass.Instance.ConcreteRoles.FromDate = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			PersonTrainingClass.Instance.ConcreteRoles.FromDate = PersonTrainingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ManufacturingBomClass.Instance.ConcreteRoles.FromDate = ManufacturingBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			PositionFulfillmentClass.Instance.ConcreteRoles.FromDate = PositionFulfillmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			EmploymentClass.Instance.ConcreteRoles.FromDate = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			AccountingPeriodClass.Instance.ConcreteRoles.FromDate = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			EngagementRateClass.Instance.ConcreteRoles.FromDate = EngagementRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			SalesRepRelationshipClass.Instance.ConcreteRoles.FromDate = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			SalesAgreementClass.Instance.ConcreteRoles.FromDate = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			PerformanceReviewClass.Instance.ConcreteRoles.FromDate = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.FromDate = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			UtilizationChargeClass.Instance.ConcreteRoles.FromDate = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			EstimatedOtherCostClass.Instance.ConcreteRoles.FromDate = EstimatedOtherCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ProfessionalAssignmentClass.Instance.ConcreteRoles.FromDate = ProfessionalAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			SurchargeComponentClass.Instance.ConcreteRoles.FromDate = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.FromDate = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			RecurringChargeClass.Instance.ConcreteRoles.FromDate = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ClientRelationshipClass.Instance.ConcreteRoles.FromDate = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			PartnershipClass.Instance.ConcreteRoles.FromDate = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			OperatingBudgetClass.Instance.ConcreteRoles.FromDate = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			DiscountComponentClass.Instance.ConcreteRoles.FromDate = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			VolumeUsageClass.Instance.ConcreteRoles.FromDate = VolumeUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			EstimatedMaterialCostClass.Instance.ConcreteRoles.FromDate = EstimatedMaterialCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ProspectRelationshipClass.Instance.ConcreteRoles.FromDate = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.FromDate = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.FromDate = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			SubContractorRelationshipClass.Instance.ConcreteRoles.FromDate = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ClientAgreementClass.Instance.ConcreteRoles.FromDate = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			ActivityUsageClass.Instance.ConcreteRoles.FromDate = ActivityUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			DeploymentClass.Instance.ConcreteRoles.FromDate = DeploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.FromDate = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 
			TimePeriodUsageClass.Instance.ConcreteRoles.FromDate = TimePeriodUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromDate]; 

			SupplierOfferingClass.Instance.ConcreteRoles.ThroughDate = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			WorkEffortPartyAssignmentClass.Instance.ConcreteRoles.ThroughDate = WorkEffortPartyAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			PurchaseAgreementClass.Instance.ConcreteRoles.ThroughDate = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			BasePriceClass.Instance.ConcreteRoles.ThroughDate = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			EngineeringBomClass.Instance.ConcreteRoles.ThroughDate = EngineeringBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.ThroughDate = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.ThroughDate = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			PayHistoryClass.Instance.ConcreteRoles.ThroughDate = PayHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ServiceEntryHeaderClass.Instance.ConcreteRoles.ThroughDate = ServiceEntryHeaderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			PartRevisionClass.Instance.ConcreteRoles.ThroughDate = PartRevisionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ProductConfigurationClass.Instance.ConcreteRoles.ThroughDate = ProductConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			EstimatedLaborCostClass.Instance.ConcreteRoles.ThroughDate = EstimatedLaborCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			SupplierRelationshipClass.Instance.ConcreteRoles.ThroughDate = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			OrganisationRollUpClass.Instance.ConcreteRoles.ThroughDate = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			WorkEffortAssignmentClass.Instance.ConcreteRoles.ThroughDate = WorkEffortAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoles.ThroughDate = WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			CustomerRelationshipClass.Instance.ConcreteRoles.ThroughDate = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			PartyFixedAssetAssignmentClass.Instance.ConcreteRoles.ThroughDate = PartyFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			CapitalBudgetClass.Instance.ConcreteRoles.ThroughDate = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			MarketingPackageClass.Instance.ConcreteRoles.ThroughDate = MarketingPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ProductPurchasePriceClass.Instance.ConcreteRoles.ThroughDate = ProductPurchasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			OneTimeChargeClass.Instance.ConcreteRoles.ThroughDate = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			PartBillOfMaterialSubstituteClass.Instance.ConcreteRoles.ThroughDate = PartBillOfMaterialSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			OrganisationGlAccountClass.Instance.ConcreteRoles.ThroughDate = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			PersonTrainingClass.Instance.ConcreteRoles.ThroughDate = PersonTrainingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ManufacturingBomClass.Instance.ConcreteRoles.ThroughDate = ManufacturingBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			PositionFulfillmentClass.Instance.ConcreteRoles.ThroughDate = PositionFulfillmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			EmploymentClass.Instance.ConcreteRoles.ThroughDate = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			AccountingPeriodClass.Instance.ConcreteRoles.ThroughDate = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			EngagementRateClass.Instance.ConcreteRoles.ThroughDate = EngagementRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			SalesRepRelationshipClass.Instance.ConcreteRoles.ThroughDate = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			SalesAgreementClass.Instance.ConcreteRoles.ThroughDate = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			PerformanceReviewClass.Instance.ConcreteRoles.ThroughDate = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.ThroughDate = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			UtilizationChargeClass.Instance.ConcreteRoles.ThroughDate = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			EstimatedOtherCostClass.Instance.ConcreteRoles.ThroughDate = EstimatedOtherCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ProfessionalAssignmentClass.Instance.ConcreteRoles.ThroughDate = ProfessionalAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			SurchargeComponentClass.Instance.ConcreteRoles.ThroughDate = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.ThroughDate = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			RecurringChargeClass.Instance.ConcreteRoles.ThroughDate = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ClientRelationshipClass.Instance.ConcreteRoles.ThroughDate = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			PartnershipClass.Instance.ConcreteRoles.ThroughDate = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			OperatingBudgetClass.Instance.ConcreteRoles.ThroughDate = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			DiscountComponentClass.Instance.ConcreteRoles.ThroughDate = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			VolumeUsageClass.Instance.ConcreteRoles.ThroughDate = VolumeUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			EstimatedMaterialCostClass.Instance.ConcreteRoles.ThroughDate = EstimatedMaterialCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ProspectRelationshipClass.Instance.ConcreteRoles.ThroughDate = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.ThroughDate = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.ThroughDate = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			SubContractorRelationshipClass.Instance.ConcreteRoles.ThroughDate = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ClientAgreementClass.Instance.ConcreteRoles.ThroughDate = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			ActivityUsageClass.Instance.ConcreteRoles.ThroughDate = ActivityUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			DeploymentClass.Instance.ConcreteRoles.ThroughDate = DeploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.ThroughDate = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 
			TimePeriodUsageClass.Instance.ConcreteRoles.ThroughDate = TimePeriodUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ThroughDate]; 


		}

		internal class RolesType
		{
			internal RoleType FromDate;
			internal RoleType ThroughDate;

		}
	}public partial class DeletableInterface: Interface
	{
		public static DeletableInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal DeletableInterface() : base(BaseDomain.Instance, new Guid("9279e337-c658-4086-946d-03c75cdb1ad3"))
        {
			this.SingularName = "Deletable";
			this.PluralName = "Deletables";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}
	}public partial class UserInterface: Interface
	{
		public static UserInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal UserInterface() : base(BaseDomain.Instance, new Guid("a0309c3b-6f80-4777-983e-6e69800df5be"))
        {
			this.SingularName = "User";
			this.PluralName = "Users";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("17c51f3d-869f-4f1e-95e0-011021837b69"))
			{
				Subtype = Instance,
				Supertype = SecurityTokenOwnerInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("42aae0bd-7080-4c11-8cbd-1634aa046d32"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("765d49c1-f1ef-4af9-b295-08d0b010b7fe"))
			{
				Subtype = Instance,
				Supertype = LocalisedInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var UserUserEmailConfirmed = new RelationType(BaseDomain.Instance, new Guid("0b3b650b-fcd4-4475-b5c4-e2ee4f39b0be"), new Guid("c89a8e3f-6f76-41ac-b4dc-839f9080d917"), new Guid("1b1409b8-add7-494c-a895-002fc969ac7b"));
			UserUserEmailConfirmed.AssignedMultiplicity = Multiplicity.OneToOne;
			UserUserEmailConfirmed.AssociationType.ObjectType = this;

			UserUserEmailConfirmed.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			UserUserEmailConfirmed.RoleType.AssignedSingularName = "UserEmailConfirmed";
			UserUserEmailConfirmed.RoleType.AssignedPluralName = "UserEmailConfirmeds";
			this.Roles.UserEmailConfirmed = UserUserEmailConfirmed.RoleType;

			var UserUserName = new RelationType(BaseDomain.Instance, new Guid("5e8ab257-1a1c-4448-aacc-71dbaaba525b"), new Guid("eca7ef36-8928-4116-bfce-1896a685fe8c"), new Guid("3b7d40a0-18ea-4018-b797-6417723e1890"));
			UserUserName.AssignedMultiplicity = Multiplicity.OneToOne;
			UserUserName.AssociationType.ObjectType = this;

			UserUserName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			UserUserName.RoleType.AssignedSingularName = "UserName";
			UserUserName.RoleType.AssignedPluralName = "UserNames";
			UserUserName.RoleType.Size = 256;
			this.Roles.UserName = UserUserName.RoleType;

			var UserUserEmail = new RelationType(BaseDomain.Instance, new Guid("c1ae3652-5854-4b68-9890-a954067767fc"), new Guid("111104a2-1181-4958-92f6-6528cef79af7"), new Guid("58e35754-91a9-4956-aa66-ca48d05c7042"));
			UserUserEmail.AssignedMultiplicity = Multiplicity.OneToOne;
			UserUserEmail.AssociationType.ObjectType = this;

			UserUserEmail.RoleType.ObjectType = AllorsStringUnit.Instance;;
			UserUserEmail.RoleType.AssignedSingularName = "UserEmail";
			UserUserEmail.RoleType.AssignedPluralName = "UserEmails";
			UserUserEmail.RoleType.Size = 256;
			this.Roles.UserEmail = UserUserEmail.RoleType;

			var UserUserPasswordHash = new RelationType(BaseDomain.Instance, new Guid("ea0c7596-c0b8-4984-bc25-cb4b4857954e"), new Guid("8537ddb5-8ce2-4f35-a16f-207f2519ba9c"), new Guid("75ee3ec2-02bb-4666-a6f0-bac84c844dfa"));
			UserUserPasswordHash.AssignedMultiplicity = Multiplicity.OneToOne;
			UserUserPasswordHash.AssociationType.ObjectType = this;

			UserUserPasswordHash.RoleType.ObjectType = AllorsStringUnit.Instance;;
			UserUserPasswordHash.RoleType.AssignedSingularName = "UserPasswordHash";
			UserUserPasswordHash.RoleType.AssignedPluralName = "UserPasswordHashes";
			UserUserPasswordHash.RoleType.Size = 256;
			this.Roles.UserPasswordHash = UserUserPasswordHash.RoleType;


		}

		internal override void SetRelationTypes()
		{
			AutomatedAgentClass.Instance.ConcreteRoles.UserEmailConfirmed = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UserEmailConfirmed]; 
			PersonClass.Instance.ConcreteRoles.UserEmailConfirmed = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UserEmailConfirmed]; 

			AutomatedAgentClass.Instance.ConcreteRoles.UserName = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UserName]; 
			PersonClass.Instance.ConcreteRoles.UserName = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UserName]; 

			AutomatedAgentClass.Instance.ConcreteRoles.UserEmail = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UserEmail]; 
			PersonClass.Instance.ConcreteRoles.UserEmail = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UserEmail]; 

			AutomatedAgentClass.Instance.ConcreteRoles.UserPasswordHash = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UserPasswordHash]; 
			PersonClass.Instance.ConcreteRoles.UserPasswordHash = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UserPasswordHash]; 


		}

		internal class RolesType
		{
			internal RoleType UserEmailConfirmed;
			internal RoleType UserName;
			internal RoleType UserEmail;
			internal RoleType UserPasswordHash;

		}
	}public partial class SecurityTokenClass : Class
	{
		public static SecurityTokenClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal SecurityTokenClass() : base(BaseDomain.Instance, new Guid("a53f1aed-0e3f-4c3c-9600-dc579cccf893"))
        {
			this.SingularName = "SecurityToken";
			this.PluralName = "SecurityTokens";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("0a52522a-c2e2-4647-98d4-27fb2fa6a7ad"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}

		internal class ConcreteRolesType
		{
		}
	}public partial class SecurityTokenOwnerInterface: Interface
	{
		public static SecurityTokenOwnerInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal SecurityTokenOwnerInterface() : base(BaseDomain.Instance, new Guid("a69cad9c-c2f1-463f-9af1-873ce65aeea6"))
        {
			this.SingularName = "SecurityTokenOwner";
			this.PluralName = "SecurityTokenOwners";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var SecurityTokenOwnerOwnerSecurityToken = new RelationType(BaseDomain.Instance, new Guid("5fb15e8b-011c-46f7-83dd-485d4cc4f9f2"), new Guid("cdc21c1c-918e-4622-a01f-a3de06a8c802"), new Guid("2acda9b3-89e8-475f-9d70-b9cde334409c"));
			SecurityTokenOwnerOwnerSecurityToken.AssignedMultiplicity = Multiplicity.OneToOne;
			SecurityTokenOwnerOwnerSecurityToken.IsDerived = true;
			SecurityTokenOwnerOwnerSecurityToken.IsIndexed = true;

			SecurityTokenOwnerOwnerSecurityToken.AssociationType.ObjectType = this;

			SecurityTokenOwnerOwnerSecurityToken.RoleType.ObjectType = SecurityTokenClass.Instance;;
			SecurityTokenOwnerOwnerSecurityToken.RoleType.AssignedSingularName = "OwnerSecurityToken";
			SecurityTokenOwnerOwnerSecurityToken.RoleType.AssignedPluralName = "OwnerSecurityTokens";
			this.Roles.OwnerSecurityToken = SecurityTokenOwnerOwnerSecurityToken.RoleType;


		}

		internal override void SetRelationTypes()
		{
			AutomatedAgentClass.Instance.ConcreteRoles.OwnerSecurityToken = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OwnerSecurityToken]; 
			OrganisationClass.Instance.ConcreteRoles.OwnerSecurityToken = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OwnerSecurityToken]; 
			InternalOrganisationClass.Instance.ConcreteRoles.OwnerSecurityToken = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OwnerSecurityToken]; 
			PersonClass.Instance.ConcreteRoles.OwnerSecurityToken = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OwnerSecurityToken]; 


		}

		internal class RolesType
		{
			internal RoleType OwnerSecurityToken;

		}
	}public partial class TransitionClass : Class
	{
		public static TransitionClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal TransitionClass() : base(BaseDomain.Instance, new Guid("a7e490c0-ce29-4298-97c4-519904bb755a"))
        {
			this.SingularName = "Transition";
			this.PluralName = "Transitions";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var TransitionFromState = new RelationType(BaseDomain.Instance, new Guid("c6ee1a42-05fa-462b-b04f-811f01c6b646"), new Guid("ae7fa215-20bb-4472-9d25-ee3174f40fdb"), new Guid("e79fa7b8-870a-4a6e-8522-bb39437e0650"));
			TransitionFromState.AssignedMultiplicity = Multiplicity.ManyToMany;
			TransitionFromState.IsIndexed = true;

			TransitionFromState.AssociationType.ObjectType = this;

			TransitionFromState.RoleType.ObjectType = ObjectStateInterface.Instance;;
			TransitionFromState.RoleType.AssignedSingularName = "FromState";
			TransitionFromState.RoleType.AssignedPluralName = "FromStates";
			this.Roles.FromState = TransitionFromState.RoleType;

			var TransitionToState = new RelationType(BaseDomain.Instance, new Guid("dd19e7f8-83b7-4ff1-b475-02c4296b47e4"), new Guid("c88c9ab2-af38-45ca-9caa-fcb5715da129"), new Guid("c68eb959-1b2c-48a7-b15a-944a576944ef"));
			TransitionToState.AssignedMultiplicity = Multiplicity.ManyToOne;
			TransitionToState.IsIndexed = true;

			TransitionToState.AssociationType.ObjectType = this;

			TransitionToState.RoleType.ObjectType = ObjectStateInterface.Instance;;
			TransitionToState.RoleType.AssignedSingularName = "ToState";
			TransitionToState.RoleType.AssignedPluralName = "ToStates";
			this.Roles.ToState = TransitionToState.RoleType;


		}

		internal override void SetRelationTypes()
		{
			TransitionClass.Instance.ConcreteRoles.FromState = TransitionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FromState]; 

			TransitionClass.Instance.ConcreteRoles.ToState = TransitionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.ToState]; 


		}

		internal class RolesType
		{
			internal RoleType FromState;
			internal RoleType ToState;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType FromState;
			internal ConcreteRoleType ToState;

		}
	}public partial class MediaTypeClass : Class
	{
		public static MediaTypeClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal MediaTypeClass() : base(BaseDomain.Instance, new Guid("aa7d61f8-6618-47a0-9cf2-e75dd81dbd5b"))
        {
			this.SingularName = "MediaType";
			this.PluralName = "MediaTypes";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("8d9af4d9-0b71-46de-a0ca-1bbfef4cdd8f"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var MediaTypeDefaultFileExtension = new RelationType(BaseDomain.Instance, new Guid("19e52bd9-26cb-4e74-9c28-9f01e684f3da"), new Guid("b1928c18-ef98-4cee-b03c-660221046486"), new Guid("7223c1e2-d722-440b-8345-ab4cfe56d0e9"));
			MediaTypeDefaultFileExtension.AssignedMultiplicity = Multiplicity.OneToOne;
			MediaTypeDefaultFileExtension.AssociationType.ObjectType = this;

			MediaTypeDefaultFileExtension.RoleType.ObjectType = AllorsStringUnit.Instance;;
			MediaTypeDefaultFileExtension.RoleType.AssignedSingularName = "DefaultFileExtension";
			MediaTypeDefaultFileExtension.RoleType.AssignedPluralName = "DefaultFileExtensions";
			MediaTypeDefaultFileExtension.RoleType.Size = 256;
			this.Roles.DefaultFileExtension = MediaTypeDefaultFileExtension.RoleType;

			var MediaTypeName = new RelationType(BaseDomain.Instance, new Guid("5fcee025-29fd-42d8-ad5a-75cb88d8aef0"), new Guid("0353bfc3-552c-43c7-bfe2-666d2a8199dc"), new Guid("437caa53-1838-4cc4-a403-d65cf3b64358"));
			MediaTypeName.AssignedMultiplicity = Multiplicity.OneToOne;
			MediaTypeName.AssociationType.ObjectType = this;

			MediaTypeName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			MediaTypeName.RoleType.AssignedSingularName = "Name";
			MediaTypeName.RoleType.AssignedPluralName = "Names";
			MediaTypeName.RoleType.Size = 256;
			this.Roles.Name = MediaTypeName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			MediaTypeClass.Instance.ConcreteRoles.DefaultFileExtension = MediaTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DefaultFileExtension]; 

			MediaTypeClass.Instance.ConcreteRoles.Name = MediaTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType DefaultFileExtension;
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType DefaultFileExtension;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class TransitionalInterface: Interface
	{
		public static TransitionalInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal TransitionalInterface() : base(BaseDomain.Instance, new Guid("ab2179ad-9eac-4b61-8d84-81cd777c4926"))
        {
			this.SingularName = "Transitional";
			this.PluralName = "Transitionals";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("c9e990a7-7853-4b34-860d-672224d36162"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
		}

		internal override void SetRelationTypes()
		{
		}

		internal class RolesType
		{
		}
	}public partial class LoginClass : Class
	{
		public static LoginClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal LoginClass() : base(BaseDomain.Instance, new Guid("ad7277a8-eda4-4128-a990-b47fe43d120a"))
        {
			this.SingularName = "Login";
			this.PluralName = "Logins";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("9690ff31-1364-4e0e-9279-3e290477a37b"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var LoginKey = new RelationType(BaseDomain.Instance, new Guid("18262218-a14f-48c3-87a5-87196d3b5974"), new Guid("3f067cf5-4fcb-4be4-9afb-15ba37700658"), new Guid("e5393717-f46c-4a4c-a87f-3e4684428860"));
			LoginKey.AssignedMultiplicity = Multiplicity.OneToOne;
			LoginKey.IsIndexed = true;

			LoginKey.AssociationType.ObjectType = this;

			LoginKey.RoleType.ObjectType = AllorsStringUnit.Instance;;
			LoginKey.RoleType.AssignedSingularName = "Key";
			LoginKey.RoleType.AssignedPluralName = "Keys";
			LoginKey.RoleType.Size = 256;
			this.Roles.Key = LoginKey.RoleType;

			var LoginProvider = new RelationType(BaseDomain.Instance, new Guid("7a82e721-d0b7-4567-aaef-bd3987ae6d01"), new Guid("2f2ef41d-8310-45fd-8ab5-e5d067862e3d"), new Guid("c8e3851a-bc57-4acb-934a-4adfc37b1da7"));
			LoginProvider.AssignedMultiplicity = Multiplicity.OneToOne;
			LoginProvider.IsIndexed = true;

			LoginProvider.AssociationType.ObjectType = this;

			LoginProvider.RoleType.ObjectType = AllorsStringUnit.Instance;;
			LoginProvider.RoleType.AssignedSingularName = "Provider";
			LoginProvider.RoleType.AssignedPluralName = "Providers";
			LoginProvider.RoleType.Size = 256;
			this.Roles.Provider = LoginProvider.RoleType;

			var LoginUser = new RelationType(BaseDomain.Instance, new Guid("c2d950ad-39d3-40f1-8817-11a026e9890b"), new Guid("e8091111-9f92-41a9-b4b1-4e8f277ea575"), new Guid("150daf84-13ce-4b5f-83e6-64c7ef4f81c6"));
			LoginUser.AssignedMultiplicity = Multiplicity.ManyToOne;
			LoginUser.IsIndexed = true;

			LoginUser.AssociationType.ObjectType = this;

			LoginUser.RoleType.ObjectType = UserInterface.Instance;;
			LoginUser.RoleType.AssignedSingularName = "User";
			LoginUser.RoleType.AssignedPluralName = "Users";
			this.Roles.User = LoginUser.RoleType;


		}

		internal override void SetRelationTypes()
		{
			LoginClass.Instance.ConcreteRoles.Key = LoginClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Key]; 

			LoginClass.Instance.ConcreteRoles.Provider = LoginClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Provider]; 

			LoginClass.Instance.ConcreteRoles.User = LoginClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.User]; 


		}

		internal class RolesType
		{
			internal RoleType Key;
			internal RoleType Provider;
			internal RoleType User;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Key;
			internal ConcreteRoleType Provider;
			internal ConcreteRoleType User;

		}
	}public partial class RoleClass : Class
	{
		public static RoleClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal RoleClass() : base(BaseDomain.Instance, new Guid("af6fe5f4-e5bc-4099-bcd1-97528af6505d"))
        {
			this.SingularName = "Role";
			this.PluralName = "Roles";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("4e737d59-0330-4f4e-a3f3-7ec617d63748"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("816ab651-b27d-4f4f-83d7-39e7b501b2c0"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var RolePermission = new RelationType(BaseDomain.Instance, new Guid("51e56ae1-72dc-443f-a2a3-f5aa3650f8d2"), new Guid("47af1a0f-497d-4a19-887b-79e5fb77c8bd"), new Guid("7e6a71b0-2194-47f8-b562-cb4a15e335b6"));
			RolePermission.AssignedMultiplicity = Multiplicity.ManyToMany;
			RolePermission.IsIndexed = true;

			RolePermission.AssociationType.ObjectType = this;

			RolePermission.RoleType.ObjectType = PermissionClass.Instance;;
			RolePermission.RoleType.AssignedSingularName = "Permission";
			RolePermission.RoleType.AssignedPluralName = "Permissions";
			this.Roles.Permission = RolePermission.RoleType;

			var RoleName = new RelationType(BaseDomain.Instance, new Guid("934bcbbe-5286-445c-a1bd-e2fcc786c448"), new Guid("05785884-ca83-43de-a6f3-86d3fa7ec82a"), new Guid("8d87c74f-53ed-4e1d-a2ea-12190ac233d2"));
			RoleName.AssignedMultiplicity = Multiplicity.OneToOne;
			RoleName.AssociationType.ObjectType = this;

			RoleName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			RoleName.RoleType.AssignedSingularName = "Name";
			RoleName.RoleType.AssignedPluralName = "Names";
			RoleName.RoleType.Size = 256;
			this.Roles.Name = RoleName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RoleClass.Instance.ConcreteRoles.Permission = RoleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Permission]; 

			RoleClass.Instance.ConcreteRoles.Name = RoleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Permission;
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Permission;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class PrintQueueClass : Class
	{
		public static PrintQueueClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PrintQueueClass() : base(BaseDomain.Instance, new Guid("b45705e3-0dc6-4296-824a-76bb6af223d3"))
        {
			this.SingularName = "PrintQueue";
			this.PluralName = "PrintQueues";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("8f8c54bf-2aa2-4dd0-86ec-d4451b50aeb1"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("e4518c12-8dd9-4762-93b8-ba3e42b6bf0d"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PrintQueuePrintable = new RelationType(BaseDomain.Instance, new Guid("679156a1-f683-4772-b724-54b318eb3cb3"), new Guid("9124aa32-3ed5-4a1a-8988-961eea280b86"), new Guid("432f8b01-0bb8-4bd2-8a41-107b6d043a40"));
			PrintQueuePrintable.AssignedMultiplicity = Multiplicity.ManyToMany;
			PrintQueuePrintable.IsIndexed = true;

			PrintQueuePrintable.AssociationType.ObjectType = this;

			PrintQueuePrintable.RoleType.ObjectType = PrintableInterface.Instance;;
			PrintQueuePrintable.RoleType.AssignedSingularName = "Printable";
			PrintQueuePrintable.RoleType.AssignedPluralName = "Printables";
			this.Roles.Printable = PrintQueuePrintable.RoleType;

			var PrintQueueName = new RelationType(BaseDomain.Instance, new Guid("7a85e090-55cf-47f5-912e-4bd87c66a060"), new Guid("01fa325c-4b41-4cbf-9ffe-65d25e0ae694"), new Guid("285adf08-7f1b-4dfe-8db5-cbf4a9d0cb59"));
			PrintQueueName.AssignedMultiplicity = Multiplicity.OneToOne;
			PrintQueueName.IsIndexed = true;

			PrintQueueName.AssociationType.ObjectType = this;

			PrintQueueName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PrintQueueName.RoleType.AssignedSingularName = "Name";
			PrintQueueName.RoleType.AssignedPluralName = "Names";
			PrintQueueName.RoleType.Size = 256;
			this.Roles.Name = PrintQueueName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PrintQueueClass.Instance.ConcreteRoles.Printable = PrintQueueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Printable]; 

			PrintQueueClass.Instance.ConcreteRoles.Name = PrintQueueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType Printable;
			internal RoleType Name;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Printable;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class EnumerationInterface: Interface
	{
		public static EnumerationInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal EnumerationInterface() : base(BaseDomain.Instance, new Guid("b7bcc22f-03f0-46fd-b738-4e035921d445"))
        {
			this.SingularName = "Enumeration";
			this.PluralName = "Enumerations";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("9b0a0816-0ec4-4e6d-9617-ba819f7081a5"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("b5e48ee4-971a-4487-b09c-d0cb397aa0e9"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var EnumerationLocalisedName = new RelationType(BaseDomain.Instance, new Guid("07e034f1-246a-4115-9662-4c798f31343f"), new Guid("bcf428fd-0263-488c-b9ac-963ceca1c972"), new Guid("919fdad7-830e-4b12-b23c-f433951236af"));
			EnumerationLocalisedName.AssignedMultiplicity = Multiplicity.OneToMany;
			EnumerationLocalisedName.IsIndexed = true;

			EnumerationLocalisedName.AssociationType.ObjectType = this;

			EnumerationLocalisedName.RoleType.ObjectType = LocalisedTextClass.Instance;;
			EnumerationLocalisedName.RoleType.AssignedSingularName = "LocalisedName";
			EnumerationLocalisedName.RoleType.AssignedPluralName = "LocalisedNames";
			this.Roles.LocalisedName = EnumerationLocalisedName.RoleType;

			var EnumerationName = new RelationType(BaseDomain.Instance, new Guid("3d3ae4d0-bac6-4645-8a53-3e9f7f9af086"), new Guid("004cc333-b8ae-4952-ae13-f2ab80eb018c"), new Guid("5850860d-c772-402f-815b-7634c9a1e697"));
			EnumerationName.AssignedMultiplicity = Multiplicity.OneToOne;
			EnumerationName.IsIndexed = true;

			EnumerationName.AssociationType.ObjectType = this;

			EnumerationName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			EnumerationName.RoleType.AssignedSingularName = "Name";
			EnumerationName.RoleType.AssignedPluralName = "Names";
			EnumerationName.RoleType.Size = 256;
			this.Roles.Name = EnumerationName.RoleType;

			var EnumerationIsActive = new RelationType(BaseDomain.Instance, new Guid("f57bb62e-77a8-4519-81e6-539d54b71cb7"), new Guid("a8993304-52c0-4b53-9982-6caa5675467a"), new Guid("0c6faf5a-eac9-454c-bd53-3b8409e56d34"));
			EnumerationIsActive.AssignedMultiplicity = Multiplicity.OneToOne;
			EnumerationIsActive.IsIndexed = true;

			EnumerationIsActive.AssociationType.ObjectType = this;

			EnumerationIsActive.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			EnumerationIsActive.RoleType.AssignedSingularName = "IsActive";
			EnumerationIsActive.RoleType.AssignedPluralName = "AreActive";
			this.Roles.IsActive = EnumerationIsActive.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RateTypeClass.Instance.ConcreteRoles.LocalisedName = RateTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			ContactMechanismPurposeClass.Instance.ConcreteRoles.LocalisedName = ContactMechanismPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			SkillClass.Instance.ConcreteRoles.LocalisedName = SkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			EmploymentTerminationClass.Instance.ConcreteRoles.LocalisedName = EmploymentTerminationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			TermTypeClass.Instance.ConcreteRoles.LocalisedName = TermTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			PurchaseInvoiceItemTypeClass.Instance.ConcreteRoles.LocalisedName = PurchaseInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			RatingTypeClass.Instance.ConcreteRoles.LocalisedName = RatingTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			PurchaseInvoiceTypeClass.Instance.ConcreteRoles.LocalisedName = PurchaseInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			PersonalTitleClass.Instance.ConcreteRoles.LocalisedName = PersonalTitleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			TimeFrequencyClass.Instance.ConcreteRoles.LocalisedName = TimeFrequencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			SalesInvoiceItemTypeClass.Instance.ConcreteRoles.LocalisedName = SalesInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			ModelClass.Instance.ConcreteRoles.LocalisedName = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			SkillRatingClass.Instance.ConcreteRoles.LocalisedName = SkillRatingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			VatRateUsageClass.Instance.ConcreteRoles.LocalisedName = VatRateUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			HobbyClass.Instance.ConcreteRoles.LocalisedName = HobbyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			AccountingTransactionTypeClass.Instance.ConcreteRoles.LocalisedName = AccountingTransactionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.LocalisedName = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			OrdinalClass.Instance.ConcreteRoles.LocalisedName = OrdinalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			ShipmentMethodClass.Instance.ConcreteRoles.LocalisedName = ShipmentMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			DebitCreditConstantClass.Instance.ConcreteRoles.LocalisedName = DebitCreditConstantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			VatCalculationMethodClass.Instance.ConcreteRoles.LocalisedName = VatCalculationMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			InvoiceSequenceClass.Instance.ConcreteRoles.LocalisedName = InvoiceSequenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			DunningTypeClass.Instance.ConcreteRoles.LocalisedName = DunningTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			PositionStatusClass.Instance.ConcreteRoles.LocalisedName = PositionStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			SizeClass.Instance.ConcreteRoles.LocalisedName = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			CostOfGoodsSoldMethodClass.Instance.ConcreteRoles.LocalisedName = CostOfGoodsSoldMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			SkillLevelClass.Instance.ConcreteRoles.LocalisedName = SkillLevelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			UnitOfMeasureClass.Instance.ConcreteRoles.LocalisedName = UnitOfMeasureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			AssetAssignmentStatusClass.Instance.ConcreteRoles.LocalisedName = AssetAssignmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			DeductionTypeClass.Instance.ConcreteRoles.LocalisedName = DeductionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			VatRegimeClass.Instance.ConcreteRoles.LocalisedName = VatRegimeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			EmploymentApplicationSourceClass.Instance.ConcreteRoles.LocalisedName = EmploymentApplicationSourceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			InventoryItemKindClass.Instance.ConcreteRoles.LocalisedName = InventoryItemKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			JournalTypeClass.Instance.ConcreteRoles.LocalisedName = JournalTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			SalesInvoiceTypeClass.Instance.ConcreteRoles.LocalisedName = SalesInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			WorkEffortTypeKindClass.Instance.ConcreteRoles.LocalisedName = WorkEffortTypeKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			ColourClass.Instance.ConcreteRoles.LocalisedName = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			CommunicationEventPurposeClass.Instance.ConcreteRoles.LocalisedName = CommunicationEventPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			WorkEffortPurposeClass.Instance.ConcreteRoles.LocalisedName = WorkEffortPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			VarianceReasonClass.Instance.ConcreteRoles.LocalisedName = VarianceReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			SalutationClass.Instance.ConcreteRoles.LocalisedName = SalutationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			PartyRelationshipStatusClass.Instance.ConcreteRoles.LocalisedName = PartyRelationshipStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			VatTariffClass.Instance.ConcreteRoles.LocalisedName = VatTariffClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			EuSalesListTypeClass.Instance.ConcreteRoles.LocalisedName = EuSalesListTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			DeliverableTypeClass.Instance.ConcreteRoles.LocalisedName = DeliverableTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			OrganisationUnitClass.Instance.ConcreteRoles.LocalisedName = OrganisationUnitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			VatRatePurchaseKindClass.Instance.ConcreteRoles.LocalisedName = VatRatePurchaseKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			EmploymentApplicationStatusClass.Instance.ConcreteRoles.LocalisedName = EmploymentApplicationStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			QualificationClass.Instance.ConcreteRoles.LocalisedName = QualificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			PriorityClass.Instance.ConcreteRoles.LocalisedName = PriorityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			CostCenterSplitMethodClass.Instance.ConcreteRoles.LocalisedName = CostCenterSplitMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			ProductQualityClass.Instance.ConcreteRoles.LocalisedName = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			SalesChannelClass.Instance.ConcreteRoles.LocalisedName = SalesChannelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			PerformanceReviewItemTypeClass.Instance.ConcreteRoles.LocalisedName = PerformanceReviewItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			TemplatePurposeClass.Instance.ConcreteRoles.LocalisedName = TemplatePurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			MaritalStatusClass.Instance.ConcreteRoles.LocalisedName = MaritalStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			GenderTypeClass.Instance.ConcreteRoles.LocalisedName = GenderTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			EmploymentTerminationReasonClass.Instance.ConcreteRoles.LocalisedName = EmploymentTerminationReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 
			ServiceFeatureClass.Instance.ConcreteRoles.LocalisedName = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 

			RateTypeClass.Instance.ConcreteRoles.Name = RateTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ContactMechanismPurposeClass.Instance.ConcreteRoles.Name = ContactMechanismPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SkillClass.Instance.ConcreteRoles.Name = SkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			EmploymentTerminationClass.Instance.ConcreteRoles.Name = EmploymentTerminationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			TermTypeClass.Instance.ConcreteRoles.Name = TermTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PurchaseInvoiceItemTypeClass.Instance.ConcreteRoles.Name = PurchaseInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			RatingTypeClass.Instance.ConcreteRoles.Name = RatingTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PurchaseInvoiceTypeClass.Instance.ConcreteRoles.Name = PurchaseInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PersonalTitleClass.Instance.ConcreteRoles.Name = PersonalTitleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			TimeFrequencyClass.Instance.ConcreteRoles.Name = TimeFrequencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SalesInvoiceItemTypeClass.Instance.ConcreteRoles.Name = SalesInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ModelClass.Instance.ConcreteRoles.Name = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SkillRatingClass.Instance.ConcreteRoles.Name = SkillRatingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			VatRateUsageClass.Instance.ConcreteRoles.Name = VatRateUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			HobbyClass.Instance.ConcreteRoles.Name = HobbyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			AccountingTransactionTypeClass.Instance.ConcreteRoles.Name = AccountingTransactionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.Name = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			OrdinalClass.Instance.ConcreteRoles.Name = OrdinalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ShipmentMethodClass.Instance.ConcreteRoles.Name = ShipmentMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			DebitCreditConstantClass.Instance.ConcreteRoles.Name = DebitCreditConstantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			VatCalculationMethodClass.Instance.ConcreteRoles.Name = VatCalculationMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			InvoiceSequenceClass.Instance.ConcreteRoles.Name = InvoiceSequenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			DunningTypeClass.Instance.ConcreteRoles.Name = DunningTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PositionStatusClass.Instance.ConcreteRoles.Name = PositionStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SizeClass.Instance.ConcreteRoles.Name = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			CostOfGoodsSoldMethodClass.Instance.ConcreteRoles.Name = CostOfGoodsSoldMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SkillLevelClass.Instance.ConcreteRoles.Name = SkillLevelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			UnitOfMeasureClass.Instance.ConcreteRoles.Name = UnitOfMeasureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			AssetAssignmentStatusClass.Instance.ConcreteRoles.Name = AssetAssignmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			DeductionTypeClass.Instance.ConcreteRoles.Name = DeductionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			VatRegimeClass.Instance.ConcreteRoles.Name = VatRegimeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			EmploymentApplicationSourceClass.Instance.ConcreteRoles.Name = EmploymentApplicationSourceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			InventoryItemKindClass.Instance.ConcreteRoles.Name = InventoryItemKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			JournalTypeClass.Instance.ConcreteRoles.Name = JournalTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SalesInvoiceTypeClass.Instance.ConcreteRoles.Name = SalesInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			WorkEffortTypeKindClass.Instance.ConcreteRoles.Name = WorkEffortTypeKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ColourClass.Instance.ConcreteRoles.Name = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			CommunicationEventPurposeClass.Instance.ConcreteRoles.Name = CommunicationEventPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			WorkEffortPurposeClass.Instance.ConcreteRoles.Name = WorkEffortPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			VarianceReasonClass.Instance.ConcreteRoles.Name = VarianceReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SalutationClass.Instance.ConcreteRoles.Name = SalutationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PartyRelationshipStatusClass.Instance.ConcreteRoles.Name = PartyRelationshipStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			VatTariffClass.Instance.ConcreteRoles.Name = VatTariffClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			EuSalesListTypeClass.Instance.ConcreteRoles.Name = EuSalesListTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			DeliverableTypeClass.Instance.ConcreteRoles.Name = DeliverableTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			OrganisationUnitClass.Instance.ConcreteRoles.Name = OrganisationUnitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			VatRatePurchaseKindClass.Instance.ConcreteRoles.Name = VatRatePurchaseKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			EmploymentApplicationStatusClass.Instance.ConcreteRoles.Name = EmploymentApplicationStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			QualificationClass.Instance.ConcreteRoles.Name = QualificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PriorityClass.Instance.ConcreteRoles.Name = PriorityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			CostCenterSplitMethodClass.Instance.ConcreteRoles.Name = CostCenterSplitMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ProductQualityClass.Instance.ConcreteRoles.Name = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SalesChannelClass.Instance.ConcreteRoles.Name = SalesChannelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PerformanceReviewItemTypeClass.Instance.ConcreteRoles.Name = PerformanceReviewItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			TemplatePurposeClass.Instance.ConcreteRoles.Name = TemplatePurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			MaritalStatusClass.Instance.ConcreteRoles.Name = MaritalStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			GenderTypeClass.Instance.ConcreteRoles.Name = GenderTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			EmploymentTerminationReasonClass.Instance.ConcreteRoles.Name = EmploymentTerminationReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			ServiceFeatureClass.Instance.ConcreteRoles.Name = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			RateTypeClass.Instance.ConcreteRoles.IsActive = RateTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			ContactMechanismPurposeClass.Instance.ConcreteRoles.IsActive = ContactMechanismPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			SkillClass.Instance.ConcreteRoles.IsActive = SkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			EmploymentTerminationClass.Instance.ConcreteRoles.IsActive = EmploymentTerminationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			TermTypeClass.Instance.ConcreteRoles.IsActive = TermTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			PurchaseInvoiceItemTypeClass.Instance.ConcreteRoles.IsActive = PurchaseInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			RatingTypeClass.Instance.ConcreteRoles.IsActive = RatingTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			PurchaseInvoiceTypeClass.Instance.ConcreteRoles.IsActive = PurchaseInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			PersonalTitleClass.Instance.ConcreteRoles.IsActive = PersonalTitleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			TimeFrequencyClass.Instance.ConcreteRoles.IsActive = TimeFrequencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			SalesInvoiceItemTypeClass.Instance.ConcreteRoles.IsActive = SalesInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			ModelClass.Instance.ConcreteRoles.IsActive = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			SkillRatingClass.Instance.ConcreteRoles.IsActive = SkillRatingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			VatRateUsageClass.Instance.ConcreteRoles.IsActive = VatRateUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			HobbyClass.Instance.ConcreteRoles.IsActive = HobbyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			AccountingTransactionTypeClass.Instance.ConcreteRoles.IsActive = AccountingTransactionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.IsActive = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			OrdinalClass.Instance.ConcreteRoles.IsActive = OrdinalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			ShipmentMethodClass.Instance.ConcreteRoles.IsActive = ShipmentMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			DebitCreditConstantClass.Instance.ConcreteRoles.IsActive = DebitCreditConstantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			VatCalculationMethodClass.Instance.ConcreteRoles.IsActive = VatCalculationMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			InvoiceSequenceClass.Instance.ConcreteRoles.IsActive = InvoiceSequenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			DunningTypeClass.Instance.ConcreteRoles.IsActive = DunningTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			PositionStatusClass.Instance.ConcreteRoles.IsActive = PositionStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			SizeClass.Instance.ConcreteRoles.IsActive = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			CostOfGoodsSoldMethodClass.Instance.ConcreteRoles.IsActive = CostOfGoodsSoldMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			SkillLevelClass.Instance.ConcreteRoles.IsActive = SkillLevelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			UnitOfMeasureClass.Instance.ConcreteRoles.IsActive = UnitOfMeasureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			AssetAssignmentStatusClass.Instance.ConcreteRoles.IsActive = AssetAssignmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			DeductionTypeClass.Instance.ConcreteRoles.IsActive = DeductionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			VatRegimeClass.Instance.ConcreteRoles.IsActive = VatRegimeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			EmploymentApplicationSourceClass.Instance.ConcreteRoles.IsActive = EmploymentApplicationSourceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			InventoryItemKindClass.Instance.ConcreteRoles.IsActive = InventoryItemKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			JournalTypeClass.Instance.ConcreteRoles.IsActive = JournalTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			SalesInvoiceTypeClass.Instance.ConcreteRoles.IsActive = SalesInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			WorkEffortTypeKindClass.Instance.ConcreteRoles.IsActive = WorkEffortTypeKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			ColourClass.Instance.ConcreteRoles.IsActive = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			CommunicationEventPurposeClass.Instance.ConcreteRoles.IsActive = CommunicationEventPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			WorkEffortPurposeClass.Instance.ConcreteRoles.IsActive = WorkEffortPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			VarianceReasonClass.Instance.ConcreteRoles.IsActive = VarianceReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			SalutationClass.Instance.ConcreteRoles.IsActive = SalutationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			PartyRelationshipStatusClass.Instance.ConcreteRoles.IsActive = PartyRelationshipStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			VatTariffClass.Instance.ConcreteRoles.IsActive = VatTariffClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			EuSalesListTypeClass.Instance.ConcreteRoles.IsActive = EuSalesListTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			DeliverableTypeClass.Instance.ConcreteRoles.IsActive = DeliverableTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			OrganisationUnitClass.Instance.ConcreteRoles.IsActive = OrganisationUnitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			VatRatePurchaseKindClass.Instance.ConcreteRoles.IsActive = VatRatePurchaseKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			EmploymentApplicationStatusClass.Instance.ConcreteRoles.IsActive = EmploymentApplicationStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			QualificationClass.Instance.ConcreteRoles.IsActive = QualificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			PriorityClass.Instance.ConcreteRoles.IsActive = PriorityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			CostCenterSplitMethodClass.Instance.ConcreteRoles.IsActive = CostCenterSplitMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			ProductQualityClass.Instance.ConcreteRoles.IsActive = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			SalesChannelClass.Instance.ConcreteRoles.IsActive = SalesChannelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			PerformanceReviewItemTypeClass.Instance.ConcreteRoles.IsActive = PerformanceReviewItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			TemplatePurposeClass.Instance.ConcreteRoles.IsActive = TemplatePurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			MaritalStatusClass.Instance.ConcreteRoles.IsActive = MaritalStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			GenderTypeClass.Instance.ConcreteRoles.IsActive = GenderTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			EmploymentTerminationReasonClass.Instance.ConcreteRoles.IsActive = EmploymentTerminationReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 
			ServiceFeatureClass.Instance.ConcreteRoles.IsActive = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsActive]; 


		}

		internal class RolesType
		{
			internal RoleType LocalisedName;
			internal RoleType Name;
			internal RoleType IsActive;

		}
	}public partial class CountryClass : Class
	{
		public static CountryClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CountryClass() : base(BaseDomain.Instance, new Guid("c22bf60e-6428-4d10-8194-94f7be396f28"))
        {
			this.SingularName = "Country";
			this.PluralName = "Countries";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("1771a830-0d21-4c5e-8d1c-56db36de55b2"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("e5295ca5-8795-4761-ab74-ef761f9242ef"))
			{
				Subtype = Instance,
				Supertype = GeographicBoundaryInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("f90c3356-75e6-4e4f-803d-ef660e46cc9f"))
			{
				Subtype = Instance,
				Supertype = CityBoundInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CountryCurrency = new RelationType(BaseDomain.Instance, new Guid("62009cef-7424-4ec0-8953-e92b3cd6639d"), new Guid("323173ee-385c-4f74-8b78-ff05735460f8"), new Guid("4ca5a640-5d9e-4910-95ed-6872c7ea13d2"));
			CountryCurrency.AssignedMultiplicity = Multiplicity.ManyToOne;
			CountryCurrency.IsIndexed = true;

			CountryCurrency.AssociationType.ObjectType = this;

			CountryCurrency.RoleType.ObjectType = CurrencyClass.Instance;;
			CountryCurrency.RoleType.AssignedSingularName = "Currency";
			CountryCurrency.RoleType.AssignedPluralName = "Currencies";
			this.Roles.Currency = CountryCurrency.RoleType;

			var CountryName = new RelationType(BaseDomain.Instance, new Guid("6b9c977f-b394-440e-9781-5d56733b60da"), new Guid("6e3532ae-3528-4114-9274-54fc08effd0d"), new Guid("60f1f9a3-13d1-485f-bc77-fda1f9ef1815"));
			CountryName.AssignedMultiplicity = Multiplicity.OneToOne;
			CountryName.IsIndexed = true;

			CountryName.AssociationType.ObjectType = this;

			CountryName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CountryName.RoleType.AssignedSingularName = "Name";
			CountryName.RoleType.AssignedPluralName = "Names";
			CountryName.RoleType.Size = 256;
			this.Roles.Name = CountryName.RoleType;

			var CountryLocalisedName = new RelationType(BaseDomain.Instance, new Guid("8236a702-a76d-4bb5-9afd-acacb1508261"), new Guid("9b682612-50f9-43f3-abde-4d0cb5156f0d"), new Guid("99c52c13-ef50-4f68-a32f-fef660aa3044"));
			CountryLocalisedName.AssignedMultiplicity = Multiplicity.OneToMany;
			CountryLocalisedName.IsIndexed = true;

			CountryLocalisedName.AssociationType.ObjectType = this;

			CountryLocalisedName.RoleType.ObjectType = LocalisedTextClass.Instance;;
			CountryLocalisedName.RoleType.AssignedSingularName = "LocalisedName";
			CountryLocalisedName.RoleType.AssignedPluralName = "LocalisedNames";
			this.Roles.LocalisedName = CountryLocalisedName.RoleType;

			var CountryIsoCode = new RelationType(BaseDomain.Instance, new Guid("f93acc4e-f89e-4610-ada9-e58f21c165bc"), new Guid("ea0efe67-89f2-4317-97e7-f0e14358e718"), new Guid("4fe997d6-d221-432b-9f09-4f77735c109b"));
			CountryIsoCode.AssignedMultiplicity = Multiplicity.OneToOne;
			CountryIsoCode.AssociationType.ObjectType = this;

			CountryIsoCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CountryIsoCode.RoleType.AssignedSingularName = "IsoCode";
			CountryIsoCode.RoleType.AssignedPluralName = "IsoCodes";
			CountryIsoCode.RoleType.Size = 2;
			this.Roles.IsoCode = CountryIsoCode.RoleType;

			var CountryVatRate = new RelationType(AppsDomain.Instance, new Guid("13010743-231f-43a8-9539-b95b83ab15da"), new Guid("de4d0d90-e41b-4b7c-bcdc-23269020ab4e"), new Guid("5e2328a6-5413-401f-8106-7b8b29907b06"));
			CountryVatRate.AssignedMultiplicity = Multiplicity.OneToMany;
			CountryVatRate.IsIndexed = true;

			CountryVatRate.AssociationType.ObjectType = this;

			CountryVatRate.RoleType.ObjectType = VatRateClass.Instance;;
			CountryVatRate.RoleType.AssignedSingularName = "VatRate";
			CountryVatRate.RoleType.AssignedPluralName = "VatRates";
			this.Roles.VatRate = CountryVatRate.RoleType;

			var CountryIbanLength = new RelationType(AppsDomain.Instance, new Guid("2ecb8cfb-011d-4c31-a9cd-ed5a13ae23a4"), new Guid("ebdfd8e3-9d24-4721-b72b-5a5e4327d62b"), new Guid("45aa4f50-a23b-4ce6-872f-d72b648e4e90"));
			CountryIbanLength.AssignedMultiplicity = Multiplicity.OneToOne;
			CountryIbanLength.AssociationType.ObjectType = this;

			CountryIbanLength.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			CountryIbanLength.RoleType.AssignedSingularName = "IbanLength";
			CountryIbanLength.RoleType.AssignedPluralName = "IbanLengths";
			this.Roles.IbanLength = CountryIbanLength.RoleType;

			var CountryEuMemberState = new RelationType(AppsDomain.Instance, new Guid("6553ee71-66dd-45f2-9de9-5656b011d2fc"), new Guid("0a5662c3-1f60-41d5-a703-638480cb3c15"), new Guid("a14f5154-bcf2-44f4-a49e-3c17aca71247"));
			CountryEuMemberState.AssignedMultiplicity = Multiplicity.OneToOne;
			CountryEuMemberState.AssociationType.ObjectType = this;

			CountryEuMemberState.RoleType.ObjectType = AllorsBooleanUnit.Instance;;
			CountryEuMemberState.RoleType.AssignedSingularName = "EuMemberState";
			CountryEuMemberState.RoleType.AssignedPluralName = "EuMemberStates";
			this.Roles.EuMemberState = CountryEuMemberState.RoleType;

			var CountryTelephoneCode = new RelationType(AppsDomain.Instance, new Guid("7f0adb03-db73-44f2-a4a2-ece00f4908a2"), new Guid("081e6909-c744-4795-b587-82bbf938b5fe"), new Guid("38546e92-a238-4d72-a731-a3f91dbcc61f"));
			CountryTelephoneCode.AssignedMultiplicity = Multiplicity.OneToOne;
			CountryTelephoneCode.AssociationType.ObjectType = this;

			CountryTelephoneCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CountryTelephoneCode.RoleType.AssignedSingularName = "TelephoneCode";
			CountryTelephoneCode.RoleType.AssignedPluralName = "TelephoneCodes";
			CountryTelephoneCode.RoleType.Size = 256;
			this.Roles.TelephoneCode = CountryTelephoneCode.RoleType;

			var CountryIbanRegex = new RelationType(AppsDomain.Instance, new Guid("a2aa65d7-e0ef-4f6f-a194-9aeb49a1d898"), new Guid("86d7d9a6-77fd-491b-b563-86b8d0c76ee4"), new Guid("4f6f041b-a1ea-47bc-92e4-650bddaa46ed"));
			CountryIbanRegex.AssignedMultiplicity = Multiplicity.OneToOne;
			CountryIbanRegex.AssociationType.ObjectType = this;

			CountryIbanRegex.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CountryIbanRegex.RoleType.AssignedSingularName = "IbanRegex";
			CountryIbanRegex.RoleType.AssignedPluralName = "IbanRegexes";
			CountryIbanRegex.RoleType.Size = 256;
			this.Roles.IbanRegex = CountryIbanRegex.RoleType;

			var CountryVatForm = new RelationType(AppsDomain.Instance, new Guid("b829da1c-2eb7-495b-a4a9-98e335cd87f9"), new Guid("a0377434-67ae-4ab4-90b3-99fb6bc2bf90"), new Guid("8a306049-a4b9-4489-a2b8-d627fa6444c3"));
			CountryVatForm.AssignedMultiplicity = Multiplicity.OneToOne;
			CountryVatForm.IsIndexed = true;

			CountryVatForm.AssociationType.ObjectType = this;

			CountryVatForm.RoleType.ObjectType = VatFormClass.Instance;;
			CountryVatForm.RoleType.AssignedSingularName = "VatForm";
			CountryVatForm.RoleType.AssignedPluralName = "VatForms";
			this.Roles.VatForm = CountryVatForm.RoleType;

			var CountryUriExtension = new RelationType(AppsDomain.Instance, new Guid("c231ce68-bf03-4122-8699-c3c6473ab90a"), new Guid("153203db-be9a-4722-aab3-7163de779a2a"), new Guid("e72228ee-ae28-406c-b7ee-a9be1a4d3286"));
			CountryUriExtension.AssignedMultiplicity = Multiplicity.OneToOne;
			CountryUriExtension.AssociationType.ObjectType = this;

			CountryUriExtension.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CountryUriExtension.RoleType.AssignedSingularName = "UriExtension";
			CountryUriExtension.RoleType.AssignedPluralName = "UriExtension";
			CountryUriExtension.RoleType.Size = 256;
			this.Roles.UriExtension = CountryUriExtension.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CountryClass.Instance.ConcreteRoles.Currency = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Currency]; 

			CountryClass.Instance.ConcreteRoles.Name = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			CountryClass.Instance.ConcreteRoles.LocalisedName = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 

			CountryClass.Instance.ConcreteRoles.IsoCode = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsoCode]; 

			CountryClass.Instance.ConcreteRoles.VatRate = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatRate]; 

			CountryClass.Instance.ConcreteRoles.IbanLength = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IbanLength]; 

			CountryClass.Instance.ConcreteRoles.EuMemberState = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.EuMemberState]; 

			CountryClass.Instance.ConcreteRoles.TelephoneCode = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TelephoneCode]; 

			CountryClass.Instance.ConcreteRoles.IbanRegex = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IbanRegex]; 

			CountryClass.Instance.ConcreteRoles.VatForm = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.VatForm]; 

			CountryClass.Instance.ConcreteRoles.UriExtension = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.UriExtension]; 


		}

		internal class RolesType
		{
			internal RoleType Currency;
			internal RoleType Name;
			internal RoleType LocalisedName;
			internal RoleType IsoCode;
			internal RoleType VatRate;
			internal RoleType IbanLength;
			internal RoleType EuMemberState;
			internal RoleType TelephoneCode;
			internal RoleType IbanRegex;
			internal RoleType VatForm;
			internal RoleType UriExtension;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Currency;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType IsoCode;
			internal ConcreteRoleType VatRate;
			internal ConcreteRoleType IbanLength;
			internal ConcreteRoleType EuMemberState;
			internal ConcreteRoleType TelephoneCode;
			internal ConcreteRoleType IbanRegex;
			internal ConcreteRoleType VatForm;
			internal ConcreteRoleType UriExtension;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType Latitude;
			internal ConcreteRoleType Longitude;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType City;

		}
	}public partial class AccessControlClass : Class
	{
		public static AccessControlClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal AccessControlClass() : base(BaseDomain.Instance, new Guid("c4d93d5e-34c3-4731-9d37-47a8e801d9a8"))
        {
			this.SingularName = "AccessControl";
			this.PluralName = "AccessControls";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("421b85e6-f8c3-469f-bbd7-ce425355fb04"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("b4c7e051-3605-41e6-a78b-edb1c70bde9d"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var AccessControlSubjectGroup = new RelationType(BaseDomain.Instance, new Guid("0dbbff5c-3dca-4257-b2da-442d263dcd86"), new Guid("92e8d639-9205-422b-b4ff-c7e8c2980abf"), new Guid("2d9b7157-5409-40d3-bd3e-6911df9aface"));
			AccessControlSubjectGroup.AssignedMultiplicity = Multiplicity.ManyToMany;
			AccessControlSubjectGroup.IsIndexed = true;

			AccessControlSubjectGroup.AssociationType.ObjectType = this;

			AccessControlSubjectGroup.RoleType.ObjectType = UserGroupClass.Instance;;
			AccessControlSubjectGroup.RoleType.AssignedSingularName = "SubjectGroup";
			AccessControlSubjectGroup.RoleType.AssignedPluralName = "SubjectGroups";
			this.Roles.SubjectGroup = AccessControlSubjectGroup.RoleType;

			var AccessControlSubject = new RelationType(BaseDomain.Instance, new Guid("37dd1e27-ba75-404c-9410-c6399d28317c"), new Guid("3d74101d-97bc-46fb-9548-96cb7aa01b39"), new Guid("e0303a17-bf7a-4a7f-bb4b-0a447c56aaaf"));
			AccessControlSubject.AssignedMultiplicity = Multiplicity.ManyToMany;
			AccessControlSubject.IsIndexed = true;

			AccessControlSubject.AssociationType.ObjectType = this;

			AccessControlSubject.RoleType.ObjectType = UserInterface.Instance;;
			AccessControlSubject.RoleType.AssignedSingularName = "Subject";
			AccessControlSubject.RoleType.AssignedPluralName = "Subjects";
			this.Roles.Subject = AccessControlSubject.RoleType;

			var AccessControlObject = new RelationType(BaseDomain.Instance, new Guid("6503574b-8bab-4da8-a19d-23a9bcffe01e"), new Guid("cae9e5c2-afa1-46f4-b930-69d4e810038f"), new Guid("ab2b4b9c-87dd-4712-b123-f5f9271c6193"));
			AccessControlObject.AssignedMultiplicity = Multiplicity.ManyToMany;
			AccessControlObject.IsIndexed = true;

			AccessControlObject.AssociationType.ObjectType = this;

			AccessControlObject.RoleType.ObjectType = SecurityTokenClass.Instance;;
			AccessControlObject.RoleType.AssignedSingularName = "Object";
			AccessControlObject.RoleType.AssignedPluralName = "Objects";
			this.Roles.Object = AccessControlObject.RoleType;

			var AccessControlRole = new RelationType(BaseDomain.Instance, new Guid("69a9dae8-678d-4c1c-a464-2e5aa5caf39e"), new Guid("ec79e57d-be81-430a-b12f-08ffd1e94af3"), new Guid("370d3d12-3164-4753-8a72-1c604bda1b64"));
			AccessControlRole.AssignedMultiplicity = Multiplicity.ManyToOne;
			AccessControlRole.AssociationType.ObjectType = this;

			AccessControlRole.RoleType.ObjectType = RoleClass.Instance;;
			AccessControlRole.RoleType.AssignedSingularName = "Role";
			AccessControlRole.RoleType.AssignedPluralName = "Roles";
			this.Roles.Role = AccessControlRole.RoleType;

			var AccessControlCacheId = new RelationType(BaseDomain.Instance, new Guid("f4763e29-6a7b-4c66-b59b-c80149df5861"), new Guid("d3b3ee52-c9ea-4d8a-84a7-5915f7e4fba7"), new Guid("a4197a6a-9070-4e5e-a8f9-7077574da8db"));
			AccessControlCacheId.AssignedMultiplicity = Multiplicity.OneToOne;
			AccessControlCacheId.AssociationType.ObjectType = this;

			AccessControlCacheId.RoleType.ObjectType = AllorsUniqueUnit.Instance;;
			AccessControlCacheId.RoleType.AssignedSingularName = "CacheId";
			AccessControlCacheId.RoleType.AssignedPluralName = "CacheIds";
			this.Roles.CacheId = AccessControlCacheId.RoleType;


		}

		internal override void SetRelationTypes()
		{
			AccessControlClass.Instance.ConcreteRoles.SubjectGroup = AccessControlClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SubjectGroup]; 

			AccessControlClass.Instance.ConcreteRoles.Subject = AccessControlClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Subject]; 

			AccessControlClass.Instance.ConcreteRoles.Object = AccessControlClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Object]; 

			AccessControlClass.Instance.ConcreteRoles.Role = AccessControlClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Role]; 

			AccessControlClass.Instance.ConcreteRoles.CacheId = AccessControlClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CacheId]; 


		}

		internal class RolesType
		{
			internal RoleType SubjectGroup;
			internal RoleType Subject;
			internal RoleType Object;
			internal RoleType Role;
			internal RoleType CacheId;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType SubjectGroup;
			internal ConcreteRoleType Subject;
			internal ConcreteRoleType Object;
			internal ConcreteRoleType Role;
			internal ConcreteRoleType CacheId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class PersonClass : Class
	{
		public static PersonClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal PersonClass() : base(BaseDomain.Instance, new Guid("c799ca62-a554-467d-9aa2-1663293bb37f"))
        {
			this.SingularName = "Person";
			this.PluralName = "Persons";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("306eb440-10ac-40e3-969d-14e3fdab134a"))
			{
				Subtype = Instance,
				Supertype = UserInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("7aa25de8-6602-434a-ace6-02694efa61a4"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("9cff65a7-70df-4614-868e-b007cf8d88b8"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("8ecbd248-e524-4bb7-9ea7-854391c91046"))
			{
				Subtype = Instance,
				Supertype = PartyInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("bce76604-27d9-45df-a812-e121019aac52"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var PersonLastName = new RelationType(BaseDomain.Instance, new Guid("8a3e4664-bb40-4208-8e90-a1b5be323f27"), new Guid("9b48ff56-afef-4501-ac97-6173731ff2c9"), new Guid("ace04ad8-bf64-4fc3-8216-14a720d3105d"));
			PersonLastName.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonLastName.AssociationType.ObjectType = this;

			PersonLastName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PersonLastName.RoleType.AssignedSingularName = "LastName";
			PersonLastName.RoleType.AssignedPluralName = "LastNames";
			PersonLastName.RoleType.Size = 256;
			this.Roles.LastName = PersonLastName.RoleType;

			var PersonMiddleName = new RelationType(BaseDomain.Instance, new Guid("eb18bb28-da9c-47b4-a091-2f8f2303dcb6"), new Guid("e3a4d7b2-c5f1-4101-9aab-a0135d37a5a5"), new Guid("a86fc7a6-dedd-4da9-a250-75c9ec730d22"));
			PersonMiddleName.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonMiddleName.AssociationType.ObjectType = this;

			PersonMiddleName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PersonMiddleName.RoleType.AssignedSingularName = "MiddleName";
			PersonMiddleName.RoleType.AssignedPluralName = "MiddleNames";
			PersonMiddleName.RoleType.Size = 256;
			this.Roles.MiddleName = PersonMiddleName.RoleType;

			var PersonFirstName = new RelationType(BaseDomain.Instance, new Guid("ed4b710a-fe24-4143-bb96-ed1bd9beae1a"), new Guid("1ea9eca4-eed0-4f61-8903-c99feae961ad"), new Guid("f10ea049-6d24-4ca2-8efa-032fcf3000b3"));
			PersonFirstName.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonFirstName.AssociationType.ObjectType = this;

			PersonFirstName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PersonFirstName.RoleType.AssignedSingularName = "FirstName";
			PersonFirstName.RoleType.AssignedPluralName = "FirstNames";
			PersonFirstName.RoleType.Size = 256;
			this.Roles.FirstName = PersonFirstName.RoleType;

			var PersonSalutation = new RelationType(AppsDomain.Instance, new Guid("348dd7c2-c534-422c-90aa-d48b1e504df9"), new Guid("7516fdc6-10c1-4f61-8a9f-f1d84b1a9899"), new Guid("f0306c09-0b6f-4e73-b789-47c3b3c2b0d6"));
			PersonSalutation.AssignedMultiplicity = Multiplicity.ManyToOne;
			PersonSalutation.IsIndexed = true;

			PersonSalutation.AssociationType.ObjectType = this;

			PersonSalutation.RoleType.ObjectType = SalutationClass.Instance;;
			PersonSalutation.RoleType.AssignedSingularName = "Salutation";
			PersonSalutation.RoleType.AssignedPluralName = "Salutations";
			this.Roles.Salutation = PersonSalutation.RoleType;

			var PersonYTDCommission = new RelationType(AppsDomain.Instance, new Guid("4a01889c-ed4f-41f5-8a25-f0e3bbeb095b"), new Guid("1282318d-0ac0-406b-868c-36176b4b0610"), new Guid("b62f0e23-6928-40b5-abc0-feac01a40e98"));
			PersonYTDCommission.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonYTDCommission.IsDerived = true;
			PersonYTDCommission.AssociationType.ObjectType = this;

			PersonYTDCommission.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PersonYTDCommission.RoleType.AssignedSingularName = "YTDCommission";
			PersonYTDCommission.RoleType.AssignedPluralName = "YTDCommissions";
			PersonYTDCommission.RoleType.Scale = 2;
			PersonYTDCommission.RoleType.Precision = 19;
			this.Roles.YTDCommission = PersonYTDCommission.RoleType;

			var PersonPersonClassification = new RelationType(AppsDomain.Instance, new Guid("4de34e8b-6c0e-48e7-9b5a-5390325a13ff"), new Guid("aa8b50f0-176f-4036-819a-205f68ab6d64"), new Guid("525e2b11-5917-4b21-abdf-15ed74048e38"));
			PersonPersonClassification.AssignedMultiplicity = Multiplicity.ManyToMany;
			PersonPersonClassification.IsIndexed = true;

			PersonPersonClassification.AssociationType.ObjectType = this;

			PersonPersonClassification.RoleType.ObjectType = PersonClassificationInterface.Instance;;
			this.Roles.PersonClassification = PersonPersonClassification.RoleType;

			var PersonCitizenship = new RelationType(AppsDomain.Instance, new Guid("539b51e6-dd15-481c-86d3-ceb84588c078"), new Guid("280bf735-be99-4c2e-b867-efbf187d8a67"), new Guid("766470ee-34f8-4a49-8622-28e5f79bea72"));
			PersonCitizenship.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonCitizenship.IsIndexed = true;

			PersonCitizenship.AssociationType.ObjectType = this;

			PersonCitizenship.RoleType.ObjectType = CitizenshipClass.Instance;;
			PersonCitizenship.RoleType.AssignedSingularName = "Citizenship";
			PersonCitizenship.RoleType.AssignedPluralName = "Citizenships";
			this.Roles.Citizenship = PersonCitizenship.RoleType;

			var PersonCurrentEmployment = new RelationType(AppsDomain.Instance, new Guid("5df11d30-c6e7-4778-890c-c24b162bd20a"), new Guid("da7d2f05-d84e-48c2-b2a8-b33c43f1345c"), new Guid("8db737e3-c93e-42b0-b5ac-0a7b64309b51"));
			PersonCurrentEmployment.AssignedMultiplicity = Multiplicity.ManyToOne;
			PersonCurrentEmployment.IsDerived = true;
			PersonCurrentEmployment.IsIndexed = true;

			PersonCurrentEmployment.AssociationType.ObjectType = this;

			PersonCurrentEmployment.RoleType.ObjectType = EmploymentClass.Instance;;
			PersonCurrentEmployment.RoleType.AssignedSingularName = "CurrentEmployment";
			PersonCurrentEmployment.RoleType.AssignedPluralName = "CurrentEmployment";
			this.Roles.CurrentEmployment = PersonCurrentEmployment.RoleType;

			var PersonLastYearsCommission = new RelationType(AppsDomain.Instance, new Guid("5f5d8dd2-33e6-4924-bae7-b6710a789ac9"), new Guid("007ba2c5-9fdd-425e-8842-27554cdbaf27"), new Guid("99b8085b-0ccf-44a3-a4d4-e1d091af8969"));
			PersonLastYearsCommission.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonLastYearsCommission.IsDerived = true;
			PersonLastYearsCommission.AssociationType.ObjectType = this;

			PersonLastYearsCommission.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PersonLastYearsCommission.RoleType.AssignedSingularName = "LastYearsCommission";
			PersonLastYearsCommission.RoleType.AssignedPluralName = "LastYearsCommissions";
			PersonLastYearsCommission.RoleType.Scale = 2;
			PersonLastYearsCommission.RoleType.Precision = 19;
			this.Roles.LastYearsCommission = PersonLastYearsCommission.RoleType;

			var PersonGivenName = new RelationType(AppsDomain.Instance, new Guid("634130cf-b466-4ed3-9036-a4a20566c344"), new Guid("41dd15b0-3525-428d-8af3-7ef4b90b974c"), new Guid("1dd0070d-af81-486e-8897-45727dae950a"));
			PersonGivenName.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonGivenName.AssociationType.ObjectType = this;

			PersonGivenName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PersonGivenName.RoleType.AssignedSingularName = "GivenName";
			PersonGivenName.RoleType.AssignedPluralName = "GivenNames";
			PersonGivenName.RoleType.Size = 256;
			this.Roles.GivenName = PersonGivenName.RoleType;

			var PersonTitle = new RelationType(AppsDomain.Instance, new Guid("6d425613-b821-46f2-896a-a04dc4b377a3"), new Guid("18b225ef-df54-4fd1-9423-36d334d1d876"), new Guid("128f6659-8313-4c53-8ff5-eb1fcffd1b36"));
			PersonTitle.AssignedMultiplicity = Multiplicity.ManyToMany;
			PersonTitle.IsIndexed = true;

			PersonTitle.AssociationType.ObjectType = this;

			PersonTitle.RoleType.ObjectType = PersonalTitleClass.Instance;;
			PersonTitle.RoleType.AssignedSingularName = "Title";
			PersonTitle.RoleType.AssignedPluralName = "Titles";
			this.Roles.Title = PersonTitle.RoleType;

			var PersonMothersMaidenName = new RelationType(AppsDomain.Instance, new Guid("6f7b0a7f-0b8e-4fbe-b248-b7b90fb18613"), new Guid("33d02f85-4e00-40ef-821d-19278666b178"), new Guid("1e4214e8-f228-4f6e-8885-29a59fcd19f3"));
			PersonMothersMaidenName.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonMothersMaidenName.AssociationType.ObjectType = this;

			PersonMothersMaidenName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PersonMothersMaidenName.RoleType.AssignedSingularName = "MothersMaidenName";
			PersonMothersMaidenName.RoleType.AssignedPluralName = "MothersMaidenNames";
			PersonMothersMaidenName.RoleType.Size = 256;
			this.Roles.MothersMaidenName = PersonMothersMaidenName.RoleType;

			var PersonBirthDate = new RelationType(AppsDomain.Instance, new Guid("7bcba7fd-6419-4324-8a11-c56bd46581a1"), new Guid("78ccda0f-4b17-40f1-93ad-b86e1181cb80"), new Guid("1babd38a-8a52-4a92-bb99-7a289d41bb1e"));
			PersonBirthDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonBirthDate.AssociationType.ObjectType = this;

			PersonBirthDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PersonBirthDate.RoleType.AssignedSingularName = "BirthDate";
			PersonBirthDate.RoleType.AssignedPluralName = "BirthDates";
			this.Roles.BirthDate = PersonBirthDate.RoleType;

			var PersonHeight = new RelationType(AppsDomain.Instance, new Guid("a2ace3b0-e38e-49c8-8c4b-0e97672830c4"), new Guid("e5e9e017-d642-4c03-97c0-f106aff2eff5"), new Guid("55ed88ed-5634-4267-961f-c75469302637"));
			PersonHeight.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonHeight.IsIndexed = true;

			PersonHeight.AssociationType.ObjectType = this;

			PersonHeight.RoleType.ObjectType = AllorsDecimalUnit.Instance;;
			PersonHeight.RoleType.AssignedSingularName = "Height";
			PersonHeight.RoleType.AssignedPluralName = "Heights";
			PersonHeight.RoleType.Scale = 2;
			PersonHeight.RoleType.Precision = 19;
			this.Roles.Height = PersonHeight.RoleType;

			var PersonPersonTraining = new RelationType(AppsDomain.Instance, new Guid("ab9b5c70-3d58-4e2b-a140-f8f1a904da51"), new Guid("45889e13-eba5-4648-8f89-ee161e9335c9"), new Guid("f634cc39-2f16-4dea-958d-bcc56fbe61aa"));
			PersonPersonTraining.AssignedMultiplicity = Multiplicity.ManyToMany;
			PersonPersonTraining.IsIndexed = true;

			PersonPersonTraining.AssociationType.ObjectType = this;

			PersonPersonTraining.RoleType.ObjectType = PersonTrainingClass.Instance;;
			PersonPersonTraining.RoleType.AssignedSingularName = "PersonTraining";
			PersonPersonTraining.RoleType.AssignedPluralName = "PersonTrainings";
			this.Roles.PersonTraining = PersonPersonTraining.RoleType;

			var PersonGender = new RelationType(AppsDomain.Instance, new Guid("b6f28dbd-f20f-44ed-a2e7-476f1a8a5518"), new Guid("3ddb90b4-84df-4214-818d-7fa05a464815"), new Guid("a609ed29-bde6-4b43-bfe7-4abda8630b90"));
			PersonGender.AssignedMultiplicity = Multiplicity.ManyToOne;
			PersonGender.IsIndexed = true;

			PersonGender.AssociationType.ObjectType = this;

			PersonGender.RoleType.ObjectType = GenderTypeClass.Instance;;
			PersonGender.RoleType.AssignedSingularName = "Gender";
			PersonGender.RoleType.AssignedPluralName = "Genders";
			this.Roles.Gender = PersonGender.RoleType;

			var PersonWeight = new RelationType(AppsDomain.Instance, new Guid("d48c94ea-5106-44a2-8eda-959e03480960"), new Guid("32e77969-92bc-4387-9f93-350eaba42fea"), new Guid("b7789142-9c4a-452c-927b-7de2c7e09e83"));
			PersonWeight.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonWeight.IsIndexed = true;

			PersonWeight.AssociationType.ObjectType = this;

			PersonWeight.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PersonWeight.RoleType.AssignedSingularName = "Weight";
			PersonWeight.RoleType.AssignedPluralName = "Weights";
			this.Roles.Weight = PersonWeight.RoleType;

			var PersonHobby = new RelationType(AppsDomain.Instance, new Guid("ee6e4476-b1fa-431f-add3-30afe199cdd1"), new Guid("ffecd512-f3cd-44d1-868e-824fd81e6431"), new Guid("8a302cbf-f784-42d9-a127-55b256895959"));
			PersonHobby.AssignedMultiplicity = Multiplicity.ManyToMany;
			PersonHobby.IsIndexed = true;

			PersonHobby.AssociationType.ObjectType = this;

			PersonHobby.RoleType.ObjectType = HobbyClass.Instance;;
			PersonHobby.RoleType.AssignedSingularName = "Hobby";
			PersonHobby.RoleType.AssignedPluralName = "Hobbies";
			this.Roles.Hobby = PersonHobby.RoleType;

			var PersonTotalYearsWorkExperience = new RelationType(AppsDomain.Instance, new Guid("eeb16852-431b-4b84-983d-559e64af6dfb"), new Guid("85960e64-77a1-4744-9be5-c1704030247c"), new Guid("6fe6349d-b63f-4387-9a3f-bf83576e0d97"));
			PersonTotalYearsWorkExperience.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonTotalYearsWorkExperience.AssociationType.ObjectType = this;

			PersonTotalYearsWorkExperience.RoleType.ObjectType = AllorsIntegerUnit.Instance;;
			PersonTotalYearsWorkExperience.RoleType.AssignedSingularName = "TotalYearsWorkExperience";
			PersonTotalYearsWorkExperience.RoleType.AssignedPluralName = "TotalYearsWorkExperiences";
			this.Roles.TotalYearsWorkExperience = PersonTotalYearsWorkExperience.RoleType;

			var PersonPassport = new RelationType(AppsDomain.Instance, new Guid("f0708d80-a9cf-47be-9bed-76201fe9f17d"), new Guid("bfce261c-2f85-4be2-97ee-de15d3158b1d"), new Guid("e55b5f5e-931f-40a5-b092-45cdc57fd0ec"));
			PersonPassport.AssignedMultiplicity = Multiplicity.OneToMany;
			PersonPassport.IsIndexed = true;

			PersonPassport.AssociationType.ObjectType = this;

			PersonPassport.RoleType.ObjectType = PassportClass.Instance;;
			PersonPassport.RoleType.AssignedSingularName = "Passport";
			PersonPassport.RoleType.AssignedPluralName = "Passports";
			this.Roles.Passport = PersonPassport.RoleType;

			var PersonMaritalStatus = new RelationType(AppsDomain.Instance, new Guid("f15d6344-e4f4-4b79-a1af-c6a7417af844"), new Guid("13d296f7-0118-48dc-9f60-cbbdee324ad7"), new Guid("284e3a85-eba6-47f4-b97e-848bf2a163e5"));
			PersonMaritalStatus.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonMaritalStatus.IsIndexed = true;

			PersonMaritalStatus.AssociationType.ObjectType = this;

			PersonMaritalStatus.RoleType.ObjectType = MaritalStatusClass.Instance;;
			PersonMaritalStatus.RoleType.AssignedSingularName = "MaritalStatus";
			PersonMaritalStatus.RoleType.AssignedPluralName = "MaritalStatusses";
			this.Roles.MaritalStatus = PersonMaritalStatus.RoleType;

			var PersonPicture = new RelationType(AppsDomain.Instance, new Guid("f92c5c86-c32a-41e0-99ff-2d94a8d6ccfa"), new Guid("0ff499d5-300f-483c-b722-757787c1f4b3"), new Guid("2162765c-5fd8-42aa-85f7-20f0effbc308"));
			PersonPicture.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonPicture.IsIndexed = true;

			PersonPicture.AssociationType.ObjectType = this;

			PersonPicture.RoleType.ObjectType = MediaClass.Instance;;
			PersonPicture.RoleType.AssignedSingularName = "Picture";
			PersonPicture.RoleType.AssignedPluralName = "Pictures";
			this.Roles.Picture = PersonPicture.RoleType;

			var PersonSocialSecurityNumber = new RelationType(AppsDomain.Instance, new Guid("fefb8dc2-cfe5-4078-b3a9-8c4622047c34"), new Guid("7ecef213-f2db-4f79-8bf3-fc0979f81420"), new Guid("e19baff7-c31c-4462-8a48-ac30e862b4ea"));
			PersonSocialSecurityNumber.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonSocialSecurityNumber.AssociationType.ObjectType = this;

			PersonSocialSecurityNumber.RoleType.ObjectType = AllorsStringUnit.Instance;;
			PersonSocialSecurityNumber.RoleType.AssignedSingularName = "SocialSecurityNumber";
			PersonSocialSecurityNumber.RoleType.AssignedPluralName = "SocialSecurityNumbers";
			PersonSocialSecurityNumber.RoleType.Size = 256;
			this.Roles.SocialSecurityNumber = PersonSocialSecurityNumber.RoleType;

			var PersonDeceasedDate = new RelationType(AppsDomain.Instance, new Guid("ffda06c0-7dff-42fa-abd5-1ed6fa8c43da"), new Guid("8dabd93a-badc-40f3-96af-f97c1b61d262"), new Guid("92041fa4-b675-4fd4-b6c4-d9143393878e"));
			PersonDeceasedDate.AssignedMultiplicity = Multiplicity.OneToOne;
			PersonDeceasedDate.AssociationType.ObjectType = this;

			PersonDeceasedDate.RoleType.ObjectType = AllorsDateTimeUnit.Instance;;
			PersonDeceasedDate.RoleType.AssignedSingularName = "DeceasedDate";
			PersonDeceasedDate.RoleType.AssignedPluralName = "DeceasedDates";
			this.Roles.DeceasedDate = PersonDeceasedDate.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PersonClass.Instance.ConcreteRoles.LastName = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastName]; 

			PersonClass.Instance.ConcreteRoles.MiddleName = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MiddleName]; 

			PersonClass.Instance.ConcreteRoles.FirstName = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.FirstName]; 

			PersonClass.Instance.ConcreteRoles.Salutation = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Salutation]; 

			PersonClass.Instance.ConcreteRoles.YTDCommission = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.YTDCommission]; 

			PersonClass.Instance.ConcreteRoles.PersonClassification = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PersonClassification]; 

			PersonClass.Instance.ConcreteRoles.Citizenship = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Citizenship]; 

			PersonClass.Instance.ConcreteRoles.CurrentEmployment = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.CurrentEmployment]; 

			PersonClass.Instance.ConcreteRoles.LastYearsCommission = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LastYearsCommission]; 

			PersonClass.Instance.ConcreteRoles.GivenName = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.GivenName]; 

			PersonClass.Instance.ConcreteRoles.Title = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Title]; 

			PersonClass.Instance.ConcreteRoles.MothersMaidenName = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MothersMaidenName]; 

			PersonClass.Instance.ConcreteRoles.BirthDate = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.BirthDate]; 

			PersonClass.Instance.ConcreteRoles.Height = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Height]; 

			PersonClass.Instance.ConcreteRoles.PersonTraining = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.PersonTraining]; 

			PersonClass.Instance.ConcreteRoles.Gender = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Gender]; 

			PersonClass.Instance.ConcreteRoles.Weight = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Weight]; 

			PersonClass.Instance.ConcreteRoles.Hobby = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Hobby]; 

			PersonClass.Instance.ConcreteRoles.TotalYearsWorkExperience = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.TotalYearsWorkExperience]; 

			PersonClass.Instance.ConcreteRoles.Passport = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Passport]; 

			PersonClass.Instance.ConcreteRoles.MaritalStatus = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MaritalStatus]; 

			PersonClass.Instance.ConcreteRoles.Picture = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Picture]; 

			PersonClass.Instance.ConcreteRoles.SocialSecurityNumber = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SocialSecurityNumber]; 

			PersonClass.Instance.ConcreteRoles.DeceasedDate = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeceasedDate]; 


		}

		internal class RolesType
		{
			internal RoleType LastName;
			internal RoleType MiddleName;
			internal RoleType FirstName;
			internal RoleType Salutation;
			internal RoleType YTDCommission;
			internal RoleType PersonClassification;
			internal RoleType Citizenship;
			internal RoleType CurrentEmployment;
			internal RoleType LastYearsCommission;
			internal RoleType GivenName;
			internal RoleType Title;
			internal RoleType MothersMaidenName;
			internal RoleType BirthDate;
			internal RoleType Height;
			internal RoleType PersonTraining;
			internal RoleType Gender;
			internal RoleType Weight;
			internal RoleType Hobby;
			internal RoleType TotalYearsWorkExperience;
			internal RoleType Passport;
			internal RoleType MaritalStatus;
			internal RoleType Picture;
			internal RoleType SocialSecurityNumber;
			internal RoleType DeceasedDate;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType LastName;
			internal ConcreteRoleType MiddleName;
			internal ConcreteRoleType FirstName;
			internal ConcreteRoleType Salutation;
			internal ConcreteRoleType YTDCommission;
			internal ConcreteRoleType PersonClassification;
			internal ConcreteRoleType Citizenship;
			internal ConcreteRoleType CurrentEmployment;
			internal ConcreteRoleType LastYearsCommission;
			internal ConcreteRoleType GivenName;
			internal ConcreteRoleType Title;
			internal ConcreteRoleType MothersMaidenName;
			internal ConcreteRoleType BirthDate;
			internal ConcreteRoleType Height;
			internal ConcreteRoleType PersonTraining;
			internal ConcreteRoleType Gender;
			internal ConcreteRoleType Weight;
			internal ConcreteRoleType Hobby;
			internal ConcreteRoleType TotalYearsWorkExperience;
			internal ConcreteRoleType Passport;
			internal ConcreteRoleType MaritalStatus;
			internal ConcreteRoleType Picture;
			internal ConcreteRoleType SocialSecurityNumber;
			internal ConcreteRoleType DeceasedDate;
			internal ConcreteRoleType UserEmailConfirmed;
			internal ConcreteRoleType UserName;
			internal ConcreteRoleType UserEmail;
			internal ConcreteRoleType UserPasswordHash;
			internal ConcreteRoleType OwnerSecurityToken;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Locale;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType YTDRevenue;
			internal ConcreteRoleType LastYearsRevenue;
			internal ConcreteRoleType BillingInquiriesFax;
			internal ConcreteRoleType Qualification;
			internal ConcreteRoleType HomeAddress;
			internal ConcreteRoleType SalesOffice;
			internal ConcreteRoleType OrderInquiriesFax;
			internal ConcreteRoleType CurrentSalesRep;
			internal ConcreteRoleType PartyContactMechanism;
			internal ConcreteRoleType ShippingInquiriesFax;
			internal ConcreteRoleType ShippingInquiriesPhone;
			internal ConcreteRoleType BillingAccount;
			internal ConcreteRoleType OrderInquiriesPhone;
			internal ConcreteRoleType PartySkill;
			internal ConcreteRoleType PartyClassification;
			internal ConcreteRoleType ExcludeFromDunning;
			internal ConcreteRoleType BankAccount;
			internal ConcreteRoleType BillingAddress;
			internal ConcreteRoleType DefaultShipmentMethod;
			internal ConcreteRoleType Resume;
			internal ConcreteRoleType HeadQuarter;
			internal ConcreteRoleType PersonalEmailAddress;
			internal ConcreteRoleType CellPhoneNumber;
			internal ConcreteRoleType BillingInquiriesPhone;
			internal ConcreteRoleType PartyName;
			internal ConcreteRoleType OrderAddress;
			internal ConcreteRoleType InternetAddress;
			internal ConcreteRoleType Content;
			internal ConcreteRoleType CreditCard;
			internal ConcreteRoleType ShippingAddress;
			internal ConcreteRoleType OpenOrderAmount;
			internal ConcreteRoleType GeneralFaxNumber;
			internal ConcreteRoleType DefaultPaymentMethod;
			internal ConcreteRoleType GeneralPhoneNumber;
			internal ConcreteRoleType PreferredCurrency;
			internal ConcreteRoleType VatRegime;

		}
	}public partial class ImageClass : Class
	{
		public static ImageClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal ImageClass() : base(BaseDomain.Instance, new Guid("caa2a2de-9454-4812-a69f-9d3728706345"))
        {
			this.SingularName = "Image";
			this.PluralName = "Images";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("ae0a1a2a-6413-470a-9c0d-e15ed36d4948"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var ImageOriginal = new RelationType(BaseDomain.Instance, new Guid("366410a7-7d51-4d7c-82fd-3444bdc0b3f7"), new Guid("9d45e17e-962b-4f9b-a029-c1c1562e5260"), new Guid("9ed94fa8-e01e-4f63-9932-d56134616474"));
			ImageOriginal.AssignedMultiplicity = Multiplicity.ManyToOne;
			ImageOriginal.IsIndexed = true;

			ImageOriginal.AssociationType.ObjectType = this;

			ImageOriginal.RoleType.ObjectType = MediaClass.Instance;;
			ImageOriginal.RoleType.AssignedSingularName = "Original";
			ImageOriginal.RoleType.AssignedPluralName = "Originals";
			this.Roles.Original = ImageOriginal.RoleType;

			var ImageResponsive = new RelationType(BaseDomain.Instance, new Guid("59689164-7a45-45d4-98fa-f8cf50c62899"), new Guid("386c7cfc-4bec-4564-a7c4-b2c1bccf6ebe"), new Guid("ce4c0fbb-5bdb-4c7f-a70a-b930c1020624"));
			ImageResponsive.AssignedMultiplicity = Multiplicity.OneToOne;
			ImageResponsive.IsIndexed = true;

			ImageResponsive.AssociationType.ObjectType = this;

			ImageResponsive.RoleType.ObjectType = MediaClass.Instance;;
			ImageResponsive.RoleType.AssignedSingularName = "Responsive";
			ImageResponsive.RoleType.AssignedPluralName = "Responsives";
			this.Roles.Responsive = ImageResponsive.RoleType;

			var ImageOriginalFilename = new RelationType(BaseDomain.Instance, new Guid("d149b012-1dc2-4bd1-a650-26b7c6f9024b"), new Guid("75fccc6e-1c89-4e0f-88c2-527eb3b0d71d"), new Guid("2f1c8149-f94a-448b-a832-4994f635c48f"));
			ImageOriginalFilename.AssignedMultiplicity = Multiplicity.OneToOne;
			ImageOriginalFilename.AssociationType.ObjectType = this;

			ImageOriginalFilename.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ImageOriginalFilename.RoleType.AssignedSingularName = "OriginalFilename";
			ImageOriginalFilename.RoleType.AssignedPluralName = "OriginalFilenames";
			ImageOriginalFilename.RoleType.Size = 256;
			this.Roles.OriginalFilename = ImageOriginalFilename.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ImageClass.Instance.ConcreteRoles.Original = ImageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Original]; 

			ImageClass.Instance.ConcreteRoles.Responsive = ImageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Responsive]; 

			ImageClass.Instance.ConcreteRoles.OriginalFilename = ImageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.OriginalFilename]; 


		}

		internal class RolesType
		{
			internal RoleType Original;
			internal RoleType Responsive;
			internal RoleType OriginalFilename;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType Original;
			internal ConcreteRoleType Responsive;
			internal ConcreteRoleType OriginalFilename;

		}
	}public partial class MediaClass : Class
	{
		public static MediaClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal MediaClass() : base(BaseDomain.Instance, new Guid("da5b86a3-4f33-4c0d-965d-f4fbc1179374"))
        {
			this.SingularName = "Media";
			this.PluralName = "Medias";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("c8cd0830-d1a7-4343-8049-dc18c34c213e"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("dae544a9-9dea-4b84-99c7-2b701868333d"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(BaseDomain.Instance, new Guid("f1586900-8030-46c1-a49b-7f2b5d6b6e64"))
			{
				Subtype = Instance,
				Supertype = DeletableInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var MediaMediaType = new RelationType(BaseDomain.Instance, new Guid("49481792-06f0-49a1-b32f-28d265815a24"), new Guid("7ca17a9e-0b68-445f-8080-84b08ca0eb2d"), new Guid("f1008c56-b375-4aa8-ac7e-c1f7ef9b2080"));
			MediaMediaType.AssignedMultiplicity = Multiplicity.ManyToOne;
			MediaMediaType.IsIndexed = true;

			MediaMediaType.AssociationType.ObjectType = this;

			MediaMediaType.RoleType.ObjectType = MediaTypeClass.Instance;;
			MediaMediaType.RoleType.AssignedSingularName = "MediaType";
			MediaMediaType.RoleType.AssignedPluralName = "MediaTypes";
			this.Roles.MediaType = MediaMediaType.RoleType;

			var MediaMediaContent = new RelationType(BaseDomain.Instance, new Guid("67082a51-1502-490b-b8db-537799e550bd"), new Guid("e8537dcf-1bd7-46c4-a37c-077bee6a78a1"), new Guid("02fe1ce8-c019-4a40-bd6f-b38d2f47a288"));
			MediaMediaContent.AssignedMultiplicity = Multiplicity.ManyToOne;
			MediaMediaContent.IsDerived = true;
			MediaMediaContent.IsIndexed = true;

			MediaMediaContent.AssociationType.ObjectType = this;

			MediaMediaContent.RoleType.ObjectType = MediaContentClass.Instance;;
			MediaMediaContent.RoleType.AssignedSingularName = "MediaContent";
			MediaMediaContent.RoleType.AssignedPluralName = "MediaContents";
			this.Roles.MediaContent = MediaMediaContent.RoleType;


		}

		internal override void SetRelationTypes()
		{
			MediaClass.Instance.ConcreteRoles.MediaType = MediaClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MediaType]; 

			MediaClass.Instance.ConcreteRoles.MediaContent = MediaClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.MediaContent]; 


		}

		internal class RolesType
		{
			internal RoleType MediaType;
			internal RoleType MediaContent;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType MediaType;
			internal ConcreteRoleType MediaContent;
			internal ConcreteRoleType UniqueId;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;

		}
	}public partial class AccessControlledObjectInterface: Interface
	{
		public static AccessControlledObjectInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal AccessControlledObjectInterface() : base(BaseDomain.Instance, new Guid("eb0ff756-3e3d-4cf9-8935-8802a73d2df2"))
        {
			this.SingularName = "AccessControlledObject";
			this.PluralName = "AccessControlledObjects";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var AccessControlledObjectDeniedPermission = new RelationType(BaseDomain.Instance, new Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"), new Guid("267053f0-43b4-4cc7-a0e2-103992b2d0c5"), new Guid("867765fa-49dc-462f-b430-3c0e264c5283"));
			AccessControlledObjectDeniedPermission.AssignedMultiplicity = Multiplicity.ManyToMany;
			AccessControlledObjectDeniedPermission.IsIndexed = true;

			AccessControlledObjectDeniedPermission.AssociationType.ObjectType = this;

			AccessControlledObjectDeniedPermission.RoleType.ObjectType = PermissionClass.Instance;;
			AccessControlledObjectDeniedPermission.RoleType.AssignedSingularName = "DeniedPermission";
			AccessControlledObjectDeniedPermission.RoleType.AssignedPluralName = "DeniedPermissions";
			this.Roles.DeniedPermission = AccessControlledObjectDeniedPermission.RoleType;

			var AccessControlledObjectSecurityToken = new RelationType(BaseDomain.Instance, new Guid("b816fccd-08e0-46e0-a49c-7213c3604416"), new Guid("1739db0d-fe6b-42e1-a6a5-286536ff4f56"), new Guid("9f722315-385a-42ab-b84e-83063b0e5b0d"));
			AccessControlledObjectSecurityToken.AssignedMultiplicity = Multiplicity.ManyToMany;
			AccessControlledObjectSecurityToken.IsIndexed = true;

			AccessControlledObjectSecurityToken.AssociationType.ObjectType = this;

			AccessControlledObjectSecurityToken.RoleType.ObjectType = SecurityTokenClass.Instance;;
			AccessControlledObjectSecurityToken.RoleType.AssignedSingularName = "SecurityToken";
			AccessControlledObjectSecurityToken.RoleType.AssignedPluralName = "SecurityTokens";
			this.Roles.SecurityToken = AccessControlledObjectSecurityToken.RoleType;


		}

		internal override void SetRelationTypes()
		{
			ProductFeatureApplicabilityRelationshipClass.Instance.ConcreteRoles.DeniedPermission = ProductFeatureApplicabilityRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductRequirementClass.Instance.ConcreteRoles.DeniedPermission = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RequestForProposalClass.Instance.ConcreteRoles.DeniedPermission = RequestForProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesInvoiceItemStatusClass.Instance.ConcreteRoles.DeniedPermission = SalesInvoiceItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			QuoteItemClass.Instance.ConcreteRoles.DeniedPermission = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.DeniedPermission = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PayGradeClass.Instance.ConcreteRoles.DeniedPermission = PayGradeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DiscountAdjustmentClass.Instance.ConcreteRoles.DeniedPermission = DiscountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PositionClass.Instance.ConcreteRoles.DeniedPermission = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			LetterCorrespondenceClass.Instance.ConcreteRoles.DeniedPermission = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseOrderClass.Instance.ConcreteRoles.DeniedPermission = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			GlBudgetAllocationClass.Instance.ConcreteRoles.DeniedPermission = GlBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RateTypeClass.Instance.ConcreteRoles.DeniedPermission = RateTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BrandClass.Instance.ConcreteRoles.DeniedPermission = BrandClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SupplierOfferingClass.Instance.ConcreteRoles.DeniedPermission = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesAccountingTransactionClass.Instance.ConcreteRoles.DeniedPermission = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VehicleClass.Instance.ConcreteRoles.DeniedPermission = VehicleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AccountingTransactionNumberClass.Instance.ConcreteRoles.DeniedPermission = AccountingTransactionNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortPartyAssignmentClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortPartyAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ContactMechanismPurposeClass.Instance.ConcreteRoles.DeniedPermission = ContactMechanismPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TaxDocumentClass.Instance.ConcreteRoles.DeniedPermission = TaxDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TrainingClass.Instance.ConcreteRoles.DeniedPermission = TrainingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseAgreementClass.Instance.ConcreteRoles.DeniedPermission = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BasePriceClass.Instance.ConcreteRoles.DeniedPermission = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			JournalEntryClass.Instance.ConcreteRoles.DeniedPermission = JournalEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SubAgreementClass.Instance.ConcreteRoles.DeniedPermission = SubAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SkillClass.Instance.ConcreteRoles.DeniedPermission = SkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EmploymentTerminationClass.Instance.ConcreteRoles.DeniedPermission = EmploymentTerminationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			FinancialAccountAdjustmentClass.Instance.ConcreteRoles.DeniedPermission = FinancialAccountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OperatingConditionClass.Instance.ConcreteRoles.DeniedPermission = OperatingConditionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TermTypeClass.Instance.ConcreteRoles.DeniedPermission = TermTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			LegalTermClass.Instance.ConcreteRoles.DeniedPermission = LegalTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EngineeringBomClass.Instance.ConcreteRoles.DeniedPermission = EngineeringBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseInvoiceItemTypeClass.Instance.ConcreteRoles.DeniedPermission = PurchaseInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			IncentiveClass.Instance.ConcreteRoles.DeniedPermission = IncentiveClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseReturnStatusClass.Instance.ConcreteRoles.DeniedPermission = PurchaseReturnStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = PartyRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PositionTypeRateClass.Instance.ConcreteRoles.DeniedPermission = PositionTypeRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RatingTypeClass.Instance.ConcreteRoles.DeniedPermission = RatingTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseInvoiceTypeClass.Instance.ConcreteRoles.DeniedPermission = PurchaseInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			GeneralLedgerAccountClass.Instance.ConcreteRoles.DeniedPermission = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.DeniedPermission = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PersonalTitleClass.Instance.ConcreteRoles.DeniedPermission = PersonalTitleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.DeniedPermission = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TimeFrequencyClass.Instance.ConcreteRoles.DeniedPermission = TimeFrequencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.DeniedPermission = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PackagingContentClass.Instance.ConcreteRoles.DeniedPermission = PackagingContentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartySkillClass.Instance.ConcreteRoles.DeniedPermission = PartySkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SerializedInventoryItemStatusClass.Instance.ConcreteRoles.DeniedPermission = SerializedInventoryItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			FaxCommunicationClass.Instance.ConcreteRoles.DeniedPermission = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseInvoiceItemClass.Instance.ConcreteRoles.DeniedPermission = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductDrawingClass.Instance.ConcreteRoles.DeniedPermission = ProductDrawingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PayHistoryClass.Instance.ConcreteRoles.DeniedPermission = PayHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ShipmentValueClass.Instance.ConcreteRoles.DeniedPermission = ShipmentValueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoles.DeniedPermission = InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BankAccountClass.Instance.ConcreteRoles.DeniedPermission = BankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ServiceEntryHeaderClass.Instance.ConcreteRoles.DeniedPermission = ServiceEntryHeaderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartRevisionClass.Instance.ConcreteRoles.DeniedPermission = PartRevisionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductConfigurationClass.Instance.ConcreteRoles.DeniedPermission = ProductConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OwnCreditCardClass.Instance.ConcreteRoles.DeniedPermission = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DimensionClass.Instance.ConcreteRoles.DeniedPermission = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesInvoiceItemTypeClass.Instance.ConcreteRoles.DeniedPermission = SalesInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ModelClass.Instance.ConcreteRoles.DeniedPermission = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PickListClass.Instance.ConcreteRoles.DeniedPermission = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			StoreRevenueClass.Instance.ConcreteRoles.DeniedPermission = StoreRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AgreementExhibitClass.Instance.ConcreteRoles.DeniedPermission = AgreementExhibitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = ProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesRepRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = SalesRepRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EstimatedLaborCostClass.Instance.ConcreteRoles.DeniedPermission = EstimatedLaborCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CostCenterClass.Instance.ConcreteRoles.DeniedPermission = CostCenterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SupplierRelationshipClass.Instance.ConcreteRoles.DeniedPermission = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SkillRatingClass.Instance.ConcreteRoles.DeniedPermission = SkillRatingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BuildingClass.Instance.ConcreteRoles.DeniedPermission = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseShipmentClass.Instance.ConcreteRoles.DeniedPermission = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			UnitOfMeasureConversionClass.Instance.ConcreteRoles.DeniedPermission = UnitOfMeasureConversionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VatRateUsageClass.Instance.ConcreteRoles.DeniedPermission = VatRateUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProjectClass.Instance.ConcreteRoles.DeniedPermission = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PaymentBudgetAllocationClass.Instance.ConcreteRoles.DeniedPermission = PaymentBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			HobbyClass.Instance.ConcreteRoles.DeniedPermission = HobbyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = ProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrderRequirementCommitmentClass.Instance.ConcreteRoles.DeniedPermission = OrderRequirementCommitmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrganisationRollUpClass.Instance.ConcreteRoles.DeniedPermission = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AccountingTransactionTypeClass.Instance.ConcreteRoles.DeniedPermission = AccountingTransactionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RevenueValueBreakClass.Instance.ConcreteRoles.DeniedPermission = RevenueValueBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ActivityClass.Instance.ConcreteRoles.DeniedPermission = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortAssignmentClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.DeniedPermission = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesOrderStatusClass.Instance.ConcreteRoles.DeniedPermission = SalesOrderStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BillingAccountClass.Instance.ConcreteRoles.DeniedPermission = BillingAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesChannelRevenueClass.Instance.ConcreteRoles.DeniedPermission = SalesChannelRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AutomatedAgentClass.Instance.ConcreteRoles.DeniedPermission = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesChannelRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = SalesChannelRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProposalClass.Instance.ConcreteRoles.DeniedPermission = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			FinishedGoodClass.Instance.ConcreteRoles.DeniedPermission = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PerformanceSpecificationClass.Instance.ConcreteRoles.DeniedPermission = PerformanceSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductionRunClass.Instance.ConcreteRoles.DeniedPermission = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrdinalClass.Instance.ConcreteRoles.DeniedPermission = OrdinalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CitizenshipClass.Instance.ConcreteRoles.DeniedPermission = CitizenshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyProductRevenueClass.Instance.ConcreteRoles.DeniedPermission = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ShipmentMethodClass.Instance.ConcreteRoles.DeniedPermission = ShipmentMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrganisationClass.Instance.ConcreteRoles.DeniedPermission = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ResponsibilityClass.Instance.ConcreteRoles.DeniedPermission = ResponsibilityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VatReturnBoxTypeClass.Instance.ConcreteRoles.DeniedPermission = VatReturnBoxTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DebitCreditConstantClass.Instance.ConcreteRoles.DeniedPermission = DebitCreditConstantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VatCalculationMethodClass.Instance.ConcreteRoles.DeniedPermission = VatCalculationMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InvoiceSequenceClass.Instance.ConcreteRoles.DeniedPermission = InvoiceSequenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CustomerRelationshipClass.Instance.ConcreteRoles.DeniedPermission = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.DeniedPermission = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyFixedAssetAssignmentClass.Instance.ConcreteRoles.DeniedPermission = PartyFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DunningTypeClass.Instance.ConcreteRoles.DeniedPermission = DunningTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CapitalBudgetClass.Instance.ConcreteRoles.DeniedPermission = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AccountAdjustmentClass.Instance.ConcreteRoles.DeniedPermission = AccountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PositionStatusClass.Instance.ConcreteRoles.DeniedPermission = PositionStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			MarketingPackageClass.Instance.ConcreteRoles.DeniedPermission = MarketingPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ItemIssuanceClass.Instance.ConcreteRoles.DeniedPermission = ItemIssuanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ShipmentPackageClass.Instance.ConcreteRoles.DeniedPermission = ShipmentPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SizeClass.Instance.ConcreteRoles.DeniedPermission = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PerformanceNoteClass.Instance.ConcreteRoles.DeniedPermission = PerformanceNoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DeliverableTurnoverClass.Instance.ConcreteRoles.DeniedPermission = DeliverableTurnoverClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ShipmentReceiptClass.Instance.ConcreteRoles.DeniedPermission = ShipmentReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RequirementCommunicationClass.Instance.ConcreteRoles.DeniedPermission = RequirementCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			GeneralLedgerAccountGroupClass.Instance.ConcreteRoles.DeniedPermission = GeneralLedgerAccountGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SerializedInventoryItemClass.Instance.ConcreteRoles.DeniedPermission = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ItemVarianceAccountingTransactionClass.Instance.ConcreteRoles.DeniedPermission = ItemVarianceAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RespondingPartyClass.Instance.ConcreteRoles.DeniedPermission = RespondingPartyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BudgetStatusClass.Instance.ConcreteRoles.DeniedPermission = BudgetStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BarrelClass.Instance.ConcreteRoles.DeniedPermission = BarrelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PositionTypeClass.Instance.ConcreteRoles.DeniedPermission = PositionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductPurchasePriceClass.Instance.ConcreteRoles.DeniedPermission = ProductPurchasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CarrierClass.Instance.ConcreteRoles.DeniedPermission = CarrierClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ResumeClass.Instance.ConcreteRoles.DeniedPermission = ResumeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WebAddressClass.Instance.ConcreteRoles.DeniedPermission = WebAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProjectRequirementClass.Instance.ConcreteRoles.DeniedPermission = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DepositClass.Instance.ConcreteRoles.DeniedPermission = DepositClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			LegalFormClass.Instance.ConcreteRoles.DeniedPermission = LegalFormClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CostOfGoodsSoldMethodClass.Instance.ConcreteRoles.DeniedPermission = CostOfGoodsSoldMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			StatementOfWorkClass.Instance.ConcreteRoles.DeniedPermission = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SkillLevelClass.Instance.ConcreteRoles.DeniedPermission = SkillLevelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PickListStatusClass.Instance.ConcreteRoles.DeniedPermission = PickListStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TaxDueClass.Instance.ConcreteRoles.DeniedPermission = TaxDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OneTimeChargeClass.Instance.ConcreteRoles.DeniedPermission = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			NoteClass.Instance.ConcreteRoles.DeniedPermission = NoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartBillOfMaterialSubstituteClass.Instance.ConcreteRoles.DeniedPermission = PartBillOfMaterialSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ReceiptClass.Instance.ConcreteRoles.DeniedPermission = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RequirementBudgetAllocationClass.Instance.ConcreteRoles.DeniedPermission = RequirementBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrganisationGlAccountClass.Instance.ConcreteRoles.DeniedPermission = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			MaintenanceClass.Instance.ConcreteRoles.DeniedPermission = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.DeniedPermission = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CreditLineClass.Instance.ConcreteRoles.DeniedPermission = CreditLineClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BillOfLadingClass.Instance.ConcreteRoles.DeniedPermission = BillOfLadingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			UnitOfMeasureClass.Instance.ConcreteRoles.DeniedPermission = UnitOfMeasureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ServiceConfigurationClass.Instance.ConcreteRoles.DeniedPermission = ServiceConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			NeededSkillClass.Instance.ConcreteRoles.DeniedPermission = NeededSkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RoomClass.Instance.ConcreteRoles.DeniedPermission = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PlantClass.Instance.ConcreteRoles.DeniedPermission = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesInvoiceClass.Instance.ConcreteRoles.DeniedPermission = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			StandardServiceOrderItemClass.Instance.ConcreteRoles.DeniedPermission = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseInvoiceStatusClass.Instance.ConcreteRoles.DeniedPermission = PurchaseInvoiceStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RegionClass.Instance.ConcreteRoles.DeniedPermission = RegionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesTerritoryClass.Instance.ConcreteRoles.DeniedPermission = SalesTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TimeEntryClass.Instance.ConcreteRoles.DeniedPermission = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DepreciationMethodClass.Instance.ConcreteRoles.DeniedPermission = DepreciationMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AssetAssignmentStatusClass.Instance.ConcreteRoles.DeniedPermission = AssetAssignmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			StoreRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = StoreRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PersonTrainingClass.Instance.ConcreteRoles.DeniedPermission = PersonTrainingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DeductionTypeClass.Instance.ConcreteRoles.DeniedPermission = DeductionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.DeniedPermission = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PackagingSlipClass.Instance.ConcreteRoles.DeniedPermission = PackagingSlipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrganisationGlAccountBalanceClass.Instance.ConcreteRoles.DeniedPermission = OrganisationGlAccountBalanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ManufacturingBomClass.Instance.ConcreteRoles.DeniedPermission = ManufacturingBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DeliverableClass.Instance.ConcreteRoles.DeniedPermission = DeliverableClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EmploymentApplicationClass.Instance.ConcreteRoles.DeniedPermission = EmploymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VatRegimeClass.Instance.ConcreteRoles.DeniedPermission = VatRegimeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PositionFulfillmentClass.Instance.ConcreteRoles.DeniedPermission = PositionFulfillmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EmploymentClass.Instance.ConcreteRoles.DeniedPermission = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AccountingPeriodClass.Instance.ConcreteRoles.DeniedPermission = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EngagementRateClass.Instance.ConcreteRoles.DeniedPermission = EngagementRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TelecommunicationsNumberClass.Instance.ConcreteRoles.DeniedPermission = TelecommunicationsNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesRepRelationshipClass.Instance.ConcreteRoles.DeniedPermission = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductCategoryRevenueClass.Instance.ConcreteRoles.DeniedPermission = ProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ChartOfAccountsClass.Instance.ConcreteRoles.DeniedPermission = ChartOfAccountsClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyRevenueClass.Instance.ConcreteRoles.DeniedPermission = PartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			MarketingMaterialClass.Instance.ConcreteRoles.DeniedPermission = MarketingMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseInvoiceItemStatusClass.Instance.ConcreteRoles.DeniedPermission = PurchaseInvoiceItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InvoiceVatRateItemClass.Instance.ConcreteRoles.DeniedPermission = InvoiceVatRateItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalaryStepClass.Instance.ConcreteRoles.DeniedPermission = SalaryStepClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DropShipmentStatusClass.Instance.ConcreteRoles.DeniedPermission = DropShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PaymentApplicationClass.Instance.ConcreteRoles.DeniedPermission = PaymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			NonSerializedInventoryItemStatusClass.Instance.ConcreteRoles.DeniedPermission = NonSerializedInventoryItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SurchargeAdjustmentClass.Instance.ConcreteRoles.DeniedPermission = SurchargeAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DepreciationClass.Instance.ConcreteRoles.DeniedPermission = DepreciationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TerritoryClass.Instance.ConcreteRoles.DeniedPermission = TerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesOrderClass.Instance.ConcreteRoles.DeniedPermission = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WarehouseClass.Instance.ConcreteRoles.DeniedPermission = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AgreementPricingProgramClass.Instance.ConcreteRoles.DeniedPermission = AgreementPricingProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesRepRevenueClass.Instance.ConcreteRoles.DeniedPermission = SalesRepRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EmploymentApplicationSourceClass.Instance.ConcreteRoles.DeniedPermission = EmploymentApplicationSourceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EngagementClass.Instance.ConcreteRoles.DeniedPermission = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InventoryItemKindClass.Instance.ConcreteRoles.DeniedPermission = InventoryItemKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.DeniedPermission = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesRepPartyRevenueClass.Instance.ConcreteRoles.DeniedPermission = SalesRepPartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			JournalTypeClass.Instance.ConcreteRoles.DeniedPermission = JournalTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseOrderItemStatusClass.Instance.ConcreteRoles.DeniedPermission = PurchaseOrderItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AddendumClass.Instance.ConcreteRoles.DeniedPermission = AddendumClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			FloorClass.Instance.ConcreteRoles.DeniedPermission = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortTypeClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesInvoiceStatusClass.Instance.ConcreteRoles.DeniedPermission = SalesInvoiceStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesAgreementClass.Instance.ConcreteRoles.DeniedPermission = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.DeniedPermission = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CustomerReturnClass.Instance.ConcreteRoles.DeniedPermission = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyPackageRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = PartyPackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrderKindClass.Instance.ConcreteRoles.DeniedPermission = OrderKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AmortizationClass.Instance.ConcreteRoles.DeniedPermission = AmortizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PickListItemClass.Instance.ConcreteRoles.DeniedPermission = PickListItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesOrderItemClass.Instance.ConcreteRoles.DeniedPermission = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesInvoiceTypeClass.Instance.ConcreteRoles.DeniedPermission = SalesInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortGoodStandardClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortGoodStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PassportClass.Instance.ConcreteRoles.DeniedPermission = PassportClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AmountDueClass.Instance.ConcreteRoles.DeniedPermission = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortTypeKindClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortTypeKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrderTermClass.Instance.ConcreteRoles.DeniedPermission = OrderTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CreditCardCompanyClass.Instance.ConcreteRoles.DeniedPermission = CreditCardCompanyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RequestForQuoteClass.Instance.ConcreteRoles.DeniedPermission = RequestForQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseShipmentStatusClass.Instance.ConcreteRoles.DeniedPermission = PurchaseShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CashClass.Instance.ConcreteRoles.DeniedPermission = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PerformanceReviewClass.Instance.ConcreteRoles.DeniedPermission = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InvestmentAccountClass.Instance.ConcreteRoles.DeniedPermission = InvestmentAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ColourClass.Instance.ConcreteRoles.DeniedPermission = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PackageRevenueClass.Instance.ConcreteRoles.DeniedPermission = PackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BenefitClass.Instance.ConcreteRoles.DeniedPermission = BenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EngineeringDocumentClass.Instance.ConcreteRoles.DeniedPermission = EngineeringDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VatReturnBoxClass.Instance.ConcreteRoles.DeniedPermission = VatReturnBoxClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CommunicationEventPurposeClass.Instance.ConcreteRoles.DeniedPermission = CommunicationEventPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ShipmentRouteSegmentClass.Instance.ConcreteRoles.DeniedPermission = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortPurposeClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VarianceReasonClass.Instance.ConcreteRoles.DeniedPermission = VarianceReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PhaseClass.Instance.ConcreteRoles.DeniedPermission = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortStatusClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalutationClass.Instance.ConcreteRoles.DeniedPermission = SalutationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseOrderStatusClass.Instance.ConcreteRoles.DeniedPermission = PurchaseOrderStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PayrollPreferenceClass.Instance.ConcreteRoles.DeniedPermission = PayrollPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CustomerShipmentClass.Instance.ConcreteRoles.DeniedPermission = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InternalOrganisationRevenueClass.Instance.ConcreteRoles.DeniedPermission = InternalOrganisationRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PackageClass.Instance.ConcreteRoles.DeniedPermission = PackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			HazardousMaterialsDocumentClass.Instance.ConcreteRoles.DeniedPermission = HazardousMaterialsDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EmailCommunicationClass.Instance.ConcreteRoles.DeniedPermission = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CreditCardClass.Instance.ConcreteRoles.DeniedPermission = CreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.DeniedPermission = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrganisationContactKindClass.Instance.ConcreteRoles.DeniedPermission = OrganisationContactKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CustomerReturnStatusClass.Instance.ConcreteRoles.DeniedPermission = CustomerReturnStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PerformanceReviewItemClass.Instance.ConcreteRoles.DeniedPermission = PerformanceReviewItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			UtilizationChargeClass.Instance.ConcreteRoles.DeniedPermission = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyPackageRevenueClass.Instance.ConcreteRoles.DeniedPermission = PartyPackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyRelationshipStatusClass.Instance.ConcreteRoles.DeniedPermission = PartyRelationshipStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ServiceTerritoryClass.Instance.ConcreteRoles.DeniedPermission = ServiceTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DeliverableBasedServiceClass.Instance.ConcreteRoles.DeniedPermission = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductModelClass.Instance.ConcreteRoles.DeniedPermission = ProductModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ShelfClass.Instance.ConcreteRoles.DeniedPermission = ShelfClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RawMaterialClass.Instance.ConcreteRoles.DeniedPermission = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EstimatedOtherCostClass.Instance.ConcreteRoles.DeniedPermission = EstimatedOtherCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BudgetRevisionClass.Instance.ConcreteRoles.DeniedPermission = BudgetRevisionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortFixedAssetStandardClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortFixedAssetStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PostalCodeClass.Instance.ConcreteRoles.DeniedPermission = PostalCodeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProfessionalAssignmentClass.Instance.ConcreteRoles.DeniedPermission = ProfessionalAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PackageRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = PackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			JournalEntryDetailClass.Instance.ConcreteRoles.DeniedPermission = JournalEntryDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TestingRequirementClass.Instance.ConcreteRoles.DeniedPermission = TestingRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CaseClass.Instance.ConcreteRoles.DeniedPermission = CaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CapitalizationClass.Instance.ConcreteRoles.DeniedPermission = CapitalizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseReturnClass.Instance.ConcreteRoles.DeniedPermission = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortPartStandardClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortPartStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SurchargeComponentClass.Instance.ConcreteRoles.DeniedPermission = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BankClass.Instance.ConcreteRoles.DeniedPermission = BankClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductRevenueClass.Instance.ConcreteRoles.DeniedPermission = ProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.DeniedPermission = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrderValueClass.Instance.ConcreteRoles.DeniedPermission = OrderValueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VatTariffClass.Instance.ConcreteRoles.DeniedPermission = VatTariffClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ObligationClass.Instance.ConcreteRoles.DeniedPermission = ObligationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VatRateClass.Instance.ConcreteRoles.DeniedPermission = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.DeniedPermission = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RecurringChargeClass.Instance.ConcreteRoles.DeniedPermission = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			FinancialTermClass.Instance.ConcreteRoles.DeniedPermission = FinancialTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RequirementStatusClass.Instance.ConcreteRoles.DeniedPermission = RequirementStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InvoiceTermClass.Instance.ConcreteRoles.DeniedPermission = InvoiceTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DropShipmentClass.Instance.ConcreteRoles.DeniedPermission = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.DeniedPermission = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrderQuantityBreakClass.Instance.ConcreteRoles.DeniedPermission = OrderQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ClientRelationshipClass.Instance.ConcreteRoles.DeniedPermission = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.DeniedPermission = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortAssignmentRateClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortAssignmentRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EuSalesListTypeClass.Instance.ConcreteRoles.DeniedPermission = EuSalesListTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProvinceClass.Instance.ConcreteRoles.DeniedPermission = ProvinceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InventoryItemVarianceClass.Instance.ConcreteRoles.DeniedPermission = InventoryItemVarianceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PositionResponsibilityClass.Instance.ConcreteRoles.DeniedPermission = PositionResponsibilityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DeliverableTypeClass.Instance.ConcreteRoles.DeniedPermission = DeliverableTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SubAssemblyClass.Instance.ConcreteRoles.DeniedPermission = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkFlowClass.Instance.ConcreteRoles.DeniedPermission = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TaskClass.Instance.ConcreteRoles.DeniedPermission = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ResourceRequirementClass.Instance.ConcreteRoles.DeniedPermission = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BudgetItemClass.Instance.ConcreteRoles.DeniedPermission = BudgetItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InternalRequirementClass.Instance.ConcreteRoles.DeniedPermission = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PositionReportingStructureClass.Instance.ConcreteRoles.DeniedPermission = PositionReportingStructureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartnershipClass.Instance.ConcreteRoles.DeniedPermission = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OperatingBudgetClass.Instance.ConcreteRoles.DeniedPermission = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BinClass.Instance.ConcreteRoles.DeniedPermission = BinClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ManufacturingConfigurationClass.Instance.ConcreteRoles.DeniedPermission = ManufacturingConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.DeniedPermission = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesRepCommissionClass.Instance.ConcreteRoles.DeniedPermission = SalesRepCommissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DeductionClass.Instance.ConcreteRoles.DeniedPermission = DeductionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CaseStatusClass.Instance.ConcreteRoles.DeniedPermission = CaseStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DiscountComponentClass.Instance.ConcreteRoles.DeniedPermission = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OrganisationUnitClass.Instance.ConcreteRoles.DeniedPermission = OrganisationUnitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartSubstituteClass.Instance.ConcreteRoles.DeniedPermission = PartSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			GoodOrderItemClass.Instance.ConcreteRoles.DeniedPermission = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VolumeUsageClass.Instance.ConcreteRoles.DeniedPermission = VolumeUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductQuoteClass.Instance.ConcreteRoles.DeniedPermission = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TransferStatusClass.Instance.ConcreteRoles.DeniedPermission = TransferStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			StateClass.Instance.ConcreteRoles.DeniedPermission = StateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			JournalEntryNumberClass.Instance.ConcreteRoles.DeniedPermission = JournalEntryNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ToleranceClass.Instance.ConcreteRoles.DeniedPermission = ToleranceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EngineeringChangeClass.Instance.ConcreteRoles.DeniedPermission = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VatRatePurchaseKindClass.Instance.ConcreteRoles.DeniedPermission = VatRatePurchaseKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EmailTemplateClass.Instance.ConcreteRoles.DeniedPermission = EmailTemplateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ThresholdClass.Instance.ConcreteRoles.DeniedPermission = ThresholdClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EmploymentApplicationStatusClass.Instance.ConcreteRoles.DeniedPermission = EmploymentApplicationStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			QualificationClass.Instance.ConcreteRoles.DeniedPermission = QualificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			InternalOrganisationClass.Instance.ConcreteRoles.DeniedPermission = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OwnBankAccountClass.Instance.ConcreteRoles.DeniedPermission = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyContactMechanismClass.Instance.ConcreteRoles.DeniedPermission = PartyContactMechanismClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PriorityClass.Instance.ConcreteRoles.DeniedPermission = PriorityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CostCenterSplitMethodClass.Instance.ConcreteRoles.DeniedPermission = CostCenterSplitMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EstimatedMaterialCostClass.Instance.ConcreteRoles.DeniedPermission = EstimatedMaterialCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			QuoteTermClass.Instance.ConcreteRoles.DeniedPermission = QuoteTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TransferClass.Instance.ConcreteRoles.DeniedPermission = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RevenueQuantityBreakClass.Instance.ConcreteRoles.DeniedPermission = RevenueQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			GeneralLedgerAccountTypeClass.Instance.ConcreteRoles.DeniedPermission = GeneralLedgerAccountTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProspectRelationshipClass.Instance.ConcreteRoles.DeniedPermission = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.DeniedPermission = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BudgetReviewClass.Instance.ConcreteRoles.DeniedPermission = BudgetReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EngineeringChangeStatusClass.Instance.ConcreteRoles.DeniedPermission = EngineeringChangeStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductQualityClass.Instance.ConcreteRoles.DeniedPermission = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DisbursementClass.Instance.ConcreteRoles.DeniedPermission = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ResearchClass.Instance.ConcreteRoles.DeniedPermission = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			JournalClass.Instance.ConcreteRoles.DeniedPermission = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ShipmentItemClass.Instance.ConcreteRoles.DeniedPermission = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.DeniedPermission = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.DeniedPermission = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			NewsItemClass.Instance.ConcreteRoles.DeniedPermission = NewsItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyBenefitClass.Instance.ConcreteRoles.DeniedPermission = PartyBenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PostalAddressClass.Instance.ConcreteRoles.DeniedPermission = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PackageQuantityBreakClass.Instance.ConcreteRoles.DeniedPermission = PackageQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SubContractorRelationshipClass.Instance.ConcreteRoles.DeniedPermission = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ClientAgreementClass.Instance.ConcreteRoles.DeniedPermission = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			StoreClass.Instance.ConcreteRoles.DeniedPermission = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			LotClass.Instance.ConcreteRoles.DeniedPermission = LotClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortSkillStandardClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortSkillStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			IndustryClassificationClass.Instance.ConcreteRoles.DeniedPermission = IndustryClassificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.DeniedPermission = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EquipmentClass.Instance.ConcreteRoles.DeniedPermission = EquipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RequestItemClass.Instance.ConcreteRoles.DeniedPermission = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesChannelClass.Instance.ConcreteRoles.DeniedPermission = SalesChannelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CustomerRequirementClass.Instance.ConcreteRoles.DeniedPermission = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PropertyClass.Instance.ConcreteRoles.DeniedPermission = PropertyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ConstraintSpecificationClass.Instance.ConcreteRoles.DeniedPermission = ConstraintSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DesiredProductFeatureClass.Instance.ConcreteRoles.DeniedPermission = DesiredProductFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesOrderItemStatusClass.Instance.ConcreteRoles.DeniedPermission = SalesOrderItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ActivityUsageClass.Instance.ConcreteRoles.DeniedPermission = ActivityUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProgramClass.Instance.ConcreteRoles.DeniedPermission = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CommunicationEventStatusClass.Instance.ConcreteRoles.DeniedPermission = CommunicationEventStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AgreementSectionClass.Instance.ConcreteRoles.DeniedPermission = AgreementSectionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			GoodClass.Instance.ConcreteRoles.DeniedPermission = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AccountingTransactionDetailClass.Instance.ConcreteRoles.DeniedPermission = AccountingTransactionDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CountyClass.Instance.ConcreteRoles.DeniedPermission = CountyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ShippingAndHandlingChargeClass.Instance.ConcreteRoles.DeniedPermission = ShippingAndHandlingChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PerformanceReviewItemTypeClass.Instance.ConcreteRoles.DeniedPermission = PerformanceReviewItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PostalBoundaryClass.Instance.ConcreteRoles.DeniedPermission = PostalBoundaryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductCategoryClass.Instance.ConcreteRoles.DeniedPermission = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RequestForInformationClass.Instance.ConcreteRoles.DeniedPermission = RequestForInformationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			VatFormClass.Instance.ConcreteRoles.DeniedPermission = VatFormClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BudgetRevisionImpactClass.Instance.ConcreteRoles.DeniedPermission = BudgetRevisionImpactClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TemplatePurposeClass.Instance.ConcreteRoles.DeniedPermission = TemplatePurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.DeniedPermission = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WithdrawalClass.Instance.ConcreteRoles.DeniedPermission = WithdrawalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DeploymentClass.Instance.ConcreteRoles.DeniedPermission = DeploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PayCheckClass.Instance.ConcreteRoles.DeniedPermission = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			MaritalStatusClass.Instance.ConcreteRoles.DeniedPermission = MaritalStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ManifestClass.Instance.ConcreteRoles.DeniedPermission = ManifestClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ExportDocumentClass.Instance.ConcreteRoles.DeniedPermission = ExportDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CustomerShipmentStatusClass.Instance.ConcreteRoles.DeniedPermission = CustomerShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ExpenseEntryClass.Instance.ConcreteRoles.DeniedPermission = ExpenseEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartSpecificationStatusClass.Instance.ConcreteRoles.DeniedPermission = PartSpecificationStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.DeniedPermission = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			GenderTypeClass.Instance.ConcreteRoles.DeniedPermission = GenderTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			OfficeClass.Instance.ConcreteRoles.DeniedPermission = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EmailAddressClass.Instance.ConcreteRoles.DeniedPermission = EmailAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortInventoryAssignmentClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortInventoryAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CityClass.Instance.ConcreteRoles.DeniedPermission = CityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			MaterialsUsageClass.Instance.ConcreteRoles.DeniedPermission = MaterialsUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EmploymentTerminationReasonClass.Instance.ConcreteRoles.DeniedPermission = EmploymentTerminationReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TimePeriodUsageClass.Instance.ConcreteRoles.DeniedPermission = TimePeriodUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkRequirementClass.Instance.ConcreteRoles.DeniedPermission = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			FeeClass.Instance.ConcreteRoles.DeniedPermission = FeeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.DeniedPermission = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ProductDeliverySkillRequirementClass.Instance.ConcreteRoles.DeniedPermission = ProductDeliverySkillRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesRepProductCategoryRevenueClass.Instance.ConcreteRoles.DeniedPermission = SalesRepProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			ServiceFeatureClass.Instance.ConcreteRoles.DeniedPermission = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PartyProductRevenueHistoryClass.Instance.ConcreteRoles.DeniedPermission = PartyProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			LocalisedTextClass.Instance.ConcreteRoles.DeniedPermission = LocalisedTextClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SingletonClass.Instance.ConcreteRoles.DeniedPermission = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			LocaleClass.Instance.ConcreteRoles.DeniedPermission = LocaleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			LanguageClass.Instance.ConcreteRoles.DeniedPermission = LanguageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			UserGroupClass.Instance.ConcreteRoles.DeniedPermission = UserGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PermissionClass.Instance.ConcreteRoles.DeniedPermission = PermissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			MediaTypeClass.Instance.ConcreteRoles.DeniedPermission = MediaTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RoleClass.Instance.ConcreteRoles.DeniedPermission = RoleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PrintQueueClass.Instance.ConcreteRoles.DeniedPermission = PrintQueueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CountryClass.Instance.ConcreteRoles.DeniedPermission = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			AccessControlClass.Instance.ConcreteRoles.DeniedPermission = AccessControlClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PersonClass.Instance.ConcreteRoles.DeniedPermission = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			MediaClass.Instance.ConcreteRoles.DeniedPermission = MediaClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CurrencyClass.Instance.ConcreteRoles.DeniedPermission = CurrencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 

			ProductFeatureApplicabilityRelationshipClass.Instance.ConcreteRoles.SecurityToken = ProductFeatureApplicabilityRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductRequirementClass.Instance.ConcreteRoles.SecurityToken = ProductRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RequestForProposalClass.Instance.ConcreteRoles.SecurityToken = RequestForProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesInvoiceItemStatusClass.Instance.ConcreteRoles.SecurityToken = SalesInvoiceItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			QuoteItemClass.Instance.ConcreteRoles.SecurityToken = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoles.SecurityToken = SalesRepPartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PayGradeClass.Instance.ConcreteRoles.SecurityToken = PayGradeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = PartyProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DiscountAdjustmentClass.Instance.ConcreteRoles.SecurityToken = DiscountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PositionClass.Instance.ConcreteRoles.SecurityToken = PositionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			LetterCorrespondenceClass.Instance.ConcreteRoles.SecurityToken = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseOrderClass.Instance.ConcreteRoles.SecurityToken = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			GlBudgetAllocationClass.Instance.ConcreteRoles.SecurityToken = GlBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RateTypeClass.Instance.ConcreteRoles.SecurityToken = RateTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BrandClass.Instance.ConcreteRoles.SecurityToken = BrandClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SupplierOfferingClass.Instance.ConcreteRoles.SecurityToken = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesAccountingTransactionClass.Instance.ConcreteRoles.SecurityToken = SalesAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VehicleClass.Instance.ConcreteRoles.SecurityToken = VehicleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AccountingTransactionNumberClass.Instance.ConcreteRoles.SecurityToken = AccountingTransactionNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortPartyAssignmentClass.Instance.ConcreteRoles.SecurityToken = WorkEffortPartyAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ContactMechanismPurposeClass.Instance.ConcreteRoles.SecurityToken = ContactMechanismPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TaxDocumentClass.Instance.ConcreteRoles.SecurityToken = TaxDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TrainingClass.Instance.ConcreteRoles.SecurityToken = TrainingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseAgreementClass.Instance.ConcreteRoles.SecurityToken = PurchaseAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BasePriceClass.Instance.ConcreteRoles.SecurityToken = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			JournalEntryClass.Instance.ConcreteRoles.SecurityToken = JournalEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SubAgreementClass.Instance.ConcreteRoles.SecurityToken = SubAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SkillClass.Instance.ConcreteRoles.SecurityToken = SkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EmploymentTerminationClass.Instance.ConcreteRoles.SecurityToken = EmploymentTerminationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			FinancialAccountAdjustmentClass.Instance.ConcreteRoles.SecurityToken = FinancialAccountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OperatingConditionClass.Instance.ConcreteRoles.SecurityToken = OperatingConditionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TermTypeClass.Instance.ConcreteRoles.SecurityToken = TermTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			LegalTermClass.Instance.ConcreteRoles.SecurityToken = LegalTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EngineeringBomClass.Instance.ConcreteRoles.SecurityToken = EngineeringBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseInvoiceItemTypeClass.Instance.ConcreteRoles.SecurityToken = PurchaseInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			IncentiveClass.Instance.ConcreteRoles.SecurityToken = IncentiveClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseReturnStatusClass.Instance.ConcreteRoles.SecurityToken = PurchaseReturnStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = PartyRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PositionTypeRateClass.Instance.ConcreteRoles.SecurityToken = PositionTypeRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RatingTypeClass.Instance.ConcreteRoles.SecurityToken = RatingTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseInvoiceTypeClass.Instance.ConcreteRoles.SecurityToken = PurchaseInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			GeneralLedgerAccountClass.Instance.ConcreteRoles.SecurityToken = GeneralLedgerAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ShippingAndHandlingComponentClass.Instance.ConcreteRoles.SecurityToken = ShippingAndHandlingComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PersonalTitleClass.Instance.ConcreteRoles.SecurityToken = PersonalTitleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ReceiptAccountingTransactionClass.Instance.ConcreteRoles.SecurityToken = ReceiptAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TimeFrequencyClass.Instance.ConcreteRoles.SecurityToken = TimeFrequencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SubContractorAgreementClass.Instance.ConcreteRoles.SecurityToken = SubContractorAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PackagingContentClass.Instance.ConcreteRoles.SecurityToken = PackagingContentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartySkillClass.Instance.ConcreteRoles.SecurityToken = PartySkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SerializedInventoryItemStatusClass.Instance.ConcreteRoles.SecurityToken = SerializedInventoryItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			FaxCommunicationClass.Instance.ConcreteRoles.SecurityToken = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseInvoiceItemClass.Instance.ConcreteRoles.SecurityToken = PurchaseInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductDrawingClass.Instance.ConcreteRoles.SecurityToken = ProductDrawingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PayHistoryClass.Instance.ConcreteRoles.SecurityToken = PayHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ShipmentValueClass.Instance.ConcreteRoles.SecurityToken = ShipmentValueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoles.SecurityToken = InternalOrganisationAccountingPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BankAccountClass.Instance.ConcreteRoles.SecurityToken = BankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ServiceEntryHeaderClass.Instance.ConcreteRoles.SecurityToken = ServiceEntryHeaderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartRevisionClass.Instance.ConcreteRoles.SecurityToken = PartRevisionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductConfigurationClass.Instance.ConcreteRoles.SecurityToken = ProductConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OwnCreditCardClass.Instance.ConcreteRoles.SecurityToken = OwnCreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DimensionClass.Instance.ConcreteRoles.SecurityToken = DimensionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesInvoiceItemTypeClass.Instance.ConcreteRoles.SecurityToken = SalesInvoiceItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ModelClass.Instance.ConcreteRoles.SecurityToken = ModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PickListClass.Instance.ConcreteRoles.SecurityToken = PickListClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			StoreRevenueClass.Instance.ConcreteRoles.SecurityToken = StoreRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AgreementExhibitClass.Instance.ConcreteRoles.SecurityToken = AgreementExhibitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductCategoryRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = ProductCategoryRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesRepRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = SalesRepRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EstimatedLaborCostClass.Instance.ConcreteRoles.SecurityToken = EstimatedLaborCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CostCenterClass.Instance.ConcreteRoles.SecurityToken = CostCenterClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SupplierRelationshipClass.Instance.ConcreteRoles.SecurityToken = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SkillRatingClass.Instance.ConcreteRoles.SecurityToken = SkillRatingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BuildingClass.Instance.ConcreteRoles.SecurityToken = BuildingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseShipmentClass.Instance.ConcreteRoles.SecurityToken = PurchaseShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			UnitOfMeasureConversionClass.Instance.ConcreteRoles.SecurityToken = UnitOfMeasureConversionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VatRateUsageClass.Instance.ConcreteRoles.SecurityToken = VatRateUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProjectClass.Instance.ConcreteRoles.SecurityToken = ProjectClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PaymentBudgetAllocationClass.Instance.ConcreteRoles.SecurityToken = PaymentBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			HobbyClass.Instance.ConcreteRoles.SecurityToken = HobbyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = ProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrderRequirementCommitmentClass.Instance.ConcreteRoles.SecurityToken = OrderRequirementCommitmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrganisationRollUpClass.Instance.ConcreteRoles.SecurityToken = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AccountingTransactionTypeClass.Instance.ConcreteRoles.SecurityToken = AccountingTransactionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RevenueValueBreakClass.Instance.ConcreteRoles.SecurityToken = RevenueValueBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ActivityClass.Instance.ConcreteRoles.SecurityToken = ActivityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortAssignmentClass.Instance.ConcreteRoles.SecurityToken = WorkEffortAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SoftwareFeatureClass.Instance.ConcreteRoles.SecurityToken = SoftwareFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesOrderStatusClass.Instance.ConcreteRoles.SecurityToken = SalesOrderStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BillingAccountClass.Instance.ConcreteRoles.SecurityToken = BillingAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesChannelRevenueClass.Instance.ConcreteRoles.SecurityToken = SalesChannelRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AutomatedAgentClass.Instance.ConcreteRoles.SecurityToken = AutomatedAgentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesChannelRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = SalesChannelRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProposalClass.Instance.ConcreteRoles.SecurityToken = ProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			FinishedGoodClass.Instance.ConcreteRoles.SecurityToken = FinishedGoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PerformanceSpecificationClass.Instance.ConcreteRoles.SecurityToken = PerformanceSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductionRunClass.Instance.ConcreteRoles.SecurityToken = ProductionRunClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrdinalClass.Instance.ConcreteRoles.SecurityToken = OrdinalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CitizenshipClass.Instance.ConcreteRoles.SecurityToken = CitizenshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyProductRevenueClass.Instance.ConcreteRoles.SecurityToken = PartyProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ShipmentMethodClass.Instance.ConcreteRoles.SecurityToken = ShipmentMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrganisationClass.Instance.ConcreteRoles.SecurityToken = OrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ResponsibilityClass.Instance.ConcreteRoles.SecurityToken = ResponsibilityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VatReturnBoxTypeClass.Instance.ConcreteRoles.SecurityToken = VatReturnBoxTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DebitCreditConstantClass.Instance.ConcreteRoles.SecurityToken = DebitCreditConstantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoles.SecurityToken = WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VatCalculationMethodClass.Instance.ConcreteRoles.SecurityToken = VatCalculationMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InvoiceSequenceClass.Instance.ConcreteRoles.SecurityToken = InvoiceSequenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CustomerRelationshipClass.Instance.ConcreteRoles.SecurityToken = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyProductCategoryRevenueClass.Instance.ConcreteRoles.SecurityToken = PartyProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyFixedAssetAssignmentClass.Instance.ConcreteRoles.SecurityToken = PartyFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DunningTypeClass.Instance.ConcreteRoles.SecurityToken = DunningTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CapitalBudgetClass.Instance.ConcreteRoles.SecurityToken = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AccountAdjustmentClass.Instance.ConcreteRoles.SecurityToken = AccountAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PositionStatusClass.Instance.ConcreteRoles.SecurityToken = PositionStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			MarketingPackageClass.Instance.ConcreteRoles.SecurityToken = MarketingPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ItemIssuanceClass.Instance.ConcreteRoles.SecurityToken = ItemIssuanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ShipmentPackageClass.Instance.ConcreteRoles.SecurityToken = ShipmentPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SizeClass.Instance.ConcreteRoles.SecurityToken = SizeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PerformanceNoteClass.Instance.ConcreteRoles.SecurityToken = PerformanceNoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DeliverableTurnoverClass.Instance.ConcreteRoles.SecurityToken = DeliverableTurnoverClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ShipmentReceiptClass.Instance.ConcreteRoles.SecurityToken = ShipmentReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RequirementCommunicationClass.Instance.ConcreteRoles.SecurityToken = RequirementCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			GeneralLedgerAccountGroupClass.Instance.ConcreteRoles.SecurityToken = GeneralLedgerAccountGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SerializedInventoryItemClass.Instance.ConcreteRoles.SecurityToken = SerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ItemVarianceAccountingTransactionClass.Instance.ConcreteRoles.SecurityToken = ItemVarianceAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RespondingPartyClass.Instance.ConcreteRoles.SecurityToken = RespondingPartyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BudgetStatusClass.Instance.ConcreteRoles.SecurityToken = BudgetStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BarrelClass.Instance.ConcreteRoles.SecurityToken = BarrelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PositionTypeClass.Instance.ConcreteRoles.SecurityToken = PositionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductPurchasePriceClass.Instance.ConcreteRoles.SecurityToken = ProductPurchasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CarrierClass.Instance.ConcreteRoles.SecurityToken = CarrierClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ResumeClass.Instance.ConcreteRoles.SecurityToken = ResumeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WebAddressClass.Instance.ConcreteRoles.SecurityToken = WebAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProjectRequirementClass.Instance.ConcreteRoles.SecurityToken = ProjectRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DepositClass.Instance.ConcreteRoles.SecurityToken = DepositClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			LegalFormClass.Instance.ConcreteRoles.SecurityToken = LegalFormClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CostOfGoodsSoldMethodClass.Instance.ConcreteRoles.SecurityToken = CostOfGoodsSoldMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			StatementOfWorkClass.Instance.ConcreteRoles.SecurityToken = StatementOfWorkClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SkillLevelClass.Instance.ConcreteRoles.SecurityToken = SkillLevelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PickListStatusClass.Instance.ConcreteRoles.SecurityToken = PickListStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TaxDueClass.Instance.ConcreteRoles.SecurityToken = TaxDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OneTimeChargeClass.Instance.ConcreteRoles.SecurityToken = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			NoteClass.Instance.ConcreteRoles.SecurityToken = NoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartBillOfMaterialSubstituteClass.Instance.ConcreteRoles.SecurityToken = PartBillOfMaterialSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ReceiptClass.Instance.ConcreteRoles.SecurityToken = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RequirementBudgetAllocationClass.Instance.ConcreteRoles.SecurityToken = RequirementBudgetAllocationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrganisationGlAccountClass.Instance.ConcreteRoles.SecurityToken = OrganisationGlAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			MaintenanceClass.Instance.ConcreteRoles.SecurityToken = MaintenanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			NonSerializedInventoryItemClass.Instance.ConcreteRoles.SecurityToken = NonSerializedInventoryItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CreditLineClass.Instance.ConcreteRoles.SecurityToken = CreditLineClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BillOfLadingClass.Instance.ConcreteRoles.SecurityToken = BillOfLadingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			UnitOfMeasureClass.Instance.ConcreteRoles.SecurityToken = UnitOfMeasureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ServiceConfigurationClass.Instance.ConcreteRoles.SecurityToken = ServiceConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			NeededSkillClass.Instance.ConcreteRoles.SecurityToken = NeededSkillClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RoomClass.Instance.ConcreteRoles.SecurityToken = RoomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PlantClass.Instance.ConcreteRoles.SecurityToken = PlantClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesInvoiceClass.Instance.ConcreteRoles.SecurityToken = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			StandardServiceOrderItemClass.Instance.ConcreteRoles.SecurityToken = StandardServiceOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseInvoiceStatusClass.Instance.ConcreteRoles.SecurityToken = PurchaseInvoiceStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RegionClass.Instance.ConcreteRoles.SecurityToken = RegionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesTerritoryClass.Instance.ConcreteRoles.SecurityToken = SalesTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TimeEntryClass.Instance.ConcreteRoles.SecurityToken = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DepreciationMethodClass.Instance.ConcreteRoles.SecurityToken = DepreciationMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AssetAssignmentStatusClass.Instance.ConcreteRoles.SecurityToken = AssetAssignmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			StoreRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = StoreRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PersonTrainingClass.Instance.ConcreteRoles.SecurityToken = PersonTrainingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DeductionTypeClass.Instance.ConcreteRoles.SecurityToken = DeductionTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DeliverableOrderItemClass.Instance.ConcreteRoles.SecurityToken = DeliverableOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PackagingSlipClass.Instance.ConcreteRoles.SecurityToken = PackagingSlipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrganisationGlAccountBalanceClass.Instance.ConcreteRoles.SecurityToken = OrganisationGlAccountBalanceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = InternalOrganisationRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ManufacturingBomClass.Instance.ConcreteRoles.SecurityToken = ManufacturingBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DeliverableClass.Instance.ConcreteRoles.SecurityToken = DeliverableClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EmploymentApplicationClass.Instance.ConcreteRoles.SecurityToken = EmploymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VatRegimeClass.Instance.ConcreteRoles.SecurityToken = VatRegimeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PositionFulfillmentClass.Instance.ConcreteRoles.SecurityToken = PositionFulfillmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EmploymentClass.Instance.ConcreteRoles.SecurityToken = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AccountingPeriodClass.Instance.ConcreteRoles.SecurityToken = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EngagementRateClass.Instance.ConcreteRoles.SecurityToken = EngagementRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TelecommunicationsNumberClass.Instance.ConcreteRoles.SecurityToken = TelecommunicationsNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesRepRelationshipClass.Instance.ConcreteRoles.SecurityToken = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductCategoryRevenueClass.Instance.ConcreteRoles.SecurityToken = ProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ChartOfAccountsClass.Instance.ConcreteRoles.SecurityToken = ChartOfAccountsClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyRevenueClass.Instance.ConcreteRoles.SecurityToken = PartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			MarketingMaterialClass.Instance.ConcreteRoles.SecurityToken = MarketingMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseInvoiceItemStatusClass.Instance.ConcreteRoles.SecurityToken = PurchaseInvoiceItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InvoiceVatRateItemClass.Instance.ConcreteRoles.SecurityToken = InvoiceVatRateItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalaryStepClass.Instance.ConcreteRoles.SecurityToken = SalaryStepClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DropShipmentStatusClass.Instance.ConcreteRoles.SecurityToken = DropShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PaymentApplicationClass.Instance.ConcreteRoles.SecurityToken = PaymentApplicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			NonSerializedInventoryItemStatusClass.Instance.ConcreteRoles.SecurityToken = NonSerializedInventoryItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SurchargeAdjustmentClass.Instance.ConcreteRoles.SecurityToken = SurchargeAdjustmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DepreciationClass.Instance.ConcreteRoles.SecurityToken = DepreciationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TerritoryClass.Instance.ConcreteRoles.SecurityToken = TerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesOrderClass.Instance.ConcreteRoles.SecurityToken = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WarehouseClass.Instance.ConcreteRoles.SecurityToken = WarehouseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AgreementPricingProgramClass.Instance.ConcreteRoles.SecurityToken = AgreementPricingProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesRepRevenueClass.Instance.ConcreteRoles.SecurityToken = SalesRepRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EmploymentApplicationSourceClass.Instance.ConcreteRoles.SecurityToken = EmploymentApplicationSourceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EngagementClass.Instance.ConcreteRoles.SecurityToken = EngagementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InventoryItemKindClass.Instance.ConcreteRoles.SecurityToken = InventoryItemKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CustomEngagementItemClass.Instance.ConcreteRoles.SecurityToken = CustomEngagementItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesRepPartyRevenueClass.Instance.ConcreteRoles.SecurityToken = SalesRepPartyRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			JournalTypeClass.Instance.ConcreteRoles.SecurityToken = JournalTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseOrderItemStatusClass.Instance.ConcreteRoles.SecurityToken = PurchaseOrderItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AddendumClass.Instance.ConcreteRoles.SecurityToken = AddendumClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			FloorClass.Instance.ConcreteRoles.SecurityToken = FloorClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortTypeClass.Instance.ConcreteRoles.SecurityToken = WorkEffortTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesInvoiceStatusClass.Instance.ConcreteRoles.SecurityToken = SalesInvoiceStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesAgreementClass.Instance.ConcreteRoles.SecurityToken = SalesAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.SecurityToken = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CustomerReturnClass.Instance.ConcreteRoles.SecurityToken = CustomerReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyPackageRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = PartyPackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrderKindClass.Instance.ConcreteRoles.SecurityToken = OrderKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AmortizationClass.Instance.ConcreteRoles.SecurityToken = AmortizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PickListItemClass.Instance.ConcreteRoles.SecurityToken = PickListItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesOrderItemClass.Instance.ConcreteRoles.SecurityToken = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesInvoiceTypeClass.Instance.ConcreteRoles.SecurityToken = SalesInvoiceTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortGoodStandardClass.Instance.ConcreteRoles.SecurityToken = WorkEffortGoodStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PassportClass.Instance.ConcreteRoles.SecurityToken = PassportClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AmountDueClass.Instance.ConcreteRoles.SecurityToken = AmountDueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortTypeKindClass.Instance.ConcreteRoles.SecurityToken = WorkEffortTypeKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrderTermClass.Instance.ConcreteRoles.SecurityToken = OrderTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CreditCardCompanyClass.Instance.ConcreteRoles.SecurityToken = CreditCardCompanyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RequestForQuoteClass.Instance.ConcreteRoles.SecurityToken = RequestForQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseShipmentStatusClass.Instance.ConcreteRoles.SecurityToken = PurchaseShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CashClass.Instance.ConcreteRoles.SecurityToken = CashClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PerformanceReviewClass.Instance.ConcreteRoles.SecurityToken = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InvestmentAccountClass.Instance.ConcreteRoles.SecurityToken = InvestmentAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ColourClass.Instance.ConcreteRoles.SecurityToken = ColourClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PackageRevenueClass.Instance.ConcreteRoles.SecurityToken = PackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BenefitClass.Instance.ConcreteRoles.SecurityToken = BenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EngineeringDocumentClass.Instance.ConcreteRoles.SecurityToken = EngineeringDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VatReturnBoxClass.Instance.ConcreteRoles.SecurityToken = VatReturnBoxClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CommunicationEventPurposeClass.Instance.ConcreteRoles.SecurityToken = CommunicationEventPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ShipmentRouteSegmentClass.Instance.ConcreteRoles.SecurityToken = ShipmentRouteSegmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortPurposeClass.Instance.ConcreteRoles.SecurityToken = WorkEffortPurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VarianceReasonClass.Instance.ConcreteRoles.SecurityToken = VarianceReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PhaseClass.Instance.ConcreteRoles.SecurityToken = PhaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortStatusClass.Instance.ConcreteRoles.SecurityToken = WorkEffortStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalutationClass.Instance.ConcreteRoles.SecurityToken = SalutationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseOrderStatusClass.Instance.ConcreteRoles.SecurityToken = PurchaseOrderStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PayrollPreferenceClass.Instance.ConcreteRoles.SecurityToken = PayrollPreferenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CustomerShipmentClass.Instance.ConcreteRoles.SecurityToken = CustomerShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InternalOrganisationRevenueClass.Instance.ConcreteRoles.SecurityToken = InternalOrganisationRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PackageClass.Instance.ConcreteRoles.SecurityToken = PackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			HazardousMaterialsDocumentClass.Instance.ConcreteRoles.SecurityToken = HazardousMaterialsDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EmailCommunicationClass.Instance.ConcreteRoles.SecurityToken = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CreditCardClass.Instance.ConcreteRoles.SecurityToken = CreditCardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.SecurityToken = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrganisationContactKindClass.Instance.ConcreteRoles.SecurityToken = OrganisationContactKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CustomerReturnStatusClass.Instance.ConcreteRoles.SecurityToken = CustomerReturnStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PerformanceReviewItemClass.Instance.ConcreteRoles.SecurityToken = PerformanceReviewItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			UtilizationChargeClass.Instance.ConcreteRoles.SecurityToken = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyPackageRevenueClass.Instance.ConcreteRoles.SecurityToken = PartyPackageRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyRelationshipStatusClass.Instance.ConcreteRoles.SecurityToken = PartyRelationshipStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ServiceTerritoryClass.Instance.ConcreteRoles.SecurityToken = ServiceTerritoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DeliverableBasedServiceClass.Instance.ConcreteRoles.SecurityToken = DeliverableBasedServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductModelClass.Instance.ConcreteRoles.SecurityToken = ProductModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ShelfClass.Instance.ConcreteRoles.SecurityToken = ShelfClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RawMaterialClass.Instance.ConcreteRoles.SecurityToken = RawMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EstimatedOtherCostClass.Instance.ConcreteRoles.SecurityToken = EstimatedOtherCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BudgetRevisionClass.Instance.ConcreteRoles.SecurityToken = BudgetRevisionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortFixedAssetStandardClass.Instance.ConcreteRoles.SecurityToken = WorkEffortFixedAssetStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PostalCodeClass.Instance.ConcreteRoles.SecurityToken = PostalCodeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProfessionalAssignmentClass.Instance.ConcreteRoles.SecurityToken = ProfessionalAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PackageRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = PackageRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			JournalEntryDetailClass.Instance.ConcreteRoles.SecurityToken = JournalEntryDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TestingRequirementClass.Instance.ConcreteRoles.SecurityToken = TestingRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CaseClass.Instance.ConcreteRoles.SecurityToken = CaseClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CapitalizationClass.Instance.ConcreteRoles.SecurityToken = CapitalizationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseReturnClass.Instance.ConcreteRoles.SecurityToken = PurchaseReturnClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortPartStandardClass.Instance.ConcreteRoles.SecurityToken = WorkEffortPartStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SurchargeComponentClass.Instance.ConcreteRoles.SecurityToken = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BankClass.Instance.ConcreteRoles.SecurityToken = BankClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductRevenueClass.Instance.ConcreteRoles.SecurityToken = ProductRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DisbursementAccountingTransactionClass.Instance.ConcreteRoles.SecurityToken = DisbursementAccountingTransactionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrderValueClass.Instance.ConcreteRoles.SecurityToken = OrderValueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VatTariffClass.Instance.ConcreteRoles.SecurityToken = VatTariffClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ObligationClass.Instance.ConcreteRoles.SecurityToken = ObligationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VatRateClass.Instance.ConcreteRoles.SecurityToken = VatRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.SecurityToken = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RecurringChargeClass.Instance.ConcreteRoles.SecurityToken = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			FinancialTermClass.Instance.ConcreteRoles.SecurityToken = FinancialTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RequirementStatusClass.Instance.ConcreteRoles.SecurityToken = RequirementStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InvoiceTermClass.Instance.ConcreteRoles.SecurityToken = InvoiceTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DropShipmentClass.Instance.ConcreteRoles.SecurityToken = DropShipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesInvoiceItemClass.Instance.ConcreteRoles.SecurityToken = SalesInvoiceItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrderQuantityBreakClass.Instance.ConcreteRoles.SecurityToken = OrderQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ClientRelationshipClass.Instance.ConcreteRoles.SecurityToken = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.SecurityToken = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortAssignmentRateClass.Instance.ConcreteRoles.SecurityToken = WorkEffortAssignmentRateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EuSalesListTypeClass.Instance.ConcreteRoles.SecurityToken = EuSalesListTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProvinceClass.Instance.ConcreteRoles.SecurityToken = ProvinceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InventoryItemVarianceClass.Instance.ConcreteRoles.SecurityToken = InventoryItemVarianceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PositionResponsibilityClass.Instance.ConcreteRoles.SecurityToken = PositionResponsibilityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DeliverableTypeClass.Instance.ConcreteRoles.SecurityToken = DeliverableTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SubAssemblyClass.Instance.ConcreteRoles.SecurityToken = SubAssemblyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkFlowClass.Instance.ConcreteRoles.SecurityToken = WorkFlowClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TaskClass.Instance.ConcreteRoles.SecurityToken = TaskClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ResourceRequirementClass.Instance.ConcreteRoles.SecurityToken = ResourceRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BudgetItemClass.Instance.ConcreteRoles.SecurityToken = BudgetItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InternalRequirementClass.Instance.ConcreteRoles.SecurityToken = InternalRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PositionReportingStructureClass.Instance.ConcreteRoles.SecurityToken = PositionReportingStructureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartnershipClass.Instance.ConcreteRoles.SecurityToken = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OperatingBudgetClass.Instance.ConcreteRoles.SecurityToken = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BinClass.Instance.ConcreteRoles.SecurityToken = BinClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ManufacturingConfigurationClass.Instance.ConcreteRoles.SecurityToken = ManufacturingConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProfessionalPlacementClass.Instance.ConcreteRoles.SecurityToken = ProfessionalPlacementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesRepCommissionClass.Instance.ConcreteRoles.SecurityToken = SalesRepCommissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DeductionClass.Instance.ConcreteRoles.SecurityToken = DeductionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CaseStatusClass.Instance.ConcreteRoles.SecurityToken = CaseStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DiscountComponentClass.Instance.ConcreteRoles.SecurityToken = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OrganisationUnitClass.Instance.ConcreteRoles.SecurityToken = OrganisationUnitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartSubstituteClass.Instance.ConcreteRoles.SecurityToken = PartSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			GoodOrderItemClass.Instance.ConcreteRoles.SecurityToken = GoodOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VolumeUsageClass.Instance.ConcreteRoles.SecurityToken = VolumeUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductQuoteClass.Instance.ConcreteRoles.SecurityToken = ProductQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TransferStatusClass.Instance.ConcreteRoles.SecurityToken = TransferStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			StateClass.Instance.ConcreteRoles.SecurityToken = StateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			JournalEntryNumberClass.Instance.ConcreteRoles.SecurityToken = JournalEntryNumberClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ToleranceClass.Instance.ConcreteRoles.SecurityToken = ToleranceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EngineeringChangeClass.Instance.ConcreteRoles.SecurityToken = EngineeringChangeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VatRatePurchaseKindClass.Instance.ConcreteRoles.SecurityToken = VatRatePurchaseKindClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EmailTemplateClass.Instance.ConcreteRoles.SecurityToken = EmailTemplateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ThresholdClass.Instance.ConcreteRoles.SecurityToken = ThresholdClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EmploymentApplicationStatusClass.Instance.ConcreteRoles.SecurityToken = EmploymentApplicationStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			QualificationClass.Instance.ConcreteRoles.SecurityToken = QualificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			InternalOrganisationClass.Instance.ConcreteRoles.SecurityToken = InternalOrganisationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OwnBankAccountClass.Instance.ConcreteRoles.SecurityToken = OwnBankAccountClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyContactMechanismClass.Instance.ConcreteRoles.SecurityToken = PartyContactMechanismClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PriorityClass.Instance.ConcreteRoles.SecurityToken = PriorityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CostCenterSplitMethodClass.Instance.ConcreteRoles.SecurityToken = CostCenterSplitMethodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EstimatedMaterialCostClass.Instance.ConcreteRoles.SecurityToken = EstimatedMaterialCostClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			QuoteTermClass.Instance.ConcreteRoles.SecurityToken = QuoteTermClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TransferClass.Instance.ConcreteRoles.SecurityToken = TransferClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RevenueQuantityBreakClass.Instance.ConcreteRoles.SecurityToken = RevenueQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			GeneralLedgerAccountTypeClass.Instance.ConcreteRoles.SecurityToken = GeneralLedgerAccountTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProspectRelationshipClass.Instance.ConcreteRoles.SecurityToken = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.SecurityToken = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BudgetReviewClass.Instance.ConcreteRoles.SecurityToken = BudgetReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EngineeringChangeStatusClass.Instance.ConcreteRoles.SecurityToken = EngineeringChangeStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductQualityClass.Instance.ConcreteRoles.SecurityToken = ProductQualityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DisbursementClass.Instance.ConcreteRoles.SecurityToken = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ResearchClass.Instance.ConcreteRoles.SecurityToken = ResearchClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			JournalClass.Instance.ConcreteRoles.SecurityToken = JournalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ShipmentItemClass.Instance.ConcreteRoles.SecurityToken = ShipmentItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EmploymentAgreementClass.Instance.ConcreteRoles.SecurityToken = EmploymentAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.SecurityToken = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			NewsItemClass.Instance.ConcreteRoles.SecurityToken = NewsItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyBenefitClass.Instance.ConcreteRoles.SecurityToken = PartyBenefitClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PostalAddressClass.Instance.ConcreteRoles.SecurityToken = PostalAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PackageQuantityBreakClass.Instance.ConcreteRoles.SecurityToken = PackageQuantityBreakClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SubContractorRelationshipClass.Instance.ConcreteRoles.SecurityToken = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ClientAgreementClass.Instance.ConcreteRoles.SecurityToken = ClientAgreementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			StoreClass.Instance.ConcreteRoles.SecurityToken = StoreClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			LotClass.Instance.ConcreteRoles.SecurityToken = LotClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortSkillStandardClass.Instance.ConcreteRoles.SecurityToken = WorkEffortSkillStandardClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			IndustryClassificationClass.Instance.ConcreteRoles.SecurityToken = IndustryClassificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TimeAndMaterialsServiceClass.Instance.ConcreteRoles.SecurityToken = TimeAndMaterialsServiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EquipmentClass.Instance.ConcreteRoles.SecurityToken = EquipmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RequestItemClass.Instance.ConcreteRoles.SecurityToken = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesChannelClass.Instance.ConcreteRoles.SecurityToken = SalesChannelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CustomerRequirementClass.Instance.ConcreteRoles.SecurityToken = CustomerRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PropertyClass.Instance.ConcreteRoles.SecurityToken = PropertyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ConstraintSpecificationClass.Instance.ConcreteRoles.SecurityToken = ConstraintSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DesiredProductFeatureClass.Instance.ConcreteRoles.SecurityToken = DesiredProductFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesOrderItemStatusClass.Instance.ConcreteRoles.SecurityToken = SalesOrderItemStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ActivityUsageClass.Instance.ConcreteRoles.SecurityToken = ActivityUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProgramClass.Instance.ConcreteRoles.SecurityToken = ProgramClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CommunicationEventStatusClass.Instance.ConcreteRoles.SecurityToken = CommunicationEventStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AgreementSectionClass.Instance.ConcreteRoles.SecurityToken = AgreementSectionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			GoodClass.Instance.ConcreteRoles.SecurityToken = GoodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AccountingTransactionDetailClass.Instance.ConcreteRoles.SecurityToken = AccountingTransactionDetailClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CountyClass.Instance.ConcreteRoles.SecurityToken = CountyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ShippingAndHandlingChargeClass.Instance.ConcreteRoles.SecurityToken = ShippingAndHandlingChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PerformanceReviewItemTypeClass.Instance.ConcreteRoles.SecurityToken = PerformanceReviewItemTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PostalBoundaryClass.Instance.ConcreteRoles.SecurityToken = PostalBoundaryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductCategoryClass.Instance.ConcreteRoles.SecurityToken = ProductCategoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RequestForInformationClass.Instance.ConcreteRoles.SecurityToken = RequestForInformationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			VatFormClass.Instance.ConcreteRoles.SecurityToken = VatFormClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			BudgetRevisionImpactClass.Instance.ConcreteRoles.SecurityToken = BudgetRevisionImpactClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TemplatePurposeClass.Instance.ConcreteRoles.SecurityToken = TemplatePurposeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.SecurityToken = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WithdrawalClass.Instance.ConcreteRoles.SecurityToken = WithdrawalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DeploymentClass.Instance.ConcreteRoles.SecurityToken = DeploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PayCheckClass.Instance.ConcreteRoles.SecurityToken = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			MaritalStatusClass.Instance.ConcreteRoles.SecurityToken = MaritalStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ManifestClass.Instance.ConcreteRoles.SecurityToken = ManifestClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ExportDocumentClass.Instance.ConcreteRoles.SecurityToken = ExportDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CustomerShipmentStatusClass.Instance.ConcreteRoles.SecurityToken = CustomerShipmentStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ExpenseEntryClass.Instance.ConcreteRoles.SecurityToken = ExpenseEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartSpecificationStatusClass.Instance.ConcreteRoles.SecurityToken = PartSpecificationStatusClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.SecurityToken = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			GenderTypeClass.Instance.ConcreteRoles.SecurityToken = GenderTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			OfficeClass.Instance.ConcreteRoles.SecurityToken = OfficeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EmailAddressClass.Instance.ConcreteRoles.SecurityToken = EmailAddressClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkEffortInventoryAssignmentClass.Instance.ConcreteRoles.SecurityToken = WorkEffortInventoryAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CityClass.Instance.ConcreteRoles.SecurityToken = CityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			MaterialsUsageClass.Instance.ConcreteRoles.SecurityToken = MaterialsUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			EmploymentTerminationReasonClass.Instance.ConcreteRoles.SecurityToken = EmploymentTerminationReasonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			TimePeriodUsageClass.Instance.ConcreteRoles.SecurityToken = TimePeriodUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			WorkRequirementClass.Instance.ConcreteRoles.SecurityToken = WorkRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			FeeClass.Instance.ConcreteRoles.SecurityToken = FeeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.SecurityToken = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ProductDeliverySkillRequirementClass.Instance.ConcreteRoles.SecurityToken = ProductDeliverySkillRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SalesRepProductCategoryRevenueClass.Instance.ConcreteRoles.SecurityToken = SalesRepProductCategoryRevenueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			ServiceFeatureClass.Instance.ConcreteRoles.SecurityToken = ServiceFeatureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PartyProductRevenueHistoryClass.Instance.ConcreteRoles.SecurityToken = PartyProductRevenueHistoryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			LocalisedTextClass.Instance.ConcreteRoles.SecurityToken = LocalisedTextClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			SingletonClass.Instance.ConcreteRoles.SecurityToken = SingletonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			LocaleClass.Instance.ConcreteRoles.SecurityToken = LocaleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			LanguageClass.Instance.ConcreteRoles.SecurityToken = LanguageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			UserGroupClass.Instance.ConcreteRoles.SecurityToken = UserGroupClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PermissionClass.Instance.ConcreteRoles.SecurityToken = PermissionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			MediaTypeClass.Instance.ConcreteRoles.SecurityToken = MediaTypeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			RoleClass.Instance.ConcreteRoles.SecurityToken = RoleClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PrintQueueClass.Instance.ConcreteRoles.SecurityToken = PrintQueueClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CountryClass.Instance.ConcreteRoles.SecurityToken = CountryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			AccessControlClass.Instance.ConcreteRoles.SecurityToken = AccessControlClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			PersonClass.Instance.ConcreteRoles.SecurityToken = PersonClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			MediaClass.Instance.ConcreteRoles.SecurityToken = MediaClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 
			CurrencyClass.Instance.ConcreteRoles.SecurityToken = CurrencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.SecurityToken]; 


		}

		internal class RolesType
		{
			internal RoleType DeniedPermission;
			internal RoleType SecurityToken;

		}
	}public partial class ObjectStateInterface: Interface
	{
		public static ObjectStateInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal ObjectStateInterface() : base(BaseDomain.Instance, new Guid("f991813f-3146-4431-96d0-554aa2186887"))
        {
			this.SingularName = "ObjectState";
			this.PluralName = "ObjectStates";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("dd9d3cf5-5c9b-444a-a4b1-a4d807597cf6"))
			{
				Subtype = Instance,
				Supertype = UniquelyIdentifiableInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var ObjectStateDeniedPermission = new RelationType(BaseDomain.Instance, new Guid("59338f0b-40e7-49e8-ba1a-3ecebf96aebe"), new Guid("fca0f3f6-bdd6-4405-93b3-35dd769bff0e"), new Guid("c338f087-559c-4239-9c6a-1f691e58ed16"));
			ObjectStateDeniedPermission.AssignedMultiplicity = Multiplicity.ManyToMany;
			ObjectStateDeniedPermission.IsIndexed = true;

			ObjectStateDeniedPermission.AssociationType.ObjectType = this;

			ObjectStateDeniedPermission.RoleType.ObjectType = PermissionClass.Instance;;
			ObjectStateDeniedPermission.RoleType.AssignedSingularName = "DeniedPermission";
			ObjectStateDeniedPermission.RoleType.AssignedPluralName = "DeniedPermissions";
			this.Roles.DeniedPermission = ObjectStateDeniedPermission.RoleType;

			var ObjectStateName = new RelationType(BaseDomain.Instance, new Guid("b86f9e42-fe10-4302-ab7c-6c6c7d357c39"), new Guid("052ec640-3150-458a-99d5-0edce6eb6149"), new Guid("945cbba6-4b09-4b87-931e-861b147c3823"));
			ObjectStateName.AssignedMultiplicity = Multiplicity.OneToOne;
			ObjectStateName.IsIndexed = true;

			ObjectStateName.AssociationType.ObjectType = this;

			ObjectStateName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			ObjectStateName.RoleType.AssignedSingularName = "Name";
			ObjectStateName.RoleType.AssignedPluralName = "Names";
			ObjectStateName.RoleType.Size = 256;
			this.Roles.Name = ObjectStateName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			PartSpecificationObjectStateClass.Instance.ConcreteRoles.DeniedPermission = PartSpecificationObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseShipmentObjectStateClass.Instance.ConcreteRoles.DeniedPermission = PurchaseShipmentObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesOrderItemObjectStateClass.Instance.ConcreteRoles.DeniedPermission = SalesOrderItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseReturnObjectStateClass.Instance.ConcreteRoles.DeniedPermission = PurchaseReturnObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseOrderObjectStateClass.Instance.ConcreteRoles.DeniedPermission = PurchaseOrderObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesInvoiceItemObjectStateClass.Instance.ConcreteRoles.DeniedPermission = SalesInvoiceItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CustomerReturnObjectStateClass.Instance.ConcreteRoles.DeniedPermission = CustomerReturnObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseInvoiceObjectStateClass.Instance.ConcreteRoles.DeniedPermission = PurchaseInvoiceObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CaseObjectStateClass.Instance.ConcreteRoles.DeniedPermission = CaseObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			DropShipmentObjectStateClass.Instance.ConcreteRoles.DeniedPermission = DropShipmentObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesOrderObjectStateClass.Instance.ConcreteRoles.DeniedPermission = SalesOrderObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			NonSerializedInventoryItemObjectStateClass.Instance.ConcreteRoles.DeniedPermission = NonSerializedInventoryItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			TransferObjectStateClass.Instance.ConcreteRoles.DeniedPermission = TransferObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SalesInvoiceObjectStateClass.Instance.ConcreteRoles.DeniedPermission = SalesInvoiceObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseInvoiceItemObjectStateClass.Instance.ConcreteRoles.DeniedPermission = PurchaseInvoiceItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PurchaseOrderItemObjectStateClass.Instance.ConcreteRoles.DeniedPermission = PurchaseOrderItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			RequirementObjectStateClass.Instance.ConcreteRoles.DeniedPermission = RequirementObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			SerializedInventoryItemObjectStateClass.Instance.ConcreteRoles.DeniedPermission = SerializedInventoryItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			EngineeringChangeObjectStateClass.Instance.ConcreteRoles.DeniedPermission = EngineeringChangeObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CustomerShipmentObjectStateClass.Instance.ConcreteRoles.DeniedPermission = CustomerShipmentObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			CommunicationEventObjectStateClass.Instance.ConcreteRoles.DeniedPermission = CommunicationEventObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			PickListObjectStateClass.Instance.ConcreteRoles.DeniedPermission = PickListObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			WorkEffortObjectStateClass.Instance.ConcreteRoles.DeniedPermission = WorkEffortObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 
			BudgetObjectStateClass.Instance.ConcreteRoles.DeniedPermission = BudgetObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.DeniedPermission]; 

			PartSpecificationObjectStateClass.Instance.ConcreteRoles.Name = PartSpecificationObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PurchaseShipmentObjectStateClass.Instance.ConcreteRoles.Name = PurchaseShipmentObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SalesOrderItemObjectStateClass.Instance.ConcreteRoles.Name = SalesOrderItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PurchaseReturnObjectStateClass.Instance.ConcreteRoles.Name = PurchaseReturnObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PurchaseOrderObjectStateClass.Instance.ConcreteRoles.Name = PurchaseOrderObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SalesInvoiceItemObjectStateClass.Instance.ConcreteRoles.Name = SalesInvoiceItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			CustomerReturnObjectStateClass.Instance.ConcreteRoles.Name = CustomerReturnObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PurchaseInvoiceObjectStateClass.Instance.ConcreteRoles.Name = PurchaseInvoiceObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			CaseObjectStateClass.Instance.ConcreteRoles.Name = CaseObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			DropShipmentObjectStateClass.Instance.ConcreteRoles.Name = DropShipmentObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SalesOrderObjectStateClass.Instance.ConcreteRoles.Name = SalesOrderObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			NonSerializedInventoryItemObjectStateClass.Instance.ConcreteRoles.Name = NonSerializedInventoryItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			TransferObjectStateClass.Instance.ConcreteRoles.Name = TransferObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SalesInvoiceObjectStateClass.Instance.ConcreteRoles.Name = SalesInvoiceObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PurchaseInvoiceItemObjectStateClass.Instance.ConcreteRoles.Name = PurchaseInvoiceItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PurchaseOrderItemObjectStateClass.Instance.ConcreteRoles.Name = PurchaseOrderItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			RequirementObjectStateClass.Instance.ConcreteRoles.Name = RequirementObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			SerializedInventoryItemObjectStateClass.Instance.ConcreteRoles.Name = SerializedInventoryItemObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			EngineeringChangeObjectStateClass.Instance.ConcreteRoles.Name = EngineeringChangeObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			CustomerShipmentObjectStateClass.Instance.ConcreteRoles.Name = CustomerShipmentObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			CommunicationEventObjectStateClass.Instance.ConcreteRoles.Name = CommunicationEventObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			PickListObjectStateClass.Instance.ConcreteRoles.Name = PickListObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			WorkEffortObjectStateClass.Instance.ConcreteRoles.Name = WorkEffortObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 
			BudgetObjectStateClass.Instance.ConcreteRoles.Name = BudgetObjectStateClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 


		}

		internal class RolesType
		{
			internal RoleType DeniedPermission;
			internal RoleType Name;

		}
	}public partial class CurrencyClass : Class
	{
		public static CurrencyClass Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();
		internal readonly ConcreteRolesType ConcreteRoles = new ConcreteRolesType();

		internal CurrencyClass() : base(BaseDomain.Instance, new Guid("fd397adf-40b4-4ef8-b449-dd5a24273df3"))
        {
			this.SingularName = "Currency";
			this.PluralName = "Currencies";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};

			new Inheritance(BaseDomain.Instance, new Guid("09b3ac36-f944-4316-9749-99d4f12ffe74"))
			{
				Subtype = Instance,
				Supertype = AccessControlledObjectInterface.Instance
			};
			new Inheritance(AppsDomain.Instance, new Guid("f78b17e7-a29a-4bd6-b15b-6d1ef70263c2"))
			{
				Subtype = Instance,
				Supertype = IUnitOfMeasureInterface.Instance
			};

		}

		internal override void BuildRelationTypes()
		{
			var CurrencyIsoCode = new RelationType(BaseDomain.Instance, new Guid("294a4bdc-f03a-47a2-a649-419e6b9021a3"), new Guid("f9eec7c6-c4cd-4d8c-a5f7-44855328cd7e"), new Guid("09d74027-4457-4788-803c-24b857245565"));
			CurrencyIsoCode.AssignedMultiplicity = Multiplicity.OneToOne;
			CurrencyIsoCode.AssociationType.ObjectType = this;

			CurrencyIsoCode.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CurrencyIsoCode.RoleType.AssignedSingularName = "IsoCode";
			CurrencyIsoCode.RoleType.AssignedPluralName = "IsoCodes";
			CurrencyIsoCode.RoleType.Size = 256;
			this.Roles.IsoCode = CurrencyIsoCode.RoleType;

			var CurrencyName = new RelationType(BaseDomain.Instance, new Guid("74c8308b-1b76-4218-9532-f01c9d1e146b"), new Guid("2cb43671-c648-4bd4-ac08-7302c29246e7"), new Guid("e7c93764-d634-4187-97ed-9248ea56bab2"));
			CurrencyName.AssignedMultiplicity = Multiplicity.OneToOne;
			CurrencyName.IsIndexed = true;

			CurrencyName.AssociationType.ObjectType = this;

			CurrencyName.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CurrencyName.RoleType.AssignedSingularName = "Name";
			CurrencyName.RoleType.AssignedPluralName = "Names";
			CurrencyName.RoleType.Size = 256;
			this.Roles.Name = CurrencyName.RoleType;

			var CurrencySymbol = new RelationType(BaseDomain.Instance, new Guid("82797074-8d6c-4d61-a885-34ae7133a503"), new Guid("0d4524d0-503f-494d-87a4-cbc239b278e1"), new Guid("43e13383-ea7f-4aa1-872c-eec0b53a998e"));
			CurrencySymbol.AssignedMultiplicity = Multiplicity.OneToOne;
			CurrencySymbol.AssociationType.ObjectType = this;

			CurrencySymbol.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CurrencySymbol.RoleType.AssignedSingularName = "Symbol";
			CurrencySymbol.RoleType.AssignedPluralName = "Symbols";
			CurrencySymbol.RoleType.Size = 256;
			this.Roles.Symbol = CurrencySymbol.RoleType;

			var CurrencyLocalisedName = new RelationType(BaseDomain.Instance, new Guid("e9fc0472-cf7a-4e02-b061-cb42b6f5c273"), new Guid("06b8f2b2-91f0-4b89-ae19-b47de4524556"), new Guid("e1301b8f-25cc-4ace-884e-79af1d303f53"));
			CurrencyLocalisedName.AssignedMultiplicity = Multiplicity.OneToMany;
			CurrencyLocalisedName.IsIndexed = true;

			CurrencyLocalisedName.AssociationType.ObjectType = this;

			CurrencyLocalisedName.RoleType.ObjectType = LocalisedTextClass.Instance;;
			CurrencyLocalisedName.RoleType.AssignedSingularName = "LocalisedName";
			CurrencyLocalisedName.RoleType.AssignedPluralName = "LocalisedNames";
			this.Roles.LocalisedName = CurrencyLocalisedName.RoleType;


		}

		internal override void SetRelationTypes()
		{
			CurrencyClass.Instance.ConcreteRoles.IsoCode = CurrencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.IsoCode]; 

			CurrencyClass.Instance.ConcreteRoles.Name = CurrencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Name]; 

			CurrencyClass.Instance.ConcreteRoles.Symbol = CurrencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Symbol]; 

			CurrencyClass.Instance.ConcreteRoles.LocalisedName = CurrencyClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.LocalisedName]; 


		}

		internal class RolesType
		{
			internal RoleType IsoCode;
			internal RoleType Name;
			internal RoleType Symbol;
			internal RoleType LocalisedName;

		}

		internal class ConcreteRolesType
		{
			internal ConcreteRoleType IsoCode;
			internal ConcreteRoleType Name;
			internal ConcreteRoleType Symbol;
			internal ConcreteRoleType LocalisedName;
			internal ConcreteRoleType DeniedPermission;
			internal ConcreteRoleType SecurityToken;
			internal ConcreteRoleType Description;
			internal ConcreteRoleType UnitOfMeasureConversion;
			internal ConcreteRoleType Abbreviation;
			internal ConcreteRoleType UniqueId;

		}
	}public partial class CommentableInterface: Interface
	{
		public static CommentableInterface Instance {get; internal set;}

		internal readonly RolesType Roles = new RolesType();

		internal CommentableInterface() : base(BaseDomain.Instance, new Guid("fdd52472-e863-4e91-bb01-1dada2acc8f6"))
        {
			this.SingularName = "Commentable";
			this.PluralName = "Commentables";
        }

		internal override void BuildInheritances()
		{
			new Inheritance(BaseDomain.Instance, Guid.NewGuid())
			{
				Subtype = Instance,
				Supertype = ObjectInterface.Instance
			};


		}

		internal override void BuildRelationTypes()
		{
			var CommentableComment = new RelationType(BaseDomain.Instance, new Guid("d800f9a2-fadd-45f1-8731-4dac177c6b1b"), new Guid("d3aadbc5-e488-4346-ac34-9e14cb8d2350"), new Guid("8b41d441-cd12-49d0-823c-b8a3163baadc"));
			CommentableComment.AssignedMultiplicity = Multiplicity.OneToOne;
			CommentableComment.AssociationType.ObjectType = this;

			CommentableComment.RoleType.ObjectType = AllorsStringUnit.Instance;;
			CommentableComment.RoleType.AssignedSingularName = "Comment";
			CommentableComment.RoleType.AssignedPluralName = "Comments";
			CommentableComment.RoleType.Size = -1;
			this.Roles.Comment = CommentableComment.RoleType;


		}

		internal override void SetRelationTypes()
		{
			RequestForProposalClass.Instance.ConcreteRoles.Comment = RequestForProposalClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			QuoteItemClass.Instance.ConcreteRoles.Comment = QuoteItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PayGradeClass.Instance.ConcreteRoles.Comment = PayGradeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			LetterCorrespondenceClass.Instance.ConcreteRoles.Comment = LetterCorrespondenceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PurchaseOrderClass.Instance.ConcreteRoles.Comment = PurchaseOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			SupplierOfferingClass.Instance.ConcreteRoles.Comment = SupplierOfferingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			WorkEffortPartyAssignmentClass.Instance.ConcreteRoles.Comment = WorkEffortPartyAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			TaxDocumentClass.Instance.ConcreteRoles.Comment = TaxDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			BasePriceClass.Instance.ConcreteRoles.Comment = BasePriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			OperatingConditionClass.Instance.ConcreteRoles.Comment = OperatingConditionClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			EngineeringBomClass.Instance.ConcreteRoles.Comment = EngineeringBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			FaxCommunicationClass.Instance.ConcreteRoles.Comment = FaxCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ProductDrawingClass.Instance.ConcreteRoles.Comment = ProductDrawingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ProductConfigurationClass.Instance.ConcreteRoles.Comment = ProductConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			SupplierRelationshipClass.Instance.ConcreteRoles.Comment = SupplierRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			OrganisationRollUpClass.Instance.ConcreteRoles.Comment = OrganisationRollUpClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			WorkEffortAssignmentClass.Instance.ConcreteRoles.Comment = WorkEffortAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PerformanceSpecificationClass.Instance.ConcreteRoles.Comment = PerformanceSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoles.Comment = WorkEffortFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			CustomerRelationshipClass.Instance.ConcreteRoles.Comment = CustomerRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PartyFixedAssetAssignmentClass.Instance.ConcreteRoles.Comment = PartyFixedAssetAssignmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			CapitalBudgetClass.Instance.ConcreteRoles.Comment = CapitalBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			MarketingPackageClass.Instance.ConcreteRoles.Comment = MarketingPackageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PerformanceNoteClass.Instance.ConcreteRoles.Comment = PerformanceNoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			DeliverableTurnoverClass.Instance.ConcreteRoles.Comment = DeliverableTurnoverClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			OneTimeChargeClass.Instance.ConcreteRoles.Comment = OneTimeChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PartBillOfMaterialSubstituteClass.Instance.ConcreteRoles.Comment = PartBillOfMaterialSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ReceiptClass.Instance.ConcreteRoles.Comment = ReceiptClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			BillOfLadingClass.Instance.ConcreteRoles.Comment = BillOfLadingClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ServiceConfigurationClass.Instance.ConcreteRoles.Comment = ServiceConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			SalesInvoiceClass.Instance.ConcreteRoles.Comment = SalesInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			TimeEntryClass.Instance.ConcreteRoles.Comment = TimeEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PackagingSlipClass.Instance.ConcreteRoles.Comment = PackagingSlipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ManufacturingBomClass.Instance.ConcreteRoles.Comment = ManufacturingBomClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PositionFulfillmentClass.Instance.ConcreteRoles.Comment = PositionFulfillmentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			EmploymentClass.Instance.ConcreteRoles.Comment = EmploymentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			AccountingPeriodClass.Instance.ConcreteRoles.Comment = AccountingPeriodClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			SalesRepRelationshipClass.Instance.ConcreteRoles.Comment = SalesRepRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			MarketingMaterialClass.Instance.ConcreteRoles.Comment = MarketingMaterialClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			SalesOrderClass.Instance.ConcreteRoles.Comment = SalesOrderClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PurchaseInvoiceClass.Instance.ConcreteRoles.Comment = PurchaseInvoiceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			SalesOrderItemClass.Instance.ConcreteRoles.Comment = SalesOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			RequestForQuoteClass.Instance.ConcreteRoles.Comment = RequestForQuoteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PerformanceReviewClass.Instance.ConcreteRoles.Comment = PerformanceReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			EngineeringDocumentClass.Instance.ConcreteRoles.Comment = EngineeringDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			HazardousMaterialsDocumentClass.Instance.ConcreteRoles.Comment = HazardousMaterialsDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			EmailCommunicationClass.Instance.ConcreteRoles.Comment = EmailCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			OrganisationContactRelationshipClass.Instance.ConcreteRoles.Comment = OrganisationContactRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PerformanceReviewItemClass.Instance.ConcreteRoles.Comment = PerformanceReviewItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			UtilizationChargeClass.Instance.ConcreteRoles.Comment = UtilizationChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ProductModelClass.Instance.ConcreteRoles.Comment = ProductModelClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			TestingRequirementClass.Instance.ConcreteRoles.Comment = TestingRequirementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			SurchargeComponentClass.Instance.ConcreteRoles.Comment = SurchargeComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ProfessionalServicesRelationshipClass.Instance.ConcreteRoles.Comment = ProfessionalServicesRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			RecurringChargeClass.Instance.ConcreteRoles.Comment = RecurringChargeClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ClientRelationshipClass.Instance.ConcreteRoles.Comment = ClientRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PurchaseOrderItemClass.Instance.ConcreteRoles.Comment = PurchaseOrderItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			InventoryItemVarianceClass.Instance.ConcreteRoles.Comment = InventoryItemVarianceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PositionResponsibilityClass.Instance.ConcreteRoles.Comment = PositionResponsibilityClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PositionReportingStructureClass.Instance.ConcreteRoles.Comment = PositionReportingStructureClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PartnershipClass.Instance.ConcreteRoles.Comment = PartnershipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			OperatingBudgetClass.Instance.ConcreteRoles.Comment = OperatingBudgetClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ManufacturingConfigurationClass.Instance.ConcreteRoles.Comment = ManufacturingConfigurationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			DiscountComponentClass.Instance.ConcreteRoles.Comment = DiscountComponentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PartSubstituteClass.Instance.ConcreteRoles.Comment = PartSubstituteClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			VolumeUsageClass.Instance.ConcreteRoles.Comment = VolumeUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ToleranceClass.Instance.ConcreteRoles.Comment = ToleranceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PartyContactMechanismClass.Instance.ConcreteRoles.Comment = PartyContactMechanismClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ProspectRelationshipClass.Instance.ConcreteRoles.Comment = ProspectRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			FaceToFaceCommunicationClass.Instance.ConcreteRoles.Comment = FaceToFaceCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			BudgetReviewClass.Instance.ConcreteRoles.Comment = BudgetReviewClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			DisbursementClass.Instance.ConcreteRoles.Comment = DisbursementClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoles.Comment = ManufacturerSuggestedRetailPriceClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			SubContractorRelationshipClass.Instance.ConcreteRoles.Comment = SubContractorRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			RequestItemClass.Instance.ConcreteRoles.Comment = RequestItemClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ConstraintSpecificationClass.Instance.ConcreteRoles.Comment = ConstraintSpecificationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ActivityUsageClass.Instance.ConcreteRoles.Comment = ActivityUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			RequestForInformationClass.Instance.ConcreteRoles.Comment = RequestForInformationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			WebSiteCommunicationClass.Instance.ConcreteRoles.Comment = WebSiteCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PayCheckClass.Instance.ConcreteRoles.Comment = PayCheckClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ManifestClass.Instance.ConcreteRoles.Comment = ManifestClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ExportDocumentClass.Instance.ConcreteRoles.Comment = ExportDocumentClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			ExpenseEntryClass.Instance.ConcreteRoles.Comment = ExpenseEntryClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			DistributionChannelRelationshipClass.Instance.ConcreteRoles.Comment = DistributionChannelRelationshipClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			MaterialsUsageClass.Instance.ConcreteRoles.Comment = MaterialsUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			TimePeriodUsageClass.Instance.ConcreteRoles.Comment = TimePeriodUsageClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 
			PhoneCommunicationClass.Instance.ConcreteRoles.Comment = PhoneCommunicationClass.Instance.ConcreteRoleTypeByRoleType[this.Roles.Comment]; 


		}

		internal class RolesType
		{
			internal RoleType Comment;

		}
	}
}
// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class DeletableDelete : Allors.Meta.Method
	{
		protected DeletableDelete(Deletable @object) : base(@object)
		{
		}
	}

	public partial class AccessControlDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlDeleteMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.Delete); 

		public AccessControlDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlDeleteMethodInvocation;
			}
		}
	}public partial class ImageDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation ImageDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.Delete); 

		public ImageDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageDeleteMethodInvocation;
			}
		}
	}public partial class LoginDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation LoginDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.Delete); 

		public LoginDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginDeleteMethodInvocation;
			}
		}
	}public partial class MediaDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation MediaDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.Delete); 

		public MediaDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaDeleteMethodInvocation;
			}
		}
	}public partial class PermissionDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.Delete); 

		public PermissionDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionDeleteMethodInvocation;
			}
		}
	}public partial class PersonDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PersonDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.Delete); 

		public PersonDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonDeleteMethodInvocation;
			}
		}
	}public partial class SecurityTokenDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenDeleteMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.Delete); 

		public SecurityTokenDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenDeleteMethodInvocation;
			}
		}
	}public partial class BasePriceDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceDeleteMethodInvocation = new Allors.Meta.MethodInvocation(BasePrice.Meta.ObjectType, BasePrice.Meta.Delete); 

		public BasePriceDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceDeleteMethodInvocation;
			}
		}
	}public partial class CustomerShipmentDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentDeleteMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.Delete); 

		public CustomerShipmentDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentDeleteMethodInvocation;
			}
		}
	}public partial class EmploymentDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Employment.Meta.ObjectType, Employment.Meta.Delete); 

		public EmploymentDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentDeleteMethodInvocation;
			}
		}
	}public partial class GoodDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation GoodDeleteMethodInvocation = new Allors.Meta.MethodInvocation(Good.Meta.ObjectType, Good.Meta.Delete); 

		public GoodDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodDeleteMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenue.Meta.ObjectType, InternalOrganisationRevenue.Meta.Delete); 

		public InternalOrganisationRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueDeleteMethodInvocation;
			}
		}
	}public partial class ItemIssuanceDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceDeleteMethodInvocation = new Allors.Meta.MethodInvocation(ItemIssuance.Meta.ObjectType, ItemIssuance.Meta.Delete); 

		public ItemIssuanceDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceDeleteMethodInvocation;
			}
		}
	}public partial class OrderShipmentDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentDeleteMethodInvocation = new Allors.Meta.MethodInvocation(OrderShipment.Meta.ObjectType, OrderShipment.Meta.Delete); 

		public OrderShipmentDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentDeleteMethodInvocation;
			}
		}
	}public partial class PackageRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenue.Meta.ObjectType, PackageRevenue.Meta.Delete); 

		public PackageRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueDeleteMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenue.Meta.ObjectType, PartyPackageRevenue.Meta.Delete); 

		public PartyPackageRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueDeleteMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenue.Meta.ObjectType, PartyProductCategoryRevenue.Meta.Delete); 

		public PartyProductCategoryRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueDeleteMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenue.Meta.ObjectType, PartyProductRevenue.Meta.Delete); 

		public PartyProductRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueDeleteMethodInvocation;
			}
		}
	}public partial class PartyRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenue.Meta.ObjectType, PartyRevenue.Meta.Delete); 

		public PartyRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueDeleteMethodInvocation;
			}
		}
	}public partial class PickListItemDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemDeleteMethodInvocation = new Allors.Meta.MethodInvocation(PickListItem.Meta.ObjectType, PickListItem.Meta.Delete); 

		public PickListItemDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemDeleteMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenue.Meta.ObjectType, ProductCategoryRevenue.Meta.Delete); 

		public ProductCategoryRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueDeleteMethodInvocation;
			}
		}
	}public partial class ProductRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenue.Meta.ObjectType, ProductRevenue.Meta.Delete); 

		public ProductRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueDeleteMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenue.Meta.ObjectType, SalesChannelRevenue.Meta.Delete); 

		public SalesChannelRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueDeleteMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyProductCategoryRevenue.Meta.ObjectType, SalesRepPartyProductCategoryRevenue.Meta.Delete); 

		public SalesRepPartyProductCategoryRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueDeleteMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyRevenue.Meta.ObjectType, SalesRepPartyRevenue.Meta.Delete); 

		public SalesRepPartyRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueDeleteMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepProductCategoryRevenue.Meta.ObjectType, SalesRepProductCategoryRevenue.Meta.Delete); 

		public SalesRepProductCategoryRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueDeleteMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenue.Meta.ObjectType, SalesRepRevenue.Meta.Delete); 

		public SalesRepRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueDeleteMethodInvocation;
			}
		}
	}public partial class ShipmentItemDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemDeleteMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentItem.Meta.ObjectType, ShipmentItem.Meta.Delete); 

		public ShipmentItemDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemDeleteMethodInvocation;
			}
		}
	}public partial class StoreRevenueDelete : DeletableDelete
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueDeleteMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenue.Meta.ObjectType, StoreRevenue.Meta.Delete); 

		public StoreRevenueDelete(Deletable @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueDeleteMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnBuild : Allors.Meta.Method
	{
		protected ObjectOnBuild(Object @object) : base(@object)
		{
		}
	}

	public partial class AccountingTransactionTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionType.Meta.ObjectType, AccountingTransactionType.Meta.OnBuild); 

		public AccountingTransactionTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionTypeOnBuildMethodInvocation;
			}
		}
	}public partial class AssetAssignmentStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AssetAssignmentStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AssetAssignmentStatus.Meta.ObjectType, AssetAssignmentStatus.Meta.OnBuild); 

		public AssetAssignmentStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AssetAssignmentStatusOnBuildMethodInvocation;
			}
		}
	}public partial class ColourOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ColourOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Colour.Meta.ObjectType, Colour.Meta.OnBuild); 

		public ColourOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ColourOnBuildMethodInvocation;
			}
		}
	}public partial class CommunicationEventPurposeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventPurposeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventPurpose.Meta.ObjectType, CommunicationEventPurpose.Meta.OnBuild); 

		public CommunicationEventPurposeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventPurposeOnBuildMethodInvocation;
			}
		}
	}public partial class ContactMechanismPurposeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismPurposeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ContactMechanismPurpose.Meta.ObjectType, ContactMechanismPurpose.Meta.OnBuild); 

		public ContactMechanismPurposeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismPurposeOnBuildMethodInvocation;
			}
		}
	}public partial class CostCenterSplitMethodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterSplitMethodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CostCenterSplitMethod.Meta.ObjectType, CostCenterSplitMethod.Meta.OnBuild); 

		public CostCenterSplitMethodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterSplitMethodOnBuildMethodInvocation;
			}
		}
	}public partial class CostOfGoodsSoldMethodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostOfGoodsSoldMethodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CostOfGoodsSoldMethod.Meta.ObjectType, CostOfGoodsSoldMethod.Meta.OnBuild); 

		public CostOfGoodsSoldMethodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostOfGoodsSoldMethodOnBuildMethodInvocation;
			}
		}
	}public partial class DebitCreditConstantOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DebitCreditConstantOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DebitCreditConstant.Meta.ObjectType, DebitCreditConstant.Meta.OnBuild); 

		public DebitCreditConstantOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DebitCreditConstantOnBuildMethodInvocation;
			}
		}
	}public partial class DeductionTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DeductionType.Meta.ObjectType, DeductionType.Meta.OnBuild); 

		public DeductionTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionTypeOnBuildMethodInvocation;
			}
		}
	}public partial class DeliverableTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableType.Meta.ObjectType, DeliverableType.Meta.OnBuild); 

		public DeliverableTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTypeOnBuildMethodInvocation;
			}
		}
	}public partial class DunningTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DunningTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DunningType.Meta.ObjectType, DunningType.Meta.OnBuild); 

		public DunningTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DunningTypeOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationSourceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationSourceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplicationSource.Meta.ObjectType, EmploymentApplicationSource.Meta.OnBuild); 

		public EmploymentApplicationSourceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationSourceOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplicationStatus.Meta.ObjectType, EmploymentApplicationStatus.Meta.OnBuild); 

		public EmploymentApplicationStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationStatusOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentTermination.Meta.ObjectType, EmploymentTermination.Meta.OnBuild); 

		public EmploymentTerminationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationReasonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationReasonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentTerminationReason.Meta.ObjectType, EmploymentTerminationReason.Meta.OnBuild); 

		public EmploymentTerminationReasonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationReasonOnBuildMethodInvocation;
			}
		}
	}public partial class EuSalesListTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EuSalesListTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EuSalesListType.Meta.ObjectType, EuSalesListType.Meta.OnBuild); 

		public EuSalesListTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EuSalesListTypeOnBuildMethodInvocation;
			}
		}
	}public partial class GenderTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GenderTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(GenderType.Meta.ObjectType, GenderType.Meta.OnBuild); 

		public GenderTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderTypeOnBuildMethodInvocation;
			}
		}
	}public partial class HobbyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HobbyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Hobby.Meta.ObjectType, Hobby.Meta.OnBuild); 

		public HobbyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HobbyOnBuildMethodInvocation;
			}
		}
	}public partial class InventoryItemKindOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemKindOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InventoryItemKind.Meta.ObjectType, InventoryItemKind.Meta.OnBuild); 

		public InventoryItemKindOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemKindOnBuildMethodInvocation;
			}
		}
	}public partial class InvoiceSequenceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceSequenceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceSequence.Meta.ObjectType, InvoiceSequence.Meta.OnBuild); 

		public InvoiceSequenceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceSequenceOnBuildMethodInvocation;
			}
		}
	}public partial class JournalTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(JournalType.Meta.ObjectType, JournalType.Meta.OnBuild); 

		public JournalTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalTypeOnBuildMethodInvocation;
			}
		}
	}public partial class MaritalStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MaritalStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(MaritalStatus.Meta.ObjectType, MaritalStatus.Meta.OnBuild); 

		public MaritalStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaritalStatusOnBuildMethodInvocation;
			}
		}
	}public partial class ModelOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ModelOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Model.Meta.ObjectType, Model.Meta.OnBuild); 

		public ModelOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ModelOnBuildMethodInvocation;
			}
		}
	}public partial class OrdinalOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrdinalOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Ordinal.Meta.ObjectType, Ordinal.Meta.OnBuild); 

		public OrdinalOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrdinalOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationUnitOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationUnitOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationUnit.Meta.ObjectType, OrganisationUnit.Meta.OnBuild); 

		public OrganisationUnitOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationUnitOnBuildMethodInvocation;
			}
		}
	}public partial class PartyRelationshipStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRelationshipStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyRelationshipStatus.Meta.ObjectType, PartyRelationshipStatus.Meta.OnBuild); 

		public PartyRelationshipStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRelationshipStatusOnBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReviewItemType.Meta.ObjectType, PerformanceReviewItemType.Meta.OnBuild); 

		public PerformanceReviewItemTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemTypeOnBuildMethodInvocation;
			}
		}
	}public partial class PersonalTitleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonalTitleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PersonalTitle.Meta.ObjectType, PersonalTitle.Meta.OnBuild); 

		public PersonalTitleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonalTitleOnBuildMethodInvocation;
			}
		}
	}public partial class PositionStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionStatus.Meta.ObjectType, PositionStatus.Meta.OnBuild); 

		public PositionStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionStatusOnBuildMethodInvocation;
			}
		}
	}public partial class PriorityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PriorityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Priority.Meta.ObjectType, Priority.Meta.OnBuild); 

		public PriorityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PriorityOnBuildMethodInvocation;
			}
		}
	}public partial class ProductQualityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQualityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductQuality.Meta.ObjectType, ProductQuality.Meta.OnBuild); 

		public ProductQualityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQualityOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemType.Meta.ObjectType, PurchaseInvoiceItemType.Meta.OnBuild); 

		public PurchaseInvoiceItemTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemTypeOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceType.Meta.ObjectType, PurchaseInvoiceType.Meta.OnBuild); 

		public PurchaseInvoiceTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceTypeOnBuildMethodInvocation;
			}
		}
	}public partial class QualificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QualificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Qualification.Meta.ObjectType, Qualification.Meta.OnBuild); 

		public QualificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QualificationOnBuildMethodInvocation;
			}
		}
	}public partial class RateTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RateTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RateType.Meta.ObjectType, RateType.Meta.OnBuild); 

		public RateTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RateTypeOnBuildMethodInvocation;
			}
		}
	}public partial class RatingTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RatingTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RatingType.Meta.ObjectType, RatingType.Meta.OnBuild); 

		public RatingTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RatingTypeOnBuildMethodInvocation;
			}
		}
	}public partial class SalesChannelOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannel.Meta.ObjectType, SalesChannel.Meta.OnBuild); 

		public SalesChannelOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemType.Meta.ObjectType, SalesInvoiceItemType.Meta.OnBuild); 

		public SalesInvoiceItemTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemTypeOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceType.Meta.ObjectType, SalesInvoiceType.Meta.OnBuild); 

		public SalesInvoiceTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceTypeOnBuildMethodInvocation;
			}
		}
	}public partial class SalutationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalutationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Salutation.Meta.ObjectType, Salutation.Meta.OnBuild); 

		public SalutationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalutationOnBuildMethodInvocation;
			}
		}
	}public partial class ServiceFeatureOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceFeatureOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ServiceFeature.Meta.ObjectType, ServiceFeature.Meta.OnBuild); 

		public ServiceFeatureOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceFeatureOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentMethodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentMethodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentMethod.Meta.ObjectType, ShipmentMethod.Meta.OnBuild); 

		public ShipmentMethodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentMethodOnBuildMethodInvocation;
			}
		}
	}public partial class SizeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SizeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Size.Meta.ObjectType, Size.Meta.OnBuild); 

		public SizeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SizeOnBuildMethodInvocation;
			}
		}
	}public partial class SkillOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Skill.Meta.ObjectType, Skill.Meta.OnBuild); 

		public SkillOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillOnBuildMethodInvocation;
			}
		}
	}public partial class SkillLevelOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillLevelOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SkillLevel.Meta.ObjectType, SkillLevel.Meta.OnBuild); 

		public SkillLevelOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillLevelOnBuildMethodInvocation;
			}
		}
	}public partial class SkillRatingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillRatingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SkillRating.Meta.ObjectType, SkillRating.Meta.OnBuild); 

		public SkillRatingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillRatingOnBuildMethodInvocation;
			}
		}
	}public partial class SoftwareFeatureOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SoftwareFeatureOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SoftwareFeature.Meta.ObjectType, SoftwareFeature.Meta.OnBuild); 

		public SoftwareFeatureOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SoftwareFeatureOnBuildMethodInvocation;
			}
		}
	}public partial class TemplatePurposeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TemplatePurposeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TemplatePurpose.Meta.ObjectType, TemplatePurpose.Meta.OnBuild); 

		public TemplatePurposeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplatePurposeOnBuildMethodInvocation;
			}
		}
	}public partial class TermTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TermTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TermType.Meta.ObjectType, TermType.Meta.OnBuild); 

		public TermTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TermTypeOnBuildMethodInvocation;
			}
		}
	}public partial class TimeFrequencyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeFrequencyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TimeFrequency.Meta.ObjectType, TimeFrequency.Meta.OnBuild); 

		public TimeFrequencyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeFrequencyOnBuildMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(UnitOfMeasure.Meta.ObjectType, UnitOfMeasure.Meta.OnBuild); 

		public UnitOfMeasureOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureOnBuildMethodInvocation;
			}
		}
	}public partial class VarianceReasonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VarianceReasonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VarianceReason.Meta.ObjectType, VarianceReason.Meta.OnBuild); 

		public VarianceReasonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VarianceReasonOnBuildMethodInvocation;
			}
		}
	}public partial class VatCalculationMethodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatCalculationMethodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatCalculationMethod.Meta.ObjectType, VatCalculationMethod.Meta.OnBuild); 

		public VatCalculationMethodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatCalculationMethodOnBuildMethodInvocation;
			}
		}
	}public partial class VatRatePurchaseKindOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRatePurchaseKindOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatRatePurchaseKind.Meta.ObjectType, VatRatePurchaseKind.Meta.OnBuild); 

		public VatRatePurchaseKindOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRatePurchaseKindOnBuildMethodInvocation;
			}
		}
	}public partial class VatRateUsageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateUsageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatRateUsage.Meta.ObjectType, VatRateUsage.Meta.OnBuild); 

		public VatRateUsageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateUsageOnBuildMethodInvocation;
			}
		}
	}public partial class VatRegimeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRegimeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatRegime.Meta.ObjectType, VatRegime.Meta.OnBuild); 

		public VatRegimeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRegimeOnBuildMethodInvocation;
			}
		}
	}public partial class VatTariffOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatTariffOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatTariff.Meta.ObjectType, VatTariff.Meta.OnBuild); 

		public VatTariffOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatTariffOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeKindOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeKindOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortTypeKind.Meta.ObjectType, WorkEffortTypeKind.Meta.OnBuild); 

		public WorkEffortTypeKindOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeKindOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPurposeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPurposeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPurpose.Meta.ObjectType, WorkEffortPurpose.Meta.OnBuild); 

		public WorkEffortPurposeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPurposeOnBuildMethodInvocation;
			}
		}
	}public partial class BillOfLadingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BillOfLadingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BillOfLading.Meta.ObjectType, BillOfLading.Meta.OnBuild); 

		public BillOfLadingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillOfLadingOnBuildMethodInvocation;
			}
		}
	}public partial class EngineeringDocumentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringDocumentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringDocument.Meta.ObjectType, EngineeringDocument.Meta.OnBuild); 

		public EngineeringDocumentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringDocumentOnBuildMethodInvocation;
			}
		}
	}public partial class ExportDocumentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExportDocumentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ExportDocument.Meta.ObjectType, ExportDocument.Meta.OnBuild); 

		public ExportDocumentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExportDocumentOnBuildMethodInvocation;
			}
		}
	}public partial class HazardousMaterialsDocumentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HazardousMaterialsDocumentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(HazardousMaterialsDocument.Meta.ObjectType, HazardousMaterialsDocument.Meta.OnBuild); 

		public HazardousMaterialsDocumentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HazardousMaterialsDocumentOnBuildMethodInvocation;
			}
		}
	}public partial class ManifestOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManifestOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Manifest.Meta.ObjectType, Manifest.Meta.OnBuild); 

		public ManifestOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManifestOnBuildMethodInvocation;
			}
		}
	}public partial class MarketingMaterialOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingMaterialOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(MarketingMaterial.Meta.ObjectType, MarketingMaterial.Meta.OnBuild); 

		public MarketingMaterialOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingMaterialOnBuildMethodInvocation;
			}
		}
	}public partial class PackagingSlipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingSlipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PackagingSlip.Meta.ObjectType, PackagingSlip.Meta.OnBuild); 

		public PackagingSlipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingSlipOnBuildMethodInvocation;
			}
		}
	}public partial class ProductDrawingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDrawingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductDrawing.Meta.ObjectType, ProductDrawing.Meta.OnBuild); 

		public ProductDrawingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDrawingOnBuildMethodInvocation;
			}
		}
	}public partial class ProductModelOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductModelOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductModel.Meta.ObjectType, ProductModel.Meta.OnBuild); 

		public ProductModelOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductModelOnBuildMethodInvocation;
			}
		}
	}public partial class TaxDocumentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDocumentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TaxDocument.Meta.ObjectType, TaxDocument.Meta.OnBuild); 

		public TaxDocumentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDocumentOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoice.Meta.ObjectType, PurchaseInvoice.Meta.OnBuild); 

		public PurchaseInvoiceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoice.Meta.ObjectType, SalesInvoice.Meta.OnBuild); 

		public SalesInvoiceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.OnBuild); 

		public PurchaseOrderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.OnBuild); 

		public SalesOrderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturn.Meta.ObjectType, CustomerReturn.Meta.OnBuild); 

		public CustomerReturnOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.OnBuild); 

		public CustomerShipmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentOnBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DropShipment.Meta.ObjectType, DropShipment.Meta.OnBuild); 

		public DropShipmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturn.Meta.ObjectType, PurchaseReturn.Meta.OnBuild); 

		public PurchaseReturnOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipment.Meta.ObjectType, PurchaseShipment.Meta.OnBuild); 

		public PurchaseShipmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentOnBuildMethodInvocation;
			}
		}
	}public partial class TransferOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Transfer.Meta.ObjectType, Transfer.Meta.OnBuild); 

		public TransferOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferOnBuildMethodInvocation;
			}
		}
	}public partial class PickListOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PickList.Meta.ObjectType, PickList.Meta.OnBuild); 

		public PickListOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListOnBuildMethodInvocation;
			}
		}
	}public partial class AccountingPeriodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccountingPeriod.Meta.ObjectType, AccountingPeriod.Meta.OnBuild); 

		public AccountingPeriodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodOnBuildMethodInvocation;
			}
		}
	}public partial class CapitalBudgetOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CapitalBudget.Meta.ObjectType, CapitalBudget.Meta.OnBuild); 

		public CapitalBudgetOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetOnBuildMethodInvocation;
			}
		}
	}public partial class OperatingBudgetOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OperatingBudget.Meta.ObjectType, OperatingBudget.Meta.OnBuild); 

		public OperatingBudgetOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetOnBuildMethodInvocation;
			}
		}
	}public partial class EmailCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmailCommunication.Meta.ObjectType, EmailCommunication.Meta.OnBuild); 

		public EmailCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(FaceToFaceCommunication.Meta.ObjectType, FaceToFaceCommunication.Meta.OnBuild); 

		public FaceToFaceCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class FaxCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(FaxCommunication.Meta.ObjectType, FaxCommunication.Meta.OnBuild); 

		public FaxCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(LetterCorrespondence.Meta.ObjectType, LetterCorrespondence.Meta.OnBuild); 

		public LetterCorrespondenceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceOnBuildMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PhoneCommunication.Meta.ObjectType, PhoneCommunication.Meta.OnBuild); 

		public PhoneCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WebSiteCommunication.Meta.ObjectType, WebSiteCommunication.Meta.OnBuild); 

		public WebSiteCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItem.Meta.ObjectType, NonSerializedInventoryItem.Meta.OnBuild); 

		public NonSerializedInventoryItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemOnBuildMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItem.Meta.ObjectType, SerializedInventoryItem.Meta.OnBuild); 

		public SerializedInventoryItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItem.Meta.ObjectType, PurchaseInvoiceItem.Meta.OnBuild); 

		public PurchaseInvoiceItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItem.Meta.ObjectType, SalesInvoiceItem.Meta.OnBuild); 

		public SalesInvoiceItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.OnBuild); 

		public PurchaseOrderItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.OnBuild); 

		public SalesOrderItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemOnBuildMethodInvocation;
			}
		}
	}public partial class ConstraintSpecificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ConstraintSpecificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ConstraintSpecification.Meta.ObjectType, ConstraintSpecification.Meta.OnBuild); 

		public ConstraintSpecificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ConstraintSpecificationOnBuildMethodInvocation;
			}
		}
	}public partial class OperatingConditionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingConditionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OperatingCondition.Meta.ObjectType, OperatingCondition.Meta.OnBuild); 

		public OperatingConditionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingConditionOnBuildMethodInvocation;
			}
		}
	}public partial class PerformanceSpecificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceSpecificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceSpecification.Meta.ObjectType, PerformanceSpecification.Meta.OnBuild); 

		public PerformanceSpecificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceSpecificationOnBuildMethodInvocation;
			}
		}
	}public partial class TestingRequirementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TestingRequirementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TestingRequirement.Meta.ObjectType, TestingRequirement.Meta.OnBuild); 

		public TestingRequirementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TestingRequirementOnBuildMethodInvocation;
			}
		}
	}public partial class ToleranceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ToleranceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Tolerance.Meta.ObjectType, Tolerance.Meta.OnBuild); 

		public ToleranceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToleranceOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerRequirementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRequirementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRequirement.Meta.ObjectType, CustomerRequirement.Meta.OnBuild); 

		public CustomerRequirementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRequirementOnBuildMethodInvocation;
			}
		}
	}public partial class InternalRequirementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalRequirementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InternalRequirement.Meta.ObjectType, InternalRequirement.Meta.OnBuild); 

		public InternalRequirementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalRequirementOnBuildMethodInvocation;
			}
		}
	}public partial class ProductRequirementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRequirementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductRequirement.Meta.ObjectType, ProductRequirement.Meta.OnBuild); 

		public ProductRequirementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRequirementOnBuildMethodInvocation;
			}
		}
	}public partial class ProjectRequirementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectRequirementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProjectRequirement.Meta.ObjectType, ProjectRequirement.Meta.OnBuild); 

		public ProjectRequirementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectRequirementOnBuildMethodInvocation;
			}
		}
	}public partial class ResourceRequirementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResourceRequirementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ResourceRequirement.Meta.ObjectType, ResourceRequirement.Meta.OnBuild); 

		public ResourceRequirementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResourceRequirementOnBuildMethodInvocation;
			}
		}
	}public partial class WorkRequirementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkRequirementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkRequirement.Meta.ObjectType, WorkRequirement.Meta.OnBuild); 

		public WorkRequirementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkRequirementOnBuildMethodInvocation;
			}
		}
	}public partial class ActivityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Activity.Meta.ObjectType, Activity.Meta.OnBuild); 

		public ActivityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityOnBuildMethodInvocation;
			}
		}
	}public partial class MaintenanceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MaintenanceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Maintenance.Meta.ObjectType, Maintenance.Meta.OnBuild); 

		public MaintenanceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaintenanceOnBuildMethodInvocation;
			}
		}
	}public partial class PhaseOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PhaseOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Phase.Meta.ObjectType, Phase.Meta.OnBuild); 

		public PhaseOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhaseOnBuildMethodInvocation;
			}
		}
	}public partial class ProductionRunOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductionRunOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductionRun.Meta.ObjectType, ProductionRun.Meta.OnBuild); 

		public ProductionRunOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductionRunOnBuildMethodInvocation;
			}
		}
	}public partial class ProgramOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProgramOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Program.Meta.ObjectType, Program.Meta.OnBuild); 

		public ProgramOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProgramOnBuildMethodInvocation;
			}
		}
	}public partial class ProjectOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Project.Meta.ObjectType, Project.Meta.OnBuild); 

		public ProjectOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectOnBuildMethodInvocation;
			}
		}
	}public partial class ResearchOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResearchOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Research.Meta.ObjectType, Research.Meta.OnBuild); 

		public ResearchOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResearchOnBuildMethodInvocation;
			}
		}
	}public partial class TaskOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Task.Meta.ObjectType, Task.Meta.OnBuild); 

		public TaskOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskOnBuildMethodInvocation;
			}
		}
	}public partial class WorkFlowOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkFlowOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkFlow.Meta.ObjectType, WorkFlow.Meta.OnBuild); 

		public WorkFlowOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkFlowOnBuildMethodInvocation;
			}
		}
	}public partial class CaseOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Case.Meta.ObjectType, Case.Meta.OnBuild); 

		public CaseOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseOnBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChange.Meta.ObjectType, EngineeringChange.Meta.OnBuild); 

		public EngineeringChangeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeOnBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntry.Meta.ObjectType, JournalEntry.Meta.OnBuild); 

		public JournalEntryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryOnBuildMethodInvocation;
			}
		}
	}public partial class PersonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.OnBuild); 

		public PersonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnBuildMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AutomatedAgent.Meta.ObjectType, AutomatedAgent.Meta.OnBuild); 

		public AutomatedAgentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnBuildMethodInvocation;
			}
		}
	}public partial class CreditLineOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditLineOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CreditLine.Meta.ObjectType, CreditLine.Meta.OnBuild); 

		public CreditLineOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditLineOnBuildMethodInvocation;
			}
		}
	}public partial class DisbursementAccountingTransactionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementAccountingTransactionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DisbursementAccountingTransaction.Meta.ObjectType, DisbursementAccountingTransaction.Meta.OnBuild); 

		public DisbursementAccountingTransactionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementAccountingTransactionOnBuildMethodInvocation;
			}
		}
	}public partial class NoteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NoteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Note.Meta.ObjectType, Note.Meta.OnBuild); 

		public NoteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NoteOnBuildMethodInvocation;
			}
		}
	}public partial class ObligationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ObligationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Obligation.Meta.ObjectType, Obligation.Meta.OnBuild); 

		public ObligationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ObligationOnBuildMethodInvocation;
			}
		}
	}public partial class ReceiptAccountingTransactionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptAccountingTransactionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ReceiptAccountingTransaction.Meta.ObjectType, ReceiptAccountingTransaction.Meta.OnBuild); 

		public ReceiptAccountingTransactionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptAccountingTransactionOnBuildMethodInvocation;
			}
		}
	}public partial class SalesAccountingTransactionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAccountingTransactionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesAccountingTransaction.Meta.ObjectType, SalesAccountingTransaction.Meta.OnBuild); 

		public SalesAccountingTransactionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAccountingTransactionOnBuildMethodInvocation;
			}
		}
	}public partial class TaxDueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TaxDue.Meta.ObjectType, TaxDue.Meta.OnBuild); 

		public TaxDueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDueOnBuildMethodInvocation;
			}
		}
	}public partial class AmortizationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AmortizationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Amortization.Meta.ObjectType, Amortization.Meta.OnBuild); 

		public AmortizationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmortizationOnBuildMethodInvocation;
			}
		}
	}public partial class CapitalizationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalizationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Capitalization.Meta.ObjectType, Capitalization.Meta.OnBuild); 

		public CapitalizationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalizationOnBuildMethodInvocation;
			}
		}
	}public partial class DepreciationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Depreciation.Meta.ObjectType, Depreciation.Meta.OnBuild); 

		public DepreciationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationOnBuildMethodInvocation;
			}
		}
	}public partial class ItemVarianceAccountingTransactionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ItemVarianceAccountingTransactionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ItemVarianceAccountingTransaction.Meta.ObjectType, ItemVarianceAccountingTransaction.Meta.OnBuild); 

		public ItemVarianceAccountingTransactionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemVarianceAccountingTransactionOnBuildMethodInvocation;
			}
		}
	}public partial class ClientAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ClientAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ClientAgreement.Meta.ObjectType, ClientAgreement.Meta.OnBuild); 

		public ClientAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentAgreement.Meta.ObjectType, EmploymentAgreement.Meta.OnBuild); 

		public EmploymentAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseAgreement.Meta.ObjectType, PurchaseAgreement.Meta.OnBuild); 

		public PurchaseAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class SalesAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesAgreement.Meta.ObjectType, SalesAgreement.Meta.OnBuild); 

		public SalesAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class SubContractorAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SubContractorAgreement.Meta.ObjectType, SubContractorAgreement.Meta.OnBuild); 

		public SubContractorAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class AgreementExhibitOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementExhibitOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AgreementExhibit.Meta.ObjectType, AgreementExhibit.Meta.OnBuild); 

		public AgreementExhibitOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementExhibitOnBuildMethodInvocation;
			}
		}
	}public partial class AgreementPricingProgramOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementPricingProgramOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AgreementPricingProgram.Meta.ObjectType, AgreementPricingProgram.Meta.OnBuild); 

		public AgreementPricingProgramOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementPricingProgramOnBuildMethodInvocation;
			}
		}
	}public partial class AgreementSectionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementSectionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AgreementSection.Meta.ObjectType, AgreementSection.Meta.OnBuild); 

		public AgreementSectionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementSectionOnBuildMethodInvocation;
			}
		}
	}public partial class SubAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SubAgreement.Meta.ObjectType, SubAgreement.Meta.OnBuild); 

		public SubAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class FinancialTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(FinancialTerm.Meta.ObjectType, FinancialTerm.Meta.OnBuild); 

		public FinancialTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialTermOnBuildMethodInvocation;
			}
		}
	}public partial class IncentiveOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IncentiveOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Incentive.Meta.ObjectType, Incentive.Meta.OnBuild); 

		public IncentiveOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncentiveOnBuildMethodInvocation;
			}
		}
	}public partial class InvoiceTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceTerm.Meta.ObjectType, InvoiceTerm.Meta.OnBuild); 

		public InvoiceTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermOnBuildMethodInvocation;
			}
		}
	}public partial class LegalTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LegalTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(LegalTerm.Meta.ObjectType, LegalTerm.Meta.OnBuild); 

		public LegalTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalTermOnBuildMethodInvocation;
			}
		}
	}public partial class ThresholdOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThresholdOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Threshold.Meta.ObjectType, Threshold.Meta.OnBuild); 

		public ThresholdOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThresholdOnBuildMethodInvocation;
			}
		}
	}public partial class CountryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Country.Meta.ObjectType, Country.Meta.OnBuild); 

		public CountryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnBuildMethodInvocation;
			}
		}
	}public partial class CountyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(County.Meta.ObjectType, County.Meta.OnBuild); 

		public CountyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountyOnBuildMethodInvocation;
			}
		}
	}public partial class ProvinceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProvinceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Province.Meta.ObjectType, Province.Meta.OnBuild); 

		public ProvinceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProvinceOnBuildMethodInvocation;
			}
		}
	}public partial class StateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(State.Meta.ObjectType, State.Meta.OnBuild); 

		public StateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StateOnBuildMethodInvocation;
			}
		}
	}public partial class TerritoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TerritoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Territory.Meta.ObjectType, Territory.Meta.OnBuild); 

		public TerritoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TerritoryOnBuildMethodInvocation;
			}
		}
	}public partial class EmailAddressOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailAddressOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmailAddress.Meta.ObjectType, EmailAddress.Meta.OnBuild); 

		public EmailAddressOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailAddressOnBuildMethodInvocation;
			}
		}
	}public partial class WebAddressOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WebAddressOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WebAddress.Meta.ObjectType, WebAddress.Meta.OnBuild); 

		public WebAddressOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebAddressOnBuildMethodInvocation;
			}
		}
	}public partial class PostalAddressOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalAddressOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PostalAddress.Meta.ObjectType, PostalAddress.Meta.OnBuild); 

		public PostalAddressOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalAddressOnBuildMethodInvocation;
			}
		}
	}public partial class TelecommunicationsNumberOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TelecommunicationsNumberOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TelecommunicationsNumber.Meta.ObjectType, TelecommunicationsNumber.Meta.OnBuild); 

		public TelecommunicationsNumberOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TelecommunicationsNumberOnBuildMethodInvocation;
			}
		}
	}public partial class BarrelOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BarrelOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Barrel.Meta.ObjectType, Barrel.Meta.OnBuild); 

		public BarrelOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BarrelOnBuildMethodInvocation;
			}
		}
	}public partial class BinOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BinOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Bin.Meta.ObjectType, Bin.Meta.OnBuild); 

		public BinOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BinOnBuildMethodInvocation;
			}
		}
	}public partial class RoomOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoomOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Room.Meta.ObjectType, Room.Meta.OnBuild); 

		public RoomOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoomOnBuildMethodInvocation;
			}
		}
	}public partial class ShelfOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShelfOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Shelf.Meta.ObjectType, Shelf.Meta.OnBuild); 

		public ShelfOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShelfOnBuildMethodInvocation;
			}
		}
	}public partial class CityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(City.Meta.ObjectType, City.Meta.OnBuild); 

		public CityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CityOnBuildMethodInvocation;
			}
		}
	}public partial class PostalCodeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalCodeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PostalCode.Meta.ObjectType, PostalCode.Meta.OnBuild); 

		public PostalCodeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalCodeOnBuildMethodInvocation;
			}
		}
	}public partial class ActivityUsageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityUsageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ActivityUsage.Meta.ObjectType, ActivityUsage.Meta.OnBuild); 

		public ActivityUsageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityUsageOnBuildMethodInvocation;
			}
		}
	}public partial class TimePeriodUsageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimePeriodUsageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TimePeriodUsage.Meta.ObjectType, TimePeriodUsage.Meta.OnBuild); 

		public TimePeriodUsageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimePeriodUsageOnBuildMethodInvocation;
			}
		}
	}public partial class VolumeUsageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VolumeUsageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VolumeUsage.Meta.ObjectType, VolumeUsage.Meta.OnBuild); 

		public VolumeUsageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VolumeUsageOnBuildMethodInvocation;
			}
		}
	}public partial class CustomEngagementItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomEngagementItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomEngagementItem.Meta.ObjectType, CustomEngagementItem.Meta.OnBuild); 

		public CustomEngagementItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomEngagementItemOnBuildMethodInvocation;
			}
		}
	}public partial class DeliverableOrderItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOrderItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableOrderItem.Meta.ObjectType, DeliverableOrderItem.Meta.OnBuild); 

		public DeliverableOrderItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOrderItemOnBuildMethodInvocation;
			}
		}
	}public partial class GoodOrderItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOrderItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(GoodOrderItem.Meta.ObjectType, GoodOrderItem.Meta.OnBuild); 

		public GoodOrderItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOrderItemOnBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalPlacementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalPlacementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalPlacement.Meta.ObjectType, ProfessionalPlacement.Meta.OnBuild); 

		public ProfessionalPlacementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalPlacementOnBuildMethodInvocation;
			}
		}
	}public partial class StandardServiceOrderItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StandardServiceOrderItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(StandardServiceOrderItem.Meta.ObjectType, StandardServiceOrderItem.Meta.OnBuild); 

		public StandardServiceOrderItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StandardServiceOrderItemOnBuildMethodInvocation;
			}
		}
	}public partial class EstimatedLaborCostOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedLaborCostOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedLaborCost.Meta.ObjectType, EstimatedLaborCost.Meta.OnBuild); 

		public EstimatedLaborCostOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedLaborCostOnBuildMethodInvocation;
			}
		}
	}public partial class EstimatedMaterialCostOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedMaterialCostOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedMaterialCost.Meta.ObjectType, EstimatedMaterialCost.Meta.OnBuild); 

		public EstimatedMaterialCostOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedMaterialCostOnBuildMethodInvocation;
			}
		}
	}public partial class EstimatedOtherCostOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedOtherCostOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedOtherCost.Meta.ObjectType, EstimatedOtherCost.Meta.OnBuild); 

		public EstimatedOtherCostOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedOtherCostOnBuildMethodInvocation;
			}
		}
	}public partial class BuildingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BuildingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Building.Meta.ObjectType, Building.Meta.OnBuild); 

		public BuildingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BuildingOnBuildMethodInvocation;
			}
		}
	}public partial class FloorOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FloorOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Floor.Meta.ObjectType, Floor.Meta.OnBuild); 

		public FloorOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FloorOnBuildMethodInvocation;
			}
		}
	}public partial class OfficeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OfficeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Office.Meta.ObjectType, Office.Meta.OnBuild); 

		public OfficeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OfficeOnBuildMethodInvocation;
			}
		}
	}public partial class PlantOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PlantOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Plant.Meta.ObjectType, Plant.Meta.OnBuild); 

		public PlantOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlantOnBuildMethodInvocation;
			}
		}
	}public partial class WarehouseOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WarehouseOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Warehouse.Meta.ObjectType, Warehouse.Meta.OnBuild); 

		public WarehouseOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WarehouseOnBuildMethodInvocation;
			}
		}
	}public partial class BankAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BankAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BankAccount.Meta.ObjectType, BankAccount.Meta.OnBuild); 

		public BankAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankAccountOnBuildMethodInvocation;
			}
		}
	}public partial class CreditCardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CreditCard.Meta.ObjectType, CreditCard.Meta.OnBuild); 

		public CreditCardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardOnBuildMethodInvocation;
			}
		}
	}public partial class InvestmentAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvestmentAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InvestmentAccount.Meta.ObjectType, InvestmentAccount.Meta.OnBuild); 

		public InvestmentAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvestmentAccountOnBuildMethodInvocation;
			}
		}
	}public partial class OwnBankAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OwnBankAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OwnBankAccount.Meta.ObjectType, OwnBankAccount.Meta.OnBuild); 

		public OwnBankAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnBankAccountOnBuildMethodInvocation;
			}
		}
	}public partial class OwnCreditCardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OwnCreditCardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OwnCreditCard.Meta.ObjectType, OwnCreditCard.Meta.OnBuild); 

		public OwnCreditCardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnCreditCardOnBuildMethodInvocation;
			}
		}
	}public partial class AccountAdjustmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountAdjustmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccountAdjustment.Meta.ObjectType, AccountAdjustment.Meta.OnBuild); 

		public AccountAdjustmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountAdjustmentOnBuildMethodInvocation;
			}
		}
	}public partial class DepositOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepositOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Deposit.Meta.ObjectType, Deposit.Meta.OnBuild); 

		public DepositOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepositOnBuildMethodInvocation;
			}
		}
	}public partial class FinancialAccountAdjustmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialAccountAdjustmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(FinancialAccountAdjustment.Meta.ObjectType, FinancialAccountAdjustment.Meta.OnBuild); 

		public FinancialAccountAdjustmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialAccountAdjustmentOnBuildMethodInvocation;
			}
		}
	}public partial class WithdrawalOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WithdrawalOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Withdrawal.Meta.ObjectType, Withdrawal.Meta.OnBuild); 

		public WithdrawalOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WithdrawalOnBuildMethodInvocation;
			}
		}
	}public partial class EquipmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EquipmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Equipment.Meta.ObjectType, Equipment.Meta.OnBuild); 

		public EquipmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EquipmentOnBuildMethodInvocation;
			}
		}
	}public partial class PropertyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PropertyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Property.Meta.ObjectType, Property.Meta.OnBuild); 

		public PropertyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PropertyOnBuildMethodInvocation;
			}
		}
	}public partial class VehicleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VehicleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Vehicle.Meta.ObjectType, Vehicle.Meta.OnBuild); 

		public VehicleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VehicleOnBuildMethodInvocation;
			}
		}
	}public partial class RegionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RegionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Region.Meta.ObjectType, Region.Meta.OnBuild); 

		public RegionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RegionOnBuildMethodInvocation;
			}
		}
	}public partial class SalesTerritoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesTerritoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesTerritory.Meta.ObjectType, SalesTerritory.Meta.OnBuild); 

		public SalesTerritoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesTerritoryOnBuildMethodInvocation;
			}
		}
	}public partial class ServiceTerritoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceTerritoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ServiceTerritory.Meta.ObjectType, ServiceTerritory.Meta.OnBuild); 

		public ServiceTerritoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceTerritoryOnBuildMethodInvocation;
			}
		}
	}public partial class ManufacturingConfigurationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingConfigurationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturingConfiguration.Meta.ObjectType, ManufacturingConfiguration.Meta.OnBuild); 

		public ManufacturingConfigurationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingConfigurationOnBuildMethodInvocation;
			}
		}
	}public partial class ServiceConfigurationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceConfigurationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ServiceConfiguration.Meta.ObjectType, ServiceConfiguration.Meta.OnBuild); 

		public ServiceConfigurationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceConfigurationOnBuildMethodInvocation;
			}
		}
	}public partial class CurrencyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Currency.Meta.ObjectType, Currency.Meta.OnBuild); 

		public CurrencyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnBuildMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DiscountAdjustment.Meta.ObjectType, DiscountAdjustment.Meta.OnBuild); 

		public DiscountAdjustmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentOnBuildMethodInvocation;
			}
		}
	}public partial class FeeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FeeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Fee.Meta.ObjectType, Fee.Meta.OnBuild); 

		public FeeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FeeOnBuildMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingChargeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingChargeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShippingAndHandlingCharge.Meta.ObjectType, ShippingAndHandlingCharge.Meta.OnBuild); 

		public ShippingAndHandlingChargeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingChargeOnBuildMethodInvocation;
			}
		}
	}public partial class SurchargeAdjustmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeAdjustmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SurchargeAdjustment.Meta.ObjectType, SurchargeAdjustment.Meta.OnBuild); 

		public SurchargeAdjustmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeAdjustmentOnBuildMethodInvocation;
			}
		}
	}public partial class FinishedGoodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinishedGoodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(FinishedGood.Meta.ObjectType, FinishedGood.Meta.OnBuild); 

		public FinishedGoodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinishedGoodOnBuildMethodInvocation;
			}
		}
	}public partial class RawMaterialOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RawMaterialOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RawMaterial.Meta.ObjectType, RawMaterial.Meta.OnBuild); 

		public RawMaterialOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RawMaterialOnBuildMethodInvocation;
			}
		}
	}public partial class SubAssemblyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubAssemblyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SubAssembly.Meta.ObjectType, SubAssembly.Meta.OnBuild); 

		public SubAssemblyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAssemblyOnBuildMethodInvocation;
			}
		}
	}public partial class EngineeringBomOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringBomOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringBom.Meta.ObjectType, EngineeringBom.Meta.OnBuild); 

		public EngineeringBomOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringBomOnBuildMethodInvocation;
			}
		}
	}public partial class ManufacturingBomOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingBomOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturingBom.Meta.ObjectType, ManufacturingBom.Meta.OnBuild); 

		public ManufacturingBomOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingBomOnBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisation.Meta.ObjectType, InternalOrganisation.Meta.OnBuild); 

		public InternalOrganisationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.OnBuild); 

		public OrganisationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnBuildMethodInvocation;
			}
		}
	}public partial class IndustryClassificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IndustryClassificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(IndustryClassification.Meta.ObjectType, IndustryClassification.Meta.OnBuild); 

		public IndustryClassificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IndustryClassificationOnBuildMethodInvocation;
			}
		}
	}public partial class ClientRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ClientRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ClientRelationship.Meta.ObjectType, ClientRelationship.Meta.OnBuild); 

		public ClientRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRelationship.Meta.ObjectType, CustomerRelationship.Meta.OnBuild); 

		public CustomerRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class DistributionChannelRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DistributionChannelRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DistributionChannelRelationship.Meta.ObjectType, DistributionChannelRelationship.Meta.OnBuild); 

		public DistributionChannelRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DistributionChannelRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Employment.Meta.ObjectType, Employment.Meta.OnBuild); 

		public EmploymentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationContactRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationContactRelationship.Meta.ObjectType, OrganisationContactRelationship.Meta.OnBuild); 

		public OrganisationContactRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationRollUpOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRollUpOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationRollUp.Meta.ObjectType, OrganisationRollUp.Meta.OnBuild); 

		public OrganisationRollUpOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRollUpOnBuildMethodInvocation;
			}
		}
	}public partial class PartnershipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartnershipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Partnership.Meta.ObjectType, Partnership.Meta.OnBuild); 

		public PartnershipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartnershipOnBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalServicesRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalServicesRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalServicesRelationship.Meta.ObjectType, ProfessionalServicesRelationship.Meta.OnBuild); 

		public ProfessionalServicesRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalServicesRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRelationship.Meta.ObjectType, SalesRepRelationship.Meta.OnBuild); 

		public SalesRepRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class SubContractorRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SubContractorRelationship.Meta.ObjectType, SubContractorRelationship.Meta.OnBuild); 

		public SubContractorRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class SupplierRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SupplierRelationship.Meta.ObjectType, SupplierRelationship.Meta.OnBuild); 

		public SupplierRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class ProspectRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProspectRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProspectRelationship.Meta.ObjectType, ProspectRelationship.Meta.OnBuild); 

		public ProspectRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProspectRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class DisbursementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Disbursement.Meta.ObjectType, Disbursement.Meta.OnBuild); 

		public DisbursementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementOnBuildMethodInvocation;
			}
		}
	}public partial class PayCheckOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayCheckOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PayCheck.Meta.ObjectType, PayCheck.Meta.OnBuild); 

		public PayCheckOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayCheckOnBuildMethodInvocation;
			}
		}
	}public partial class ReceiptOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Receipt.Meta.ObjectType, Receipt.Meta.OnBuild); 

		public ReceiptOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptOnBuildMethodInvocation;
			}
		}
	}public partial class CashOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CashOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Cash.Meta.ObjectType, Cash.Meta.OnBuild); 

		public CashOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CashOnBuildMethodInvocation;
			}
		}
	}public partial class BasePriceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BasePrice.Meta.ObjectType, BasePrice.Meta.OnBuild); 

		public BasePriceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceOnBuildMethodInvocation;
			}
		}
	}public partial class DiscountComponentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountComponentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DiscountComponent.Meta.ObjectType, DiscountComponent.Meta.OnBuild); 

		public DiscountComponentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountComponentOnBuildMethodInvocation;
			}
		}
	}public partial class ManufacturerSuggestedRetailPriceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturerSuggestedRetailPriceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturerSuggestedRetailPrice.Meta.ObjectType, ManufacturerSuggestedRetailPrice.Meta.OnBuild); 

		public ManufacturerSuggestedRetailPriceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturerSuggestedRetailPriceOnBuildMethodInvocation;
			}
		}
	}public partial class OneTimeChargeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OneTimeChargeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OneTimeCharge.Meta.ObjectType, OneTimeCharge.Meta.OnBuild); 

		public OneTimeChargeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneTimeChargeOnBuildMethodInvocation;
			}
		}
	}public partial class RecurringChargeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RecurringChargeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RecurringCharge.Meta.ObjectType, RecurringCharge.Meta.OnBuild); 

		public RecurringChargeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RecurringChargeOnBuildMethodInvocation;
			}
		}
	}public partial class SurchargeComponentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeComponentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SurchargeComponent.Meta.ObjectType, SurchargeComponent.Meta.OnBuild); 

		public SurchargeComponentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeComponentOnBuildMethodInvocation;
			}
		}
	}public partial class UtilizationChargeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UtilizationChargeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(UtilizationCharge.Meta.ObjectType, UtilizationCharge.Meta.OnBuild); 

		public UtilizationChargeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UtilizationChargeOnBuildMethodInvocation;
			}
		}
	}public partial class DeliverableBasedServiceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableBasedServiceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableBasedService.Meta.ObjectType, DeliverableBasedService.Meta.OnBuild); 

		public DeliverableBasedServiceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableBasedServiceOnBuildMethodInvocation;
			}
		}
	}public partial class TimeAndMaterialsServiceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeAndMaterialsServiceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TimeAndMaterialsService.Meta.ObjectType, TimeAndMaterialsService.Meta.OnBuild); 

		public TimeAndMaterialsServiceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeAndMaterialsServiceOnBuildMethodInvocation;
			}
		}
	}public partial class GoodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Good.Meta.ObjectType, Good.Meta.OnBuild); 

		public GoodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOnBuildMethodInvocation;
			}
		}
	}public partial class MarketingPackageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingPackageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(MarketingPackage.Meta.ObjectType, MarketingPackage.Meta.OnBuild); 

		public MarketingPackageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingPackageOnBuildMethodInvocation;
			}
		}
	}public partial class ProductConfigurationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductConfigurationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductConfiguration.Meta.ObjectType, ProductConfiguration.Meta.OnBuild); 

		public ProductConfigurationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductConfigurationOnBuildMethodInvocation;
			}
		}
	}public partial class DimensionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DimensionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Dimension.Meta.ObjectType, Dimension.Meta.OnBuild); 

		public DimensionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DimensionOnBuildMethodInvocation;
			}
		}
	}public partial class ProductQuoteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductQuote.Meta.ObjectType, ProductQuote.Meta.OnBuild); 

		public ProductQuoteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteOnBuildMethodInvocation;
			}
		}
	}public partial class ProposalOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Proposal.Meta.ObjectType, Proposal.Meta.OnBuild); 

		public ProposalOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalOnBuildMethodInvocation;
			}
		}
	}public partial class StatementOfWorkOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(StatementOfWork.Meta.ObjectType, StatementOfWork.Meta.OnBuild); 

		public StatementOfWorkOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkOnBuildMethodInvocation;
			}
		}
	}public partial class RequestForInformationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequestForInformation.Meta.ObjectType, RequestForInformation.Meta.OnBuild); 

		public RequestForInformationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationOnBuildMethodInvocation;
			}
		}
	}public partial class RequestForProposalOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequestForProposal.Meta.ObjectType, RequestForProposal.Meta.OnBuild); 

		public RequestForProposalOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalOnBuildMethodInvocation;
			}
		}
	}public partial class RequestForQuoteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequestForQuote.Meta.ObjectType, RequestForQuote.Meta.OnBuild); 

		public RequestForQuoteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteOnBuildMethodInvocation;
			}
		}
	}public partial class DeliverableTurnoverOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTurnoverOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableTurnover.Meta.ObjectType, DeliverableTurnover.Meta.OnBuild); 

		public DeliverableTurnoverOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTurnoverOnBuildMethodInvocation;
			}
		}
	}public partial class ExpenseEntryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExpenseEntryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ExpenseEntry.Meta.ObjectType, ExpenseEntry.Meta.OnBuild); 

		public ExpenseEntryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExpenseEntryOnBuildMethodInvocation;
			}
		}
	}public partial class MaterialsUsageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MaterialsUsageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(MaterialsUsage.Meta.ObjectType, MaterialsUsage.Meta.OnBuild); 

		public MaterialsUsageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaterialsUsageOnBuildMethodInvocation;
			}
		}
	}public partial class TimeEntryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeEntryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TimeEntry.Meta.ObjectType, TimeEntry.Meta.OnBuild); 

		public TimeEntryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeEntryOnBuildMethodInvocation;
			}
		}
	}public partial class AccessControlOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.OnBuild); 

		public AccessControlOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnBuildMethodInvocation;
			}
		}
	}public partial class LanguageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Language.Meta.ObjectType, Language.Meta.OnBuild); 

		public LanguageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnBuildMethodInvocation;
			}
		}
	}public partial class LocaleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Locale.Meta.ObjectType, Locale.Meta.OnBuild); 

		public LocaleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnBuildMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(LocalisedText.Meta.ObjectType, LocalisedText.Meta.OnBuild); 

		public LocalisedTextOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnBuildMethodInvocation;
			}
		}
	}public partial class MediaOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.OnBuild); 

		public MediaOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnBuildMethodInvocation;
			}
		}
	}public partial class MediaTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(MediaType.Meta.ObjectType, MediaType.Meta.OnBuild); 

		public MediaTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaTypeOnBuildMethodInvocation;
			}
		}
	}public partial class PermissionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.OnBuild); 

		public PermissionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnBuildMethodInvocation;
			}
		}
	}public partial class PrintQueueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PrintQueueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PrintQueue.Meta.ObjectType, PrintQueue.Meta.OnBuild); 

		public PrintQueueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PrintQueueOnBuildMethodInvocation;
			}
		}
	}public partial class RoleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Role.Meta.ObjectType, Role.Meta.OnBuild); 

		public RoleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnBuildMethodInvocation;
			}
		}
	}public partial class SingletonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Singleton.Meta.ObjectType, Singleton.Meta.OnBuild); 

		public SingletonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnBuildMethodInvocation;
			}
		}
	}public partial class UserGroupOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(UserGroup.Meta.ObjectType, UserGroup.Meta.OnBuild); 

		public UserGroupOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnBuildMethodInvocation;
			}
		}
	}public partial class AccountingTransactionDetailOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionDetailOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionDetail.Meta.ObjectType, AccountingTransactionDetail.Meta.OnBuild); 

		public AccountingTransactionDetailOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionDetailOnBuildMethodInvocation;
			}
		}
	}public partial class AccountingTransactionNumberOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionNumberOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionNumber.Meta.ObjectType, AccountingTransactionNumber.Meta.OnBuild); 

		public AccountingTransactionNumberOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionNumberOnBuildMethodInvocation;
			}
		}
	}public partial class AddendumOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AddendumOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Addendum.Meta.ObjectType, Addendum.Meta.OnBuild); 

		public AddendumOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AddendumOnBuildMethodInvocation;
			}
		}
	}public partial class AmountDueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AmountDueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(AmountDue.Meta.ObjectType, AmountDue.Meta.OnBuild); 

		public AmountDueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmountDueOnBuildMethodInvocation;
			}
		}
	}public partial class BankOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BankOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Bank.Meta.ObjectType, Bank.Meta.OnBuild); 

		public BankOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankOnBuildMethodInvocation;
			}
		}
	}public partial class BenefitOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BenefitOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Benefit.Meta.ObjectType, Benefit.Meta.OnBuild); 

		public BenefitOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BenefitOnBuildMethodInvocation;
			}
		}
	}public partial class BillingAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BillingAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BillingAccount.Meta.ObjectType, BillingAccount.Meta.OnBuild); 

		public BillingAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillingAccountOnBuildMethodInvocation;
			}
		}
	}public partial class BrandOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BrandOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Brand.Meta.ObjectType, Brand.Meta.OnBuild); 

		public BrandOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BrandOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetItem.Meta.ObjectType, BudgetItem.Meta.OnBuild); 

		public BudgetItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetItemOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetReviewOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetReviewOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetReview.Meta.ObjectType, BudgetReview.Meta.OnBuild); 

		public BudgetReviewOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetReviewOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetRevisionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetRevision.Meta.ObjectType, BudgetRevision.Meta.OnBuild); 

		public BudgetRevisionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetRevisionImpactOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionImpactOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetRevisionImpact.Meta.ObjectType, BudgetRevisionImpact.Meta.OnBuild); 

		public BudgetRevisionImpactOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionImpactOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetStatus.Meta.ObjectType, BudgetStatus.Meta.OnBuild); 

		public BudgetStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetStatusOnBuildMethodInvocation;
			}
		}
	}public partial class CarrierOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CarrierOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Carrier.Meta.ObjectType, Carrier.Meta.OnBuild); 

		public CarrierOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CarrierOnBuildMethodInvocation;
			}
		}
	}public partial class CaseStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CaseStatus.Meta.ObjectType, CaseStatus.Meta.OnBuild); 

		public CaseStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseStatusOnBuildMethodInvocation;
			}
		}
	}public partial class ChartOfAccountsOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ChartOfAccountsOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ChartOfAccounts.Meta.ObjectType, ChartOfAccounts.Meta.OnBuild); 

		public ChartOfAccountsOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ChartOfAccountsOnBuildMethodInvocation;
			}
		}
	}public partial class CitizenshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CitizenshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Citizenship.Meta.ObjectType, Citizenship.Meta.OnBuild); 

		public CitizenshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CitizenshipOnBuildMethodInvocation;
			}
		}
	}public partial class CommunicationEventStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventStatus.Meta.ObjectType, CommunicationEventStatus.Meta.OnBuild); 

		public CommunicationEventStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventStatusOnBuildMethodInvocation;
			}
		}
	}public partial class CostCenterOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CostCenter.Meta.ObjectType, CostCenter.Meta.OnBuild); 

		public CostCenterOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterOnBuildMethodInvocation;
			}
		}
	}public partial class CreditCardCompanyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardCompanyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CreditCardCompany.Meta.ObjectType, CreditCardCompany.Meta.OnBuild); 

		public CreditCardCompanyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardCompanyOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturnStatus.Meta.ObjectType, CustomerReturnStatus.Meta.OnBuild); 

		public CustomerReturnStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnStatusOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipmentStatus.Meta.ObjectType, CustomerShipmentStatus.Meta.OnBuild); 

		public CustomerShipmentStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentStatusOnBuildMethodInvocation;
			}
		}
	}public partial class DeductionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Deduction.Meta.ObjectType, Deduction.Meta.OnBuild); 

		public DeductionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionOnBuildMethodInvocation;
			}
		}
	}public partial class DeliverableOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Deliverable.Meta.ObjectType, Deliverable.Meta.OnBuild); 

		public DeliverableOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOnBuildMethodInvocation;
			}
		}
	}public partial class DeploymentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeploymentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Deployment.Meta.ObjectType, Deployment.Meta.OnBuild); 

		public DeploymentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeploymentOnBuildMethodInvocation;
			}
		}
	}public partial class DepreciationMethodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationMethodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DepreciationMethod.Meta.ObjectType, DepreciationMethod.Meta.OnBuild); 

		public DepreciationMethodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationMethodOnBuildMethodInvocation;
			}
		}
	}public partial class DesiredProductFeatureOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DesiredProductFeatureOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DesiredProductFeature.Meta.ObjectType, DesiredProductFeature.Meta.OnBuild); 

		public DesiredProductFeatureOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DesiredProductFeatureOnBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DropShipmentStatus.Meta.ObjectType, DropShipmentStatus.Meta.OnBuild); 

		public DropShipmentStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentStatusOnBuildMethodInvocation;
			}
		}
	}public partial class EmailTemplateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailTemplateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmailTemplate.Meta.ObjectType, EmailTemplate.Meta.OnBuild); 

		public EmailTemplateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailTemplateOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplication.Meta.ObjectType, EmploymentApplication.Meta.OnBuild); 

		public EmploymentApplicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationOnBuildMethodInvocation;
			}
		}
	}public partial class EngagementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Engagement.Meta.ObjectType, Engagement.Meta.OnBuild); 

		public EngagementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementOnBuildMethodInvocation;
			}
		}
	}public partial class EngagementRateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementRateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngagementRate.Meta.ObjectType, EngagementRate.Meta.OnBuild); 

		public EngagementRateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementRateOnBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChangeStatus.Meta.ObjectType, EngineeringChangeStatus.Meta.OnBuild); 

		public EngineeringChangeStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeStatusOnBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccount.Meta.ObjectType, GeneralLedgerAccount.Meta.OnBuild); 

		public GeneralLedgerAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountOnBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountGroupOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountGroupOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccountGroup.Meta.ObjectType, GeneralLedgerAccountGroup.Meta.OnBuild); 

		public GeneralLedgerAccountGroupOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountGroupOnBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccountType.Meta.ObjectType, GeneralLedgerAccountType.Meta.OnBuild); 

		public GeneralLedgerAccountTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountTypeOnBuildMethodInvocation;
			}
		}
	}public partial class GlBudgetAllocationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GlBudgetAllocationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(GlBudgetAllocation.Meta.ObjectType, GlBudgetAllocation.Meta.OnBuild); 

		public GlBudgetAllocationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GlBudgetAllocationOnBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationAccountingPreferenceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationAccountingPreferenceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationAccountingPreference.Meta.ObjectType, InternalOrganisationAccountingPreference.Meta.OnBuild); 

		public InternalOrganisationAccountingPreferenceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationAccountingPreferenceOnBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenue.Meta.ObjectType, InternalOrganisationRevenue.Meta.OnBuild); 

		public InternalOrganisationRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenueHistory.Meta.ObjectType, InternalOrganisationRevenueHistory.Meta.OnBuild); 

		public InternalOrganisationRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class InventoryItemVarianceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemVarianceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InventoryItemVariance.Meta.ObjectType, InventoryItemVariance.Meta.OnBuild); 

		public InventoryItemVarianceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemVarianceOnBuildMethodInvocation;
			}
		}
	}public partial class InvoiceVatRateItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceVatRateItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceVatRateItem.Meta.ObjectType, InvoiceVatRateItem.Meta.OnBuild); 

		public InvoiceVatRateItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceVatRateItemOnBuildMethodInvocation;
			}
		}
	}public partial class ItemIssuanceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ItemIssuance.Meta.ObjectType, ItemIssuance.Meta.OnBuild); 

		public ItemIssuanceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceOnBuildMethodInvocation;
			}
		}
	}public partial class JournalOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Journal.Meta.ObjectType, Journal.Meta.OnBuild); 

		public JournalOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalOnBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryDetailOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryDetailOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntryDetail.Meta.ObjectType, JournalEntryDetail.Meta.OnBuild); 

		public JournalEntryDetailOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryDetailOnBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryNumberOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryNumberOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntryNumber.Meta.ObjectType, JournalEntryNumber.Meta.OnBuild); 

		public JournalEntryNumberOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryNumberOnBuildMethodInvocation;
			}
		}
	}public partial class LegalFormOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LegalFormOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(LegalForm.Meta.ObjectType, LegalForm.Meta.OnBuild); 

		public LegalFormOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalFormOnBuildMethodInvocation;
			}
		}
	}public partial class LotOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LotOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Lot.Meta.ObjectType, Lot.Meta.OnBuild); 

		public LotOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LotOnBuildMethodInvocation;
			}
		}
	}public partial class NeededSkillOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NeededSkillOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(NeededSkill.Meta.ObjectType, NeededSkill.Meta.OnBuild); 

		public NeededSkillOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NeededSkillOnBuildMethodInvocation;
			}
		}
	}public partial class NewsItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NewsItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(NewsItem.Meta.ObjectType, NewsItem.Meta.OnBuild); 

		public NewsItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NewsItemOnBuildMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItemStatus.Meta.ObjectType, NonSerializedInventoryItemStatus.Meta.OnBuild); 

		public NonSerializedInventoryItemStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemStatusOnBuildMethodInvocation;
			}
		}
	}public partial class OrderKindOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderKindOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderKind.Meta.ObjectType, OrderKind.Meta.OnBuild); 

		public OrderKindOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderKindOnBuildMethodInvocation;
			}
		}
	}public partial class OrderQuantityBreakOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderQuantityBreakOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderQuantityBreak.Meta.ObjectType, OrderQuantityBreak.Meta.OnBuild); 

		public OrderQuantityBreakOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderQuantityBreakOnBuildMethodInvocation;
			}
		}
	}public partial class OrderRequirementCommitmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderRequirementCommitmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderRequirementCommitment.Meta.ObjectType, OrderRequirementCommitment.Meta.OnBuild); 

		public OrderRequirementCommitmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderRequirementCommitmentOnBuildMethodInvocation;
			}
		}
	}public partial class OrderTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderTerm.Meta.ObjectType, OrderTerm.Meta.OnBuild); 

		public OrderTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderTermOnBuildMethodInvocation;
			}
		}
	}public partial class OrderValueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderValueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderValue.Meta.ObjectType, OrderValue.Meta.OnBuild); 

		public OrderValueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderValueOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationContactKindOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactKindOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationContactKind.Meta.ObjectType, OrganisationContactKind.Meta.OnBuild); 

		public OrganisationContactKindOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactKindOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationGlAccount.Meta.ObjectType, OrganisationGlAccount.Meta.OnBuild); 

		public OrganisationGlAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountBalanceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountBalanceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationGlAccountBalance.Meta.ObjectType, OrganisationGlAccountBalance.Meta.OnBuild); 

		public OrganisationGlAccountBalanceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountBalanceOnBuildMethodInvocation;
			}
		}
	}public partial class PackageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Package.Meta.ObjectType, Package.Meta.OnBuild); 

		public PackageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageOnBuildMethodInvocation;
			}
		}
	}public partial class PackageQuantityBreakOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageQuantityBreakOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PackageQuantityBreak.Meta.ObjectType, PackageQuantityBreak.Meta.OnBuild); 

		public PackageQuantityBreakOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageQuantityBreakOnBuildMethodInvocation;
			}
		}
	}public partial class PackageRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenue.Meta.ObjectType, PackageRevenue.Meta.OnBuild); 

		public PackageRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class PackageRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenueHistory.Meta.ObjectType, PackageRevenueHistory.Meta.OnBuild); 

		public PackageRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class PackagingContentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingContentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PackagingContent.Meta.ObjectType, PackagingContent.Meta.OnBuild); 

		public PackagingContentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingContentOnBuildMethodInvocation;
			}
		}
	}public partial class PartBillOfMaterialSubstituteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartBillOfMaterialSubstituteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartBillOfMaterialSubstitute.Meta.ObjectType, PartBillOfMaterialSubstitute.Meta.OnBuild); 

		public PartBillOfMaterialSubstituteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartBillOfMaterialSubstituteOnBuildMethodInvocation;
			}
		}
	}public partial class PartRevisionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartRevisionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartRevision.Meta.ObjectType, PartRevision.Meta.OnBuild); 

		public PartRevisionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartRevisionOnBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartSpecificationStatus.Meta.ObjectType, PartSpecificationStatus.Meta.OnBuild); 

		public PartSpecificationStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationStatusOnBuildMethodInvocation;
			}
		}
	}public partial class PartSubstituteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSubstituteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartSubstitute.Meta.ObjectType, PartSubstitute.Meta.OnBuild); 

		public PartSubstituteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSubstituteOnBuildMethodInvocation;
			}
		}
	}public partial class PartyBenefitOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyBenefitOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyBenefit.Meta.ObjectType, PartyBenefit.Meta.OnBuild); 

		public PartyBenefitOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyBenefitOnBuildMethodInvocation;
			}
		}
	}public partial class PartyContactMechanismOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyContactMechanismOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyContactMechanism.Meta.ObjectType, PartyContactMechanism.Meta.OnBuild); 

		public PartyContactMechanismOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyContactMechanismOnBuildMethodInvocation;
			}
		}
	}public partial class PartyFixedAssetAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyFixedAssetAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyFixedAssetAssignment.Meta.ObjectType, PartyFixedAssetAssignment.Meta.OnBuild); 

		public PartyFixedAssetAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyFixedAssetAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenue.Meta.ObjectType, PartyPackageRevenue.Meta.OnBuild); 

		public PartyPackageRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenueHistory.Meta.ObjectType, PartyPackageRevenueHistory.Meta.OnBuild); 

		public PartyPackageRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenue.Meta.ObjectType, PartyProductCategoryRevenue.Meta.OnBuild); 

		public PartyProductCategoryRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenueHistory.Meta.ObjectType, PartyProductCategoryRevenueHistory.Meta.OnBuild); 

		public PartyProductCategoryRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenue.Meta.ObjectType, PartyProductRevenue.Meta.OnBuild); 

		public PartyProductRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenueHistory.Meta.ObjectType, PartyProductRevenueHistory.Meta.OnBuild); 

		public PartyProductRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class PartyRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenue.Meta.ObjectType, PartyRevenue.Meta.OnBuild); 

		public PartyRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class PartyRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenueHistory.Meta.ObjectType, PartyRevenueHistory.Meta.OnBuild); 

		public PartyRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class PartySkillOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartySkillOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartySkill.Meta.ObjectType, PartySkill.Meta.OnBuild); 

		public PartySkillOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartySkillOnBuildMethodInvocation;
			}
		}
	}public partial class PassportOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PassportOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Passport.Meta.ObjectType, Passport.Meta.OnBuild); 

		public PassportOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PassportOnBuildMethodInvocation;
			}
		}
	}public partial class PayGradeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayGradeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PayGrade.Meta.ObjectType, PayGrade.Meta.OnBuild); 

		public PayGradeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayGradeOnBuildMethodInvocation;
			}
		}
	}public partial class PayHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PayHistory.Meta.ObjectType, PayHistory.Meta.OnBuild); 

		public PayHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class PaymentApplicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentApplicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PaymentApplication.Meta.ObjectType, PaymentApplication.Meta.OnBuild); 

		public PaymentApplicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentApplicationOnBuildMethodInvocation;
			}
		}
	}public partial class PaymentBudgetAllocationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentBudgetAllocationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PaymentBudgetAllocation.Meta.ObjectType, PaymentBudgetAllocation.Meta.OnBuild); 

		public PaymentBudgetAllocationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentBudgetAllocationOnBuildMethodInvocation;
			}
		}
	}public partial class PayrollPreferenceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayrollPreferenceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PayrollPreference.Meta.ObjectType, PayrollPreference.Meta.OnBuild); 

		public PayrollPreferenceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayrollPreferenceOnBuildMethodInvocation;
			}
		}
	}public partial class PerformanceNoteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceNoteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceNote.Meta.ObjectType, PerformanceNote.Meta.OnBuild); 

		public PerformanceNoteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceNoteOnBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReview.Meta.ObjectType, PerformanceReview.Meta.OnBuild); 

		public PerformanceReviewOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewOnBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReviewItem.Meta.ObjectType, PerformanceReviewItem.Meta.OnBuild); 

		public PerformanceReviewItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemOnBuildMethodInvocation;
			}
		}
	}public partial class PersonTrainingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonTrainingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PersonTraining.Meta.ObjectType, PersonTraining.Meta.OnBuild); 

		public PersonTrainingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonTrainingOnBuildMethodInvocation;
			}
		}
	}public partial class PickListItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PickListItem.Meta.ObjectType, PickListItem.Meta.OnBuild); 

		public PickListItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemOnBuildMethodInvocation;
			}
		}
	}public partial class PickListStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PickListStatus.Meta.ObjectType, PickListStatus.Meta.OnBuild); 

		public PickListStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListStatusOnBuildMethodInvocation;
			}
		}
	}public partial class PositionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Position.Meta.ObjectType, Position.Meta.OnBuild); 

		public PositionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionOnBuildMethodInvocation;
			}
		}
	}public partial class PositionFulfillmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionFulfillmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionFulfillment.Meta.ObjectType, PositionFulfillment.Meta.OnBuild); 

		public PositionFulfillmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionFulfillmentOnBuildMethodInvocation;
			}
		}
	}public partial class PositionReportingStructureOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionReportingStructureOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionReportingStructure.Meta.ObjectType, PositionReportingStructure.Meta.OnBuild); 

		public PositionReportingStructureOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionReportingStructureOnBuildMethodInvocation;
			}
		}
	}public partial class PositionResponsibilityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionResponsibilityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionResponsibility.Meta.ObjectType, PositionResponsibility.Meta.OnBuild); 

		public PositionResponsibilityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionResponsibilityOnBuildMethodInvocation;
			}
		}
	}public partial class PositionTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionType.Meta.ObjectType, PositionType.Meta.OnBuild); 

		public PositionTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeOnBuildMethodInvocation;
			}
		}
	}public partial class PositionTypeRateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeRateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionTypeRate.Meta.ObjectType, PositionTypeRate.Meta.OnBuild); 

		public PositionTypeRateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeRateOnBuildMethodInvocation;
			}
		}
	}public partial class PostalBoundaryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalBoundaryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PostalBoundary.Meta.ObjectType, PostalBoundary.Meta.OnBuild); 

		public PostalBoundaryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalBoundaryOnBuildMethodInvocation;
			}
		}
	}public partial class ProductCategoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategory.Meta.ObjectType, ProductCategory.Meta.OnBuild); 

		public ProductCategoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryOnBuildMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenue.Meta.ObjectType, ProductCategoryRevenue.Meta.OnBuild); 

		public ProductCategoryRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenueHistory.Meta.ObjectType, ProductCategoryRevenueHistory.Meta.OnBuild); 

		public ProductCategoryRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class ProductDeliverySkillRequirementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDeliverySkillRequirementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductDeliverySkillRequirement.Meta.ObjectType, ProductDeliverySkillRequirement.Meta.OnBuild); 

		public ProductDeliverySkillRequirementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDeliverySkillRequirementOnBuildMethodInvocation;
			}
		}
	}public partial class ProductFeatureApplicabilityRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductFeatureApplicabilityRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductFeatureApplicabilityRelationship.Meta.ObjectType, ProductFeatureApplicabilityRelationship.Meta.OnBuild); 

		public ProductFeatureApplicabilityRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductFeatureApplicabilityRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class ProductPurchasePriceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductPurchasePriceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductPurchasePrice.Meta.ObjectType, ProductPurchasePrice.Meta.OnBuild); 

		public ProductPurchasePriceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductPurchasePriceOnBuildMethodInvocation;
			}
		}
	}public partial class ProductRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenue.Meta.ObjectType, ProductRevenue.Meta.OnBuild); 

		public ProductRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class ProductRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenueHistory.Meta.ObjectType, ProductRevenueHistory.Meta.OnBuild); 

		public ProductRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalAssignment.Meta.ObjectType, ProfessionalAssignment.Meta.OnBuild); 

		public ProfessionalAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemStatus.Meta.ObjectType, PurchaseInvoiceItemStatus.Meta.OnBuild); 

		public PurchaseInvoiceItemStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemStatusOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceStatus.Meta.ObjectType, PurchaseInvoiceStatus.Meta.OnBuild); 

		public PurchaseInvoiceStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceStatusOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItemStatus.Meta.ObjectType, PurchaseOrderItemStatus.Meta.OnBuild); 

		public PurchaseOrderItemStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemStatusOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderStatus.Meta.ObjectType, PurchaseOrderStatus.Meta.OnBuild); 

		public PurchaseOrderStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderStatusOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturnStatus.Meta.ObjectType, PurchaseReturnStatus.Meta.OnBuild); 

		public PurchaseReturnStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnStatusOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipmentStatus.Meta.ObjectType, PurchaseShipmentStatus.Meta.OnBuild); 

		public PurchaseShipmentStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentStatusOnBuildMethodInvocation;
			}
		}
	}public partial class QuoteItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(QuoteItem.Meta.ObjectType, QuoteItem.Meta.OnBuild); 

		public QuoteItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemOnBuildMethodInvocation;
			}
		}
	}public partial class QuoteTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(QuoteTerm.Meta.ObjectType, QuoteTerm.Meta.OnBuild); 

		public QuoteTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteTermOnBuildMethodInvocation;
			}
		}
	}public partial class RequestItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequestItem.Meta.ObjectType, RequestItem.Meta.OnBuild); 

		public RequestItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemOnBuildMethodInvocation;
			}
		}
	}public partial class RequirementBudgetAllocationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementBudgetAllocationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequirementBudgetAllocation.Meta.ObjectType, RequirementBudgetAllocation.Meta.OnBuild); 

		public RequirementBudgetAllocationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementBudgetAllocationOnBuildMethodInvocation;
			}
		}
	}public partial class RequirementCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequirementCommunication.Meta.ObjectType, RequirementCommunication.Meta.OnBuild); 

		public RequirementCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class RequirementStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequirementStatus.Meta.ObjectType, RequirementStatus.Meta.OnBuild); 

		public RequirementStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementStatusOnBuildMethodInvocation;
			}
		}
	}public partial class RespondingPartyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RespondingPartyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RespondingParty.Meta.ObjectType, RespondingParty.Meta.OnBuild); 

		public RespondingPartyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RespondingPartyOnBuildMethodInvocation;
			}
		}
	}public partial class ResponsibilityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResponsibilityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Responsibility.Meta.ObjectType, Responsibility.Meta.OnBuild); 

		public ResponsibilityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResponsibilityOnBuildMethodInvocation;
			}
		}
	}public partial class ResumeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResumeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Resume.Meta.ObjectType, Resume.Meta.OnBuild); 

		public ResumeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResumeOnBuildMethodInvocation;
			}
		}
	}public partial class RevenueQuantityBreakOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueQuantityBreakOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RevenueQuantityBreak.Meta.ObjectType, RevenueQuantityBreak.Meta.OnBuild); 

		public RevenueQuantityBreakOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueQuantityBreakOnBuildMethodInvocation;
			}
		}
	}public partial class RevenueValueBreakOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueValueBreakOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RevenueValueBreak.Meta.ObjectType, RevenueValueBreak.Meta.OnBuild); 

		public RevenueValueBreakOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueValueBreakOnBuildMethodInvocation;
			}
		}
	}public partial class SalaryStepOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalaryStepOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalaryStep.Meta.ObjectType, SalaryStep.Meta.OnBuild); 

		public SalaryStepOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalaryStepOnBuildMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenue.Meta.ObjectType, SalesChannelRevenue.Meta.OnBuild); 

		public SalesChannelRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenueHistory.Meta.ObjectType, SalesChannelRevenueHistory.Meta.OnBuild); 

		public SalesChannelRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemStatus.Meta.ObjectType, SalesInvoiceItemStatus.Meta.OnBuild); 

		public SalesInvoiceItemStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemStatusOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceStatus.Meta.ObjectType, SalesInvoiceStatus.Meta.OnBuild); 

		public SalesInvoiceStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceStatusOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItemStatus.Meta.ObjectType, SalesOrderItemStatus.Meta.OnBuild); 

		public SalesOrderItemStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemStatusOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderStatus.Meta.ObjectType, SalesOrderStatus.Meta.OnBuild); 

		public SalesOrderStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderStatusOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepCommissionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepCommissionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepCommission.Meta.ObjectType, SalesRepCommission.Meta.OnBuild); 

		public SalesRepCommissionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepCommissionOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyProductCategoryRevenue.Meta.ObjectType, SalesRepPartyProductCategoryRevenue.Meta.OnBuild); 

		public SalesRepPartyProductCategoryRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyRevenue.Meta.ObjectType, SalesRepPartyRevenue.Meta.OnBuild); 

		public SalesRepPartyRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepProductCategoryRevenue.Meta.ObjectType, SalesRepProductCategoryRevenue.Meta.OnBuild); 

		public SalesRepProductCategoryRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenue.Meta.ObjectType, SalesRepRevenue.Meta.OnBuild); 

		public SalesRepRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenueHistory.Meta.ObjectType, SalesRepRevenueHistory.Meta.OnBuild); 

		public SalesRepRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItemStatus.Meta.ObjectType, SerializedInventoryItemStatus.Meta.OnBuild); 

		public SerializedInventoryItemStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemStatusOnBuildMethodInvocation;
			}
		}
	}public partial class ServiceEntryHeaderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryHeaderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ServiceEntryHeader.Meta.ObjectType, ServiceEntryHeader.Meta.OnBuild); 

		public ServiceEntryHeaderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryHeaderOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentItem.Meta.ObjectType, ShipmentItem.Meta.OnBuild); 

		public ShipmentItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentPackageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentPackageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentPackage.Meta.ObjectType, ShipmentPackage.Meta.OnBuild); 

		public ShipmentPackageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentPackageOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentReceiptOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentReceiptOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentReceipt.Meta.ObjectType, ShipmentReceipt.Meta.OnBuild); 

		public ShipmentReceiptOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentReceiptOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentRouteSegmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentRouteSegmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentRouteSegment.Meta.ObjectType, ShipmentRouteSegment.Meta.OnBuild); 

		public ShipmentRouteSegmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentRouteSegmentOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentValueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentValueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentValue.Meta.ObjectType, ShipmentValue.Meta.OnBuild); 

		public ShipmentValueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentValueOnBuildMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingComponentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingComponentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShippingAndHandlingComponent.Meta.ObjectType, ShippingAndHandlingComponent.Meta.OnBuild); 

		public ShippingAndHandlingComponentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingComponentOnBuildMethodInvocation;
			}
		}
	}public partial class StoreOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StoreOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Store.Meta.ObjectType, Store.Meta.OnBuild); 

		public StoreOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreOnBuildMethodInvocation;
			}
		}
	}public partial class StoreRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenue.Meta.ObjectType, StoreRevenue.Meta.OnBuild); 

		public StoreRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class StoreRevenueHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenueHistory.Meta.ObjectType, StoreRevenueHistory.Meta.OnBuild); 

		public StoreRevenueHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class SupplierOfferingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierOfferingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SupplierOffering.Meta.ObjectType, SupplierOffering.Meta.OnBuild); 

		public SupplierOfferingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierOfferingOnBuildMethodInvocation;
			}
		}
	}public partial class TrainingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TrainingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Training.Meta.ObjectType, Training.Meta.OnBuild); 

		public TrainingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TrainingOnBuildMethodInvocation;
			}
		}
	}public partial class TransferStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TransferStatus.Meta.ObjectType, TransferStatus.Meta.OnBuild); 

		public TransferStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferStatusOnBuildMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureConversionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureConversionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(UnitOfMeasureConversion.Meta.ObjectType, UnitOfMeasureConversion.Meta.OnBuild); 

		public UnitOfMeasureConversionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureConversionOnBuildMethodInvocation;
			}
		}
	}public partial class VatFormOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatFormOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatForm.Meta.ObjectType, VatForm.Meta.OnBuild); 

		public VatFormOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatFormOnBuildMethodInvocation;
			}
		}
	}public partial class VatRateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatRate.Meta.ObjectType, VatRate.Meta.OnBuild); 

		public VatRateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateOnBuildMethodInvocation;
			}
		}
	}public partial class VatReturnBoxOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatReturnBox.Meta.ObjectType, VatReturnBox.Meta.OnBuild); 

		public VatReturnBoxOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxOnBuildMethodInvocation;
			}
		}
	}public partial class VatReturnBoxTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatReturnBoxType.Meta.ObjectType, VatReturnBoxType.Meta.OnBuild); 

		public VatReturnBoxTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxTypeOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortAssignment.Meta.ObjectType, WorkEffortAssignment.Meta.OnBuild); 

		public WorkEffortAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentRateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentRateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortAssignmentRate.Meta.ObjectType, WorkEffortAssignmentRate.Meta.OnBuild); 

		public WorkEffortAssignmentRateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentRateOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortFixedAssetAssignment.Meta.ObjectType, WorkEffortFixedAssetAssignment.Meta.OnBuild); 

		public WorkEffortFixedAssetAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetStandardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetStandardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortFixedAssetStandard.Meta.ObjectType, WorkEffortFixedAssetStandard.Meta.OnBuild); 

		public WorkEffortFixedAssetStandardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetStandardOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortGoodStandardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortGoodStandardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortGoodStandard.Meta.ObjectType, WorkEffortGoodStandard.Meta.OnBuild); 

		public WorkEffortGoodStandardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortGoodStandardOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortInventoryAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortInventoryAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortInventoryAssignment.Meta.ObjectType, WorkEffortInventoryAssignment.Meta.OnBuild); 

		public WorkEffortInventoryAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortInventoryAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPartStandardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartStandardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPartStandard.Meta.ObjectType, WorkEffortPartStandard.Meta.OnBuild); 

		public WorkEffortPartStandardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartStandardOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPartyAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartyAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPartyAssignment.Meta.ObjectType, WorkEffortPartyAssignment.Meta.OnBuild); 

		public WorkEffortPartyAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartyAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortSkillStandardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortSkillStandardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortSkillStandard.Meta.ObjectType, WorkEffortSkillStandard.Meta.OnBuild); 

		public WorkEffortSkillStandardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortSkillStandardOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortStatus.Meta.ObjectType, WorkEffortStatus.Meta.OnBuild); 

		public WorkEffortStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortStatusOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortType.Meta.ObjectType, WorkEffortType.Meta.OnBuild); 

		public WorkEffortTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeOnBuildMethodInvocation;
			}
		}
	}public partial class ImageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ImageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.OnBuild); 

		public ImageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageOnBuildMethodInvocation;
			}
		}
	}public partial class LoginOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.OnBuild); 

		public LoginOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnBuildMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.OnBuild); 

		public SecurityTokenOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnBuildMethodInvocation;
			}
		}
	}public partial class OrderShipmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderShipment.Meta.ObjectType, OrderShipment.Meta.OnBuild); 

		public OrderShipmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentOnBuildMethodInvocation;
			}
		}
	}public partial class StringTemplateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(StringTemplate.Meta.ObjectType, StringTemplate.Meta.OnBuild); 

		public StringTemplateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetObjectState.Meta.ObjectType, BudgetObjectState.Meta.OnBuild); 

		public BudgetObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class CaseObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CaseObjectState.Meta.ObjectType, CaseObjectState.Meta.OnBuild); 

		public CaseObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class CommunicationEventObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventObjectState.Meta.ObjectType, CommunicationEventObjectState.Meta.OnBuild); 

		public CommunicationEventObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturnObjectState.Meta.ObjectType, CustomerReturnObjectState.Meta.OnBuild); 

		public CustomerReturnObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipmentObjectState.Meta.ObjectType, CustomerShipmentObjectState.Meta.OnBuild); 

		public CustomerShipmentObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(DropShipmentObjectState.Meta.ObjectType, DropShipmentObjectState.Meta.OnBuild); 

		public DropShipmentObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChangeObjectState.Meta.ObjectType, EngineeringChangeObjectState.Meta.OnBuild); 

		public EngineeringChangeObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItemObjectState.Meta.ObjectType, NonSerializedInventoryItemObjectState.Meta.OnBuild); 

		public NonSerializedInventoryItemObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartSpecificationObjectState.Meta.ObjectType, PartSpecificationObjectState.Meta.OnBuild); 

		public PartSpecificationObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class PickListObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PickListObjectState.Meta.ObjectType, PickListObjectState.Meta.OnBuild); 

		public PickListObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemObjectState.Meta.ObjectType, PurchaseInvoiceItemObjectState.Meta.OnBuild); 

		public PurchaseInvoiceItemObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceObjectState.Meta.ObjectType, PurchaseInvoiceObjectState.Meta.OnBuild); 

		public PurchaseInvoiceObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItemObjectState.Meta.ObjectType, PurchaseOrderItemObjectState.Meta.OnBuild); 

		public PurchaseOrderItemObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderObjectState.Meta.ObjectType, PurchaseOrderObjectState.Meta.OnBuild); 

		public PurchaseOrderObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturnObjectState.Meta.ObjectType, PurchaseReturnObjectState.Meta.OnBuild); 

		public PurchaseReturnObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipmentObjectState.Meta.ObjectType, PurchaseShipmentObjectState.Meta.OnBuild); 

		public PurchaseShipmentObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class RequirementObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequirementObjectState.Meta.ObjectType, RequirementObjectState.Meta.OnBuild); 

		public RequirementObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemObjectState.Meta.ObjectType, SalesInvoiceItemObjectState.Meta.OnBuild); 

		public SalesInvoiceItemObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceObjectState.Meta.ObjectType, SalesInvoiceObjectState.Meta.OnBuild); 

		public SalesInvoiceObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItemObjectState.Meta.ObjectType, SalesOrderItemObjectState.Meta.OnBuild); 

		public SalesOrderItemObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderObjectState.Meta.ObjectType, SalesOrderObjectState.Meta.OnBuild); 

		public SalesOrderObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItemObjectState.Meta.ObjectType, SerializedInventoryItemObjectState.Meta.OnBuild); 

		public SerializedInventoryItemObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class TransferObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(TransferObjectState.Meta.ObjectType, TransferObjectState.Meta.OnBuild); 

		public TransferObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortObjectState.Meta.ObjectType, WorkEffortObjectState.Meta.OnBuild); 

		public WorkEffortObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class CounterOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Counter.Meta.ObjectType, Counter.Meta.OnBuild); 

		public CounterOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnBuildMethodInvocation;
			}
		}
	}public partial class CostCenterCategoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterCategoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(CostCenterCategory.Meta.ObjectType, CostCenterCategory.Meta.OnBuild); 

		public CostCenterCategoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterCategoryOnBuildMethodInvocation;
			}
		}
	}public partial class MediaContentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(MediaContent.Meta.ObjectType, MediaContent.Meta.OnBuild); 

		public MediaContentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnBuildMethodInvocation;
			}
		}
	}public partial class TransitionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Transition.Meta.ObjectType, Transition.Meta.OnBuild); 

		public TransitionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnBuildMethodInvocation;
			}
		}
	}public partial class EventOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EventOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Event.Meta.ObjectType, Event.Meta.OnBuild); 

		public EventOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventOnBuildMethodInvocation;
			}
		}
	}public partial class EventRegistrationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EventRegistrationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(EventRegistration.Meta.ObjectType, EventRegistration.Meta.OnBuild); 

		public EventRegistrationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventRegistrationOnBuildMethodInvocation;
			}
		}
	}public partial class FiscalYearInvoiceNumberOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FiscalYearInvoiceNumberOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(FiscalYearInvoiceNumber.Meta.ObjectType, FiscalYearInvoiceNumber.Meta.OnBuild); 

		public FiscalYearInvoiceNumberOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FiscalYearInvoiceNumberOnBuildMethodInvocation;
			}
		}
	}public partial class OrderItemBillingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderItemBillingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderItemBilling.Meta.ObjectType, OrderItemBilling.Meta.OnBuild); 

		public OrderItemBillingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderItemBillingOnBuildMethodInvocation;
			}
		}
	}public partial class ServiceEntryBillingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryBillingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(ServiceEntryBilling.Meta.ObjectType, ServiceEntryBilling.Meta.OnBuild); 

		public ServiceEntryBillingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryBillingOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortBillingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortBillingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortBilling.Meta.ObjectType, WorkEffortBilling.Meta.OnBuild); 

		public WorkEffortBillingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortBillingOnBuildMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPostBuild : Allors.Meta.Method
	{
		protected ObjectOnPostBuild(Object @object) : base(@object)
		{
		}
	}

	public partial class AccountingTransactionTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionType.Meta.ObjectType, AccountingTransactionType.Meta.OnPostBuild); 

		public AccountingTransactionTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class AssetAssignmentStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AssetAssignmentStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AssetAssignmentStatus.Meta.ObjectType, AssetAssignmentStatus.Meta.OnPostBuild); 

		public AssetAssignmentStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AssetAssignmentStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class ColourOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ColourOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Colour.Meta.ObjectType, Colour.Meta.OnPostBuild); 

		public ColourOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ColourOnPostBuildMethodInvocation;
			}
		}
	}public partial class CommunicationEventPurposeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventPurposeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventPurpose.Meta.ObjectType, CommunicationEventPurpose.Meta.OnPostBuild); 

		public CommunicationEventPurposeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventPurposeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ContactMechanismPurposeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismPurposeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ContactMechanismPurpose.Meta.ObjectType, ContactMechanismPurpose.Meta.OnPostBuild); 

		public ContactMechanismPurposeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismPurposeOnPostBuildMethodInvocation;
			}
		}
	}public partial class CostCenterSplitMethodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterSplitMethodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CostCenterSplitMethod.Meta.ObjectType, CostCenterSplitMethod.Meta.OnPostBuild); 

		public CostCenterSplitMethodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterSplitMethodOnPostBuildMethodInvocation;
			}
		}
	}public partial class CostOfGoodsSoldMethodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostOfGoodsSoldMethodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CostOfGoodsSoldMethod.Meta.ObjectType, CostOfGoodsSoldMethod.Meta.OnPostBuild); 

		public CostOfGoodsSoldMethodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostOfGoodsSoldMethodOnPostBuildMethodInvocation;
			}
		}
	}public partial class DebitCreditConstantOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DebitCreditConstantOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DebitCreditConstant.Meta.ObjectType, DebitCreditConstant.Meta.OnPostBuild); 

		public DebitCreditConstantOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DebitCreditConstantOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeductionTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DeductionType.Meta.ObjectType, DeductionType.Meta.OnPostBuild); 

		public DeductionTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeliverableTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableType.Meta.ObjectType, DeliverableType.Meta.OnPostBuild); 

		public DeliverableTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class DunningTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DunningTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DunningType.Meta.ObjectType, DunningType.Meta.OnPostBuild); 

		public DunningTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DunningTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationSourceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationSourceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplicationSource.Meta.ObjectType, EmploymentApplicationSource.Meta.OnPostBuild); 

		public EmploymentApplicationSourceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationSourceOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplicationStatus.Meta.ObjectType, EmploymentApplicationStatus.Meta.OnPostBuild); 

		public EmploymentApplicationStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentTermination.Meta.ObjectType, EmploymentTermination.Meta.OnPostBuild); 

		public EmploymentTerminationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationReasonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationReasonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentTerminationReason.Meta.ObjectType, EmploymentTerminationReason.Meta.OnPostBuild); 

		public EmploymentTerminationReasonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationReasonOnPostBuildMethodInvocation;
			}
		}
	}public partial class EuSalesListTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EuSalesListTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EuSalesListType.Meta.ObjectType, EuSalesListType.Meta.OnPostBuild); 

		public EuSalesListTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EuSalesListTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class GenderTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GenderTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(GenderType.Meta.ObjectType, GenderType.Meta.OnPostBuild); 

		public GenderTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class HobbyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HobbyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Hobby.Meta.ObjectType, Hobby.Meta.OnPostBuild); 

		public HobbyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HobbyOnPostBuildMethodInvocation;
			}
		}
	}public partial class InventoryItemKindOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemKindOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InventoryItemKind.Meta.ObjectType, InventoryItemKind.Meta.OnPostBuild); 

		public InventoryItemKindOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemKindOnPostBuildMethodInvocation;
			}
		}
	}public partial class InvoiceSequenceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceSequenceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceSequence.Meta.ObjectType, InvoiceSequence.Meta.OnPostBuild); 

		public InvoiceSequenceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceSequenceOnPostBuildMethodInvocation;
			}
		}
	}public partial class JournalTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(JournalType.Meta.ObjectType, JournalType.Meta.OnPostBuild); 

		public JournalTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class MaritalStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MaritalStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(MaritalStatus.Meta.ObjectType, MaritalStatus.Meta.OnPostBuild); 

		public MaritalStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaritalStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class ModelOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ModelOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Model.Meta.ObjectType, Model.Meta.OnPostBuild); 

		public ModelOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ModelOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrdinalOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrdinalOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Ordinal.Meta.ObjectType, Ordinal.Meta.OnPostBuild); 

		public OrdinalOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrdinalOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationUnitOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationUnitOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationUnit.Meta.ObjectType, OrganisationUnit.Meta.OnPostBuild); 

		public OrganisationUnitOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationUnitOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyRelationshipStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRelationshipStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyRelationshipStatus.Meta.ObjectType, PartyRelationshipStatus.Meta.OnPostBuild); 

		public PartyRelationshipStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRelationshipStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReviewItemType.Meta.ObjectType, PerformanceReviewItemType.Meta.OnPostBuild); 

		public PerformanceReviewItemTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonalTitleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonalTitleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PersonalTitle.Meta.ObjectType, PersonalTitle.Meta.OnPostBuild); 

		public PersonalTitleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonalTitleOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionStatus.Meta.ObjectType, PositionStatus.Meta.OnPostBuild); 

		public PositionStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class PriorityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PriorityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Priority.Meta.ObjectType, Priority.Meta.OnPostBuild); 

		public PriorityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PriorityOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductQualityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQualityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductQuality.Meta.ObjectType, ProductQuality.Meta.OnPostBuild); 

		public ProductQualityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQualityOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemType.Meta.ObjectType, PurchaseInvoiceItemType.Meta.OnPostBuild); 

		public PurchaseInvoiceItemTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceType.Meta.ObjectType, PurchaseInvoiceType.Meta.OnPostBuild); 

		public PurchaseInvoiceTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class QualificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QualificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Qualification.Meta.ObjectType, Qualification.Meta.OnPostBuild); 

		public QualificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QualificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class RateTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RateTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RateType.Meta.ObjectType, RateType.Meta.OnPostBuild); 

		public RateTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RateTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class RatingTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RatingTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RatingType.Meta.ObjectType, RatingType.Meta.OnPostBuild); 

		public RatingTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RatingTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesChannelOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannel.Meta.ObjectType, SalesChannel.Meta.OnPostBuild); 

		public SalesChannelOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemType.Meta.ObjectType, SalesInvoiceItemType.Meta.OnPostBuild); 

		public SalesInvoiceItemTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceType.Meta.ObjectType, SalesInvoiceType.Meta.OnPostBuild); 

		public SalesInvoiceTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalutationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalutationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Salutation.Meta.ObjectType, Salutation.Meta.OnPostBuild); 

		public SalutationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalutationOnPostBuildMethodInvocation;
			}
		}
	}public partial class ServiceFeatureOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceFeatureOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ServiceFeature.Meta.ObjectType, ServiceFeature.Meta.OnPostBuild); 

		public ServiceFeatureOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceFeatureOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentMethodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentMethodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentMethod.Meta.ObjectType, ShipmentMethod.Meta.OnPostBuild); 

		public ShipmentMethodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentMethodOnPostBuildMethodInvocation;
			}
		}
	}public partial class SizeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SizeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Size.Meta.ObjectType, Size.Meta.OnPostBuild); 

		public SizeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SizeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SkillOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Skill.Meta.ObjectType, Skill.Meta.OnPostBuild); 

		public SkillOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillOnPostBuildMethodInvocation;
			}
		}
	}public partial class SkillLevelOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillLevelOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SkillLevel.Meta.ObjectType, SkillLevel.Meta.OnPostBuild); 

		public SkillLevelOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillLevelOnPostBuildMethodInvocation;
			}
		}
	}public partial class SkillRatingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillRatingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SkillRating.Meta.ObjectType, SkillRating.Meta.OnPostBuild); 

		public SkillRatingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillRatingOnPostBuildMethodInvocation;
			}
		}
	}public partial class SoftwareFeatureOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SoftwareFeatureOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SoftwareFeature.Meta.ObjectType, SoftwareFeature.Meta.OnPostBuild); 

		public SoftwareFeatureOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SoftwareFeatureOnPostBuildMethodInvocation;
			}
		}
	}public partial class TemplatePurposeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TemplatePurposeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TemplatePurpose.Meta.ObjectType, TemplatePurpose.Meta.OnPostBuild); 

		public TemplatePurposeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplatePurposeOnPostBuildMethodInvocation;
			}
		}
	}public partial class TermTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TermTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TermType.Meta.ObjectType, TermType.Meta.OnPostBuild); 

		public TermTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TermTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class TimeFrequencyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeFrequencyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TimeFrequency.Meta.ObjectType, TimeFrequency.Meta.OnPostBuild); 

		public TimeFrequencyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeFrequencyOnPostBuildMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(UnitOfMeasure.Meta.ObjectType, UnitOfMeasure.Meta.OnPostBuild); 

		public UnitOfMeasureOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureOnPostBuildMethodInvocation;
			}
		}
	}public partial class VarianceReasonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VarianceReasonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VarianceReason.Meta.ObjectType, VarianceReason.Meta.OnPostBuild); 

		public VarianceReasonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VarianceReasonOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatCalculationMethodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatCalculationMethodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatCalculationMethod.Meta.ObjectType, VatCalculationMethod.Meta.OnPostBuild); 

		public VatCalculationMethodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatCalculationMethodOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatRatePurchaseKindOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRatePurchaseKindOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatRatePurchaseKind.Meta.ObjectType, VatRatePurchaseKind.Meta.OnPostBuild); 

		public VatRatePurchaseKindOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRatePurchaseKindOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatRateUsageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateUsageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatRateUsage.Meta.ObjectType, VatRateUsage.Meta.OnPostBuild); 

		public VatRateUsageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateUsageOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatRegimeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRegimeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatRegime.Meta.ObjectType, VatRegime.Meta.OnPostBuild); 

		public VatRegimeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRegimeOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatTariffOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatTariffOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatTariff.Meta.ObjectType, VatTariff.Meta.OnPostBuild); 

		public VatTariffOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatTariffOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeKindOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeKindOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortTypeKind.Meta.ObjectType, WorkEffortTypeKind.Meta.OnPostBuild); 

		public WorkEffortTypeKindOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeKindOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPurposeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPurposeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPurpose.Meta.ObjectType, WorkEffortPurpose.Meta.OnPostBuild); 

		public WorkEffortPurposeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPurposeOnPostBuildMethodInvocation;
			}
		}
	}public partial class BillOfLadingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BillOfLadingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BillOfLading.Meta.ObjectType, BillOfLading.Meta.OnPostBuild); 

		public BillOfLadingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillOfLadingOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngineeringDocumentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringDocumentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringDocument.Meta.ObjectType, EngineeringDocument.Meta.OnPostBuild); 

		public EngineeringDocumentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringDocumentOnPostBuildMethodInvocation;
			}
		}
	}public partial class ExportDocumentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExportDocumentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ExportDocument.Meta.ObjectType, ExportDocument.Meta.OnPostBuild); 

		public ExportDocumentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExportDocumentOnPostBuildMethodInvocation;
			}
		}
	}public partial class HazardousMaterialsDocumentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HazardousMaterialsDocumentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(HazardousMaterialsDocument.Meta.ObjectType, HazardousMaterialsDocument.Meta.OnPostBuild); 

		public HazardousMaterialsDocumentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HazardousMaterialsDocumentOnPostBuildMethodInvocation;
			}
		}
	}public partial class ManifestOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManifestOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Manifest.Meta.ObjectType, Manifest.Meta.OnPostBuild); 

		public ManifestOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManifestOnPostBuildMethodInvocation;
			}
		}
	}public partial class MarketingMaterialOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingMaterialOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(MarketingMaterial.Meta.ObjectType, MarketingMaterial.Meta.OnPostBuild); 

		public MarketingMaterialOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingMaterialOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackagingSlipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingSlipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PackagingSlip.Meta.ObjectType, PackagingSlip.Meta.OnPostBuild); 

		public PackagingSlipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingSlipOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductDrawingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDrawingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductDrawing.Meta.ObjectType, ProductDrawing.Meta.OnPostBuild); 

		public ProductDrawingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDrawingOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductModelOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductModelOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductModel.Meta.ObjectType, ProductModel.Meta.OnPostBuild); 

		public ProductModelOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductModelOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaxDocumentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDocumentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TaxDocument.Meta.ObjectType, TaxDocument.Meta.OnPostBuild); 

		public TaxDocumentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDocumentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoice.Meta.ObjectType, PurchaseInvoice.Meta.OnPostBuild); 

		public PurchaseInvoiceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoice.Meta.ObjectType, SalesInvoice.Meta.OnPostBuild); 

		public SalesInvoiceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.OnPostBuild); 

		public PurchaseOrderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.OnPostBuild); 

		public SalesOrderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturn.Meta.ObjectType, CustomerReturn.Meta.OnPostBuild); 

		public CustomerReturnOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.OnPostBuild); 

		public CustomerShipmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DropShipment.Meta.ObjectType, DropShipment.Meta.OnPostBuild); 

		public DropShipmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturn.Meta.ObjectType, PurchaseReturn.Meta.OnPostBuild); 

		public PurchaseReturnOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipment.Meta.ObjectType, PurchaseShipment.Meta.OnPostBuild); 

		public PurchaseShipmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class TransferOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Transfer.Meta.ObjectType, Transfer.Meta.OnPostBuild); 

		public TransferOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferOnPostBuildMethodInvocation;
			}
		}
	}public partial class PickListOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PickList.Meta.ObjectType, PickList.Meta.OnPostBuild); 

		public PickListOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccountingPeriodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccountingPeriod.Meta.ObjectType, AccountingPeriod.Meta.OnPostBuild); 

		public AccountingPeriodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodOnPostBuildMethodInvocation;
			}
		}
	}public partial class CapitalBudgetOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CapitalBudget.Meta.ObjectType, CapitalBudget.Meta.OnPostBuild); 

		public CapitalBudgetOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetOnPostBuildMethodInvocation;
			}
		}
	}public partial class OperatingBudgetOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OperatingBudget.Meta.ObjectType, OperatingBudget.Meta.OnPostBuild); 

		public OperatingBudgetOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmailCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmailCommunication.Meta.ObjectType, EmailCommunication.Meta.OnPostBuild); 

		public EmailCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(FaceToFaceCommunication.Meta.ObjectType, FaceToFaceCommunication.Meta.OnPostBuild); 

		public FaceToFaceCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class FaxCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(FaxCommunication.Meta.ObjectType, FaxCommunication.Meta.OnPostBuild); 

		public FaxCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(LetterCorrespondence.Meta.ObjectType, LetterCorrespondence.Meta.OnPostBuild); 

		public LetterCorrespondenceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceOnPostBuildMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PhoneCommunication.Meta.ObjectType, PhoneCommunication.Meta.OnPostBuild); 

		public PhoneCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WebSiteCommunication.Meta.ObjectType, WebSiteCommunication.Meta.OnPostBuild); 

		public WebSiteCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItem.Meta.ObjectType, NonSerializedInventoryItem.Meta.OnPostBuild); 

		public NonSerializedInventoryItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItem.Meta.ObjectType, SerializedInventoryItem.Meta.OnPostBuild); 

		public SerializedInventoryItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItem.Meta.ObjectType, PurchaseInvoiceItem.Meta.OnPostBuild); 

		public PurchaseInvoiceItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItem.Meta.ObjectType, SalesInvoiceItem.Meta.OnPostBuild); 

		public SalesInvoiceItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.OnPostBuild); 

		public PurchaseOrderItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.OnPostBuild); 

		public SalesOrderItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class ConstraintSpecificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ConstraintSpecificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ConstraintSpecification.Meta.ObjectType, ConstraintSpecification.Meta.OnPostBuild); 

		public ConstraintSpecificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ConstraintSpecificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class OperatingConditionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingConditionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OperatingCondition.Meta.ObjectType, OperatingCondition.Meta.OnPostBuild); 

		public OperatingConditionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingConditionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PerformanceSpecificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceSpecificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceSpecification.Meta.ObjectType, PerformanceSpecification.Meta.OnPostBuild); 

		public PerformanceSpecificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceSpecificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class TestingRequirementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TestingRequirementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TestingRequirement.Meta.ObjectType, TestingRequirement.Meta.OnPostBuild); 

		public TestingRequirementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TestingRequirementOnPostBuildMethodInvocation;
			}
		}
	}public partial class ToleranceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ToleranceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Tolerance.Meta.ObjectType, Tolerance.Meta.OnPostBuild); 

		public ToleranceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToleranceOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerRequirementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRequirementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRequirement.Meta.ObjectType, CustomerRequirement.Meta.OnPostBuild); 

		public CustomerRequirementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRequirementOnPostBuildMethodInvocation;
			}
		}
	}public partial class InternalRequirementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalRequirementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InternalRequirement.Meta.ObjectType, InternalRequirement.Meta.OnPostBuild); 

		public InternalRequirementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalRequirementOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductRequirementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRequirementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductRequirement.Meta.ObjectType, ProductRequirement.Meta.OnPostBuild); 

		public ProductRequirementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRequirementOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProjectRequirementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectRequirementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProjectRequirement.Meta.ObjectType, ProjectRequirement.Meta.OnPostBuild); 

		public ProjectRequirementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectRequirementOnPostBuildMethodInvocation;
			}
		}
	}public partial class ResourceRequirementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResourceRequirementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ResourceRequirement.Meta.ObjectType, ResourceRequirement.Meta.OnPostBuild); 

		public ResourceRequirementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResourceRequirementOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkRequirementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkRequirementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkRequirement.Meta.ObjectType, WorkRequirement.Meta.OnPostBuild); 

		public WorkRequirementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkRequirementOnPostBuildMethodInvocation;
			}
		}
	}public partial class ActivityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Activity.Meta.ObjectType, Activity.Meta.OnPostBuild); 

		public ActivityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityOnPostBuildMethodInvocation;
			}
		}
	}public partial class MaintenanceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MaintenanceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Maintenance.Meta.ObjectType, Maintenance.Meta.OnPostBuild); 

		public MaintenanceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaintenanceOnPostBuildMethodInvocation;
			}
		}
	}public partial class PhaseOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PhaseOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Phase.Meta.ObjectType, Phase.Meta.OnPostBuild); 

		public PhaseOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhaseOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductionRunOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductionRunOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductionRun.Meta.ObjectType, ProductionRun.Meta.OnPostBuild); 

		public ProductionRunOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductionRunOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProgramOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProgramOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Program.Meta.ObjectType, Program.Meta.OnPostBuild); 

		public ProgramOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProgramOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProjectOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Project.Meta.ObjectType, Project.Meta.OnPostBuild); 

		public ProjectOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectOnPostBuildMethodInvocation;
			}
		}
	}public partial class ResearchOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResearchOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Research.Meta.ObjectType, Research.Meta.OnPostBuild); 

		public ResearchOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResearchOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaskOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Task.Meta.ObjectType, Task.Meta.OnPostBuild); 

		public TaskOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkFlowOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkFlowOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkFlow.Meta.ObjectType, WorkFlow.Meta.OnPostBuild); 

		public WorkFlowOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkFlowOnPostBuildMethodInvocation;
			}
		}
	}public partial class CaseOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Case.Meta.ObjectType, Case.Meta.OnPostBuild); 

		public CaseOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChange.Meta.ObjectType, EngineeringChange.Meta.OnPostBuild); 

		public EngineeringChangeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeOnPostBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntry.Meta.ObjectType, JournalEntry.Meta.OnPostBuild); 

		public JournalEntryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.OnPostBuild); 

		public PersonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPostBuildMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AutomatedAgent.Meta.ObjectType, AutomatedAgent.Meta.OnPostBuild); 

		public AutomatedAgentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPostBuildMethodInvocation;
			}
		}
	}public partial class CreditLineOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditLineOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CreditLine.Meta.ObjectType, CreditLine.Meta.OnPostBuild); 

		public CreditLineOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditLineOnPostBuildMethodInvocation;
			}
		}
	}public partial class DisbursementAccountingTransactionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementAccountingTransactionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DisbursementAccountingTransaction.Meta.ObjectType, DisbursementAccountingTransaction.Meta.OnPostBuild); 

		public DisbursementAccountingTransactionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementAccountingTransactionOnPostBuildMethodInvocation;
			}
		}
	}public partial class NoteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NoteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Note.Meta.ObjectType, Note.Meta.OnPostBuild); 

		public NoteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NoteOnPostBuildMethodInvocation;
			}
		}
	}public partial class ObligationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ObligationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Obligation.Meta.ObjectType, Obligation.Meta.OnPostBuild); 

		public ObligationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ObligationOnPostBuildMethodInvocation;
			}
		}
	}public partial class ReceiptAccountingTransactionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptAccountingTransactionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ReceiptAccountingTransaction.Meta.ObjectType, ReceiptAccountingTransaction.Meta.OnPostBuild); 

		public ReceiptAccountingTransactionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptAccountingTransactionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesAccountingTransactionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAccountingTransactionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesAccountingTransaction.Meta.ObjectType, SalesAccountingTransaction.Meta.OnPostBuild); 

		public SalesAccountingTransactionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAccountingTransactionOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaxDueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TaxDue.Meta.ObjectType, TaxDue.Meta.OnPostBuild); 

		public TaxDueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDueOnPostBuildMethodInvocation;
			}
		}
	}public partial class AmortizationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AmortizationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Amortization.Meta.ObjectType, Amortization.Meta.OnPostBuild); 

		public AmortizationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmortizationOnPostBuildMethodInvocation;
			}
		}
	}public partial class CapitalizationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalizationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Capitalization.Meta.ObjectType, Capitalization.Meta.OnPostBuild); 

		public CapitalizationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalizationOnPostBuildMethodInvocation;
			}
		}
	}public partial class DepreciationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Depreciation.Meta.ObjectType, Depreciation.Meta.OnPostBuild); 

		public DepreciationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationOnPostBuildMethodInvocation;
			}
		}
	}public partial class ItemVarianceAccountingTransactionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ItemVarianceAccountingTransactionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ItemVarianceAccountingTransaction.Meta.ObjectType, ItemVarianceAccountingTransaction.Meta.OnPostBuild); 

		public ItemVarianceAccountingTransactionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemVarianceAccountingTransactionOnPostBuildMethodInvocation;
			}
		}
	}public partial class ClientAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ClientAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ClientAgreement.Meta.ObjectType, ClientAgreement.Meta.OnPostBuild); 

		public ClientAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentAgreement.Meta.ObjectType, EmploymentAgreement.Meta.OnPostBuild); 

		public EmploymentAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseAgreement.Meta.ObjectType, PurchaseAgreement.Meta.OnPostBuild); 

		public PurchaseAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesAgreement.Meta.ObjectType, SalesAgreement.Meta.OnPostBuild); 

		public SalesAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class SubContractorAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SubContractorAgreement.Meta.ObjectType, SubContractorAgreement.Meta.OnPostBuild); 

		public SubContractorAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class AgreementExhibitOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementExhibitOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AgreementExhibit.Meta.ObjectType, AgreementExhibit.Meta.OnPostBuild); 

		public AgreementExhibitOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementExhibitOnPostBuildMethodInvocation;
			}
		}
	}public partial class AgreementPricingProgramOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementPricingProgramOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AgreementPricingProgram.Meta.ObjectType, AgreementPricingProgram.Meta.OnPostBuild); 

		public AgreementPricingProgramOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementPricingProgramOnPostBuildMethodInvocation;
			}
		}
	}public partial class AgreementSectionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementSectionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AgreementSection.Meta.ObjectType, AgreementSection.Meta.OnPostBuild); 

		public AgreementSectionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementSectionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SubAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SubAgreement.Meta.ObjectType, SubAgreement.Meta.OnPostBuild); 

		public SubAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class FinancialTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(FinancialTerm.Meta.ObjectType, FinancialTerm.Meta.OnPostBuild); 

		public FinancialTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class IncentiveOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IncentiveOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Incentive.Meta.ObjectType, Incentive.Meta.OnPostBuild); 

		public IncentiveOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncentiveOnPostBuildMethodInvocation;
			}
		}
	}public partial class InvoiceTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceTerm.Meta.ObjectType, InvoiceTerm.Meta.OnPostBuild); 

		public InvoiceTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class LegalTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LegalTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(LegalTerm.Meta.ObjectType, LegalTerm.Meta.OnPostBuild); 

		public LegalTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class ThresholdOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThresholdOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Threshold.Meta.ObjectType, Threshold.Meta.OnPostBuild); 

		public ThresholdOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThresholdOnPostBuildMethodInvocation;
			}
		}
	}public partial class CountryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Country.Meta.ObjectType, Country.Meta.OnPostBuild); 

		public CountryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPostBuildMethodInvocation;
			}
		}
	}public partial class CountyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(County.Meta.ObjectType, County.Meta.OnPostBuild); 

		public CountyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountyOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProvinceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProvinceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Province.Meta.ObjectType, Province.Meta.OnPostBuild); 

		public ProvinceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProvinceOnPostBuildMethodInvocation;
			}
		}
	}public partial class StateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(State.Meta.ObjectType, State.Meta.OnPostBuild); 

		public StateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StateOnPostBuildMethodInvocation;
			}
		}
	}public partial class TerritoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TerritoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Territory.Meta.ObjectType, Territory.Meta.OnPostBuild); 

		public TerritoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TerritoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmailAddressOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailAddressOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmailAddress.Meta.ObjectType, EmailAddress.Meta.OnPostBuild); 

		public EmailAddressOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailAddressOnPostBuildMethodInvocation;
			}
		}
	}public partial class WebAddressOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WebAddressOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WebAddress.Meta.ObjectType, WebAddress.Meta.OnPostBuild); 

		public WebAddressOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebAddressOnPostBuildMethodInvocation;
			}
		}
	}public partial class PostalAddressOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalAddressOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PostalAddress.Meta.ObjectType, PostalAddress.Meta.OnPostBuild); 

		public PostalAddressOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalAddressOnPostBuildMethodInvocation;
			}
		}
	}public partial class TelecommunicationsNumberOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TelecommunicationsNumberOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TelecommunicationsNumber.Meta.ObjectType, TelecommunicationsNumber.Meta.OnPostBuild); 

		public TelecommunicationsNumberOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TelecommunicationsNumberOnPostBuildMethodInvocation;
			}
		}
	}public partial class BarrelOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BarrelOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Barrel.Meta.ObjectType, Barrel.Meta.OnPostBuild); 

		public BarrelOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BarrelOnPostBuildMethodInvocation;
			}
		}
	}public partial class BinOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BinOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Bin.Meta.ObjectType, Bin.Meta.OnPostBuild); 

		public BinOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BinOnPostBuildMethodInvocation;
			}
		}
	}public partial class RoomOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoomOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Room.Meta.ObjectType, Room.Meta.OnPostBuild); 

		public RoomOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoomOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShelfOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShelfOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Shelf.Meta.ObjectType, Shelf.Meta.OnPostBuild); 

		public ShelfOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShelfOnPostBuildMethodInvocation;
			}
		}
	}public partial class CityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(City.Meta.ObjectType, City.Meta.OnPostBuild); 

		public CityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CityOnPostBuildMethodInvocation;
			}
		}
	}public partial class PostalCodeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalCodeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PostalCode.Meta.ObjectType, PostalCode.Meta.OnPostBuild); 

		public PostalCodeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalCodeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ActivityUsageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityUsageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ActivityUsage.Meta.ObjectType, ActivityUsage.Meta.OnPostBuild); 

		public ActivityUsageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityUsageOnPostBuildMethodInvocation;
			}
		}
	}public partial class TimePeriodUsageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimePeriodUsageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TimePeriodUsage.Meta.ObjectType, TimePeriodUsage.Meta.OnPostBuild); 

		public TimePeriodUsageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimePeriodUsageOnPostBuildMethodInvocation;
			}
		}
	}public partial class VolumeUsageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VolumeUsageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VolumeUsage.Meta.ObjectType, VolumeUsage.Meta.OnPostBuild); 

		public VolumeUsageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VolumeUsageOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomEngagementItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomEngagementItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomEngagementItem.Meta.ObjectType, CustomEngagementItem.Meta.OnPostBuild); 

		public CustomEngagementItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomEngagementItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeliverableOrderItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOrderItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableOrderItem.Meta.ObjectType, DeliverableOrderItem.Meta.OnPostBuild); 

		public DeliverableOrderItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOrderItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class GoodOrderItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOrderItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(GoodOrderItem.Meta.ObjectType, GoodOrderItem.Meta.OnPostBuild); 

		public GoodOrderItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOrderItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalPlacementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalPlacementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalPlacement.Meta.ObjectType, ProfessionalPlacement.Meta.OnPostBuild); 

		public ProfessionalPlacementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalPlacementOnPostBuildMethodInvocation;
			}
		}
	}public partial class StandardServiceOrderItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StandardServiceOrderItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(StandardServiceOrderItem.Meta.ObjectType, StandardServiceOrderItem.Meta.OnPostBuild); 

		public StandardServiceOrderItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StandardServiceOrderItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class EstimatedLaborCostOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedLaborCostOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedLaborCost.Meta.ObjectType, EstimatedLaborCost.Meta.OnPostBuild); 

		public EstimatedLaborCostOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedLaborCostOnPostBuildMethodInvocation;
			}
		}
	}public partial class EstimatedMaterialCostOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedMaterialCostOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedMaterialCost.Meta.ObjectType, EstimatedMaterialCost.Meta.OnPostBuild); 

		public EstimatedMaterialCostOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedMaterialCostOnPostBuildMethodInvocation;
			}
		}
	}public partial class EstimatedOtherCostOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedOtherCostOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedOtherCost.Meta.ObjectType, EstimatedOtherCost.Meta.OnPostBuild); 

		public EstimatedOtherCostOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedOtherCostOnPostBuildMethodInvocation;
			}
		}
	}public partial class BuildingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BuildingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Building.Meta.ObjectType, Building.Meta.OnPostBuild); 

		public BuildingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BuildingOnPostBuildMethodInvocation;
			}
		}
	}public partial class FloorOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FloorOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Floor.Meta.ObjectType, Floor.Meta.OnPostBuild); 

		public FloorOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FloorOnPostBuildMethodInvocation;
			}
		}
	}public partial class OfficeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OfficeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Office.Meta.ObjectType, Office.Meta.OnPostBuild); 

		public OfficeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OfficeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PlantOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PlantOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Plant.Meta.ObjectType, Plant.Meta.OnPostBuild); 

		public PlantOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlantOnPostBuildMethodInvocation;
			}
		}
	}public partial class WarehouseOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WarehouseOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Warehouse.Meta.ObjectType, Warehouse.Meta.OnPostBuild); 

		public WarehouseOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WarehouseOnPostBuildMethodInvocation;
			}
		}
	}public partial class BankAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BankAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BankAccount.Meta.ObjectType, BankAccount.Meta.OnPostBuild); 

		public BankAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class CreditCardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CreditCard.Meta.ObjectType, CreditCard.Meta.OnPostBuild); 

		public CreditCardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardOnPostBuildMethodInvocation;
			}
		}
	}public partial class InvestmentAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvestmentAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InvestmentAccount.Meta.ObjectType, InvestmentAccount.Meta.OnPostBuild); 

		public InvestmentAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvestmentAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class OwnBankAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OwnBankAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OwnBankAccount.Meta.ObjectType, OwnBankAccount.Meta.OnPostBuild); 

		public OwnBankAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnBankAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class OwnCreditCardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OwnCreditCardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OwnCreditCard.Meta.ObjectType, OwnCreditCard.Meta.OnPostBuild); 

		public OwnCreditCardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnCreditCardOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccountAdjustmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountAdjustmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccountAdjustment.Meta.ObjectType, AccountAdjustment.Meta.OnPostBuild); 

		public AccountAdjustmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountAdjustmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class DepositOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepositOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Deposit.Meta.ObjectType, Deposit.Meta.OnPostBuild); 

		public DepositOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepositOnPostBuildMethodInvocation;
			}
		}
	}public partial class FinancialAccountAdjustmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialAccountAdjustmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(FinancialAccountAdjustment.Meta.ObjectType, FinancialAccountAdjustment.Meta.OnPostBuild); 

		public FinancialAccountAdjustmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialAccountAdjustmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class WithdrawalOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WithdrawalOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Withdrawal.Meta.ObjectType, Withdrawal.Meta.OnPostBuild); 

		public WithdrawalOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WithdrawalOnPostBuildMethodInvocation;
			}
		}
	}public partial class EquipmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EquipmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Equipment.Meta.ObjectType, Equipment.Meta.OnPostBuild); 

		public EquipmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EquipmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PropertyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PropertyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Property.Meta.ObjectType, Property.Meta.OnPostBuild); 

		public PropertyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PropertyOnPostBuildMethodInvocation;
			}
		}
	}public partial class VehicleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VehicleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Vehicle.Meta.ObjectType, Vehicle.Meta.OnPostBuild); 

		public VehicleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VehicleOnPostBuildMethodInvocation;
			}
		}
	}public partial class RegionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RegionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Region.Meta.ObjectType, Region.Meta.OnPostBuild); 

		public RegionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RegionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesTerritoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesTerritoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesTerritory.Meta.ObjectType, SalesTerritory.Meta.OnPostBuild); 

		public SalesTerritoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesTerritoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class ServiceTerritoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceTerritoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ServiceTerritory.Meta.ObjectType, ServiceTerritory.Meta.OnPostBuild); 

		public ServiceTerritoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceTerritoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class ManufacturingConfigurationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingConfigurationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturingConfiguration.Meta.ObjectType, ManufacturingConfiguration.Meta.OnPostBuild); 

		public ManufacturingConfigurationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingConfigurationOnPostBuildMethodInvocation;
			}
		}
	}public partial class ServiceConfigurationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceConfigurationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ServiceConfiguration.Meta.ObjectType, ServiceConfiguration.Meta.OnPostBuild); 

		public ServiceConfigurationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceConfigurationOnPostBuildMethodInvocation;
			}
		}
	}public partial class CurrencyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Currency.Meta.ObjectType, Currency.Meta.OnPostBuild); 

		public CurrencyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPostBuildMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DiscountAdjustment.Meta.ObjectType, DiscountAdjustment.Meta.OnPostBuild); 

		public DiscountAdjustmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class FeeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FeeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Fee.Meta.ObjectType, Fee.Meta.OnPostBuild); 

		public FeeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FeeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingChargeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingChargeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShippingAndHandlingCharge.Meta.ObjectType, ShippingAndHandlingCharge.Meta.OnPostBuild); 

		public ShippingAndHandlingChargeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingChargeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SurchargeAdjustmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeAdjustmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SurchargeAdjustment.Meta.ObjectType, SurchargeAdjustment.Meta.OnPostBuild); 

		public SurchargeAdjustmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeAdjustmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class FinishedGoodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinishedGoodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(FinishedGood.Meta.ObjectType, FinishedGood.Meta.OnPostBuild); 

		public FinishedGoodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinishedGoodOnPostBuildMethodInvocation;
			}
		}
	}public partial class RawMaterialOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RawMaterialOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RawMaterial.Meta.ObjectType, RawMaterial.Meta.OnPostBuild); 

		public RawMaterialOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RawMaterialOnPostBuildMethodInvocation;
			}
		}
	}public partial class SubAssemblyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubAssemblyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SubAssembly.Meta.ObjectType, SubAssembly.Meta.OnPostBuild); 

		public SubAssemblyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAssemblyOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngineeringBomOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringBomOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringBom.Meta.ObjectType, EngineeringBom.Meta.OnPostBuild); 

		public EngineeringBomOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringBomOnPostBuildMethodInvocation;
			}
		}
	}public partial class ManufacturingBomOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingBomOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturingBom.Meta.ObjectType, ManufacturingBom.Meta.OnPostBuild); 

		public ManufacturingBomOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingBomOnPostBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisation.Meta.ObjectType, InternalOrganisation.Meta.OnPostBuild); 

		public InternalOrganisationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.OnPostBuild); 

		public OrganisationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPostBuildMethodInvocation;
			}
		}
	}public partial class IndustryClassificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IndustryClassificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(IndustryClassification.Meta.ObjectType, IndustryClassification.Meta.OnPostBuild); 

		public IndustryClassificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IndustryClassificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class ClientRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ClientRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ClientRelationship.Meta.ObjectType, ClientRelationship.Meta.OnPostBuild); 

		public ClientRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRelationship.Meta.ObjectType, CustomerRelationship.Meta.OnPostBuild); 

		public CustomerRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class DistributionChannelRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DistributionChannelRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DistributionChannelRelationship.Meta.ObjectType, DistributionChannelRelationship.Meta.OnPostBuild); 

		public DistributionChannelRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DistributionChannelRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Employment.Meta.ObjectType, Employment.Meta.OnPostBuild); 

		public EmploymentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationContactRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationContactRelationship.Meta.ObjectType, OrganisationContactRelationship.Meta.OnPostBuild); 

		public OrganisationContactRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationRollUpOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRollUpOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationRollUp.Meta.ObjectType, OrganisationRollUp.Meta.OnPostBuild); 

		public OrganisationRollUpOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRollUpOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartnershipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartnershipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Partnership.Meta.ObjectType, Partnership.Meta.OnPostBuild); 

		public PartnershipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartnershipOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalServicesRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalServicesRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalServicesRelationship.Meta.ObjectType, ProfessionalServicesRelationship.Meta.OnPostBuild); 

		public ProfessionalServicesRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalServicesRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRelationship.Meta.ObjectType, SalesRepRelationship.Meta.OnPostBuild); 

		public SalesRepRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class SubContractorRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SubContractorRelationship.Meta.ObjectType, SubContractorRelationship.Meta.OnPostBuild); 

		public SubContractorRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class SupplierRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SupplierRelationship.Meta.ObjectType, SupplierRelationship.Meta.OnPostBuild); 

		public SupplierRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProspectRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProspectRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProspectRelationship.Meta.ObjectType, ProspectRelationship.Meta.OnPostBuild); 

		public ProspectRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProspectRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class DisbursementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Disbursement.Meta.ObjectType, Disbursement.Meta.OnPostBuild); 

		public DisbursementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementOnPostBuildMethodInvocation;
			}
		}
	}public partial class PayCheckOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayCheckOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PayCheck.Meta.ObjectType, PayCheck.Meta.OnPostBuild); 

		public PayCheckOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayCheckOnPostBuildMethodInvocation;
			}
		}
	}public partial class ReceiptOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Receipt.Meta.ObjectType, Receipt.Meta.OnPostBuild); 

		public ReceiptOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptOnPostBuildMethodInvocation;
			}
		}
	}public partial class CashOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CashOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Cash.Meta.ObjectType, Cash.Meta.OnPostBuild); 

		public CashOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CashOnPostBuildMethodInvocation;
			}
		}
	}public partial class BasePriceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BasePrice.Meta.ObjectType, BasePrice.Meta.OnPostBuild); 

		public BasePriceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceOnPostBuildMethodInvocation;
			}
		}
	}public partial class DiscountComponentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountComponentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DiscountComponent.Meta.ObjectType, DiscountComponent.Meta.OnPostBuild); 

		public DiscountComponentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountComponentOnPostBuildMethodInvocation;
			}
		}
	}public partial class ManufacturerSuggestedRetailPriceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturerSuggestedRetailPriceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturerSuggestedRetailPrice.Meta.ObjectType, ManufacturerSuggestedRetailPrice.Meta.OnPostBuild); 

		public ManufacturerSuggestedRetailPriceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturerSuggestedRetailPriceOnPostBuildMethodInvocation;
			}
		}
	}public partial class OneTimeChargeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OneTimeChargeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OneTimeCharge.Meta.ObjectType, OneTimeCharge.Meta.OnPostBuild); 

		public OneTimeChargeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneTimeChargeOnPostBuildMethodInvocation;
			}
		}
	}public partial class RecurringChargeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RecurringChargeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RecurringCharge.Meta.ObjectType, RecurringCharge.Meta.OnPostBuild); 

		public RecurringChargeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RecurringChargeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SurchargeComponentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeComponentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SurchargeComponent.Meta.ObjectType, SurchargeComponent.Meta.OnPostBuild); 

		public SurchargeComponentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeComponentOnPostBuildMethodInvocation;
			}
		}
	}public partial class UtilizationChargeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UtilizationChargeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(UtilizationCharge.Meta.ObjectType, UtilizationCharge.Meta.OnPostBuild); 

		public UtilizationChargeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UtilizationChargeOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeliverableBasedServiceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableBasedServiceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableBasedService.Meta.ObjectType, DeliverableBasedService.Meta.OnPostBuild); 

		public DeliverableBasedServiceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableBasedServiceOnPostBuildMethodInvocation;
			}
		}
	}public partial class TimeAndMaterialsServiceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeAndMaterialsServiceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TimeAndMaterialsService.Meta.ObjectType, TimeAndMaterialsService.Meta.OnPostBuild); 

		public TimeAndMaterialsServiceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeAndMaterialsServiceOnPostBuildMethodInvocation;
			}
		}
	}public partial class GoodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Good.Meta.ObjectType, Good.Meta.OnPostBuild); 

		public GoodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOnPostBuildMethodInvocation;
			}
		}
	}public partial class MarketingPackageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingPackageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(MarketingPackage.Meta.ObjectType, MarketingPackage.Meta.OnPostBuild); 

		public MarketingPackageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingPackageOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductConfigurationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductConfigurationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductConfiguration.Meta.ObjectType, ProductConfiguration.Meta.OnPostBuild); 

		public ProductConfigurationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductConfigurationOnPostBuildMethodInvocation;
			}
		}
	}public partial class DimensionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DimensionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Dimension.Meta.ObjectType, Dimension.Meta.OnPostBuild); 

		public DimensionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DimensionOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductQuoteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductQuote.Meta.ObjectType, ProductQuote.Meta.OnPostBuild); 

		public ProductQuoteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProposalOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Proposal.Meta.ObjectType, Proposal.Meta.OnPostBuild); 

		public ProposalOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalOnPostBuildMethodInvocation;
			}
		}
	}public partial class StatementOfWorkOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(StatementOfWork.Meta.ObjectType, StatementOfWork.Meta.OnPostBuild); 

		public StatementOfWorkOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestForInformationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequestForInformation.Meta.ObjectType, RequestForInformation.Meta.OnPostBuild); 

		public RequestForInformationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestForProposalOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequestForProposal.Meta.ObjectType, RequestForProposal.Meta.OnPostBuild); 

		public RequestForProposalOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestForQuoteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequestForQuote.Meta.ObjectType, RequestForQuote.Meta.OnPostBuild); 

		public RequestForQuoteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeliverableTurnoverOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTurnoverOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableTurnover.Meta.ObjectType, DeliverableTurnover.Meta.OnPostBuild); 

		public DeliverableTurnoverOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTurnoverOnPostBuildMethodInvocation;
			}
		}
	}public partial class ExpenseEntryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExpenseEntryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ExpenseEntry.Meta.ObjectType, ExpenseEntry.Meta.OnPostBuild); 

		public ExpenseEntryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExpenseEntryOnPostBuildMethodInvocation;
			}
		}
	}public partial class MaterialsUsageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MaterialsUsageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(MaterialsUsage.Meta.ObjectType, MaterialsUsage.Meta.OnPostBuild); 

		public MaterialsUsageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaterialsUsageOnPostBuildMethodInvocation;
			}
		}
	}public partial class TimeEntryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeEntryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TimeEntry.Meta.ObjectType, TimeEntry.Meta.OnPostBuild); 

		public TimeEntryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeEntryOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccessControlOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.OnPostBuild); 

		public AccessControlOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPostBuildMethodInvocation;
			}
		}
	}public partial class LanguageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Language.Meta.ObjectType, Language.Meta.OnPostBuild); 

		public LanguageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPostBuildMethodInvocation;
			}
		}
	}public partial class LocaleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Locale.Meta.ObjectType, Locale.Meta.OnPostBuild); 

		public LocaleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPostBuildMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(LocalisedText.Meta.ObjectType, LocalisedText.Meta.OnPostBuild); 

		public LocalisedTextOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.OnPostBuild); 

		public MediaOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(MediaType.Meta.ObjectType, MediaType.Meta.OnPostBuild); 

		public MediaTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PermissionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.OnPostBuild); 

		public PermissionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PrintQueueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PrintQueueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PrintQueue.Meta.ObjectType, PrintQueue.Meta.OnPostBuild); 

		public PrintQueueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PrintQueueOnPostBuildMethodInvocation;
			}
		}
	}public partial class RoleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Role.Meta.ObjectType, Role.Meta.OnPostBuild); 

		public RoleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPostBuildMethodInvocation;
			}
		}
	}public partial class SingletonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Singleton.Meta.ObjectType, Singleton.Meta.OnPostBuild); 

		public SingletonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPostBuildMethodInvocation;
			}
		}
	}public partial class UserGroupOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(UserGroup.Meta.ObjectType, UserGroup.Meta.OnPostBuild); 

		public UserGroupOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccountingTransactionDetailOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionDetailOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionDetail.Meta.ObjectType, AccountingTransactionDetail.Meta.OnPostBuild); 

		public AccountingTransactionDetailOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionDetailOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccountingTransactionNumberOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionNumberOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionNumber.Meta.ObjectType, AccountingTransactionNumber.Meta.OnPostBuild); 

		public AccountingTransactionNumberOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionNumberOnPostBuildMethodInvocation;
			}
		}
	}public partial class AddendumOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AddendumOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Addendum.Meta.ObjectType, Addendum.Meta.OnPostBuild); 

		public AddendumOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AddendumOnPostBuildMethodInvocation;
			}
		}
	}public partial class AmountDueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AmountDueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(AmountDue.Meta.ObjectType, AmountDue.Meta.OnPostBuild); 

		public AmountDueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmountDueOnPostBuildMethodInvocation;
			}
		}
	}public partial class BankOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BankOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Bank.Meta.ObjectType, Bank.Meta.OnPostBuild); 

		public BankOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankOnPostBuildMethodInvocation;
			}
		}
	}public partial class BenefitOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BenefitOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Benefit.Meta.ObjectType, Benefit.Meta.OnPostBuild); 

		public BenefitOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BenefitOnPostBuildMethodInvocation;
			}
		}
	}public partial class BillingAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BillingAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BillingAccount.Meta.ObjectType, BillingAccount.Meta.OnPostBuild); 

		public BillingAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillingAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class BrandOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BrandOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Brand.Meta.ObjectType, Brand.Meta.OnPostBuild); 

		public BrandOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BrandOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetItem.Meta.ObjectType, BudgetItem.Meta.OnPostBuild); 

		public BudgetItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetReviewOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetReviewOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetReview.Meta.ObjectType, BudgetReview.Meta.OnPostBuild); 

		public BudgetReviewOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetReviewOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetRevisionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetRevision.Meta.ObjectType, BudgetRevision.Meta.OnPostBuild); 

		public BudgetRevisionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetRevisionImpactOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionImpactOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetRevisionImpact.Meta.ObjectType, BudgetRevisionImpact.Meta.OnPostBuild); 

		public BudgetRevisionImpactOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionImpactOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetStatus.Meta.ObjectType, BudgetStatus.Meta.OnPostBuild); 

		public BudgetStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class CarrierOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CarrierOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Carrier.Meta.ObjectType, Carrier.Meta.OnPostBuild); 

		public CarrierOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CarrierOnPostBuildMethodInvocation;
			}
		}
	}public partial class CaseStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CaseStatus.Meta.ObjectType, CaseStatus.Meta.OnPostBuild); 

		public CaseStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class ChartOfAccountsOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ChartOfAccountsOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ChartOfAccounts.Meta.ObjectType, ChartOfAccounts.Meta.OnPostBuild); 

		public ChartOfAccountsOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ChartOfAccountsOnPostBuildMethodInvocation;
			}
		}
	}public partial class CitizenshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CitizenshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Citizenship.Meta.ObjectType, Citizenship.Meta.OnPostBuild); 

		public CitizenshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CitizenshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class CommunicationEventStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventStatus.Meta.ObjectType, CommunicationEventStatus.Meta.OnPostBuild); 

		public CommunicationEventStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class CostCenterOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CostCenter.Meta.ObjectType, CostCenter.Meta.OnPostBuild); 

		public CostCenterOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterOnPostBuildMethodInvocation;
			}
		}
	}public partial class CreditCardCompanyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardCompanyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CreditCardCompany.Meta.ObjectType, CreditCardCompany.Meta.OnPostBuild); 

		public CreditCardCompanyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardCompanyOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturnStatus.Meta.ObjectType, CustomerReturnStatus.Meta.OnPostBuild); 

		public CustomerReturnStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipmentStatus.Meta.ObjectType, CustomerShipmentStatus.Meta.OnPostBuild); 

		public CustomerShipmentStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeductionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Deduction.Meta.ObjectType, Deduction.Meta.OnPostBuild); 

		public DeductionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeliverableOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Deliverable.Meta.ObjectType, Deliverable.Meta.OnPostBuild); 

		public DeliverableOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeploymentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeploymentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Deployment.Meta.ObjectType, Deployment.Meta.OnPostBuild); 

		public DeploymentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeploymentOnPostBuildMethodInvocation;
			}
		}
	}public partial class DepreciationMethodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationMethodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DepreciationMethod.Meta.ObjectType, DepreciationMethod.Meta.OnPostBuild); 

		public DepreciationMethodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationMethodOnPostBuildMethodInvocation;
			}
		}
	}public partial class DesiredProductFeatureOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DesiredProductFeatureOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DesiredProductFeature.Meta.ObjectType, DesiredProductFeature.Meta.OnPostBuild); 

		public DesiredProductFeatureOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DesiredProductFeatureOnPostBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DropShipmentStatus.Meta.ObjectType, DropShipmentStatus.Meta.OnPostBuild); 

		public DropShipmentStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmailTemplateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailTemplateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmailTemplate.Meta.ObjectType, EmailTemplate.Meta.OnPostBuild); 

		public EmailTemplateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailTemplateOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplication.Meta.ObjectType, EmploymentApplication.Meta.OnPostBuild); 

		public EmploymentApplicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngagementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Engagement.Meta.ObjectType, Engagement.Meta.OnPostBuild); 

		public EngagementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngagementRateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementRateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngagementRate.Meta.ObjectType, EngagementRate.Meta.OnPostBuild); 

		public EngagementRateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementRateOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChangeStatus.Meta.ObjectType, EngineeringChangeStatus.Meta.OnPostBuild); 

		public EngineeringChangeStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccount.Meta.ObjectType, GeneralLedgerAccount.Meta.OnPostBuild); 

		public GeneralLedgerAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountGroupOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountGroupOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccountGroup.Meta.ObjectType, GeneralLedgerAccountGroup.Meta.OnPostBuild); 

		public GeneralLedgerAccountGroupOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountGroupOnPostBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccountType.Meta.ObjectType, GeneralLedgerAccountType.Meta.OnPostBuild); 

		public GeneralLedgerAccountTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class GlBudgetAllocationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GlBudgetAllocationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(GlBudgetAllocation.Meta.ObjectType, GlBudgetAllocation.Meta.OnPostBuild); 

		public GlBudgetAllocationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GlBudgetAllocationOnPostBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationAccountingPreferenceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationAccountingPreferenceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationAccountingPreference.Meta.ObjectType, InternalOrganisationAccountingPreference.Meta.OnPostBuild); 

		public InternalOrganisationAccountingPreferenceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationAccountingPreferenceOnPostBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenue.Meta.ObjectType, InternalOrganisationRevenue.Meta.OnPostBuild); 

		public InternalOrganisationRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenueHistory.Meta.ObjectType, InternalOrganisationRevenueHistory.Meta.OnPostBuild); 

		public InternalOrganisationRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class InventoryItemVarianceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemVarianceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InventoryItemVariance.Meta.ObjectType, InventoryItemVariance.Meta.OnPostBuild); 

		public InventoryItemVarianceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemVarianceOnPostBuildMethodInvocation;
			}
		}
	}public partial class InvoiceVatRateItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceVatRateItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceVatRateItem.Meta.ObjectType, InvoiceVatRateItem.Meta.OnPostBuild); 

		public InvoiceVatRateItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceVatRateItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class ItemIssuanceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ItemIssuance.Meta.ObjectType, ItemIssuance.Meta.OnPostBuild); 

		public ItemIssuanceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceOnPostBuildMethodInvocation;
			}
		}
	}public partial class JournalOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Journal.Meta.ObjectType, Journal.Meta.OnPostBuild); 

		public JournalOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalOnPostBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryDetailOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryDetailOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntryDetail.Meta.ObjectType, JournalEntryDetail.Meta.OnPostBuild); 

		public JournalEntryDetailOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryDetailOnPostBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryNumberOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryNumberOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntryNumber.Meta.ObjectType, JournalEntryNumber.Meta.OnPostBuild); 

		public JournalEntryNumberOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryNumberOnPostBuildMethodInvocation;
			}
		}
	}public partial class LegalFormOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LegalFormOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(LegalForm.Meta.ObjectType, LegalForm.Meta.OnPostBuild); 

		public LegalFormOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalFormOnPostBuildMethodInvocation;
			}
		}
	}public partial class LotOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LotOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Lot.Meta.ObjectType, Lot.Meta.OnPostBuild); 

		public LotOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LotOnPostBuildMethodInvocation;
			}
		}
	}public partial class NeededSkillOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NeededSkillOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(NeededSkill.Meta.ObjectType, NeededSkill.Meta.OnPostBuild); 

		public NeededSkillOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NeededSkillOnPostBuildMethodInvocation;
			}
		}
	}public partial class NewsItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NewsItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(NewsItem.Meta.ObjectType, NewsItem.Meta.OnPostBuild); 

		public NewsItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NewsItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItemStatus.Meta.ObjectType, NonSerializedInventoryItemStatus.Meta.OnPostBuild); 

		public NonSerializedInventoryItemStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderKindOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderKindOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderKind.Meta.ObjectType, OrderKind.Meta.OnPostBuild); 

		public OrderKindOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderKindOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderQuantityBreakOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderQuantityBreakOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderQuantityBreak.Meta.ObjectType, OrderQuantityBreak.Meta.OnPostBuild); 

		public OrderQuantityBreakOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderQuantityBreakOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderRequirementCommitmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderRequirementCommitmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderRequirementCommitment.Meta.ObjectType, OrderRequirementCommitment.Meta.OnPostBuild); 

		public OrderRequirementCommitmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderRequirementCommitmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderTerm.Meta.ObjectType, OrderTerm.Meta.OnPostBuild); 

		public OrderTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderValueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderValueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderValue.Meta.ObjectType, OrderValue.Meta.OnPostBuild); 

		public OrderValueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderValueOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationContactKindOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactKindOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationContactKind.Meta.ObjectType, OrganisationContactKind.Meta.OnPostBuild); 

		public OrganisationContactKindOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactKindOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationGlAccount.Meta.ObjectType, OrganisationGlAccount.Meta.OnPostBuild); 

		public OrganisationGlAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountBalanceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountBalanceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationGlAccountBalance.Meta.ObjectType, OrganisationGlAccountBalance.Meta.OnPostBuild); 

		public OrganisationGlAccountBalanceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountBalanceOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Package.Meta.ObjectType, Package.Meta.OnPostBuild); 

		public PackageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackageQuantityBreakOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageQuantityBreakOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PackageQuantityBreak.Meta.ObjectType, PackageQuantityBreak.Meta.OnPostBuild); 

		public PackageQuantityBreakOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageQuantityBreakOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackageRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenue.Meta.ObjectType, PackageRevenue.Meta.OnPostBuild); 

		public PackageRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackageRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenueHistory.Meta.ObjectType, PackageRevenueHistory.Meta.OnPostBuild); 

		public PackageRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackagingContentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingContentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PackagingContent.Meta.ObjectType, PackagingContent.Meta.OnPostBuild); 

		public PackagingContentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingContentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartBillOfMaterialSubstituteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartBillOfMaterialSubstituteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartBillOfMaterialSubstitute.Meta.ObjectType, PartBillOfMaterialSubstitute.Meta.OnPostBuild); 

		public PartBillOfMaterialSubstituteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartBillOfMaterialSubstituteOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartRevisionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartRevisionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartRevision.Meta.ObjectType, PartRevision.Meta.OnPostBuild); 

		public PartRevisionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartRevisionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartSpecificationStatus.Meta.ObjectType, PartSpecificationStatus.Meta.OnPostBuild); 

		public PartSpecificationStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartSubstituteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSubstituteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartSubstitute.Meta.ObjectType, PartSubstitute.Meta.OnPostBuild); 

		public PartSubstituteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSubstituteOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyBenefitOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyBenefitOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyBenefit.Meta.ObjectType, PartyBenefit.Meta.OnPostBuild); 

		public PartyBenefitOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyBenefitOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyContactMechanismOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyContactMechanismOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyContactMechanism.Meta.ObjectType, PartyContactMechanism.Meta.OnPostBuild); 

		public PartyContactMechanismOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyContactMechanismOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyFixedAssetAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyFixedAssetAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyFixedAssetAssignment.Meta.ObjectType, PartyFixedAssetAssignment.Meta.OnPostBuild); 

		public PartyFixedAssetAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyFixedAssetAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenue.Meta.ObjectType, PartyPackageRevenue.Meta.OnPostBuild); 

		public PartyPackageRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenueHistory.Meta.ObjectType, PartyPackageRevenueHistory.Meta.OnPostBuild); 

		public PartyPackageRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenue.Meta.ObjectType, PartyProductCategoryRevenue.Meta.OnPostBuild); 

		public PartyProductCategoryRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenueHistory.Meta.ObjectType, PartyProductCategoryRevenueHistory.Meta.OnPostBuild); 

		public PartyProductCategoryRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenue.Meta.ObjectType, PartyProductRevenue.Meta.OnPostBuild); 

		public PartyProductRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenueHistory.Meta.ObjectType, PartyProductRevenueHistory.Meta.OnPostBuild); 

		public PartyProductRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenue.Meta.ObjectType, PartyRevenue.Meta.OnPostBuild); 

		public PartyRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenueHistory.Meta.ObjectType, PartyRevenueHistory.Meta.OnPostBuild); 

		public PartyRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartySkillOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartySkillOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartySkill.Meta.ObjectType, PartySkill.Meta.OnPostBuild); 

		public PartySkillOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartySkillOnPostBuildMethodInvocation;
			}
		}
	}public partial class PassportOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PassportOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Passport.Meta.ObjectType, Passport.Meta.OnPostBuild); 

		public PassportOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PassportOnPostBuildMethodInvocation;
			}
		}
	}public partial class PayGradeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayGradeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PayGrade.Meta.ObjectType, PayGrade.Meta.OnPostBuild); 

		public PayGradeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayGradeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PayHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PayHistory.Meta.ObjectType, PayHistory.Meta.OnPostBuild); 

		public PayHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class PaymentApplicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentApplicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PaymentApplication.Meta.ObjectType, PaymentApplication.Meta.OnPostBuild); 

		public PaymentApplicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentApplicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class PaymentBudgetAllocationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentBudgetAllocationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PaymentBudgetAllocation.Meta.ObjectType, PaymentBudgetAllocation.Meta.OnPostBuild); 

		public PaymentBudgetAllocationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentBudgetAllocationOnPostBuildMethodInvocation;
			}
		}
	}public partial class PayrollPreferenceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayrollPreferenceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PayrollPreference.Meta.ObjectType, PayrollPreference.Meta.OnPostBuild); 

		public PayrollPreferenceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayrollPreferenceOnPostBuildMethodInvocation;
			}
		}
	}public partial class PerformanceNoteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceNoteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceNote.Meta.ObjectType, PerformanceNote.Meta.OnPostBuild); 

		public PerformanceNoteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceNoteOnPostBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReview.Meta.ObjectType, PerformanceReview.Meta.OnPostBuild); 

		public PerformanceReviewOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewOnPostBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReviewItem.Meta.ObjectType, PerformanceReviewItem.Meta.OnPostBuild); 

		public PerformanceReviewItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonTrainingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonTrainingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PersonTraining.Meta.ObjectType, PersonTraining.Meta.OnPostBuild); 

		public PersonTrainingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonTrainingOnPostBuildMethodInvocation;
			}
		}
	}public partial class PickListItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PickListItem.Meta.ObjectType, PickListItem.Meta.OnPostBuild); 

		public PickListItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class PickListStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PickListStatus.Meta.ObjectType, PickListStatus.Meta.OnPostBuild); 

		public PickListStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Position.Meta.ObjectType, Position.Meta.OnPostBuild); 

		public PositionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionFulfillmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionFulfillmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionFulfillment.Meta.ObjectType, PositionFulfillment.Meta.OnPostBuild); 

		public PositionFulfillmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionFulfillmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionReportingStructureOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionReportingStructureOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionReportingStructure.Meta.ObjectType, PositionReportingStructure.Meta.OnPostBuild); 

		public PositionReportingStructureOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionReportingStructureOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionResponsibilityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionResponsibilityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionResponsibility.Meta.ObjectType, PositionResponsibility.Meta.OnPostBuild); 

		public PositionResponsibilityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionResponsibilityOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionType.Meta.ObjectType, PositionType.Meta.OnPostBuild); 

		public PositionTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionTypeRateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeRateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PositionTypeRate.Meta.ObjectType, PositionTypeRate.Meta.OnPostBuild); 

		public PositionTypeRateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeRateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PostalBoundaryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalBoundaryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PostalBoundary.Meta.ObjectType, PostalBoundary.Meta.OnPostBuild); 

		public PostalBoundaryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalBoundaryOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductCategoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategory.Meta.ObjectType, ProductCategory.Meta.OnPostBuild); 

		public ProductCategoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenue.Meta.ObjectType, ProductCategoryRevenue.Meta.OnPostBuild); 

		public ProductCategoryRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenueHistory.Meta.ObjectType, ProductCategoryRevenueHistory.Meta.OnPostBuild); 

		public ProductCategoryRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductDeliverySkillRequirementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDeliverySkillRequirementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductDeliverySkillRequirement.Meta.ObjectType, ProductDeliverySkillRequirement.Meta.OnPostBuild); 

		public ProductDeliverySkillRequirementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDeliverySkillRequirementOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductFeatureApplicabilityRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductFeatureApplicabilityRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductFeatureApplicabilityRelationship.Meta.ObjectType, ProductFeatureApplicabilityRelationship.Meta.OnPostBuild); 

		public ProductFeatureApplicabilityRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductFeatureApplicabilityRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductPurchasePriceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductPurchasePriceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductPurchasePrice.Meta.ObjectType, ProductPurchasePrice.Meta.OnPostBuild); 

		public ProductPurchasePriceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductPurchasePriceOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenue.Meta.ObjectType, ProductRevenue.Meta.OnPostBuild); 

		public ProductRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenueHistory.Meta.ObjectType, ProductRevenueHistory.Meta.OnPostBuild); 

		public ProductRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalAssignment.Meta.ObjectType, ProfessionalAssignment.Meta.OnPostBuild); 

		public ProfessionalAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemStatus.Meta.ObjectType, PurchaseInvoiceItemStatus.Meta.OnPostBuild); 

		public PurchaseInvoiceItemStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceStatus.Meta.ObjectType, PurchaseInvoiceStatus.Meta.OnPostBuild); 

		public PurchaseInvoiceStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItemStatus.Meta.ObjectType, PurchaseOrderItemStatus.Meta.OnPostBuild); 

		public PurchaseOrderItemStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderStatus.Meta.ObjectType, PurchaseOrderStatus.Meta.OnPostBuild); 

		public PurchaseOrderStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturnStatus.Meta.ObjectType, PurchaseReturnStatus.Meta.OnPostBuild); 

		public PurchaseReturnStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipmentStatus.Meta.ObjectType, PurchaseShipmentStatus.Meta.OnPostBuild); 

		public PurchaseShipmentStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class QuoteItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(QuoteItem.Meta.ObjectType, QuoteItem.Meta.OnPostBuild); 

		public QuoteItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class QuoteTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(QuoteTerm.Meta.ObjectType, QuoteTerm.Meta.OnPostBuild); 

		public QuoteTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequestItem.Meta.ObjectType, RequestItem.Meta.OnPostBuild); 

		public RequestItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequirementBudgetAllocationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementBudgetAllocationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequirementBudgetAllocation.Meta.ObjectType, RequirementBudgetAllocation.Meta.OnPostBuild); 

		public RequirementBudgetAllocationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementBudgetAllocationOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequirementCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequirementCommunication.Meta.ObjectType, RequirementCommunication.Meta.OnPostBuild); 

		public RequirementCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequirementStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequirementStatus.Meta.ObjectType, RequirementStatus.Meta.OnPostBuild); 

		public RequirementStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class RespondingPartyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RespondingPartyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RespondingParty.Meta.ObjectType, RespondingParty.Meta.OnPostBuild); 

		public RespondingPartyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RespondingPartyOnPostBuildMethodInvocation;
			}
		}
	}public partial class ResponsibilityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResponsibilityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Responsibility.Meta.ObjectType, Responsibility.Meta.OnPostBuild); 

		public ResponsibilityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResponsibilityOnPostBuildMethodInvocation;
			}
		}
	}public partial class ResumeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResumeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Resume.Meta.ObjectType, Resume.Meta.OnPostBuild); 

		public ResumeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResumeOnPostBuildMethodInvocation;
			}
		}
	}public partial class RevenueQuantityBreakOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueQuantityBreakOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RevenueQuantityBreak.Meta.ObjectType, RevenueQuantityBreak.Meta.OnPostBuild); 

		public RevenueQuantityBreakOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueQuantityBreakOnPostBuildMethodInvocation;
			}
		}
	}public partial class RevenueValueBreakOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueValueBreakOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RevenueValueBreak.Meta.ObjectType, RevenueValueBreak.Meta.OnPostBuild); 

		public RevenueValueBreakOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueValueBreakOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalaryStepOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalaryStepOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalaryStep.Meta.ObjectType, SalaryStep.Meta.OnPostBuild); 

		public SalaryStepOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalaryStepOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenue.Meta.ObjectType, SalesChannelRevenue.Meta.OnPostBuild); 

		public SalesChannelRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenueHistory.Meta.ObjectType, SalesChannelRevenueHistory.Meta.OnPostBuild); 

		public SalesChannelRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemStatus.Meta.ObjectType, SalesInvoiceItemStatus.Meta.OnPostBuild); 

		public SalesInvoiceItemStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceStatus.Meta.ObjectType, SalesInvoiceStatus.Meta.OnPostBuild); 

		public SalesInvoiceStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItemStatus.Meta.ObjectType, SalesOrderItemStatus.Meta.OnPostBuild); 

		public SalesOrderItemStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderStatus.Meta.ObjectType, SalesOrderStatus.Meta.OnPostBuild); 

		public SalesOrderStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepCommissionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepCommissionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepCommission.Meta.ObjectType, SalesRepCommission.Meta.OnPostBuild); 

		public SalesRepCommissionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepCommissionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyProductCategoryRevenue.Meta.ObjectType, SalesRepPartyProductCategoryRevenue.Meta.OnPostBuild); 

		public SalesRepPartyProductCategoryRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyRevenue.Meta.ObjectType, SalesRepPartyRevenue.Meta.OnPostBuild); 

		public SalesRepPartyRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepProductCategoryRevenue.Meta.ObjectType, SalesRepProductCategoryRevenue.Meta.OnPostBuild); 

		public SalesRepProductCategoryRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenue.Meta.ObjectType, SalesRepRevenue.Meta.OnPostBuild); 

		public SalesRepRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenueHistory.Meta.ObjectType, SalesRepRevenueHistory.Meta.OnPostBuild); 

		public SalesRepRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItemStatus.Meta.ObjectType, SerializedInventoryItemStatus.Meta.OnPostBuild); 

		public SerializedInventoryItemStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class ServiceEntryHeaderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryHeaderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ServiceEntryHeader.Meta.ObjectType, ServiceEntryHeader.Meta.OnPostBuild); 

		public ServiceEntryHeaderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryHeaderOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentItem.Meta.ObjectType, ShipmentItem.Meta.OnPostBuild); 

		public ShipmentItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentPackageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentPackageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentPackage.Meta.ObjectType, ShipmentPackage.Meta.OnPostBuild); 

		public ShipmentPackageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentPackageOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentReceiptOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentReceiptOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentReceipt.Meta.ObjectType, ShipmentReceipt.Meta.OnPostBuild); 

		public ShipmentReceiptOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentReceiptOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentRouteSegmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentRouteSegmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentRouteSegment.Meta.ObjectType, ShipmentRouteSegment.Meta.OnPostBuild); 

		public ShipmentRouteSegmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentRouteSegmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentValueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentValueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentValue.Meta.ObjectType, ShipmentValue.Meta.OnPostBuild); 

		public ShipmentValueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentValueOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingComponentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingComponentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ShippingAndHandlingComponent.Meta.ObjectType, ShippingAndHandlingComponent.Meta.OnPostBuild); 

		public ShippingAndHandlingComponentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingComponentOnPostBuildMethodInvocation;
			}
		}
	}public partial class StoreOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StoreOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Store.Meta.ObjectType, Store.Meta.OnPostBuild); 

		public StoreOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreOnPostBuildMethodInvocation;
			}
		}
	}public partial class StoreRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenue.Meta.ObjectType, StoreRevenue.Meta.OnPostBuild); 

		public StoreRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class StoreRevenueHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenueHistory.Meta.ObjectType, StoreRevenueHistory.Meta.OnPostBuild); 

		public StoreRevenueHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class SupplierOfferingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierOfferingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SupplierOffering.Meta.ObjectType, SupplierOffering.Meta.OnPostBuild); 

		public SupplierOfferingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierOfferingOnPostBuildMethodInvocation;
			}
		}
	}public partial class TrainingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TrainingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Training.Meta.ObjectType, Training.Meta.OnPostBuild); 

		public TrainingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TrainingOnPostBuildMethodInvocation;
			}
		}
	}public partial class TransferStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TransferStatus.Meta.ObjectType, TransferStatus.Meta.OnPostBuild); 

		public TransferStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureConversionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureConversionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(UnitOfMeasureConversion.Meta.ObjectType, UnitOfMeasureConversion.Meta.OnPostBuild); 

		public UnitOfMeasureConversionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureConversionOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatFormOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatFormOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatForm.Meta.ObjectType, VatForm.Meta.OnPostBuild); 

		public VatFormOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatFormOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatRateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatRate.Meta.ObjectType, VatRate.Meta.OnPostBuild); 

		public VatRateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatReturnBoxOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatReturnBox.Meta.ObjectType, VatReturnBox.Meta.OnPostBuild); 

		public VatReturnBoxOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatReturnBoxTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(VatReturnBoxType.Meta.ObjectType, VatReturnBoxType.Meta.OnPostBuild); 

		public VatReturnBoxTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortAssignment.Meta.ObjectType, WorkEffortAssignment.Meta.OnPostBuild); 

		public WorkEffortAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentRateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentRateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortAssignmentRate.Meta.ObjectType, WorkEffortAssignmentRate.Meta.OnPostBuild); 

		public WorkEffortAssignmentRateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentRateOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortFixedAssetAssignment.Meta.ObjectType, WorkEffortFixedAssetAssignment.Meta.OnPostBuild); 

		public WorkEffortFixedAssetAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetStandardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetStandardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortFixedAssetStandard.Meta.ObjectType, WorkEffortFixedAssetStandard.Meta.OnPostBuild); 

		public WorkEffortFixedAssetStandardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetStandardOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortGoodStandardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortGoodStandardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortGoodStandard.Meta.ObjectType, WorkEffortGoodStandard.Meta.OnPostBuild); 

		public WorkEffortGoodStandardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortGoodStandardOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortInventoryAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortInventoryAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortInventoryAssignment.Meta.ObjectType, WorkEffortInventoryAssignment.Meta.OnPostBuild); 

		public WorkEffortInventoryAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortInventoryAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPartStandardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartStandardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPartStandard.Meta.ObjectType, WorkEffortPartStandard.Meta.OnPostBuild); 

		public WorkEffortPartStandardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartStandardOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPartyAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartyAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPartyAssignment.Meta.ObjectType, WorkEffortPartyAssignment.Meta.OnPostBuild); 

		public WorkEffortPartyAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartyAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortSkillStandardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortSkillStandardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortSkillStandard.Meta.ObjectType, WorkEffortSkillStandard.Meta.OnPostBuild); 

		public WorkEffortSkillStandardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortSkillStandardOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortStatus.Meta.ObjectType, WorkEffortStatus.Meta.OnPostBuild); 

		public WorkEffortStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortType.Meta.ObjectType, WorkEffortType.Meta.OnPostBuild); 

		public WorkEffortTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ImageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ImageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.OnPostBuild); 

		public ImageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageOnPostBuildMethodInvocation;
			}
		}
	}public partial class LoginOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.OnPostBuild); 

		public LoginOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPostBuildMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.OnPostBuild); 

		public SecurityTokenOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderShipmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderShipment.Meta.ObjectType, OrderShipment.Meta.OnPostBuild); 

		public OrderShipmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class StringTemplateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(StringTemplate.Meta.ObjectType, StringTemplate.Meta.OnPostBuild); 

		public StringTemplateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(BudgetObjectState.Meta.ObjectType, BudgetObjectState.Meta.OnPostBuild); 

		public BudgetObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class CaseObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CaseObjectState.Meta.ObjectType, CaseObjectState.Meta.OnPostBuild); 

		public CaseObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class CommunicationEventObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventObjectState.Meta.ObjectType, CommunicationEventObjectState.Meta.OnPostBuild); 

		public CommunicationEventObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturnObjectState.Meta.ObjectType, CustomerReturnObjectState.Meta.OnPostBuild); 

		public CustomerReturnObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipmentObjectState.Meta.ObjectType, CustomerShipmentObjectState.Meta.OnPostBuild); 

		public CustomerShipmentObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(DropShipmentObjectState.Meta.ObjectType, DropShipmentObjectState.Meta.OnPostBuild); 

		public DropShipmentObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChangeObjectState.Meta.ObjectType, EngineeringChangeObjectState.Meta.OnPostBuild); 

		public EngineeringChangeObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItemObjectState.Meta.ObjectType, NonSerializedInventoryItemObjectState.Meta.OnPostBuild); 

		public NonSerializedInventoryItemObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PartSpecificationObjectState.Meta.ObjectType, PartSpecificationObjectState.Meta.OnPostBuild); 

		public PartSpecificationObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PickListObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PickListObjectState.Meta.ObjectType, PickListObjectState.Meta.OnPostBuild); 

		public PickListObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemObjectState.Meta.ObjectType, PurchaseInvoiceItemObjectState.Meta.OnPostBuild); 

		public PurchaseInvoiceItemObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceObjectState.Meta.ObjectType, PurchaseInvoiceObjectState.Meta.OnPostBuild); 

		public PurchaseInvoiceObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItemObjectState.Meta.ObjectType, PurchaseOrderItemObjectState.Meta.OnPostBuild); 

		public PurchaseOrderItemObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderObjectState.Meta.ObjectType, PurchaseOrderObjectState.Meta.OnPostBuild); 

		public PurchaseOrderObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturnObjectState.Meta.ObjectType, PurchaseReturnObjectState.Meta.OnPostBuild); 

		public PurchaseReturnObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipmentObjectState.Meta.ObjectType, PurchaseShipmentObjectState.Meta.OnPostBuild); 

		public PurchaseShipmentObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequirementObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(RequirementObjectState.Meta.ObjectType, RequirementObjectState.Meta.OnPostBuild); 

		public RequirementObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemObjectState.Meta.ObjectType, SalesInvoiceItemObjectState.Meta.OnPostBuild); 

		public SalesInvoiceItemObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceObjectState.Meta.ObjectType, SalesInvoiceObjectState.Meta.OnPostBuild); 

		public SalesInvoiceObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItemObjectState.Meta.ObjectType, SalesOrderItemObjectState.Meta.OnPostBuild); 

		public SalesOrderItemObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderObjectState.Meta.ObjectType, SalesOrderObjectState.Meta.OnPostBuild); 

		public SalesOrderObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItemObjectState.Meta.ObjectType, SerializedInventoryItemObjectState.Meta.OnPostBuild); 

		public SerializedInventoryItemObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class TransferObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(TransferObjectState.Meta.ObjectType, TransferObjectState.Meta.OnPostBuild); 

		public TransferObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortObjectState.Meta.ObjectType, WorkEffortObjectState.Meta.OnPostBuild); 

		public WorkEffortObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class CounterOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Counter.Meta.ObjectType, Counter.Meta.OnPostBuild); 

		public CounterOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPostBuildMethodInvocation;
			}
		}
	}public partial class CostCenterCategoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterCategoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(CostCenterCategory.Meta.ObjectType, CostCenterCategory.Meta.OnPostBuild); 

		public CostCenterCategoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterCategoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaContentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(MediaContent.Meta.ObjectType, MediaContent.Meta.OnPostBuild); 

		public MediaContentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPostBuildMethodInvocation;
			}
		}
	}public partial class TransitionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Transition.Meta.ObjectType, Transition.Meta.OnPostBuild); 

		public TransitionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnPostBuildMethodInvocation;
			}
		}
	}public partial class EventOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EventOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Event.Meta.ObjectType, Event.Meta.OnPostBuild); 

		public EventOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventOnPostBuildMethodInvocation;
			}
		}
	}public partial class EventRegistrationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EventRegistrationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(EventRegistration.Meta.ObjectType, EventRegistration.Meta.OnPostBuild); 

		public EventRegistrationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventRegistrationOnPostBuildMethodInvocation;
			}
		}
	}public partial class FiscalYearInvoiceNumberOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FiscalYearInvoiceNumberOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(FiscalYearInvoiceNumber.Meta.ObjectType, FiscalYearInvoiceNumber.Meta.OnPostBuild); 

		public FiscalYearInvoiceNumberOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FiscalYearInvoiceNumberOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderItemBillingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderItemBillingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(OrderItemBilling.Meta.ObjectType, OrderItemBilling.Meta.OnPostBuild); 

		public OrderItemBillingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderItemBillingOnPostBuildMethodInvocation;
			}
		}
	}public partial class ServiceEntryBillingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryBillingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(ServiceEntryBilling.Meta.ObjectType, ServiceEntryBilling.Meta.OnPostBuild); 

		public ServiceEntryBillingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryBillingOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortBillingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortBillingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortBilling.Meta.ObjectType, WorkEffortBilling.Meta.OnPostBuild); 

		public WorkEffortBillingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortBillingOnPostBuildMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPreDerive : Allors.Meta.Method
	{
		protected ObjectOnPreDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class AccountingTransactionTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionType.Meta.ObjectType, AccountingTransactionType.Meta.OnPreDerive); 

		public AccountingTransactionTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AssetAssignmentStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AssetAssignmentStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AssetAssignmentStatus.Meta.ObjectType, AssetAssignmentStatus.Meta.OnPreDerive); 

		public AssetAssignmentStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AssetAssignmentStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ColourOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ColourOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Colour.Meta.ObjectType, Colour.Meta.OnPreDerive); 

		public ColourOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ColourOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventPurposeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventPurposeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventPurpose.Meta.ObjectType, CommunicationEventPurpose.Meta.OnPreDerive); 

		public CommunicationEventPurposeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventPurposeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ContactMechanismPurposeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismPurposeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ContactMechanismPurpose.Meta.ObjectType, ContactMechanismPurpose.Meta.OnPreDerive); 

		public ContactMechanismPurposeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismPurposeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterSplitMethodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterSplitMethodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostCenterSplitMethod.Meta.ObjectType, CostCenterSplitMethod.Meta.OnPreDerive); 

		public CostCenterSplitMethodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterSplitMethodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CostOfGoodsSoldMethodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostOfGoodsSoldMethodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostOfGoodsSoldMethod.Meta.ObjectType, CostOfGoodsSoldMethod.Meta.OnPreDerive); 

		public CostOfGoodsSoldMethodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostOfGoodsSoldMethodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DebitCreditConstantOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DebitCreditConstantOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DebitCreditConstant.Meta.ObjectType, DebitCreditConstant.Meta.OnPreDerive); 

		public DebitCreditConstantOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DebitCreditConstantOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeductionTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeductionType.Meta.ObjectType, DeductionType.Meta.OnPreDerive); 

		public DeductionTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableType.Meta.ObjectType, DeliverableType.Meta.OnPreDerive); 

		public DeliverableTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DunningTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DunningTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DunningType.Meta.ObjectType, DunningType.Meta.OnPreDerive); 

		public DunningTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DunningTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationSourceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationSourceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplicationSource.Meta.ObjectType, EmploymentApplicationSource.Meta.OnPreDerive); 

		public EmploymentApplicationSourceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationSourceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplicationStatus.Meta.ObjectType, EmploymentApplicationStatus.Meta.OnPreDerive); 

		public EmploymentApplicationStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentTermination.Meta.ObjectType, EmploymentTermination.Meta.OnPreDerive); 

		public EmploymentTerminationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationReasonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationReasonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentTerminationReason.Meta.ObjectType, EmploymentTerminationReason.Meta.OnPreDerive); 

		public EmploymentTerminationReasonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationReasonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EuSalesListTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EuSalesListTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EuSalesListType.Meta.ObjectType, EuSalesListType.Meta.OnPreDerive); 

		public EuSalesListTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EuSalesListTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GenderTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GenderType.Meta.ObjectType, GenderType.Meta.OnPreDerive); 

		public GenderTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class HobbyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HobbyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Hobby.Meta.ObjectType, Hobby.Meta.OnPreDerive); 

		public HobbyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HobbyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemKindOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemKindOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InventoryItemKind.Meta.ObjectType, InventoryItemKind.Meta.OnPreDerive); 

		public InventoryItemKindOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemKindOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceSequenceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceSequenceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceSequence.Meta.ObjectType, InvoiceSequence.Meta.OnPreDerive); 

		public InvoiceSequenceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceSequenceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class JournalTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalType.Meta.ObjectType, JournalType.Meta.OnPreDerive); 

		public JournalTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MaritalStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaritalStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MaritalStatus.Meta.ObjectType, MaritalStatus.Meta.OnPreDerive); 

		public MaritalStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaritalStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ModelOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ModelOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Model.Meta.ObjectType, Model.Meta.OnPreDerive); 

		public ModelOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ModelOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrdinalOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrdinalOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Ordinal.Meta.ObjectType, Ordinal.Meta.OnPreDerive); 

		public OrdinalOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrdinalOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationUnitOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationUnitOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationUnit.Meta.ObjectType, OrganisationUnit.Meta.OnPreDerive); 

		public OrganisationUnitOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationUnitOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyRelationshipStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRelationshipStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyRelationshipStatus.Meta.ObjectType, PartyRelationshipStatus.Meta.OnPreDerive); 

		public PartyRelationshipStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRelationshipStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReviewItemType.Meta.ObjectType, PerformanceReviewItemType.Meta.OnPreDerive); 

		public PerformanceReviewItemTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PersonalTitleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonalTitleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PersonalTitle.Meta.ObjectType, PersonalTitle.Meta.OnPreDerive); 

		public PersonalTitleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonalTitleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionStatus.Meta.ObjectType, PositionStatus.Meta.OnPreDerive); 

		public PositionStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PriorityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PriorityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Priority.Meta.ObjectType, Priority.Meta.OnPreDerive); 

		public PriorityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PriorityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductQualityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQualityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductQuality.Meta.ObjectType, ProductQuality.Meta.OnPreDerive); 

		public ProductQualityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQualityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemType.Meta.ObjectType, PurchaseInvoiceItemType.Meta.OnPreDerive); 

		public PurchaseInvoiceItemTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceType.Meta.ObjectType, PurchaseInvoiceType.Meta.OnPreDerive); 

		public PurchaseInvoiceTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class QualificationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QualificationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Qualification.Meta.ObjectType, Qualification.Meta.OnPreDerive); 

		public QualificationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QualificationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RateTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RateTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RateType.Meta.ObjectType, RateType.Meta.OnPreDerive); 

		public RateTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RateTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RatingTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RatingTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RatingType.Meta.ObjectType, RatingType.Meta.OnPreDerive); 

		public RatingTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RatingTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannel.Meta.ObjectType, SalesChannel.Meta.OnPreDerive); 

		public SalesChannelOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemType.Meta.ObjectType, SalesInvoiceItemType.Meta.OnPreDerive); 

		public SalesInvoiceItemTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceType.Meta.ObjectType, SalesInvoiceType.Meta.OnPreDerive); 

		public SalesInvoiceTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalutationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalutationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Salutation.Meta.ObjectType, Salutation.Meta.OnPreDerive); 

		public SalutationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalutationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ServiceFeatureOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceFeatureOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceFeature.Meta.ObjectType, ServiceFeature.Meta.OnPreDerive); 

		public ServiceFeatureOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceFeatureOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentMethodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentMethodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentMethod.Meta.ObjectType, ShipmentMethod.Meta.OnPreDerive); 

		public ShipmentMethodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentMethodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SizeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SizeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Size.Meta.ObjectType, Size.Meta.OnPreDerive); 

		public SizeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SizeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SkillOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Skill.Meta.ObjectType, Skill.Meta.OnPreDerive); 

		public SkillOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SkillLevelOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillLevelOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SkillLevel.Meta.ObjectType, SkillLevel.Meta.OnPreDerive); 

		public SkillLevelOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillLevelOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SkillRatingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillRatingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SkillRating.Meta.ObjectType, SkillRating.Meta.OnPreDerive); 

		public SkillRatingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillRatingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SoftwareFeatureOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SoftwareFeatureOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SoftwareFeature.Meta.ObjectType, SoftwareFeature.Meta.OnPreDerive); 

		public SoftwareFeatureOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SoftwareFeatureOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TemplatePurposeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TemplatePurposeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TemplatePurpose.Meta.ObjectType, TemplatePurpose.Meta.OnPreDerive); 

		public TemplatePurposeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplatePurposeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TermTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TermTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TermType.Meta.ObjectType, TermType.Meta.OnPreDerive); 

		public TermTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TermTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TimeFrequencyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeFrequencyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimeFrequency.Meta.ObjectType, TimeFrequency.Meta.OnPreDerive); 

		public TimeFrequencyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeFrequencyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UnitOfMeasure.Meta.ObjectType, UnitOfMeasure.Meta.OnPreDerive); 

		public UnitOfMeasureOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VarianceReasonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VarianceReasonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VarianceReason.Meta.ObjectType, VarianceReason.Meta.OnPreDerive); 

		public VarianceReasonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VarianceReasonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatCalculationMethodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatCalculationMethodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatCalculationMethod.Meta.ObjectType, VatCalculationMethod.Meta.OnPreDerive); 

		public VatCalculationMethodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatCalculationMethodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatRatePurchaseKindOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRatePurchaseKindOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRatePurchaseKind.Meta.ObjectType, VatRatePurchaseKind.Meta.OnPreDerive); 

		public VatRatePurchaseKindOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRatePurchaseKindOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatRateUsageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateUsageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRateUsage.Meta.ObjectType, VatRateUsage.Meta.OnPreDerive); 

		public VatRateUsageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateUsageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatRegimeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRegimeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRegime.Meta.ObjectType, VatRegime.Meta.OnPreDerive); 

		public VatRegimeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRegimeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatTariffOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatTariffOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatTariff.Meta.ObjectType, VatTariff.Meta.OnPreDerive); 

		public VatTariffOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatTariffOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeKindOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeKindOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortTypeKind.Meta.ObjectType, WorkEffortTypeKind.Meta.OnPreDerive); 

		public WorkEffortTypeKindOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeKindOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPurposeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPurposeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPurpose.Meta.ObjectType, WorkEffortPurpose.Meta.OnPreDerive); 

		public WorkEffortPurposeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPurposeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BillOfLadingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillOfLadingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BillOfLading.Meta.ObjectType, BillOfLading.Meta.OnPreDerive); 

		public BillOfLadingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillOfLadingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringDocumentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringDocumentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringDocument.Meta.ObjectType, EngineeringDocument.Meta.OnPreDerive); 

		public EngineeringDocumentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringDocumentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ExportDocumentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExportDocumentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ExportDocument.Meta.ObjectType, ExportDocument.Meta.OnPreDerive); 

		public ExportDocumentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExportDocumentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class HazardousMaterialsDocumentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HazardousMaterialsDocumentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(HazardousMaterialsDocument.Meta.ObjectType, HazardousMaterialsDocument.Meta.OnPreDerive); 

		public HazardousMaterialsDocumentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HazardousMaterialsDocumentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ManifestOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManifestOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Manifest.Meta.ObjectType, Manifest.Meta.OnPreDerive); 

		public ManifestOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManifestOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MarketingMaterialOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingMaterialOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MarketingMaterial.Meta.ObjectType, MarketingMaterial.Meta.OnPreDerive); 

		public MarketingMaterialOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingMaterialOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackagingSlipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingSlipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackagingSlip.Meta.ObjectType, PackagingSlip.Meta.OnPreDerive); 

		public PackagingSlipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingSlipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductDrawingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDrawingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductDrawing.Meta.ObjectType, ProductDrawing.Meta.OnPreDerive); 

		public ProductDrawingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDrawingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductModelOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductModelOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductModel.Meta.ObjectType, ProductModel.Meta.OnPreDerive); 

		public ProductModelOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductModelOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TaxDocumentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDocumentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TaxDocument.Meta.ObjectType, TaxDocument.Meta.OnPreDerive); 

		public TaxDocumentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDocumentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoice.Meta.ObjectType, PurchaseInvoice.Meta.OnPreDerive); 

		public PurchaseInvoiceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoice.Meta.ObjectType, SalesInvoice.Meta.OnPreDerive); 

		public SalesInvoiceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.OnPreDerive); 

		public PurchaseOrderOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.OnPreDerive); 

		public SalesOrderOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturn.Meta.ObjectType, CustomerReturn.Meta.OnPreDerive); 

		public CustomerReturnOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.OnPreDerive); 

		public CustomerShipmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DropShipment.Meta.ObjectType, DropShipment.Meta.OnPreDerive); 

		public DropShipmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturn.Meta.ObjectType, PurchaseReturn.Meta.OnPreDerive); 

		public PurchaseReturnOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipment.Meta.ObjectType, PurchaseShipment.Meta.OnPreDerive); 

		public PurchaseShipmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TransferOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Transfer.Meta.ObjectType, Transfer.Meta.OnPreDerive); 

		public TransferOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PickListOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickList.Meta.ObjectType, PickList.Meta.OnPreDerive); 

		public PickListOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccountingPeriodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingPeriod.Meta.ObjectType, AccountingPeriod.Meta.OnPreDerive); 

		public AccountingPeriodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CapitalBudgetOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CapitalBudget.Meta.ObjectType, CapitalBudget.Meta.OnPreDerive); 

		public CapitalBudgetOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OperatingBudgetOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OperatingBudget.Meta.ObjectType, OperatingBudget.Meta.OnPreDerive); 

		public OperatingBudgetOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmailCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmailCommunication.Meta.ObjectType, EmailCommunication.Meta.OnPreDerive); 

		public EmailCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FaceToFaceCommunication.Meta.ObjectType, FaceToFaceCommunication.Meta.OnPreDerive); 

		public FaceToFaceCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FaxCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FaxCommunication.Meta.ObjectType, FaxCommunication.Meta.OnPreDerive); 

		public FaxCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LetterCorrespondence.Meta.ObjectType, LetterCorrespondence.Meta.OnPreDerive); 

		public LetterCorrespondenceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PhoneCommunication.Meta.ObjectType, PhoneCommunication.Meta.OnPreDerive); 

		public PhoneCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WebSiteCommunication.Meta.ObjectType, WebSiteCommunication.Meta.OnPreDerive); 

		public WebSiteCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItem.Meta.ObjectType, NonSerializedInventoryItem.Meta.OnPreDerive); 

		public NonSerializedInventoryItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItem.Meta.ObjectType, SerializedInventoryItem.Meta.OnPreDerive); 

		public SerializedInventoryItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItem.Meta.ObjectType, PurchaseInvoiceItem.Meta.OnPreDerive); 

		public PurchaseInvoiceItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItem.Meta.ObjectType, SalesInvoiceItem.Meta.OnPreDerive); 

		public SalesInvoiceItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.OnPreDerive); 

		public PurchaseOrderItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.OnPreDerive); 

		public SalesOrderItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ConstraintSpecificationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ConstraintSpecificationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ConstraintSpecification.Meta.ObjectType, ConstraintSpecification.Meta.OnPreDerive); 

		public ConstraintSpecificationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ConstraintSpecificationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OperatingConditionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingConditionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OperatingCondition.Meta.ObjectType, OperatingCondition.Meta.OnPreDerive); 

		public OperatingConditionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingConditionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceSpecificationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceSpecificationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceSpecification.Meta.ObjectType, PerformanceSpecification.Meta.OnPreDerive); 

		public PerformanceSpecificationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceSpecificationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TestingRequirementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TestingRequirementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TestingRequirement.Meta.ObjectType, TestingRequirement.Meta.OnPreDerive); 

		public TestingRequirementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TestingRequirementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ToleranceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ToleranceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Tolerance.Meta.ObjectType, Tolerance.Meta.OnPreDerive); 

		public ToleranceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToleranceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerRequirementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRequirementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRequirement.Meta.ObjectType, CustomerRequirement.Meta.OnPreDerive); 

		public CustomerRequirementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRequirementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InternalRequirementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalRequirementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalRequirement.Meta.ObjectType, InternalRequirement.Meta.OnPreDerive); 

		public InternalRequirementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalRequirementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductRequirementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRequirementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductRequirement.Meta.ObjectType, ProductRequirement.Meta.OnPreDerive); 

		public ProductRequirementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRequirementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProjectRequirementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectRequirementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProjectRequirement.Meta.ObjectType, ProjectRequirement.Meta.OnPreDerive); 

		public ProjectRequirementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectRequirementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ResourceRequirementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResourceRequirementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ResourceRequirement.Meta.ObjectType, ResourceRequirement.Meta.OnPreDerive); 

		public ResourceRequirementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResourceRequirementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkRequirementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkRequirementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkRequirement.Meta.ObjectType, WorkRequirement.Meta.OnPreDerive); 

		public WorkRequirementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkRequirementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ActivityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Activity.Meta.ObjectType, Activity.Meta.OnPreDerive); 

		public ActivityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MaintenanceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaintenanceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Maintenance.Meta.ObjectType, Maintenance.Meta.OnPreDerive); 

		public MaintenanceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaintenanceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PhaseOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhaseOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Phase.Meta.ObjectType, Phase.Meta.OnPreDerive); 

		public PhaseOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhaseOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductionRunOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductionRunOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductionRun.Meta.ObjectType, ProductionRun.Meta.OnPreDerive); 

		public ProductionRunOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductionRunOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProgramOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProgramOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Program.Meta.ObjectType, Program.Meta.OnPreDerive); 

		public ProgramOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProgramOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProjectOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Project.Meta.ObjectType, Project.Meta.OnPreDerive); 

		public ProjectOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ResearchOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResearchOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Research.Meta.ObjectType, Research.Meta.OnPreDerive); 

		public ResearchOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResearchOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TaskOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Task.Meta.ObjectType, Task.Meta.OnPreDerive); 

		public TaskOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkFlowOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkFlowOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkFlow.Meta.ObjectType, WorkFlow.Meta.OnPreDerive); 

		public WorkFlowOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkFlowOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CaseOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Case.Meta.ObjectType, Case.Meta.OnPreDerive); 

		public CaseOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChange.Meta.ObjectType, EngineeringChange.Meta.OnPreDerive); 

		public EngineeringChangeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntry.Meta.ObjectType, JournalEntry.Meta.OnPreDerive); 

		public JournalEntryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.OnPreDerive); 

		public PersonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AutomatedAgent.Meta.ObjectType, AutomatedAgent.Meta.OnPreDerive); 

		public AutomatedAgentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CreditLineOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditLineOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CreditLine.Meta.ObjectType, CreditLine.Meta.OnPreDerive); 

		public CreditLineOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditLineOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementAccountingTransactionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementAccountingTransactionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DisbursementAccountingTransaction.Meta.ObjectType, DisbursementAccountingTransaction.Meta.OnPreDerive); 

		public DisbursementAccountingTransactionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementAccountingTransactionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NoteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NoteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Note.Meta.ObjectType, Note.Meta.OnPreDerive); 

		public NoteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NoteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ObligationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ObligationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Obligation.Meta.ObjectType, Obligation.Meta.OnPreDerive); 

		public ObligationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ObligationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptAccountingTransactionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptAccountingTransactionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ReceiptAccountingTransaction.Meta.ObjectType, ReceiptAccountingTransaction.Meta.OnPreDerive); 

		public ReceiptAccountingTransactionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptAccountingTransactionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesAccountingTransactionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAccountingTransactionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesAccountingTransaction.Meta.ObjectType, SalesAccountingTransaction.Meta.OnPreDerive); 

		public SalesAccountingTransactionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAccountingTransactionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TaxDueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TaxDue.Meta.ObjectType, TaxDue.Meta.OnPreDerive); 

		public TaxDueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AmortizationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmortizationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Amortization.Meta.ObjectType, Amortization.Meta.OnPreDerive); 

		public AmortizationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmortizationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CapitalizationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalizationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Capitalization.Meta.ObjectType, Capitalization.Meta.OnPreDerive); 

		public CapitalizationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalizationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Depreciation.Meta.ObjectType, Depreciation.Meta.OnPreDerive); 

		public DepreciationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ItemVarianceAccountingTransactionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemVarianceAccountingTransactionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ItemVarianceAccountingTransaction.Meta.ObjectType, ItemVarianceAccountingTransaction.Meta.OnPreDerive); 

		public ItemVarianceAccountingTransactionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemVarianceAccountingTransactionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ClientAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClientAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ClientAgreement.Meta.ObjectType, ClientAgreement.Meta.OnPreDerive); 

		public ClientAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentAgreement.Meta.ObjectType, EmploymentAgreement.Meta.OnPreDerive); 

		public EmploymentAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseAgreement.Meta.ObjectType, PurchaseAgreement.Meta.OnPreDerive); 

		public PurchaseAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesAgreement.Meta.ObjectType, SalesAgreement.Meta.OnPreDerive); 

		public SalesAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubContractorAgreement.Meta.ObjectType, SubContractorAgreement.Meta.OnPreDerive); 

		public SubContractorAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AgreementExhibitOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementExhibitOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AgreementExhibit.Meta.ObjectType, AgreementExhibit.Meta.OnPreDerive); 

		public AgreementExhibitOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementExhibitOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AgreementPricingProgramOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementPricingProgramOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AgreementPricingProgram.Meta.ObjectType, AgreementPricingProgram.Meta.OnPreDerive); 

		public AgreementPricingProgramOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementPricingProgramOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AgreementSectionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementSectionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AgreementSection.Meta.ObjectType, AgreementSection.Meta.OnPreDerive); 

		public AgreementSectionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementSectionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SubAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubAgreement.Meta.ObjectType, SubAgreement.Meta.OnPreDerive); 

		public SubAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FinancialTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FinancialTerm.Meta.ObjectType, FinancialTerm.Meta.OnPreDerive); 

		public FinancialTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class IncentiveOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncentiveOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Incentive.Meta.ObjectType, Incentive.Meta.OnPreDerive); 

		public IncentiveOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncentiveOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceTerm.Meta.ObjectType, InvoiceTerm.Meta.OnPreDerive); 

		public InvoiceTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LegalTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LegalTerm.Meta.ObjectType, LegalTerm.Meta.OnPreDerive); 

		public LegalTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ThresholdOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThresholdOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Threshold.Meta.ObjectType, Threshold.Meta.OnPreDerive); 

		public ThresholdOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThresholdOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Country.Meta.ObjectType, Country.Meta.OnPreDerive); 

		public CountryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CountyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(County.Meta.ObjectType, County.Meta.OnPreDerive); 

		public CountyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProvinceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProvinceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Province.Meta.ObjectType, Province.Meta.OnPreDerive); 

		public ProvinceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProvinceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(State.Meta.ObjectType, State.Meta.OnPreDerive); 

		public StateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TerritoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TerritoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Territory.Meta.ObjectType, Territory.Meta.OnPreDerive); 

		public TerritoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TerritoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmailAddressOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailAddressOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmailAddress.Meta.ObjectType, EmailAddress.Meta.OnPreDerive); 

		public EmailAddressOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailAddressOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WebAddressOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebAddressOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WebAddress.Meta.ObjectType, WebAddress.Meta.OnPreDerive); 

		public WebAddressOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebAddressOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PostalAddressOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalAddressOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PostalAddress.Meta.ObjectType, PostalAddress.Meta.OnPreDerive); 

		public PostalAddressOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalAddressOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TelecommunicationsNumberOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TelecommunicationsNumberOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TelecommunicationsNumber.Meta.ObjectType, TelecommunicationsNumber.Meta.OnPreDerive); 

		public TelecommunicationsNumberOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TelecommunicationsNumberOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BarrelOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BarrelOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Barrel.Meta.ObjectType, Barrel.Meta.OnPreDerive); 

		public BarrelOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BarrelOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BinOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BinOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Bin.Meta.ObjectType, Bin.Meta.OnPreDerive); 

		public BinOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BinOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RoomOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoomOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Room.Meta.ObjectType, Room.Meta.OnPreDerive); 

		public RoomOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoomOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShelfOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShelfOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Shelf.Meta.ObjectType, Shelf.Meta.OnPreDerive); 

		public ShelfOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShelfOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(City.Meta.ObjectType, City.Meta.OnPreDerive); 

		public CityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PostalCodeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalCodeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PostalCode.Meta.ObjectType, PostalCode.Meta.OnPreDerive); 

		public PostalCodeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalCodeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ActivityUsageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityUsageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ActivityUsage.Meta.ObjectType, ActivityUsage.Meta.OnPreDerive); 

		public ActivityUsageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityUsageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TimePeriodUsageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimePeriodUsageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimePeriodUsage.Meta.ObjectType, TimePeriodUsage.Meta.OnPreDerive); 

		public TimePeriodUsageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimePeriodUsageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VolumeUsageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VolumeUsageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VolumeUsage.Meta.ObjectType, VolumeUsage.Meta.OnPreDerive); 

		public VolumeUsageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VolumeUsageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomEngagementItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomEngagementItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomEngagementItem.Meta.ObjectType, CustomEngagementItem.Meta.OnPreDerive); 

		public CustomEngagementItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomEngagementItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOrderItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOrderItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableOrderItem.Meta.ObjectType, DeliverableOrderItem.Meta.OnPreDerive); 

		public DeliverableOrderItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOrderItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GoodOrderItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOrderItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GoodOrderItem.Meta.ObjectType, GoodOrderItem.Meta.OnPreDerive); 

		public GoodOrderItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOrderItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalPlacementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalPlacementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalPlacement.Meta.ObjectType, ProfessionalPlacement.Meta.OnPreDerive); 

		public ProfessionalPlacementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalPlacementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StandardServiceOrderItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StandardServiceOrderItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StandardServiceOrderItem.Meta.ObjectType, StandardServiceOrderItem.Meta.OnPreDerive); 

		public StandardServiceOrderItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StandardServiceOrderItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedLaborCostOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedLaborCostOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedLaborCost.Meta.ObjectType, EstimatedLaborCost.Meta.OnPreDerive); 

		public EstimatedLaborCostOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedLaborCostOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedMaterialCostOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedMaterialCostOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedMaterialCost.Meta.ObjectType, EstimatedMaterialCost.Meta.OnPreDerive); 

		public EstimatedMaterialCostOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedMaterialCostOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedOtherCostOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedOtherCostOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedOtherCost.Meta.ObjectType, EstimatedOtherCost.Meta.OnPreDerive); 

		public EstimatedOtherCostOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedOtherCostOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BuildingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BuildingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Building.Meta.ObjectType, Building.Meta.OnPreDerive); 

		public BuildingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BuildingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FloorOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FloorOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Floor.Meta.ObjectType, Floor.Meta.OnPreDerive); 

		public FloorOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FloorOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OfficeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OfficeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Office.Meta.ObjectType, Office.Meta.OnPreDerive); 

		public OfficeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OfficeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PlantOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PlantOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Plant.Meta.ObjectType, Plant.Meta.OnPreDerive); 

		public PlantOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlantOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WarehouseOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WarehouseOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Warehouse.Meta.ObjectType, Warehouse.Meta.OnPreDerive); 

		public WarehouseOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WarehouseOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BankAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BankAccount.Meta.ObjectType, BankAccount.Meta.OnPreDerive); 

		public BankAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CreditCard.Meta.ObjectType, CreditCard.Meta.OnPreDerive); 

		public CreditCardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InvestmentAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvestmentAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvestmentAccount.Meta.ObjectType, InvestmentAccount.Meta.OnPreDerive); 

		public InvestmentAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvestmentAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OwnBankAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnBankAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OwnBankAccount.Meta.ObjectType, OwnBankAccount.Meta.OnPreDerive); 

		public OwnBankAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnBankAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OwnCreditCardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnCreditCardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OwnCreditCard.Meta.ObjectType, OwnCreditCard.Meta.OnPreDerive); 

		public OwnCreditCardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnCreditCardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccountAdjustmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountAdjustmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountAdjustment.Meta.ObjectType, AccountAdjustment.Meta.OnPreDerive); 

		public AccountAdjustmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountAdjustmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DepositOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepositOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deposit.Meta.ObjectType, Deposit.Meta.OnPreDerive); 

		public DepositOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepositOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FinancialAccountAdjustmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialAccountAdjustmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FinancialAccountAdjustment.Meta.ObjectType, FinancialAccountAdjustment.Meta.OnPreDerive); 

		public FinancialAccountAdjustmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialAccountAdjustmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WithdrawalOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WithdrawalOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Withdrawal.Meta.ObjectType, Withdrawal.Meta.OnPreDerive); 

		public WithdrawalOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WithdrawalOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EquipmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EquipmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Equipment.Meta.ObjectType, Equipment.Meta.OnPreDerive); 

		public EquipmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EquipmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PropertyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PropertyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Property.Meta.ObjectType, Property.Meta.OnPreDerive); 

		public PropertyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PropertyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VehicleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VehicleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Vehicle.Meta.ObjectType, Vehicle.Meta.OnPreDerive); 

		public VehicleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VehicleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RegionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RegionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Region.Meta.ObjectType, Region.Meta.OnPreDerive); 

		public RegionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RegionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesTerritoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesTerritoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesTerritory.Meta.ObjectType, SalesTerritory.Meta.OnPreDerive); 

		public SalesTerritoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesTerritoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ServiceTerritoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceTerritoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceTerritory.Meta.ObjectType, ServiceTerritory.Meta.OnPreDerive); 

		public ServiceTerritoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceTerritoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingConfigurationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingConfigurationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturingConfiguration.Meta.ObjectType, ManufacturingConfiguration.Meta.OnPreDerive); 

		public ManufacturingConfigurationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingConfigurationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ServiceConfigurationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceConfigurationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceConfiguration.Meta.ObjectType, ServiceConfiguration.Meta.OnPreDerive); 

		public ServiceConfigurationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceConfigurationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Currency.Meta.ObjectType, Currency.Meta.OnPreDerive); 

		public CurrencyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DiscountAdjustment.Meta.ObjectType, DiscountAdjustment.Meta.OnPreDerive); 

		public DiscountAdjustmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FeeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FeeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Fee.Meta.ObjectType, Fee.Meta.OnPreDerive); 

		public FeeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FeeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingChargeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingChargeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShippingAndHandlingCharge.Meta.ObjectType, ShippingAndHandlingCharge.Meta.OnPreDerive); 

		public ShippingAndHandlingChargeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingChargeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeAdjustmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeAdjustmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SurchargeAdjustment.Meta.ObjectType, SurchargeAdjustment.Meta.OnPreDerive); 

		public SurchargeAdjustmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeAdjustmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FinishedGoodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinishedGoodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FinishedGood.Meta.ObjectType, FinishedGood.Meta.OnPreDerive); 

		public FinishedGoodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinishedGoodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RawMaterialOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RawMaterialOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RawMaterial.Meta.ObjectType, RawMaterial.Meta.OnPreDerive); 

		public RawMaterialOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RawMaterialOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SubAssemblyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAssemblyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubAssembly.Meta.ObjectType, SubAssembly.Meta.OnPreDerive); 

		public SubAssemblyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAssemblyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringBomOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringBomOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringBom.Meta.ObjectType, EngineeringBom.Meta.OnPreDerive); 

		public EngineeringBomOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringBomOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingBomOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingBomOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturingBom.Meta.ObjectType, ManufacturingBom.Meta.OnPreDerive); 

		public ManufacturingBomOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingBomOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisation.Meta.ObjectType, InternalOrganisation.Meta.OnPreDerive); 

		public InternalOrganisationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.OnPreDerive); 

		public OrganisationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class IndustryClassificationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IndustryClassificationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(IndustryClassification.Meta.ObjectType, IndustryClassification.Meta.OnPreDerive); 

		public IndustryClassificationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IndustryClassificationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ClientRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClientRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ClientRelationship.Meta.ObjectType, ClientRelationship.Meta.OnPreDerive); 

		public ClientRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRelationship.Meta.ObjectType, CustomerRelationship.Meta.OnPreDerive); 

		public CustomerRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DistributionChannelRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DistributionChannelRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DistributionChannelRelationship.Meta.ObjectType, DistributionChannelRelationship.Meta.OnPreDerive); 

		public DistributionChannelRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DistributionChannelRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Employment.Meta.ObjectType, Employment.Meta.OnPreDerive); 

		public EmploymentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationContactRelationship.Meta.ObjectType, OrganisationContactRelationship.Meta.OnPreDerive); 

		public OrganisationContactRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationRollUpOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRollUpOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationRollUp.Meta.ObjectType, OrganisationRollUp.Meta.OnPreDerive); 

		public OrganisationRollUpOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRollUpOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartnershipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartnershipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Partnership.Meta.ObjectType, Partnership.Meta.OnPreDerive); 

		public PartnershipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartnershipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalServicesRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalServicesRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalServicesRelationship.Meta.ObjectType, ProfessionalServicesRelationship.Meta.OnPreDerive); 

		public ProfessionalServicesRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalServicesRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRelationship.Meta.ObjectType, SalesRepRelationship.Meta.OnPreDerive); 

		public SalesRepRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubContractorRelationship.Meta.ObjectType, SubContractorRelationship.Meta.OnPreDerive); 

		public SubContractorRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SupplierRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SupplierRelationship.Meta.ObjectType, SupplierRelationship.Meta.OnPreDerive); 

		public SupplierRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProspectRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProspectRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProspectRelationship.Meta.ObjectType, ProspectRelationship.Meta.OnPreDerive); 

		public ProspectRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProspectRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Disbursement.Meta.ObjectType, Disbursement.Meta.OnPreDerive); 

		public DisbursementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PayCheckOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayCheckOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayCheck.Meta.ObjectType, PayCheck.Meta.OnPreDerive); 

		public PayCheckOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayCheckOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Receipt.Meta.ObjectType, Receipt.Meta.OnPreDerive); 

		public ReceiptOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CashOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CashOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Cash.Meta.ObjectType, Cash.Meta.OnPreDerive); 

		public CashOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CashOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BasePriceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BasePrice.Meta.ObjectType, BasePrice.Meta.OnPreDerive); 

		public BasePriceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DiscountComponentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountComponentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DiscountComponent.Meta.ObjectType, DiscountComponent.Meta.OnPreDerive); 

		public DiscountComponentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountComponentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturerSuggestedRetailPriceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturerSuggestedRetailPriceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturerSuggestedRetailPrice.Meta.ObjectType, ManufacturerSuggestedRetailPrice.Meta.OnPreDerive); 

		public ManufacturerSuggestedRetailPriceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturerSuggestedRetailPriceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OneTimeChargeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneTimeChargeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OneTimeCharge.Meta.ObjectType, OneTimeCharge.Meta.OnPreDerive); 

		public OneTimeChargeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneTimeChargeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RecurringChargeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RecurringChargeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RecurringCharge.Meta.ObjectType, RecurringCharge.Meta.OnPreDerive); 

		public RecurringChargeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RecurringChargeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeComponentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeComponentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SurchargeComponent.Meta.ObjectType, SurchargeComponent.Meta.OnPreDerive); 

		public SurchargeComponentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeComponentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UtilizationChargeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UtilizationChargeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UtilizationCharge.Meta.ObjectType, UtilizationCharge.Meta.OnPreDerive); 

		public UtilizationChargeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UtilizationChargeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableBasedServiceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableBasedServiceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableBasedService.Meta.ObjectType, DeliverableBasedService.Meta.OnPreDerive); 

		public DeliverableBasedServiceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableBasedServiceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TimeAndMaterialsServiceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeAndMaterialsServiceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimeAndMaterialsService.Meta.ObjectType, TimeAndMaterialsService.Meta.OnPreDerive); 

		public TimeAndMaterialsServiceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeAndMaterialsServiceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GoodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Good.Meta.ObjectType, Good.Meta.OnPreDerive); 

		public GoodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MarketingPackageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingPackageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MarketingPackage.Meta.ObjectType, MarketingPackage.Meta.OnPreDerive); 

		public MarketingPackageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingPackageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductConfigurationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductConfigurationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductConfiguration.Meta.ObjectType, ProductConfiguration.Meta.OnPreDerive); 

		public ProductConfigurationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductConfigurationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DimensionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DimensionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Dimension.Meta.ObjectType, Dimension.Meta.OnPreDerive); 

		public DimensionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DimensionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductQuoteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductQuote.Meta.ObjectType, ProductQuote.Meta.OnPreDerive); 

		public ProductQuoteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProposalOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Proposal.Meta.ObjectType, Proposal.Meta.OnPreDerive); 

		public ProposalOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StatementOfWorkOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StatementOfWork.Meta.ObjectType, StatementOfWork.Meta.OnPreDerive); 

		public StatementOfWorkOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestForInformationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestForInformation.Meta.ObjectType, RequestForInformation.Meta.OnPreDerive); 

		public RequestForInformationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestForProposalOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestForProposal.Meta.ObjectType, RequestForProposal.Meta.OnPreDerive); 

		public RequestForProposalOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestForQuoteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestForQuote.Meta.ObjectType, RequestForQuote.Meta.OnPreDerive); 

		public RequestForQuoteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTurnoverOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTurnoverOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableTurnover.Meta.ObjectType, DeliverableTurnover.Meta.OnPreDerive); 

		public DeliverableTurnoverOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTurnoverOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ExpenseEntryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExpenseEntryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ExpenseEntry.Meta.ObjectType, ExpenseEntry.Meta.OnPreDerive); 

		public ExpenseEntryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExpenseEntryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MaterialsUsageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaterialsUsageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MaterialsUsage.Meta.ObjectType, MaterialsUsage.Meta.OnPreDerive); 

		public MaterialsUsageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaterialsUsageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TimeEntryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeEntryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimeEntry.Meta.ObjectType, TimeEntry.Meta.OnPreDerive); 

		public TimeEntryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeEntryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.OnPreDerive); 

		public AccessControlOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Language.Meta.ObjectType, Language.Meta.OnPreDerive); 

		public LanguageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Locale.Meta.ObjectType, Locale.Meta.OnPreDerive); 

		public LocaleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LocalisedText.Meta.ObjectType, LocalisedText.Meta.OnPreDerive); 

		public LocalisedTextOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.OnPreDerive); 

		public MediaOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MediaTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaType.Meta.ObjectType, MediaType.Meta.OnPreDerive); 

		public MediaTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.OnPreDerive); 

		public PermissionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PrintQueueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PrintQueueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PrintQueue.Meta.ObjectType, PrintQueue.Meta.OnPreDerive); 

		public PrintQueueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PrintQueueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Role.Meta.ObjectType, Role.Meta.OnPreDerive); 

		public RoleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Singleton.Meta.ObjectType, Singleton.Meta.OnPreDerive); 

		public SingletonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UserGroup.Meta.ObjectType, UserGroup.Meta.OnPreDerive); 

		public UserGroupOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionDetailOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionDetailOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionDetail.Meta.ObjectType, AccountingTransactionDetail.Meta.OnPreDerive); 

		public AccountingTransactionDetailOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionDetailOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionNumberOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionNumberOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionNumber.Meta.ObjectType, AccountingTransactionNumber.Meta.OnPreDerive); 

		public AccountingTransactionNumberOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionNumberOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AddendumOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AddendumOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Addendum.Meta.ObjectType, Addendum.Meta.OnPreDerive); 

		public AddendumOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AddendumOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AmountDueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmountDueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AmountDue.Meta.ObjectType, AmountDue.Meta.OnPreDerive); 

		public AmountDueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmountDueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BankOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Bank.Meta.ObjectType, Bank.Meta.OnPreDerive); 

		public BankOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BenefitOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BenefitOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Benefit.Meta.ObjectType, Benefit.Meta.OnPreDerive); 

		public BenefitOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BenefitOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BillingAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillingAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BillingAccount.Meta.ObjectType, BillingAccount.Meta.OnPreDerive); 

		public BillingAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillingAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BrandOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BrandOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Brand.Meta.ObjectType, Brand.Meta.OnPreDerive); 

		public BrandOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BrandOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetItem.Meta.ObjectType, BudgetItem.Meta.OnPreDerive); 

		public BudgetItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetReviewOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetReviewOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetReview.Meta.ObjectType, BudgetReview.Meta.OnPreDerive); 

		public BudgetReviewOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetReviewOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetRevision.Meta.ObjectType, BudgetRevision.Meta.OnPreDerive); 

		public BudgetRevisionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionImpactOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionImpactOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetRevisionImpact.Meta.ObjectType, BudgetRevisionImpact.Meta.OnPreDerive); 

		public BudgetRevisionImpactOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionImpactOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetStatus.Meta.ObjectType, BudgetStatus.Meta.OnPreDerive); 

		public BudgetStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CarrierOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CarrierOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Carrier.Meta.ObjectType, Carrier.Meta.OnPreDerive); 

		public CarrierOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CarrierOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CaseStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CaseStatus.Meta.ObjectType, CaseStatus.Meta.OnPreDerive); 

		public CaseStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ChartOfAccountsOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ChartOfAccountsOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ChartOfAccounts.Meta.ObjectType, ChartOfAccounts.Meta.OnPreDerive); 

		public ChartOfAccountsOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ChartOfAccountsOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CitizenshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CitizenshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Citizenship.Meta.ObjectType, Citizenship.Meta.OnPreDerive); 

		public CitizenshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CitizenshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventStatus.Meta.ObjectType, CommunicationEventStatus.Meta.OnPreDerive); 

		public CommunicationEventStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostCenter.Meta.ObjectType, CostCenter.Meta.OnPreDerive); 

		public CostCenterOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardCompanyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardCompanyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CreditCardCompany.Meta.ObjectType, CreditCardCompany.Meta.OnPreDerive); 

		public CreditCardCompanyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardCompanyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturnStatus.Meta.ObjectType, CustomerReturnStatus.Meta.OnPreDerive); 

		public CustomerReturnStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipmentStatus.Meta.ObjectType, CustomerShipmentStatus.Meta.OnPreDerive); 

		public CustomerShipmentStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeductionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deduction.Meta.ObjectType, Deduction.Meta.OnPreDerive); 

		public DeductionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deliverable.Meta.ObjectType, Deliverable.Meta.OnPreDerive); 

		public DeliverableOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeploymentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeploymentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deployment.Meta.ObjectType, Deployment.Meta.OnPreDerive); 

		public DeploymentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeploymentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationMethodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationMethodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DepreciationMethod.Meta.ObjectType, DepreciationMethod.Meta.OnPreDerive); 

		public DepreciationMethodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationMethodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DesiredProductFeatureOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DesiredProductFeatureOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DesiredProductFeature.Meta.ObjectType, DesiredProductFeature.Meta.OnPreDerive); 

		public DesiredProductFeatureOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DesiredProductFeatureOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DropShipmentStatus.Meta.ObjectType, DropShipmentStatus.Meta.OnPreDerive); 

		public DropShipmentStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmailTemplateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailTemplateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmailTemplate.Meta.ObjectType, EmailTemplate.Meta.OnPreDerive); 

		public EmailTemplateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailTemplateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplication.Meta.ObjectType, EmploymentApplication.Meta.OnPreDerive); 

		public EmploymentApplicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngagementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Engagement.Meta.ObjectType, Engagement.Meta.OnPreDerive); 

		public EngagementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngagementRateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementRateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngagementRate.Meta.ObjectType, EngagementRate.Meta.OnPreDerive); 

		public EngagementRateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementRateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChangeStatus.Meta.ObjectType, EngineeringChangeStatus.Meta.OnPreDerive); 

		public EngineeringChangeStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccount.Meta.ObjectType, GeneralLedgerAccount.Meta.OnPreDerive); 

		public GeneralLedgerAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountGroupOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountGroupOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccountGroup.Meta.ObjectType, GeneralLedgerAccountGroup.Meta.OnPreDerive); 

		public GeneralLedgerAccountGroupOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountGroupOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccountType.Meta.ObjectType, GeneralLedgerAccountType.Meta.OnPreDerive); 

		public GeneralLedgerAccountTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GlBudgetAllocationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GlBudgetAllocationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GlBudgetAllocation.Meta.ObjectType, GlBudgetAllocation.Meta.OnPreDerive); 

		public GlBudgetAllocationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GlBudgetAllocationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationAccountingPreferenceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationAccountingPreferenceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationAccountingPreference.Meta.ObjectType, InternalOrganisationAccountingPreference.Meta.OnPreDerive); 

		public InternalOrganisationAccountingPreferenceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationAccountingPreferenceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenue.Meta.ObjectType, InternalOrganisationRevenue.Meta.OnPreDerive); 

		public InternalOrganisationRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenueHistory.Meta.ObjectType, InternalOrganisationRevenueHistory.Meta.OnPreDerive); 

		public InternalOrganisationRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemVarianceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemVarianceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InventoryItemVariance.Meta.ObjectType, InventoryItemVariance.Meta.OnPreDerive); 

		public InventoryItemVarianceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemVarianceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceVatRateItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceVatRateItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceVatRateItem.Meta.ObjectType, InvoiceVatRateItem.Meta.OnPreDerive); 

		public InvoiceVatRateItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceVatRateItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ItemIssuanceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ItemIssuance.Meta.ObjectType, ItemIssuance.Meta.OnPreDerive); 

		public ItemIssuanceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class JournalOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Journal.Meta.ObjectType, Journal.Meta.OnPreDerive); 

		public JournalOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalOnPreDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryDetailOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryDetailOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntryDetail.Meta.ObjectType, JournalEntryDetail.Meta.OnPreDerive); 

		public JournalEntryDetailOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryDetailOnPreDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryNumberOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryNumberOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntryNumber.Meta.ObjectType, JournalEntryNumber.Meta.OnPreDerive); 

		public JournalEntryNumberOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryNumberOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LegalFormOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalFormOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LegalForm.Meta.ObjectType, LegalForm.Meta.OnPreDerive); 

		public LegalFormOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalFormOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LotOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LotOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Lot.Meta.ObjectType, Lot.Meta.OnPreDerive); 

		public LotOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LotOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NeededSkillOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NeededSkillOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NeededSkill.Meta.ObjectType, NeededSkill.Meta.OnPreDerive); 

		public NeededSkillOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NeededSkillOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NewsItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NewsItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NewsItem.Meta.ObjectType, NewsItem.Meta.OnPreDerive); 

		public NewsItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NewsItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItemStatus.Meta.ObjectType, NonSerializedInventoryItemStatus.Meta.OnPreDerive); 

		public NonSerializedInventoryItemStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderKindOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderKindOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderKind.Meta.ObjectType, OrderKind.Meta.OnPreDerive); 

		public OrderKindOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderKindOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderQuantityBreakOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderQuantityBreakOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderQuantityBreak.Meta.ObjectType, OrderQuantityBreak.Meta.OnPreDerive); 

		public OrderQuantityBreakOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderQuantityBreakOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderRequirementCommitmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderRequirementCommitmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderRequirementCommitment.Meta.ObjectType, OrderRequirementCommitment.Meta.OnPreDerive); 

		public OrderRequirementCommitmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderRequirementCommitmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderTerm.Meta.ObjectType, OrderTerm.Meta.OnPreDerive); 

		public OrderTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderValueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderValueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderValue.Meta.ObjectType, OrderValue.Meta.OnPreDerive); 

		public OrderValueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderValueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactKindOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactKindOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationContactKind.Meta.ObjectType, OrganisationContactKind.Meta.OnPreDerive); 

		public OrganisationContactKindOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactKindOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationGlAccount.Meta.ObjectType, OrganisationGlAccount.Meta.OnPreDerive); 

		public OrganisationGlAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountBalanceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountBalanceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationGlAccountBalance.Meta.ObjectType, OrganisationGlAccountBalance.Meta.OnPreDerive); 

		public OrganisationGlAccountBalanceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountBalanceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Package.Meta.ObjectType, Package.Meta.OnPreDerive); 

		public PackageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackageQuantityBreakOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageQuantityBreakOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackageQuantityBreak.Meta.ObjectType, PackageQuantityBreak.Meta.OnPreDerive); 

		public PackageQuantityBreakOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageQuantityBreakOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackageRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenue.Meta.ObjectType, PackageRevenue.Meta.OnPreDerive); 

		public PackageRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackageRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenueHistory.Meta.ObjectType, PackageRevenueHistory.Meta.OnPreDerive); 

		public PackageRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackagingContentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingContentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackagingContent.Meta.ObjectType, PackagingContent.Meta.OnPreDerive); 

		public PackagingContentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingContentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartBillOfMaterialSubstituteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartBillOfMaterialSubstituteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartBillOfMaterialSubstitute.Meta.ObjectType, PartBillOfMaterialSubstitute.Meta.OnPreDerive); 

		public PartBillOfMaterialSubstituteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartBillOfMaterialSubstituteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartRevisionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartRevisionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartRevision.Meta.ObjectType, PartRevision.Meta.OnPreDerive); 

		public PartRevisionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartRevisionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartSpecificationStatus.Meta.ObjectType, PartSpecificationStatus.Meta.OnPreDerive); 

		public PartSpecificationStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartSubstituteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSubstituteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartSubstitute.Meta.ObjectType, PartSubstitute.Meta.OnPreDerive); 

		public PartSubstituteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSubstituteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyBenefitOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyBenefitOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyBenefit.Meta.ObjectType, PartyBenefit.Meta.OnPreDerive); 

		public PartyBenefitOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyBenefitOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyContactMechanismOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyContactMechanismOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyContactMechanism.Meta.ObjectType, PartyContactMechanism.Meta.OnPreDerive); 

		public PartyContactMechanismOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyContactMechanismOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyFixedAssetAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyFixedAssetAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyFixedAssetAssignment.Meta.ObjectType, PartyFixedAssetAssignment.Meta.OnPreDerive); 

		public PartyFixedAssetAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyFixedAssetAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenue.Meta.ObjectType, PartyPackageRevenue.Meta.OnPreDerive); 

		public PartyPackageRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenueHistory.Meta.ObjectType, PartyPackageRevenueHistory.Meta.OnPreDerive); 

		public PartyPackageRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenue.Meta.ObjectType, PartyProductCategoryRevenue.Meta.OnPreDerive); 

		public PartyProductCategoryRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenueHistory.Meta.ObjectType, PartyProductCategoryRevenueHistory.Meta.OnPreDerive); 

		public PartyProductCategoryRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenue.Meta.ObjectType, PartyProductRevenue.Meta.OnPreDerive); 

		public PartyProductRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenueHistory.Meta.ObjectType, PartyProductRevenueHistory.Meta.OnPreDerive); 

		public PartyProductRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenue.Meta.ObjectType, PartyRevenue.Meta.OnPreDerive); 

		public PartyRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenueHistory.Meta.ObjectType, PartyRevenueHistory.Meta.OnPreDerive); 

		public PartyRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartySkillOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartySkillOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartySkill.Meta.ObjectType, PartySkill.Meta.OnPreDerive); 

		public PartySkillOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartySkillOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PassportOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PassportOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Passport.Meta.ObjectType, Passport.Meta.OnPreDerive); 

		public PassportOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PassportOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PayGradeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayGradeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayGrade.Meta.ObjectType, PayGrade.Meta.OnPreDerive); 

		public PayGradeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayGradeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PayHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayHistory.Meta.ObjectType, PayHistory.Meta.OnPreDerive); 

		public PayHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PaymentApplicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentApplicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PaymentApplication.Meta.ObjectType, PaymentApplication.Meta.OnPreDerive); 

		public PaymentApplicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentApplicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PaymentBudgetAllocationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentBudgetAllocationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PaymentBudgetAllocation.Meta.ObjectType, PaymentBudgetAllocation.Meta.OnPreDerive); 

		public PaymentBudgetAllocationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentBudgetAllocationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PayrollPreferenceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayrollPreferenceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayrollPreference.Meta.ObjectType, PayrollPreference.Meta.OnPreDerive); 

		public PayrollPreferenceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayrollPreferenceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceNoteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceNoteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceNote.Meta.ObjectType, PerformanceNote.Meta.OnPreDerive); 

		public PerformanceNoteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceNoteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReview.Meta.ObjectType, PerformanceReview.Meta.OnPreDerive); 

		public PerformanceReviewOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReviewItem.Meta.ObjectType, PerformanceReviewItem.Meta.OnPreDerive); 

		public PerformanceReviewItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PersonTrainingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonTrainingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PersonTraining.Meta.ObjectType, PersonTraining.Meta.OnPreDerive); 

		public PersonTrainingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonTrainingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PickListItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickListItem.Meta.ObjectType, PickListItem.Meta.OnPreDerive); 

		public PickListItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PickListStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickListStatus.Meta.ObjectType, PickListStatus.Meta.OnPreDerive); 

		public PickListStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Position.Meta.ObjectType, Position.Meta.OnPreDerive); 

		public PositionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionFulfillmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionFulfillmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionFulfillment.Meta.ObjectType, PositionFulfillment.Meta.OnPreDerive); 

		public PositionFulfillmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionFulfillmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionReportingStructureOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionReportingStructureOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionReportingStructure.Meta.ObjectType, PositionReportingStructure.Meta.OnPreDerive); 

		public PositionReportingStructureOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionReportingStructureOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionResponsibilityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionResponsibilityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionResponsibility.Meta.ObjectType, PositionResponsibility.Meta.OnPreDerive); 

		public PositionResponsibilityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionResponsibilityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionType.Meta.ObjectType, PositionType.Meta.OnPreDerive); 

		public PositionTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeRateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeRateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionTypeRate.Meta.ObjectType, PositionTypeRate.Meta.OnPreDerive); 

		public PositionTypeRateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeRateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PostalBoundaryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalBoundaryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PostalBoundary.Meta.ObjectType, PostalBoundary.Meta.OnPreDerive); 

		public PostalBoundaryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalBoundaryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategory.Meta.ObjectType, ProductCategory.Meta.OnPreDerive); 

		public ProductCategoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenue.Meta.ObjectType, ProductCategoryRevenue.Meta.OnPreDerive); 

		public ProductCategoryRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenueHistory.Meta.ObjectType, ProductCategoryRevenueHistory.Meta.OnPreDerive); 

		public ProductCategoryRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductDeliverySkillRequirementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDeliverySkillRequirementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductDeliverySkillRequirement.Meta.ObjectType, ProductDeliverySkillRequirement.Meta.OnPreDerive); 

		public ProductDeliverySkillRequirementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDeliverySkillRequirementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductFeatureApplicabilityRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductFeatureApplicabilityRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductFeatureApplicabilityRelationship.Meta.ObjectType, ProductFeatureApplicabilityRelationship.Meta.OnPreDerive); 

		public ProductFeatureApplicabilityRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductFeatureApplicabilityRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductPurchasePriceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductPurchasePriceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductPurchasePrice.Meta.ObjectType, ProductPurchasePrice.Meta.OnPreDerive); 

		public ProductPurchasePriceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductPurchasePriceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenue.Meta.ObjectType, ProductRevenue.Meta.OnPreDerive); 

		public ProductRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenueHistory.Meta.ObjectType, ProductRevenueHistory.Meta.OnPreDerive); 

		public ProductRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalAssignment.Meta.ObjectType, ProfessionalAssignment.Meta.OnPreDerive); 

		public ProfessionalAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemStatus.Meta.ObjectType, PurchaseInvoiceItemStatus.Meta.OnPreDerive); 

		public PurchaseInvoiceItemStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceStatus.Meta.ObjectType, PurchaseInvoiceStatus.Meta.OnPreDerive); 

		public PurchaseInvoiceStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItemStatus.Meta.ObjectType, PurchaseOrderItemStatus.Meta.OnPreDerive); 

		public PurchaseOrderItemStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderStatus.Meta.ObjectType, PurchaseOrderStatus.Meta.OnPreDerive); 

		public PurchaseOrderStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturnStatus.Meta.ObjectType, PurchaseReturnStatus.Meta.OnPreDerive); 

		public PurchaseReturnStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipmentStatus.Meta.ObjectType, PurchaseShipmentStatus.Meta.OnPreDerive); 

		public PurchaseShipmentStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(QuoteItem.Meta.ObjectType, QuoteItem.Meta.OnPreDerive); 

		public QuoteItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class QuoteTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(QuoteTerm.Meta.ObjectType, QuoteTerm.Meta.OnPreDerive); 

		public QuoteTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestItem.Meta.ObjectType, RequestItem.Meta.OnPreDerive); 

		public RequestItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequirementBudgetAllocationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementBudgetAllocationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementBudgetAllocation.Meta.ObjectType, RequirementBudgetAllocation.Meta.OnPreDerive); 

		public RequirementBudgetAllocationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementBudgetAllocationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequirementCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementCommunication.Meta.ObjectType, RequirementCommunication.Meta.OnPreDerive); 

		public RequirementCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequirementStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementStatus.Meta.ObjectType, RequirementStatus.Meta.OnPreDerive); 

		public RequirementStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RespondingPartyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RespondingPartyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RespondingParty.Meta.ObjectType, RespondingParty.Meta.OnPreDerive); 

		public RespondingPartyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RespondingPartyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ResponsibilityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResponsibilityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Responsibility.Meta.ObjectType, Responsibility.Meta.OnPreDerive); 

		public ResponsibilityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResponsibilityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ResumeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResumeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Resume.Meta.ObjectType, Resume.Meta.OnPreDerive); 

		public ResumeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResumeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RevenueQuantityBreakOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueQuantityBreakOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RevenueQuantityBreak.Meta.ObjectType, RevenueQuantityBreak.Meta.OnPreDerive); 

		public RevenueQuantityBreakOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueQuantityBreakOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RevenueValueBreakOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueValueBreakOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RevenueValueBreak.Meta.ObjectType, RevenueValueBreak.Meta.OnPreDerive); 

		public RevenueValueBreakOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueValueBreakOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalaryStepOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalaryStepOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalaryStep.Meta.ObjectType, SalaryStep.Meta.OnPreDerive); 

		public SalaryStepOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalaryStepOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenue.Meta.ObjectType, SalesChannelRevenue.Meta.OnPreDerive); 

		public SalesChannelRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenueHistory.Meta.ObjectType, SalesChannelRevenueHistory.Meta.OnPreDerive); 

		public SalesChannelRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemStatus.Meta.ObjectType, SalesInvoiceItemStatus.Meta.OnPreDerive); 

		public SalesInvoiceItemStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceStatus.Meta.ObjectType, SalesInvoiceStatus.Meta.OnPreDerive); 

		public SalesInvoiceStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItemStatus.Meta.ObjectType, SalesOrderItemStatus.Meta.OnPreDerive); 

		public SalesOrderItemStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderStatus.Meta.ObjectType, SalesOrderStatus.Meta.OnPreDerive); 

		public SalesOrderStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepCommissionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepCommissionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepCommission.Meta.ObjectType, SalesRepCommission.Meta.OnPreDerive); 

		public SalesRepCommissionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepCommissionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyProductCategoryRevenue.Meta.ObjectType, SalesRepPartyProductCategoryRevenue.Meta.OnPreDerive); 

		public SalesRepPartyProductCategoryRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyRevenue.Meta.ObjectType, SalesRepPartyRevenue.Meta.OnPreDerive); 

		public SalesRepPartyRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepProductCategoryRevenue.Meta.ObjectType, SalesRepProductCategoryRevenue.Meta.OnPreDerive); 

		public SalesRepProductCategoryRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenue.Meta.ObjectType, SalesRepRevenue.Meta.OnPreDerive); 

		public SalesRepRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenueHistory.Meta.ObjectType, SalesRepRevenueHistory.Meta.OnPreDerive); 

		public SalesRepRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItemStatus.Meta.ObjectType, SerializedInventoryItemStatus.Meta.OnPreDerive); 

		public SerializedInventoryItemStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryHeaderOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryHeaderOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceEntryHeader.Meta.ObjectType, ServiceEntryHeader.Meta.OnPreDerive); 

		public ServiceEntryHeaderOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryHeaderOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentItem.Meta.ObjectType, ShipmentItem.Meta.OnPreDerive); 

		public ShipmentItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentPackageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentPackageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentPackage.Meta.ObjectType, ShipmentPackage.Meta.OnPreDerive); 

		public ShipmentPackageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentPackageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentReceiptOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentReceiptOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentReceipt.Meta.ObjectType, ShipmentReceipt.Meta.OnPreDerive); 

		public ShipmentReceiptOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentReceiptOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentRouteSegmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentRouteSegmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentRouteSegment.Meta.ObjectType, ShipmentRouteSegment.Meta.OnPreDerive); 

		public ShipmentRouteSegmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentRouteSegmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentValueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentValueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentValue.Meta.ObjectType, ShipmentValue.Meta.OnPreDerive); 

		public ShipmentValueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentValueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingComponentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingComponentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShippingAndHandlingComponent.Meta.ObjectType, ShippingAndHandlingComponent.Meta.OnPreDerive); 

		public ShippingAndHandlingComponentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingComponentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StoreOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Store.Meta.ObjectType, Store.Meta.OnPreDerive); 

		public StoreOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StoreRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenue.Meta.ObjectType, StoreRevenue.Meta.OnPreDerive); 

		public StoreRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StoreRevenueHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenueHistory.Meta.ObjectType, StoreRevenueHistory.Meta.OnPreDerive); 

		public StoreRevenueHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SupplierOfferingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierOfferingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SupplierOffering.Meta.ObjectType, SupplierOffering.Meta.OnPreDerive); 

		public SupplierOfferingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierOfferingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TrainingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TrainingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Training.Meta.ObjectType, Training.Meta.OnPreDerive); 

		public TrainingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TrainingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TransferStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TransferStatus.Meta.ObjectType, TransferStatus.Meta.OnPreDerive); 

		public TransferStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureConversionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureConversionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UnitOfMeasureConversion.Meta.ObjectType, UnitOfMeasureConversion.Meta.OnPreDerive); 

		public UnitOfMeasureConversionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureConversionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatFormOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatFormOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatForm.Meta.ObjectType, VatForm.Meta.OnPreDerive); 

		public VatFormOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatFormOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatRateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRate.Meta.ObjectType, VatRate.Meta.OnPreDerive); 

		public VatRateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatReturnBox.Meta.ObjectType, VatReturnBox.Meta.OnPreDerive); 

		public VatReturnBoxOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatReturnBoxType.Meta.ObjectType, VatReturnBoxType.Meta.OnPreDerive); 

		public VatReturnBoxTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortAssignment.Meta.ObjectType, WorkEffortAssignment.Meta.OnPreDerive); 

		public WorkEffortAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentRateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentRateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortAssignmentRate.Meta.ObjectType, WorkEffortAssignmentRate.Meta.OnPreDerive); 

		public WorkEffortAssignmentRateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentRateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortFixedAssetAssignment.Meta.ObjectType, WorkEffortFixedAssetAssignment.Meta.OnPreDerive); 

		public WorkEffortFixedAssetAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetStandardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetStandardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortFixedAssetStandard.Meta.ObjectType, WorkEffortFixedAssetStandard.Meta.OnPreDerive); 

		public WorkEffortFixedAssetStandardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetStandardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortGoodStandardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortGoodStandardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortGoodStandard.Meta.ObjectType, WorkEffortGoodStandard.Meta.OnPreDerive); 

		public WorkEffortGoodStandardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortGoodStandardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortInventoryAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortInventoryAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortInventoryAssignment.Meta.ObjectType, WorkEffortInventoryAssignment.Meta.OnPreDerive); 

		public WorkEffortInventoryAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortInventoryAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartStandardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartStandardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPartStandard.Meta.ObjectType, WorkEffortPartStandard.Meta.OnPreDerive); 

		public WorkEffortPartStandardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartStandardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartyAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartyAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPartyAssignment.Meta.ObjectType, WorkEffortPartyAssignment.Meta.OnPreDerive); 

		public WorkEffortPartyAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartyAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortSkillStandardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortSkillStandardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortSkillStandard.Meta.ObjectType, WorkEffortSkillStandard.Meta.OnPreDerive); 

		public WorkEffortSkillStandardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortSkillStandardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortStatus.Meta.ObjectType, WorkEffortStatus.Meta.OnPreDerive); 

		public WorkEffortStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortType.Meta.ObjectType, WorkEffortType.Meta.OnPreDerive); 

		public WorkEffortTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ImageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ImageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.OnPreDerive); 

		public ImageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.OnPreDerive); 

		public LoginOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.OnPreDerive); 

		public SecurityTokenOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderShipmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderShipment.Meta.ObjectType, OrderShipment.Meta.OnPreDerive); 

		public OrderShipmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StringTemplateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StringTemplate.Meta.ObjectType, StringTemplate.Meta.OnPreDerive); 

		public StringTemplateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetObjectState.Meta.ObjectType, BudgetObjectState.Meta.OnPreDerive); 

		public BudgetObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CaseObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CaseObjectState.Meta.ObjectType, CaseObjectState.Meta.OnPreDerive); 

		public CaseObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventObjectState.Meta.ObjectType, CommunicationEventObjectState.Meta.OnPreDerive); 

		public CommunicationEventObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturnObjectState.Meta.ObjectType, CustomerReturnObjectState.Meta.OnPreDerive); 

		public CustomerReturnObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipmentObjectState.Meta.ObjectType, CustomerShipmentObjectState.Meta.OnPreDerive); 

		public CustomerShipmentObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DropShipmentObjectState.Meta.ObjectType, DropShipmentObjectState.Meta.OnPreDerive); 

		public DropShipmentObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChangeObjectState.Meta.ObjectType, EngineeringChangeObjectState.Meta.OnPreDerive); 

		public EngineeringChangeObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItemObjectState.Meta.ObjectType, NonSerializedInventoryItemObjectState.Meta.OnPreDerive); 

		public NonSerializedInventoryItemObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartSpecificationObjectState.Meta.ObjectType, PartSpecificationObjectState.Meta.OnPreDerive); 

		public PartSpecificationObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PickListObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickListObjectState.Meta.ObjectType, PickListObjectState.Meta.OnPreDerive); 

		public PickListObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemObjectState.Meta.ObjectType, PurchaseInvoiceItemObjectState.Meta.OnPreDerive); 

		public PurchaseInvoiceItemObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceObjectState.Meta.ObjectType, PurchaseInvoiceObjectState.Meta.OnPreDerive); 

		public PurchaseInvoiceObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItemObjectState.Meta.ObjectType, PurchaseOrderItemObjectState.Meta.OnPreDerive); 

		public PurchaseOrderItemObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderObjectState.Meta.ObjectType, PurchaseOrderObjectState.Meta.OnPreDerive); 

		public PurchaseOrderObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturnObjectState.Meta.ObjectType, PurchaseReturnObjectState.Meta.OnPreDerive); 

		public PurchaseReturnObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipmentObjectState.Meta.ObjectType, PurchaseShipmentObjectState.Meta.OnPreDerive); 

		public PurchaseShipmentObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequirementObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementObjectState.Meta.ObjectType, RequirementObjectState.Meta.OnPreDerive); 

		public RequirementObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemObjectState.Meta.ObjectType, SalesInvoiceItemObjectState.Meta.OnPreDerive); 

		public SalesInvoiceItemObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceObjectState.Meta.ObjectType, SalesInvoiceObjectState.Meta.OnPreDerive); 

		public SalesInvoiceObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItemObjectState.Meta.ObjectType, SalesOrderItemObjectState.Meta.OnPreDerive); 

		public SalesOrderItemObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderObjectState.Meta.ObjectType, SalesOrderObjectState.Meta.OnPreDerive); 

		public SalesOrderObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItemObjectState.Meta.ObjectType, SerializedInventoryItemObjectState.Meta.OnPreDerive); 

		public SerializedInventoryItemObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TransferObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TransferObjectState.Meta.ObjectType, TransferObjectState.Meta.OnPreDerive); 

		public TransferObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortObjectState.Meta.ObjectType, WorkEffortObjectState.Meta.OnPreDerive); 

		public WorkEffortObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Counter.Meta.ObjectType, Counter.Meta.OnPreDerive); 

		public CounterOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterCategoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterCategoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostCenterCategory.Meta.ObjectType, CostCenterCategory.Meta.OnPreDerive); 

		public CostCenterCategoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterCategoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaContent.Meta.ObjectType, MediaContent.Meta.OnPreDerive); 

		public MediaContentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TransitionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Transition.Meta.ObjectType, Transition.Meta.OnPreDerive); 

		public TransitionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EventOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Event.Meta.ObjectType, Event.Meta.OnPreDerive); 

		public EventOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EventRegistrationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventRegistrationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EventRegistration.Meta.ObjectType, EventRegistration.Meta.OnPreDerive); 

		public EventRegistrationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventRegistrationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FiscalYearInvoiceNumberOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FiscalYearInvoiceNumberOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FiscalYearInvoiceNumber.Meta.ObjectType, FiscalYearInvoiceNumber.Meta.OnPreDerive); 

		public FiscalYearInvoiceNumberOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FiscalYearInvoiceNumberOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderItemBillingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderItemBillingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderItemBilling.Meta.ObjectType, OrderItemBilling.Meta.OnPreDerive); 

		public OrderItemBillingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderItemBillingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryBillingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryBillingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceEntryBilling.Meta.ObjectType, ServiceEntryBilling.Meta.OnPreDerive); 

		public ServiceEntryBillingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryBillingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortBillingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortBillingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortBilling.Meta.ObjectType, WorkEffortBilling.Meta.OnPreDerive); 

		public WorkEffortBillingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortBillingOnPreDeriveMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnDerive : Allors.Meta.Method
	{
		protected ObjectOnDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class AccountingTransactionTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionType.Meta.ObjectType, AccountingTransactionType.Meta.OnDerive); 

		public AccountingTransactionTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class AssetAssignmentStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AssetAssignmentStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AssetAssignmentStatus.Meta.ObjectType, AssetAssignmentStatus.Meta.OnDerive); 

		public AssetAssignmentStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AssetAssignmentStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class ColourOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ColourOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Colour.Meta.ObjectType, Colour.Meta.OnDerive); 

		public ColourOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ColourOnDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventPurposeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventPurposeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventPurpose.Meta.ObjectType, CommunicationEventPurpose.Meta.OnDerive); 

		public CommunicationEventPurposeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventPurposeOnDeriveMethodInvocation;
			}
		}
	}public partial class ContactMechanismPurposeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismPurposeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ContactMechanismPurpose.Meta.ObjectType, ContactMechanismPurpose.Meta.OnDerive); 

		public ContactMechanismPurposeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismPurposeOnDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterSplitMethodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterSplitMethodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostCenterSplitMethod.Meta.ObjectType, CostCenterSplitMethod.Meta.OnDerive); 

		public CostCenterSplitMethodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterSplitMethodOnDeriveMethodInvocation;
			}
		}
	}public partial class CostOfGoodsSoldMethodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostOfGoodsSoldMethodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostOfGoodsSoldMethod.Meta.ObjectType, CostOfGoodsSoldMethod.Meta.OnDerive); 

		public CostOfGoodsSoldMethodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostOfGoodsSoldMethodOnDeriveMethodInvocation;
			}
		}
	}public partial class DebitCreditConstantOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DebitCreditConstantOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DebitCreditConstant.Meta.ObjectType, DebitCreditConstant.Meta.OnDerive); 

		public DebitCreditConstantOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DebitCreditConstantOnDeriveMethodInvocation;
			}
		}
	}public partial class DeductionTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeductionType.Meta.ObjectType, DeductionType.Meta.OnDerive); 

		public DeductionTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableType.Meta.ObjectType, DeliverableType.Meta.OnDerive); 

		public DeliverableTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class DunningTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DunningTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DunningType.Meta.ObjectType, DunningType.Meta.OnDerive); 

		public DunningTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DunningTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationSourceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationSourceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplicationSource.Meta.ObjectType, EmploymentApplicationSource.Meta.OnDerive); 

		public EmploymentApplicationSourceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationSourceOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplicationStatus.Meta.ObjectType, EmploymentApplicationStatus.Meta.OnDerive); 

		public EmploymentApplicationStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentTermination.Meta.ObjectType, EmploymentTermination.Meta.OnDerive); 

		public EmploymentTerminationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationReasonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationReasonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentTerminationReason.Meta.ObjectType, EmploymentTerminationReason.Meta.OnDerive); 

		public EmploymentTerminationReasonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationReasonOnDeriveMethodInvocation;
			}
		}
	}public partial class EuSalesListTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EuSalesListTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EuSalesListType.Meta.ObjectType, EuSalesListType.Meta.OnDerive); 

		public EuSalesListTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EuSalesListTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class GenderTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GenderType.Meta.ObjectType, GenderType.Meta.OnDerive); 

		public GenderTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class HobbyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HobbyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Hobby.Meta.ObjectType, Hobby.Meta.OnDerive); 

		public HobbyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HobbyOnDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemKindOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemKindOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InventoryItemKind.Meta.ObjectType, InventoryItemKind.Meta.OnDerive); 

		public InventoryItemKindOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemKindOnDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceSequenceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceSequenceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceSequence.Meta.ObjectType, InvoiceSequence.Meta.OnDerive); 

		public InvoiceSequenceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceSequenceOnDeriveMethodInvocation;
			}
		}
	}public partial class JournalTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalType.Meta.ObjectType, JournalType.Meta.OnDerive); 

		public JournalTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class MaritalStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaritalStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MaritalStatus.Meta.ObjectType, MaritalStatus.Meta.OnDerive); 

		public MaritalStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaritalStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class ModelOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ModelOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Model.Meta.ObjectType, Model.Meta.OnDerive); 

		public ModelOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ModelOnDeriveMethodInvocation;
			}
		}
	}public partial class OrdinalOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrdinalOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Ordinal.Meta.ObjectType, Ordinal.Meta.OnDerive); 

		public OrdinalOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrdinalOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationUnitOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationUnitOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationUnit.Meta.ObjectType, OrganisationUnit.Meta.OnDerive); 

		public OrganisationUnitOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationUnitOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyRelationshipStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRelationshipStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyRelationshipStatus.Meta.ObjectType, PartyRelationshipStatus.Meta.OnDerive); 

		public PartyRelationshipStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRelationshipStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReviewItemType.Meta.ObjectType, PerformanceReviewItemType.Meta.OnDerive); 

		public PerformanceReviewItemTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonalTitleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonalTitleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PersonalTitle.Meta.ObjectType, PersonalTitle.Meta.OnDerive); 

		public PersonalTitleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonalTitleOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionStatus.Meta.ObjectType, PositionStatus.Meta.OnDerive); 

		public PositionStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class PriorityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PriorityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Priority.Meta.ObjectType, Priority.Meta.OnDerive); 

		public PriorityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PriorityOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductQualityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQualityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductQuality.Meta.ObjectType, ProductQuality.Meta.OnDerive); 

		public ProductQualityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQualityOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemType.Meta.ObjectType, PurchaseInvoiceItemType.Meta.OnDerive); 

		public PurchaseInvoiceItemTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceType.Meta.ObjectType, PurchaseInvoiceType.Meta.OnDerive); 

		public PurchaseInvoiceTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class QualificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QualificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Qualification.Meta.ObjectType, Qualification.Meta.OnDerive); 

		public QualificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QualificationOnDeriveMethodInvocation;
			}
		}
	}public partial class RateTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RateTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RateType.Meta.ObjectType, RateType.Meta.OnDerive); 

		public RateTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RateTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class RatingTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RatingTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RatingType.Meta.ObjectType, RatingType.Meta.OnDerive); 

		public RatingTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RatingTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannel.Meta.ObjectType, SalesChannel.Meta.OnDerive); 

		public SalesChannelOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemType.Meta.ObjectType, SalesInvoiceItemType.Meta.OnDerive); 

		public SalesInvoiceItemTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceType.Meta.ObjectType, SalesInvoiceType.Meta.OnDerive); 

		public SalesInvoiceTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class SalutationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalutationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Salutation.Meta.ObjectType, Salutation.Meta.OnDerive); 

		public SalutationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalutationOnDeriveMethodInvocation;
			}
		}
	}public partial class ServiceFeatureOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceFeatureOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceFeature.Meta.ObjectType, ServiceFeature.Meta.OnDerive); 

		public ServiceFeatureOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceFeatureOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentMethodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentMethodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentMethod.Meta.ObjectType, ShipmentMethod.Meta.OnDerive); 

		public ShipmentMethodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentMethodOnDeriveMethodInvocation;
			}
		}
	}public partial class SizeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SizeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Size.Meta.ObjectType, Size.Meta.OnDerive); 

		public SizeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SizeOnDeriveMethodInvocation;
			}
		}
	}public partial class SkillOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Skill.Meta.ObjectType, Skill.Meta.OnDerive); 

		public SkillOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillOnDeriveMethodInvocation;
			}
		}
	}public partial class SkillLevelOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillLevelOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SkillLevel.Meta.ObjectType, SkillLevel.Meta.OnDerive); 

		public SkillLevelOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillLevelOnDeriveMethodInvocation;
			}
		}
	}public partial class SkillRatingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillRatingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SkillRating.Meta.ObjectType, SkillRating.Meta.OnDerive); 

		public SkillRatingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillRatingOnDeriveMethodInvocation;
			}
		}
	}public partial class SoftwareFeatureOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SoftwareFeatureOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SoftwareFeature.Meta.ObjectType, SoftwareFeature.Meta.OnDerive); 

		public SoftwareFeatureOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SoftwareFeatureOnDeriveMethodInvocation;
			}
		}
	}public partial class TemplatePurposeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TemplatePurposeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TemplatePurpose.Meta.ObjectType, TemplatePurpose.Meta.OnDerive); 

		public TemplatePurposeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplatePurposeOnDeriveMethodInvocation;
			}
		}
	}public partial class TermTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TermTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TermType.Meta.ObjectType, TermType.Meta.OnDerive); 

		public TermTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TermTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class TimeFrequencyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeFrequencyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimeFrequency.Meta.ObjectType, TimeFrequency.Meta.OnDerive); 

		public TimeFrequencyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeFrequencyOnDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UnitOfMeasure.Meta.ObjectType, UnitOfMeasure.Meta.OnDerive); 

		public UnitOfMeasureOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureOnDeriveMethodInvocation;
			}
		}
	}public partial class VarianceReasonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VarianceReasonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VarianceReason.Meta.ObjectType, VarianceReason.Meta.OnDerive); 

		public VarianceReasonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VarianceReasonOnDeriveMethodInvocation;
			}
		}
	}public partial class VatCalculationMethodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatCalculationMethodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatCalculationMethod.Meta.ObjectType, VatCalculationMethod.Meta.OnDerive); 

		public VatCalculationMethodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatCalculationMethodOnDeriveMethodInvocation;
			}
		}
	}public partial class VatRatePurchaseKindOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRatePurchaseKindOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRatePurchaseKind.Meta.ObjectType, VatRatePurchaseKind.Meta.OnDerive); 

		public VatRatePurchaseKindOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRatePurchaseKindOnDeriveMethodInvocation;
			}
		}
	}public partial class VatRateUsageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateUsageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRateUsage.Meta.ObjectType, VatRateUsage.Meta.OnDerive); 

		public VatRateUsageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateUsageOnDeriveMethodInvocation;
			}
		}
	}public partial class VatRegimeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRegimeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRegime.Meta.ObjectType, VatRegime.Meta.OnDerive); 

		public VatRegimeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRegimeOnDeriveMethodInvocation;
			}
		}
	}public partial class VatTariffOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatTariffOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatTariff.Meta.ObjectType, VatTariff.Meta.OnDerive); 

		public VatTariffOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatTariffOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeKindOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeKindOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortTypeKind.Meta.ObjectType, WorkEffortTypeKind.Meta.OnDerive); 

		public WorkEffortTypeKindOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeKindOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPurposeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPurposeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPurpose.Meta.ObjectType, WorkEffortPurpose.Meta.OnDerive); 

		public WorkEffortPurposeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPurposeOnDeriveMethodInvocation;
			}
		}
	}public partial class BillOfLadingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillOfLadingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BillOfLading.Meta.ObjectType, BillOfLading.Meta.OnDerive); 

		public BillOfLadingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillOfLadingOnDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringDocumentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringDocumentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringDocument.Meta.ObjectType, EngineeringDocument.Meta.OnDerive); 

		public EngineeringDocumentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringDocumentOnDeriveMethodInvocation;
			}
		}
	}public partial class ExportDocumentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExportDocumentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ExportDocument.Meta.ObjectType, ExportDocument.Meta.OnDerive); 

		public ExportDocumentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExportDocumentOnDeriveMethodInvocation;
			}
		}
	}public partial class HazardousMaterialsDocumentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HazardousMaterialsDocumentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(HazardousMaterialsDocument.Meta.ObjectType, HazardousMaterialsDocument.Meta.OnDerive); 

		public HazardousMaterialsDocumentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HazardousMaterialsDocumentOnDeriveMethodInvocation;
			}
		}
	}public partial class ManifestOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManifestOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Manifest.Meta.ObjectType, Manifest.Meta.OnDerive); 

		public ManifestOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManifestOnDeriveMethodInvocation;
			}
		}
	}public partial class MarketingMaterialOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingMaterialOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MarketingMaterial.Meta.ObjectType, MarketingMaterial.Meta.OnDerive); 

		public MarketingMaterialOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingMaterialOnDeriveMethodInvocation;
			}
		}
	}public partial class PackagingSlipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingSlipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackagingSlip.Meta.ObjectType, PackagingSlip.Meta.OnDerive); 

		public PackagingSlipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingSlipOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductDrawingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDrawingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductDrawing.Meta.ObjectType, ProductDrawing.Meta.OnDerive); 

		public ProductDrawingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDrawingOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductModelOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductModelOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductModel.Meta.ObjectType, ProductModel.Meta.OnDerive); 

		public ProductModelOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductModelOnDeriveMethodInvocation;
			}
		}
	}public partial class TaxDocumentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDocumentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TaxDocument.Meta.ObjectType, TaxDocument.Meta.OnDerive); 

		public TaxDocumentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDocumentOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoice.Meta.ObjectType, PurchaseInvoice.Meta.OnDerive); 

		public PurchaseInvoiceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoice.Meta.ObjectType, SalesInvoice.Meta.OnDerive); 

		public SalesInvoiceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.OnDerive); 

		public PurchaseOrderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.OnDerive); 

		public SalesOrderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturn.Meta.ObjectType, CustomerReturn.Meta.OnDerive); 

		public CustomerReturnOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.OnDerive); 

		public CustomerShipmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentOnDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DropShipment.Meta.ObjectType, DropShipment.Meta.OnDerive); 

		public DropShipmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturn.Meta.ObjectType, PurchaseReturn.Meta.OnDerive); 

		public PurchaseReturnOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipment.Meta.ObjectType, PurchaseShipment.Meta.OnDerive); 

		public PurchaseShipmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentOnDeriveMethodInvocation;
			}
		}
	}public partial class TransferOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Transfer.Meta.ObjectType, Transfer.Meta.OnDerive); 

		public TransferOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferOnDeriveMethodInvocation;
			}
		}
	}public partial class PickListOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickList.Meta.ObjectType, PickList.Meta.OnDerive); 

		public PickListOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListOnDeriveMethodInvocation;
			}
		}
	}public partial class AccountingPeriodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingPeriod.Meta.ObjectType, AccountingPeriod.Meta.OnDerive); 

		public AccountingPeriodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodOnDeriveMethodInvocation;
			}
		}
	}public partial class CapitalBudgetOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CapitalBudget.Meta.ObjectType, CapitalBudget.Meta.OnDerive); 

		public CapitalBudgetOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetOnDeriveMethodInvocation;
			}
		}
	}public partial class OperatingBudgetOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OperatingBudget.Meta.ObjectType, OperatingBudget.Meta.OnDerive); 

		public OperatingBudgetOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetOnDeriveMethodInvocation;
			}
		}
	}public partial class EmailCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmailCommunication.Meta.ObjectType, EmailCommunication.Meta.OnDerive); 

		public EmailCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FaceToFaceCommunication.Meta.ObjectType, FaceToFaceCommunication.Meta.OnDerive); 

		public FaceToFaceCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class FaxCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FaxCommunication.Meta.ObjectType, FaxCommunication.Meta.OnDerive); 

		public FaxCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LetterCorrespondence.Meta.ObjectType, LetterCorrespondence.Meta.OnDerive); 

		public LetterCorrespondenceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceOnDeriveMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PhoneCommunication.Meta.ObjectType, PhoneCommunication.Meta.OnDerive); 

		public PhoneCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WebSiteCommunication.Meta.ObjectType, WebSiteCommunication.Meta.OnDerive); 

		public WebSiteCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItem.Meta.ObjectType, NonSerializedInventoryItem.Meta.OnDerive); 

		public NonSerializedInventoryItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemOnDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItem.Meta.ObjectType, SerializedInventoryItem.Meta.OnDerive); 

		public SerializedInventoryItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItem.Meta.ObjectType, PurchaseInvoiceItem.Meta.OnDerive); 

		public PurchaseInvoiceItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItem.Meta.ObjectType, SalesInvoiceItem.Meta.OnDerive); 

		public SalesInvoiceItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.OnDerive); 

		public PurchaseOrderItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.OnDerive); 

		public SalesOrderItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemOnDeriveMethodInvocation;
			}
		}
	}public partial class ConstraintSpecificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ConstraintSpecificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ConstraintSpecification.Meta.ObjectType, ConstraintSpecification.Meta.OnDerive); 

		public ConstraintSpecificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ConstraintSpecificationOnDeriveMethodInvocation;
			}
		}
	}public partial class OperatingConditionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingConditionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OperatingCondition.Meta.ObjectType, OperatingCondition.Meta.OnDerive); 

		public OperatingConditionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingConditionOnDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceSpecificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceSpecificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceSpecification.Meta.ObjectType, PerformanceSpecification.Meta.OnDerive); 

		public PerformanceSpecificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceSpecificationOnDeriveMethodInvocation;
			}
		}
	}public partial class TestingRequirementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TestingRequirementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TestingRequirement.Meta.ObjectType, TestingRequirement.Meta.OnDerive); 

		public TestingRequirementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TestingRequirementOnDeriveMethodInvocation;
			}
		}
	}public partial class ToleranceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ToleranceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Tolerance.Meta.ObjectType, Tolerance.Meta.OnDerive); 

		public ToleranceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToleranceOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerRequirementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRequirementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRequirement.Meta.ObjectType, CustomerRequirement.Meta.OnDerive); 

		public CustomerRequirementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRequirementOnDeriveMethodInvocation;
			}
		}
	}public partial class InternalRequirementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalRequirementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalRequirement.Meta.ObjectType, InternalRequirement.Meta.OnDerive); 

		public InternalRequirementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalRequirementOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductRequirementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRequirementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductRequirement.Meta.ObjectType, ProductRequirement.Meta.OnDerive); 

		public ProductRequirementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRequirementOnDeriveMethodInvocation;
			}
		}
	}public partial class ProjectRequirementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectRequirementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProjectRequirement.Meta.ObjectType, ProjectRequirement.Meta.OnDerive); 

		public ProjectRequirementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectRequirementOnDeriveMethodInvocation;
			}
		}
	}public partial class ResourceRequirementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResourceRequirementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ResourceRequirement.Meta.ObjectType, ResourceRequirement.Meta.OnDerive); 

		public ResourceRequirementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResourceRequirementOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkRequirementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkRequirementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkRequirement.Meta.ObjectType, WorkRequirement.Meta.OnDerive); 

		public WorkRequirementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkRequirementOnDeriveMethodInvocation;
			}
		}
	}public partial class ActivityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Activity.Meta.ObjectType, Activity.Meta.OnDerive); 

		public ActivityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityOnDeriveMethodInvocation;
			}
		}
	}public partial class MaintenanceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaintenanceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Maintenance.Meta.ObjectType, Maintenance.Meta.OnDerive); 

		public MaintenanceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaintenanceOnDeriveMethodInvocation;
			}
		}
	}public partial class PhaseOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhaseOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Phase.Meta.ObjectType, Phase.Meta.OnDerive); 

		public PhaseOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhaseOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductionRunOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductionRunOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductionRun.Meta.ObjectType, ProductionRun.Meta.OnDerive); 

		public ProductionRunOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductionRunOnDeriveMethodInvocation;
			}
		}
	}public partial class ProgramOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProgramOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Program.Meta.ObjectType, Program.Meta.OnDerive); 

		public ProgramOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProgramOnDeriveMethodInvocation;
			}
		}
	}public partial class ProjectOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Project.Meta.ObjectType, Project.Meta.OnDerive); 

		public ProjectOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectOnDeriveMethodInvocation;
			}
		}
	}public partial class ResearchOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResearchOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Research.Meta.ObjectType, Research.Meta.OnDerive); 

		public ResearchOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResearchOnDeriveMethodInvocation;
			}
		}
	}public partial class TaskOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Task.Meta.ObjectType, Task.Meta.OnDerive); 

		public TaskOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkFlowOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkFlowOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkFlow.Meta.ObjectType, WorkFlow.Meta.OnDerive); 

		public WorkFlowOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkFlowOnDeriveMethodInvocation;
			}
		}
	}public partial class CaseOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Case.Meta.ObjectType, Case.Meta.OnDerive); 

		public CaseOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseOnDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChange.Meta.ObjectType, EngineeringChange.Meta.OnDerive); 

		public EngineeringChangeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeOnDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntry.Meta.ObjectType, JournalEntry.Meta.OnDerive); 

		public JournalEntryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.OnDerive); 

		public PersonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AutomatedAgent.Meta.ObjectType, AutomatedAgent.Meta.OnDerive); 

		public AutomatedAgentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnDeriveMethodInvocation;
			}
		}
	}public partial class CreditLineOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditLineOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CreditLine.Meta.ObjectType, CreditLine.Meta.OnDerive); 

		public CreditLineOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditLineOnDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementAccountingTransactionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementAccountingTransactionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DisbursementAccountingTransaction.Meta.ObjectType, DisbursementAccountingTransaction.Meta.OnDerive); 

		public DisbursementAccountingTransactionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementAccountingTransactionOnDeriveMethodInvocation;
			}
		}
	}public partial class NoteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NoteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Note.Meta.ObjectType, Note.Meta.OnDerive); 

		public NoteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NoteOnDeriveMethodInvocation;
			}
		}
	}public partial class ObligationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ObligationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Obligation.Meta.ObjectType, Obligation.Meta.OnDerive); 

		public ObligationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ObligationOnDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptAccountingTransactionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptAccountingTransactionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ReceiptAccountingTransaction.Meta.ObjectType, ReceiptAccountingTransaction.Meta.OnDerive); 

		public ReceiptAccountingTransactionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptAccountingTransactionOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesAccountingTransactionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAccountingTransactionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesAccountingTransaction.Meta.ObjectType, SalesAccountingTransaction.Meta.OnDerive); 

		public SalesAccountingTransactionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAccountingTransactionOnDeriveMethodInvocation;
			}
		}
	}public partial class TaxDueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TaxDue.Meta.ObjectType, TaxDue.Meta.OnDerive); 

		public TaxDueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDueOnDeriveMethodInvocation;
			}
		}
	}public partial class AmortizationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmortizationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Amortization.Meta.ObjectType, Amortization.Meta.OnDerive); 

		public AmortizationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmortizationOnDeriveMethodInvocation;
			}
		}
	}public partial class CapitalizationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalizationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Capitalization.Meta.ObjectType, Capitalization.Meta.OnDerive); 

		public CapitalizationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalizationOnDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Depreciation.Meta.ObjectType, Depreciation.Meta.OnDerive); 

		public DepreciationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationOnDeriveMethodInvocation;
			}
		}
	}public partial class ItemVarianceAccountingTransactionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemVarianceAccountingTransactionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ItemVarianceAccountingTransaction.Meta.ObjectType, ItemVarianceAccountingTransaction.Meta.OnDerive); 

		public ItemVarianceAccountingTransactionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemVarianceAccountingTransactionOnDeriveMethodInvocation;
			}
		}
	}public partial class ClientAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClientAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ClientAgreement.Meta.ObjectType, ClientAgreement.Meta.OnDerive); 

		public ClientAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentAgreement.Meta.ObjectType, EmploymentAgreement.Meta.OnDerive); 

		public EmploymentAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseAgreement.Meta.ObjectType, PurchaseAgreement.Meta.OnDerive); 

		public PurchaseAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesAgreement.Meta.ObjectType, SalesAgreement.Meta.OnDerive); 

		public SalesAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubContractorAgreement.Meta.ObjectType, SubContractorAgreement.Meta.OnDerive); 

		public SubContractorAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class AgreementExhibitOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementExhibitOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AgreementExhibit.Meta.ObjectType, AgreementExhibit.Meta.OnDerive); 

		public AgreementExhibitOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementExhibitOnDeriveMethodInvocation;
			}
		}
	}public partial class AgreementPricingProgramOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementPricingProgramOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AgreementPricingProgram.Meta.ObjectType, AgreementPricingProgram.Meta.OnDerive); 

		public AgreementPricingProgramOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementPricingProgramOnDeriveMethodInvocation;
			}
		}
	}public partial class AgreementSectionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementSectionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AgreementSection.Meta.ObjectType, AgreementSection.Meta.OnDerive); 

		public AgreementSectionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementSectionOnDeriveMethodInvocation;
			}
		}
	}public partial class SubAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubAgreement.Meta.ObjectType, SubAgreement.Meta.OnDerive); 

		public SubAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class FinancialTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FinancialTerm.Meta.ObjectType, FinancialTerm.Meta.OnDerive); 

		public FinancialTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialTermOnDeriveMethodInvocation;
			}
		}
	}public partial class IncentiveOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncentiveOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Incentive.Meta.ObjectType, Incentive.Meta.OnDerive); 

		public IncentiveOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncentiveOnDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceTerm.Meta.ObjectType, InvoiceTerm.Meta.OnDerive); 

		public InvoiceTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermOnDeriveMethodInvocation;
			}
		}
	}public partial class LegalTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LegalTerm.Meta.ObjectType, LegalTerm.Meta.OnDerive); 

		public LegalTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalTermOnDeriveMethodInvocation;
			}
		}
	}public partial class ThresholdOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThresholdOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Threshold.Meta.ObjectType, Threshold.Meta.OnDerive); 

		public ThresholdOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThresholdOnDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Country.Meta.ObjectType, Country.Meta.OnDerive); 

		public CountryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnDeriveMethodInvocation;
			}
		}
	}public partial class CountyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(County.Meta.ObjectType, County.Meta.OnDerive); 

		public CountyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountyOnDeriveMethodInvocation;
			}
		}
	}public partial class ProvinceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProvinceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Province.Meta.ObjectType, Province.Meta.OnDerive); 

		public ProvinceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProvinceOnDeriveMethodInvocation;
			}
		}
	}public partial class StateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(State.Meta.ObjectType, State.Meta.OnDerive); 

		public StateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StateOnDeriveMethodInvocation;
			}
		}
	}public partial class TerritoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TerritoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Territory.Meta.ObjectType, Territory.Meta.OnDerive); 

		public TerritoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TerritoryOnDeriveMethodInvocation;
			}
		}
	}public partial class EmailAddressOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailAddressOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmailAddress.Meta.ObjectType, EmailAddress.Meta.OnDerive); 

		public EmailAddressOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailAddressOnDeriveMethodInvocation;
			}
		}
	}public partial class WebAddressOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebAddressOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WebAddress.Meta.ObjectType, WebAddress.Meta.OnDerive); 

		public WebAddressOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebAddressOnDeriveMethodInvocation;
			}
		}
	}public partial class PostalAddressOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalAddressOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PostalAddress.Meta.ObjectType, PostalAddress.Meta.OnDerive); 

		public PostalAddressOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalAddressOnDeriveMethodInvocation;
			}
		}
	}public partial class TelecommunicationsNumberOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TelecommunicationsNumberOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TelecommunicationsNumber.Meta.ObjectType, TelecommunicationsNumber.Meta.OnDerive); 

		public TelecommunicationsNumberOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TelecommunicationsNumberOnDeriveMethodInvocation;
			}
		}
	}public partial class BarrelOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BarrelOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Barrel.Meta.ObjectType, Barrel.Meta.OnDerive); 

		public BarrelOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BarrelOnDeriveMethodInvocation;
			}
		}
	}public partial class BinOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BinOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Bin.Meta.ObjectType, Bin.Meta.OnDerive); 

		public BinOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BinOnDeriveMethodInvocation;
			}
		}
	}public partial class RoomOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoomOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Room.Meta.ObjectType, Room.Meta.OnDerive); 

		public RoomOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoomOnDeriveMethodInvocation;
			}
		}
	}public partial class ShelfOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShelfOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Shelf.Meta.ObjectType, Shelf.Meta.OnDerive); 

		public ShelfOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShelfOnDeriveMethodInvocation;
			}
		}
	}public partial class CityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(City.Meta.ObjectType, City.Meta.OnDerive); 

		public CityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CityOnDeriveMethodInvocation;
			}
		}
	}public partial class PostalCodeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalCodeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PostalCode.Meta.ObjectType, PostalCode.Meta.OnDerive); 

		public PostalCodeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalCodeOnDeriveMethodInvocation;
			}
		}
	}public partial class ActivityUsageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityUsageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ActivityUsage.Meta.ObjectType, ActivityUsage.Meta.OnDerive); 

		public ActivityUsageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityUsageOnDeriveMethodInvocation;
			}
		}
	}public partial class TimePeriodUsageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimePeriodUsageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimePeriodUsage.Meta.ObjectType, TimePeriodUsage.Meta.OnDerive); 

		public TimePeriodUsageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimePeriodUsageOnDeriveMethodInvocation;
			}
		}
	}public partial class VolumeUsageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VolumeUsageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VolumeUsage.Meta.ObjectType, VolumeUsage.Meta.OnDerive); 

		public VolumeUsageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VolumeUsageOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomEngagementItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomEngagementItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomEngagementItem.Meta.ObjectType, CustomEngagementItem.Meta.OnDerive); 

		public CustomEngagementItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomEngagementItemOnDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOrderItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOrderItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableOrderItem.Meta.ObjectType, DeliverableOrderItem.Meta.OnDerive); 

		public DeliverableOrderItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOrderItemOnDeriveMethodInvocation;
			}
		}
	}public partial class GoodOrderItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOrderItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GoodOrderItem.Meta.ObjectType, GoodOrderItem.Meta.OnDerive); 

		public GoodOrderItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOrderItemOnDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalPlacementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalPlacementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalPlacement.Meta.ObjectType, ProfessionalPlacement.Meta.OnDerive); 

		public ProfessionalPlacementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalPlacementOnDeriveMethodInvocation;
			}
		}
	}public partial class StandardServiceOrderItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StandardServiceOrderItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StandardServiceOrderItem.Meta.ObjectType, StandardServiceOrderItem.Meta.OnDerive); 

		public StandardServiceOrderItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StandardServiceOrderItemOnDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedLaborCostOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedLaborCostOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedLaborCost.Meta.ObjectType, EstimatedLaborCost.Meta.OnDerive); 

		public EstimatedLaborCostOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedLaborCostOnDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedMaterialCostOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedMaterialCostOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedMaterialCost.Meta.ObjectType, EstimatedMaterialCost.Meta.OnDerive); 

		public EstimatedMaterialCostOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedMaterialCostOnDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedOtherCostOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedOtherCostOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedOtherCost.Meta.ObjectType, EstimatedOtherCost.Meta.OnDerive); 

		public EstimatedOtherCostOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedOtherCostOnDeriveMethodInvocation;
			}
		}
	}public partial class BuildingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BuildingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Building.Meta.ObjectType, Building.Meta.OnDerive); 

		public BuildingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BuildingOnDeriveMethodInvocation;
			}
		}
	}public partial class FloorOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FloorOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Floor.Meta.ObjectType, Floor.Meta.OnDerive); 

		public FloorOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FloorOnDeriveMethodInvocation;
			}
		}
	}public partial class OfficeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OfficeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Office.Meta.ObjectType, Office.Meta.OnDerive); 

		public OfficeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OfficeOnDeriveMethodInvocation;
			}
		}
	}public partial class PlantOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PlantOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Plant.Meta.ObjectType, Plant.Meta.OnDerive); 

		public PlantOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlantOnDeriveMethodInvocation;
			}
		}
	}public partial class WarehouseOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WarehouseOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Warehouse.Meta.ObjectType, Warehouse.Meta.OnDerive); 

		public WarehouseOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WarehouseOnDeriveMethodInvocation;
			}
		}
	}public partial class BankAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BankAccount.Meta.ObjectType, BankAccount.Meta.OnDerive); 

		public BankAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CreditCard.Meta.ObjectType, CreditCard.Meta.OnDerive); 

		public CreditCardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardOnDeriveMethodInvocation;
			}
		}
	}public partial class InvestmentAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvestmentAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvestmentAccount.Meta.ObjectType, InvestmentAccount.Meta.OnDerive); 

		public InvestmentAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvestmentAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class OwnBankAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnBankAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OwnBankAccount.Meta.ObjectType, OwnBankAccount.Meta.OnDerive); 

		public OwnBankAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnBankAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class OwnCreditCardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnCreditCardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OwnCreditCard.Meta.ObjectType, OwnCreditCard.Meta.OnDerive); 

		public OwnCreditCardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnCreditCardOnDeriveMethodInvocation;
			}
		}
	}public partial class AccountAdjustmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountAdjustmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountAdjustment.Meta.ObjectType, AccountAdjustment.Meta.OnDerive); 

		public AccountAdjustmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountAdjustmentOnDeriveMethodInvocation;
			}
		}
	}public partial class DepositOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepositOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deposit.Meta.ObjectType, Deposit.Meta.OnDerive); 

		public DepositOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepositOnDeriveMethodInvocation;
			}
		}
	}public partial class FinancialAccountAdjustmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialAccountAdjustmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FinancialAccountAdjustment.Meta.ObjectType, FinancialAccountAdjustment.Meta.OnDerive); 

		public FinancialAccountAdjustmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialAccountAdjustmentOnDeriveMethodInvocation;
			}
		}
	}public partial class WithdrawalOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WithdrawalOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Withdrawal.Meta.ObjectType, Withdrawal.Meta.OnDerive); 

		public WithdrawalOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WithdrawalOnDeriveMethodInvocation;
			}
		}
	}public partial class EquipmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EquipmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Equipment.Meta.ObjectType, Equipment.Meta.OnDerive); 

		public EquipmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EquipmentOnDeriveMethodInvocation;
			}
		}
	}public partial class PropertyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PropertyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Property.Meta.ObjectType, Property.Meta.OnDerive); 

		public PropertyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PropertyOnDeriveMethodInvocation;
			}
		}
	}public partial class VehicleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VehicleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Vehicle.Meta.ObjectType, Vehicle.Meta.OnDerive); 

		public VehicleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VehicleOnDeriveMethodInvocation;
			}
		}
	}public partial class RegionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RegionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Region.Meta.ObjectType, Region.Meta.OnDerive); 

		public RegionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RegionOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesTerritoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesTerritoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesTerritory.Meta.ObjectType, SalesTerritory.Meta.OnDerive); 

		public SalesTerritoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesTerritoryOnDeriveMethodInvocation;
			}
		}
	}public partial class ServiceTerritoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceTerritoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceTerritory.Meta.ObjectType, ServiceTerritory.Meta.OnDerive); 

		public ServiceTerritoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceTerritoryOnDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingConfigurationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingConfigurationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturingConfiguration.Meta.ObjectType, ManufacturingConfiguration.Meta.OnDerive); 

		public ManufacturingConfigurationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingConfigurationOnDeriveMethodInvocation;
			}
		}
	}public partial class ServiceConfigurationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceConfigurationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceConfiguration.Meta.ObjectType, ServiceConfiguration.Meta.OnDerive); 

		public ServiceConfigurationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceConfigurationOnDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Currency.Meta.ObjectType, Currency.Meta.OnDerive); 

		public CurrencyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnDeriveMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DiscountAdjustment.Meta.ObjectType, DiscountAdjustment.Meta.OnDerive); 

		public DiscountAdjustmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentOnDeriveMethodInvocation;
			}
		}
	}public partial class FeeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FeeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Fee.Meta.ObjectType, Fee.Meta.OnDerive); 

		public FeeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FeeOnDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingChargeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingChargeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShippingAndHandlingCharge.Meta.ObjectType, ShippingAndHandlingCharge.Meta.OnDerive); 

		public ShippingAndHandlingChargeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingChargeOnDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeAdjustmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeAdjustmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SurchargeAdjustment.Meta.ObjectType, SurchargeAdjustment.Meta.OnDerive); 

		public SurchargeAdjustmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeAdjustmentOnDeriveMethodInvocation;
			}
		}
	}public partial class FinishedGoodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinishedGoodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FinishedGood.Meta.ObjectType, FinishedGood.Meta.OnDerive); 

		public FinishedGoodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinishedGoodOnDeriveMethodInvocation;
			}
		}
	}public partial class RawMaterialOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RawMaterialOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RawMaterial.Meta.ObjectType, RawMaterial.Meta.OnDerive); 

		public RawMaterialOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RawMaterialOnDeriveMethodInvocation;
			}
		}
	}public partial class SubAssemblyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAssemblyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubAssembly.Meta.ObjectType, SubAssembly.Meta.OnDerive); 

		public SubAssemblyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAssemblyOnDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringBomOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringBomOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringBom.Meta.ObjectType, EngineeringBom.Meta.OnDerive); 

		public EngineeringBomOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringBomOnDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingBomOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingBomOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturingBom.Meta.ObjectType, ManufacturingBom.Meta.OnDerive); 

		public ManufacturingBomOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingBomOnDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisation.Meta.ObjectType, InternalOrganisation.Meta.OnDerive); 

		public InternalOrganisationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.OnDerive); 

		public OrganisationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnDeriveMethodInvocation;
			}
		}
	}public partial class IndustryClassificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IndustryClassificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(IndustryClassification.Meta.ObjectType, IndustryClassification.Meta.OnDerive); 

		public IndustryClassificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IndustryClassificationOnDeriveMethodInvocation;
			}
		}
	}public partial class ClientRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClientRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ClientRelationship.Meta.ObjectType, ClientRelationship.Meta.OnDerive); 

		public ClientRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRelationship.Meta.ObjectType, CustomerRelationship.Meta.OnDerive); 

		public CustomerRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class DistributionChannelRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DistributionChannelRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DistributionChannelRelationship.Meta.ObjectType, DistributionChannelRelationship.Meta.OnDerive); 

		public DistributionChannelRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DistributionChannelRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Employment.Meta.ObjectType, Employment.Meta.OnDerive); 

		public EmploymentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationContactRelationship.Meta.ObjectType, OrganisationContactRelationship.Meta.OnDerive); 

		public OrganisationContactRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationRollUpOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRollUpOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationRollUp.Meta.ObjectType, OrganisationRollUp.Meta.OnDerive); 

		public OrganisationRollUpOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRollUpOnDeriveMethodInvocation;
			}
		}
	}public partial class PartnershipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartnershipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Partnership.Meta.ObjectType, Partnership.Meta.OnDerive); 

		public PartnershipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartnershipOnDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalServicesRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalServicesRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalServicesRelationship.Meta.ObjectType, ProfessionalServicesRelationship.Meta.OnDerive); 

		public ProfessionalServicesRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalServicesRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRelationship.Meta.ObjectType, SalesRepRelationship.Meta.OnDerive); 

		public SalesRepRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubContractorRelationship.Meta.ObjectType, SubContractorRelationship.Meta.OnDerive); 

		public SubContractorRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class SupplierRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SupplierRelationship.Meta.ObjectType, SupplierRelationship.Meta.OnDerive); 

		public SupplierRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class ProspectRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProspectRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProspectRelationship.Meta.ObjectType, ProspectRelationship.Meta.OnDerive); 

		public ProspectRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProspectRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Disbursement.Meta.ObjectType, Disbursement.Meta.OnDerive); 

		public DisbursementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementOnDeriveMethodInvocation;
			}
		}
	}public partial class PayCheckOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayCheckOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayCheck.Meta.ObjectType, PayCheck.Meta.OnDerive); 

		public PayCheckOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayCheckOnDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Receipt.Meta.ObjectType, Receipt.Meta.OnDerive); 

		public ReceiptOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptOnDeriveMethodInvocation;
			}
		}
	}public partial class CashOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CashOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Cash.Meta.ObjectType, Cash.Meta.OnDerive); 

		public CashOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CashOnDeriveMethodInvocation;
			}
		}
	}public partial class BasePriceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BasePrice.Meta.ObjectType, BasePrice.Meta.OnDerive); 

		public BasePriceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceOnDeriveMethodInvocation;
			}
		}
	}public partial class DiscountComponentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountComponentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DiscountComponent.Meta.ObjectType, DiscountComponent.Meta.OnDerive); 

		public DiscountComponentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountComponentOnDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturerSuggestedRetailPriceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturerSuggestedRetailPriceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturerSuggestedRetailPrice.Meta.ObjectType, ManufacturerSuggestedRetailPrice.Meta.OnDerive); 

		public ManufacturerSuggestedRetailPriceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturerSuggestedRetailPriceOnDeriveMethodInvocation;
			}
		}
	}public partial class OneTimeChargeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneTimeChargeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OneTimeCharge.Meta.ObjectType, OneTimeCharge.Meta.OnDerive); 

		public OneTimeChargeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneTimeChargeOnDeriveMethodInvocation;
			}
		}
	}public partial class RecurringChargeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RecurringChargeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RecurringCharge.Meta.ObjectType, RecurringCharge.Meta.OnDerive); 

		public RecurringChargeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RecurringChargeOnDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeComponentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeComponentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SurchargeComponent.Meta.ObjectType, SurchargeComponent.Meta.OnDerive); 

		public SurchargeComponentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeComponentOnDeriveMethodInvocation;
			}
		}
	}public partial class UtilizationChargeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UtilizationChargeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UtilizationCharge.Meta.ObjectType, UtilizationCharge.Meta.OnDerive); 

		public UtilizationChargeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UtilizationChargeOnDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableBasedServiceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableBasedServiceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableBasedService.Meta.ObjectType, DeliverableBasedService.Meta.OnDerive); 

		public DeliverableBasedServiceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableBasedServiceOnDeriveMethodInvocation;
			}
		}
	}public partial class TimeAndMaterialsServiceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeAndMaterialsServiceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimeAndMaterialsService.Meta.ObjectType, TimeAndMaterialsService.Meta.OnDerive); 

		public TimeAndMaterialsServiceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeAndMaterialsServiceOnDeriveMethodInvocation;
			}
		}
	}public partial class GoodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Good.Meta.ObjectType, Good.Meta.OnDerive); 

		public GoodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOnDeriveMethodInvocation;
			}
		}
	}public partial class MarketingPackageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingPackageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MarketingPackage.Meta.ObjectType, MarketingPackage.Meta.OnDerive); 

		public MarketingPackageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingPackageOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductConfigurationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductConfigurationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductConfiguration.Meta.ObjectType, ProductConfiguration.Meta.OnDerive); 

		public ProductConfigurationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductConfigurationOnDeriveMethodInvocation;
			}
		}
	}public partial class DimensionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DimensionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Dimension.Meta.ObjectType, Dimension.Meta.OnDerive); 

		public DimensionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DimensionOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductQuoteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductQuote.Meta.ObjectType, ProductQuote.Meta.OnDerive); 

		public ProductQuoteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteOnDeriveMethodInvocation;
			}
		}
	}public partial class ProposalOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Proposal.Meta.ObjectType, Proposal.Meta.OnDerive); 

		public ProposalOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalOnDeriveMethodInvocation;
			}
		}
	}public partial class StatementOfWorkOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StatementOfWork.Meta.ObjectType, StatementOfWork.Meta.OnDerive); 

		public StatementOfWorkOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestForInformationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestForInformation.Meta.ObjectType, RequestForInformation.Meta.OnDerive); 

		public RequestForInformationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestForProposalOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestForProposal.Meta.ObjectType, RequestForProposal.Meta.OnDerive); 

		public RequestForProposalOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestForQuoteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestForQuote.Meta.ObjectType, RequestForQuote.Meta.OnDerive); 

		public RequestForQuoteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteOnDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTurnoverOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTurnoverOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableTurnover.Meta.ObjectType, DeliverableTurnover.Meta.OnDerive); 

		public DeliverableTurnoverOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTurnoverOnDeriveMethodInvocation;
			}
		}
	}public partial class ExpenseEntryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExpenseEntryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ExpenseEntry.Meta.ObjectType, ExpenseEntry.Meta.OnDerive); 

		public ExpenseEntryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExpenseEntryOnDeriveMethodInvocation;
			}
		}
	}public partial class MaterialsUsageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaterialsUsageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MaterialsUsage.Meta.ObjectType, MaterialsUsage.Meta.OnDerive); 

		public MaterialsUsageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaterialsUsageOnDeriveMethodInvocation;
			}
		}
	}public partial class TimeEntryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeEntryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimeEntry.Meta.ObjectType, TimeEntry.Meta.OnDerive); 

		public TimeEntryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeEntryOnDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.OnDerive); 

		public AccessControlOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Language.Meta.ObjectType, Language.Meta.OnDerive); 

		public LanguageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Locale.Meta.ObjectType, Locale.Meta.OnDerive); 

		public LocaleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LocalisedText.Meta.ObjectType, LocalisedText.Meta.OnDerive); 

		public LocalisedTextOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.OnDerive); 

		public MediaOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaType.Meta.ObjectType, MediaType.Meta.OnDerive); 

		public MediaTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.OnDerive); 

		public PermissionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnDeriveMethodInvocation;
			}
		}
	}public partial class PrintQueueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PrintQueueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PrintQueue.Meta.ObjectType, PrintQueue.Meta.OnDerive); 

		public PrintQueueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PrintQueueOnDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Role.Meta.ObjectType, Role.Meta.OnDerive); 

		public RoleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Singleton.Meta.ObjectType, Singleton.Meta.OnDerive); 

		public SingletonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UserGroup.Meta.ObjectType, UserGroup.Meta.OnDerive); 

		public UserGroupOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionDetailOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionDetailOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionDetail.Meta.ObjectType, AccountingTransactionDetail.Meta.OnDerive); 

		public AccountingTransactionDetailOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionDetailOnDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionNumberOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionNumberOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionNumber.Meta.ObjectType, AccountingTransactionNumber.Meta.OnDerive); 

		public AccountingTransactionNumberOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionNumberOnDeriveMethodInvocation;
			}
		}
	}public partial class AddendumOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AddendumOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Addendum.Meta.ObjectType, Addendum.Meta.OnDerive); 

		public AddendumOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AddendumOnDeriveMethodInvocation;
			}
		}
	}public partial class AmountDueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmountDueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AmountDue.Meta.ObjectType, AmountDue.Meta.OnDerive); 

		public AmountDueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmountDueOnDeriveMethodInvocation;
			}
		}
	}public partial class BankOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Bank.Meta.ObjectType, Bank.Meta.OnDerive); 

		public BankOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankOnDeriveMethodInvocation;
			}
		}
	}public partial class BenefitOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BenefitOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Benefit.Meta.ObjectType, Benefit.Meta.OnDerive); 

		public BenefitOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BenefitOnDeriveMethodInvocation;
			}
		}
	}public partial class BillingAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillingAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BillingAccount.Meta.ObjectType, BillingAccount.Meta.OnDerive); 

		public BillingAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillingAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class BrandOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BrandOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Brand.Meta.ObjectType, Brand.Meta.OnDerive); 

		public BrandOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BrandOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetItem.Meta.ObjectType, BudgetItem.Meta.OnDerive); 

		public BudgetItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetItemOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetReviewOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetReviewOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetReview.Meta.ObjectType, BudgetReview.Meta.OnDerive); 

		public BudgetReviewOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetReviewOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetRevision.Meta.ObjectType, BudgetRevision.Meta.OnDerive); 

		public BudgetRevisionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionImpactOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionImpactOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetRevisionImpact.Meta.ObjectType, BudgetRevisionImpact.Meta.OnDerive); 

		public BudgetRevisionImpactOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionImpactOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetStatus.Meta.ObjectType, BudgetStatus.Meta.OnDerive); 

		public BudgetStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class CarrierOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CarrierOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Carrier.Meta.ObjectType, Carrier.Meta.OnDerive); 

		public CarrierOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CarrierOnDeriveMethodInvocation;
			}
		}
	}public partial class CaseStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CaseStatus.Meta.ObjectType, CaseStatus.Meta.OnDerive); 

		public CaseStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class ChartOfAccountsOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ChartOfAccountsOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ChartOfAccounts.Meta.ObjectType, ChartOfAccounts.Meta.OnDerive); 

		public ChartOfAccountsOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ChartOfAccountsOnDeriveMethodInvocation;
			}
		}
	}public partial class CitizenshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CitizenshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Citizenship.Meta.ObjectType, Citizenship.Meta.OnDerive); 

		public CitizenshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CitizenshipOnDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventStatus.Meta.ObjectType, CommunicationEventStatus.Meta.OnDerive); 

		public CommunicationEventStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostCenter.Meta.ObjectType, CostCenter.Meta.OnDerive); 

		public CostCenterOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterOnDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardCompanyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardCompanyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CreditCardCompany.Meta.ObjectType, CreditCardCompany.Meta.OnDerive); 

		public CreditCardCompanyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardCompanyOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturnStatus.Meta.ObjectType, CustomerReturnStatus.Meta.OnDerive); 

		public CustomerReturnStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipmentStatus.Meta.ObjectType, CustomerShipmentStatus.Meta.OnDerive); 

		public CustomerShipmentStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class DeductionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deduction.Meta.ObjectType, Deduction.Meta.OnDerive); 

		public DeductionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionOnDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deliverable.Meta.ObjectType, Deliverable.Meta.OnDerive); 

		public DeliverableOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOnDeriveMethodInvocation;
			}
		}
	}public partial class DeploymentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeploymentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deployment.Meta.ObjectType, Deployment.Meta.OnDerive); 

		public DeploymentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeploymentOnDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationMethodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationMethodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DepreciationMethod.Meta.ObjectType, DepreciationMethod.Meta.OnDerive); 

		public DepreciationMethodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationMethodOnDeriveMethodInvocation;
			}
		}
	}public partial class DesiredProductFeatureOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DesiredProductFeatureOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DesiredProductFeature.Meta.ObjectType, DesiredProductFeature.Meta.OnDerive); 

		public DesiredProductFeatureOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DesiredProductFeatureOnDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DropShipmentStatus.Meta.ObjectType, DropShipmentStatus.Meta.OnDerive); 

		public DropShipmentStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class EmailTemplateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailTemplateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmailTemplate.Meta.ObjectType, EmailTemplate.Meta.OnDerive); 

		public EmailTemplateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailTemplateOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplication.Meta.ObjectType, EmploymentApplication.Meta.OnDerive); 

		public EmploymentApplicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationOnDeriveMethodInvocation;
			}
		}
	}public partial class EngagementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Engagement.Meta.ObjectType, Engagement.Meta.OnDerive); 

		public EngagementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementOnDeriveMethodInvocation;
			}
		}
	}public partial class EngagementRateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementRateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngagementRate.Meta.ObjectType, EngagementRate.Meta.OnDerive); 

		public EngagementRateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementRateOnDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChangeStatus.Meta.ObjectType, EngineeringChangeStatus.Meta.OnDerive); 

		public EngineeringChangeStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccount.Meta.ObjectType, GeneralLedgerAccount.Meta.OnDerive); 

		public GeneralLedgerAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountGroupOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountGroupOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccountGroup.Meta.ObjectType, GeneralLedgerAccountGroup.Meta.OnDerive); 

		public GeneralLedgerAccountGroupOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountGroupOnDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccountType.Meta.ObjectType, GeneralLedgerAccountType.Meta.OnDerive); 

		public GeneralLedgerAccountTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class GlBudgetAllocationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GlBudgetAllocationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GlBudgetAllocation.Meta.ObjectType, GlBudgetAllocation.Meta.OnDerive); 

		public GlBudgetAllocationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GlBudgetAllocationOnDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationAccountingPreferenceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationAccountingPreferenceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationAccountingPreference.Meta.ObjectType, InternalOrganisationAccountingPreference.Meta.OnDerive); 

		public InternalOrganisationAccountingPreferenceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationAccountingPreferenceOnDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenue.Meta.ObjectType, InternalOrganisationRevenue.Meta.OnDerive); 

		public InternalOrganisationRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenueHistory.Meta.ObjectType, InternalOrganisationRevenueHistory.Meta.OnDerive); 

		public InternalOrganisationRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemVarianceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemVarianceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InventoryItemVariance.Meta.ObjectType, InventoryItemVariance.Meta.OnDerive); 

		public InventoryItemVarianceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemVarianceOnDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceVatRateItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceVatRateItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceVatRateItem.Meta.ObjectType, InvoiceVatRateItem.Meta.OnDerive); 

		public InvoiceVatRateItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceVatRateItemOnDeriveMethodInvocation;
			}
		}
	}public partial class ItemIssuanceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ItemIssuance.Meta.ObjectType, ItemIssuance.Meta.OnDerive); 

		public ItemIssuanceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceOnDeriveMethodInvocation;
			}
		}
	}public partial class JournalOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Journal.Meta.ObjectType, Journal.Meta.OnDerive); 

		public JournalOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalOnDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryDetailOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryDetailOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntryDetail.Meta.ObjectType, JournalEntryDetail.Meta.OnDerive); 

		public JournalEntryDetailOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryDetailOnDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryNumberOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryNumberOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntryNumber.Meta.ObjectType, JournalEntryNumber.Meta.OnDerive); 

		public JournalEntryNumberOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryNumberOnDeriveMethodInvocation;
			}
		}
	}public partial class LegalFormOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalFormOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LegalForm.Meta.ObjectType, LegalForm.Meta.OnDerive); 

		public LegalFormOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalFormOnDeriveMethodInvocation;
			}
		}
	}public partial class LotOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LotOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Lot.Meta.ObjectType, Lot.Meta.OnDerive); 

		public LotOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LotOnDeriveMethodInvocation;
			}
		}
	}public partial class NeededSkillOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NeededSkillOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NeededSkill.Meta.ObjectType, NeededSkill.Meta.OnDerive); 

		public NeededSkillOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NeededSkillOnDeriveMethodInvocation;
			}
		}
	}public partial class NewsItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NewsItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NewsItem.Meta.ObjectType, NewsItem.Meta.OnDerive); 

		public NewsItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NewsItemOnDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItemStatus.Meta.ObjectType, NonSerializedInventoryItemStatus.Meta.OnDerive); 

		public NonSerializedInventoryItemStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderKindOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderKindOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderKind.Meta.ObjectType, OrderKind.Meta.OnDerive); 

		public OrderKindOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderKindOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderQuantityBreakOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderQuantityBreakOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderQuantityBreak.Meta.ObjectType, OrderQuantityBreak.Meta.OnDerive); 

		public OrderQuantityBreakOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderQuantityBreakOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderRequirementCommitmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderRequirementCommitmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderRequirementCommitment.Meta.ObjectType, OrderRequirementCommitment.Meta.OnDerive); 

		public OrderRequirementCommitmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderRequirementCommitmentOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderTerm.Meta.ObjectType, OrderTerm.Meta.OnDerive); 

		public OrderTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderTermOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderValueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderValueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderValue.Meta.ObjectType, OrderValue.Meta.OnDerive); 

		public OrderValueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderValueOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactKindOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactKindOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationContactKind.Meta.ObjectType, OrganisationContactKind.Meta.OnDerive); 

		public OrganisationContactKindOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactKindOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationGlAccount.Meta.ObjectType, OrganisationGlAccount.Meta.OnDerive); 

		public OrganisationGlAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountBalanceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountBalanceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationGlAccountBalance.Meta.ObjectType, OrganisationGlAccountBalance.Meta.OnDerive); 

		public OrganisationGlAccountBalanceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountBalanceOnDeriveMethodInvocation;
			}
		}
	}public partial class PackageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Package.Meta.ObjectType, Package.Meta.OnDerive); 

		public PackageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageOnDeriveMethodInvocation;
			}
		}
	}public partial class PackageQuantityBreakOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageQuantityBreakOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackageQuantityBreak.Meta.ObjectType, PackageQuantityBreak.Meta.OnDerive); 

		public PackageQuantityBreakOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageQuantityBreakOnDeriveMethodInvocation;
			}
		}
	}public partial class PackageRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenue.Meta.ObjectType, PackageRevenue.Meta.OnDerive); 

		public PackageRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class PackageRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenueHistory.Meta.ObjectType, PackageRevenueHistory.Meta.OnDerive); 

		public PackageRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class PackagingContentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingContentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackagingContent.Meta.ObjectType, PackagingContent.Meta.OnDerive); 

		public PackagingContentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingContentOnDeriveMethodInvocation;
			}
		}
	}public partial class PartBillOfMaterialSubstituteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartBillOfMaterialSubstituteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartBillOfMaterialSubstitute.Meta.ObjectType, PartBillOfMaterialSubstitute.Meta.OnDerive); 

		public PartBillOfMaterialSubstituteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartBillOfMaterialSubstituteOnDeriveMethodInvocation;
			}
		}
	}public partial class PartRevisionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartRevisionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartRevision.Meta.ObjectType, PartRevision.Meta.OnDerive); 

		public PartRevisionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartRevisionOnDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartSpecificationStatus.Meta.ObjectType, PartSpecificationStatus.Meta.OnDerive); 

		public PartSpecificationStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class PartSubstituteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSubstituteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartSubstitute.Meta.ObjectType, PartSubstitute.Meta.OnDerive); 

		public PartSubstituteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSubstituteOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyBenefitOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyBenefitOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyBenefit.Meta.ObjectType, PartyBenefit.Meta.OnDerive); 

		public PartyBenefitOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyBenefitOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyContactMechanismOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyContactMechanismOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyContactMechanism.Meta.ObjectType, PartyContactMechanism.Meta.OnDerive); 

		public PartyContactMechanismOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyContactMechanismOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyFixedAssetAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyFixedAssetAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyFixedAssetAssignment.Meta.ObjectType, PartyFixedAssetAssignment.Meta.OnDerive); 

		public PartyFixedAssetAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyFixedAssetAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenue.Meta.ObjectType, PartyPackageRevenue.Meta.OnDerive); 

		public PartyPackageRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenueHistory.Meta.ObjectType, PartyPackageRevenueHistory.Meta.OnDerive); 

		public PartyPackageRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenue.Meta.ObjectType, PartyProductCategoryRevenue.Meta.OnDerive); 

		public PartyProductCategoryRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenueHistory.Meta.ObjectType, PartyProductCategoryRevenueHistory.Meta.OnDerive); 

		public PartyProductCategoryRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenue.Meta.ObjectType, PartyProductRevenue.Meta.OnDerive); 

		public PartyProductRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenueHistory.Meta.ObjectType, PartyProductRevenueHistory.Meta.OnDerive); 

		public PartyProductRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenue.Meta.ObjectType, PartyRevenue.Meta.OnDerive); 

		public PartyRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenueHistory.Meta.ObjectType, PartyRevenueHistory.Meta.OnDerive); 

		public PartyRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class PartySkillOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartySkillOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartySkill.Meta.ObjectType, PartySkill.Meta.OnDerive); 

		public PartySkillOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartySkillOnDeriveMethodInvocation;
			}
		}
	}public partial class PassportOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PassportOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Passport.Meta.ObjectType, Passport.Meta.OnDerive); 

		public PassportOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PassportOnDeriveMethodInvocation;
			}
		}
	}public partial class PayGradeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayGradeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayGrade.Meta.ObjectType, PayGrade.Meta.OnDerive); 

		public PayGradeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayGradeOnDeriveMethodInvocation;
			}
		}
	}public partial class PayHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayHistory.Meta.ObjectType, PayHistory.Meta.OnDerive); 

		public PayHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class PaymentApplicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentApplicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PaymentApplication.Meta.ObjectType, PaymentApplication.Meta.OnDerive); 

		public PaymentApplicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentApplicationOnDeriveMethodInvocation;
			}
		}
	}public partial class PaymentBudgetAllocationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentBudgetAllocationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PaymentBudgetAllocation.Meta.ObjectType, PaymentBudgetAllocation.Meta.OnDerive); 

		public PaymentBudgetAllocationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentBudgetAllocationOnDeriveMethodInvocation;
			}
		}
	}public partial class PayrollPreferenceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayrollPreferenceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayrollPreference.Meta.ObjectType, PayrollPreference.Meta.OnDerive); 

		public PayrollPreferenceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayrollPreferenceOnDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceNoteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceNoteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceNote.Meta.ObjectType, PerformanceNote.Meta.OnDerive); 

		public PerformanceNoteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceNoteOnDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReview.Meta.ObjectType, PerformanceReview.Meta.OnDerive); 

		public PerformanceReviewOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewOnDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReviewItem.Meta.ObjectType, PerformanceReviewItem.Meta.OnDerive); 

		public PerformanceReviewItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonTrainingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonTrainingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PersonTraining.Meta.ObjectType, PersonTraining.Meta.OnDerive); 

		public PersonTrainingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonTrainingOnDeriveMethodInvocation;
			}
		}
	}public partial class PickListItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickListItem.Meta.ObjectType, PickListItem.Meta.OnDerive); 

		public PickListItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemOnDeriveMethodInvocation;
			}
		}
	}public partial class PickListStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickListStatus.Meta.ObjectType, PickListStatus.Meta.OnDerive); 

		public PickListStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Position.Meta.ObjectType, Position.Meta.OnDerive); 

		public PositionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionFulfillmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionFulfillmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionFulfillment.Meta.ObjectType, PositionFulfillment.Meta.OnDerive); 

		public PositionFulfillmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionFulfillmentOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionReportingStructureOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionReportingStructureOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionReportingStructure.Meta.ObjectType, PositionReportingStructure.Meta.OnDerive); 

		public PositionReportingStructureOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionReportingStructureOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionResponsibilityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionResponsibilityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionResponsibility.Meta.ObjectType, PositionResponsibility.Meta.OnDerive); 

		public PositionResponsibilityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionResponsibilityOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionType.Meta.ObjectType, PositionType.Meta.OnDerive); 

		public PositionTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeRateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeRateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionTypeRate.Meta.ObjectType, PositionTypeRate.Meta.OnDerive); 

		public PositionTypeRateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeRateOnDeriveMethodInvocation;
			}
		}
	}public partial class PostalBoundaryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalBoundaryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PostalBoundary.Meta.ObjectType, PostalBoundary.Meta.OnDerive); 

		public PostalBoundaryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalBoundaryOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategory.Meta.ObjectType, ProductCategory.Meta.OnDerive); 

		public ProductCategoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenue.Meta.ObjectType, ProductCategoryRevenue.Meta.OnDerive); 

		public ProductCategoryRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenueHistory.Meta.ObjectType, ProductCategoryRevenueHistory.Meta.OnDerive); 

		public ProductCategoryRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductDeliverySkillRequirementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDeliverySkillRequirementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductDeliverySkillRequirement.Meta.ObjectType, ProductDeliverySkillRequirement.Meta.OnDerive); 

		public ProductDeliverySkillRequirementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDeliverySkillRequirementOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductFeatureApplicabilityRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductFeatureApplicabilityRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductFeatureApplicabilityRelationship.Meta.ObjectType, ProductFeatureApplicabilityRelationship.Meta.OnDerive); 

		public ProductFeatureApplicabilityRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductFeatureApplicabilityRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductPurchasePriceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductPurchasePriceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductPurchasePrice.Meta.ObjectType, ProductPurchasePrice.Meta.OnDerive); 

		public ProductPurchasePriceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductPurchasePriceOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenue.Meta.ObjectType, ProductRevenue.Meta.OnDerive); 

		public ProductRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenueHistory.Meta.ObjectType, ProductRevenueHistory.Meta.OnDerive); 

		public ProductRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalAssignment.Meta.ObjectType, ProfessionalAssignment.Meta.OnDerive); 

		public ProfessionalAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemStatus.Meta.ObjectType, PurchaseInvoiceItemStatus.Meta.OnDerive); 

		public PurchaseInvoiceItemStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceStatus.Meta.ObjectType, PurchaseInvoiceStatus.Meta.OnDerive); 

		public PurchaseInvoiceStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItemStatus.Meta.ObjectType, PurchaseOrderItemStatus.Meta.OnDerive); 

		public PurchaseOrderItemStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderStatus.Meta.ObjectType, PurchaseOrderStatus.Meta.OnDerive); 

		public PurchaseOrderStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturnStatus.Meta.ObjectType, PurchaseReturnStatus.Meta.OnDerive); 

		public PurchaseReturnStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipmentStatus.Meta.ObjectType, PurchaseShipmentStatus.Meta.OnDerive); 

		public PurchaseShipmentStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(QuoteItem.Meta.ObjectType, QuoteItem.Meta.OnDerive); 

		public QuoteItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemOnDeriveMethodInvocation;
			}
		}
	}public partial class QuoteTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(QuoteTerm.Meta.ObjectType, QuoteTerm.Meta.OnDerive); 

		public QuoteTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteTermOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestItem.Meta.ObjectType, RequestItem.Meta.OnDerive); 

		public RequestItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemOnDeriveMethodInvocation;
			}
		}
	}public partial class RequirementBudgetAllocationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementBudgetAllocationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementBudgetAllocation.Meta.ObjectType, RequirementBudgetAllocation.Meta.OnDerive); 

		public RequirementBudgetAllocationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementBudgetAllocationOnDeriveMethodInvocation;
			}
		}
	}public partial class RequirementCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementCommunication.Meta.ObjectType, RequirementCommunication.Meta.OnDerive); 

		public RequirementCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class RequirementStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementStatus.Meta.ObjectType, RequirementStatus.Meta.OnDerive); 

		public RequirementStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class RespondingPartyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RespondingPartyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RespondingParty.Meta.ObjectType, RespondingParty.Meta.OnDerive); 

		public RespondingPartyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RespondingPartyOnDeriveMethodInvocation;
			}
		}
	}public partial class ResponsibilityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResponsibilityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Responsibility.Meta.ObjectType, Responsibility.Meta.OnDerive); 

		public ResponsibilityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResponsibilityOnDeriveMethodInvocation;
			}
		}
	}public partial class ResumeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResumeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Resume.Meta.ObjectType, Resume.Meta.OnDerive); 

		public ResumeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResumeOnDeriveMethodInvocation;
			}
		}
	}public partial class RevenueQuantityBreakOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueQuantityBreakOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RevenueQuantityBreak.Meta.ObjectType, RevenueQuantityBreak.Meta.OnDerive); 

		public RevenueQuantityBreakOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueQuantityBreakOnDeriveMethodInvocation;
			}
		}
	}public partial class RevenueValueBreakOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueValueBreakOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RevenueValueBreak.Meta.ObjectType, RevenueValueBreak.Meta.OnDerive); 

		public RevenueValueBreakOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueValueBreakOnDeriveMethodInvocation;
			}
		}
	}public partial class SalaryStepOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalaryStepOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalaryStep.Meta.ObjectType, SalaryStep.Meta.OnDerive); 

		public SalaryStepOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalaryStepOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenue.Meta.ObjectType, SalesChannelRevenue.Meta.OnDerive); 

		public SalesChannelRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenueHistory.Meta.ObjectType, SalesChannelRevenueHistory.Meta.OnDerive); 

		public SalesChannelRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemStatus.Meta.ObjectType, SalesInvoiceItemStatus.Meta.OnDerive); 

		public SalesInvoiceItemStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceStatus.Meta.ObjectType, SalesInvoiceStatus.Meta.OnDerive); 

		public SalesInvoiceStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItemStatus.Meta.ObjectType, SalesOrderItemStatus.Meta.OnDerive); 

		public SalesOrderItemStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderStatus.Meta.ObjectType, SalesOrderStatus.Meta.OnDerive); 

		public SalesOrderStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepCommissionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepCommissionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepCommission.Meta.ObjectType, SalesRepCommission.Meta.OnDerive); 

		public SalesRepCommissionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepCommissionOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyProductCategoryRevenue.Meta.ObjectType, SalesRepPartyProductCategoryRevenue.Meta.OnDerive); 

		public SalesRepPartyProductCategoryRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyRevenue.Meta.ObjectType, SalesRepPartyRevenue.Meta.OnDerive); 

		public SalesRepPartyRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepProductCategoryRevenue.Meta.ObjectType, SalesRepProductCategoryRevenue.Meta.OnDerive); 

		public SalesRepProductCategoryRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenue.Meta.ObjectType, SalesRepRevenue.Meta.OnDerive); 

		public SalesRepRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenueHistory.Meta.ObjectType, SalesRepRevenueHistory.Meta.OnDerive); 

		public SalesRepRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItemStatus.Meta.ObjectType, SerializedInventoryItemStatus.Meta.OnDerive); 

		public SerializedInventoryItemStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryHeaderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryHeaderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceEntryHeader.Meta.ObjectType, ServiceEntryHeader.Meta.OnDerive); 

		public ServiceEntryHeaderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryHeaderOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentItem.Meta.ObjectType, ShipmentItem.Meta.OnDerive); 

		public ShipmentItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentPackageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentPackageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentPackage.Meta.ObjectType, ShipmentPackage.Meta.OnDerive); 

		public ShipmentPackageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentPackageOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentReceiptOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentReceiptOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentReceipt.Meta.ObjectType, ShipmentReceipt.Meta.OnDerive); 

		public ShipmentReceiptOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentReceiptOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentRouteSegmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentRouteSegmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentRouteSegment.Meta.ObjectType, ShipmentRouteSegment.Meta.OnDerive); 

		public ShipmentRouteSegmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentRouteSegmentOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentValueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentValueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentValue.Meta.ObjectType, ShipmentValue.Meta.OnDerive); 

		public ShipmentValueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentValueOnDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingComponentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingComponentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShippingAndHandlingComponent.Meta.ObjectType, ShippingAndHandlingComponent.Meta.OnDerive); 

		public ShippingAndHandlingComponentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingComponentOnDeriveMethodInvocation;
			}
		}
	}public partial class StoreOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Store.Meta.ObjectType, Store.Meta.OnDerive); 

		public StoreOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreOnDeriveMethodInvocation;
			}
		}
	}public partial class StoreRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenue.Meta.ObjectType, StoreRevenue.Meta.OnDerive); 

		public StoreRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class StoreRevenueHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenueHistory.Meta.ObjectType, StoreRevenueHistory.Meta.OnDerive); 

		public StoreRevenueHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class SupplierOfferingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierOfferingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SupplierOffering.Meta.ObjectType, SupplierOffering.Meta.OnDerive); 

		public SupplierOfferingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierOfferingOnDeriveMethodInvocation;
			}
		}
	}public partial class TrainingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TrainingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Training.Meta.ObjectType, Training.Meta.OnDerive); 

		public TrainingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TrainingOnDeriveMethodInvocation;
			}
		}
	}public partial class TransferStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TransferStatus.Meta.ObjectType, TransferStatus.Meta.OnDerive); 

		public TransferStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureConversionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureConversionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UnitOfMeasureConversion.Meta.ObjectType, UnitOfMeasureConversion.Meta.OnDerive); 

		public UnitOfMeasureConversionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureConversionOnDeriveMethodInvocation;
			}
		}
	}public partial class VatFormOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatFormOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatForm.Meta.ObjectType, VatForm.Meta.OnDerive); 

		public VatFormOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatFormOnDeriveMethodInvocation;
			}
		}
	}public partial class VatRateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRate.Meta.ObjectType, VatRate.Meta.OnDerive); 

		public VatRateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateOnDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatReturnBox.Meta.ObjectType, VatReturnBox.Meta.OnDerive); 

		public VatReturnBoxOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxOnDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatReturnBoxType.Meta.ObjectType, VatReturnBoxType.Meta.OnDerive); 

		public VatReturnBoxTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortAssignment.Meta.ObjectType, WorkEffortAssignment.Meta.OnDerive); 

		public WorkEffortAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentRateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentRateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortAssignmentRate.Meta.ObjectType, WorkEffortAssignmentRate.Meta.OnDerive); 

		public WorkEffortAssignmentRateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentRateOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortFixedAssetAssignment.Meta.ObjectType, WorkEffortFixedAssetAssignment.Meta.OnDerive); 

		public WorkEffortFixedAssetAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetStandardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetStandardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortFixedAssetStandard.Meta.ObjectType, WorkEffortFixedAssetStandard.Meta.OnDerive); 

		public WorkEffortFixedAssetStandardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetStandardOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortGoodStandardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortGoodStandardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortGoodStandard.Meta.ObjectType, WorkEffortGoodStandard.Meta.OnDerive); 

		public WorkEffortGoodStandardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortGoodStandardOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortInventoryAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortInventoryAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortInventoryAssignment.Meta.ObjectType, WorkEffortInventoryAssignment.Meta.OnDerive); 

		public WorkEffortInventoryAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortInventoryAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartStandardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartStandardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPartStandard.Meta.ObjectType, WorkEffortPartStandard.Meta.OnDerive); 

		public WorkEffortPartStandardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartStandardOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartyAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartyAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPartyAssignment.Meta.ObjectType, WorkEffortPartyAssignment.Meta.OnDerive); 

		public WorkEffortPartyAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartyAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortSkillStandardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortSkillStandardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortSkillStandard.Meta.ObjectType, WorkEffortSkillStandard.Meta.OnDerive); 

		public WorkEffortSkillStandardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortSkillStandardOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortStatus.Meta.ObjectType, WorkEffortStatus.Meta.OnDerive); 

		public WorkEffortStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortType.Meta.ObjectType, WorkEffortType.Meta.OnDerive); 

		public WorkEffortTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class ImageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ImageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.OnDerive); 

		public ImageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageOnDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.OnDerive); 

		public LoginOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.OnDerive); 

		public SecurityTokenOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderShipmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderShipment.Meta.ObjectType, OrderShipment.Meta.OnDerive); 

		public OrderShipmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentOnDeriveMethodInvocation;
			}
		}
	}public partial class StringTemplateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StringTemplate.Meta.ObjectType, StringTemplate.Meta.OnDerive); 

		public StringTemplateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetObjectState.Meta.ObjectType, BudgetObjectState.Meta.OnDerive); 

		public BudgetObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class CaseObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CaseObjectState.Meta.ObjectType, CaseObjectState.Meta.OnDerive); 

		public CaseObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventObjectState.Meta.ObjectType, CommunicationEventObjectState.Meta.OnDerive); 

		public CommunicationEventObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturnObjectState.Meta.ObjectType, CustomerReturnObjectState.Meta.OnDerive); 

		public CustomerReturnObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipmentObjectState.Meta.ObjectType, CustomerShipmentObjectState.Meta.OnDerive); 

		public CustomerShipmentObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DropShipmentObjectState.Meta.ObjectType, DropShipmentObjectState.Meta.OnDerive); 

		public DropShipmentObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChangeObjectState.Meta.ObjectType, EngineeringChangeObjectState.Meta.OnDerive); 

		public EngineeringChangeObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItemObjectState.Meta.ObjectType, NonSerializedInventoryItemObjectState.Meta.OnDerive); 

		public NonSerializedInventoryItemObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartSpecificationObjectState.Meta.ObjectType, PartSpecificationObjectState.Meta.OnDerive); 

		public PartSpecificationObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PickListObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickListObjectState.Meta.ObjectType, PickListObjectState.Meta.OnDerive); 

		public PickListObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemObjectState.Meta.ObjectType, PurchaseInvoiceItemObjectState.Meta.OnDerive); 

		public PurchaseInvoiceItemObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceObjectState.Meta.ObjectType, PurchaseInvoiceObjectState.Meta.OnDerive); 

		public PurchaseInvoiceObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItemObjectState.Meta.ObjectType, PurchaseOrderItemObjectState.Meta.OnDerive); 

		public PurchaseOrderItemObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderObjectState.Meta.ObjectType, PurchaseOrderObjectState.Meta.OnDerive); 

		public PurchaseOrderObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturnObjectState.Meta.ObjectType, PurchaseReturnObjectState.Meta.OnDerive); 

		public PurchaseReturnObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipmentObjectState.Meta.ObjectType, PurchaseShipmentObjectState.Meta.OnDerive); 

		public PurchaseShipmentObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class RequirementObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementObjectState.Meta.ObjectType, RequirementObjectState.Meta.OnDerive); 

		public RequirementObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemObjectState.Meta.ObjectType, SalesInvoiceItemObjectState.Meta.OnDerive); 

		public SalesInvoiceItemObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceObjectState.Meta.ObjectType, SalesInvoiceObjectState.Meta.OnDerive); 

		public SalesInvoiceObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItemObjectState.Meta.ObjectType, SalesOrderItemObjectState.Meta.OnDerive); 

		public SalesOrderItemObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderObjectState.Meta.ObjectType, SalesOrderObjectState.Meta.OnDerive); 

		public SalesOrderObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItemObjectState.Meta.ObjectType, SerializedInventoryItemObjectState.Meta.OnDerive); 

		public SerializedInventoryItemObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class TransferObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TransferObjectState.Meta.ObjectType, TransferObjectState.Meta.OnDerive); 

		public TransferObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortObjectState.Meta.ObjectType, WorkEffortObjectState.Meta.OnDerive); 

		public WorkEffortObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Counter.Meta.ObjectType, Counter.Meta.OnDerive); 

		public CounterOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterCategoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterCategoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostCenterCategory.Meta.ObjectType, CostCenterCategory.Meta.OnDerive); 

		public CostCenterCategoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterCategoryOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaContent.Meta.ObjectType, MediaContent.Meta.OnDerive); 

		public MediaContentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnDeriveMethodInvocation;
			}
		}
	}public partial class TransitionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Transition.Meta.ObjectType, Transition.Meta.OnDerive); 

		public TransitionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnDeriveMethodInvocation;
			}
		}
	}public partial class EventOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Event.Meta.ObjectType, Event.Meta.OnDerive); 

		public EventOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventOnDeriveMethodInvocation;
			}
		}
	}public partial class EventRegistrationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventRegistrationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EventRegistration.Meta.ObjectType, EventRegistration.Meta.OnDerive); 

		public EventRegistrationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventRegistrationOnDeriveMethodInvocation;
			}
		}
	}public partial class FiscalYearInvoiceNumberOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FiscalYearInvoiceNumberOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FiscalYearInvoiceNumber.Meta.ObjectType, FiscalYearInvoiceNumber.Meta.OnDerive); 

		public FiscalYearInvoiceNumberOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FiscalYearInvoiceNumberOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderItemBillingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderItemBillingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderItemBilling.Meta.ObjectType, OrderItemBilling.Meta.OnDerive); 

		public OrderItemBillingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderItemBillingOnDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryBillingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryBillingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceEntryBilling.Meta.ObjectType, ServiceEntryBilling.Meta.OnDerive); 

		public ServiceEntryBillingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryBillingOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortBillingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortBillingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortBilling.Meta.ObjectType, WorkEffortBilling.Meta.OnDerive); 

		public WorkEffortBillingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortBillingOnDeriveMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPostDerive : Allors.Meta.Method
	{
		protected ObjectOnPostDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class AccountingTransactionTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionType.Meta.ObjectType, AccountingTransactionType.Meta.OnPostDerive); 

		public AccountingTransactionTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AssetAssignmentStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AssetAssignmentStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AssetAssignmentStatus.Meta.ObjectType, AssetAssignmentStatus.Meta.OnPostDerive); 

		public AssetAssignmentStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AssetAssignmentStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ColourOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ColourOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Colour.Meta.ObjectType, Colour.Meta.OnPostDerive); 

		public ColourOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ColourOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventPurposeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventPurposeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventPurpose.Meta.ObjectType, CommunicationEventPurpose.Meta.OnPostDerive); 

		public CommunicationEventPurposeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventPurposeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ContactMechanismPurposeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismPurposeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ContactMechanismPurpose.Meta.ObjectType, ContactMechanismPurpose.Meta.OnPostDerive); 

		public ContactMechanismPurposeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismPurposeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterSplitMethodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterSplitMethodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostCenterSplitMethod.Meta.ObjectType, CostCenterSplitMethod.Meta.OnPostDerive); 

		public CostCenterSplitMethodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterSplitMethodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CostOfGoodsSoldMethodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostOfGoodsSoldMethodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostOfGoodsSoldMethod.Meta.ObjectType, CostOfGoodsSoldMethod.Meta.OnPostDerive); 

		public CostOfGoodsSoldMethodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostOfGoodsSoldMethodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DebitCreditConstantOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DebitCreditConstantOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DebitCreditConstant.Meta.ObjectType, DebitCreditConstant.Meta.OnPostDerive); 

		public DebitCreditConstantOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DebitCreditConstantOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeductionTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeductionType.Meta.ObjectType, DeductionType.Meta.OnPostDerive); 

		public DeductionTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableType.Meta.ObjectType, DeliverableType.Meta.OnPostDerive); 

		public DeliverableTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DunningTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DunningTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DunningType.Meta.ObjectType, DunningType.Meta.OnPostDerive); 

		public DunningTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DunningTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationSourceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationSourceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplicationSource.Meta.ObjectType, EmploymentApplicationSource.Meta.OnPostDerive); 

		public EmploymentApplicationSourceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationSourceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplicationStatus.Meta.ObjectType, EmploymentApplicationStatus.Meta.OnPostDerive); 

		public EmploymentApplicationStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentTermination.Meta.ObjectType, EmploymentTermination.Meta.OnPostDerive); 

		public EmploymentTerminationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationReasonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationReasonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentTerminationReason.Meta.ObjectType, EmploymentTerminationReason.Meta.OnPostDerive); 

		public EmploymentTerminationReasonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationReasonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EuSalesListTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EuSalesListTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EuSalesListType.Meta.ObjectType, EuSalesListType.Meta.OnPostDerive); 

		public EuSalesListTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EuSalesListTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GenderTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GenderType.Meta.ObjectType, GenderType.Meta.OnPostDerive); 

		public GenderTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class HobbyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HobbyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Hobby.Meta.ObjectType, Hobby.Meta.OnPostDerive); 

		public HobbyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HobbyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemKindOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemKindOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InventoryItemKind.Meta.ObjectType, InventoryItemKind.Meta.OnPostDerive); 

		public InventoryItemKindOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemKindOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceSequenceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceSequenceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceSequence.Meta.ObjectType, InvoiceSequence.Meta.OnPostDerive); 

		public InvoiceSequenceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceSequenceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class JournalTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalType.Meta.ObjectType, JournalType.Meta.OnPostDerive); 

		public JournalTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MaritalStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaritalStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MaritalStatus.Meta.ObjectType, MaritalStatus.Meta.OnPostDerive); 

		public MaritalStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaritalStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ModelOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ModelOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Model.Meta.ObjectType, Model.Meta.OnPostDerive); 

		public ModelOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ModelOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrdinalOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrdinalOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Ordinal.Meta.ObjectType, Ordinal.Meta.OnPostDerive); 

		public OrdinalOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrdinalOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationUnitOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationUnitOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationUnit.Meta.ObjectType, OrganisationUnit.Meta.OnPostDerive); 

		public OrganisationUnitOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationUnitOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyRelationshipStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRelationshipStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyRelationshipStatus.Meta.ObjectType, PartyRelationshipStatus.Meta.OnPostDerive); 

		public PartyRelationshipStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRelationshipStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReviewItemType.Meta.ObjectType, PerformanceReviewItemType.Meta.OnPostDerive); 

		public PerformanceReviewItemTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonalTitleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonalTitleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PersonalTitle.Meta.ObjectType, PersonalTitle.Meta.OnPostDerive); 

		public PersonalTitleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonalTitleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionStatus.Meta.ObjectType, PositionStatus.Meta.OnPostDerive); 

		public PositionStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PriorityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PriorityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Priority.Meta.ObjectType, Priority.Meta.OnPostDerive); 

		public PriorityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PriorityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductQualityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQualityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductQuality.Meta.ObjectType, ProductQuality.Meta.OnPostDerive); 

		public ProductQualityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQualityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemType.Meta.ObjectType, PurchaseInvoiceItemType.Meta.OnPostDerive); 

		public PurchaseInvoiceItemTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceType.Meta.ObjectType, PurchaseInvoiceType.Meta.OnPostDerive); 

		public PurchaseInvoiceTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class QualificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QualificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Qualification.Meta.ObjectType, Qualification.Meta.OnPostDerive); 

		public QualificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QualificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RateTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RateTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RateType.Meta.ObjectType, RateType.Meta.OnPostDerive); 

		public RateTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RateTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RatingTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RatingTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RatingType.Meta.ObjectType, RatingType.Meta.OnPostDerive); 

		public RatingTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RatingTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannel.Meta.ObjectType, SalesChannel.Meta.OnPostDerive); 

		public SalesChannelOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemType.Meta.ObjectType, SalesInvoiceItemType.Meta.OnPostDerive); 

		public SalesInvoiceItemTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceType.Meta.ObjectType, SalesInvoiceType.Meta.OnPostDerive); 

		public SalesInvoiceTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalutationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalutationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Salutation.Meta.ObjectType, Salutation.Meta.OnPostDerive); 

		public SalutationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalutationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ServiceFeatureOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceFeatureOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceFeature.Meta.ObjectType, ServiceFeature.Meta.OnPostDerive); 

		public ServiceFeatureOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceFeatureOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentMethodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentMethodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentMethod.Meta.ObjectType, ShipmentMethod.Meta.OnPostDerive); 

		public ShipmentMethodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentMethodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SizeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SizeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Size.Meta.ObjectType, Size.Meta.OnPostDerive); 

		public SizeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SizeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SkillOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Skill.Meta.ObjectType, Skill.Meta.OnPostDerive); 

		public SkillOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SkillLevelOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillLevelOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SkillLevel.Meta.ObjectType, SkillLevel.Meta.OnPostDerive); 

		public SkillLevelOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillLevelOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SkillRatingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillRatingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SkillRating.Meta.ObjectType, SkillRating.Meta.OnPostDerive); 

		public SkillRatingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillRatingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SoftwareFeatureOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SoftwareFeatureOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SoftwareFeature.Meta.ObjectType, SoftwareFeature.Meta.OnPostDerive); 

		public SoftwareFeatureOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SoftwareFeatureOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TemplatePurposeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TemplatePurposeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TemplatePurpose.Meta.ObjectType, TemplatePurpose.Meta.OnPostDerive); 

		public TemplatePurposeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplatePurposeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TermTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TermTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TermType.Meta.ObjectType, TermType.Meta.OnPostDerive); 

		public TermTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TermTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TimeFrequencyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeFrequencyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimeFrequency.Meta.ObjectType, TimeFrequency.Meta.OnPostDerive); 

		public TimeFrequencyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeFrequencyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UnitOfMeasure.Meta.ObjectType, UnitOfMeasure.Meta.OnPostDerive); 

		public UnitOfMeasureOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VarianceReasonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VarianceReasonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VarianceReason.Meta.ObjectType, VarianceReason.Meta.OnPostDerive); 

		public VarianceReasonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VarianceReasonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatCalculationMethodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatCalculationMethodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatCalculationMethod.Meta.ObjectType, VatCalculationMethod.Meta.OnPostDerive); 

		public VatCalculationMethodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatCalculationMethodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatRatePurchaseKindOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRatePurchaseKindOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRatePurchaseKind.Meta.ObjectType, VatRatePurchaseKind.Meta.OnPostDerive); 

		public VatRatePurchaseKindOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRatePurchaseKindOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatRateUsageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateUsageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRateUsage.Meta.ObjectType, VatRateUsage.Meta.OnPostDerive); 

		public VatRateUsageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateUsageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatRegimeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRegimeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRegime.Meta.ObjectType, VatRegime.Meta.OnPostDerive); 

		public VatRegimeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRegimeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatTariffOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatTariffOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatTariff.Meta.ObjectType, VatTariff.Meta.OnPostDerive); 

		public VatTariffOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatTariffOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeKindOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeKindOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortTypeKind.Meta.ObjectType, WorkEffortTypeKind.Meta.OnPostDerive); 

		public WorkEffortTypeKindOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeKindOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPurposeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPurposeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPurpose.Meta.ObjectType, WorkEffortPurpose.Meta.OnPostDerive); 

		public WorkEffortPurposeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPurposeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BillOfLadingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillOfLadingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BillOfLading.Meta.ObjectType, BillOfLading.Meta.OnPostDerive); 

		public BillOfLadingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillOfLadingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringDocumentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringDocumentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringDocument.Meta.ObjectType, EngineeringDocument.Meta.OnPostDerive); 

		public EngineeringDocumentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringDocumentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ExportDocumentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExportDocumentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ExportDocument.Meta.ObjectType, ExportDocument.Meta.OnPostDerive); 

		public ExportDocumentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExportDocumentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class HazardousMaterialsDocumentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HazardousMaterialsDocumentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(HazardousMaterialsDocument.Meta.ObjectType, HazardousMaterialsDocument.Meta.OnPostDerive); 

		public HazardousMaterialsDocumentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HazardousMaterialsDocumentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ManifestOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManifestOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Manifest.Meta.ObjectType, Manifest.Meta.OnPostDerive); 

		public ManifestOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManifestOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MarketingMaterialOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingMaterialOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MarketingMaterial.Meta.ObjectType, MarketingMaterial.Meta.OnPostDerive); 

		public MarketingMaterialOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingMaterialOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackagingSlipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingSlipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackagingSlip.Meta.ObjectType, PackagingSlip.Meta.OnPostDerive); 

		public PackagingSlipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingSlipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductDrawingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDrawingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductDrawing.Meta.ObjectType, ProductDrawing.Meta.OnPostDerive); 

		public ProductDrawingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDrawingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductModelOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductModelOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductModel.Meta.ObjectType, ProductModel.Meta.OnPostDerive); 

		public ProductModelOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductModelOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaxDocumentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDocumentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TaxDocument.Meta.ObjectType, TaxDocument.Meta.OnPostDerive); 

		public TaxDocumentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDocumentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoice.Meta.ObjectType, PurchaseInvoice.Meta.OnPostDerive); 

		public PurchaseInvoiceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoice.Meta.ObjectType, SalesInvoice.Meta.OnPostDerive); 

		public SalesInvoiceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.OnPostDerive); 

		public PurchaseOrderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.OnPostDerive); 

		public SalesOrderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturn.Meta.ObjectType, CustomerReturn.Meta.OnPostDerive); 

		public CustomerReturnOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.OnPostDerive); 

		public CustomerShipmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DropShipment.Meta.ObjectType, DropShipment.Meta.OnPostDerive); 

		public DropShipmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturn.Meta.ObjectType, PurchaseReturn.Meta.OnPostDerive); 

		public PurchaseReturnOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipment.Meta.ObjectType, PurchaseShipment.Meta.OnPostDerive); 

		public PurchaseShipmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TransferOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Transfer.Meta.ObjectType, Transfer.Meta.OnPostDerive); 

		public TransferOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PickListOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickList.Meta.ObjectType, PickList.Meta.OnPostDerive); 

		public PickListOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccountingPeriodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingPeriod.Meta.ObjectType, AccountingPeriod.Meta.OnPostDerive); 

		public AccountingPeriodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CapitalBudgetOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CapitalBudget.Meta.ObjectType, CapitalBudget.Meta.OnPostDerive); 

		public CapitalBudgetOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OperatingBudgetOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OperatingBudget.Meta.ObjectType, OperatingBudget.Meta.OnPostDerive); 

		public OperatingBudgetOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmailCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmailCommunication.Meta.ObjectType, EmailCommunication.Meta.OnPostDerive); 

		public EmailCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FaceToFaceCommunication.Meta.ObjectType, FaceToFaceCommunication.Meta.OnPostDerive); 

		public FaceToFaceCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FaxCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FaxCommunication.Meta.ObjectType, FaxCommunication.Meta.OnPostDerive); 

		public FaxCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LetterCorrespondence.Meta.ObjectType, LetterCorrespondence.Meta.OnPostDerive); 

		public LetterCorrespondenceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PhoneCommunication.Meta.ObjectType, PhoneCommunication.Meta.OnPostDerive); 

		public PhoneCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WebSiteCommunication.Meta.ObjectType, WebSiteCommunication.Meta.OnPostDerive); 

		public WebSiteCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItem.Meta.ObjectType, NonSerializedInventoryItem.Meta.OnPostDerive); 

		public NonSerializedInventoryItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItem.Meta.ObjectType, SerializedInventoryItem.Meta.OnPostDerive); 

		public SerializedInventoryItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItem.Meta.ObjectType, PurchaseInvoiceItem.Meta.OnPostDerive); 

		public PurchaseInvoiceItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItem.Meta.ObjectType, SalesInvoiceItem.Meta.OnPostDerive); 

		public SalesInvoiceItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.OnPostDerive); 

		public PurchaseOrderItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.OnPostDerive); 

		public SalesOrderItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ConstraintSpecificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ConstraintSpecificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ConstraintSpecification.Meta.ObjectType, ConstraintSpecification.Meta.OnPostDerive); 

		public ConstraintSpecificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ConstraintSpecificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OperatingConditionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingConditionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OperatingCondition.Meta.ObjectType, OperatingCondition.Meta.OnPostDerive); 

		public OperatingConditionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingConditionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceSpecificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceSpecificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceSpecification.Meta.ObjectType, PerformanceSpecification.Meta.OnPostDerive); 

		public PerformanceSpecificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceSpecificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TestingRequirementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TestingRequirementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TestingRequirement.Meta.ObjectType, TestingRequirement.Meta.OnPostDerive); 

		public TestingRequirementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TestingRequirementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ToleranceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ToleranceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Tolerance.Meta.ObjectType, Tolerance.Meta.OnPostDerive); 

		public ToleranceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToleranceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerRequirementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRequirementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRequirement.Meta.ObjectType, CustomerRequirement.Meta.OnPostDerive); 

		public CustomerRequirementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRequirementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InternalRequirementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalRequirementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalRequirement.Meta.ObjectType, InternalRequirement.Meta.OnPostDerive); 

		public InternalRequirementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalRequirementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductRequirementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRequirementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductRequirement.Meta.ObjectType, ProductRequirement.Meta.OnPostDerive); 

		public ProductRequirementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRequirementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProjectRequirementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectRequirementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProjectRequirement.Meta.ObjectType, ProjectRequirement.Meta.OnPostDerive); 

		public ProjectRequirementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectRequirementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ResourceRequirementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResourceRequirementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ResourceRequirement.Meta.ObjectType, ResourceRequirement.Meta.OnPostDerive); 

		public ResourceRequirementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResourceRequirementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkRequirementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkRequirementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkRequirement.Meta.ObjectType, WorkRequirement.Meta.OnPostDerive); 

		public WorkRequirementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkRequirementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ActivityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Activity.Meta.ObjectType, Activity.Meta.OnPostDerive); 

		public ActivityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MaintenanceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaintenanceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Maintenance.Meta.ObjectType, Maintenance.Meta.OnPostDerive); 

		public MaintenanceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaintenanceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PhaseOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhaseOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Phase.Meta.ObjectType, Phase.Meta.OnPostDerive); 

		public PhaseOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhaseOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductionRunOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductionRunOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductionRun.Meta.ObjectType, ProductionRun.Meta.OnPostDerive); 

		public ProductionRunOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductionRunOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProgramOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProgramOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Program.Meta.ObjectType, Program.Meta.OnPostDerive); 

		public ProgramOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProgramOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProjectOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Project.Meta.ObjectType, Project.Meta.OnPostDerive); 

		public ProjectOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ResearchOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResearchOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Research.Meta.ObjectType, Research.Meta.OnPostDerive); 

		public ResearchOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResearchOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaskOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Task.Meta.ObjectType, Task.Meta.OnPostDerive); 

		public TaskOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkFlowOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkFlowOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkFlow.Meta.ObjectType, WorkFlow.Meta.OnPostDerive); 

		public WorkFlowOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkFlowOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CaseOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Case.Meta.ObjectType, Case.Meta.OnPostDerive); 

		public CaseOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChange.Meta.ObjectType, EngineeringChange.Meta.OnPostDerive); 

		public EngineeringChangeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntry.Meta.ObjectType, JournalEntry.Meta.OnPostDerive); 

		public JournalEntryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Person.Meta.ObjectType, Person.Meta.OnPostDerive); 

		public PersonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AutomatedAgent.Meta.ObjectType, AutomatedAgent.Meta.OnPostDerive); 

		public AutomatedAgentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CreditLineOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditLineOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CreditLine.Meta.ObjectType, CreditLine.Meta.OnPostDerive); 

		public CreditLineOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditLineOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementAccountingTransactionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementAccountingTransactionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DisbursementAccountingTransaction.Meta.ObjectType, DisbursementAccountingTransaction.Meta.OnPostDerive); 

		public DisbursementAccountingTransactionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementAccountingTransactionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NoteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NoteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Note.Meta.ObjectType, Note.Meta.OnPostDerive); 

		public NoteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NoteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ObligationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ObligationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Obligation.Meta.ObjectType, Obligation.Meta.OnPostDerive); 

		public ObligationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ObligationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptAccountingTransactionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptAccountingTransactionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ReceiptAccountingTransaction.Meta.ObjectType, ReceiptAccountingTransaction.Meta.OnPostDerive); 

		public ReceiptAccountingTransactionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptAccountingTransactionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesAccountingTransactionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAccountingTransactionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesAccountingTransaction.Meta.ObjectType, SalesAccountingTransaction.Meta.OnPostDerive); 

		public SalesAccountingTransactionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAccountingTransactionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaxDueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TaxDue.Meta.ObjectType, TaxDue.Meta.OnPostDerive); 

		public TaxDueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AmortizationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmortizationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Amortization.Meta.ObjectType, Amortization.Meta.OnPostDerive); 

		public AmortizationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmortizationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CapitalizationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalizationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Capitalization.Meta.ObjectType, Capitalization.Meta.OnPostDerive); 

		public CapitalizationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalizationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Depreciation.Meta.ObjectType, Depreciation.Meta.OnPostDerive); 

		public DepreciationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ItemVarianceAccountingTransactionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemVarianceAccountingTransactionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ItemVarianceAccountingTransaction.Meta.ObjectType, ItemVarianceAccountingTransaction.Meta.OnPostDerive); 

		public ItemVarianceAccountingTransactionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemVarianceAccountingTransactionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ClientAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClientAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ClientAgreement.Meta.ObjectType, ClientAgreement.Meta.OnPostDerive); 

		public ClientAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentAgreement.Meta.ObjectType, EmploymentAgreement.Meta.OnPostDerive); 

		public EmploymentAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseAgreement.Meta.ObjectType, PurchaseAgreement.Meta.OnPostDerive); 

		public PurchaseAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesAgreement.Meta.ObjectType, SalesAgreement.Meta.OnPostDerive); 

		public SalesAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubContractorAgreement.Meta.ObjectType, SubContractorAgreement.Meta.OnPostDerive); 

		public SubContractorAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AgreementExhibitOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementExhibitOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AgreementExhibit.Meta.ObjectType, AgreementExhibit.Meta.OnPostDerive); 

		public AgreementExhibitOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementExhibitOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AgreementPricingProgramOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementPricingProgramOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AgreementPricingProgram.Meta.ObjectType, AgreementPricingProgram.Meta.OnPostDerive); 

		public AgreementPricingProgramOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementPricingProgramOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AgreementSectionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementSectionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AgreementSection.Meta.ObjectType, AgreementSection.Meta.OnPostDerive); 

		public AgreementSectionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementSectionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SubAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubAgreement.Meta.ObjectType, SubAgreement.Meta.OnPostDerive); 

		public SubAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FinancialTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FinancialTerm.Meta.ObjectType, FinancialTerm.Meta.OnPostDerive); 

		public FinancialTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class IncentiveOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncentiveOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Incentive.Meta.ObjectType, Incentive.Meta.OnPostDerive); 

		public IncentiveOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncentiveOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceTerm.Meta.ObjectType, InvoiceTerm.Meta.OnPostDerive); 

		public InvoiceTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LegalTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LegalTerm.Meta.ObjectType, LegalTerm.Meta.OnPostDerive); 

		public LegalTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ThresholdOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThresholdOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Threshold.Meta.ObjectType, Threshold.Meta.OnPostDerive); 

		public ThresholdOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThresholdOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Country.Meta.ObjectType, Country.Meta.OnPostDerive); 

		public CountryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CountyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(County.Meta.ObjectType, County.Meta.OnPostDerive); 

		public CountyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProvinceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProvinceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Province.Meta.ObjectType, Province.Meta.OnPostDerive); 

		public ProvinceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProvinceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(State.Meta.ObjectType, State.Meta.OnPostDerive); 

		public StateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TerritoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TerritoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Territory.Meta.ObjectType, Territory.Meta.OnPostDerive); 

		public TerritoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TerritoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmailAddressOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailAddressOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmailAddress.Meta.ObjectType, EmailAddress.Meta.OnPostDerive); 

		public EmailAddressOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailAddressOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WebAddressOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebAddressOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WebAddress.Meta.ObjectType, WebAddress.Meta.OnPostDerive); 

		public WebAddressOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebAddressOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PostalAddressOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalAddressOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PostalAddress.Meta.ObjectType, PostalAddress.Meta.OnPostDerive); 

		public PostalAddressOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalAddressOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TelecommunicationsNumberOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TelecommunicationsNumberOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TelecommunicationsNumber.Meta.ObjectType, TelecommunicationsNumber.Meta.OnPostDerive); 

		public TelecommunicationsNumberOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TelecommunicationsNumberOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BarrelOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BarrelOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Barrel.Meta.ObjectType, Barrel.Meta.OnPostDerive); 

		public BarrelOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BarrelOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BinOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BinOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Bin.Meta.ObjectType, Bin.Meta.OnPostDerive); 

		public BinOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BinOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RoomOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoomOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Room.Meta.ObjectType, Room.Meta.OnPostDerive); 

		public RoomOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoomOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShelfOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShelfOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Shelf.Meta.ObjectType, Shelf.Meta.OnPostDerive); 

		public ShelfOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShelfOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(City.Meta.ObjectType, City.Meta.OnPostDerive); 

		public CityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PostalCodeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalCodeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PostalCode.Meta.ObjectType, PostalCode.Meta.OnPostDerive); 

		public PostalCodeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalCodeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ActivityUsageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityUsageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ActivityUsage.Meta.ObjectType, ActivityUsage.Meta.OnPostDerive); 

		public ActivityUsageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityUsageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TimePeriodUsageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimePeriodUsageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimePeriodUsage.Meta.ObjectType, TimePeriodUsage.Meta.OnPostDerive); 

		public TimePeriodUsageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimePeriodUsageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VolumeUsageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VolumeUsageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VolumeUsage.Meta.ObjectType, VolumeUsage.Meta.OnPostDerive); 

		public VolumeUsageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VolumeUsageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomEngagementItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomEngagementItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomEngagementItem.Meta.ObjectType, CustomEngagementItem.Meta.OnPostDerive); 

		public CustomEngagementItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomEngagementItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOrderItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOrderItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableOrderItem.Meta.ObjectType, DeliverableOrderItem.Meta.OnPostDerive); 

		public DeliverableOrderItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOrderItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GoodOrderItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOrderItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GoodOrderItem.Meta.ObjectType, GoodOrderItem.Meta.OnPostDerive); 

		public GoodOrderItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOrderItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalPlacementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalPlacementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalPlacement.Meta.ObjectType, ProfessionalPlacement.Meta.OnPostDerive); 

		public ProfessionalPlacementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalPlacementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StandardServiceOrderItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StandardServiceOrderItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StandardServiceOrderItem.Meta.ObjectType, StandardServiceOrderItem.Meta.OnPostDerive); 

		public StandardServiceOrderItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StandardServiceOrderItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedLaborCostOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedLaborCostOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedLaborCost.Meta.ObjectType, EstimatedLaborCost.Meta.OnPostDerive); 

		public EstimatedLaborCostOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedLaborCostOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedMaterialCostOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedMaterialCostOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedMaterialCost.Meta.ObjectType, EstimatedMaterialCost.Meta.OnPostDerive); 

		public EstimatedMaterialCostOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedMaterialCostOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedOtherCostOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedOtherCostOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EstimatedOtherCost.Meta.ObjectType, EstimatedOtherCost.Meta.OnPostDerive); 

		public EstimatedOtherCostOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedOtherCostOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BuildingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BuildingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Building.Meta.ObjectType, Building.Meta.OnPostDerive); 

		public BuildingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BuildingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FloorOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FloorOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Floor.Meta.ObjectType, Floor.Meta.OnPostDerive); 

		public FloorOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FloorOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OfficeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OfficeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Office.Meta.ObjectType, Office.Meta.OnPostDerive); 

		public OfficeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OfficeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PlantOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PlantOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Plant.Meta.ObjectType, Plant.Meta.OnPostDerive); 

		public PlantOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlantOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WarehouseOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WarehouseOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Warehouse.Meta.ObjectType, Warehouse.Meta.OnPostDerive); 

		public WarehouseOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WarehouseOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BankAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BankAccount.Meta.ObjectType, BankAccount.Meta.OnPostDerive); 

		public BankAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CreditCard.Meta.ObjectType, CreditCard.Meta.OnPostDerive); 

		public CreditCardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InvestmentAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvestmentAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvestmentAccount.Meta.ObjectType, InvestmentAccount.Meta.OnPostDerive); 

		public InvestmentAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvestmentAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OwnBankAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnBankAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OwnBankAccount.Meta.ObjectType, OwnBankAccount.Meta.OnPostDerive); 

		public OwnBankAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnBankAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OwnCreditCardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnCreditCardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OwnCreditCard.Meta.ObjectType, OwnCreditCard.Meta.OnPostDerive); 

		public OwnCreditCardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnCreditCardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccountAdjustmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountAdjustmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountAdjustment.Meta.ObjectType, AccountAdjustment.Meta.OnPostDerive); 

		public AccountAdjustmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountAdjustmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DepositOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepositOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deposit.Meta.ObjectType, Deposit.Meta.OnPostDerive); 

		public DepositOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepositOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FinancialAccountAdjustmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialAccountAdjustmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FinancialAccountAdjustment.Meta.ObjectType, FinancialAccountAdjustment.Meta.OnPostDerive); 

		public FinancialAccountAdjustmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialAccountAdjustmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WithdrawalOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WithdrawalOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Withdrawal.Meta.ObjectType, Withdrawal.Meta.OnPostDerive); 

		public WithdrawalOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WithdrawalOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EquipmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EquipmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Equipment.Meta.ObjectType, Equipment.Meta.OnPostDerive); 

		public EquipmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EquipmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PropertyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PropertyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Property.Meta.ObjectType, Property.Meta.OnPostDerive); 

		public PropertyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PropertyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VehicleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VehicleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Vehicle.Meta.ObjectType, Vehicle.Meta.OnPostDerive); 

		public VehicleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VehicleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RegionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RegionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Region.Meta.ObjectType, Region.Meta.OnPostDerive); 

		public RegionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RegionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesTerritoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesTerritoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesTerritory.Meta.ObjectType, SalesTerritory.Meta.OnPostDerive); 

		public SalesTerritoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesTerritoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ServiceTerritoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceTerritoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceTerritory.Meta.ObjectType, ServiceTerritory.Meta.OnPostDerive); 

		public ServiceTerritoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceTerritoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingConfigurationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingConfigurationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturingConfiguration.Meta.ObjectType, ManufacturingConfiguration.Meta.OnPostDerive); 

		public ManufacturingConfigurationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingConfigurationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ServiceConfigurationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceConfigurationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceConfiguration.Meta.ObjectType, ServiceConfiguration.Meta.OnPostDerive); 

		public ServiceConfigurationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceConfigurationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Currency.Meta.ObjectType, Currency.Meta.OnPostDerive); 

		public CurrencyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DiscountAdjustment.Meta.ObjectType, DiscountAdjustment.Meta.OnPostDerive); 

		public DiscountAdjustmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FeeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FeeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Fee.Meta.ObjectType, Fee.Meta.OnPostDerive); 

		public FeeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FeeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingChargeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingChargeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShippingAndHandlingCharge.Meta.ObjectType, ShippingAndHandlingCharge.Meta.OnPostDerive); 

		public ShippingAndHandlingChargeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingChargeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeAdjustmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeAdjustmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SurchargeAdjustment.Meta.ObjectType, SurchargeAdjustment.Meta.OnPostDerive); 

		public SurchargeAdjustmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeAdjustmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FinishedGoodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinishedGoodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FinishedGood.Meta.ObjectType, FinishedGood.Meta.OnPostDerive); 

		public FinishedGoodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinishedGoodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RawMaterialOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RawMaterialOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RawMaterial.Meta.ObjectType, RawMaterial.Meta.OnPostDerive); 

		public RawMaterialOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RawMaterialOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SubAssemblyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAssemblyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubAssembly.Meta.ObjectType, SubAssembly.Meta.OnPostDerive); 

		public SubAssemblyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAssemblyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringBomOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringBomOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringBom.Meta.ObjectType, EngineeringBom.Meta.OnPostDerive); 

		public EngineeringBomOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringBomOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingBomOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingBomOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturingBom.Meta.ObjectType, ManufacturingBom.Meta.OnPostDerive); 

		public ManufacturingBomOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingBomOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisation.Meta.ObjectType, InternalOrganisation.Meta.OnPostDerive); 

		public InternalOrganisationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Organisation.Meta.ObjectType, Organisation.Meta.OnPostDerive); 

		public OrganisationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class IndustryClassificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IndustryClassificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(IndustryClassification.Meta.ObjectType, IndustryClassification.Meta.OnPostDerive); 

		public IndustryClassificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IndustryClassificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ClientRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClientRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ClientRelationship.Meta.ObjectType, ClientRelationship.Meta.OnPostDerive); 

		public ClientRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRelationship.Meta.ObjectType, CustomerRelationship.Meta.OnPostDerive); 

		public CustomerRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DistributionChannelRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DistributionChannelRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DistributionChannelRelationship.Meta.ObjectType, DistributionChannelRelationship.Meta.OnPostDerive); 

		public DistributionChannelRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DistributionChannelRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Employment.Meta.ObjectType, Employment.Meta.OnPostDerive); 

		public EmploymentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationContactRelationship.Meta.ObjectType, OrganisationContactRelationship.Meta.OnPostDerive); 

		public OrganisationContactRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationRollUpOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRollUpOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationRollUp.Meta.ObjectType, OrganisationRollUp.Meta.OnPostDerive); 

		public OrganisationRollUpOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRollUpOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartnershipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartnershipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Partnership.Meta.ObjectType, Partnership.Meta.OnPostDerive); 

		public PartnershipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartnershipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalServicesRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalServicesRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalServicesRelationship.Meta.ObjectType, ProfessionalServicesRelationship.Meta.OnPostDerive); 

		public ProfessionalServicesRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalServicesRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRelationship.Meta.ObjectType, SalesRepRelationship.Meta.OnPostDerive); 

		public SalesRepRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SubContractorRelationship.Meta.ObjectType, SubContractorRelationship.Meta.OnPostDerive); 

		public SubContractorRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SupplierRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SupplierRelationship.Meta.ObjectType, SupplierRelationship.Meta.OnPostDerive); 

		public SupplierRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProspectRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProspectRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProspectRelationship.Meta.ObjectType, ProspectRelationship.Meta.OnPostDerive); 

		public ProspectRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProspectRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Disbursement.Meta.ObjectType, Disbursement.Meta.OnPostDerive); 

		public DisbursementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PayCheckOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayCheckOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayCheck.Meta.ObjectType, PayCheck.Meta.OnPostDerive); 

		public PayCheckOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayCheckOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Receipt.Meta.ObjectType, Receipt.Meta.OnPostDerive); 

		public ReceiptOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CashOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CashOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Cash.Meta.ObjectType, Cash.Meta.OnPostDerive); 

		public CashOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CashOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BasePriceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BasePrice.Meta.ObjectType, BasePrice.Meta.OnPostDerive); 

		public BasePriceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DiscountComponentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountComponentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DiscountComponent.Meta.ObjectType, DiscountComponent.Meta.OnPostDerive); 

		public DiscountComponentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountComponentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturerSuggestedRetailPriceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturerSuggestedRetailPriceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ManufacturerSuggestedRetailPrice.Meta.ObjectType, ManufacturerSuggestedRetailPrice.Meta.OnPostDerive); 

		public ManufacturerSuggestedRetailPriceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturerSuggestedRetailPriceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OneTimeChargeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneTimeChargeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OneTimeCharge.Meta.ObjectType, OneTimeCharge.Meta.OnPostDerive); 

		public OneTimeChargeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneTimeChargeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RecurringChargeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RecurringChargeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RecurringCharge.Meta.ObjectType, RecurringCharge.Meta.OnPostDerive); 

		public RecurringChargeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RecurringChargeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeComponentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeComponentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SurchargeComponent.Meta.ObjectType, SurchargeComponent.Meta.OnPostDerive); 

		public SurchargeComponentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeComponentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UtilizationChargeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UtilizationChargeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UtilizationCharge.Meta.ObjectType, UtilizationCharge.Meta.OnPostDerive); 

		public UtilizationChargeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UtilizationChargeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableBasedServiceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableBasedServiceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableBasedService.Meta.ObjectType, DeliverableBasedService.Meta.OnPostDerive); 

		public DeliverableBasedServiceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableBasedServiceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TimeAndMaterialsServiceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeAndMaterialsServiceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimeAndMaterialsService.Meta.ObjectType, TimeAndMaterialsService.Meta.OnPostDerive); 

		public TimeAndMaterialsServiceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeAndMaterialsServiceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GoodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Good.Meta.ObjectType, Good.Meta.OnPostDerive); 

		public GoodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MarketingPackageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingPackageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MarketingPackage.Meta.ObjectType, MarketingPackage.Meta.OnPostDerive); 

		public MarketingPackageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingPackageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductConfigurationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductConfigurationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductConfiguration.Meta.ObjectType, ProductConfiguration.Meta.OnPostDerive); 

		public ProductConfigurationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductConfigurationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DimensionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DimensionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Dimension.Meta.ObjectType, Dimension.Meta.OnPostDerive); 

		public DimensionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DimensionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductQuoteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductQuote.Meta.ObjectType, ProductQuote.Meta.OnPostDerive); 

		public ProductQuoteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProposalOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Proposal.Meta.ObjectType, Proposal.Meta.OnPostDerive); 

		public ProposalOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StatementOfWorkOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StatementOfWork.Meta.ObjectType, StatementOfWork.Meta.OnPostDerive); 

		public StatementOfWorkOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestForInformationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestForInformation.Meta.ObjectType, RequestForInformation.Meta.OnPostDerive); 

		public RequestForInformationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestForProposalOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestForProposal.Meta.ObjectType, RequestForProposal.Meta.OnPostDerive); 

		public RequestForProposalOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestForQuoteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestForQuote.Meta.ObjectType, RequestForQuote.Meta.OnPostDerive); 

		public RequestForQuoteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTurnoverOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTurnoverOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DeliverableTurnover.Meta.ObjectType, DeliverableTurnover.Meta.OnPostDerive); 

		public DeliverableTurnoverOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTurnoverOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ExpenseEntryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExpenseEntryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ExpenseEntry.Meta.ObjectType, ExpenseEntry.Meta.OnPostDerive); 

		public ExpenseEntryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExpenseEntryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MaterialsUsageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaterialsUsageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MaterialsUsage.Meta.ObjectType, MaterialsUsage.Meta.OnPostDerive); 

		public MaterialsUsageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaterialsUsageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TimeEntryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeEntryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TimeEntry.Meta.ObjectType, TimeEntry.Meta.OnPostDerive); 

		public TimeEntryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeEntryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccessControl.Meta.ObjectType, AccessControl.Meta.OnPostDerive); 

		public AccessControlOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Language.Meta.ObjectType, Language.Meta.OnPostDerive); 

		public LanguageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Locale.Meta.ObjectType, Locale.Meta.OnPostDerive); 

		public LocaleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LocalisedText.Meta.ObjectType, LocalisedText.Meta.OnPostDerive); 

		public LocalisedTextOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Media.Meta.ObjectType, Media.Meta.OnPostDerive); 

		public MediaOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaType.Meta.ObjectType, MediaType.Meta.OnPostDerive); 

		public MediaTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Permission.Meta.ObjectType, Permission.Meta.OnPostDerive); 

		public PermissionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PrintQueueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PrintQueueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PrintQueue.Meta.ObjectType, PrintQueue.Meta.OnPostDerive); 

		public PrintQueueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PrintQueueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Role.Meta.ObjectType, Role.Meta.OnPostDerive); 

		public RoleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Singleton.Meta.ObjectType, Singleton.Meta.OnPostDerive); 

		public SingletonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UserGroup.Meta.ObjectType, UserGroup.Meta.OnPostDerive); 

		public UserGroupOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionDetailOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionDetailOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionDetail.Meta.ObjectType, AccountingTransactionDetail.Meta.OnPostDerive); 

		public AccountingTransactionDetailOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionDetailOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionNumberOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionNumberOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AccountingTransactionNumber.Meta.ObjectType, AccountingTransactionNumber.Meta.OnPostDerive); 

		public AccountingTransactionNumberOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionNumberOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AddendumOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AddendumOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Addendum.Meta.ObjectType, Addendum.Meta.OnPostDerive); 

		public AddendumOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AddendumOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AmountDueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmountDueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(AmountDue.Meta.ObjectType, AmountDue.Meta.OnPostDerive); 

		public AmountDueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmountDueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BankOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Bank.Meta.ObjectType, Bank.Meta.OnPostDerive); 

		public BankOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BenefitOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BenefitOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Benefit.Meta.ObjectType, Benefit.Meta.OnPostDerive); 

		public BenefitOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BenefitOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BillingAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillingAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BillingAccount.Meta.ObjectType, BillingAccount.Meta.OnPostDerive); 

		public BillingAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillingAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BrandOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BrandOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Brand.Meta.ObjectType, Brand.Meta.OnPostDerive); 

		public BrandOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BrandOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetItem.Meta.ObjectType, BudgetItem.Meta.OnPostDerive); 

		public BudgetItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetReviewOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetReviewOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetReview.Meta.ObjectType, BudgetReview.Meta.OnPostDerive); 

		public BudgetReviewOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetReviewOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetRevision.Meta.ObjectType, BudgetRevision.Meta.OnPostDerive); 

		public BudgetRevisionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionImpactOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionImpactOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetRevisionImpact.Meta.ObjectType, BudgetRevisionImpact.Meta.OnPostDerive); 

		public BudgetRevisionImpactOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionImpactOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetStatus.Meta.ObjectType, BudgetStatus.Meta.OnPostDerive); 

		public BudgetStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CarrierOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CarrierOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Carrier.Meta.ObjectType, Carrier.Meta.OnPostDerive); 

		public CarrierOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CarrierOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CaseStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CaseStatus.Meta.ObjectType, CaseStatus.Meta.OnPostDerive); 

		public CaseStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ChartOfAccountsOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ChartOfAccountsOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ChartOfAccounts.Meta.ObjectType, ChartOfAccounts.Meta.OnPostDerive); 

		public ChartOfAccountsOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ChartOfAccountsOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CitizenshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CitizenshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Citizenship.Meta.ObjectType, Citizenship.Meta.OnPostDerive); 

		public CitizenshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CitizenshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventStatus.Meta.ObjectType, CommunicationEventStatus.Meta.OnPostDerive); 

		public CommunicationEventStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostCenter.Meta.ObjectType, CostCenter.Meta.OnPostDerive); 

		public CostCenterOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardCompanyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardCompanyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CreditCardCompany.Meta.ObjectType, CreditCardCompany.Meta.OnPostDerive); 

		public CreditCardCompanyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardCompanyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturnStatus.Meta.ObjectType, CustomerReturnStatus.Meta.OnPostDerive); 

		public CustomerReturnStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipmentStatus.Meta.ObjectType, CustomerShipmentStatus.Meta.OnPostDerive); 

		public CustomerShipmentStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeductionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deduction.Meta.ObjectType, Deduction.Meta.OnPostDerive); 

		public DeductionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deliverable.Meta.ObjectType, Deliverable.Meta.OnPostDerive); 

		public DeliverableOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeploymentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeploymentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Deployment.Meta.ObjectType, Deployment.Meta.OnPostDerive); 

		public DeploymentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeploymentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationMethodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationMethodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DepreciationMethod.Meta.ObjectType, DepreciationMethod.Meta.OnPostDerive); 

		public DepreciationMethodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationMethodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DesiredProductFeatureOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DesiredProductFeatureOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DesiredProductFeature.Meta.ObjectType, DesiredProductFeature.Meta.OnPostDerive); 

		public DesiredProductFeatureOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DesiredProductFeatureOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DropShipmentStatus.Meta.ObjectType, DropShipmentStatus.Meta.OnPostDerive); 

		public DropShipmentStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmailTemplateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailTemplateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmailTemplate.Meta.ObjectType, EmailTemplate.Meta.OnPostDerive); 

		public EmailTemplateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailTemplateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EmploymentApplication.Meta.ObjectType, EmploymentApplication.Meta.OnPostDerive); 

		public EmploymentApplicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngagementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Engagement.Meta.ObjectType, Engagement.Meta.OnPostDerive); 

		public EngagementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngagementRateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementRateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngagementRate.Meta.ObjectType, EngagementRate.Meta.OnPostDerive); 

		public EngagementRateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementRateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChangeStatus.Meta.ObjectType, EngineeringChangeStatus.Meta.OnPostDerive); 

		public EngineeringChangeStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccount.Meta.ObjectType, GeneralLedgerAccount.Meta.OnPostDerive); 

		public GeneralLedgerAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountGroupOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountGroupOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccountGroup.Meta.ObjectType, GeneralLedgerAccountGroup.Meta.OnPostDerive); 

		public GeneralLedgerAccountGroupOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountGroupOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GeneralLedgerAccountType.Meta.ObjectType, GeneralLedgerAccountType.Meta.OnPostDerive); 

		public GeneralLedgerAccountTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GlBudgetAllocationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GlBudgetAllocationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(GlBudgetAllocation.Meta.ObjectType, GlBudgetAllocation.Meta.OnPostDerive); 

		public GlBudgetAllocationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GlBudgetAllocationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationAccountingPreferenceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationAccountingPreferenceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationAccountingPreference.Meta.ObjectType, InternalOrganisationAccountingPreference.Meta.OnPostDerive); 

		public InternalOrganisationAccountingPreferenceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationAccountingPreferenceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenue.Meta.ObjectType, InternalOrganisationRevenue.Meta.OnPostDerive); 

		public InternalOrganisationRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InternalOrganisationRevenueHistory.Meta.ObjectType, InternalOrganisationRevenueHistory.Meta.OnPostDerive); 

		public InternalOrganisationRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemVarianceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemVarianceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InventoryItemVariance.Meta.ObjectType, InventoryItemVariance.Meta.OnPostDerive); 

		public InventoryItemVarianceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemVarianceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceVatRateItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceVatRateItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(InvoiceVatRateItem.Meta.ObjectType, InvoiceVatRateItem.Meta.OnPostDerive); 

		public InvoiceVatRateItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceVatRateItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ItemIssuanceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ItemIssuance.Meta.ObjectType, ItemIssuance.Meta.OnPostDerive); 

		public ItemIssuanceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class JournalOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Journal.Meta.ObjectType, Journal.Meta.OnPostDerive); 

		public JournalOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalOnPostDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryDetailOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryDetailOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntryDetail.Meta.ObjectType, JournalEntryDetail.Meta.OnPostDerive); 

		public JournalEntryDetailOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryDetailOnPostDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryNumberOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryNumberOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(JournalEntryNumber.Meta.ObjectType, JournalEntryNumber.Meta.OnPostDerive); 

		public JournalEntryNumberOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryNumberOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LegalFormOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalFormOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(LegalForm.Meta.ObjectType, LegalForm.Meta.OnPostDerive); 

		public LegalFormOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalFormOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LotOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LotOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Lot.Meta.ObjectType, Lot.Meta.OnPostDerive); 

		public LotOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LotOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NeededSkillOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NeededSkillOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NeededSkill.Meta.ObjectType, NeededSkill.Meta.OnPostDerive); 

		public NeededSkillOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NeededSkillOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NewsItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NewsItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NewsItem.Meta.ObjectType, NewsItem.Meta.OnPostDerive); 

		public NewsItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NewsItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItemStatus.Meta.ObjectType, NonSerializedInventoryItemStatus.Meta.OnPostDerive); 

		public NonSerializedInventoryItemStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderKindOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderKindOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderKind.Meta.ObjectType, OrderKind.Meta.OnPostDerive); 

		public OrderKindOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderKindOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderQuantityBreakOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderQuantityBreakOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderQuantityBreak.Meta.ObjectType, OrderQuantityBreak.Meta.OnPostDerive); 

		public OrderQuantityBreakOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderQuantityBreakOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderRequirementCommitmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderRequirementCommitmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderRequirementCommitment.Meta.ObjectType, OrderRequirementCommitment.Meta.OnPostDerive); 

		public OrderRequirementCommitmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderRequirementCommitmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderTerm.Meta.ObjectType, OrderTerm.Meta.OnPostDerive); 

		public OrderTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderValueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderValueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderValue.Meta.ObjectType, OrderValue.Meta.OnPostDerive); 

		public OrderValueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderValueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactKindOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactKindOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationContactKind.Meta.ObjectType, OrganisationContactKind.Meta.OnPostDerive); 

		public OrganisationContactKindOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactKindOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationGlAccount.Meta.ObjectType, OrganisationGlAccount.Meta.OnPostDerive); 

		public OrganisationGlAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountBalanceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountBalanceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrganisationGlAccountBalance.Meta.ObjectType, OrganisationGlAccountBalance.Meta.OnPostDerive); 

		public OrganisationGlAccountBalanceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountBalanceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Package.Meta.ObjectType, Package.Meta.OnPostDerive); 

		public PackageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackageQuantityBreakOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageQuantityBreakOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackageQuantityBreak.Meta.ObjectType, PackageQuantityBreak.Meta.OnPostDerive); 

		public PackageQuantityBreakOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageQuantityBreakOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackageRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenue.Meta.ObjectType, PackageRevenue.Meta.OnPostDerive); 

		public PackageRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackageRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackageRevenueHistory.Meta.ObjectType, PackageRevenueHistory.Meta.OnPostDerive); 

		public PackageRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackagingContentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingContentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PackagingContent.Meta.ObjectType, PackagingContent.Meta.OnPostDerive); 

		public PackagingContentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingContentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartBillOfMaterialSubstituteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartBillOfMaterialSubstituteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartBillOfMaterialSubstitute.Meta.ObjectType, PartBillOfMaterialSubstitute.Meta.OnPostDerive); 

		public PartBillOfMaterialSubstituteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartBillOfMaterialSubstituteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartRevisionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartRevisionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartRevision.Meta.ObjectType, PartRevision.Meta.OnPostDerive); 

		public PartRevisionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartRevisionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartSpecificationStatus.Meta.ObjectType, PartSpecificationStatus.Meta.OnPostDerive); 

		public PartSpecificationStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartSubstituteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSubstituteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartSubstitute.Meta.ObjectType, PartSubstitute.Meta.OnPostDerive); 

		public PartSubstituteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSubstituteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyBenefitOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyBenefitOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyBenefit.Meta.ObjectType, PartyBenefit.Meta.OnPostDerive); 

		public PartyBenefitOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyBenefitOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyContactMechanismOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyContactMechanismOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyContactMechanism.Meta.ObjectType, PartyContactMechanism.Meta.OnPostDerive); 

		public PartyContactMechanismOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyContactMechanismOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyFixedAssetAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyFixedAssetAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyFixedAssetAssignment.Meta.ObjectType, PartyFixedAssetAssignment.Meta.OnPostDerive); 

		public PartyFixedAssetAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyFixedAssetAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenue.Meta.ObjectType, PartyPackageRevenue.Meta.OnPostDerive); 

		public PartyPackageRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyPackageRevenueHistory.Meta.ObjectType, PartyPackageRevenueHistory.Meta.OnPostDerive); 

		public PartyPackageRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenue.Meta.ObjectType, PartyProductCategoryRevenue.Meta.OnPostDerive); 

		public PartyProductCategoryRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductCategoryRevenueHistory.Meta.ObjectType, PartyProductCategoryRevenueHistory.Meta.OnPostDerive); 

		public PartyProductCategoryRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenue.Meta.ObjectType, PartyProductRevenue.Meta.OnPostDerive); 

		public PartyProductRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyProductRevenueHistory.Meta.ObjectType, PartyProductRevenueHistory.Meta.OnPostDerive); 

		public PartyProductRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenue.Meta.ObjectType, PartyRevenue.Meta.OnPostDerive); 

		public PartyRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartyRevenueHistory.Meta.ObjectType, PartyRevenueHistory.Meta.OnPostDerive); 

		public PartyRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartySkillOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartySkillOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartySkill.Meta.ObjectType, PartySkill.Meta.OnPostDerive); 

		public PartySkillOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartySkillOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PassportOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PassportOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Passport.Meta.ObjectType, Passport.Meta.OnPostDerive); 

		public PassportOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PassportOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PayGradeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayGradeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayGrade.Meta.ObjectType, PayGrade.Meta.OnPostDerive); 

		public PayGradeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayGradeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PayHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayHistory.Meta.ObjectType, PayHistory.Meta.OnPostDerive); 

		public PayHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PaymentApplicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentApplicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PaymentApplication.Meta.ObjectType, PaymentApplication.Meta.OnPostDerive); 

		public PaymentApplicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentApplicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PaymentBudgetAllocationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentBudgetAllocationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PaymentBudgetAllocation.Meta.ObjectType, PaymentBudgetAllocation.Meta.OnPostDerive); 

		public PaymentBudgetAllocationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentBudgetAllocationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PayrollPreferenceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayrollPreferenceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PayrollPreference.Meta.ObjectType, PayrollPreference.Meta.OnPostDerive); 

		public PayrollPreferenceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayrollPreferenceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceNoteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceNoteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceNote.Meta.ObjectType, PerformanceNote.Meta.OnPostDerive); 

		public PerformanceNoteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceNoteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReview.Meta.ObjectType, PerformanceReview.Meta.OnPostDerive); 

		public PerformanceReviewOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PerformanceReviewItem.Meta.ObjectType, PerformanceReviewItem.Meta.OnPostDerive); 

		public PerformanceReviewItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonTrainingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonTrainingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PersonTraining.Meta.ObjectType, PersonTraining.Meta.OnPostDerive); 

		public PersonTrainingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonTrainingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PickListItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickListItem.Meta.ObjectType, PickListItem.Meta.OnPostDerive); 

		public PickListItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PickListStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickListStatus.Meta.ObjectType, PickListStatus.Meta.OnPostDerive); 

		public PickListStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Position.Meta.ObjectType, Position.Meta.OnPostDerive); 

		public PositionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionFulfillmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionFulfillmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionFulfillment.Meta.ObjectType, PositionFulfillment.Meta.OnPostDerive); 

		public PositionFulfillmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionFulfillmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionReportingStructureOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionReportingStructureOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionReportingStructure.Meta.ObjectType, PositionReportingStructure.Meta.OnPostDerive); 

		public PositionReportingStructureOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionReportingStructureOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionResponsibilityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionResponsibilityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionResponsibility.Meta.ObjectType, PositionResponsibility.Meta.OnPostDerive); 

		public PositionResponsibilityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionResponsibilityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionType.Meta.ObjectType, PositionType.Meta.OnPostDerive); 

		public PositionTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeRateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeRateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PositionTypeRate.Meta.ObjectType, PositionTypeRate.Meta.OnPostDerive); 

		public PositionTypeRateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeRateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PostalBoundaryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalBoundaryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PostalBoundary.Meta.ObjectType, PostalBoundary.Meta.OnPostDerive); 

		public PostalBoundaryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalBoundaryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategory.Meta.ObjectType, ProductCategory.Meta.OnPostDerive); 

		public ProductCategoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenue.Meta.ObjectType, ProductCategoryRevenue.Meta.OnPostDerive); 

		public ProductCategoryRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductCategoryRevenueHistory.Meta.ObjectType, ProductCategoryRevenueHistory.Meta.OnPostDerive); 

		public ProductCategoryRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductDeliverySkillRequirementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDeliverySkillRequirementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductDeliverySkillRequirement.Meta.ObjectType, ProductDeliverySkillRequirement.Meta.OnPostDerive); 

		public ProductDeliverySkillRequirementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDeliverySkillRequirementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductFeatureApplicabilityRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductFeatureApplicabilityRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductFeatureApplicabilityRelationship.Meta.ObjectType, ProductFeatureApplicabilityRelationship.Meta.OnPostDerive); 

		public ProductFeatureApplicabilityRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductFeatureApplicabilityRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductPurchasePriceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductPurchasePriceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductPurchasePrice.Meta.ObjectType, ProductPurchasePrice.Meta.OnPostDerive); 

		public ProductPurchasePriceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductPurchasePriceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenue.Meta.ObjectType, ProductRevenue.Meta.OnPostDerive); 

		public ProductRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProductRevenueHistory.Meta.ObjectType, ProductRevenueHistory.Meta.OnPostDerive); 

		public ProductRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ProfessionalAssignment.Meta.ObjectType, ProfessionalAssignment.Meta.OnPostDerive); 

		public ProfessionalAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemStatus.Meta.ObjectType, PurchaseInvoiceItemStatus.Meta.OnPostDerive); 

		public PurchaseInvoiceItemStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceStatus.Meta.ObjectType, PurchaseInvoiceStatus.Meta.OnPostDerive); 

		public PurchaseInvoiceStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItemStatus.Meta.ObjectType, PurchaseOrderItemStatus.Meta.OnPostDerive); 

		public PurchaseOrderItemStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderStatus.Meta.ObjectType, PurchaseOrderStatus.Meta.OnPostDerive); 

		public PurchaseOrderStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturnStatus.Meta.ObjectType, PurchaseReturnStatus.Meta.OnPostDerive); 

		public PurchaseReturnStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipmentStatus.Meta.ObjectType, PurchaseShipmentStatus.Meta.OnPostDerive); 

		public PurchaseShipmentStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(QuoteItem.Meta.ObjectType, QuoteItem.Meta.OnPostDerive); 

		public QuoteItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class QuoteTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(QuoteTerm.Meta.ObjectType, QuoteTerm.Meta.OnPostDerive); 

		public QuoteTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequestItem.Meta.ObjectType, RequestItem.Meta.OnPostDerive); 

		public RequestItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequirementBudgetAllocationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementBudgetAllocationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementBudgetAllocation.Meta.ObjectType, RequirementBudgetAllocation.Meta.OnPostDerive); 

		public RequirementBudgetAllocationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementBudgetAllocationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequirementCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementCommunication.Meta.ObjectType, RequirementCommunication.Meta.OnPostDerive); 

		public RequirementCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequirementStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementStatus.Meta.ObjectType, RequirementStatus.Meta.OnPostDerive); 

		public RequirementStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RespondingPartyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RespondingPartyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RespondingParty.Meta.ObjectType, RespondingParty.Meta.OnPostDerive); 

		public RespondingPartyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RespondingPartyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ResponsibilityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResponsibilityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Responsibility.Meta.ObjectType, Responsibility.Meta.OnPostDerive); 

		public ResponsibilityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResponsibilityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ResumeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResumeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Resume.Meta.ObjectType, Resume.Meta.OnPostDerive); 

		public ResumeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResumeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RevenueQuantityBreakOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueQuantityBreakOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RevenueQuantityBreak.Meta.ObjectType, RevenueQuantityBreak.Meta.OnPostDerive); 

		public RevenueQuantityBreakOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueQuantityBreakOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RevenueValueBreakOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueValueBreakOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RevenueValueBreak.Meta.ObjectType, RevenueValueBreak.Meta.OnPostDerive); 

		public RevenueValueBreakOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueValueBreakOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalaryStepOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalaryStepOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalaryStep.Meta.ObjectType, SalaryStep.Meta.OnPostDerive); 

		public SalaryStepOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalaryStepOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenue.Meta.ObjectType, SalesChannelRevenue.Meta.OnPostDerive); 

		public SalesChannelRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesChannelRevenueHistory.Meta.ObjectType, SalesChannelRevenueHistory.Meta.OnPostDerive); 

		public SalesChannelRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemStatus.Meta.ObjectType, SalesInvoiceItemStatus.Meta.OnPostDerive); 

		public SalesInvoiceItemStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceStatus.Meta.ObjectType, SalesInvoiceStatus.Meta.OnPostDerive); 

		public SalesInvoiceStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItemStatus.Meta.ObjectType, SalesOrderItemStatus.Meta.OnPostDerive); 

		public SalesOrderItemStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderStatus.Meta.ObjectType, SalesOrderStatus.Meta.OnPostDerive); 

		public SalesOrderStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepCommissionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepCommissionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepCommission.Meta.ObjectType, SalesRepCommission.Meta.OnPostDerive); 

		public SalesRepCommissionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepCommissionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyProductCategoryRevenue.Meta.ObjectType, SalesRepPartyProductCategoryRevenue.Meta.OnPostDerive); 

		public SalesRepPartyProductCategoryRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepPartyRevenue.Meta.ObjectType, SalesRepPartyRevenue.Meta.OnPostDerive); 

		public SalesRepPartyRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepProductCategoryRevenue.Meta.ObjectType, SalesRepProductCategoryRevenue.Meta.OnPostDerive); 

		public SalesRepProductCategoryRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenue.Meta.ObjectType, SalesRepRevenue.Meta.OnPostDerive); 

		public SalesRepRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesRepRevenueHistory.Meta.ObjectType, SalesRepRevenueHistory.Meta.OnPostDerive); 

		public SalesRepRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItemStatus.Meta.ObjectType, SerializedInventoryItemStatus.Meta.OnPostDerive); 

		public SerializedInventoryItemStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryHeaderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryHeaderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceEntryHeader.Meta.ObjectType, ServiceEntryHeader.Meta.OnPostDerive); 

		public ServiceEntryHeaderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryHeaderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentItem.Meta.ObjectType, ShipmentItem.Meta.OnPostDerive); 

		public ShipmentItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentPackageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentPackageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentPackage.Meta.ObjectType, ShipmentPackage.Meta.OnPostDerive); 

		public ShipmentPackageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentPackageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentReceiptOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentReceiptOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentReceipt.Meta.ObjectType, ShipmentReceipt.Meta.OnPostDerive); 

		public ShipmentReceiptOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentReceiptOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentRouteSegmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentRouteSegmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentRouteSegment.Meta.ObjectType, ShipmentRouteSegment.Meta.OnPostDerive); 

		public ShipmentRouteSegmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentRouteSegmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentValueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentValueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShipmentValue.Meta.ObjectType, ShipmentValue.Meta.OnPostDerive); 

		public ShipmentValueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentValueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingComponentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingComponentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ShippingAndHandlingComponent.Meta.ObjectType, ShippingAndHandlingComponent.Meta.OnPostDerive); 

		public ShippingAndHandlingComponentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingComponentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StoreOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Store.Meta.ObjectType, Store.Meta.OnPostDerive); 

		public StoreOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StoreRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenue.Meta.ObjectType, StoreRevenue.Meta.OnPostDerive); 

		public StoreRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StoreRevenueHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StoreRevenueHistory.Meta.ObjectType, StoreRevenueHistory.Meta.OnPostDerive); 

		public StoreRevenueHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SupplierOfferingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierOfferingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SupplierOffering.Meta.ObjectType, SupplierOffering.Meta.OnPostDerive); 

		public SupplierOfferingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierOfferingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TrainingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TrainingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Training.Meta.ObjectType, Training.Meta.OnPostDerive); 

		public TrainingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TrainingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TransferStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TransferStatus.Meta.ObjectType, TransferStatus.Meta.OnPostDerive); 

		public TransferStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureConversionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureConversionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(UnitOfMeasureConversion.Meta.ObjectType, UnitOfMeasureConversion.Meta.OnPostDerive); 

		public UnitOfMeasureConversionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureConversionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatFormOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatFormOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatForm.Meta.ObjectType, VatForm.Meta.OnPostDerive); 

		public VatFormOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatFormOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatRateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatRate.Meta.ObjectType, VatRate.Meta.OnPostDerive); 

		public VatRateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatReturnBox.Meta.ObjectType, VatReturnBox.Meta.OnPostDerive); 

		public VatReturnBoxOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(VatReturnBoxType.Meta.ObjectType, VatReturnBoxType.Meta.OnPostDerive); 

		public VatReturnBoxTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortAssignment.Meta.ObjectType, WorkEffortAssignment.Meta.OnPostDerive); 

		public WorkEffortAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentRateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentRateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortAssignmentRate.Meta.ObjectType, WorkEffortAssignmentRate.Meta.OnPostDerive); 

		public WorkEffortAssignmentRateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentRateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortFixedAssetAssignment.Meta.ObjectType, WorkEffortFixedAssetAssignment.Meta.OnPostDerive); 

		public WorkEffortFixedAssetAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetStandardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetStandardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortFixedAssetStandard.Meta.ObjectType, WorkEffortFixedAssetStandard.Meta.OnPostDerive); 

		public WorkEffortFixedAssetStandardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetStandardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortGoodStandardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortGoodStandardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortGoodStandard.Meta.ObjectType, WorkEffortGoodStandard.Meta.OnPostDerive); 

		public WorkEffortGoodStandardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortGoodStandardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortInventoryAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortInventoryAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortInventoryAssignment.Meta.ObjectType, WorkEffortInventoryAssignment.Meta.OnPostDerive); 

		public WorkEffortInventoryAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortInventoryAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartStandardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartStandardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPartStandard.Meta.ObjectType, WorkEffortPartStandard.Meta.OnPostDerive); 

		public WorkEffortPartStandardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartStandardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartyAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartyAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortPartyAssignment.Meta.ObjectType, WorkEffortPartyAssignment.Meta.OnPostDerive); 

		public WorkEffortPartyAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartyAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortSkillStandardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortSkillStandardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortSkillStandard.Meta.ObjectType, WorkEffortSkillStandard.Meta.OnPostDerive); 

		public WorkEffortSkillStandardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortSkillStandardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortStatus.Meta.ObjectType, WorkEffortStatus.Meta.OnPostDerive); 

		public WorkEffortStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortType.Meta.ObjectType, WorkEffortType.Meta.OnPostDerive); 

		public WorkEffortTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ImageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ImageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Image.Meta.ObjectType, Image.Meta.OnPostDerive); 

		public ImageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ImageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Login.Meta.ObjectType, Login.Meta.OnPostDerive); 

		public LoginOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SecurityToken.Meta.ObjectType, SecurityToken.Meta.OnPostDerive); 

		public SecurityTokenOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderShipmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderShipment.Meta.ObjectType, OrderShipment.Meta.OnPostDerive); 

		public OrderShipmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StringTemplateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(StringTemplate.Meta.ObjectType, StringTemplate.Meta.OnPostDerive); 

		public StringTemplateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(BudgetObjectState.Meta.ObjectType, BudgetObjectState.Meta.OnPostDerive); 

		public BudgetObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CaseObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CaseObjectState.Meta.ObjectType, CaseObjectState.Meta.OnPostDerive); 

		public CaseObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CommunicationEventObjectState.Meta.ObjectType, CommunicationEventObjectState.Meta.OnPostDerive); 

		public CommunicationEventObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerReturnObjectState.Meta.ObjectType, CustomerReturnObjectState.Meta.OnPostDerive); 

		public CustomerReturnObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CustomerShipmentObjectState.Meta.ObjectType, CustomerShipmentObjectState.Meta.OnPostDerive); 

		public CustomerShipmentObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(DropShipmentObjectState.Meta.ObjectType, DropShipmentObjectState.Meta.OnPostDerive); 

		public DropShipmentObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EngineeringChangeObjectState.Meta.ObjectType, EngineeringChangeObjectState.Meta.OnPostDerive); 

		public EngineeringChangeObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(NonSerializedInventoryItemObjectState.Meta.ObjectType, NonSerializedInventoryItemObjectState.Meta.OnPostDerive); 

		public NonSerializedInventoryItemObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PartSpecificationObjectState.Meta.ObjectType, PartSpecificationObjectState.Meta.OnPostDerive); 

		public PartSpecificationObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PickListObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PickListObjectState.Meta.ObjectType, PickListObjectState.Meta.OnPostDerive); 

		public PickListObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceItemObjectState.Meta.ObjectType, PurchaseInvoiceItemObjectState.Meta.OnPostDerive); 

		public PurchaseInvoiceItemObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoiceObjectState.Meta.ObjectType, PurchaseInvoiceObjectState.Meta.OnPostDerive); 

		public PurchaseInvoiceObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItemObjectState.Meta.ObjectType, PurchaseOrderItemObjectState.Meta.OnPostDerive); 

		public PurchaseOrderItemObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderObjectState.Meta.ObjectType, PurchaseOrderObjectState.Meta.OnPostDerive); 

		public PurchaseOrderObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseReturnObjectState.Meta.ObjectType, PurchaseReturnObjectState.Meta.OnPostDerive); 

		public PurchaseReturnObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseShipmentObjectState.Meta.ObjectType, PurchaseShipmentObjectState.Meta.OnPostDerive); 

		public PurchaseShipmentObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequirementObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(RequirementObjectState.Meta.ObjectType, RequirementObjectState.Meta.OnPostDerive); 

		public RequirementObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceItemObjectState.Meta.ObjectType, SalesInvoiceItemObjectState.Meta.OnPostDerive); 

		public SalesInvoiceItemObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesInvoiceObjectState.Meta.ObjectType, SalesInvoiceObjectState.Meta.OnPostDerive); 

		public SalesInvoiceObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItemObjectState.Meta.ObjectType, SalesOrderItemObjectState.Meta.OnPostDerive); 

		public SalesOrderItemObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderObjectState.Meta.ObjectType, SalesOrderObjectState.Meta.OnPostDerive); 

		public SalesOrderObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(SerializedInventoryItemObjectState.Meta.ObjectType, SerializedInventoryItemObjectState.Meta.OnPostDerive); 

		public SerializedInventoryItemObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TransferObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(TransferObjectState.Meta.ObjectType, TransferObjectState.Meta.OnPostDerive); 

		public TransferObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortObjectState.Meta.ObjectType, WorkEffortObjectState.Meta.OnPostDerive); 

		public WorkEffortObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Counter.Meta.ObjectType, Counter.Meta.OnPostDerive); 

		public CounterOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterCategoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterCategoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(CostCenterCategory.Meta.ObjectType, CostCenterCategory.Meta.OnPostDerive); 

		public CostCenterCategoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterCategoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(MediaContent.Meta.ObjectType, MediaContent.Meta.OnPostDerive); 

		public MediaContentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TransitionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Transition.Meta.ObjectType, Transition.Meta.OnPostDerive); 

		public TransitionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EventOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Event.Meta.ObjectType, Event.Meta.OnPostDerive); 

		public EventOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EventRegistrationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventRegistrationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(EventRegistration.Meta.ObjectType, EventRegistration.Meta.OnPostDerive); 

		public EventRegistrationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventRegistrationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FiscalYearInvoiceNumberOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FiscalYearInvoiceNumberOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(FiscalYearInvoiceNumber.Meta.ObjectType, FiscalYearInvoiceNumber.Meta.OnPostDerive); 

		public FiscalYearInvoiceNumberOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FiscalYearInvoiceNumberOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderItemBillingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderItemBillingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(OrderItemBilling.Meta.ObjectType, OrderItemBilling.Meta.OnPostDerive); 

		public OrderItemBillingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderItemBillingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryBillingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryBillingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(ServiceEntryBilling.Meta.ObjectType, ServiceEntryBilling.Meta.OnPostDerive); 

		public ServiceEntryBillingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryBillingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortBillingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortBillingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(WorkEffortBilling.Meta.ObjectType, WorkEffortBilling.Meta.OnPostDerive); 

		public WorkEffortBillingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortBillingOnPostDeriveMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class BudgetClose : Allors.Meta.Method
	{
		protected BudgetClose(Budget @object) : base(@object)
		{
		}
	}

	public partial class AccountingPeriodClose : BudgetClose
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodCloseMethodInvocation = new Allors.Meta.MethodInvocation(AccountingPeriod.Meta.ObjectType, AccountingPeriod.Meta.Close); 

		public AccountingPeriodClose(Budget @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodCloseMethodInvocation;
			}
		}
	}public partial class CapitalBudgetClose : BudgetClose
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetCloseMethodInvocation = new Allors.Meta.MethodInvocation(CapitalBudget.Meta.ObjectType, CapitalBudget.Meta.Close); 

		public CapitalBudgetClose(Budget @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetCloseMethodInvocation;
			}
		}
	}public partial class OperatingBudgetClose : BudgetClose
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetCloseMethodInvocation = new Allors.Meta.MethodInvocation(OperatingBudget.Meta.ObjectType, OperatingBudget.Meta.Close); 

		public OperatingBudgetClose(Budget @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetCloseMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class BudgetReopen : Allors.Meta.Method
	{
		protected BudgetReopen(Budget @object) : base(@object)
		{
		}
	}

	public partial class AccountingPeriodReopen : BudgetReopen
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodReopenMethodInvocation = new Allors.Meta.MethodInvocation(AccountingPeriod.Meta.ObjectType, AccountingPeriod.Meta.Reopen); 

		public AccountingPeriodReopen(Budget @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodReopenMethodInvocation;
			}
		}
	}public partial class CapitalBudgetReopen : BudgetReopen
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetReopenMethodInvocation = new Allors.Meta.MethodInvocation(CapitalBudget.Meta.ObjectType, CapitalBudget.Meta.Reopen); 

		public CapitalBudgetReopen(Budget @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetReopenMethodInvocation;
			}
		}
	}public partial class OperatingBudgetReopen : BudgetReopen
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetReopenMethodInvocation = new Allors.Meta.MethodInvocation(OperatingBudget.Meta.ObjectType, OperatingBudget.Meta.Reopen); 

		public OperatingBudgetReopen(Budget @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetReopenMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class CommunicationEventCancel : Allors.Meta.Method
	{
		protected CommunicationEventCancel(CommunicationEvent @object) : base(@object)
		{
		}
	}

	public partial class EmailCommunicationCancel : CommunicationEventCancel
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationCancelMethodInvocation = new Allors.Meta.MethodInvocation(EmailCommunication.Meta.ObjectType, EmailCommunication.Meta.Cancel); 

		public EmailCommunicationCancel(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationCancelMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationCancel : CommunicationEventCancel
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationCancelMethodInvocation = new Allors.Meta.MethodInvocation(FaceToFaceCommunication.Meta.ObjectType, FaceToFaceCommunication.Meta.Cancel); 

		public FaceToFaceCommunicationCancel(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationCancelMethodInvocation;
			}
		}
	}public partial class FaxCommunicationCancel : CommunicationEventCancel
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationCancelMethodInvocation = new Allors.Meta.MethodInvocation(FaxCommunication.Meta.ObjectType, FaxCommunication.Meta.Cancel); 

		public FaxCommunicationCancel(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationCancelMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceCancel : CommunicationEventCancel
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceCancelMethodInvocation = new Allors.Meta.MethodInvocation(LetterCorrespondence.Meta.ObjectType, LetterCorrespondence.Meta.Cancel); 

		public LetterCorrespondenceCancel(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceCancelMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationCancel : CommunicationEventCancel
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationCancelMethodInvocation = new Allors.Meta.MethodInvocation(PhoneCommunication.Meta.ObjectType, PhoneCommunication.Meta.Cancel); 

		public PhoneCommunicationCancel(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationCancelMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationCancel : CommunicationEventCancel
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationCancelMethodInvocation = new Allors.Meta.MethodInvocation(WebSiteCommunication.Meta.ObjectType, WebSiteCommunication.Meta.Cancel); 

		public WebSiteCommunicationCancel(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationCancelMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class CommunicationEventClose : Allors.Meta.Method
	{
		protected CommunicationEventClose(CommunicationEvent @object) : base(@object)
		{
		}
	}

	public partial class EmailCommunicationClose : CommunicationEventClose
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationCloseMethodInvocation = new Allors.Meta.MethodInvocation(EmailCommunication.Meta.ObjectType, EmailCommunication.Meta.Close); 

		public EmailCommunicationClose(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationCloseMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationClose : CommunicationEventClose
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationCloseMethodInvocation = new Allors.Meta.MethodInvocation(FaceToFaceCommunication.Meta.ObjectType, FaceToFaceCommunication.Meta.Close); 

		public FaceToFaceCommunicationClose(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationCloseMethodInvocation;
			}
		}
	}public partial class FaxCommunicationClose : CommunicationEventClose
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationCloseMethodInvocation = new Allors.Meta.MethodInvocation(FaxCommunication.Meta.ObjectType, FaxCommunication.Meta.Close); 

		public FaxCommunicationClose(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationCloseMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceClose : CommunicationEventClose
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceCloseMethodInvocation = new Allors.Meta.MethodInvocation(LetterCorrespondence.Meta.ObjectType, LetterCorrespondence.Meta.Close); 

		public LetterCorrespondenceClose(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceCloseMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationClose : CommunicationEventClose
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationCloseMethodInvocation = new Allors.Meta.MethodInvocation(PhoneCommunication.Meta.ObjectType, PhoneCommunication.Meta.Close); 

		public PhoneCommunicationClose(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationCloseMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationClose : CommunicationEventClose
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationCloseMethodInvocation = new Allors.Meta.MethodInvocation(WebSiteCommunication.Meta.ObjectType, WebSiteCommunication.Meta.Close); 

		public WebSiteCommunicationClose(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationCloseMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class CommunicationEventReopen : Allors.Meta.Method
	{
		protected CommunicationEventReopen(CommunicationEvent @object) : base(@object)
		{
		}
	}

	public partial class EmailCommunicationReopen : CommunicationEventReopen
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationReopenMethodInvocation = new Allors.Meta.MethodInvocation(EmailCommunication.Meta.ObjectType, EmailCommunication.Meta.Reopen); 

		public EmailCommunicationReopen(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationReopenMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationReopen : CommunicationEventReopen
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationReopenMethodInvocation = new Allors.Meta.MethodInvocation(FaceToFaceCommunication.Meta.ObjectType, FaceToFaceCommunication.Meta.Reopen); 

		public FaceToFaceCommunicationReopen(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationReopenMethodInvocation;
			}
		}
	}public partial class FaxCommunicationReopen : CommunicationEventReopen
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationReopenMethodInvocation = new Allors.Meta.MethodInvocation(FaxCommunication.Meta.ObjectType, FaxCommunication.Meta.Reopen); 

		public FaxCommunicationReopen(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationReopenMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceReopen : CommunicationEventReopen
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceReopenMethodInvocation = new Allors.Meta.MethodInvocation(LetterCorrespondence.Meta.ObjectType, LetterCorrespondence.Meta.Reopen); 

		public LetterCorrespondenceReopen(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceReopenMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationReopen : CommunicationEventReopen
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationReopenMethodInvocation = new Allors.Meta.MethodInvocation(PhoneCommunication.Meta.ObjectType, PhoneCommunication.Meta.Reopen); 

		public PhoneCommunicationReopen(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationReopenMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationReopen : CommunicationEventReopen
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationReopenMethodInvocation = new Allors.Meta.MethodInvocation(WebSiteCommunication.Meta.ObjectType, WebSiteCommunication.Meta.Reopen); 

		public WebSiteCommunicationReopen(CommunicationEvent @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationReopenMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderApprove : Allors.Meta.Method
	{
		protected OrderApprove(Order @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderApprove : OrderApprove
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderApproveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.Approve); 

		public PurchaseOrderApprove(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderApproveMethodInvocation;
			}
		}
	}public partial class SalesOrderApprove : OrderApprove
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderApproveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.Approve); 

		public SalesOrderApprove(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderApproveMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderReject : Allors.Meta.Method
	{
		protected OrderReject(Order @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderReject : OrderReject
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderRejectMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.Reject); 

		public PurchaseOrderReject(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderRejectMethodInvocation;
			}
		}
	}public partial class SalesOrderReject : OrderReject
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderRejectMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.Reject); 

		public SalesOrderReject(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderRejectMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderHold : Allors.Meta.Method
	{
		protected OrderHold(Order @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderHold : OrderHold
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderHoldMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.Hold); 

		public PurchaseOrderHold(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderHoldMethodInvocation;
			}
		}
	}public partial class SalesOrderHold : OrderHold
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderHoldMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.Hold); 

		public SalesOrderHold(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderHoldMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderContinue : Allors.Meta.Method
	{
		protected OrderContinue(Order @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderContinue : OrderContinue
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderContinueMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.Continue); 

		public PurchaseOrderContinue(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderContinueMethodInvocation;
			}
		}
	}public partial class SalesOrderContinue : OrderContinue
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderContinueMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.Continue); 

		public SalesOrderContinue(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderContinueMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderConfirm : Allors.Meta.Method
	{
		protected OrderConfirm(Order @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderConfirm : OrderConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderConfirmMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.Confirm); 

		public PurchaseOrderConfirm(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderConfirmMethodInvocation;
			}
		}
	}public partial class SalesOrderConfirm : OrderConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderConfirmMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.Confirm); 

		public SalesOrderConfirm(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderConfirmMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderCancel : Allors.Meta.Method
	{
		protected OrderCancel(Order @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderCancel : OrderCancel
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderCancelMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.Cancel); 

		public PurchaseOrderCancel(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderCancelMethodInvocation;
			}
		}
	}public partial class SalesOrderCancel : OrderCancel
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderCancelMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.Cancel); 

		public SalesOrderCancel(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderCancelMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderComplete : Allors.Meta.Method
	{
		protected OrderComplete(Order @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderComplete : OrderComplete
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderCompleteMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.Complete); 

		public PurchaseOrderComplete(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderCompleteMethodInvocation;
			}
		}
	}public partial class SalesOrderComplete : OrderComplete
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderCompleteMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.Complete); 

		public SalesOrderComplete(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderCompleteMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderFinish : Allors.Meta.Method
	{
		protected OrderFinish(Order @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderFinish : OrderFinish
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderFinishMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrder.Meta.ObjectType, PurchaseOrder.Meta.Finish); 

		public PurchaseOrderFinish(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderFinishMethodInvocation;
			}
		}
	}public partial class SalesOrderFinish : OrderFinish
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderFinishMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrder.Meta.ObjectType, SalesOrder.Meta.Finish); 

		public SalesOrderFinish(Order @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderFinishMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderItemCancel : Allors.Meta.Method
	{
		protected OrderItemCancel(OrderItem @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderItemCancel : OrderItemCancel
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemCancelMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.Cancel); 

		public PurchaseOrderItemCancel(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemCancelMethodInvocation;
			}
		}
	}public partial class SalesOrderItemCancel : OrderItemCancel
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemCancelMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.Cancel); 

		public SalesOrderItemCancel(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemCancelMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderItemReject : Allors.Meta.Method
	{
		protected OrderItemReject(OrderItem @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderItemReject : OrderItemReject
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemRejectMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.Reject); 

		public PurchaseOrderItemReject(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemRejectMethodInvocation;
			}
		}
	}public partial class SalesOrderItemReject : OrderItemReject
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemRejectMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.Reject); 

		public SalesOrderItemReject(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemRejectMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderItemConfirm : Allors.Meta.Method
	{
		protected OrderItemConfirm(OrderItem @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderItemConfirm : OrderItemConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemConfirmMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.Confirm); 

		public PurchaseOrderItemConfirm(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemConfirmMethodInvocation;
			}
		}
	}public partial class SalesOrderItemConfirm : OrderItemConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemConfirmMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.Confirm); 

		public SalesOrderItemConfirm(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemConfirmMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderItemApprove : Allors.Meta.Method
	{
		protected OrderItemApprove(OrderItem @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderItemApprove : OrderItemApprove
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemApproveMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.Approve); 

		public PurchaseOrderItemApprove(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemApproveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemApprove : OrderItemApprove
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemApproveMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.Approve); 

		public SalesOrderItemApprove(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemApproveMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderItemFinish : Allors.Meta.Method
	{
		protected OrderItemFinish(OrderItem @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderItemFinish : OrderItemFinish
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemFinishMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.Finish); 

		public PurchaseOrderItemFinish(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemFinishMethodInvocation;
			}
		}
	}public partial class SalesOrderItemFinish : OrderItemFinish
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemFinishMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.Finish); 

		public SalesOrderItemFinish(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemFinishMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class OrderItemDelete : Allors.Meta.Method
	{
		protected OrderItemDelete(OrderItem @object) : base(@object)
		{
		}
	}

	public partial class PurchaseOrderItemDelete : OrderItemDelete
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemDeleteMethodInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.Delete); 

		public PurchaseOrderItemDelete(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemDeleteMethodInvocation;
			}
		}
	}public partial class SalesOrderItemDelete : OrderItemDelete
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemDeleteMethodInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.Delete); 

		public SalesOrderItemDelete(OrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemDeleteMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class RequirementReopen : Allors.Meta.Method
	{
		protected RequirementReopen(Requirement @object) : base(@object)
		{
		}
	}

	public partial class CustomerRequirementReopen : RequirementReopen
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRequirementReopenMethodInvocation = new Allors.Meta.MethodInvocation(CustomerRequirement.Meta.ObjectType, CustomerRequirement.Meta.Reopen); 

		public CustomerRequirementReopen(Requirement @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRequirementReopenMethodInvocation;
			}
		}
	}public partial class InternalRequirementReopen : RequirementReopen
	{
	    private static readonly Allors.Meta.MethodInvocation InternalRequirementReopenMethodInvocation = new Allors.Meta.MethodInvocation(InternalRequirement.Meta.ObjectType, InternalRequirement.Meta.Reopen); 

		public InternalRequirementReopen(Requirement @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalRequirementReopenMethodInvocation;
			}
		}
	}public partial class ProductRequirementReopen : RequirementReopen
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRequirementReopenMethodInvocation = new Allors.Meta.MethodInvocation(ProductRequirement.Meta.ObjectType, ProductRequirement.Meta.Reopen); 

		public ProductRequirementReopen(Requirement @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRequirementReopenMethodInvocation;
			}
		}
	}public partial class ProjectRequirementReopen : RequirementReopen
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectRequirementReopenMethodInvocation = new Allors.Meta.MethodInvocation(ProjectRequirement.Meta.ObjectType, ProjectRequirement.Meta.Reopen); 

		public ProjectRequirementReopen(Requirement @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectRequirementReopenMethodInvocation;
			}
		}
	}public partial class ResourceRequirementReopen : RequirementReopen
	{
	    private static readonly Allors.Meta.MethodInvocation ResourceRequirementReopenMethodInvocation = new Allors.Meta.MethodInvocation(ResourceRequirement.Meta.ObjectType, ResourceRequirement.Meta.Reopen); 

		public ResourceRequirementReopen(Requirement @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResourceRequirementReopenMethodInvocation;
			}
		}
	}public partial class WorkRequirementReopen : RequirementReopen
	{
	    private static readonly Allors.Meta.MethodInvocation WorkRequirementReopenMethodInvocation = new Allors.Meta.MethodInvocation(WorkRequirement.Meta.ObjectType, WorkRequirement.Meta.Reopen); 

		public WorkRequirementReopen(Requirement @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkRequirementReopenMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class WorkEffortConfirm : Allors.Meta.Method
	{
		protected WorkEffortConfirm(WorkEffort @object) : base(@object)
		{
		}
	}

	public partial class ActivityConfirm : WorkEffortConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityConfirmMethodInvocation = new Allors.Meta.MethodInvocation(Activity.Meta.ObjectType, Activity.Meta.Confirm); 

		public ActivityConfirm(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityConfirmMethodInvocation;
			}
		}
	}public partial class MaintenanceConfirm : WorkEffortConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation MaintenanceConfirmMethodInvocation = new Allors.Meta.MethodInvocation(Maintenance.Meta.ObjectType, Maintenance.Meta.Confirm); 

		public MaintenanceConfirm(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaintenanceConfirmMethodInvocation;
			}
		}
	}public partial class PhaseConfirm : WorkEffortConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation PhaseConfirmMethodInvocation = new Allors.Meta.MethodInvocation(Phase.Meta.ObjectType, Phase.Meta.Confirm); 

		public PhaseConfirm(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhaseConfirmMethodInvocation;
			}
		}
	}public partial class ProductionRunConfirm : WorkEffortConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation ProductionRunConfirmMethodInvocation = new Allors.Meta.MethodInvocation(ProductionRun.Meta.ObjectType, ProductionRun.Meta.Confirm); 

		public ProductionRunConfirm(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductionRunConfirmMethodInvocation;
			}
		}
	}public partial class ProgramConfirm : WorkEffortConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation ProgramConfirmMethodInvocation = new Allors.Meta.MethodInvocation(Program.Meta.ObjectType, Program.Meta.Confirm); 

		public ProgramConfirm(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProgramConfirmMethodInvocation;
			}
		}
	}public partial class ProjectConfirm : WorkEffortConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectConfirmMethodInvocation = new Allors.Meta.MethodInvocation(Project.Meta.ObjectType, Project.Meta.Confirm); 

		public ProjectConfirm(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectConfirmMethodInvocation;
			}
		}
	}public partial class ResearchConfirm : WorkEffortConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation ResearchConfirmMethodInvocation = new Allors.Meta.MethodInvocation(Research.Meta.ObjectType, Research.Meta.Confirm); 

		public ResearchConfirm(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResearchConfirmMethodInvocation;
			}
		}
	}public partial class TaskConfirm : WorkEffortConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation TaskConfirmMethodInvocation = new Allors.Meta.MethodInvocation(Task.Meta.ObjectType, Task.Meta.Confirm); 

		public TaskConfirm(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskConfirmMethodInvocation;
			}
		}
	}public partial class WorkFlowConfirm : WorkEffortConfirm
	{
	    private static readonly Allors.Meta.MethodInvocation WorkFlowConfirmMethodInvocation = new Allors.Meta.MethodInvocation(WorkFlow.Meta.ObjectType, WorkFlow.Meta.Confirm); 

		public WorkFlowConfirm(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkFlowConfirmMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class WorkEffortFinish : Allors.Meta.Method
	{
		protected WorkEffortFinish(WorkEffort @object) : base(@object)
		{
		}
	}

	public partial class ActivityFinish : WorkEffortFinish
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityFinishMethodInvocation = new Allors.Meta.MethodInvocation(Activity.Meta.ObjectType, Activity.Meta.Finish); 

		public ActivityFinish(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityFinishMethodInvocation;
			}
		}
	}public partial class MaintenanceFinish : WorkEffortFinish
	{
	    private static readonly Allors.Meta.MethodInvocation MaintenanceFinishMethodInvocation = new Allors.Meta.MethodInvocation(Maintenance.Meta.ObjectType, Maintenance.Meta.Finish); 

		public MaintenanceFinish(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaintenanceFinishMethodInvocation;
			}
		}
	}public partial class PhaseFinish : WorkEffortFinish
	{
	    private static readonly Allors.Meta.MethodInvocation PhaseFinishMethodInvocation = new Allors.Meta.MethodInvocation(Phase.Meta.ObjectType, Phase.Meta.Finish); 

		public PhaseFinish(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhaseFinishMethodInvocation;
			}
		}
	}public partial class ProductionRunFinish : WorkEffortFinish
	{
	    private static readonly Allors.Meta.MethodInvocation ProductionRunFinishMethodInvocation = new Allors.Meta.MethodInvocation(ProductionRun.Meta.ObjectType, ProductionRun.Meta.Finish); 

		public ProductionRunFinish(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductionRunFinishMethodInvocation;
			}
		}
	}public partial class ProgramFinish : WorkEffortFinish
	{
	    private static readonly Allors.Meta.MethodInvocation ProgramFinishMethodInvocation = new Allors.Meta.MethodInvocation(Program.Meta.ObjectType, Program.Meta.Finish); 

		public ProgramFinish(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProgramFinishMethodInvocation;
			}
		}
	}public partial class ProjectFinish : WorkEffortFinish
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectFinishMethodInvocation = new Allors.Meta.MethodInvocation(Project.Meta.ObjectType, Project.Meta.Finish); 

		public ProjectFinish(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectFinishMethodInvocation;
			}
		}
	}public partial class ResearchFinish : WorkEffortFinish
	{
	    private static readonly Allors.Meta.MethodInvocation ResearchFinishMethodInvocation = new Allors.Meta.MethodInvocation(Research.Meta.ObjectType, Research.Meta.Finish); 

		public ResearchFinish(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResearchFinishMethodInvocation;
			}
		}
	}public partial class TaskFinish : WorkEffortFinish
	{
	    private static readonly Allors.Meta.MethodInvocation TaskFinishMethodInvocation = new Allors.Meta.MethodInvocation(Task.Meta.ObjectType, Task.Meta.Finish); 

		public TaskFinish(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskFinishMethodInvocation;
			}
		}
	}public partial class WorkFlowFinish : WorkEffortFinish
	{
	    private static readonly Allors.Meta.MethodInvocation WorkFlowFinishMethodInvocation = new Allors.Meta.MethodInvocation(WorkFlow.Meta.ObjectType, WorkFlow.Meta.Finish); 

		public WorkFlowFinish(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkFlowFinishMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class WorkEffortCancel : Allors.Meta.Method
	{
		protected WorkEffortCancel(WorkEffort @object) : base(@object)
		{
		}
	}

	public partial class ActivityCancel : WorkEffortCancel
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityCancelMethodInvocation = new Allors.Meta.MethodInvocation(Activity.Meta.ObjectType, Activity.Meta.Cancel); 

		public ActivityCancel(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityCancelMethodInvocation;
			}
		}
	}public partial class MaintenanceCancel : WorkEffortCancel
	{
	    private static readonly Allors.Meta.MethodInvocation MaintenanceCancelMethodInvocation = new Allors.Meta.MethodInvocation(Maintenance.Meta.ObjectType, Maintenance.Meta.Cancel); 

		public MaintenanceCancel(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaintenanceCancelMethodInvocation;
			}
		}
	}public partial class PhaseCancel : WorkEffortCancel
	{
	    private static readonly Allors.Meta.MethodInvocation PhaseCancelMethodInvocation = new Allors.Meta.MethodInvocation(Phase.Meta.ObjectType, Phase.Meta.Cancel); 

		public PhaseCancel(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhaseCancelMethodInvocation;
			}
		}
	}public partial class ProductionRunCancel : WorkEffortCancel
	{
	    private static readonly Allors.Meta.MethodInvocation ProductionRunCancelMethodInvocation = new Allors.Meta.MethodInvocation(ProductionRun.Meta.ObjectType, ProductionRun.Meta.Cancel); 

		public ProductionRunCancel(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductionRunCancelMethodInvocation;
			}
		}
	}public partial class ProgramCancel : WorkEffortCancel
	{
	    private static readonly Allors.Meta.MethodInvocation ProgramCancelMethodInvocation = new Allors.Meta.MethodInvocation(Program.Meta.ObjectType, Program.Meta.Cancel); 

		public ProgramCancel(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProgramCancelMethodInvocation;
			}
		}
	}public partial class ProjectCancel : WorkEffortCancel
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectCancelMethodInvocation = new Allors.Meta.MethodInvocation(Project.Meta.ObjectType, Project.Meta.Cancel); 

		public ProjectCancel(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectCancelMethodInvocation;
			}
		}
	}public partial class ResearchCancel : WorkEffortCancel
	{
	    private static readonly Allors.Meta.MethodInvocation ResearchCancelMethodInvocation = new Allors.Meta.MethodInvocation(Research.Meta.ObjectType, Research.Meta.Cancel); 

		public ResearchCancel(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResearchCancelMethodInvocation;
			}
		}
	}public partial class TaskCancel : WorkEffortCancel
	{
	    private static readonly Allors.Meta.MethodInvocation TaskCancelMethodInvocation = new Allors.Meta.MethodInvocation(Task.Meta.ObjectType, Task.Meta.Cancel); 

		public TaskCancel(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskCancelMethodInvocation;
			}
		}
	}public partial class WorkFlowCancel : WorkEffortCancel
	{
	    private static readonly Allors.Meta.MethodInvocation WorkFlowCancelMethodInvocation = new Allors.Meta.MethodInvocation(WorkFlow.Meta.ObjectType, WorkFlow.Meta.Cancel); 

		public WorkFlowCancel(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkFlowCancelMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class WorkEffortReopen : Allors.Meta.Method
	{
		protected WorkEffortReopen(WorkEffort @object) : base(@object)
		{
		}
	}

	public partial class ActivityReopen : WorkEffortReopen
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityReopenMethodInvocation = new Allors.Meta.MethodInvocation(Activity.Meta.ObjectType, Activity.Meta.Reopen); 

		public ActivityReopen(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityReopenMethodInvocation;
			}
		}
	}public partial class MaintenanceReopen : WorkEffortReopen
	{
	    private static readonly Allors.Meta.MethodInvocation MaintenanceReopenMethodInvocation = new Allors.Meta.MethodInvocation(Maintenance.Meta.ObjectType, Maintenance.Meta.Reopen); 

		public MaintenanceReopen(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaintenanceReopenMethodInvocation;
			}
		}
	}public partial class PhaseReopen : WorkEffortReopen
	{
	    private static readonly Allors.Meta.MethodInvocation PhaseReopenMethodInvocation = new Allors.Meta.MethodInvocation(Phase.Meta.ObjectType, Phase.Meta.Reopen); 

		public PhaseReopen(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhaseReopenMethodInvocation;
			}
		}
	}public partial class ProductionRunReopen : WorkEffortReopen
	{
	    private static readonly Allors.Meta.MethodInvocation ProductionRunReopenMethodInvocation = new Allors.Meta.MethodInvocation(ProductionRun.Meta.ObjectType, ProductionRun.Meta.Reopen); 

		public ProductionRunReopen(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductionRunReopenMethodInvocation;
			}
		}
	}public partial class ProgramReopen : WorkEffortReopen
	{
	    private static readonly Allors.Meta.MethodInvocation ProgramReopenMethodInvocation = new Allors.Meta.MethodInvocation(Program.Meta.ObjectType, Program.Meta.Reopen); 

		public ProgramReopen(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProgramReopenMethodInvocation;
			}
		}
	}public partial class ProjectReopen : WorkEffortReopen
	{
	    private static readonly Allors.Meta.MethodInvocation ProjectReopenMethodInvocation = new Allors.Meta.MethodInvocation(Project.Meta.ObjectType, Project.Meta.Reopen); 

		public ProjectReopen(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProjectReopenMethodInvocation;
			}
		}
	}public partial class ResearchReopen : WorkEffortReopen
	{
	    private static readonly Allors.Meta.MethodInvocation ResearchReopenMethodInvocation = new Allors.Meta.MethodInvocation(Research.Meta.ObjectType, Research.Meta.Reopen); 

		public ResearchReopen(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResearchReopenMethodInvocation;
			}
		}
	}public partial class TaskReopen : WorkEffortReopen
	{
	    private static readonly Allors.Meta.MethodInvocation TaskReopenMethodInvocation = new Allors.Meta.MethodInvocation(Task.Meta.ObjectType, Task.Meta.Reopen); 

		public TaskReopen(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskReopenMethodInvocation;
			}
		}
	}public partial class WorkFlowReopen : WorkEffortReopen
	{
	    private static readonly Allors.Meta.MethodInvocation WorkFlowReopenMethodInvocation = new Allors.Meta.MethodInvocation(WorkFlow.Meta.ObjectType, WorkFlow.Meta.Reopen); 

		public WorkFlowReopen(WorkEffort @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkFlowReopenMethodInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class CustomerShipmentHold : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentHoldInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.Hold); 

		public CustomerShipmentHold(CustomerShipment @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentHoldInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class CustomerShipmentPutOnHold : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentPutOnHoldInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.PutOnHold); 

		public CustomerShipmentPutOnHold(CustomerShipment @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentPutOnHoldInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class CustomerShipmentCancel : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentCancelInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.Cancel); 

		public CustomerShipmentCancel(CustomerShipment @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentCancelInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class CustomerShipmentContinue : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentContinueInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.Continue); 

		public CustomerShipmentContinue(CustomerShipment @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentContinueInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class CustomerShipmentShip : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentShipInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.Ship); 

		public CustomerShipmentShip(CustomerShipment @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentShipInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class CustomerShipmentProcessOnContinue : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentProcessOnContinueInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.ProcessOnContinue); 

		public CustomerShipmentProcessOnContinue(CustomerShipment @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentProcessOnContinueInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class CustomerShipmentSetPicked : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentSetPickedInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.SetPicked); 

		public CustomerShipmentSetPicked(CustomerShipment @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentSetPickedInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class CustomerShipmentSetPacked : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentSetPackedInvocation = new Allors.Meta.MethodInvocation(CustomerShipment.Meta.ObjectType, CustomerShipment.Meta.SetPacked); 

		public CustomerShipmentSetPacked(CustomerShipment @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentSetPackedInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PickListHold : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation PickListHoldInvocation = new Allors.Meta.MethodInvocation(PickList.Meta.ObjectType, PickList.Meta.Hold); 

		public PickListHold(PickList @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListHoldInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PickListContinue : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation PickListContinueInvocation = new Allors.Meta.MethodInvocation(PickList.Meta.ObjectType, PickList.Meta.Continue); 

		public PickListContinue(PickList @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListContinueInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PickListCancel : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation PickListCancelInvocation = new Allors.Meta.MethodInvocation(PickList.Meta.ObjectType, PickList.Meta.Cancel); 

		public PickListCancel(PickList @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListCancelInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PickListSetPicked : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation PickListSetPickedInvocation = new Allors.Meta.MethodInvocation(PickList.Meta.ObjectType, PickList.Meta.SetPicked); 

		public PickListSetPicked(PickList @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListSetPickedInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PurchaseInvoiceReady : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceReadyInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoice.Meta.ObjectType, PurchaseInvoice.Meta.Ready); 

		public PurchaseInvoiceReady(PurchaseInvoice @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceReadyInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PurchaseInvoiceApprove : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceApproveInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoice.Meta.ObjectType, PurchaseInvoice.Meta.Approve); 

		public PurchaseInvoiceApprove(PurchaseInvoice @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceApproveInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PurchaseInvoiceCancel : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceCancelInvocation = new Allors.Meta.MethodInvocation(PurchaseInvoice.Meta.ObjectType, PurchaseInvoice.Meta.Cancel); 

		public PurchaseInvoiceCancel(PurchaseInvoice @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceCancelInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PurchaseOrderItemComplete : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemCompleteInvocation = new Allors.Meta.MethodInvocation(PurchaseOrderItem.Meta.ObjectType, PurchaseOrderItem.Meta.Complete); 

		public PurchaseOrderItemComplete(PurchaseOrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemCompleteInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class SalesInvoiceSend : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceSendInvocation = new Allors.Meta.MethodInvocation(SalesInvoice.Meta.ObjectType, SalesInvoice.Meta.Send); 

		public SalesInvoiceSend(SalesInvoice @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceSendInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class SalesInvoiceCancelInvoice : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceCancelInvoiceInvocation = new Allors.Meta.MethodInvocation(SalesInvoice.Meta.ObjectType, SalesInvoice.Meta.CancelInvoice); 

		public SalesInvoiceCancelInvoice(SalesInvoice @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceCancelInvoiceInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class SalesInvoiceWriteOff : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceWriteOffInvocation = new Allors.Meta.MethodInvocation(SalesInvoice.Meta.ObjectType, SalesInvoice.Meta.WriteOff); 

		public SalesInvoiceWriteOff(SalesInvoice @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceWriteOffInvocation;
			}
		}
	}
}// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class SalesOrderItemContinue : Allors.Meta.Method
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemContinueInvocation = new Allors.Meta.MethodInvocation(SalesOrderItem.Meta.ObjectType, SalesOrderItem.Meta.Continue); 

		public SalesOrderItemContinue(SalesOrderItem @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemContinueInvocation;
			}
		}
	}
}